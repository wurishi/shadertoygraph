{"ver":"0.1","info":{"id":"clycW1","date":"1700149966","viewed":32,"name":"sdf_box_prac","username":"hir0","description":"wanted to try the sdf box","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\n    precision mediump float;\n#endif\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec3 palette( float t ) {\n\n    //[[0.500 0.500 0.500] [0.528 0.248 0.500] [1.000 0.168 1.000] [0.000 0.333 0.667]]\n\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.528, 0.248, 0.5);\n    vec3 c = vec3(1.0, 0.168, 1.0);\n    vec3 d = vec3(0.0, 0.333, 0.667);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec2 uv0 = uv;\n\n    vec3 col = vec3(0.0);\n\n    for(float i = 0.0; i < 0.4; i++) {\n\n        uv0 = fract(uv0 * 1.0) - 0.5;\n\n        float absT = abs(iTime);\n        \n        float absT0 = 1.6*smoothstep(-1. ,.8,sin(absT + i));\n\n        float d = length(sdBox(uv0, vec2( 0.2, 0.2)) + i + absT0) / 4. - cos(absT * 0.2) * exp(-length(uv));\n\n        vec3 color = palette(length(uv) + iTime);\n        \n        d = sin(d*8. / 0.2) / 12.0;\n        d = abs(d);\n        d = smoothstep(0.0, 0.3, d);\n        \n        d = sqrt(pow(0.1 / d, 1.8));\n\n        col += color * d;\n    }\n\n    col /= vec3(abs(sin(iTime)));\n    \n    uv = fract(uv0 * 2.);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}