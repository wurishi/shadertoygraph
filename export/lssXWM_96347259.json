{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n\nfloat PI = 3.141592653589793238462643383279502884197169399375105820974944592;\n\n#define AA_SAMPS 32.0\t\nfloat srand(vec2 a) { return fract(sin(dot(a,vec2(1233.224,1743.335)))); }\nvec2 rand(vec2 r) { return fract(3712.65*r+0.61432); }\n\nfloat cyclic(float target, float source)\n{\n\tfloat a = mod(abs(target - source), PI * 2.0);\n\tif (a > PI) a -= PI * 2.0;\n\treturn a;\n}\n\nvec4 colorAtCoord(vec2 uv, float t)\n{\n\t\n\tt = mod(t , 1.0);\n\tfloat sT = .5 + .5 * sin(-PI/2.0 + PI * 2.0 * t);\n\tsT = pow(sT, 3.0);\n\tfloat matrixSize = 0.01 + sT * .03;\n\t\n\t// also try this for more control + self guided exploration!\n\t//matrixSize = .1 - .1 * iMouse.x / iResolution.x;\n\t\n\tfloat matrixCountX, matrixCountY;\n\tfloat dominantAspect = 0.0;\n\tif (iResolution.x > iResolution.y)\n\t{\n\t\tdominantAspect = iResolution.x;\n\t\tmatrixCountX = 1.0 / matrixSize;\n\t\tmatrixCountY = matrixCountX * iResolution.y / iResolution.x;\n\t}\n\telse\n\t{\n\t\tdominantAspect = iResolution.y;\n\t\t\n\t\tmatrixCountX = 1.0 / ( (iResolution.y / iResolution.x) / matrixSize);\n\t\tmatrixCountY = 1.0 / matrixSize;\n\t}\n\tvec2 p = uv / iResolution.xy;\n\t\n\tvec3 col = vec3(0.0, 0.0, 0.2);\n\t\n\n\tfloat i = floor((-.5 + p.x) * matrixCountX) + matrixCountX / 2.0;\n\tfloat j = floor((-.5 + p.y) * matrixCountY) + matrixCountY / 2.0;\n\n\tvec2 centerOfSquare = vec2((i+0.5) / matrixCountX, \n\t\t\t\t\t\t\t   (j+0.5) / matrixCountY);\n\tfloat ring = 1.0;\n\tring += floor( matrixCountX * .5 * \n\t\tdistance(centerOfSquare , \n\t\t\t\t vec2(.5,.5)));\n\tvec2 delta = centerOfSquare - p;\n\tfloat rectDist = max( abs(delta.x), abs(delta.y * iResolution.y / iResolution.x) );\n\tfloat angle = atan(delta.y, delta.x) + PI * 2.0;\n\tfloat tAngle = atan(centerOfSquare.y - .5, centerOfSquare.x - .5) + \n\t\tPI * (2.0 * .2 * iTime * ring*.5) + pow(ring, .5) * PI;\n\t//if (angle < 0.0) \n\t\t//tAngle += -angle;\n\tfloat deltaAngle = abs( cyclic(angle, tAngle));\n\t\n\tfloat screenDist = length(p - vec2(.5,.5));\n\tcol = vec3(0.0);//pow(ring / matrixCountX * 2.0,2.0));\n\tif (deltaAngle > PI/2.0) col = vec3(1.0);\n\treturn vec4( col,  1.0 );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime * .05;\n\tfloat c=0.;\n\tvec2 aa=vec2( srand(fragCoord.xy), srand(fragCoord.yx) );\n\tt+=1.0/60.0/AA_SAMPS*aa.x*.05;\t\n\tfor (int i=0;i<int(AA_SAMPS);++i) {\n\t\taa=rand(aa);\n\t\tc+=colorAtCoord(fragCoord.xy+aa, t).x;\n\t\tt+=1.0/60.0/AA_SAMPS*.05;\n\t}\t\n\tc=sqrt(c/AA_SAMPS);\n\tfragColor = vec4(1.0) - vec4(1.0, .85, 0.2, 1.0) *c;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lssXWM","date":"1402618877","viewed":359,"name":"spinboos // (big blue)","username":"bigblueboo","description":"First shader on shadertoy!  See it hosted at http://bigblueboo.com/glsl/spinboos.html","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","zoom","matrix","mosaic","cycles","spinboxes","geometric","bigblueboo"],"hasliked":0,"parentid":"","parentname":""}}