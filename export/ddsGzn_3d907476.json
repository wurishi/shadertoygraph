{"ver":"0.1","info":{"id":"ddsGzn","date":"1665585132","viewed":51,"name":"edoandcode_02","username":"edoandcode","description":"A mirrored blob shape","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float blob(vec2 pt, vec2 center, float radius){\n    pt = pt - center;\n    // a . b = |a||b|cos(Î¸)\n    vec2 b  = vec2(0.0, 1.0);\n    float dot = dot(pt, b);\n    float a = acos(dot/(length(b)*length(pt)));\n    float dist = length(pt)  ;\n    return step(radius - sin(a * 30.0+ iTime * 2.0) * radius * 0.1, dist);\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.y/iResolution.x;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float c = blob(uv * vec2(1.0, aspect), vec2(0.5) * vec2(1.0, aspect), 0.2 );\n\n    // Output to screen\n    fragColor = vec4(col * c,1.0);\n}","name":"Image","description":"","type":"image"}]}