{"ver":"0.1","info":{"id":"cslczN","date":"1686629899","viewed":31,"name":"3dCube","username":"wofflle","description":"Reference:\n\"How to create a camera in ShaderToy\" by The Art of Code\nhttps://www.youtube.com/watch?v=PBxuVlp7nuM","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["cube","camera","artofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf(vec3 p, vec3 centre, float radius) {\n    return length(centre - p) - radius;\n}\n\nfloat distToLine(vec3 ro, vec3 rd, vec3 p) {\n    return length(cross(p - ro, rd)) / length (rd);\n}\n\nfloat drawPoint(vec3 ro, vec3 rd, vec3 p) {\n    float d = distToLine(ro, rd, p);\n    d = smoothstep(.08, .01, d);\n    return d;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    float t = iTime;\n    \n    \n    vec3 ro = vec3(3.0 * sin(t) , 3.0, -3.0 * cos(t));\n    // vec3 ro = vec3(3.0, 0., 0.);\n    \n    vec3 lookAt = vec3(.0);\n    \n    float zoom = 2.0;\n    \n    vec3 up = vec3(0., 1., 0.);\n    vec3 right = vec3(1., 0., 0.);\n    \n    vec3 f = normalize(lookAt - ro);\n    vec3 r = normalize(cross(up , f));\n    vec3 u = normalize(cross(f, r));\n    \n    vec3 c = ro + f * zoom;\n    \n    vec3 i = c + uv.x * r + uv.y * u;\n    \n    vec3 rd = i - ro;\n    \n    \n    float d = 0.;\n    \n    // 3d origin\n    d += drawPoint(ro, rd, vec3(0., 0., 0.));\n    \n    d += drawPoint(ro, rd, vec3(0., 0., 0.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(0., 0., 1.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(0., 1., 0.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(0., 1., 1.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(1., 0., 0.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(1., 0., 1.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(1., 1., 0.) - vec3(0.5));\n    d += drawPoint(ro, rd, vec3(1., 1., 1.) - vec3(0.5));\n    \n   \n  \n\n\n    // Output to screen\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}