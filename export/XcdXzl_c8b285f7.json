{"ver":"0.1","info":{"id":"XcdXzl","date":"1714324873","viewed":40,"name":"more convolutions","username":"jonasfrey","description":"some blur convolutions","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["convolutions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec4 f_o_convolved(\n    vec2 o_trn_nor, \n    vec2 o_scl_canvas,\n    vec2 o_scl_krnl\n){\n\n    vec2 o_scl_krnl_half = floor(o_scl_krnl/2.);\n    float n_max_krnl = o_scl_krnl.x*o_scl_krnl.y;\n    vec4 o_col_sum = vec4(0.);\n    \n    for(float n_x = 0.; n_x < o_scl_krnl.x; n_x+=1.){\n        for(float n_y = 0.; n_y < o_scl_krnl.y; n_y+=1.){\n            vec2 o_trn_krnl = vec2(n_x, n_y);\n            vec2 o_trn_krnl2 = o_trn_krnl-o_scl_krnl_half;\n            float n_idx_a_n_krnl = n_y*o_scl_krnl.x + n_x;\n            vec4 o_factor = texture(iChannel0, o_trn_krnl/o_scl_krnl);\n            float n_factor = o_factor.x/n_max_krnl;\n\n            vec2 o_trn_krnl2_nor = o_trn_krnl2 / o_scl_canvas;\n            vec4 o_col_tmp =\n                texture(\n                    iChannel1,\n                    o_trn_nor+o_trn_krnl2_nor\n                )*n_factor;\n\n            o_col_sum+= o_col_tmp;\n        }\n    }\n    vec4 o_col_res = o_col_sum;\n    return (o_col_res);\n\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 o_scl_krnl = vec2(24.);\n    vec2 o_trn_nor3 = fract(uv*vec2(2.,2.));\n    \n    vec4 o_col = texture(iChannel0, (floor(o_trn_nor3*o_scl_krnl))/o_scl_krnl);\n    vec4 o_col_img = texture(iChannel1, o_trn_nor3);\n    \n    if(uv.x > 0.5){\n        fragColor = f_o_convolved(\n            o_trn_nor3, \n            (iResolution.xy)/2.,\n            o_scl_krnl\n        );\n        //fragColor = sqrt(fragColor); \n        //fragColor = o_col_img;\n    }else{\n        fragColor = o_col;\n    }\n    //fragColor = vec4(length(o_trn_nor2));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 o_trn_nor = ((fragCoord.xy-iResolution.xy*.5)/iResolution.yy);\n    \n    float[] a_n = float[](\n        // fuzzy blur\n        length(o_trn_nor),\n        // box blur\n        max(abs(o_trn_nor.x), abs(o_trn_nor.y)),\n        \n        // title here\n        1.-(o_trn_nor.x*o_trn_nor.y),\n        \n        // sine blur\n        sin(length(o_trn_nor)*20.)*.5+.5, \n        \n        //left minus right plus\n        o_trn_nor.x+.5,\n        \n                \n        //ring\n        pow(1.-abs(length(o_trn_nor)-.4),10.)\n\n    );\n    float n_len = float(a_n.length());\n    float n = a_n[int(mod(iTime*.8,n_len))];\n    n = clamp(n, 0., 1.);\n    fragColor = vec4(n);\n}","name":"Buffer A","description":"","type":"buffer"}]}