{"ver":"0.1","info":{"id":"ws3GDs","date":"1569479714","viewed":461,"name":"Star Vortex  ","username":"shackle","description":"Vortex","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col =texture(iChannel0,uv).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.141592654\n\nconst vec3 origin=vec3(0.0,0.0,-1.0);\nconst float radius=10.0;\nconst float maxDepth=60.0;\nvec3 rotz(vec3 ro,float angle)\n{\n    vec3 o;\n    o.x=ro.x*cos(angle)-ro.y*sin(angle);\n    o.y=ro.y*cos(angle)+ro.x*sin(angle);\n    o.z=ro.z;\n    return o;\n}\nfloat sdf(vec3 pos,float fre,float bias)\n{\n    float theta=sign(pos.x)*PI*0.5+atan(pos.y/pos.x);\n    float t=cos(theta*fre+pos.z*10.5+bias);\n    t=(t+1.0)*0.5;\n    return radius-length(pos.xy)-t*1.1;\n}\n\nvec2 map(in vec3 ro,in float rd, in float ds)\n{\n    vec3 pos=origin+ro*rd;\n    float a=exp(-ds);\n    float c=sin(ds*2.0*PI);\n    c=clamp(-0.1,1.0,c);\n    return vec2(c,a);\n}\nvec4 draw(vec3 ro)\n{\n    vec3 baseColor=vec3(1.0,0.4,0.0);\n    vec3 fogColor=vec3(0.0,1.0,1.0);\n    float rd=0.0;\n    vec2 f=vec2(0.0);\n    float tp=0.1;\n    float fre=1.0;\n    for(int i=0;i<10;i++)\n    {\n        ro=rotz(ro,float(i)+tp*iTime);\n        tp*=-0.5;\n        vec3 pos=origin+ro*rd;\n        float ds=0.0;\n        ds+=sdf(pos,8.0*fre+sin(float(i)*PI),0.1);\n        fre*=2.0;\n        if(ds<0.1||f.y>1.0){\n            break;\n        }\n        vec2 rez=map(ro,rd,ds);\n        f.x+= rez.x*(1.0-f.y);\n        f.y+=rez.y;\n        rd+=ds*1.0;\n    }\n    float p=smoothstep(0.0,maxDepth,rd);\n    return vec4(mix(f.x*baseColor,fogColor,p),1.0);\n\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\n    vec2 uv = fragCoord / iResolution.xy;\n    float f = iResolution.x / iResolution.y;\n    vec2 coord = uv * 2.0 - vec2(1.0);\n    coord.x *= f;\n    // ray orientation\n    vec3 ro=normalize(vec3(coord,1.0));\n    \n\n    fragColor=draw(ro)*0.1+0.9*vec4(texture(iChannel0,uv).xyz,1.0);\n\n}\n\n","name":"Buf A","description":"","type":"buffer"}]}