{"ver":"0.1","info":{"id":"WddfWn","date":"1604857752","viewed":143,"name":"Voronoi Animation","username":"IWBTShyGuy","description":"Realtime voronoi diagram animation","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int M = 5;\nconst int N = 6;\n\nconst float WPOINT_RADIUS = 0.015;\n\nconst vec2 gen = vec2(114.514, 1919.810);\nfloat rand(vec2 c) {\n    return fract(gen.x * sin(c.x * gen.y + c.y));\n}\n\nvec3 get_color(vec2 uv) {\n    return 0.5 + 0.5 * cos(uv.xyx + iTime + vec3(0.3, 1.7, 3.8));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int max_idx = iResolution.x > iResolution.y ? 0 : 1;\n    int min_idx = 1 - max_idx;\n    vec2 aspect_vec = vec2(1.0);\n    aspect_vec[max_idx] = iResolution[max_idx] / iResolution[min_idx];\n    vec2 uv = fragCoord / iResolution[min_idx];\n\n    float min_dist = 10.0;\n    vec2 res;\n    for (int i = 0; i < M; i++) {\n        for (int j = 0; j < N; j++) {\n            vec2 lat = vec2(\n                float(i + 1) / float(M + 1),\n                float(j + 1) / float(N + 1)\n            );\n            vec2 velo = vec2(rand(lat), rand(lat.yx)) - 0.2;\n            vec2 point = fract(iTime * velo * 0.5 / aspect_vec) * aspect_vec;\n            float dist = distance(uv, point);\n            if (dist < WPOINT_RADIUS && cos(iTime / 3.0) > 0.0) {\n                fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n                return;\n            }\n            if (min_dist > dist) {\n                min_dist = dist;\n                res = lat;\n            }\n        }\n    }\n    \n    fragColor = vec4(get_color(res), 1.0);\n}","name":"Image","description":"","type":"image"}]}