{"ver":"0.1","info":{"id":"ttKcDc","date":"1611923271","viewed":173,"name":"Elevation map","username":"mariandev","description":"Elevation map from height map","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["map","elevation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 10.\n#define LINE_WIDTH 1.\n#define SCALE 1.5\n\nfloat sampleHeightMap(vec2 uv) {\n    return texture(iChannel0, uv / SCALE).r;\n}\n\nfloat toonShading(vec2 p) {\n    float l = sampleHeightMap(p);\n    float v = 1.;\n    for(float i=0.;i<STEPS;i+=1.) {\n        float s = i / STEPS;\n        if(l < s) {\n            v = s;\n            break;\n        }\n    }\n    return v;\n}\n\nfloat toElevationLines(vec2 p, float px) {\n    float base = toonShading(p);\n    float offs = px / iResolution.y;\n    vec2 ho = vec2(offs, 0.);\n    vec2 vo = vec2(0., offs);\n    float s45 = 0.707;\n    float cl = base - toonShading(p - ho);\n    float cr = base - toonShading(p + ho);\n    float ct = base - toonShading(p + vo);\n    float cb = base - toonShading(p - vo);\n    float tl = base - toonShading(p + (- ho + vo) * s45);\n    float tr = base - toonShading(p + (  ho + vo) * s45);\n    float br = base - toonShading(p + (  ho - vo) * s45);\n    float bl = base - toonShading(p + (- ho - vo) * s45); \n    \n    float v = cl + cr + ct + cb + tl + tr + br + bl;\n    v = v > offs ? 1. : 0.;\n    v *= base;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy);\n    uv -= .5;\n    uv.y *= iResolution.y/iResolution.x;\n    \n    uv.x += iTime * 0.05;\n    uv.y += sin(iTime * 0.25) / 10.;\n\n    float v = toElevationLines(uv, LINE_WIDTH);\n    vec3 col = vec3(v);\n    float h = texture(iChannel0, uv / SCALE).r;\n    col += vec3(h*h/2.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}