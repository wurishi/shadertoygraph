{"ver":"0.1","info":{"id":"ttsczl","date":"1655597587","viewed":207,"name":"Octagon Fractal","username":"NicRule","description":"Octagon Fractal","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["octagonfractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //\t\tscale coordinates to be square\n    vec2 uv = ( fragCoord* 2. - iResolution.xy) / min(iResolution.x, iResolution.y)*8.;\n    \n    vec3 col = vec3(0.);\n    float ww = 0.;\n    vec2 m;\n    vec2 d;\n    vec2 cell;\n    \n    for(int i=2; i<8; i++){\n        m = fract(uv*5.+0.5);\n        d = fract(uv*5.);\n        cell = floor(abs(uv*5.)+float(i)*5372.);\n        \n    //    m = fract(uv*5.);\n    //    d = fract(uv*5.+0.5);\n     //   cell = floor(abs(uv*5.+0.5)+float(i)*5372.);// + iTime/10.);\n        \n    //    ww *= 0.5;\n    //    ww += 0.5*\n        ww = \n        //    clamp(\n               length(\n                    max(1.0-abs(m-.5)*10000.+400.,0.) +\n                    max(abs(d.x+vec2(d.y-1.,-d.y))*10000.-6500.,0.)\n                )\n        //    , 0. , 1.)\n        ;\n     //   col *= 0.5;\n        col += vec3(abs(sin(cell.x*cell.y*1.273) + fract(tan(cell.x+cell.y+d.x*27.428+m.y*30.82 + iTime))) , \n                    abs(cos((cell.x+cell.y*523.246)*39.3741)) , 0.5f) * clamp(1.0-ww , 0.0 , 1.0)*0.25;\n     //   col += vec3(clamp(1.0-ww , 0.0 , 1.0)*0.2 * vec3(i%2,i%3,i%4));\n        //       length(\n         //           min(abs(m-.5)*10000.-2000.,0.) + \n          //          min(abs(-d.x-vec2(d.y-1.,-d.y))*10000. - 2000. , 0.)\n           //     );\n        \n        uv /= 2.0;\n    }\n    \n//    col = vec3(ww);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}