{"ver":"0.1","info":{"id":"7llcz8","date":"1647524641","viewed":67,"name":"Sin Blur","username":"Kattaras","description":"sin blur","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\nfloat Band(float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1 * step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1 * band2;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n    uv -= p; // translating coordinate system\n    uv /= size; // scaling coordinate system\n    \n    float mask = Circle(uv, vec2(0.), .4, .05);\n    mask -= Circle(uv, vec2(-.13, .2), .07, .01);\n    mask -= Circle(uv, vec2(.13, .2), .07, .01);\n    \n    float mouth = Circle(uv, vec2(0.), .3, .02);\n    mouth -= Circle(uv, vec2(0., 0.1), .3, .02);\n    \n    mask -= mouth;\n    \n    return mask;\n}\n\nfloat remap01(float a, float b, float t) {\n    return (t - a) / (b - a);\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return remap01(a, b, t) * (d-c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime;\n    \n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    float mask = 0.;\n    //mask += Smiley(uv, vec2(0., 0.), .5);\n    \n    float x = uv.x;\n    \n    float m = sin(t+x*8.)*.2;\n    float y = uv.y-m;\n    float blur = remap(-1., 1., .05, .5, -x);\n    blur = pow(blur*1.8, 3.);\n    \n    mask += Rect(vec2(x, y), -1., 1., -.1, .1, blur);\n    \n    col = vec3(1., 1., 1.) * mask;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}