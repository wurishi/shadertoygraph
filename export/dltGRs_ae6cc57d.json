{"ver":"0.1","info":{"id":"dltGRs","date":"1682960738","viewed":300,"name":"Seawall","username":"LJ","description":"Quick shader doodle I did a while back and recently released at Sessions-Demoparty(https://sessions.frontl1ne.net/) in Japan.\nSorry to everyone who wants to actually read the code, it's dirty, unoptimized stream of consciousness doodling code ^^\"","likes":36,"published":1,"flags":96,"usePreview":1,"tags":["doodle","bladerunner","sessionsdemoparty"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xst3R8","filepath":"https://soundcloud.com/mrworm-1/blade-runner-blues-rain-1-hour","previewfilepath":"https://soundcloud.com/mrworm-1/blade-runner-blues-rain-1-hour","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec3 p){return fract(sin(dot(vec3(15.41231,39.6134,42.6543),p))*42157.76543);}\nconst vec2 O=vec2(0,1);\nfloat noise(vec3 p){vec3 b=floor(p),f=fract(p);\n                    return mix(\n                            mix(mix(rand(b+O.xxx),rand(b+O.yxx),f.x),mix(rand(b+O.xyx),rand(b+O.yyx),f.x),f.y),\n                            mix(mix(rand(b+O.xxy),rand(b+O.yxy),f.x),mix(rand(b+O.xyy),rand(b+O.yyy),f.x),f.y),\n                            f.z);}\nvec3 MP;\nfloat WATER,SKY,WALL,LPDIST;\nmat2 r2d(float a){float sa=sin(a),ca=cos(a);return mat2(ca,sa,-sa,ca);}\nfloat gn(vec3 p){float n=0.,fi;for(int i=1;i<4;i++)fi=float(i*i),n+=noise(p*fi)/fi;return n;}\nfloat bmin(float a,float b,float k){return min(min(a,b),max(a,b)-k);}\nfloat wn(vec3 p,float f) {\n        float opn=noise(p+noise(-p+1e3+iTime));\n        return (noise(p*.2+opn)*5.+noise(p*5.+noise(p*10.+iTime))*noise(p+opn)*.5+sin(p.x*.4+iTime+cos(iTime*3.-p.z*.35))*3.5*f)*.2;\n}\nfloat map(vec3 p){\n        SKY=-length(p)+100.;\n        vec3 q=p;q.x+=q.z*q.z*.015-q.y*.15;\n        WALL=max(-length(max(q.xy*vec2(1,-1)-vec2(1,-.55-q.x*.1),0.))+.5,p.y-3.)*.9;\n        WALL+=max(abs(mod(q.z,1.)-.5),.49)*.2;\n        if(WALL<.01)q.xz*=r2d(.8),WALL+=max(gn(q*20.)-.9,0.)*.00,WALL+=gn(q*5.)*.001;\n        q.z=mod(q.z-2.,14.)-7.;\n              vec3 x=abs(q+vec3(-2.,0,0.))-vec3(1.+max(-q.y+2.,0.)*.2,4.5,.25);\n        WALL=max(min(bmin(WALL,max(max(x.x,x.y),x.z),.3),max(max(x.x,x.z)-.2,q.y-1.)),-max(abs(p.z+4.6)-.04,max(abs(mod(q.y,.05)-.025)-.01,-q.y+1.)))+max(.05-abs(p.y-2.9)*.3,0.);\n        vec3 o=q;\n        q.z=abs(q.z)-.25;\n        LPDIST=min(length(q-vec3(1,4.5,0)),length(o-vec3(2.6,6,.4)))-.03;\n        q=o;\n        q.y=abs(q.y-2.5)-.3;\n        WALL=bmin(bmin(max(WALL,-length(q.yz)+.2),max(length(q.xz-vec2(2.5,.5))-.02,q.y-3.),.2),max(abs(length(q.yz)-.2)-.01,-q.x+.8),.01);\n        WATER=p.y;\n        if(WATER<.05)WATER+=wn(p*10.,smoothstep(0.,-1.,p.x))*.03;\n        return min(min(WATER,SKY),min(WALL,LPDIST));\n}\nconst vec2 N=vec2(.001,0);\n\nstruct {\n        vec3 albedo,speccol;\n        float rough,fres,ambi;\n} mat;\n\nvec3 sky(vec3 n){return mix(vec3(.05,.02,.01),vec3(.7,.8,.9),sqrt(max(-n.y,0.)));}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\nfloat time = iTime;\n        vec2 uv=( fragCoord / iResolution.xy ),p=uv*2.-1.;\n        p.x*=iResolution.x/iResolution.y;\n        if(abs(p.y)>.7){fragColor=vec4(0);return;}\n        float t=mod(time*.1,3.);\n        vec3 ro=vec3(-.5,.5+sin(time)*.05,cos(time*.37+4.)*.1),rd=normalize(vec3(p,-1.1));\n        \n        if(t<1.)\n        ro*=0.,rd=normalize(vec3(p,-3.+t*.2)),rd.yz*=r2d(-.5-t*.1),rd.xz*=r2d(-1.2);\n        else if(t<2.)\n        ro.x=-1.,rd=normalize(vec3(p,-5.+t*.2)),rd.xz*=r2d(-.15+t*.2),rd.yz*=r2d(-.15);\n        else\n        ro.z-=t*2.-2.,ro.x-=t-2.,rd.yz*=r2d(-.2),rd.xz*=r2d(-.4);\n        float md;MP=ro;\n        for(int i=0;i<200;i++)if(MP+=rd*(md=map(MP)*.9),md<.0001)break;\n        vec3 n=normalize(map(MP)-vec3(map(MP-N.xyy),map(MP-N.yxy),map(MP-N.yyx))),l=normalize(vec3(-1.5,.8,-.3)),v=normalize(ro-MP);\n        if(WATER<.001) {\n                mat.albedo=vec3(noise(MP*100.)*.1+noise(MP*300.)*.2)*.2+pow(smoothstep(2.,0.,WALL),50.)*gn(MP*20.+noise(MP*30.)*3.)*.4;\n                mat.speccol=vec3(.5,.5,.55);\n                mat.rough=700.;\n                mat.fres=.6;\n                mat.ambi=1.;\n        }else if(WALL<.001) {\n                mat.albedo=max(pow(1.\n                            -max(.1-abs(mod(MP.y,.5)-.25)-gn(MP*100.)*.05,0.)*5.\n                            -max(.1-abs(mod(MP.z,.9)-.45)-gn(MP*100.)*.05,0.)*5.\n                ,.3)-noise(MP*3.)*.3*max(gn(MP*10.+gn(MP*7.)*3.)-.5,0.),float(abs(mod(MP.z-2.,14.)-7.)<.5))*(.5+.5*gn(MP+gn(MP*10.)*.3)-max(gn(MP*vec3(30,0,30)+gn(MP*5.)*10.)-.8,0.)*.3)*mix(vec3(.7,.65,.6),mix(vec3(.8),vec3(.8,.75,.73),smoothstep(.6,.7-noise(MP*50.)*.1,gn(MP*2.+noise(MP*40.)*.1))),smoothstep(.5,.6,gn(MP*.5+noise(MP*vec3(40))*.1)))*.1;\n                mat.albedo*=.3+max(smoothstep(.0,.5-gn(MP*100.)*.4,MP.y),n.y);\n                mat.albedo-=.5*vec3(.3+gn(MP*500.)*.3,.6,1)*(max(gn(MP*vec3(5,.1,5)+gn(MP*20.)*.1)-.9+MP.y*.1,0.)*smoothstep(0.,5.,MP.y))+max(gn(MP*10.)-1.05,0.)*.1;\n                mat.speccol=vec3(.06+mat.albedo.r*mat.albedo.r*5.);\n                mat.rough=3.*pow(smoothstep(0.,.1,WATER),.5+2.*max(gn(MP*vec3(1,1,30.)+noise(MP*100.)*.5)-.7,0.));\n                mat.fres=3.;\n                mat.ambi=0.;\n        }else if(LPDIST<.001){\n                mat.speccol=mat.albedo=vec3(1,.3,0)*abs(sin(time))*3.;\n                mat.rough=mat.fres=mat.ambi=1.;\n                            }\n        vec3 nrefcol=sky(-n),vnrefcol=sky(reflect(v,n));\n        \n        if(SKY<.001)\n                fragColor = vec4( sky(n)*pow(vec3(.8+uv.y*uv.y*uv.y),vec3(3.)), 1.0 );\n        else\n                fragColor = max(vec4(\n                        mat.albedo*(map(MP+n*.1)*mat.ambi+\n                        (max(dot(n,l),0.)+pow(gn(reflect(rd,n)),3.)*gn(MP*vec3(1,.5,1))*(1.-mat.ambi)))+\n                        (1.-mat.ambi)*pow(gn(reflect(rd,n)*5.),5.)*.1*smoothstep(0.1,.12,max(gn(MP*vec3(1,2,20))-.8,0.))*n.y+\n                        (pow(max(dot(n,normalize(l+v)),0.),mat.rough)*2.+mat.fres*pow(1.-abs(dot(n,rd)),4.))*mat.speccol\n                        ,1.0\n                ),0.);\n        \n        vec3 lcol=vec3(1,.4,0);float lmod=abs(sin(time));\n        fragColor.rgb+=max(1.-LPDIST*2.,0.)*lmod*lcol*max(dot(n,l),0.);\n        \n        fragColor=mix(fragColor,.75*mix(vec4(1,.75,.5,1),vec4(.65,.75,.78,1),.7-uv.x*.3)*(.9-gn(rd*3.+time*.2)*.2),min(max(length(ro-MP)*.08-.4,0.),.9));//+vec4(n,1);\n        fragColor*=vec4(.7,.766,.84,1);\n        fragColor=pow(max(fragColor,.14),vec4(1.5))*1.5*max(1.-length(p.xy)*.3,0.)\n        +fragColor*5.*pow(gn(((p.xyy*vec3(100.,1.,0.)+vec3(p.y*10.,p.x*100.-mod(iTime*2.,10.)*50.,0)).xy*r2d(-.6)).xyy)-.2,10.)*.2;\n\n        \n        //for(int i=1;i<4;i++)fragColor+=pow(max(gn(mod(p.xyx*vec3(70,5,0)*float(i),64.6)+vec3(p.y*10.,mod(time*100.*float(i),100.),0))-.3,0.),10.)*.2;\n        vec3 fp=vec3(1.2,4.3,-4.5);\n        float d=dot(fp,rd),rad=.5;\n        vec3 frp=ro+rd*d;\n        if(d>.0 && length((frp)-fp)<rad) {\n                fragColor.rgb=mix(fragColor.rgb,lcol*vec3(.8,1,1),smoothstep(-.1,.1,length(ro-MP)-length(ro-frp))*pow(1.-length(frp-fp)/rad,2.)*lmod);    \n        }\n        fragColor=mix(clamp(fragColor*1.6,0.1,1.),texture(iChannel0,uv),.5)*min(iTime,1.);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}