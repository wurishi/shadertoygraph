{"ver":"0.1","info":{"id":"dd3yWX","date":"1695562127","viewed":18,"name":"test_rnks","username":"rnks2003","description":"trying out shadertoy\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    \n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.263,0.414,0.557);\n\n    return a+ b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.x;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    float c = length(uv0);\n    \n    c = smoothstep(1.5,.1,c+( 0.1));\n    \n    for (float i = 0.0; i< 3.0; i++){\n        uv =1. * (fract(uv/c*3. + sin(iTime*.9))) - .5*cos(exp(c-iTime)*0.1);\n\n        float d = length(uv) - sin(exp(-length(uv0)));\n\n        vec3 col = palette( c + i*8. + iTime * 0.1);\n\n        d = tan(d *4.0 + iTime*0.1)/4.0;\n        d = abs(d);\n\n        d = pow(0.05*tan(d) ,2.5);\n\n        finalColor += col* exp(d*c)- col / exp(d*iTime) ;\n        \n    }\n    \n    fragColor = vec4(finalColor,1.0);\n    \n}","name":"Image","description":"","type":"image"}]}