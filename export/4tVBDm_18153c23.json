{"ver":"0.1","info":{"id":"4tVBDm","date":"1542795337","viewed":195,"name":"Infinity Birthday Crystal","username":"khlorghaal","description":"For my friend\nLambert flavored","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["volume","raymarch","cube"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ETA 1e-5\n\n#define PI 3.14159265359\n#define TAU (PI*2.)\n\n#define time float(iTime)\n\n#define ITERS 512\n\nprecision highp float;\n\nvec3 sumv(vec2 v){ return vec3(dot(v,vec2(1))); }\nvec3 sumv(vec3 v){ return vec3(dot(v,vec3(1))); }\nvec3 sumv(vec4 v){ return vec3(dot(v,vec4(1))); }\nfloat sums(vec2 v){ return dot(v,vec2(1)); }\nfloat sums(vec3 v){ return dot(v,vec3(1)); }\nfloat sums(vec4 v){ return dot(v,vec4(1)); }\n\n#define CA vec4(\\\n    3411.23,\\\n    3415.23,\\\n    3421.34,\\\n    3401.34)\n#define CB vec4(\\\n    5061.11,\\\n    5021.43,\\\n    5043.13,\\\n    5051.13)\nfloat rand41(vec4 x){\n    return fract(\n        sin(sin(dot(x,CB))*CA.x)\n    );\n}\nfloat rand31(vec3 x){\n    return fract(\n        sin(sin(dot(x,CB.xyz))*CA.x)\n    );\n}\n\nvec3 f(vec3 p){\n    p= mod(p,1.);\n        \n    vec3 n= p-.5;\n    n= normalize(n);\n        \n    vec3 sn= .25-p;\n    vec3 sp= p-.75;\n\tif(sn.x>0.||sp.x>0.||\n       sn.y>0.||sp.y>0.||\n       sn.z>0.||sp.z>0.)\n        return vec3(0.);\n    //todo planar cut\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv= fragCoord/iResolution.xy;\n    vec2 uvn= uv*2.-1.;\n    uvn.x*= iResolution.x/iResolution.y;\n    \n    vec2 xy= uvn;\n    #define FOG vec3(.1,.5,.95)\n    vec3 c= FOG;\n    \n\tfloat t= .5;\n    for(int i=0; i!=ITERS; i++){\n        t+= .008*(t+1.);\n        vec3 p= vec3(xy*.5,1.)*t;\n        \n    \tp+= time*vec3(.0,.0, 1.0);\n        \n        /* wind is bad for cake\n        vec3 wind= vec3(\n        noise( vec4(p,time   ),vec4(.2,.1,.1,1.)),\n        noise( vec4(p,time+4.),vec4(.2,.1,.1,1.)),\n        noise( vec4(p,time+8.),vec4(.2,.1,.1,1.))\n        );\n        p+= wind*.2;\n        */\n        \n        #define ICING vec3(.95)\n        #define CAKE vec3(0.91,.9,.35)\n        #define SPRINKLE_RED vec3(0.9,.15,.15)\n        #define SPRINKLE_GREN vec3(0.25,.87,.25)\n        #define SPRINKLE_CYAN vec3(0.3,.6,1.)\n        #define SPRINKLE_PURP vec3(0.4,.1,.8)\n        \n        vec3 norm= f(p);\n        \n        if(norm!=vec3(0.)){\n            float lum= dot(norm,normalize(vec3(1.,1.,-1.)));//lambert flavored\n            //how to analyticly calculate a bounce map for infinite cubes?\n            lum= lum*.5+.6;\n            \n            vec3 color;\n            vec3 colors[]= vec3[]( ICING,ICING,ICING,ICING,ICING,ICING,\n                                  SPRINKLE_RED,SPRINKLE_GREN,SPRINKLE_CYAN,SPRINKLE_PURP );\n            float ci= rand31(floor(p*32.));\n            color= colors[int((float(colors.length())-.5)*ci)];\n            \n            float foga= clamp(t/10., 0.,1.);\n            color= foga<.3? color:ICING;\n            \n            color= pow(color, vec3(2.2));\n            \n            c= color*lum;\n            \n            float fogb= clamp(t/90.-.125, 0.,1.);\n            c= mix(c,FOG, fogb);\n            \n            break;\n        }\n    }\n    c= pow(c,vec3(1./2.2));\n    fragColor= vec4(c,1.0);\n}\n","name":"Image","description":"","type":"image"}]}