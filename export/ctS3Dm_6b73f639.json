{"ver":"0.1","info":{"id":"ctS3Dm","date":"1673376627","viewed":147,"name":"Fork of maxwellcoffee's PortalðŸ”Š","username":"blurryroots","description":"Fork of  maxwellcoffee 'Pathagorean Portal' with some naive audio generation.","likes":3,"published":1,"flags":40,"usePreview":0,"tags":["psychedelic"],"hasliked":0,"parentid":"clB3DD","parentname":"Pathagorean Portal"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* @maxwellcoffee - 2023 \n\ninspiration + general code structure from @kishimisu - 2022)\n*/\n\n#define WITH_SOUND_IN 1\n#define R iResolution\n\nvoid mainImage(out vec4 O, vec2 F) {\n    vec2 uv = F / R.xy;\n    float c , \n          o ,\n          complex = 30.,\n          e = 1.4+11.962+(iTime+ 59.2)*0.001111;\n          if (e > 13.43) {e =+ iTime*.111111 + 11.54;complex += .1*iTime;}\n          \n    vec2  r = iResolution.xy; \n    \n    for (;o++<complex;) {\n        vec3 p = abs(.7*c*normalize(vec3((F+F-r)/r.y, 1)));\n        p.xy *= s(e);\n        p.zy += e + c*tan(2.*e);\n        p = fract(p)-.5;\n        p.xy *= s(c);\n        p.xz *= s(e);\n        p.y = max(abs(p.y)-a(0.,.2,1.,),0.);\n        c += (length(vec2(length(p.xy)-.2,p.z)) \n                 -a(.4,.1,.5,4.) - c*.01)*.5;\n    }\n    \n    O.rgb = 1.2*(cos(c*110. + .99*vec3(0,1.+c*.2,2))+.2)/exp(c*0.0914);\n    \n    #if WITH_SOUND_IN\n    O = max (O, texture (iChannel0, uv));\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    float t = time;\n    float c , \n          o ,\n          complex = 30.,\n          e = 1.4+11.962+(t+ 59.2)*0.001111;\n          if (e > 13.43) {e =+ t*.111111 + 11.54;complex += .1*t;}\n          \n    for (;o++<complex;) {\n        vec3 p = vec3(abs(.7*c));\n        p.xy *= s(e);\n        p.zy += e + c*tan(2.*e);\n        p = fract(p)-.5;\n        p.xy *= s(c);\n        p.xz *= s(e);\n        p.y = max(abs(p.y)-a(0.,.2,1.,),0.);\n        c += (length(vec2(length(p.xy)-.2,p.z)) \n                 -a(.4,.1,.5,4.) - c*.01)*.5;\n    }\n          \n    float f = 432.0/2.0;\n    int af = 0;\n    float a = 2.0*trtone (mod (t, pow (c, 0.5)), f*(1./e), af, 3.0);\n    float b = 1.0*sqtone (mod (t, pow (c, 0.3)), f*(complex), af-10, 2.0);\n    float g = 0.2*c*tone (mod (t, c*e), f/2., -5, 1.);\n    \n    float s = 0.;\n    s = max (s, a);\n    s = max (s, b);\n    s = max (s, g);\n    \n    return vec2 (clamp (0.3*s, 0., 1.));\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"// Shadertoy Educational License\n// You cannot host, display, distribute or share this Work in any form,\n// including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it.\n// I share this Work for educational purposes, and you can link to it,\n// through an URL, proper attribution and unmodified screenshot, as part\n// of your educational material. If these conditions are too restrictive\n// please contact me and we'll definitely work it out.\n// You are free however, to incorporate this work within the Shadertoy\n// ecosystem, e.g. by forking.\n// This work may incorporate other permissivly shared, educational work,\n// which is attributed appropriatly. Please do so as well.\n// Thanks to https://www.shadertoy.com/user/iq for inspiring this license.\n\nconst float pi = 355./115.;\nconst float tau = 2.0 * pi;\nconst float phi = (1.0 + sqrt (5.0)) / 2.0;\nconst float phi0 = phi - 1.0;\nconst float phi0i = 1.0 - phi0;\n\n#define a(a,b,f,o) mix(a,b,sin(o+e*f)*.5+.5)\n#define s(a) mat2(cos(a+vec4(0,33,11,0)))\n\nfloat psin (float t) {\n    return (1.0 + sin (pi * t - pi/2.)) / 2.0;\n}\n\nfloat tune (float f, int i) {\n    float b = pow (2., (1./12.));\n    float s = pow (b, float (i));\n    return f * s;\n}\n\nfloat tr (float x) {\n    float p = 2.0;\n    float u = 4.0;\n    float a = 1.0;\n\n    float k = (u * a) / p;\n    float pu = p / u;\n\n    float d = mod (x - pu, p) - (2.0 * pu);\n    float s = k * abs (d) - a;\n\n    return s;\n}\n\nfloat sq (float x) {\n    float s = 0.5*sign (x);\n    return s;\n}\n\nfloat tone (float t, float f, int n, float d) {\n    return sin(tau * tune (f, n) * t) * exp(-t * d);\n}\nfloat ptone (float t, float f, int n, float d) {\n    return psin(tau * tune (f, n) * t) * exp(-t * d);\n}\nfloat sqtone (float t, float f, int n, float d) {\n    return sq(sin(tau * tune (f, n) * t)) * exp(-t * d);\n}\nfloat trtone (float t, float f, int n, float d) {\n    return tr(sin(tau * tune (f, n) * t)) * exp(-t * d);\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const bool SOUND_IN = true;\n// === icon message: \"sound in\". link: https://www.shadertoy.com/view/MtyXRW\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n// ===\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (SOUND_IN) {\n    // Overlay by FabriceNeyret2 https://www.shadertoy.com/view/MtyXRW\n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}  \n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}