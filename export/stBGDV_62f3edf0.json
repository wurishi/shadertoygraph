{"ver":"0.1","info":{"id":"stBGDV","date":"1624724686","viewed":56,"name":"Cellular Automata: Rule n","username":"TrevallionJ","description":"Inspired by https://www.youtube.com/watch?v=IK7nBOLYzdE&t=50s\nUpdated so you can now enter the binary representation into variable n (preloaded with rule 30)\nClick to reset","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  Simply displays buffer A to screen\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n//  Colors of dead cells\nvec4 dead( vec2 fragCoord ){\n\n    \n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 fragColor;\n    \n    if(texture(iChannel0, uv).r > 0.0){\n        fragColor = vec4(texture(iChannel0, uv).r - 0.1, 0.0, 1.0, 1.0);\n    }else{\n        fragColor = vec4(0.0, (texture(iChannel0, uv).b - 0.1) / 2.0, texture(iChannel0, uv).b - 0.1, 1.0);\n    }\n    \n    return fragColor;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    //Drag up\n    fragColor = texture(iChannel0, vec2(fragCoord.x, fragCoord.y - 1.0)/iResolution.xy);\n    \n    // Iterate\n    //(□ = an alive cell, ■ = a dead cell)\n    //□□□ → ■\n    //□□■ → ■\n    //□■□ → ■\n    //□■■ → □\n    //■□□ → □\n    //■□■ → □\n    //■■□ → □\n    //■■■ → ■\n    \n    if(fragCoord.y < 0.6){\n        int index = 0;\n        if(texture(iChannel0, vec2(fragCoord.x - 1.0, fragCoord.y + 1.0)/iResolution.xy) == vec4(1.0)){\n            index += 4;\n        }\n        if(texture(iChannel0, vec2(fragCoord.x, fragCoord.y + 1.0)/iResolution.xy) == vec4(1.0)){\n            index += 2;\n        }\n        if(texture(iChannel0, vec2(fragCoord.x + 1.0, fragCoord.y + 1.0)/iResolution.xy) == vec4(1.0)){\n            index += 1;\n        }\n        \n        if(n[7-index] == 1){\n            fragColor = vec4(1.0);\n        }else{\n            fragColor = dead(fragCoord);\n        }\n    }\n    \n    // Initalize grid a begining\n    if(sign(iMouse.w) == 1.0){fragColor = vec4(0.0);}\n    if((iFrame == 0 || sign(iMouse.w) == 1.0) && abs(fragCoord.x - iResolution.x/2.0) < 0.6 && fragCoord.y < 0.6){\n        fragColor = vec4(1.0);\n    }    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"int n[8] = int[8](0,0,0,1,1,1,1,0);","name":"Common","description":"","type":"common"}]}