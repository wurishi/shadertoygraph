{"ver":"0.1","info":{"id":"flyBDh","date":"1664387195","viewed":116,"name":"Damaged VCR","username":"franklin143","description":"cis566 lab practices","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    \n    float bar = smoothstep(0.15, 0.05, abs(uv.y - mod(iTime*0.5, 2.0)));\n    warpedUv.x += bar * tan(uv.y * 300.0 + iTime) * 0.05;\n    \n    float range = 0.02;\n\n    vec2 offset1 = vec2(cos(iTime), sin(iTime)) * range;\n    vec2 offset2 = vec2(cos(iTime +1.f), sin(iTime + 1.f)) * range;\n    vec2 offset3 = vec2(cos(iTime +2.f), sin(iTime + 2.f)) * range;\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}