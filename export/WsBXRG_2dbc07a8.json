{"ver":"0.1","info":{"id":"WsBXRG","date":"1554124206","viewed":197,"name":"Particle like","username":"flyingrub","description":"Heavily inspired by https://www.shadertoy.com/view/lscczl\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define resolution iResolution\n#define frame iFrame\n#define pixel_width 1./iResolution.y\n\nconst float speed = .5;\nconst float grid = 20.;\nconst float size = 1.5;\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvec2 GetPos(vec2 id, vec2 offs, float t) {\n    float n = random(id+offs);\n    float n1 = fract(n*10.);\n    float n2 = fract(n*100.);\n    float a = t+n;\n    return offs + vec2(sin(a*n1), cos(a*n2))*.8;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n    uv = uv * grid;\n\n    float col;\n    for (int i =-1; i<=1; i++) {\n        for (int j =-1; j<=1; j++) {\n            vec2 offset = vec2(i,j);\n            vec2 id = floor(uv);\n            vec2 gv = fract(uv);\n            vec2 pos = GetPos(id, offset, iTime*speed+10.);\n            float p_size = random(id+offset)/20.*size;\n            col += smoothstep(pixel_width*grid,0.0,length(pos-gv)-p_size);\n    \t}\n    }\n    \n    //col += step(0.98,fract(uv.x));\n    //col += step(0.98,fract(uv.y));\n\n    \n\t\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}