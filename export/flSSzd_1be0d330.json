{"ver":"0.1","info":{"id":"flSSzd","date":"1628333511","viewed":108,"name":"Simple Truchet Weaving Pattern","username":"sylvain69780","description":"Randomly watching videos on Youtube, this one was about washing a carpet ! \nNo idea why this has been suggested to me, I'am not fan of washing.\nThe pattern of the carpet interested me !\n[url=https://youtu.be/SCP20vK0JKc]LUBUSKIE CENTRUM CZYSTOÅšCI[/url]","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["truchet","weaving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nA very simple truchet pattern.\n\nReferences\n\n    Shane has many many many awesome Truchet shaders.\n\n    Animated Two-Tiled Truchet  - Shane\n    https://www.shadertoy.com/view/tsSfWK\n    \n    Fabrice already made ultra short versions of this \"weaving\" pattern\n    https://www.shadertoy.com/view/llfyDn\n    https://www.shadertoy.com/view/4lsyWn (I like this one, 185 chars !)\n\n    iResolution, iMouse, iDate, etc - FabriceNeyret2\n    https://www.shadertoy.com/view/llySRh\n\n    Ring Twister - Flyguy - I may use this as a variation.\n    https://www.shadertoy.com/view/Xt23z3 \n    \n    more: https://www.shadertoy.com/results?query=weaving\n\n*/\n\n#define T iTime*.1\n#define AA(d,r,pix) smoothstep( .75, -.75, (d)/(pix)-(r))   // antialiased draw. r >= 1.\n\nvec4 blendOver (vec4 A, vec4 B) {\n        return (A + (1.-A.a)*B); \n}\n\nmat2 rot(float a) {\n    float s = sin(a),\n          c = cos(a);\n    return mat2(c,-s,s,c);\n}\n\nvec4 tape(vec2 uv, float pix, float side) {\n    float d = abs(uv.x);\n    vec4 col = vec4(0);\n    float spec = .5+.5*cos((uv.y+side)*3.14159);\n    spec*=spec;\n    vec3 c1 = vec3(0.25,0.25,1.5);\n    c1 *= 1.0 - max(0.0,cos((uv.x+uv.y)*3.14159*14.0)*.5); \n    vec3 c2 = vec3(1.2,1.2,0.7);\n    c2 *= 1.0 - max(0.0,cos((uv.x-uv.y)*3.14159*14.0)*.5); \n    col.a = AA(d-.3,1.0,pix);    // r=1 pixel black border for contrast\n    col.rgb = mix(col.rgb,c1,AA(d-.3,0.0,pix));    \n    col.rgb = mix(col.rgb,c2,AA(d-.15,0.0,pix))*spec;        \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    float zoom = 3.0 + sin(T);\n    \n    uv*=zoom;\n    uv*=rot(T+1.0);\n    uv += vec2(T,T*.1)*.2;\n    float pix = 2.0*zoom/iResolution.y;\n    vec2 guv = fract(uv)-.5;\n    vec2 gid = floor(uv);\n    vec4 col = vec4(vec3(0.025),1.0); \n    col.rgb *= 1.0 - max(0.0,cos((guv.x-guv.y)*3.14159*14.0)*.25);\n    if ( mod(gid.x + gid.y,2.0 ) == 1.0 ) guv = guv.yx;\n    col = blendOver(tape(guv,pix,1.0),col);\n    col = blendOver(tape(guv.yx,pix,0.0),col);\n    fragColor = vec4(sqrt(col.rgb),1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}