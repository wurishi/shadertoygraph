{"ver":"0.1","info":{"id":"ttK3W3","date":"1580098414","viewed":185,"name":"Poly Grid","username":"adkaros","description":"Grids of lines animating in and out using sin and the step functions.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["grid","time","lines","sin","loop","step"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float modOffset = sin(iTime * 0.1);\n    \n    // Create lines with step()\n    vec3 xlines = vec3(step(abs(sin(0.2*iTime)), mod(modOffset + 80.0, uv.x)));\n\tvec3 yLines = vec3(step(abs(sin(0.2*iTime)), mod(modOffset + 80.0, uv.y)));\n    \n    // Add color to lines\n    xlines = xlines * vec3(uv.x * sin(0.7 * iTime), uv.x * sin(0.4 * iTime), uv.x * sin(1.0 * iTime));\n    yLines = yLines * vec3(uv.x * sin(0.7 * iTime), uv.x * sin(0.2 * iTime), uv.x * sin(0.6 * iTime));\n    \n    vec3 col = mix(yLines, xlines, uv.y);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}