{"ver":"0.1","info":{"id":"wtjcWG","date":"1595286472","viewed":67,"name":"white dwarf","username":"foil","description":"Caution: it is highly unoptimized. \nBasically, it is just a combination of https://www.shadertoy.com/view/Md3XRB and https://www.shadertoy.com/view/ttlGDf with a slight tweaking.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["warping","sphere","circle","antialiasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AA\n\nfloat pulseCircle(in vec2 p, in float r)\n{\n    float l = length(p) - r;\n    return smoothstep(2.3,3.6,1.6*sin(4.5/l + 2.*iTime) + 0.2/l);\n}\n\nfloat circle(in vec2 p, in float r) {\n\tfloat l = r - length(p);\n    return l;\n}\n\nfloat hash(vec2 co){\n    return sin( 2355.44 * fract(sin(dot(co.xy ,vec2(12.9898,78.233)))  * 43758.5453));\n}\n\nvec3 warping(in vec2 pos) {\n\tfloat strength = 0.2;\n    float t = iTime/200.0;\n    \n    vec3 col = vec3(0);\n    \n    #ifdef AA\n    for(float i = -1.0; i <= 1.0; i++) {\n        for(float j = -1.0; j <= 1.0; j++) {\n\n            pos = pos+vec2(i*0.8,j*0.8)/3.0;\n            \n            #endif\n\n    \t\tfor(float k = 1.0; k < 6.0; k+=1.0){ \n    \t\t\tpos.x += strength * sin(2.0*t+k*1.5 * pos.y)+t*0.5;\n        \t\tpos.y += strength * cos(3.0*t+k*1. * pos.x)+t*0.3;\n\t\t\t}\n\n    \t\t//Time varying pixel colour\n    \t\tcol += 0.25 + 0.5*cos(t*0.5+pos.xyx*3.).xxx;\n    \t\t#ifdef AA\n        }\n    }\n\n    col /= 2.;   \n    #endif\n    \n\t//col = pow(col, vec3(0.4545));\n    col = clamp(col, vec3(0.0), vec3(1.0));\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;    \n\n    vec3 bg = vec3(0.0);\n    vec3 noiseColor = vec3(clamp(hash(uv*iTime*0.2), 0.0, 1.0));\n    vec3 white = vec3(1.0);\n    vec3 warpingColor = warping(uv*1.0);\n\n    bg = mix(bg, white, pulseCircle(uv - vec2(0.9, 0.5), 0.3));\n    bg = mix(bg, warpingColor, smoothstep(0.0, 0.05, circle(uv - vec2(0.9, 0.5), 0.35)));\n\n    fragColor = vec4(bg, 1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}