{"ver":"0.1","info":{"id":"DdsGz4","date":"1665753616","viewed":263,"name":"Artober - Worms","username":"Flopine","description":"Day 13 (am late okay I know :P) of the artober challenge ! ","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","animation","truchet","organic","everyday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\n#define circle(u,s) (length(u)-s)\n\n#define hash21(x) fract(sin(dot(x,vec2(234.5, 381.0)))*1647.2)\n#define noise(u) textureLod(iChannel0, u, 0.)\n#define disturbance(u) texture(iChannel1, u)\n\nvoid moda(inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.x,p.y),per)-per*.5;\n    p = vec2(cos(a), sin(a))*length(p);\n}\n\nfloat truchet (vec2 uv)\n{\n    vec2 id = floor(uv);\n    float s;\n    \n    if (noise(id*.27).x<.5) \n    {\n        uv.x *= -1.;\n    }    \n    float flow = mod(id.x+id.y,2.)*2.-1.;\n    uv = fract(uv)-.5;\n    s =( uv.x>-uv.y )? 1.:-1.;\n    uv -= .5*s;\n    uv *= rot(iTime*flow*.25); \n    moda(uv,10.);\n    uv.x -= .5; \n    \n    return abs(circle(uv,0.08));\n}\n\nfloat tor (vec3 p, vec2 d)\n{\n    vec2 q = vec2(truchet(p.xy)+d.x, p.z);\n    return length(q)-d.y;\n}\n    \nfloat SDF (vec3 p)\n{return tor(p, vec2(.15,0.6));}\n\nvec3 gn (vec3 p)\n{\n    vec2 eps = vec2(0.001,0.);\n    return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nfloat spec (vec3 rd, vec3 l, vec3 n)\n{return  pow(max(dot(n, normalize(l-rd)),0.), 20.);}\n\nfloat AO (vec3 p, vec3 n, float e)\n{return clamp(SDF(p+e*n)/e, 0., 1.);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    //uv *= 3.;\n    float dither = hash21(uv);\n    vec3 ro=vec3(0.001,0.001,-3.), rd=normalize(vec3(uv,1.)),p=ro,\n    col=vec3(0.), l=vec3(0.1,-0.1,-1.);\n    \n    bool hit = false; float shad;\n    for(float i=0.; i<64.; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            hit=true; shad=i/64.; break;\n        }\n        d *= .76+dither*.05;\n        p += d*rd;\n    }\n    \n    if (hit)\n    {\n        vec3 n = gn(p);\n        float li = max(dot(n,l),0.);\n        float ao = AO(p,n,0.2)+AO(p,n,0.3)+AO(p,n,0.25);\n \n        col = mix(vec3(0.3,0.,0.), vec3(0.8,0.4,0.5), clamp((1.-shad*5.),0. ,1.));\n        col += vec3(0.95,0.6,0.7)*spec(rd,n,l)*disturbance(p.xy*.4-iTime*.05).x;\n        col *= ao/3.;\n        \n    }\n    \n    //col = vec3(truchet(uv));\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}