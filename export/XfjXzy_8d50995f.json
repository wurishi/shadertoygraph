{"ver":"0.1","info":{"id":"XfjXzy","date":"1706499905","viewed":136,"name":"2d figure girl-v2","username":"jorge2017a2","description":"2d figure girl-v2","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["2dfiguregirlv2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n///2d figure girl-v2\n// fecha 28-enero-2024\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(6.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nfloat opSmoothSub( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h); \n}\n    \nfloat opSmoothIntersection( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) + k*h*(1.0-h); \n}\n\nfloat opSmoothMin(float a, float b, float k)\n{\n    float h = clamp(0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat ndot( in vec2 a, in vec2 b ) { return a.x*b.x - a.y*b.y; }\n\n\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n    p.x = abs(p.x);\n    vec2 ca = vec2(p.x-min(p.x,(p.y<0.0)?r1:r2), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot2(k2), 0.0, 1.0 );\n    float s = (cb.x<0.0 && ca.y<0.0) ? -1.0 : 1.0;\n    return s*sqrt( min(dot2(ca),dot2(cb)) );\n}\n\nfloat sdUnevenCapsule( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n    return dot(p, vec2(a,b) ) - r1;\n}\n\n\nfloat FbrazoIzq(vec2 p)\n{\n    float k=0.02;\n    float r13=0.07;\n    float r23=0.06;\n    float h3=0.47;\n    vec2 p3=vec2(0.85,2.98-0.2);\n    //float d9= sdUnevenCapsule(p-p3,r13,r23,h3);\n    float ang=radians(-45.0);\n    vec2 pr = Rotate(p-p3,vec2(0.0,0.0), ang);\n    float d9= sdUnevenCapsule(pr,r13,r23,h3);\n\n    \n    float r11=0.06;\n    float r21=0.05;\n    float h1=0.47;\n    vec2 p1=vec2(0.68-0.20,2.4+0.75);\n    float d11= sdUnevenCapsule(p-p1,r11,r21,h1);\n   //brazo izq y ante brazo\n    float df=opSmoothMin(d9,d11,k);\n    return df;\n    \n}\n\n\nfloat FbrazoDer(vec2 p)\n{\n    float k=0.02;\n    float r14=0.07;\n    float r24=0.06;\n    float h4=0.47;\n    vec2 p4=vec2(1.37,2.99-0.2);\n     float ang=radians(45.0);\n     vec2 pr = Rotate(p-p4,vec2(0.0,0.0), ang);\n    float d10= sdUnevenCapsule(pr,r14,r24,h4);\n    \n    float r12=0.06;\n    float r22=0.05;\n    float h2=0.47; //0.87\n     vec2 p2=vec2(1.56+0.17,2.44+0.7);\n    float d12= sdUnevenCapsule(p-p2,r12,r22,h2);\n    //col=DrawFigBorde(vec3(0.0,1.0,0.5),col,d12);\n    \n    //brazo der y ante brazo\n    float df=opSmoothMin(d10,d12,k);\n    \n    return df;\n}\n\nvec3 figGirl(vec2 p, vec3 col)\n{\n    vec2 p0=p;\n    vec3 colc =vec3(0.0);\n    float dt=9999.9;\n\n    p=vec2(p.x, -p.y);\n    float r1,r2,he;\n    r1=0.13;\n    r2=0.35;\n    he=0.325;\n    vec2 pos=vec2(1.11,2.495+1.0);\n    float d1= sdTrapezoid(p-pos, r1, r2, he);\n    dt=min(dt,d1);\n    //col= DrawFigBorde(colc,col,d1);\n\n\n    r1=0.3;\n    r2=0.16;\n    he=0.235;\n     pos=vec2(1.11,3.035-0.05);\n    float d2= sdTrapezoid(p-pos, r1, r2, he);\n    dt=min(dt,d2);\n    \n\n\n    r1=0.105;\n    r2=0.295;\n    he=0.04;\n    pos=vec2(1.11,3.31-0.6);\n    float d3= sdTrapezoid(p-pos, r1, r2, he);\n    dt=min(dt,d3);\n\n\n\n\n    pos=vec2(1.11,3.44-0.85);\n    vec2 med=vec2(0.065,0.1);\n    float d5= sdBox(p-pos, med );\n    dt=min(dt,d5);\n\n\n    r1=0.06;\n    r2=0.115;\n    he=0.025;\n    pos=vec2(1.11,3.375-0.74);\n    float d6= sdTrapezoid(p-pos, r1, r2, he);\n    dt=min(dt,d6);\n    \n\n\n///pierna izq\n    float r11=0.15;//0.15\n    float r21=0.08;\n    float h1=0.73;\n    vec2 p1=vec2(0.92,1.74+2.1);\n    float d7= sdUnevenCapsule(p-p1,r11,r21,h1);\n    \n\n    //pierna der\n    float r12=0.15;\n    float r22=0.08;\n    float h2=0.73;\n    vec2 p2=vec2(1.31,1.74+2.1);\n    float d8= sdUnevenCapsule(p-p2,r12,r22,h2);\n\n\n    //brazo izq\n    float r13=0.07;\n    float r23=0.06;\n    float h3=0.47;\n    vec2 p3=vec2(0.85,2.98-0.2);\n    float ang=radians(-45.0);\n    vec2 pr = Rotate(p-p3,vec2(0.0,0.0), ang);\n    float d9= sdUnevenCapsule(pr,r13,r23,h3);\n\n\n    // brazo der\n    float r14=0.07;\n    float r24=0.06;\n    float h4=0.47;\n    vec2 p4=vec2(1.37,2.99-0.2);\n     ang=radians(45.0);\n     pr = Rotate(p-p4,vec2(0.0,0.0), ang);\n    float d10= sdUnevenCapsule(pr,r14,r24,h4);\n\n\n    //ante brazo izq\n    r11=0.06;\n     r21=0.05;\n     h1=0.47;\n     p1=vec2(0.68-0.20,2.4+0.75);\n    float d11= sdUnevenCapsule(p-p1,r11,r21,h1);\n\n\n    //ante brazo der\n    r12=0.06;\n    r22=0.05;\n    h2=0.47; //0.87\n     p2=vec2(1.56+0.17,2.44+0.7);\n    float d12= sdUnevenCapsule(p-p2,r12,r22,h2);\n\n    //rodilla izq\n     r13=0.06;\n     r23=0.05;\n     h3=0.87;\n     p3=vec2(0.92+0.01,0.8+3.8);\n    float d13= sdUnevenCapsule(p-p3,r13,r23,h3);\n\n\n    //rodilla der\n     r12=0.06;\n     r22=0.05;\n     h2=0.87;\n     p2=vec2(1.56-0.25,2.44+2.22);\n    float d14= sdUnevenCapsule(p-p2,r12,r22,h2);\n\n\n    float k=0.1;\n    float df=opSmoothMin(d1,d2,k);\n     df=opSmoothMin(df,d3,k);\n     df=opSmoothMin(df,d5,k);\n     df=opSmoothMin(df,d6,k);\n \n    k=0.001;\n    df=opSmoothMin(df,d7,k);\n    df=opSmoothMin(df,d8,k);\n\n    //rodilla\n    df=opSmoothMin(df,d13,k);  //izq\n    df=opSmoothMin(df,d14,k);  //der\n\n    \n    float sp=10.0;\n    float tb=iTime*sp;\n    tb=mod(tb,6.0*sp);\n    //brazo izq y ante brazo\n    vec2 pt=p;\n    pt= Rotate(pt, vec2(0.85,2.8),radians(tb));\n    //d9=opSmoothMin(d9,d11,k);\n    d9 =FbrazoIzq(pt);\n\n\n    //brazo der y ante brazo\n    //d10=opSmoothMin(d10,d12,k);\n    pt=p;\n    pt= Rotate(pt, vec2(1.4,2.8),radians(-tb));\n    d10= FbrazoDer(pt);\n\n\n    col=DrawFigBorde(colc, col, df);\n    col=DrawFigBorde(vec3(0.0,1.0,0.0), col, d9); //brazo izq\n    col=DrawFigBorde(vec3(0.0,.5,0.0), col, d10); //brazo der\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(-1.0,3.0);\n    float esc=1.25;\n    uv*=esc;\n    vec2 uv0=uv;\n    \n    vec3 col=vec3(1.0);\n    col=figGirl(uv,col);\n    float t=mod(iTime,10.0);\n    col=figGirl(uv*2.5-vec2(-0.5,-t),col);\n    col=figGirl(uv*2.5-vec2(4.0,-10.0+t),col);\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//https://www.shadertoy.com/view/llBSzK\n///kernkraft 400\n//Creado por mememaestro en 2015-10-15 \n///modificado por JorgeFloresP.--27/sep/2020--\n//modificado v2  -28/enero/2024\n\n///un pequeÃ±o cambio\n\nconst float trt = 1.0594630943592952645;\nconst float bpm = 140.0;\n#define pi 3.1415926538\n\nfloat note2freq(float note) {\n    return 440.0 * pow(trt,note);\n}\n\nfloat sawWave(float time, float freq, float amp) \n{  return mod(time,1.0/freq)*freq*amp; }\n\n\n// Sine wave. The constant here is Tau (2 * PI)\nfloat waveSine(float freq, float time) {\n    return sin(6.28318530 * freq * time);\n}\n\n// Square wave. ceil() has less error than sign().\nfloat waveSquare(float freq, float time, float amp) \n{   return (ceil(0.5 - fract(freq * time)) * 2.0 - 1.0)*amp; }\n\n// Triangle wave\nfloat waveTriangle(float freq, float time,float amp)\n{ return (abs(fract(freq * time - 0.25) - 0.5) * 4.0 - 1.0)*amp;  }\n\n// Sawtooth wave\nfloat waveSaw(float freq, float time, float amp) {\n    return (fract(freq * time + 0.5) * 2.0 - 1.0)*amp;\n}\n\n// Pulse wave. Duty cycle is 0 to 1.\nfloat wavePulse(float freq, float time,float amp,  float duty) \n{ return (step(fract(freq * time), duty) * 2.0 - 1.0)*amp;}\n\n\n//gaz\n#define osc_sin(x)sin((x)*TAU)\n#define osc_saw(x)(1.-fract(x)*2.)\n#define osc_sqr(x)sign(0.5-fract(x))\n#define osc_tri(x)(asin(sin((x)*PI))/PIH)\n\n\n///-----\n// From https://www.shadertoy.com/view/clXSR7\nfloat waveSawv2(float freq, float time,float amp) \n{\n    //return fract(freq * time + 0.5) * 2.0 - 1.0;\n    return  (osc_saw(freq*time+0.5))*amp;\n}\n\n\nvec2 bassSynth(float time, float tempo) {\n    float m = floor(mod(tempo/2.0,8.0)); //minim number\n    float note = floor(mod(tempo*2.0,2.0)) * 12.0 - 35.0 +\n        float(m >= 4.0  && m < 6.0) * (5.0 + (m-4.0) * 2.0) ;\n    return vec2(sawWave(time, note2freq(note), exp(-0.0*mod(tempo, 0.5))));\n}\n\nvec2 leadSynth(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 6.0) || \n        (q > 8.0 && q < 17.0) ||\n    \tq == 20.0 || q == 22.0 || q == 23.0);\n    float note = -11.0 + //melody\n        float(q<13.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=13.0 ) * (21.0-q) + \n        float(q==15.0 ) * (-3.0) +\n        float(q>=20.0 ) * (2.0) +\n        float(q==22.0 ) * (6.0);  \n                \n    return vec2(waveSaw(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n    waveSaw(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\n\nvec2 leadSynthv2(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 12.0) || \n        (q > 16.0 && q < 34.0) ||\n    \tq == 40.0 || q == 44.0 || q == 46.0);\n    float note = -11.0 + //melody\n        float(q<26.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=26.0 ) * (21.0-q) + \n        float(q==30.0 ) * (-3.0) +\n        float(q>=40.0 ) * (2.0) +\n        float(q==44.0 ) * (6.0);  \n    return vec2(waveSaw(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n    waveSaw(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\nvec2 leadSynthv3(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 12.0) || \n        (q > 16.0 && q < 34.0) ||\n    \tq == 40.0 || q == 44.0 || q == 46.0);\n    float note = -11.0 + //melody\n        float(q<26.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=26.0 ) * (21.0-q) + \n        float(q==30.0 ) * (-3.0) +\n        float(q>=40.0 ) * (2.0) +\n        float(q==44.0 ) * (6.0);  \n    \n    return vec2(waveSquare(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n    waveSquare(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\nvec2 leadSynthv4(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 12.0) || \n        (q > 16.0 && q < 34.0) ||\n    \tq == 40.0 || q == 44.0 || q == 46.0);\n    float note = -11.0 + //melody\n        float(q<26.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=26.0 ) * (21.0-q) + \n        float(q==30.0 ) * (-3.0) +\n        float(q>=40.0 ) * (2.0) +\n        float(q==44.0 ) * (6.0);  \n    return vec2(waveTriangle(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n    waveTriangle(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\nvec2 leadSynthv5(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 12.0) || \n        (q > 16.0 && q < 34.0) ||\n    \tq == 40.0 || q == 44.0 || q == 46.0);\n    float note = -11.0 + //melody\n        float(q<26.0) * floor(0.9 +  2.1 * (mod(q-1.0,4.0))) + \n        float(q>=26.0 ) * (21.0-q) + \n        float(q==30.0 ) * (-3.0) +\n        float(q>=40.0 ) * (2.0) +\n        float(q==44.0 ) * (6.0);  \n    \n    float duty=0.2;\n    \n    float s1=wavePulse(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5)),duty);\n    float s2=wavePulse(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5)),duty);\n    return vec2(s1, s2);\n}\n\n\n\nvec2 leadSynthv6(float time, float tempo)\n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number\n    float ampMask = float( //rhythm\n        (q > 0.0 && q < 12.0) || \n        (q > 16.0 && q < 34.0) ||\n    \tq == 40.0 || q == 44.0 || q == 46.0);\n    float note = -11.0 + //melody\n        float(q<26.0) * floor(0.9 +  2.1 * (mod(q-1.0,6.0))) + \n        float(q>=26.0 ) * (25.0-q) + \n        float(q==30.0 ) * (-1.0) +\n        float(q>=40.0 ) * (6.0) +\n        float(q==44.0 ) * (10.0);  \n    return vec2(waveSawv2(time, note2freq(note+0.01), ampMask * exp(-1.0*mod(tempo, 0.5))),\n    waveSawv2(time, note2freq(note-0.01), ampMask * exp(-1.0*mod(tempo, 0.5))));\n}\n\n\nvec2 kickSynth(float time, float tempo) {\n    const float dist = 3.0;\n    tempo = mod(tempo,1.0); \n    return vec2(clamp(sin(pow((tempo+0.2)*0.0001,-0.5))*exp(-3.0*tempo),-(1.0/dist),(1.0/dist)) * dist);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec2 clapSynth(float time, float tempo) \n{\n    float q = floor(mod(tempo*2.0,32.0)); //quaver number;\n    float b = floor(q/8.0);//bar number\n    float qb = mod(q,8.0); //quaver in bar;\n    float ampMask = float((qb >= 2.0 && qb < 4.0) || (qb >= 6.0 && qb < 7.0)\n                         || (b == 3.0 && (qb == 1.0 || qb >= 5.0))); \n    tempo = mod(tempo*4.0 ,2.0);\n    return vec2(rand(vec2(time+1.2,tempo+6.1)) * ampMask * exp(-1.5*tempo),\n                rand(vec2(time+2.1,tempo+1.6)) * ampMask * exp(-1.5*tempo));\n}\n\nvec2 mainSound( in int samp,float time)\n{  float t = time;\n    float tempo = t * (bpm/60.0);\n    vec2 bass,lead,kick,clap;\n    \n     if (t<7.5 )\n    {\t bass = bassSynth(t,tempo) * 0.30;\n    \t lead = leadSynthv6(t*1.005,tempo*0.5) * 0.333;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n    }\n    \n    else if(t>7.5 &&  t <14.0)   \n    {   bass = bassSynth(t,tempo) * 0.30;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv5(t, tempo)*0.444;\n    }\n    else if(t>14.0 && t<20.0)   \n    {  bass = bassSynth(t,tempo) * 0.30;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv2(t*1.2, tempo)*0.333;\n         \n    }\n    else if (t>20.0 &&  t <26.0)   \n     {   lead= leadSynthv5(t, tempo)*0.444;\n         tempo = t * (bpm/(50.0+5.0*sin(t)) );\n     \t bass = bassSynth(t,tempo) * 0.1; \n    \t kick = kickSynth(t,tempo) * 0.1;\n    \t clap = clapSynth(t,tempo) * 0.1;\n\t}\n    \n    //original\n    else if(t>26.0 && t<32.0)   \n    { bass = bassSynth(t,tempo) * 0.30; \n    \t lead = leadSynthv2(t*1.005,tempo) * 0.333;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         \n    }\n    \n     else if(t>30.0 && t <40.0 )   \n    {   //lead = leadSynth(t*1.005,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead = leadSynthv3(t*1.005,tempo) * 0.333;\n    }\n    \n    else if(t>40.0 && t <50.0 )   \n    {    bass = bassSynth(t,tempo) * 0.30; \n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;    \n    }\n    \n    else if (t>50.0 )   \n     {\t bass = bassSynth(t,tempo) * 0.30;\n    \t kick = kickSynth(t,tempo) * 0.333;\n    \t clap = clapSynth(t,tempo) * 0.333;\n         lead= leadSynthv4(t, tempo)*0.333;\n       }   \n        \n    vec2 synths = bass + lead; //sidechain\n    synths *= min(mod(tempo,1.0)+0.4,1.0);\n    \n    vec2 res=synths + kick + clap;\n    vec2 res2=res;\n    res.x=res.x*cos(tempo*t);\n    res.y=res.y*sin(tempo*t);\n    //res*=0.125;\n    \n    return res;\n}","name":"Sound","description":"","type":"sound"}]}