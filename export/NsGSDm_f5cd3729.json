{"ver":"0.1","info":{"id":"NsGSDm","date":"1634732265","viewed":44,"name":"ray maching demo","username":"liuhaoqing","description":"rayMac","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymac"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Max_Steps 100    // 最大步数\n#define Max_Dist 100.\t // 最大距离\n#define Surf_Dist 0.01   // 每次步进距离\n#define sphere1 vec4(0, 1, 8 ,1)   //\n#define sphere2 vec4(-1, 2, 9 ,2)   //\n\n\nfloat sphere(vec3 pos , vec4 sphere)\n{\n\treturn length(pos - sphere.xyz) - sphere.w;   \n}\n\nfloat blob3(float d1, float d2, float d3)\n{\n    float k = 10.0;\n\treturn -log(exp(-k*d1)+exp(-k*d2)+exp(-k*d3))/k;\n}\n\nfloat collision(vec3 p){\n    float s1 = sphere(p, sphere1);\n    float s2 = sphere(p, sphere2);\n    float s3 =  p.y;\n    //return min(s1,min(s2,s3));\n    return blob3(s1, s2, s3);\n}\n\nfloat rayMaching(vec3 ro, vec3 rd){\n    float d0 = 0.0;\n    for(int i; i <= Max_Steps; i++){\n        vec3 p = ro + rd * d0;\n        float ds = collision(p);\n        d0 += ds;\n        if(d0 > Max_Dist || ds < Surf_Dist){\n            break;\n        }\n    }\n    return d0;   \n}\n\nvec3 getNormal(vec3 p){\n    float d = collision(p);\n    vec2 e = vec2(0.01,0);\n\n    vec3 n = d-vec3(\n        collision(p-e.xyy),\n        collision(p-e.yxy),\n        collision(p-e.yyx));\n       \n    return normalize(n);\n}\n\nfloat getLight(vec3 p){\n    vec3 lightPos = vec3(0,5,6);\n    lightPos.xz += vec2(sin(iTime),cos(iTime))*2.0;\n    vec3 l = normalize(lightPos-p);// 点光源\n    vec3 n = getNormal(p);\n    float dif = clamp(dot(n,l),0.,1.);//漫反射颜色\n    \n    float d = rayMaching(p + n*Surf_Dist*2.0,l);\n    if(d<length(lightPos-p))dif*=0.1;\n    \n    return dif;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0,0.5,0);\n    vec3 rd = normalize(vec3(uv,1));\n    float d = rayMaching(ro, rd);\n    vec3 p = ro + d * rd;\n    \n    vec3 col = vec3(getLight(p));\n    \n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}