{"ver":"0.1","info":{"id":"4t3Sz4","date":"1478287806","viewed":216,"name":"DarkTunnel","username":"dila","description":"Fake shadows in a tunnel.","likes":8,"published":1,"flags":0,"usePreview":1,"tags":["ramarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float x)\n{\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat sdBoxZ( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,d.y),0.0) + length(max(d.xy,0.0));\n}\n\nfloat mapcol = 0.0;\n\nfloat map(vec3 p)\n{  \n   \tfloat d = -1000.0;\n    \n    const int n = 5;\n    \n    vec3 q = p;\n    \n    for (int i = 0; i < n; ++i) {\n        \n        float fi = 1.0 - float(i) / float(n - 1);\n\n        q = fract(q) - 0.5;\n        \n        vec3 u = vec3(0.35);\n        \n        float k = -sdBox(q, u);\n        \n        if (k > d) {\n            mapcol = fi;\n            d = k;\n        }\n        \n\t\tq *= 1.5;\n    }\n    \n    vec3 h = p;\n    h.xy *= rot(3.14159 * 0.125 + p.z * 0.8);\n    d = max(d, -sdBoxZ(h, vec3(0.5)));\n    \n    h = p;\n    h.xy *= rot(3.14159 * 0.125 - p.z * 0.8);\n    d = min(d, -sdBoxZ(h, vec3(0.75)));\n    \n    return d;\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 64; ++i) {\n        t += map(o + r * t) * 0.3;\n    }\n    return t;\n}\n\nvec3 _texture(sampler2D channel, vec3 p)\n{\n\tvec3 ta = texture(channel, p.xy).xyz;\n    vec3 tb = texture(channel, p.xz).xyz;\n    vec3 tc = texture(channel, p.yz).xyz;\n    return (ta * ta + tb * tb + tc * tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 o = vec3(0.0, 0.0, iTime);\n    vec3 r = normalize(vec3(uv, 1.3));\n    \n    r.xz *= rot(iTime);\n    \n    float t = trace(o, r);\n    vec3 w = o + r * t;\n    float fd = map(w);\n    \n    float fog = 1.0 / (1.0 + mapcol * 10.0 + fd * 100.0);\n    \n    vec3 fc = _texture(iChannel0, w) * fog;\n    \n\tfragColor = vec4(sqrt(fc), 1.0);\n}","name":"Image","description":"","type":"image"}]}