{"ver":"0.1","info":{"id":"td2czd","date":"1587213007","viewed":162,"name":"Colorful Bubbles","username":"omeometo","description":"some experiment","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dist(in vec3 p){\n\treturn length(p-round(p))-0.2;\n}\n\nvec3 getNormal(in vec3 p){\n    return normalize(p-round(p));\n}\n\nvec3 rot(in vec3 v, in vec3 n, in float th){\n    return v*cos(th)+cross(n,v)*sin(th)+n*dot(n,v)*(1.-cos(th));\n}\n\n\nvoid getColor(out vec4 fragColor, in vec3 cen, in vec3 rd){\n\tvec3 u=vec3(1,0,0);    \n    float t=0.;\n    for(int i=0;i<200;i++){\n    \tvec3 pos = cen + t * rd;\n        float d = dist(pos);\n        if(abs(d)<0.05){\n            float wt=2.0*smoothstep(0.05, 0., abs(d))*pow(0.992, float(i));\n            vec3 nor = getNormal(pos);\n\t\t\tu = rot(u, nor, wt);\n        }\n        t += 0.05;\n    }\n    fragColor = vec4(u*0.5+0.5, 1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\t\n    vec3 cam = vec3(0.5, 0.25, -iTime*2.0);\n    vec3 fwd;\n    if(iMouse.z>0.5){\n        vec2 muv = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n    \tfwd = normalize(vec3(muv, -2));\n    }else{\n        fwd = normalize(vec3(sin(iTime*0.2),sin(iTime*0.3),-2)); //fwd=normalize(fwd);\n    }\n    vec3 up = vec3(0,1,0);up=normalize(up-dot(fwd,up)*fwd);\n    vec3 right = cross(fwd, up);\n    \n    vec3 rd = normalize(fwd + 0.3 * (uv.x * right + uv.y * up));\n    \n    getColor(fragColor, cam, rd);\n}\n","name":"Image","description":"","type":"image"}]}