{"ver":"0.1","info":{"id":"mdBXDz","date":"1670148422","viewed":108,"name":"fol mod 2","username":"sleeplessmonk","description":"flower of life mod","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// (c) 2016 xoihazard\n\n#define TWO_PI 6.2831853072\n#define PI 3.14159265359\n\nconst float timeScale = 0.2;\nconst float displace = 0.04;\nconst float gridSize = 18.0;\nconst float wave = 5.0;\nconst float brightness = 1.5;\n\nvec2 rotate(in vec2 v, in float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    return v * mat2(c, -s, s, c);\n}\n\nvec3 coordToHex(in vec2 coord, in float scale, in float angle) {\n    vec2 c = rotate(coord, angle);\n    float q = (1.0 / 3.0 * sqrt(3.0) * c.x - 1.0 / 3.0 * c.y) * scale;\n    float r = 2.0 / 3.0 * c.y * scale;\n    return vec3(q, r, -q - r);\n}\n\nvec3 hexToCell(in vec3 hex, in float m) {\n    return fract(hex / m) * 2.0 - 1.0;\n}\n\nfloat absMax(in vec3 v) {\n    return max(max(abs(v.x), abs(v.y)), abs(v.z));\n}\n\nfloat nsin(in float value) {\n    return sin(value * TWO_PI) * 0.5 + 0.5;\n}\n\nfloat hexToFloat(in vec3 hex, in float amt) {\n    return mix(absMax(hex), 1.0 - length(hex) / sqrt(3.0), amt);\n}\n\nfloat calc(in vec2 tx, in float time) {\n    float angle = PI * nsin(time * 0.1) + PI / 6.0;\n    float len = 1.0 - length(tx) * nsin(time);\n\n    vec3 hex = coordToHex(tx, gridSize * nsin(time * 0.1), angle);\n    vec3 cell = hexToCell(hex, 1.0);\n    float value = nsin(hexToFloat(cell, nsin(time)) * wave * nsin(time * 0.5) + len + time);\n\n    float moire = sin(tx.x * 20.0 + time * 5.0) * 0.5 + 0.5;\n\n    return value * moire;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 tx = (fragCoord / iResolution.xy) - 0.5;\n    tx.x *= iResolution.x / iResolution.y;\n    float time = iTime * timeScale;\n    vec3 rgb = vec3(0.0, 0.0, 0.0);\n    for (int i = 0; i < 3; i++) {\n        float time2 = time + float(i) * displace;\n        rgb[i] += pow(calc(tx, time2), 2.0);\n    }\n    fragColor = vec4(rgb * brightness, 1.0);\n}","name":"Image","description":"","type":"image"}]}