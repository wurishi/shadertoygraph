{"ver":"0.1","info":{"id":"slscWf","date":"1649053836","viewed":54,"name":"Testing simple 3D","username":"maciejhubert","description":"simple 3d","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DistLine(vec3 ro, vec3 rd, vec3 p) {\n    return length(cross(p-ro, rd))/length(rd);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0., 0., -2.);\n    vec3 rd = vec3(uv.x, uv.y, 0.) - ro;\n   \n    float t = iTime;\n    vec3 p = vec3(sin(t), sin(t)/2., 2.+2.*cos(t));\n    float d = DistLine (ro, rd, p); \n    \n    d = smoothstep(0.1, 0.09, d);\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}