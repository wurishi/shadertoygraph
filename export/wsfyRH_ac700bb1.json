{"ver":"0.1","info":{"id":"wsfyRH","date":"1584247495","viewed":194,"name":"Tango Maestro!","username":"ivomontigatti","description":"A shader for radial motion blur","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur","radial","spin","circular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define QPI 0.7853981634\n#define HPI 1.57079632679\n#define PI 3.141620\n#define TWOPI 6.28318530718\n#define SPINS 3.0\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nfloat quintOut(float t) {\n    return 1.0 - (pow(t - 1.0, 5.0));\n}\n\nfloat quarticInOut(float t) {\n    return t < 0.5 ? + 8.0 * pow(t, 4.0) : -8.0 * pow(t - 1.0, 4.0) + 1.0;\n}\n\nfloat niTime(float t) {\n\treturn (sin(t) + 1.0) / 2.0;\n}\n\nfloat qPeak(float t) {\n    return 1.0 - abs((t - 0.5) * 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy / 2.0;\n    float maxLength = length(center);\n    vec2 ctf = fragCoord - center;\n    float preQ = quarticInOut(niTime(iTime));\n    float preR = preQ * (TWOPI * SPINS);\n    vec2 ctfrot = rotate(ctf, preR);\n        \n    float ctfLength = length(ctf);\n    float ctfln = ctfLength / maxLength;\n    float angle = quintOut(ctfln) * qPeak(preQ);\n    \n    vec2 centeruv = center / iResolution.xy;\n    vec2 ctfuv = ctfrot / iResolution.xy;\n    \n    float rStep = angle  * 0.01;\n    vec4 sum = vec4(0.0);\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, rStep * 4.0) ) * 0.051;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, rStep * 3.0) ) * 0.0918;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, rStep * 2.0) ) * 0.12245;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, rStep) ) * 0.1531;\n    sum += texture( iChannel0, centeruv + ctfuv ) * 0.1633;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, -rStep) ) * 0.1531;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, -rStep * 2.0) ) * 0.12245;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, -rStep * 3.0) ) * 0.0918;\n    sum += texture( iChannel0, centeruv + rotate(ctfuv, -rStep * 4.0) ) * 0.051;\n\n    // Output to screen\n    fragColor = sum;\n}","name":"Image","description":"","type":"image"}]}