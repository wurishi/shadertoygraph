{"ver":"0.1","info":{"id":"7t3SRN","date":"1639396491","viewed":177,"name":"Sliced harmonics [241 chars]","username":"hnh","description":"Depth-illusion of some deformed grid. \nBased on the previous [url]https://www.shadertoy.com/view/slV3Rz[\\url].","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","grid","onetweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on the previous https://www.shadertoy.com/view/slV3Rz\n// by squeezing out some more geometric variety. It produces\n// a minimalistic depth illusion of some sliced iso-surfaces.\n// Thanks to XOR for substancial golfing support in the base\n// version and general teachings from FabriceNeyret2 and Shane.\n\n\nvoid mainImage(out vec4 O, vec2 p){\n    float a = iTime*.1;\n    p = p/iResolution.y*4. + sin(a+vec2(8,0))*20.;  // camera\n    p *= sin(cos(p+a))*.2;  // deform\n\n    vec2 s = floor(p + (p.x + p.y)*.4);  // tilted grid, depth illusion\n    s = .6 - step(p -= s - (s.x + s.y)*.21, p.yx)*.4;\n    s *= exp(.5-8.*length(p*p-s));\n    \n    O = s.x*8. + s.y*vec4(.02,.5,2.5,1);  // colors\n}\n\n\n","name":"Image","description":"","type":"image"}]}