{"ver":"0.1","info":{"id":"MsK3zc","date":"1455724493","viewed":388,"name":"Cheap Tunnel","username":"Swax97","description":"A simple voxel marcher, textures are still kinda off","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel","voxel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float prng (in vec3 n) {\n    n*=0.03;\n \treturn fract(sin(dot(n.xyz ,vec3(12.9898,78.233,119.569))) * 43758.5453);  \n}\n\nfloat terrain(vec3 p){\n    p.xy += vec2(sin(p.z*0.2), cos(p.z*0.2))*4.0;\n    return prng(p)*6.0 + dot(p.xy, p.xy)*0.2 - 7.0 - sin(p.z*0.04);\n}\n\nvec3 march(vec3 ro, vec3 rd){\n    \n    vec3 dt = abs(1.0 / rd);\n    vec3 n = vec3(0.0);\n    \n    ivec3 p = ivec3(floor(ro));\n    \n    float t = 0.0;\n    \n    n = max(vec3(0.0), 1.0 / rd) - fract(ro) / rd;\n    \n    \n    ivec3 inc = ivec3(sign(rd));\n    \n    vec3 surf = vec3(0);\n    \n    for (int i = 0; i < 30; i++){\n        if(n.x < n.y) {\n            if(n.x < n.z) {\n                p.x += inc.x;\n                t = n.x;\n                n.x += dt.x;\n                surf = vec3(1.0, 0.0, 0.0);\n            } else {\n                p.z += inc.z;\n                t = n.z;\n                n.z += dt.z;\n                surf = vec3(0.0, 0.0, 1.0);\n            }\n        } else {\n            if(n.y < n.z) {\n                p.y += inc.y;\n                t = n.y;\n                n.y += dt.y;\n                surf = vec3(0.0, 1.0, 0.0);\n            } else {\n                p.z += inc.z;\n                t = n.z;\n                n.z += dt.z;\n                surf = vec3(0.0, 0.0, 1.0);\n            }\n        }\n        \n        if (terrain(vec3(p)) > 0.9) break;\n    }\n    \n    float b = 1.0/(t*t*0.02+1.0);\n    b *= abs(dot(rd, surf))*0.7+0.3;\n    \n    vec4 col = vec4(1.0);\n    \n    ro = ro + rd * t;\n    ro *= 0.075;\n        \n    col =  texture(iChannel1, ro.xy+ro.z);\n    col =  0.25 * col + 0.8 * col * texture(iChannel0, ro.xy+ro.z);\n\n        \n    col = sqrt(col);\n    \n    col = col * vec4(0.7, 0.75, 0.6, 0.0) + vec4(0.35, 0.3, 0.25, 1.0);\n    \n    return col.xyz * b ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (iResolution.xy - 2.0 * fragCoord.xy) / iResolution.y;\n\t\n    vec3 ro = vec3(-sin(iTime*0.4)*3.5, -cos(iTime*0.4)*5.0, iTime*2.0);\n    vec3 rd = normalize(vec3(uv, 1.5));\n    \n    fragColor = vec4(march(ro, rd), 1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}