{"ver":"0.1","info":{"id":"Xd33zM","date":"1448548055","viewed":439,"name":"Simple Numerical Digit Render","username":"prozacgod","description":"This renders digits - I'm not sure how you'd scale this to render numbers, and then render them in an appropriate location... or colors but I'm sure someone will notice this and explain that detail.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["numericalfontsdigits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// my first shader!\n\n// fully public domain, have at it - not required but would be nice if you left me a comment!\n\nfloat simpleBitmap(float data, vec2 s, vec2 bitCoord) {\n    // 0..1.0\n    float x = floor(bitCoord.x * s.x);\n    float y = floor(bitCoord.y * s.y);\n     \n    float i = y * s.x + x;\n    \n    float datum = float(data) / pow(2.0, i);\n\n    datum = mod(datum, 2.0);\n        \n    return floor(datum);\n}\n\nfloat digitBitmaps(const in int x) {\n\treturn x==0?961198.0:x==1?279620.0:x==2?953902.0:x==3?953998.0:x==4?700040.0:x==5?929422.0:x==6?929454.0:x==7?952456.0:x==8?962222.0:x==9?962184.0:0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n    float t = iTime;\n    \n    int i = int(floor(mod(t, 10.0)));\n    \n    fragColor = vec4(simpleBitmap(digitBitmaps(i), vec2(4.0, 5.0), uv), 0.0, 0.0, 0.0);\n    \n    //fragColor = vec4(uv.x, 0.0, 0.0, 0.0);\n}","name":"","description":"","type":"image"}]}