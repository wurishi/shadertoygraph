{"ver":"0.1","info":{"id":"4d3XW2","date":"1461438711","viewed":252,"name":"- Mandelbrot Zoom -","username":"glequeux","description":"mandelbrot simple zoom","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","zoom","fractale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simple mandelbrot implementation\n\nconst int MAXITER = 180;\nconst vec2 CENTER = vec2(-0.74364388703715,0.13182590420533); // interest point from wikipedia\nconst float MAXTIME = 25.0;\nconst float PI = 3.1415;\n\n\n\nvec2 nextMandel(vec2 z, vec2 c)\n{\n    // Zn+1 = Zn^2+c\n    //return vec2(z.x*z.x-z.y*z.y,2.0*z.x*z.y)+c; // First attempt\n    return vec2(dot(vec3(z,1.0),vec3(z.x,-z.y,c.x)),dot(vec3(z.xx,1.0),vec3(z.yy,c.y))); // swizzle friendly ?\n    //return mat2(z,-z.y,z.x)*z + c; // from FabriceNeyret\n}\n\nfloat mandel(vec2 c)\n{    \n    vec2 z = vec2(0,0);\n    int n=0;\n    for(int i=0;i<MAXITER;i++){\n        z=nextMandel(z,c);\n        if(dot(z,z)>1e4){ // test divergence\n            break;\n        }\n        n++;\n    }\n    return float(n) - log2(log2(dot(z,z))); // smooth color\n}\n       \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    uv = uv*2.0 -vec2(1.0,1.0); // go to -1;1\n    \n    float t = (sin(0.3*iTime-PI*0.5)*0.5+0.5)*MAXTIME; // stay in float precision\n    float size=1.0/(pow(1.6,t)); // window size\n    vec2 center = CENTER;\n    uv*= size;\n    \n    uv.x*= ratio; // screen ratio\n    uv+= center;\n\n    float value = float(mandel(uv));\n\tfragColor = vec4(sin(value*0.2),sin(value*0.7),cos(value*0.3),1.0); // simple rainbow color\n}\n\n","name":"Image","description":"","type":"image"}]}