{"ver":"0.1","info":{"id":"XlcXRs","date":"1481058491","viewed":215,"name":"Simplistic Light and Distortion","username":"CyanSprite","description":"Was thinking of my days playing Link to the Past and I remembered the really lame lighting they had, while lame, it's very nostalgic and will always hold a special place in my heart. This is my rendition of it.\nThe next part is just some random distortion","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","oldschool","distortion","lighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lightSize = 10.0;\nfloat lightStr = 0.4;\nfloat lightIntens = 1.0;\nfloat uvSpeed = .1;\n\n//borrowed some noise...it's like 3d sugar...\nfloat mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}\nfloat noise(vec3 p){\n    vec3 a = floor(p);\n    vec3 d = fract(p);\n    \n    d = d * d * (3.0 - 2.0 * d);\n\n    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\n    vec4 k1 = perm(b.xyxy);\n    vec4 k2 = perm(k1.xyxy + b.zzww);\n\n    vec4 c = k2 + a.zzzz;\n    vec4 k3 = perm(c);\n    vec4 k4 = perm(c + 1.0);\n\n    vec4 o1 = fract(k3 * (1.0 / 41.0));\n    vec4 o2 = fract(k4 * (1.0 / 41.0));\n\n    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\n    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x) ;\n\n    return o4.y * d.y + o4.x * (1.0 - d.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //generalizing\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //uv + uv scrolling * how big is the lighting, and distortion\n    float colFac = noise(vec3((uv+vec2(1.0,0.5) * iTime * uvSpeed) * clamp(lightSize, 2.0,1000.0),1.0));\n    if((mod(ceil(uv.x * 50.0),ceil(cos(iTime)*50.))) == 0.0){\n\t\tuv.x*=.995;\n        uv.x += cos(iTime)*.01;\n    }else if((mod(ceil(uv.x * 50.0),ceil(sin(iTime)*50.))) == 0.0){\n        uv.y*=.995;\n        uv.y += sin(iTime)*.01;\n    }\n\n    //get our background and then add the light\n\tvec4 col = texture(iChannel0,uv);\n    col+=colFac*lightStr;\n    \n    //up some contrast and brightness in key parts\n    vec4 col2 = col;\n    col2 = col2.xyxy * lightIntens;\n    //final out\n    fragColor = col * col2;\n\n}","name":"Image","description":"","type":"image"}]}