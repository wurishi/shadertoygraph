{"ver":"0.1","info":{"id":"7tSGDy","date":"1624607398","viewed":274,"name":"Spiral tunnel","username":"gormonboza","description":"Polar coordinates","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 color = vec4(.0);\n\n\tvec2 res = iResolution.xy;\n\n\n\t//------ create polar coordinates -----\n\n\tvec2 nUV = (uv - .5) * res / res.y;\n\n\tvec2 V = normalize(nUV);\n\n\tvec2 refV = vec2(1., 0.);\n\n\tfloat cosA = dot(refV, V);\n\n\tfloat alpha = acos(cosA);\n\n\talpha = alpha * step(.0, nUV.y) + (radians(360.) - alpha) * step(nUV.y, .0); // full 2PI circle\n\n\t//--------------------------------------\n\n\tfloat alphaP = alpha * 2. + length(nUV) * 7. * (1. + sin(iTime / 3.) * .4);\n\tfloat alphaM = alpha * 3. - length(nUV) * 5. * (1. + cos(iTime / 4.) * .5);\n\n\tfloat edge = cos(alphaP * 3. - iTime * 7.) * sin(alphaM * 3. + iTime * 5.);\n\n\tedge += 1.;\n\n\tedge /= 1.;\n\n\tedge *= length(nUV)  + .1;\n\n\tvec3 rainbow;\n\n\trainbow.r = (sin(iTime / 2. + edge * 16. + radians(360.) * 0. / 360.) + 1.) / 2.;\n\trainbow.g = (sin(iTime / 3. + edge * 16. + radians(360.) * 120. / 360.) + 1.) / 2.;\n\trainbow.b = (sin(iTime / 4. + edge * 16. + radians(360.) * 240. / 360.) + 1.) / 2.;\n\n\tcolor.rgb = rainbow * edge;\n\n\tcolor.a = 1.;\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}