{"ver":"0.1","info":{"id":"4Xs3Wr","date":"1707359825","viewed":68,"name":"procedural star","username":"ggoedert","description":"star tutorial","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846264338327950288\n\nvec3 Cs = vec3 (0.2900,0.4390,0.7100);\t\n\nfloat Ka = 1.0;\nfloat Kd = 1.0;\nvec3 starcolor = vec3 (1.0000,0.5161,0.0000);\nfloat npoints = 5.0;\nfloat sctr = 0.5;\nfloat tctr = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  uv = fragCoord     / iResolution.xy;\n    float AR = iResolution.x / iResolution.y;\n    float s = (uv.x-0.5)*AR+0.5;\n    float t = 1.0-uv.y;\n    \n    vec3 Ct;\n    float ss, tt, angle, r, a, in_out;\n    float rmin = 0.07, rmax = 0.2;\n    float starangle = 2.0*PI/npoints;\n    vec3 p0 = rmax*vec3(cos(0.0),sin(0.0), 0.0);\n    vec3 pi = rmin*\n        vec3(cos(starangle/2.0),sin(starangle/2.0),0.0);\n    vec3 d0 = pi - p0; vec3 d1;\n    ss = s - sctr; tt = t - tctr;\n    angle = atan(ss, tt) + PI;\n    r = sqrt(ss*ss + tt*tt);\n\n    a = mod(angle, starangle)/starangle;\n    if (a >= 0.5)\n        a = 1.0 - a;\n\n    d1 = r*vec3(cos(a), sin(a),0.0) - p0;\n    in_out = step(0.0, cross(d0 , d1).z);\t\n    Ct = mix(Cs, starcolor, in_out);\n\n    fragColor = vec4(Ct, 1.0);\t    \n}","name":"Image","description":"","type":"image"}]}