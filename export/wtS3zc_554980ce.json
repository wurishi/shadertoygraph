{"ver":"0.1","info":{"id":"wtS3zc","date":"1560492474","viewed":248,"name":"study2_mouseTracking","username":"firegump","description":"just leaning, Click left mouse to control eyes.  thanks for The Art of Code's tutorial by BigWings","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S( a, b, t) smoothstep( a, b, t)\n#define sat(x) clamp(x, 0.0, 1.0)\n\nfloat remap01(float a, float b, float t){\n\treturn sat((t-a)/(b-a));//clamp to 0-1;\n}\nfloat remap(float a, float b, float c, float d, float t){\n\treturn remap01( a, b, t)*(d-c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect){\n    \n    return (uv - rect.xy)/(rect.zw - rect.xy);//2d projection function;\n   \n\n}\n\nvec4 Eye(vec2 uv,float side, vec2 m, float smile){\n    uv -= .5;\n    uv.x *= side;\n    float d = length(uv);\n    \n    vec4 irisCol = vec4(.3,.5,1.,1.);\n    vec4 col = mix(vec4(1.),irisCol, S(.1,.7,d));\n    //can add sat function to clamp brighter area;\n    col.a = S(0.5, 0.48, d);\n    col.rbg *= 1.0 - S(0.45,0.5,d)*.5*(-uv.y -uv.x*side);//eye outline\n    \n    d = length(uv - m*.5);\n    \n    col.rgb = mix(col.rgb, vec3(0.0), S(0.3,0.28,d));//iris outline\n    \n    irisCol.rgb *= 1.0 + S( 0.25, 0.05, d);//make irisColor brighter\n    float irisMask = S(0.28,0.25,d);\n    col.rgb = mix(col.rgb, irisCol.rgb, irisMask);\n    d = length(uv - m*.6);\n    \n    float pupilSize = mix(.4,.16, smile);//mix also use to coutrol float\n    float pupilMask = S(pupilSize,pupilSize*.85,d);\n    pupilMask *= irisMask;//cut out pupil's outside area\n    col.rgb = mix(col.rgb, vec3(0.0), pupilMask);//pupil\n    \n    //eye highlight\n    float t = iTime*3.;\n    vec2 offs = vec2( sin(t + uv.y*25.), sin(t + uv.x*25.));\n    offs *= .01*(1. - smile);//depend ux.x change the light shape\n    uv += offs;\n    float highlight = S(.1, .09, length(uv - (- 0.15, 0.15)));\n    highlight += S(.07, .05, length(uv - (0.08,-0.08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    \n   \t\n    \n    return col;\n}\nvec4 Brow(vec2 uv, float smile){\n    float offs = mix(.2, 0.,smile);\n    uv.y += offs;\n    \n\tfloat y = uv.y;\n    uv.y += uv.x*mix(.5,.8,smile)- mix(.1,.3,smile); //brow move\n    uv.x -= mix(0.,.1,smile);\n    uv -= .5;\n    \n    vec4 col = vec4(0.);\n    \n    float blur = .1;\n    \n    float d1 = length(uv);\n    float s1 = S(.45,.45 - blur, d1);\n    float d2 = length(uv - vec2(.1, - .2)*.7);//*.7 get biger cricle\n    float s2 = S(.5,.5-blur,d2);\n    \n    float browMask = sat(s1-s2);//clamp to 0 1\n    \n    float colMask = remap01(.7,.8,y)*.7;//get a gradient\n    colMask *= S(.6, 1., browMask);\n    colMask *= smile;\n   \tvec4 browCol = mix(vec4(.4,.1,.2,sat((browMask+4.)*browMask-0.8)), vec4(.9,.7,.5,1),colMask);\n    col = browCol;\n    \n    //shadow\n    uv.y += .15 - offs*.35;//let shadow'position a little bit down\n    blur += mix(0.,.1,smile);\n   \n    \n    d1 = length(uv);\n    s1 = S(.45,.45 - blur, d1);\n    d2 = length(uv - vec2(.1, - .2)*.7);//*.7 get biger cricle\n    s2 = S(.5,.5-blur,d2);\n    float shadowMask = sat(s1-s2);\n    \n    col = mix(col*1.2, vec4(0., 0., 0.,S(0., 1.,shadowMask)*.5),1.-browMask);\n    \n    \n    \n\n    return col;\n}\n\nvec4 Mouth(vec2 uv, float smile){\n    uv -= .5;\n    uv.y *= 1.5;\n\tvec4 col = vec4 (.5, .18, .05, 1.);\n    \n    uv.y -= uv.x*uv.x*2.*smile;//as uv.x biger  y move up more;\n    \n    uv.x *= mix(2.5, 1. ,smile);\n    float d = length(uv);\n    col.a = S( .5, .49, d );\n    \n    //teeth\n    vec2 tUv = uv;\n    tUv.y += (abs(tUv.x)*.7 + .1)*(1.-smile);\n    float td = length(tUv - vec2( 0. , .6));//move tooth to point;\n    vec3 toothCol = vec3(1.)*S(.6,0.35,d);//tooth shadow\n    col.rgb = mix(col.rgb,toothCol,S(0.4,0.37,td));\n    \n    td = length(uv - vec2(0.,- .5));\n    col.rgb = mix(col.rbg, vec3(1.,0.5, 0.5) ,S(.5, .2, td));\n    return col;\n}\n\nvec4 Head(vec2 uv){\n\tvec4 col = vec4 (0.8,0.6,0.4,1.0);\n    \n    float d = length(uv);\n    \n    col.a = S(.5 , 0.49, d);\n    \n    float edgeShade = remap01( 0.35, 0.5,d );\n    edgeShade *= edgeShade;\n    col.rgb *= 1.0 - edgeShade*0.5;//col is vec4;\n    \n    //make a outline;\n    col.rgb = mix(col.rgb, vec3(0.6, 0.3, 0.1),S(0.47,0.48,d));\n    \n    //highlight\n    float highlight_alpha = S( 0.41, 0.405, d);\n    highlight_alpha *= remap(0.41, -0.2 , 0.75, 0.0, uv.y);\n    highlight_alpha *= S(.18,.19,length(uv - vec2(.2,.075)));\n    //remap(highest point,lowest point,max return value,min return value,input)\n    col.rbg = mix(col.rgb, vec3(1.0),highlight_alpha);\n    \n    \n    \n    d = length(uv-vec2(0.25,-0.2));//vec2 is create position;\n    float cheek_alpha = S(.2,.01,d)*0.4;\n    cheek_alpha *= S(0.17,0.16,d);//let cheek have little shape\n    col.rgb = mix(col.rgb,vec3(1.,.1,.1),cheek_alpha);\n    \n    return col;\n}\n\nvec4 Smiley(vec2 uv,vec2 m, float smile){\n\tvec4 col = vec4 (0.0);\n    float side = sign(uv.x);//sign, if x>0 return1,x=0 return 0,x<0 return -1;\n    uv.x = abs(uv.x); //mirror  \n    \n    vec4 head = Head(uv);\n    //vec4 eye = Eye(uv);\n    vec4 eye = Eye(within(uv, vec4(0.03,-.1,.37,.25)),side, m, smile);\n    vec4 mouth = Mouth(within(uv, vec4(-0.3,-0.4,.3,-0.1)), smile);//project mouth rect\n    //within( minX, minY, maxX, maxY)\n    vec4 brow = Brow(within(uv, vec4(0.02,0.17,.4,0.43)),smile);\n    \n    col = mix(col , head , head.a);//blend colors as  head's alpha;\n    col = mix(col , eye, eye.a);\n    col = mix(col , mouth, mouth.a);\n    col = mix(col , brow, brow.a);\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -=  .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 m = iMouse.xy/iResolution.xy;//normalize to  0 1\n\tm -= .5;\n\n\tuv -= m*(.26-dot(uv,uv));\n\tfloat smile = cos(iTime)*.5 + .5;\n    fragColor = Smiley(uv, m, smile);\n}","name":"Image","description":"","type":"image"}]}