{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//Crunchzilla.com ohjelmoinnin opetteluun\n\n//Valaistu raymarcheri. Hiiri liikuttaa valoa. Koita vaihtaa numeroita ja muokata koodia!\n\n//iquilezin apufunktioita etÃ¤isyysfunktion koostamiseen \n//https://iquilezles.org/articles/distfunctions\n\n//pallopinta\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n    vec3 q = abs(p);\n    return max(q.z-h.y,max(q.x+q.y*0.57735,q.y*1.1547)-h.x);\n}\n\nfloat sdPlane( vec3 p, vec4 n )\n{\n  // n must be normalized\n  return dot(p,n.xyz) + n.w;\n}\n\n//yhdistÃ¤minen\nfloat opU( float d1, float d2 )\n{\n    return min(d1,d2);\n}\n\n//erotus\nfloat opS( float d1, float d2 )\n{\n    return max(-d1,d2);\n}\n\nfloat epsilon=0.0001;\n\nfloat molly(vec3 pos){\n\tfloat sp1=sdSphere(pos-vec3(0.0,0.0,0.0),1.0);\n\tfloat sp2=sdSphere(pos-vec3(0.0,-0.5,0.0),1.0);\n\treturn max(-length(pos)+0.65,max(length(pos)-1.6,\n    (\n    opS(sp1,sp2)\n    +0.1*(sin(pos.x*17.0+iTime)*0.1+sin(pos.x*7.0+iTime)*0.1+sin(pos.y*7.0+iTime)*0.1))*0.3));\n\t\t\t\t\t\t //sinit sotkemassa kuviota, koita poistaa!\n\t\t\t\t\t\t //lopun kerroin varmistaa, ettei hypitÃ¤ seinÃ¤n sisÃ¤lle,\n\t\t\t\t\t\t //kun sinit sotkee vÃ¤hÃ¤n etÃ¤isyyttÃ¤.\n}\n\n//tÃ¤mÃ¤ mÃ¤Ã¤rittelee sen, mitÃ¤ nÃ¤kyy.\nfloat scene(vec3 pos){\n\treturn opU(molly(pos),sdPlane(pos,vec4(0.0,1.0,0.0,1.45)));\n}\n\n\n\nvec3 getGradient(vec3 pos,float scale){//otetaan leikkiderivaatta etÃ¤isyydestÃ¤\n\tvec3 e1=vec3(epsilon*scale,0.0,0.0);\n\tvec3 e2=vec3(0.0,epsilon*scale,0.0);\n\tvec3 e3=vec3(0.0,0.0,epsilon*scale);\n\treturn (scene(pos+e1)*e1+scene(pos+e2)*e2+scene(pos+e3)*e3)-\n\t\t\t(scene(pos-e1)*e1+scene(pos-e2)*e2+scene(pos-e3)*e3);\n}\n\n//tÃ¤mÃ¤ liikuttaa sÃ¤dettÃ¤ eteenpÃ¤in turvallisen matkan kerrallaan, kunnes tÃ¶rmÃ¤tÃ¤Ã¤n\nvec4 march(vec3 ray,vec3 pos, float near){\n\tray=normalize(ray);//varmistetaan, ettÃ¤ sÃ¤de on yhden pituinen, ettei laskut mene pieleen\n\t//hÃ¤ivytetÃ¤Ã¤n epsilonista johtuva banding\n\tfloat len=near;\t\n\tfor(int i=0;i<520;i++){//edetÃ¤Ã¤n maksimissaan tietty mÃ¤Ã¤rÃ¤ askeleita\n\t\tvec3 curPos=pos+ray*len;\n\t\tfloat dist= scene(curPos)*1.0;//etÃ¤isyys pintaan\n\t\tif(dist<epsilon){//jos tÃ¶rmÃ¤ttiin\n\t\t\tvec3 normal=getGradient(curPos,150.0);\n\t\t\t//palautetaan etÃ¤isyys ja normaali\n\t\t\tvec4 ret=vec4(len,normal.x,normal.y,normal.z);\n\t\t\treturn ret;\n\t\t}\n\t\tlen+=dist;//edistetÃ¤Ã¤n sÃ¤dettÃ¤\n\t\tif(length(curPos)>8.0) return vec4(100000.0,0.0,1.0,0.0);\n\t}\n\treturn vec4(100000.0,0.0,1.0,0.0);//jos iteraatiot loppuivat kesken\n}\n\nfloat shadow(vec3 ray,vec3 pos,float maxlen, float range, float minstep, vec2 fragCoord){\n\tfloat stepsize=max(minstep,epsilon);//epsilon*120.0;\n\tfloat len=range+stepsize*(1.5+sin(pos.x*2323.0+fragCoord.x*7483.123*iTime+fragCoord.y*1323.0)*0.5+sin(pos.y*12343.0+fragCoord.y*7255.32*iTime+fragCoord.x*5633.9)*0.5);\n\tfloat m=range;\n\tfor(int i=0;i<520;i++){\n\t\tvec3 curPos=pos+ray*len;\n\t\tfloat dist= scene(curPos);\n\t\tif (dist<-range || len>=maxlen)\n\t\t\treturn max(-range,min(m,dist));\n\t\telse\n\t\t\tm=min(m,dist);\n\t\t//float tmp=dist/range/2.0;\n\t\tlen+=max(stepsize,dist);//min(max(range,dist-range/0.2),dist*0.2);//max(stepsize+len*0.00001,dist);\n\t}\n\treturn m;\n}\n\nfloat ambientOcclusion(vec3 hitpos, vec3 normal,float occRad){\n\treturn 1.0-min(1.0,(length(normal*occRad-getGradient(hitpos+normal*occRad,occRad/epsilon)))/occRad);\n}\n\nfloat prox(vec3 pos, float rad){\n\treturn min(1.0,1.0-min(rad,scene(pos))/rad);\t\n}\n\nfloat softShadow(vec3 hitpos, vec3 nlightvec, float maxlen, float shadowrange,float minstep, vec2 fragCoord){\n\treturn shadow(\n\t\t\t\t\tnlightvec,\n\t\t\t\t\thitpos,\n\t\t\t\t\tmaxlen,\n\t\t\t\t\tshadowrange,minstep, fragCoord)/shadowrange;\n}\n\nfloat indirect(vec3 hitpos, vec3 lightvec, float bounceRad, float scale, vec2 fragCoord){\n\t\tvec3 nlightvec=normalize(lightvec);\n\t\tvec3 offset=-nlightvec+bounceRad*scale*1.0;//bounceRad*scale*15.0;\n\t\tvec3 pos=hitpos+offset;\n\t\tfloat p=prox(pos,scale*0.5);//bounceRad*scale);\n\t\tfloat soft=softShadow(pos,nlightvec,length(lightvec+offset),bounceRad*2.0,bounceRad*scale, fragCoord);\n\t\treturn max(0.0,soft-bounceRad*scale*0.5);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//aikaa on helpompi kontrolloida tÃ¤llÃ¤sellÃ¤\n\tfloat t= (iTime*1.5)+45.0+58.0;//+12.0)*1.5+15.0;\n\t\n\t//normalisoidaan hiiren sijainti\n\tvec2 mouse=(iMouse.xy-0.5*iResolution.xy)/ iResolution.xy;\n\t\n\t//normalisoidaan koordinaatit\n\tvec2 uv = (fragCoord.xy) / iResolution.xy;\n\tvec2 pos = (uv-0.5);\n\tpos.y *= (iResolution.y/iResolution.x);\n\t\n\t//mÃ¤Ã¤ritellÃ¤Ã¤n kameran sijainti\n\tfloat camrot=t*0.3*0.3*3.141/5.0*2.0;\n\tfloat camdist=sin(t*0.3)*1.5+2.3;\n\tvec3 camPos=vec3(0.15+sin(camrot)*camdist,sin(t*0.3+2.1)*0.5+sin(t*1.2)*0.2,cos(camrot)*camdist);\n\t\n\t//lasketaan jokaiselle pikselille suuntasÃ¤de\n\tvec3 ray=normalize(vec3(pos.x,pos.y,-1.0));\n\t\n\tfloat near= 0.001;//*sin(fragCoord.x*323.2+fragCoord.y*1233.32);\n\t\n\t//kÃ¤Ã¤nnellÃ¤Ã¤n \"kameraa\" (suuntasÃ¤teitÃ¤)\n\tfloat tilt=-0.7/(abs(camdist)*0.5+1.0);\n\tray=vec3(ray.x,cos(tilt)*ray.y-sin(tilt)*ray.z,sin(tilt)*ray.y+cos(tilt)*ray.z);\n\tfloat turn=cos(t*0.9)*0.2/(abs(camdist)*0.5+1.0)-camrot;\n\tray=vec3(cos(turn)*ray.x-sin(turn)*ray.z,ray.y,sin(turn)*ray.x+cos(turn)*ray.z);\n\t\t\n\t//lÃ¤hetetÃ¤Ã¤n se, ja otetaan sen saamat tiedot ylÃ¶s\n\tvec4 sampl = march(ray,camPos,near);\n\tfloat dist= sampl.x;\n\tvec3 normal = normalize(sampl.yzw);\n\t\n\t//mÃ¤Ã¤ritellÃ¤Ã¤n valon paikka\n\tvec3 lightpos=vec3(3.0*mouse.x,3.0*mouse.y+1.5,-sin(t*2.0)-4.0);\n\t\n\t//lasketaan tarkka osumakohta ja valon suunta varjon selvittÃ¤mistÃ¤ varten\n\tvec3 hitpos=(dist*ray+camPos);\n\tvec3 lightvec=lightpos-hitpos;\n\tvec3 nlightvec=normalize(lightvec);\n\t\n\t//lasketaan valaistus lampusta\n\tfloat directlight=max(0.0,dot(nlightvec,normalize(normal))/length(dist+lightpos)*5.0);\n\t\n\t//otetaan varjo huomioon\n\t//if(march(normalize(lightvec),hitpos,epsilon).x<=length(lightvec))\n\t//\tdirectlight*=0.0;\n\tfloat shadowrange=0.008;\n\tdirectlight*=max(0.0,softShadow(hitpos+normal*shadowrange*4.0,nlightvec,length(lightvec),shadowrange,epsilon*10.0,fragCoord));\n\t\t\t\t//max(0.0,shadow(nlightvec,hitpos+normal*shadowrange*4.0,length(lightvec),shadowrange,0.0))/shadowrange;\n\t//ambientti\n\tfloat ambient=normal.y*0.25+0.75;\n\tfloat occRad=0.2;\n\tfloat ambientOcc=(ambientOcclusion(hitpos,normal,occRad*2.0)\n\t\t\t\t\t+ambientOcclusion(hitpos,normal,occRad)\n\t\t\t\t\t+ambientOcclusion(hitpos,normal,occRad*0.5)\n\t\t\t\t\t+ambientOcclusion(hitpos,normal,occRad*0.25)\n\t\t\t\t\t+ambientOcclusion(hitpos,normal,occRad*0.125))/5.0;\n\t\t//1.0-(occRad-length(getGradient(hitpos+normal*occRad,occRad/epsilon)))/occRad;\n\t\n\tfloat bounceRad=0.04;\n\tfloat bounceLight=0.0;\n\tfor(int i=1;i<6;i++)\n\t\tbounceLight+=indirect(hitpos,lightvec,bounceRad,pow(float(i),1.5),fragCoord)/float(i);\n\t//bounceLight=1.0;\n\tbounceLight*=dot(-nlightvec,normal)+1.0;\n\t\t\t\t\t//(prox(hitpos+nlightvec*bounceRad*2.0,bounceRad*2.0)\n\t\t\t\t\t  // *softShadow(hitpos+nlightvec*bounceRad*2.0,nlightvec,length(lightvec),bounceRad)\n\t\t\t\t\t//);//+prox(hitpos+nlightvec*bounceRad,bounceRad)\n\t\t\t\t\t//+prox(hitpos+nlightvec*bounceRad*0.5,bounceRad*0.5)\n\t\t\t\t\t//+prox(hitpos+nlightvec*bounceRad*0.25,bounceRad*0.25)\n\t\t\t\t\t//+prox(hitpos+nlightvec*bounceRad*0.125,bounceRad*0.125))/5.0;\n\t\n\tvec3 color= pow( vec3(1.0,0.8,0.7)*(directlight*0.5*1.0+bounceLight*0.015)+vec3(0.1,0.15,0.25)*ambient*ambientOcc, vec3(1.0/2.2) );\n\t\n\t//annetaan vÃ¤ri ulos\n\tfragColor =vec4(color,1.0);\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsBGzy","date":"1389984142","viewed":308,"name":"raymarcher 5","username":"atomim","description":"Raymarching with soft shadows, faked GI and invisible shapes to improve rendering speed. Commentary in finnish. Some of the formulas and ideas are from iq.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","gi"],"hasliked":0,"parentid":"","parentname":""}}