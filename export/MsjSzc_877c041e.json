{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//Divided per 7 -> 1/7 = 0.1428571428571429\nfloat Maskline(float pos,float lineNumber)\n{    \n  return step(pos,0.1428571428571429 * lineNumber) - (step(pos,0.1428571428571429 * (lineNumber - 1.)));\n}\n\nvec3 GetRainbowColor(float i)\n{\n    //Step Violet\n    vec3 Violet = \tvec3(0.57,0.0, 1.0) \t*  Maskline(i,7.);\n    vec3 Purple = \tvec3(0.27,0.0, 0.51)\t*  Maskline(i,6.);\n    vec3 blue \t=\tvec3(0.0, \t0.0, 1.0) \t*  Maskline(i,5.);\n \tvec3 Green\t=\tvec3(0.0, \t1.0, 0.0) \t*  Maskline(i,4.);\n \tvec3 Yellow =\tvec3(1.0, \t1.0, 0.0) \t*  Maskline(i,3.);\n\tvec3 Orange =\tvec3(1.0, \t0.5, 0.0) \t*  Maskline(i,2.);\n \tvec3 Red\t=\tvec3(1.0, \t0.0, 0.0) \t*  Maskline(i,1.);\n    return Violet + Purple + blue + Green + Yellow + Orange + Red;\n}\n\nvec3 SmoothRainbowColor(float i)\n{\n    i *= 0.1428571428571429 * 6.;\n    float gradinStep = mod(i,0.1428571428571429) * 7.;    \n    vec3 firstColor = GetRainbowColor(i);\n    vec3 NextColor = GetRainbowColor(i + 0.1428571428571429);    \n    return mix(firstColor,NextColor, gradinStep);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float vStep = step(uv.y,0.5);    \n    vec3 c = SmoothRainbowColor(uv.x) * (1. - vStep);\n    c += GetRainbowColor(uv.x  ) * vStep;    \n\tfragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsjSzc","date":"1414596208","viewed":658,"name":"Rainbow gradient","username":"bytewave","description":"inspired by xilconic Rainbox spline\nhttps://www.shadertoy.com/view/MdBXzG","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["gradient","rainbow"],"hasliked":0,"parentid":"","parentname":""}}