{"ver":"0.1","info":{"id":"MXfyWH","date":"1726187715","viewed":9,"name":"Test 1 A","username":"zhavoronoki","description":"----","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265358979323846\n\nvec2 rotate2D(vec2 p,float angle,vec2 mid){\n  \n  return mat2(cos(angle),-sin(angle),\n  sin(angle),cos(angle))*(p-mid)+mid;\n  \n}\nfloat lines(vec2 p){\n  return smoothstep(.03,0.,p.y)+smoothstep(.03,0.,p.x);\n}\n\nfloat plot(vec2 p){\n  return smoothstep(.03,0.,abs(p.y-p.x));\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  // Normalized pixel coordinates (from 0 to 1) and fix aspect ratio\n  vec2 uv=fragCoord/iResolution.xy;\n  uv.x*=iResolution.x/iResolution.y;\n  \n  vec2 grid=fract(uv*10.);\n  grid=rotate2D(grid,PI/2.,vec2(.5));\n  \n  float triangle=step(grid.x,grid.y);\n  float plt=plot(grid);\n  float ln=lines(grid);\n  \n  vec3 color=vec3(triangle);\n  color=mix(vec3(.95,1.,.04),vec3(.2,.46,.97),triangle);\n  color=mix(color,vec3(0.),plt);\n  color=mix(color,vec3(0.),ln);\n  // Output to screen\n  fragColor=vec4(vec3(color),1.);\n}\n","name":"Image","description":"","type":"image"}]}