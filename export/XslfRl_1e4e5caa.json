{"ver":"0.1","info":{"id":"XslfRl","date":"1497559649","viewed":114,"name":"Jump into the Mandelbrot set","username":"adambene","description":"Mandelbrot set animated.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n\nconst vec2 center = vec2(.9266, 0.2623);\nconst int iter = 200;\n\nfloat triangle(float t) {\n    return .5 + .5 * cos(t + PI);\n\treturn smoothstep(0., 1., 1. - abs(mod(t, 2.) - 1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat scale = 4. / (1. + 1000.*triangle(.5 * iTime));\n    \n    vec2 uv = fragCoord.xy / iResolution.y;\n    uv.x -= iResolution.y / iResolution.x;\n\n    vec2 z, c;\n    \n    c.x = (uv.x - 0.5) * scale - center.x;\n    c.y = (uv.y - 0.5) * scale - center.y;\n\n    int i;\n    z = c;\n    for(i=0; i<iter; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n\n        if((x * x + y * y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n    }\n\n    float r = float(i) / float(iter);\n    fragColor = vec4(\n        r,\n        clamp(r, .0, .6) / .6,\n        clamp(r, .0, .4) / .4,\n        1.0\n    );\n}","name":"Image","description":"","type":"image"}]}