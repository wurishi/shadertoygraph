{"ver":"0.1","info":{"id":"lt2cW1","date":"1508450442","viewed":333,"name":"Serenade of water","username":"Flopine","description":"Still in training :) ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","flower","frost"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot (float angle)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2 (c,-s,s,c);\n} \n\nfloat sphere (vec3 pos, float rad)\n{return length(pos)-rad;}\n\nfloat box (vec3 pos, vec3 corn)\n{return length(max(abs(pos)-corn,0.));}\n\n\nvec2 moda (vec2 pos, float period)\n{\n    float angle = atan(pos.y,pos.x);\n    float len = length(pos.xy);\n    angle = mod(angle-period/2., period)-period/2.;\n    return vec2(sin(angle)*len,cos(angle)*len); \n    \n}\n\nfloat SDF (vec3 pos)\n{\n    float period_moda1 = (2.*3.14)/10.;\n    float period_moda2 = (2.*3.14)/3.;\n    vec3 offset = vec3(-0.5,0.5,0.5);\n    pos.xy = moda(pos.xy, period_moda1);\n    //pos.yz = moda(pos.yz, period_moda2);\n    pos.xz *= rot(sin(iTime*2.));\n   \tpos -= offset;\n    return max(-sphere(pos, 0.7), box(pos, vec3(0.5)));\n}\n\n\nvec3 norm (vec3 pos)\n{\n    vec2 eps = vec2(0.075,0.);\n    return normalize(vec3(SDF(pos+eps.xyy)-(SDF(pos-eps.xyy)),\n                          SDF(pos+eps.yxy)-(SDF(pos-eps.yxy)),\n                          SDF(pos+eps.yyx)-(SDF(pos-eps.yyx))));\n}\n\nfloat lighting (vec3 norm, vec3 light)\n{\n    return dot(light, norm);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = 2.*(fragCoord.xy / iResolution.xy)-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 pos = vec3(0.001,0.001,-1.);\n    vec3 dir = normalize(vec3(uv,1.));\n    vec3 color = vec3(0.);\n    \n    vec3 light1 = vec3(0.0,0.1,1.25);\n    vec3 light2 = vec3(0.0,0.5,-5);\n    \n    for (int i = 0; i<60; i++)\n    {\n        float d = SDF(pos);\n        if (d<0.01) \n        {\n            vec3 norml = norm(pos);\n            color = vec3(lighting(norml, light1));\n            //color += vec3(lighting(norml, light2));\n        \tbreak;\n        }\n        pos += d*dir;\n    }\n    \n\tfragColor = vec4(color*vec3(0.1,0.5,0.7)*2.,1.0);\n}","name":"Image","description":"","type":"image"}]}