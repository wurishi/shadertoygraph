{"ver":"0.1","info":{"id":"MtjGDm","date":"1429722337","viewed":160,"name":"Squircle_bc_2","username":"BntChvn","description":"My second Squircle Shader - 4 squircles on a parabole, chasing each other in a colorful run.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["squircle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI\t\t\t\t3.1415926535\n#define EPS\t\t\t\t0.005\n#define SQUIRCLES       4\n\n// Math tools\nfloat parabole( float x, float k )\n{\n    return pow( 4.0*x*(1.0-x), k );\n}\n\n// Squircle tools\nbool isSquircle(vec2 center, float r, vec2 uv, inout vec3 outColor)\n{\n    bool yes = false;\n    float ratio = iResolution.x/iResolution.y;\n    float power = 4.0;\n    \n    float A = (uv.x - center.x)*ratio;\n    float B = (uv.y - center.y);\n    \n    \n    if(pow(r, 4.0)*ratio > (pow(A, power)+pow(B, 4.0)))\n    {\n        yes = true;\n        outColor = vec3(sin(center.y), \n                            cos(center.x), \n                            tan(center.x));\n    }\n    \n    return yes;\n}\n\n\n// Main\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // inital color\n    vec3 color = vec3(0.5, 0.5, 0.5);\n    \n\tfloat k = 7.0;\n    float test = parabole(uv.x, k);\n    \n    // draw parabole\n    if( abs(uv.y-test)<EPS)\n    {\n        color = vec3(0.);\n    }\n    \n    // draw squircle (s)\n    for (int i=0; i<SQUIRCLES; i++)\n    {\n        vec2 center;\n        center.x = (sin(iTime + 0.25 * float(i))+PI/2.0)/PI ;\n        center.y = parabole(center.x, k);\n\n        float r = 0.05;\n        if(isSquircle(center, r, uv, color))\n        {\n            color.x += 0.2*float(i);\n            color.y += -0.2*float(i);\n            color.z += 0.2*float(i);\n        }\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"","description":"","type":"image"}]}