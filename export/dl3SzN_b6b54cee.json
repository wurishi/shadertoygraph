{"ver":"0.1","info":{"id":"dl3SzN","date":"1685089708","viewed":142,"name":"Greyscale Ordered Dithering 4x4","username":"s_fx","description":"Basic ordered dithering for greyscale image to black and white pixels.\nUses 4x4 Bayer matrix (instead of 8x8 Bayer channel).","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["dither","dithering","bayer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * Greyscale Ordered Dithering 4x4\n * (c) 2023 s.fx\n */\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy; \n    mat4 bayer = mat4(\n        0.0000, 0.5000, 0.1250, 0.6250,\n        0.7500, 0.2500, 0.8750, 0.3750,\n        0.1875, 0.6875, 0.0625, 0.5625,\n        0.9375, 0.4375, 0.8125, 0.3125\n    );\n\n    uv += vec2(iTime * .02);\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    // greyscale pixel by calculating average of all channels\n    float avg = (col.r + col.g + col.b) / 3.;\n    \n    // calculate coord in bayer matrix using modulo (4 as size of matrix)\n    // if greyscale darker than threshold in matrix use black else white\n    fragColor = vec4(bayer[int(fragCoord.x) % 4][int(fragCoord.y) % 4] < avg);\n}","name":"Image","description":"","type":"image"}]}