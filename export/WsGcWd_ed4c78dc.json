{"ver":"0.1","info":{"id":"WsGcWd","date":"1603982921","viewed":295,"name":"intro-get ready for this","username":"jorge2017a1","description":"intro-get ready for this","likes":1,"published":3,"flags":8,"usePreview":0,"tags":["introgetreadyforthis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//modificado por jorgeflores oct-2020\n\n/* Normal Map Stuff */\n/* By: Flyguy */\n/* With help from http://stackoverflow.com/q/5281261 */\n\n// fancified a bit by psonice\n\n#define PI 3.141592\n\n\n vec2 mouse;\n\n\n vec2 surfaceSize;\n vec2 surfacePosition;\n\nvec3 heightmap(vec2 position)\n{\n\tfloat row = floor((position.y-15.)/100.);\n\tif (mod(row, 2.0) < 1.0)\n\t\tposition.x += 50.;\n\t\n\tfloat height = 0.0;\n\t\n   height = (position.x*0.002);\n\t\n    height += clamp((position.y*0.0625),0.0,1.0);\n    \n    \n\theight = clamp(height,0.0,0.5);\n\theight = 1.0 - height;\n        height -= height > 0.0 && height < 0.51 ? (max(sin(position.x * 0.25 + PI * .5) + cos(position.y * .25 - PI *0.5), 0.0125) - 2.0) * 0.85 : 0.1;\n\t\n\treturn vec3(position,height);\n}\n\t\nvec3 n1,n2,n3,n4;\nvec2 size = vec2(-0.4,0.0);\n\n\n\n\n\n// --- access to the image of ascii code c\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.))\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureLod( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), \\\n//                                                                               log2(length(fwidth(U/16.*iResolution.xy))) )\n  #define Cm(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    Cm(83);Cm(111);Cm(117);Cm(110);Cm(100);Cm(32);Cm(105);Cm(110);Cm(115);Cm(105);Cm(100);Cm(101); // message \"Sound inside\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    mouse.x=0.5+0.25*cos(iTime);\n    mouse.y=0.5+0.25*sin(iTime);\n    \n\tvec2 pos = fragCoord.xy;\n\n\tvec3 color = vec3(0.0);\n\t\n\tvec2 off = vec2(pos.x,pos.y-1.0);\n\t\n\tn1 = heightmap(off);\n\t\n\toff = vec2(pos.x-1.0,pos.y);\n\t\n\tn2 = heightmap(off);\n\t\n\toff = vec2(pos.x+1.0,pos.y);\n\t\n\tn3 = heightmap(off);\n\t\n\toff = vec2(pos.x,pos.y+1.0);\n\t\n\tn4 = heightmap(off);\n\t\n\tvec3 va = normalize(vec3(size.xy,n2.z-n3.z));\n\tvec3 vb = normalize(vec3(size.yx,n1.z-n4.z));\n\t\n\tvec3 p2m = vec3(-((pos/iResolution.xy)-mouse.xy)*iResolution.xy,64.0);\t\n\t\n\tvec3 normal = vec3(cross(va,vb));\n\t\n\tcolor = vec3(dot(normal.xyz, p2m)/96.0);\n\t\n\tcolor *= vec3(clamp(1.0-distance(mouse.xy*iResolution.xy,pos)/iResolution.x*2.0,0.0,1.0));\n\t\n    \n    \n      if (iResolution.y<2000.) \n      {\n          float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n    \t  vec3 col = 0.5 + 0.5*cos(iTime+pos.xyx+vec3(0,2,4)); \t      \n          if(c>=0.)\n          {\n           fragColor=vec4(c*col,1.0);\n           return;\n          }\n          \n      }\n\n    \n    \n\tfragColor = vec4( vec3( color ), 1.0 );\n\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n//29-oct-2020\n//---por jorgeflores ----jorge2017a1\n\n//referencia\n//https://www.shadertoy.com/view/wsScWV ......Creado por NonGrate en 2020-04-19\n\n///Referencia  la grande comunidad de usuarios de  Shadertoy... :)\n//Reference the large community of Shadertoy users ... :)\n\n#define PI 3.14159265358979323846\n#define TAU PI*2.\n\n\n#define C  32.703\n#define CS 34.648\n#define D  36.708\n#define DS 38.891\n#define E  41.203\n#define F  43.654\n#define FS 46.249\n#define G  48.999\n#define GS 51.913\n#define A  55.0\n#define AS 58.270\n#define B  61.735\n\n\n// Durations\nconst float WHOLE_NOTE = 1.0;\nconst float HALF_NOTE = 1.0/2.0;\nconst float _4_NOTE = 1.0/4.0;\nconst float _8_NOTE = 1.0/8.0;\nconst float _16_NOTE = 1.0/16.0;\nconst float _32_NOTE = 1.0/32.0;\nconst float DOUBLE_NOTE = 2.0;\n\n\nstruct TNote {\n    // in Hz, see \"common\" tab\n    float note;\n    float octave;\n    float offset; // offset - time in seconds when to start playing note\n    float duration;  // duration of a note (1/4, 1/8, ...), see \"common\" tab\n};\n\n    \n\nfloat n2f(float n)\n{\n    return 440.0*pow(2.0,(n-69.0)/12.0);\n}\n\n\nfloat n2m(float n)\n{\n    return pow(2.0,n/12.0);\n}\n\n\n///-----------------------------------\n\nfloat noise( float x ){return fract(sin(1371.1*x)*43758.5453);}\n//Basic waveforms with note and octave input\nfloat sn(float t, float note, float octave)\n{\n\treturn sin(t*note*exp2(octave)*PI);\n}\n\nfloat saw(float t, float note, float octave)\n{\n\treturn fract(t*note*exp2(octave-1.))-0.5;\n}\n\nfloat tri(float t, float note, float octave)\n{\n\treturn (abs(fract(t*note*exp2(octave-1.))-0.5)*2.-0.5)*2.;\n}\n\nfloat sqr(float t, float note, float octave)\n{\n\treturn step(fract(t*note*exp2(octave-1.)), 0.5)-0.5;\n}\n///-----------------------------------\n\nconst float t2 =6.5;\n\nconst TNote[] notes = TNote[] \n    (\n    //-------N1\n    TNote(E, 5.0, 0.0, _4_NOTE),\n    TNote(B, 4.0, 0.0, _4_NOTE),\n    TNote(E, 4.0, 0.0, _4_NOTE),\n\n        \n    TNote(E, 5.0, 0.5, _4_NOTE),\n    TNote(B, 4.0, 0.5, _4_NOTE),\n    TNote(E, 4.0, 0.5, _4_NOTE),\n        \n    TNote(E, 5.0, 1.0, _4_NOTE),\n    TNote(B, 4.0, 1.0, _4_NOTE),\n    TNote(E, 4.0, 1.0, _4_NOTE),\n    ///------------\n    //----------N2\n    TNote(A, 4.0, 1.5, _4_NOTE),\n    TNote(E, 4.0, 1.5, _4_NOTE),\n    TNote(A, 3.0, 1.5, _4_NOTE),\n    \n    TNote(A, 4.0, 2.0, _4_NOTE),\n    TNote(E, 4.0, 2.0, _4_NOTE),\n    TNote(A, 3.0, 2.0, _4_NOTE),\n        \n    TNote(B, 4.0, 2.5, _4_NOTE),\n    TNote(F, 4.0, 2.5, _4_NOTE),\n    TNote(B, 3.0, 2.5, _4_NOTE),\n        \n    TNote(B, 4.0, 3.0, _4_NOTE),\n    TNote(F, 4.0, 3.0, _4_NOTE),\n    TNote(B, 3.0, 3.0, _4_NOTE),\n    ///------------\n    ///---------N3\n    TNote(E, 5.0, 3.5, _4_NOTE),\n    TNote(B, 4.0, 3.5, _4_NOTE),\n    TNote(E, 4.0, 3.5, _4_NOTE),\n\n        \n    TNote(E, 5.0, 4.0, _4_NOTE),\n    TNote(B, 4.0, 4.0, _4_NOTE),\n    TNote(E, 4.0, 4.0, _4_NOTE),\n        \n    TNote(E, 5.0, 4.5, _4_NOTE),\n    TNote(B, 4.0, 4.5, _4_NOTE),\n    TNote(E, 4.0, 4.5, _4_NOTE),\n    ///------------\n    //---------N4\n    TNote(G, 5.0, 5.0, _4_NOTE),\n    TNote(D, 5.0, 5.0, _4_NOTE),\n    TNote(G, 4.0, 5.0, _4_NOTE),\n        \n    TNote(G, 5.0, 5.5, _4_NOTE),\n    TNote(D, 5.0, 5.5, _4_NOTE),\n    TNote(G, 4.0, 5.5, _4_NOTE),\n        \n    TNote(A, 5.0, 6.0, _4_NOTE),\n    TNote(E, 5.0, 6.0, _4_NOTE),\n    TNote(A, 4.0, 6.0, _4_NOTE),\n        \n    TNote(B, 5.0, 6.5, _4_NOTE),\n    TNote(F, 5.0, 6.5, _4_NOTE),\n    TNote(B, 4.0, 6.5, _4_NOTE),\n    //-------------------\n    //---------N5\n    TNote(E, 5.0, 7.0, _4_NOTE),\n    TNote(B, 4.0, 7.0, _4_NOTE),\n    TNote(E, 4.0, 7.0, _4_NOTE),\n        \n    TNote(E, 5.0, 7.5, _4_NOTE),\n    TNote(B, 4.0, 7.5, _4_NOTE),\n    TNote(E, 4.0, 7.5, _4_NOTE),\n        \n    TNote(E, 5.0, 8.0, _4_NOTE),\n    TNote(B, 4.0, 8.0, _4_NOTE),\n    TNote(E, 4.0, 8.0, _4_NOTE),\n        \n    //-------------------\n    //---------N6\n    TNote(A, 4.0, 8.5, _4_NOTE),\n    TNote(E, 4.0, 8.5, _4_NOTE),\n    TNote(A, 3.0, 8.5, _4_NOTE),\n\n    TNote(A, 4.0, 9.0, _4_NOTE),\n    TNote(E, 4.0, 9.0, _4_NOTE),\n    TNote(A, 3.0, 9.0, _4_NOTE),\n        \n    TNote(B, 4.0, 9.5, _4_NOTE),\n    TNote(F, 4.0, 9.5, _4_NOTE),\n    TNote(B, 3.0, 9.5, _4_NOTE),\n        \n    TNote(B, 4.0, 10.0, _4_NOTE),\n    TNote(F, 4.0, 10.0, _4_NOTE),\n    TNote(B, 3.0, 10.0, _4_NOTE),\n     //----------\n    //-------N7\n    TNote(E, 5.0, 10.5, _4_NOTE),\n    TNote(B, 4.0, 10.5, _4_NOTE),\n    TNote(E, 4.0, 10.5, _4_NOTE),\n\n        \n    TNote(E, 5.0, 11.0, _4_NOTE),\n    TNote(B, 4.0, 11.0, _4_NOTE),\n    TNote(E, 4.0, 11.0, _4_NOTE),\n        \n    TNote(E, 5.0, 11.5, _4_NOTE),\n    TNote(B, 4.0, 11.5, _4_NOTE),\n    TNote(E, 4.0, 11.5, _4_NOTE),\n    ///------------    \n    //-------N8\n    TNote(G, 5.0, 12., _4_NOTE),\n    TNote(D, 5.0, 12., _4_NOTE),\n    TNote(G, 4.0, 12., _4_NOTE),\n        \n    TNote(G, 5.0, 12.5, _4_NOTE),\n    TNote(D, 5.0, 12.5, _4_NOTE),\n    TNote(G, 4.0, 12.5, _4_NOTE),\n    \n    TNote(A, 5.0, 13., _4_NOTE),\n    TNote(E, 5.0, 13., _4_NOTE),\n    TNote(A, 4.0, 13., _4_NOTE),\n\n    TNote(A, 5.0, 13.5, _4_NOTE),\n    TNote(E, 5.0, 13.5, _4_NOTE),\n    TNote(A, 4.0, 13.5, _4_NOTE),\n     //-------N9\n    TNote(E, 5.0, 14.0, _4_NOTE),\n    TNote(B, 4.0, 14.0, _4_NOTE),\n    TNote(E, 4.0, 14.0, _4_NOTE),\n\n        \n    TNote(E, 5.0, 14.5, _4_NOTE),\n    TNote(B, 4.0, 14.5, _4_NOTE),\n    TNote(E, 4.0, 14.5, _4_NOTE),\n        \n    TNote(E, 5.0, 15.0, _4_NOTE),\n    TNote(B, 4.0, 15.0, _4_NOTE),\n    TNote(E, 4.0, 15.0, _4_NOTE),\n    ///------------\n     //----------N10\n    TNote(A, 4.0, 15.5, _4_NOTE),\n    TNote(E, 4.0, 15.5, _4_NOTE),\n    TNote(A, 3.0, 15.5, _4_NOTE),\n    \n    TNote(A, 4.0, 16.0, _4_NOTE),\n    TNote(E, 4.0, 16.0, _4_NOTE),\n    TNote(A, 3.0, 16.0, _4_NOTE),\n        \n    TNote(B, 4.0, 16.5, _4_NOTE),\n    TNote(F, 4.0, 16.5, _4_NOTE),\n    TNote(B, 3.0, 16.5, _4_NOTE),\n        \n    TNote(B, 4.0, 17.0, _4_NOTE),\n    TNote(F, 4.0, 17.0, _4_NOTE),\n    TNote(B, 3.0, 17.0, _4_NOTE),\n    ///------------\n    //-------N11\n    TNote(E, 5.0, 17.5, _4_NOTE),\n    TNote(B, 4.0, 17.5, _4_NOTE),\n    TNote(E, 4.0, 17.5, _4_NOTE),\n\n        \n    TNote(E, 5.0, 18., _4_NOTE),\n    TNote(B, 4.0, 18., _4_NOTE),\n    TNote(E, 4.0, 18., _4_NOTE),\n        \n    TNote(E, 5.0, 18.5, _4_NOTE),\n    TNote(B, 4.0, 18.5, _4_NOTE),\n    TNote(E, 4.0, 18.5, _4_NOTE),\n    ///------------\n    ///------------\n    //---------N12\n    TNote(G, 5.0, 19.0, _4_NOTE),\n    TNote(D, 5.0, 19.0, _4_NOTE),\n    TNote(G, 4.0, 19.0, _4_NOTE),\n        \n    TNote(G, 5.0, 19.5, _4_NOTE),\n    TNote(D, 5.0, 19.5, _4_NOTE),\n    TNote(G, 4.0, 19.5, _4_NOTE),\n        \n    TNote(A, 5.0, 20.0, _4_NOTE),\n    TNote(E, 5.0, 20.0, _4_NOTE),\n    TNote(A, 4.0, 20.0, _4_NOTE),\n        \n    TNote(B, 5.0, 20.5, _4_NOTE),\n    TNote(F, 5.0, 20.5, _4_NOTE),\n    TNote(B, 4.0, 20.5, _4_NOTE)\n    //-------------------\n    \n);\n\n\nvec2 noteFreq(TNote note, float time) {\n    \n    // 6.2831 = 2pi\n    // exp() goes exponentially down to fade out the volume\n    //return vec2(sin(6.2831 * note.frequency * time) * exp(-1.0/note.duration * (time - note.offset)));\n    float n1=saw(time,note.note, note.octave)* exp(-1.0/note.duration * (time - note.offset));\n    \n        \n    return vec2(n1);\n}\n\n\nvec2 mainSound( in int samp,float time) \n{\n    \n    \n    \n    vec2 result;\n    \n    // time counts in seconds\n    // (time - x) is required, because we want to \"reset\" exp() function\n    // otherwise the output of exp() function will go down globally\n    // and we'll hear only first note\n\n    for (int i = 0; i < notes.length(); i++) {\n        TNote note = notes[i];\n        float x = float(i) * 1.0;\n        if (time > note.offset) \n        {\n            result += noteFreq(note, time);\n            \n        }\n    }\n\n\n    \n    return result;\n}","name":"Sound","description":"","type":"sound"}]}