{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define millis iTime\n#define width  iResolution.x\n#define height iResolution.y\n\nconst int points = 10;\n\nfloat a = 11.21219;\nfloat b = 21.66294;\n\nvec4 hsv_to_rgb(float h, float s, float v, float a)\n{\n\tfloat c = v * s;\n\th = mod((h * 6.0), 6.0);\n\tfloat x = c * (1.0 - abs(mod(h, 2.0) - 1.0));\n\tvec4 color;\n \n\tif (0.0 <= h && h < 1.0) {\n\t\tcolor = vec4(c, x, 0.0, a);\n\t} else if (1.0 <= h && h < 2.0) {\n\t\tcolor = vec4(x, c, 0.0, a);\n\t} else if (2.0 <= h && h < 3.0) {\n\t\tcolor = vec4(0.0, c, x, a);\n\t} else if (3.0 <= h && h < 4.0) {\n\t\tcolor = vec4(0.0, x, c, a);\n\t} else if (4.0 <= h && h < 5.0) {\n\t\tcolor = vec4(x, 0.0, c, a);\n\t} else if (5.0 <= h && h < 6.0) {\n\t\tcolor = vec4(c, 0.0, x, a);\n\t} else {\n\t\tcolor = vec4(0.0, 0.0, 0.0, a);\n\t}\n \n\tcolor.rgb += v - c;\n \n\treturn color;\n}\n\nfloat my_fib(float _max){\n\tfloat _a = b;\n\tfloat _b = b + a;\n\ta = _a;\n\tb = _b;\n\treturn float(mod(b, 1.0)) * _max;\n}\n\nfloat rand(float _max){\n\treturn abs(sin(my_fib(14.123)+10.0*sin(millis*0.02)))*_max;\n}\n\nfloat sq(float n){\n\treturn n*n;\n}\n\nbool in_circle(vec2 cur, float r, vec4 center){\n\treturn sq(cur.x - center.x) + sq(cur.y - center.y) < sq(r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat point_x[points];\n\tfloat point_y[points];\n\tfloat point_r[points];\n\n\tfor(int i=0; i<points; i++){\n\t\tpoint_x[i] = rand(1.0)*(width-50.0)+25.0;\n\t\tpoint_y[i] = rand(1.0)*(height-50.0)+25.0;\n\t\tpoint_r[i] = rand(1.0)*(40.0) + 10.0;\n\t}\n\n\tfloat ms = millis;\n\n\tvec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n\tvec4 red = vec4(1.0, 0.0, 0.0, 1.0);\n\tvec2 cur = fragCoord;\n\tbool flag = false;\n\n\tfor(int i=0; i<points; i++){\n\t\tfloat rate = float(i)/float(points);\n\t\tfloat shift = 10.0*rate;\n\t\tfloat rad = 20.0;\n\n\t\tif(in_circle(cur, point_r[i], vec4(point_x[i] + sin(ms+shift)*rad, point_y[i] + sin(ms+shift)*rad, 0.0, 0.0))){\n\t\t\tfragColor = hsv_to_rgb(rate,1.0,1.0,1.0);\n\t\t\tflag = true;\n\t\t}\n\t}\n\n\tif(flag == false){\n\t\tfragColor = white;\n\t}\n\n\treturn;\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdlSWl","date":"1407851919","viewed":196,"name":"Bounding Colorful Balls","username":"atmarksharp","description":"Balls are controlled by random with fibonacci.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colorful","random","ball"],"hasliked":0,"parentid":"","parentname":""}}