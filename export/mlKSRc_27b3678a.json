{"ver":"0.1","info":{"id":"mlKSRc","date":"1686263152","viewed":31,"name":"iridescent concentric","username":"ctwm","description":"exploring creative coding assisted by ai","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hypnotic","iridescence","ai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float time = iTime * 0.3;\n\n    // Polar coordinates\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n\n    // Iridescent effect\n    float iridescence = cos(theta * 10.0 - time) * 0.5 + 0.5;\n\n    // Color gradient\n    vec3 color = vec3(abs(sin(iridescence * PI)), abs(sin((iridescence + 0.33) * PI)), abs(sin((iridescence + 0.67) * PI)));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}