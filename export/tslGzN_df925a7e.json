{"ver":"0.1","info":{"id":"tslGzN","date":"1545301763","viewed":109,"name":"Pythagorean triples","username":"Ultraviolet","description":"Shows pythagorean triples, ie triples (a,b,sqrt(a²+b²)) s.t. sqrt(a²+b²) is an integer.\n\nRed dots are prime triples, and black ones are composites.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["arithmetics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from FabriceNeyret2 : https://www.shadertoy.com/view/4s2Bzz\nint gcd (int a, int b) {    // Euclid algorithm:   gcd(a,b) = gcd(b, a%b) ; gcd(a,0) = a\n    int c;             \n    while ( b>0 && (c = a%b) != a ) a=b, b=c; \n    return b==0 ? a : c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 ifg = ivec2(fragCoord);\n    int sum = ifg.x*ifg.x+ifg.y*ifg.y;\n    int sqrt_sum_i = int(sqrt(float(sum)));\n    int diff = sqrt_sum_i*sqrt_sum_i - sum;\n    float diff_f = abs(float(diff));\n    \n\n    fragColor = vec4(diff_f);\n    \n    if(gcd(max(ifg.x, ifg.y), min(ifg.x, ifg.y)) == 1)\n        fragColor.x += 1.;\n    \n    \n    fragColor = clamp(fragColor, 0., 1.);\n    \n    \n    if(ifg.x == int(iResolution.y))\n        fragColor *= .8;\n}","name":"Image","description":"","type":"image"}]}