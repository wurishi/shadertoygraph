{"ver":"0.1","info":{"id":"mtSfDc","date":"1694553659","viewed":30,"name":"ASDASD","username":"Dogika","description":"ASDAS","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["asd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define shape 1.0\n#define shape2 1.0\n#define layers 6.0\n#define b_w false\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat dist(vec2 vector, float a) {\n    float powerVector = pow(abs(vector.x), a) + pow(abs(vector.y), a);\n    return pow(powerVector, 1.0 / a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor;\n    float prevD = 1.;\n    \n    for (float i = 0.0; i < layers; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n        float d = dist(uv, 1.0) * pow(prevD*1., dist(uv0, 1.0));\n        \n        d = sin(d*8. + iTime);\n        d = abs(d);\n        d = pow(0.1 / d, 1.4);\n        \n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n        \n        finalColor += col * d;\n        prevD = d;\n    }\n    \n    if(b_w) {\n        finalColor = vec3(length(finalColor));\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}