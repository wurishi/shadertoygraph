{"ver":"0.1","info":{"id":"MXBXDV","date":"1711092660","viewed":93,"name":"amagi: glitter ring","username":"amagitakayosi","description":"hey","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float light;\n\n#define opU(a, b) (a.x < b.x ? a : b)\n\nmat2 rot(float t) {\n    return mat2(cos(t), -sin(t), sin(t), cos(t));\n}\n\nfloat sdTorus(vec3 p, vec2 r) {\n    float l = length(p.xz) - r.x;    \n\n    return length(vec2(l, p.y)) - r.y;\n}\n\n\nvec2 map(vec3 p) {\n    p.xy *= rot(p.z * 0.3 + 0.4);\n    p.zy *= rot(p.x * 0.4);\n\n    vec2 hit = vec2(999, -1);\n\n    float ds = length(p)-1.5;\n    light += exp(ds * -2.);\n    hit = opU(hit, vec2(ds, 2.));\n    hit = opU(hit, vec2(sdTorus(p, vec2(3.3, 0.3)), 1.));\n\n    return hit;\n}\n\nvec3 getNormal(vec3 p) {\n    vec2 d = vec2(0, 1) * 0.0003;\n    return normalize(vec3(\n        map(p + d.yxx).x - map(p - d.yxx).x,\n        map(p + d.xyx).x - map(p - d.xyx).x,\n        map(p + d.xxy).x - map(p - d.xxy).x\n    ));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec2 p = uv * 2. - 1.;\n    p.x *= iResolution.x / iResolution.y;\n    \n    \n    float pulse = sin(iTime * 2.) * 0.5 + 0.5;\n//    pulse = smoothstep(0., 1., smoothstep(0., 1., pulse));\n    vec3 lc = vec3(0.020,0.314,1.000);\n        \n    \n    vec3 ro = vec3(0, 0, 5.6);\n    vec3 rd = normalize(vec3(p, -1));\n    \n    vec3 rp = vec3(0);\n    vec2 hit = vec2(0);\n    vec2 surf = vec2(0);\n    float t = 0.;    \n    float fi = -1.;\n\n    for (int i = 0; i < 99; i++) {\n        rp = ro + rd * t;\n        hit = map(rp);\n                \n        if (hit.x < 0.001) {\n            fi = float(i);\n            surf = hit;\n            break;\n        }        \n\n        t += hit.x * 0.5;\n    }\n\n    vec3 col = vec3(0);\n    vec3 n = getNormal(rp);            \n    if (surf.y == 1.) {    \n        col += n * 0.4;\n\n        float edge = clamp(dot(rd, n) + 1., 0., 1.);\n        col += mix(vec3(.8, .8, .3), vec3(0, .2, 1), edge);        \n        \n        col -= smoothstep(0.54, 0.6, edge) * step(edge, 0.71);\n        col += smoothstep(0.68, 0.74, edge) * vec3(1,.7,0);\n        \n        // glitter\n        vec3 bn = texture(iChannel0, p * 0.8).rgb;       \n        col += smoothstep(0.7, 0.73, dot(bn, vec3(sin(iTime), sin(iTime + 2.), sin(iTime + 4.))) * 0.5 + 0.5) * 0.4;\n        bn = texture(iChannel0, rp.xy * 0.2).rgb;       \n        col += smoothstep(0.7, 0.73, dot(bn, vec3(sin(iTime), sin(iTime + 2.), sin(iTime + 4.))) * 0.5 + 0.5) * 0.4;        \n\n        col -= fi * 0.017;\n    }\n    else if (surf.y == 2.) {\n        col += vec3(.2);\n        \n        \n        float ll = max(0., dot(n, normalize(vec3(-1.2, 2.1, 3.1))));\n        col += ll * 0.2;        \n        col += pow(ll, 200.);\n               \n//        col += light * lc * puse;                \n        col -= fi * 0.008;        \n    } else {\n        col += light * 0.01 * pulse;        \n    }\n\n    \n\n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}