{"ver":"0.1","info":{"id":"DtSyzz","date":"1691385233","viewed":31,"name":"Slicing the colour space cube","username":"WhiteWalrus518","description":"Click the screen","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sfsfasf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define res iResolution\n#define pi 3.14159265828\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 pv = 4.0 * (fragCoord - 0.5 * res.xy) / res.x;\n    \n    float arg  = atan(pv.x, pv.y);\n    float lightness =  iMouse.y / res.y;\n    float saturation = length(pv);\n    \n    vec3 hueDir = vec3(cos(arg), \n                       cos(arg + 2.0 * pi / 3.0),\n                       cos(arg + 4.0 * pi / 3.0));\n    hueDir *= 0.81649658092; // sqrt 2/ sqrt3\n    \n    if(iMouse.xy==vec2(0)){\n        lightness = sin(iTime) * sin(iTime);\n    }\n    \n    vec3 col = vec3(1.0) * lightness + hueDir * saturation;\n    \n    if( 1.0 < max(col.r, max(col.g, col.b)) ){\n        col = vec3(0.0);\n    }\n    \n    if( min(col.r, min(col.g, col.b)) < 0.0 ){\n        col = vec3(0.0);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}