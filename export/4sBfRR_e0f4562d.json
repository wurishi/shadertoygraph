{"ver":"0.1","info":{"id":"4sBfRR","date":"1499004218","viewed":520,"name":"Cubic lens distortion","username":"Adflixit","description":"Cubic lens distortion by Francois Tarlier.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["distortion","lens"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n    float k = -1. * m.x, kcube = .5 * m.y;\n    float r2 = (uv.x - .5) * (uv.x - .5) + (uv.y - .5) * (uv.y - .5);\n    float f = 0.;\n    if (kcube == 0.) f = 1. + r2 * k;\n    else f = 1. + r2 * (k + kcube * sqrt(r2));\n    float x = f * (uv.x - .5) + .5;\n    float y = f * (uv.y - .5) + .5;\n    vec3 inputDistort = texture(iChannel0, vec2(x, y)).rgb;\n\tfragColor = vec4(inputDistort, 1.);\n}","name":"Image","description":"","type":"image"}]}