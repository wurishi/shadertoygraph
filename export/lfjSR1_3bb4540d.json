{"ver":"0.1","info":{"id":"lfjSR1","date":"1706052768","viewed":64,"name":"black hole 9","username":"wainggan","description":"for a game","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"McjSR1","parentname":"oooo you want to burn your house"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random(vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nmat2 rotate(float r) {\n    return mat2(\n        cos(r), -sin(r),\n        sin(r), cos(r)\n    );\n}\n\nfloat wave(float a, float b, float time) {\n    float t = sin(time) / 2.0 + 0.5;\n    return mix(a, b, t);\n}\n\n#define PI 3.141593238\n\n\nfloat spiral(vec2 p, float scale, float dir, float time) {\n    float d = (atan(p.y, p.x) + PI) / (PI * 2.0);\n    float l = length(p) * scale;\n\n    float o = mod(l + d * dir - time, 1.0);\n    \n    return o;\n}\n\nvec3 position(vec2 uv) {\n    float len = length(uv);\n    \n    vec3 col_0 = vec3(spiral(uv, wave(1.0, 2.0, iTime / 3.0), 1.0, -iTime / 3.02));\n    vec3 col_1 = vec3(spiral(uv, wave(1.5, 2.5, iTime / 4.0), -1.0, -iTime / 4.7));\n    vec3 col_2 = vec3(spiral(uv, wave(3.0, 4.0, iTime / 2.0), 1.0, -iTime / 5.0));\n    vec3 col_3 = vec3(spiral(uv, wave(1.0, 4.0, iTime / 6.0), -1.0, iTime / 6.3));\n    \n    col_0 *= vec3(1.0, 0.0, 1.0);\n    col_1 *= vec3(0.0, 1.0, 1.0);\n    col_2 *= vec3(0.8, 0.3, 1.0);\n    col_3 *= vec3(1.0, 0.4, 0.3);\n    \n    vec3 col = col_0 + col_1 + col_2 + col_3;\n    \n    col /= 5.0 - len * 2.0;\n    \n    /*\n    col /= sqrt(col.x * col.x + col.y * col.y + col.z * col.z);\n    col = pow(col, vec3(2.0));\n    */\n    \n    col = smoothstep(0.5, 0.52, col);\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    float len = length(uv);\n    \n    float r = random(uv);\n    \n    float direction = r * 3.1415 * 2.0;\n    direction += (sin(iTime / 2.0 + r * 3.141 * 2.0) / 2.0 + 0.5);\n    \n    vec2 off = vec2(wave(0.3, 0.5, iTime / 5.0), 0.0) * rotate(direction);\n    uv += off * pow(len / 8.0, 3.0);\n    \n    \n    vec3 col = position(uv);\n    \n    fragColor = vec4(col,1.0);\n    \n}\n\n","name":"Image","description":"","type":"image"}]}