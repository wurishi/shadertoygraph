{"ver":"0.1","info":{"id":"ssSXDm","date":"1620353895","viewed":300,"name":"Persian rug","username":"jarble","description":"This formula generates a pattern that resembles a Persian rug.\nMy [url=https://www.shadertoy.com/view/Nst3R4]\"Persian rug patterns\"[/url] generator is much better than this one.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fractal","rug"],"hasliked":0,"parentid":"7dSXDm","parentname":"Fractal maze"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//change these constants to get different patterns!\n#define c2 0.0\n\n#define c1 vec4(2.0+c2,2.5+c2,1.4,0)\n//#define c1 vec4(2.0+c2,1.5+c2,1.4,0)\n//#define c1 vec4(1.0,1.5,1.4,0)\n//#define c1 vec4(7.0,5.0,1.4,0)\n//#define c1 vec4(7.0,9.0,1.4,0)\n//#define c1 vec4(5.0,5.5,1.4,0)\n\n\n\nvec2 triangle_wave(vec2 a,float scale){\n    return abs(fract((a+c1.xy)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;  \n    float t1 = 4.5;\n    float offset = .18;\n    float scale2 = 1.05;\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    for(int c=0;c<3;c++){\n        float scale = c1.z;\n        for(int i=0;i<9;i++)\n        {\n            uv = triangle_wave(uv+offset,scale)+triangle_wave(uv.yx,scale);\n            //if(uv.x > uv.y) uv *= scale;\n\n            uv.x *= -1.0;\n            uv = triangle_wave(uv+c1.w,scale);\n            scale /= scale2+col.x;\n            offset *= scale2;\n            uv.y *= -1.0;\n            uv = uv.yx;\n            //uv = uv.yx;\n\n        }\n     col[c] = fract((uv.x)-(uv.y));\n\t}\n    \n    fragColor = vec4(vec3(col),1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}