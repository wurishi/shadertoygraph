{"ver":"0.1","info":{"id":"3ddBz8","date":"1604352428","viewed":125,"name":"Wave Equation + Interferences","username":"Dutracgi","description":"Simple demonstration :) ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["wave","array","physics","phased"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//Coordenadas da tela (-1 a 1) - Screen Coords (-1 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    //Fundo preto - Black backgound\n    vec3 col = vec3(0);\n    \n    //Comprimento de onda - Wavelength\n    float WL = 64.; \n    \n    //Posição do segundo gerador - Second Generator position\n    float a = 2.0;\n    \n     //Equação da onda - Wave Equation\n    \n    //(0,0) //Amplitude // Onda - Wave //Tempo - Time //Atenuação (quadrado da distancia) - Attenuation (distance squared)\n    float w0 = 1.0 * sin( length(uv*WL) -4.*iTime ) * 1.0-(length(uv)*length(uv));\n    \n    //(a,0) //Amplitude // Onda - Wave //Tempo - Time //Atenuação (quadrado da distancia) - Attenuation (distance squared)\n    float w1 = 1.0 * sin( length(vec2(a,0.)+uv*WL) -4.*iTime ) * 1.0-(length(uv)*length(uv));\n    \n    //(2a,0) //Amplitude // Onda - Wave //Tempo - Time //Atenuação (quadrado da distancia) - Attenuation (distance squared)\n    float w2 = 1.0 * sin( length(vec2(2.*a,0.)+uv*WL) -4.*iTime ) * 1.0-(length(uv)*length(uv));\n    \n    col = vec3(w0,0.0,0.0);  //Onda 0,0 Vermelho - Red Wave 0,0\n    col += vec3(0.0,w1,0.0);//Onda a,0 Verde - Green Wave a,0\n    col += vec3(0.0,0.0,w2);//Onda 2a,0 Azul - Blue Wave 2a,0\n    \n    //Branco = Interferencia - White = Interference\n    \n    //Descomente aqui pra ver a soma - Uncoment Here to see final result\n    //col = vec3((w0+w1+w2)/3.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}