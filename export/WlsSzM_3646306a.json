{"ver":"0.1","info":{"id":"WlsSzM","date":"1562439107","viewed":2900,"name":"Stained Lights","username":"104","description":"saturday 2D fun","likes":60,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// credits: Dave_Hoskins Hash functions: https://www.shadertoy.com/view/4djSRW\n\nconst float PI = 3.141592654;\n\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n// returns { RGB, dist to edge (0 = edge, 1 = center) }\nvec4 disco(vec2 uv) {\n    float v = abs(cos(uv.x * PI * 2.) + cos(uv.y *PI * 2.)) * .5;\n    uv.x -= .5;\n    vec3 cid2 = hash32(vec2(floor(uv.x - uv.y), floor(uv.x + uv.y))); // generate a color\n    return vec4(cid2, v);\n}\n\nvoid mainImage( out vec4 o, in vec2 fragCoord)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord / R;\n    uv.x *= R.x / R.y; // aspect correct\n\n    float t = iTime * .6; //t = 0.;\n    uv *= 8.;\n    uv -= vec2(t*.5, -t*.3);\n    \n    o = vec4(1);\n    for(float i = 1.; i <= 4.; ++i) {\n        uv /= i*.9;\n        vec4 d = disco(uv);\n        float curv = pow(d.a, .44-((1./i)*.3));\n        curv = pow(curv, .8+(d.b * 2.));\n        o *= clamp(d * curv,.35, 1.);\n        uv += t*(i+.3);\n    }\n    \n    // post\n    o = clamp(o,.0,1.);\n    vec2 N = (fragCoord / R )- .5;\n    o = 1.-pow(1.-o, vec4(30.));// curve\n    o.rgb += hash32(fragCoord + iTime).r*.07;//noise\n    o *= 1.1-smoothstep(.4,.405,abs(N.y));\n    o *= 1.0-dot(N,N*1.7);// vingette\n    o.a = 1.;\n}\n\n\n","name":"Image","description":"","type":"image"}]}