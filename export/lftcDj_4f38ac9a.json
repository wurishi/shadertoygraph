{"ver":"0.1","info":{"id":"lftcDj","date":"1731202567","viewed":71,"name":"Simple Outline and Posterize","username":"JesseWalker","description":"Simple outline and posterization effect","likes":0,"published":1,"flags":34,"usePreview":0,"tags":["line","webcam","outline","posterize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Play with these numbers\nfloat outlineRadius = 5.0;\nfloat posterizeSteps = 10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 c = texture(iChannel0, uv);\n    float avg = (c.r + c.g + c.b) / 3.0;\n    \n    for (float x = -outlineRadius; x <= outlineRadius; x++)\n    {\n        for (float y = -outlineRadius; y <= outlineRadius; y++)\n        {\n            vec2 nUV = fragCoord / (iResolution.xy - vec2(x, y));\n            float nAvg = texture(iChannel0, nUV).a;\n\n            if (avg < nAvg - 0.05 )\n            {\n                c.rgb = vec3(0.0, 0.0, 0.0); // Black outline\n                //c.rgb = vec3(1.0, 1.0, 1.0); // White outline\n            }\n            \n            // Invert a channel\n            //c.r *= -1.0;\n            //c.r += 1.0;\n            \n            // Filter colors\n            //c.r *= 0.8;\n            //c.g *= 0.8;\n            //c.b *= 0.8;\n\n            // Posterize\n            c.rgb *= posterizeSteps;\n            c = round(c);\n            c /= posterizeSteps;\n        }\n    }\n    \n    fragColor = c;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 c = texture(iChannel0, uv);\n    c.a = (c.r + c.g + c.b) / 3.0;\n    fragColor = c;\n}","name":"Buffer A","description":"","type":"buffer"}]}