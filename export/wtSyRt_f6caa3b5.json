{"ver":"0.1","info":{"id":"wtSyRt","date":"1595128018","viewed":368,"name":"inferno palette","username":"Carandiru","description":"Fork of \"Dark clouds\" by grumdrig. https://shadertoy.com/view/llGcD3\n\n3d rotation of noise attempt, slow rise","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["clouds","inferno"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Dark clouds\" by grumdrig. https://shadertoy.com/view/llGcD3\n// 2020-07-18 04:59:04\n\n\n\n\n\n\n\n        \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float w;\n    \n    w = fract(iTime);\n    \n    float color;\n    \n    color = mix(texture(iChannel0, uv).r, texture(iChannel1, uv).r, w); \n\n\tfragColor = vec4(inferno(abs(color)), 1.0f);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define INTERVAL (1.0f/120.0f)\n#define SPEED (2.0f)\n#define tT (12.0f + iTime*0.5)\n\n#define fma(a,b,c) ((a) * (b) + (c))\n\nvec3 v3_rotate_azimuth(in vec3 p, in float angle)\n{\n    vec2 inOrient = vec2(cos(angle), sin(angle));\n    \n\treturn vec3(fma(p.x, inOrient.x, -p.y * inOrient.y),\n\t\t\t\tfma(p.x, inOrient.y, p.y * inOrient.x),\n\t\t\t\tp.z);\n}\n\nvec3 curp(vec3 v0, float t, vec3 v1) {\n    t = t * t * (3.0 - 2.0 * t);\n    return mix(v0, v1, t);\n}\n\nvec3 lerp(vec3 v0, float t, vec3 v1) {\n    return mix(v0, v1, t);\n}\n\n// https://www.shadertoy.com/view/WlfXRN\n\nvec3 inferno(float t) {\n\n    const vec3 c0 = vec3(0.0002189403691192265, 0.001651004631001012, -0.01948089843709184);\n    const vec3 c1 = vec3(0.1065134194856116, 0.5639564367884091, 3.932712388889277);\n    const vec3 c2 = vec3(11.60249308247187, -3.972853965665698, -15.9423941062914);\n    const vec3 c3 = vec3(-41.70399613139459, 17.43639888205313, 44.35414519872813);\n    const vec3 c4 = vec3(77.162935699427, -33.40235894210092, -81.80730925738993);\n    const vec3 c5 = vec3(-71.31942824499214, 32.62606426397723, 73.20951985803202);\n    const vec3 c6 = vec3(25.13112622477341, -12.24266895238567, -23.07032500287172);\n\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec3 rand(vec3 xyz) {\n    \n    return\n    \n     fract(vec3(sin(dot(xyz, vec3(43.238, 27.874, 57.982))),\n    \t\t\t\t  sin(dot(xyz, vec3(91.922, 11.838, 77.133))),\n    \t\t\t\t  sin(dot(xyz, vec3(43.238, 27.874, 57.982))))*\n                 vec3(9283.9502,8329.9128,3201.1984));\n}\n\nvec3 noise(vec3 xyz) {\n    vec3 v0 = floor(xyz);\n    vec3 f = xyz - v0;\n    return\n      curp(curp(lerp(rand(v0),               f.z, rand(v0 + vec3(0,0,1))),\n                f.y,\n                lerp(rand(v0 + vec3(0,1,0)), f.z, rand(v0 + vec3(0,1,1)))),\n           f.x,\n           curp(lerp(rand(v0 + vec3(1,0,0)), f.z, rand(v0 + vec3(1,0,1))),\n                f.y,\n                lerp(rand(v0 + vec3(1,1,0)), f.z, rand(v0 + vec3(1,1,1)))));\n}\n\nvec3 simplex(vec3 xyz, int octaves) {\n    float a = 1.0;\n    vec3 result = vec3(0);\n    for (int o = 1 << octaves; o > 0; o >>= 1, a /= 2.) {\n        result += (2. * noise(xyz / float(o)) - 1.) * a;\n    }\n    return result;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x - vec2(0.5, 0.5 * iResolution.y / iResolution.x);\n    \n    vec3 xyz = v3_rotate_azimuth(vec3((120.0) * uv, tT).xzy, (((tT)) * SPEED) );\n    vec3 per = simplex(xyz, 5);\n    float a = dot(normalize(per), normalize(vec3(uv, 0.1)));\n    a = 1. * pow(a, 3.);\n    float color;\n    \n    color = mix(a, texture(iChannel0, fragCoord/iResolution.xy).r, fract(tT));\n    fragColor.rgb = vec3(color);\n    fragColor.a = 1.0;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nvec3 rand(vec3 xyz) {\n    \n    return\n    \n     fract(vec3(sin(dot(xyz, vec3(43.238, 27.874, 57.982))),\n    \t\t\t\t  sin(dot(xyz, vec3(91.922, 11.838, 77.133))),\n    \t\t\t\t  sin(dot(xyz, vec3(43.238, 27.874, 57.982))))*\n                 vec3(9283.9502,8329.9128,3201.1984));\n}\n\nvec3 noise(vec3 xyz) {\n    vec3 v0 = floor(xyz);\n    vec3 f = xyz - v0;\n    return\n      curp(curp(lerp(rand(v0),               f.z, rand(v0 + vec3(0,0,1))),\n                f.y,\n                lerp(rand(v0 + vec3(0,1,0)), f.z, rand(v0 + vec3(0,1,1)))),\n           f.x,\n           curp(lerp(rand(v0 + vec3(1,0,0)), f.z, rand(v0 + vec3(1,0,1))),\n                f.y,\n                lerp(rand(v0 + vec3(1,1,0)), f.z, rand(v0 + vec3(1,1,1)))));\n}\n\nvec3 simplex(vec3 xyz, int octaves) {\n    float a = 1.0;\n    vec3 result = vec3(0);\n    for (int o = 1 << octaves; o > 0; o >>= 1, a /= 2.) {\n        result += (2. * noise(xyz / float(o)) - 1.) * a;\n    }\n    return result;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x - vec2(0.5, 0.5 * iResolution.y / iResolution.x);\n    \n    vec3 xyz = v3_rotate_azimuth(vec3((120.0) * uv, tT + INTERVAL).xzy, (((tT) + INTERVAL) * SPEED) );\n    vec3 per = simplex(xyz, 5);\n    float a = dot(normalize(per), normalize(vec3(uv, 0.1)));\n    a = 1. * pow(a, 3.);\n    fragColor.rgb = vec3(a);\n    fragColor.a = 1.0;\n}","name":"Buf B","description":"","type":"buffer"}]}