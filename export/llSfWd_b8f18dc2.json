{"ver":"0.1","info":{"id":"llSfWd","date":"1517551988","viewed":162,"name":"Telarañasas ","username":"jpupper","description":"This is a shader for testing in other program. Love you all","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shaderglsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define PI 3.14159265359\n\n\n\n//ponele que estas serían como las cantidades:\n//uniform vec2 pos;\n//ESTA DEFINE COMO LA CANTIDAD DE CIRCULITOS QUE APARECEN\n\n//PONGO LOS UNIFORM MUTEADOS PORQUE SI NO , NO CORRE. FIJATE QUE EN TOUCH LOS TENES QUE DESMUTEAR\n/*\nuniform float PX\nuniform float PY\nuniform float cnt2;\n\n//esta la cantidad de puntas de la figura ponele\nuniform float cnt3;\n\nuniform float ap1;\nuniform float ap2;\nuniform float ap3;*/\n\n\nfloat def(vec2 uv, float f);\n\nvec3 clr(vec4 col,float e){\n\n    return vec3(e)*vec3(col)*col.a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n   \tfloat time = iTime;\n    vec2 p = vec2(0.5)-uv;\n    float a = atan(p.x,p.y);\n    float rad = length(p);\n    \n    \n    \n    //A cada forma cada color.\n    float e =  def(uv,PI);\n    float e2 = abs(def(uv,PI+PI/17.));\n    float e3 = abs(def(uv,PI-PI/17.));\n    float e4 = def(uv,PI)*uv.y;\n    \n    \n    \n    //COLORES COLORSSSSSSS\n    vec4 col2 = vec4(0.9,0.0,0.5,0.5);\n    vec4 col1 = vec4(0.0,1.-rad*2.,0.0,1.);\n    vec4 col3 = vec4(0.5,0.0,0.9,0.5);\n    vec4 col4 = vec4(0.0,1.,0.5,1);\n    \n    \n    //COMBINAR LOS COLORESSS \n    //COMBINE DE COLORS\n    \n    //aca asignamos a cada capa, cada color digamos.\n    vec3 fin = clr(col1,e)+clr(col2,e2)+clr(col3,e3)+0.5-uv.y;\n    fragColor = vec4(fin,1.0);\n}\n\n\n//FUNCION PARA MODIFICAR LA FORMA DIGAMO\nfloat def(vec2 uv,float f){\n    \n     \n\n\t//ACA LAS DEFINO COMO VARIABLES PARA QUE CORRA EN SHADER TOY. PERO LAS TENES QUE MUTEAR\n    // PARA QUE TE BORRE LOS UNIFORMS\n     float cnt2 = 4.;\n     float cnt3 = 4.;\n     float ap1 = 1.;\n     float ap2 = 0.7;\n     float ap3 = 1.;\n     float PX = 0.5;\n     float PY = 0.1;\n    \n    vec2 p = vec2(PX,PY)-abs(sin(uv*PI+PI/2.))*0.8;\n\n    float a = atan(p.x,p.y);\n    float r = length(p);\n    float time = iTime;\n    \n    //float e2 = sin(uuna v.x*5+sin(r+sin(a*5+time*5)));\n    float e2 = uv.y*cnt3+sin(uv.x*sin(a*cnt3+sin(r*cnt3)))*ap1;\n    \n    \n    float e = abs(sin(e2*PI*5.+time)*1.+sin(uv.x*PI*cnt3*sin(r*50.)))\n    *abs(sin(a*cnt3+time*5.))*ap3-\n    sin(r*f*PI*cnt2+cos(a*cnt3)*0.2+time)*ap3;\n\n    \n    return e ;\n}\n","name":"Image","description":"","type":"image"}]}