{"ver":"0.1","info":{"id":"ttSXWR","date":"1570186163","viewed":267,"name":"Skewed#04","username":"104","description":"Some kind of ktichen countertop?","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["2d","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float z = 1.;\nconst float complexity =10.;\nconst float density = .09; // 0-1\n\nconst float PI = atan(1.)*4.;\n\nvec4 hash42(vec2 p)\n{\n    p+=1e4;\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n\n#define q(x,p) (floor((x)/(p))*(p))\n\nvoid mainImage( out vec4 o, vec2 C)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = C/R.xy;\n    vec2 N = uv-.5;\n    float t = iTime*.1;\n    t+=1e2;\n    uv.x *= R.x/R.y;\n    uv *= rot2D(t*.2);\n    uv *= z;\n    uv+=t;\n    o = vec4(1);\n    float s = 1.;\n    float f = .95;\n\n    for (float i = 1.;i <= complexity; ++ i) {\n        vec2 c = floor(uv+i);\n        vec4 h = hash42(c);\n        vec2 p = fract(uv+i)-t*s;\n        s = -s;\n        p *= rot2D(h.y);\n        uv += p * h.z;\n        uv *= 1.1;\n        c = floor(uv+i);\n        h = hash42(c);\n        if (h.w < density) {\n            o *= h;\n        }\n    }\n    o *= 1.-dot(N,N);\n    //o=fract(o);\n    //o=step(.5,o) * mod(C.y,3.)/3.;;\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}