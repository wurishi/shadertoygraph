{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define Distance 200.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 color = vec3(0.0, 0.0, 0.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t\n\t\n\tcolor = vec3(uv,0.5+0.5*sin(iTime));\n\t\n\tvec2 texCoord1 = vec2(fragCoord.x-iResolution.x/2.0-sin(iTime)*Distance, fragCoord.y-iResolution.y/2.0-cos(iTime)*Distance);\n\tvec2 texCoord2 = vec2(fragCoord.x-iResolution.x/2.0+sin(iTime)*Distance, fragCoord.y-iResolution.y/2.0+cos(iTime)*Distance);\n\n\tvec2 texCoord3 = vec2(fragCoord.x-iResolution.x/2.0-sin(iTime)*Distance, fragCoord.y-iResolution.y/2.0+cos(iTime)*Distance);\n\tvec2 texCoord4 = vec2(fragCoord.x-iResolution.x/2.0+sin(iTime)*Distance, fragCoord.y-iResolution.y/2.0-cos(iTime)*Distance);\n\t\n\tfloat brightness1 = sqrt(pow(texCoord1.x, 2.0) + pow(texCoord1.y, 2.0));\n\tfloat brightness2 = sqrt(pow(texCoord2.x, 2.0) + pow(texCoord2.y, 2.0));\n\t\n\tfloat brightness3 = sqrt(pow(texCoord3.x, 2.0) + pow(texCoord3.y, 2.0));\n\tfloat brightness4 = sqrt(pow(texCoord4.x, 2.0) + pow(texCoord4.y, 2.0));\n\t\n\tfloat brightness = min((brightness1 + brightness2)/2.0, (brightness3 + brightness4)/2.0);\n\t\n\t\n\tfragColor = vec4((color+(sin(pow(brightness/80.0, 2.0)-iTime*4.0)/10.0)), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mdf3D7","date":"1371827033","viewed":331,"name":"Whirlpool","username":"Amoel","description":"My first GLSL Shader. Yay :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles","color"],"hasliked":0,"parentid":"","parentname":""}}