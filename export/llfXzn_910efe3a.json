{"ver":"0.1","info":{"id":"llfXzn","date":"1434003612","viewed":164,"name":"Fake Refraction","username":"zephmann","description":"Would love tips on how to do some cheap anti-aliasing, outside of just supersampling :)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","boring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float sep = 15.;\n\tfloat lines = iResolution.y / sep;\n    \n    vec2 oguv = fragCoord.xy / iResolution.xy;\n\tvec2 uv = (fragCoord.xy-(iResolution.xy*0.5)) / iResolution.yy;\n    uv *= vec2(1.2);\n    \n    vec2 c = vec2(sin(iTime*1.7)*0.4, cos(iTime*1.3)*0.25);\n    c = vec2(uv.x-c.x, uv.y-c.y);\n    \n    float dist = sqrt(c.x*c.x + c.y*c.y);\n    \n    if(dist < 0.5) {\n       uv.y -= (c.y) * sin( (0.5-dist)/(0.5) * 3.14);\n    }\n    \n    if(mod((uv.y+0.125)*lines, 1.0) < 0.25) {\n        fragColor = vec4(0.0);\n    }\n    else {\n\t\tfragColor = vec4(oguv,0.5+0.5*sin(iTime),1.0);\n    }\n    \n}","name":"","description":"","type":"image"}]}