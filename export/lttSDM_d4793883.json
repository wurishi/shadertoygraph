{"ver":"0.1","info":{"id":"lttSDM","date":"1480062958","viewed":163,"name":"Time Texture","username":"tabman","description":"My attempt to implement idea from https://www.shadertoy.com/view/MlcSW7 into sound.\nTo synchronize sound and image hit play button, wait for about 1 sec then reset time.\nChange LOUDNESS value in sound shader if its too loud or too quiet.","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["2d","sound","time","texture","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//from https://www.shadertoy.com/view/ltfSRr\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(24.-uv.x)));\n    if (int(uv.y)==2) i=  3626848/bit; // 00110111 01010111 01100000 \n    if (int(uv.y)==1) i=  2446672/bit; // 00100101 01010101 01010000\n    if (int(uv.y)==0) i=  6780256/bit; // 01100111 01110101 01100000\n \treturn float(i-2*(i/2));\n}\n\n//dublicate this part in image and sound shader\n\nvec2 tR = vec2(4.,4.); //time coordinates resolution\n\nvec4 TimeTexture(in vec2 u,in vec2 R){\n    u /= R;\n    u = clamp(u,0.,1.);\n    return vec4(u,0.,1.);\n}\n\n//---------------------------------------------\n\nvoid mainImage( out vec4 o, in vec2 u ){\n    if (iTime<2.) {float c=message(u/8.);if(c>=0.){o=vec4(c);return;}}\n    \n    //dublicate this part in image and sound shader\n\t\n    //initialize time traces\n    \n    //time flow rules\n    float T1 = iTime*1.,\n          T2 = iTime*1.;\n    \n    vec2 //map time to coordinate plane\n         t1 = mod(vec2(T1,T1/tR.x),tR),\n         t2 = mod(vec2(T2/tR.y,T2),tR);\n    \n    //---------------------------------------------\n    \n    vec2 iR = iResolution.xy;  \n    \n    o = TimeTexture(u,iR); //time texture in timeless domain\n    \n    //display time traces  \n    o = max(-floor(length(t1*iR/tR-u)-10.)*vec4(1.,0.,0.,1.),o);\n    //o = max(-floor(length(t2*iR/tR-u)-10.)*vec4(0.,1.,0.,1.),o);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"#define TAU 6.2831\n#define LOUDNESS .3\n\n\n//dublicate this part in image and sound shader\n\nvec2 tR = vec2(4.,4.); //time coordinates resolution\n\nvec4 TimeTexture(in vec2 u,in vec2 R){\n    u /= R;\n    u = clamp(u,0.,1.);\n    return vec4(u,0.,1.);\n}\n\n//---------------------------------------------\n\n\nvec2 mainSound( in int samp, float iTime ){\n    //dublicate this part in image and sound shader\n\t\n    //initialize time traces\n    \n    //time flow rules\n    float T1 = iTime*1.,\n          T2 = iTime*1.;\n    \n    vec2 //map time to coordinate plane\n         t1 = mod(vec2(T1,T1/tR.x),tR),\n         t2 = mod(vec2(T2/tR.y,T2),tR);\n    \n    //---------------------------------------------\n\n    //time texture in time domain, ie. time traces\n    vec4 o1 = TimeTexture(t1,tR),\n         o2 = TimeTexture(t2,tR);\n         \n    float w = o1.x*.5+o1.y;\n    //w += o2.x +o2.y*2.;\n    //w /= 2.;\n    \n    return vec2(sin(220.*TAU*w*(t1.y*tR.x+t1.x))*.3);\n}","name":"Sound","description":"","type":"sound"}]}