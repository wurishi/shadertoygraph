{"ver":"0.1","info":{"id":"fl2XzR","date":"1626948349","viewed":101,"name":"Red Grid","username":"chenxiaoleizi","description":"Red Grid","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["redgrid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/wdK3Dy\n\n// Create grid\nfloat grid(vec2 fragCoord, float space, float gridWidth)\n{\n    vec2 p  = fragCoord;\n    \n    vec2 a1 = mod(p - gridWidth/2.0, space);\n    vec2 a2 = mod(p + gridWidth/2.0, space);\n    \n    vec2 a = a2 - a1;\n       \n    float g = min(a.x, a.y);\n    return clamp(g, 0.4, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Pixel color\n    vec3 col = vec3(1.0);\n\t\n    // 2-size grid\n    col *= grid(fragCoord, 10., 1.) * grid(fragCoord, 50., 1.5);\n    col += vec3(1.0, 0.0, 0.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}