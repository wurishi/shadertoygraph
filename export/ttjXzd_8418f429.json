{"ver":"0.1","info":{"id":"ttjXzd","date":"1592825084","viewed":224,"name":"Gate","username":"dreamur","description":"Based of the image: M E L C O T T I by Archist:\n\nhttps://old.reddit.com/r/ImaginaryMindscapes/comments/9704p1/m_e_l_c_o_t_t_i_by_me/","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","portal","gate","starscape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nvec2 rotate (vec2 _st, float _angle) {\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    return _st;\n}\n\nfloat sdCircle(in vec2 _st, in float _radius)\n{\n    return length(_st) - _radius;\n}\n\nfloat boxDist(vec2 p, vec2 size, float radius)\n{\n  \tvec2 d = abs(p) - size - radius;\n  \treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n}\n\n\n// by IQ\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdTrapezoid( in vec2 p, in float r1, float r2, float he )\n{\n    vec2 k1 = vec2(r2,he);\n    vec2 k2 = vec2(r2-r1,2.0*he);\n\n\tp.x = abs(p.x);\n    vec2 ca = vec2(max(0.0,p.x-((p.y<0.0)?r1:r2)), abs(p.y)-he);\n    vec2 cb = p - k1 + k2*clamp( dot(k1-p,k2)/dot(k2,k2), 0.0, 1.0 );\n    \n    float s = (cb.x < 0.0 && ca.y < 0.0) ? -1.0 : 1.0;\n    \n    return s*sqrt( min(dot(ca,ca),dot(cb,cb)) );\n}\n\n// 2D Random\nfloat random (in vec2 st) { return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123); }\n\n// https://thebookofshaders.com/edit.php#12/vorono-01.frag\nfloat voroni(in vec2 _st, in float _offset)\n{\n    vec2 i_st = floor(_st);\n    vec2 f_st = fract(_st);\n\n    float m_dist = 150.;  // minimun distance\n    vec2 m_point;        // minimum point\n\n    for (int j=-1; j<=1; j++ ) {\n        for (int i=-1; i<=1; i++ ) {\n            vec2 neighbor = vec2(float(i),float(j));\n            vec2 point = vec2(random(i_st + neighbor ));\n            point = 0.5 + 0.5*sin(_offset + 6.2831*point);\n            vec2 diff = neighbor + point - f_st;\n            float dist = length(diff);\n\n            if( dist < m_dist ) {\n                m_dist = dist;\n                m_point = point;\n            }\n        }\n    }\n    \n    return m_dist;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st       = 4.0 * fragCoord.xy / iResolution.x - vec2(2.0, 1.0);\n    \n    \n    vec3 col1 \t\t= vec3(1.0, 1.0, 0.416);\n    vec3 col2\t\t= vec3(0.0, 0.0, 0.0);\n    vec3 col3\t\t= vec3(0.0, 0.0, 0.65);\n    \n    vec3 color    \t= vec3(0.0);\n\n\n    float ripples;\n    float gateDF;\n    vec3 gradient;\n    \n    \n    \n    //**************\n    if(st.y >= -0.2)\n    {\n        color    \t= mix(col1, col3, st.y * 2.0 + 0.5);\n    \tcolor \t\t= mix(color, col2, st.y * 0.8 + 0.0); \n        \n        // //**************\n        float starsDF\t\t= 1.0 - smoothstep( voroni(-st * 40.0 , 0.0), 0.0, 0.018  );\n        starsDF\t\t\t\t+= 1.0 - smoothstep(voroni(st * vec2(-2.0,2.0) - vec2(iTime * 0.38, 0.0) + st.x * 2.0, 0.0), 0.0, 0.015);\n        color         \t\t= mix(color, vec3(1.0, 1.0, 1.0), starsDF * 0.75);      \n        \n        gateDF  \t\t\t= boxDist(st - vec2(0.0, -0.25), vec2(0.225, 1.1), 0.0) ;\n    \tgradient \t\t\t= mix(col3, col1, st.y + 0.45 - (st.x * 0.3));\n    \tgradient \t\t\t= mix(gradient, vec3(1.0), 0.15);\n    \tcolor         \t\t= mix(color, gradient, clamp(1.0 - sign(gateDF), 0.0, 1.0));\n        color         \t\t= mix(color, vec3(0.678, 0.847, 0.902), 1.0 - smoothstep(0.0, 0.015, abs(gateDF) ) );\n    } \n    else\n    {    \n        \n        vec2 xy = st;\n        //xy.y = ceil(xy.y * 12.0 - sin(iTime - xy.y * 3.0)) ;     \n        \n        //xy.y = ceil(xy.y * 3.0 + 3.0 + sin(iTime - xy.y) );\n        //float timeOffset = ceil(xy.y * 3.0 + 3.0 + sin(iTime - xy.y) );\n        \n        \n        //  color    \t= mix(col1, col3, xy.y * -3.0 - 0.8 + timeOffset );\n    \t//  color \t\t= mix(color, col2, xy.y  - 0.2 + timeOffset );           \n        \n //       float\tdx = 1.0 + iTime /25.0-abs(distance(xy.y, floor(xy.x) ));\n //       float\tdx2 = 1.0 + 0.25 /10.0-abs(distance(xy.y, 0.5));\n //       float\tdy = (1.0-abs(distance(xy.y, mod(0.0 + iTime,1.0))));\n //               dy = (dy > 0.5) ? 2.0 * dy : 2.0 * (1.0 - dy);\n\n//        if(dx2 > 1.0 - 0.25 / 10.0)\t{\n //           float rX2 =  (dy * random( vec2(dy, dx) ) + dx2) / 4.0;\n //           xy.y += 0.5 + rX2 / 12.5;\n//        }\n\n//        xy.y = mod(xy.y, 1.0);\n        \n        color    = mix(col1, col3, xy.y * -3.5 - 0.8);\n    \tcolor \t = mix(color, col2, xy.y  - 0.0 ); \n         \n        gateDF  \t\t\t= boxDist(xy - vec2(0.0, -0.25), vec2(0.225, 1.1), 0.0);\n    \tgradient \t\t\t= mix(col3, col1, xy.y + 0.45 - (xy.x * 0.3));\n    \tgradient \t\t\t= mix(gradient, vec3(1.0), 0.15);\n        color         \t\t= mix(color, gradient, clamp(1.0 - sign(gateDF), 0.0, 1.0));\n        color         \t\t= mix(color, vec3(0.678, 0.847, 0.902), 1.0 - smoothstep(0.0, 0.015, abs(gateDF) ) );        \n    }\n   \n                \n    //*************\n\tif(st.y < -0.2)\n    {                                       \n        // //**************\n        vec2 xy\t\t= 2.0 * fragCoord.xy / iResolution.xy - vec2(1.0, 0.25);\n        xy.x \t\t+= abs(sin(st.y + 0.5) * 8.0) - 1.3;    \n        float road \t= sdTrapezoid(xy - vec2(0.05,0.0), 4.0, 0.2, 0.325);\n        \n        gradient\t= mix(vec3(1.0), vec3(0.0, 0.0, 0.125), st.y * -0.75 + 0.45);\n        gradient\t= mix(vec3(1.0), vec3(0.0, 0.0, 0.235), -road + 1.05);\n        \n        color \t\t= mix(color, gradient, 1.0 - smoothstep(0.0, 0.0175 -st.y / 32.0, road) );\n    }\n    \n    //*************\n    if(st.x < -1.0 || st.x > 1.0)\n    {\n        color = vec3(0.0);\n    }\n    \n   \tfragColor  = vec4( vec3(color) , 1.0); \n    \n}\n","name":"Image","description":"","type":"image"}]}