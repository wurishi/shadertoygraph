{"ver":"0.1","info":{"id":"mtlSWj","date":"1675378614","viewed":73,"name":"SDF Spotlight","username":"justicefied","description":"First attempt at writing a shader\nExperimenting with some spotlights using signed distance fields","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","spotlight","vignette"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdCircle(vec2 centerPoint, float radius)\n{\n    return length(centerPoint) - radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 middlePoint = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec4 background = texture(iChannel0, fragCoord.xy/iResolution.xy);\n    \n    vec2 offsetLarge = vec2(sin(iTime/7.0), cos(iTime / 5.0));\n    vec2 offsetSmall = vec2(sin(iTime/3.0), cos(iTime / 8.0));\n    \n    float largeCircleSDF = sdCircle(middlePoint + offsetLarge, 0.75);\n    float smallCircleSDF = sdCircle(middlePoint - offsetSmall, 0.5);\n    \n    float sdf = min(largeCircleSDF, smallCircleSDF);\n    \n    float edgeSize = 0.15 + (sin(iTime / 17.0) * 0.01 + cos(iTime / 5.0) * 0.005);\n    \n    float interpolateEdge = smoothstep(15.0/iResolution.y, 0.0, sdf - edgeSize);    \n    vec4 edge = mix(background / 4.0, background / 2.0, interpolateEdge);\n    \n    float interpolateCenter = smoothstep(15.0/iResolution.y, 0.0, sdf);\n    fragColor = mix(edge, background, interpolateCenter);\n}","name":"Image","description":"","type":"image"}]}