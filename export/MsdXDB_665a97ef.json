{"ver":"0.1","info":{"id":"MsdXDB","date":"1461444138","viewed":169,"name":"Friendship!","username":"drone1","description":"Simple thing with some colors I liked. \n\nIf it's obvious to anyone why uncommenting  WHY_THE_MASSIVE_ALIASING causes massive aliasing, I'd love to hear it. I only spent a few minutes looking at it but it was not obvious to me. ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Uncomment -- anyone know what's going on w/ the aliasing here?\n//#define WHY_THE_MASSIVE_ALIASING\n\n// Uncomment for crazy glitch mode\n//#define GLITCH\n\n#ifdef GLITCH\n#define NUM_CELLS\t( mix( iResolution.x, rand( iTime * 0.1 ) * 50.0, step( 0.5, mod( rand( iTime ), 1.0 ) ) ) )\n#else\n#define NUM_CELLS 30\n#endif\n\n// Turning this off since AA doesn't actually look great for this.\n#define AA 1\n\nfloat rand( float x )\n{\n    return fract( 823473.28374 * \n                 ( 0.5 + 0.5 * sin( \n                     dot( \n                         vec2( x * 1423.023 + iTime * 0.000001, iTime * 0.00000001 + x / 32345.023 ), \n                         vec2( 23.87, 8734.6235 )\n                     )\n                 ) )\n           );\n}\n\nvec3 color( vec2 uv ) \n{\n    vec3 clr = vec3( 1.0 );\n\n    float nc = float( NUM_CELLS );\n    float fx = floor( uv.x * nc ) / nc;\n    float xr = rand( fx );\n    float yoffset = mod( xr * 13.23 + pow( 2.0, 16.0 * xr ) * 0.1 * iTime, 1.0 );\n    float fy = floor( uv.y * nc + yoffset ) / nc;\n    \n    clr *= xr * xr;\n    clr.r -= fx * fy;\n    clr.g -= 0.2 * fy;\n    clr.b *= 1.1 * sqrt( fx );\n    \n    clr *= xr;\n    clr.b *= 1.0 - 0.3 * sqrt( uv.y );\n    \n    vec2 c = vec2( fract( uv.x * nc ), fract( uv.y * nc + yoffset ) );\n    clr *= 1.0 + 0.3 * sqrt( 4.0 * c.x * ( 1.0 - c.x ) * c.y * ( 1.0 - c.y ) ); \n    clr.r += 0.1 + 0.5 * uv.y;\n    clr = clr * 0.9 + 0.1 * smoothstep( 0.0, 1.0, clr );\n    clr += 0.2;\n    clr *= 1.05;   \n    \n    return clr;\n}\n\nvec3 render( vec2 uv )\n{\n    float v = sqrt( 16.0 * uv.x * ( 1.0 - uv.x ) * uv.y * ( 1.0 - uv.y ) );\n\n    // Anyone know this causes massive aliasing?\n#ifdef WHY_THE_MASSIVE_ALIASING\n    uv = -1.0 + 2.0 * uv;\n    uv.x *= pow( 1.0 - v, 0.01 + 0.5 * ( 0.5 + 0.5 * sin( iTime * 0.1 ) ) );\n    uv = 0.5 + 0.5 * uv;\n#endif\n    \n    vec3 clr = vec3( 0.0 );\n    \n    vec2 ir = 1.0 / iResolution.xy;\n    \n    for ( int i = 0; i < AA; ++i )\n    for ( int j = 0; j < AA; ++j )\n    {\n        vec2 offset = ir.xy / float( AA ) * vec2( float( i ), float( j ) );\n        clr += color( uv + offset );\n    }\n    \n    clr /= float( AA * AA );\n\n    // vignette\n    clr *= 1.1 * min( 1.0, 0.1 + v );\n\n    return clr;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(render( uv ), 1.0 );\n}","name":"Image","description":"","type":"image"}]}