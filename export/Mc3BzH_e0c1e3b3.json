{"ver":"0.1","info":{"id":"Mc3BzH","date":"1732692581","viewed":32,"name":"Organic evolutive colored basicI","username":"Psydala","description":"Hello, i'm Jean. newbie and I try to create something for begin ^^.\nI love the colors function from Inigo Quilez !!\nadapation of the original algo from tutorial from Kishimisu  https://www.youtube.com/watch?v=f4s1h2YETNY\nfeedbacks&tips welcomes tks","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author Jean vouillamoz 2024 - Psydala   Geneva\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979323846\n\n// Author of the 3 nexts function @patriciogv ( patriciogonzalezvivo.com ) - 2015 the book of shader\nvec2 rotate2D(vec2 _st,float _angle){\n    _st-=.5;\n    _st=mat2(cos(_angle),-sin(_angle),\n    sin(_angle),cos(_angle))*_st;\n    _st+=.5;\n    return _st;\n}\n\nvec2 tile(vec2 _st,float _zoom){\n    _st*=_zoom;\n    return fract(_st);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n    \n    //  Scale the coordinate system by 2x2\n    _st*=2.;\n    \n    //  Give each cell an index number\n    //  according to its position\n    float index=0.;\n    index+=step(1.,mod(_st.x,2.));\n    index+=step(1.,mod(_st.y,2.))*2.;\n    \n    //      |\n    //  2   |   3\n    //      |\n    //--------------\n    //      |\n    //  0   |   1\n    //      |\n    \n    // Make each cell between 0.0 - 1.0\n    _st=fract(_st);\n    \n    // Rotate each cell according to the index\n    if(index==1.){\n        //  Rotate cell 1 by 90 degrees\n        _st=rotate2D(_st,PI*.5);\n    }else if(index==2.){\n        //  Rotate cell 2 by -90 degrees\n        _st=rotate2D(_st,PI*-.5);\n    }else if(index==3.){\n        //  Rotate cell 3 by 180 degrees\n        _st=rotate2D(_st,PI);\n    }\n    \n    return _st;\n}\n//palette function is from Inigo Quilez\nvec3 palette(in float t,in vec3 a,in vec3 b,in vec3 c,in vec3 d)\n{\n    return a+b*cos(6.283185*(c*t+d));\n}\n//my main is that I do , following the tutorial from Kishimisu https://www.youtube.com/watch?v=f4s1h2YETNY\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st=fragCoord.xy/iResolution.xy;\n    st.x*=iResolution.x/iResolution.y;\n    st.xy-=.5;    \n    vec2 st2=st;\n    vec3 final=vec3(0.);\n    for(float i=0.;i<8.;i++){\n        st=fract(st*2.)-.5;        \n        st *=1.5 ;        \n        float d=abs(-length(st2)-1.5)*2.*exp(-length(st));\n        vec3 col=palette(d,vec3(.5,.5,.5),vec3(.5,.5,.5),vec3(2.,1.,0.),vec3(.5,.20,.25)+i*8.+iTime*0.04);\n        d*=sin(d*8.+iTime)/8.;\n        d=abs(d);\n        st2*=0.1;\n        st*=0.5;\n        float r =1.;\n        d *= smoothstep(r,r-0.05 , d);\n        final+=col*d;        \n    }\n    fragColor=vec4(final,1.);\n}","name":"Image","description":"","type":"image"}]}