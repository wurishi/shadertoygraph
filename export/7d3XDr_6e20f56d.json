{"ver":"0.1","info":{"id":"7d3XDr","date":"1632934112","viewed":78,"name":"note:02","username":"shunyadezain","description":"practice raymarching","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//reference: https://gam0022.net/blog/2017/03/02/raymarching-fold/\n\n#define PI  3.14159265359\n#define PI2 PI * 2.0\n\nvec3 foldX(vec3 p) {\n    p.x = abs(p.x);\n    return p;\n}\n\nmat2 rotate(float a)\n{\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\n// https://www.shadertoy.com/view/Mlf3Wj\nvec2 foldRotate(in vec2 p, in float s) \n{\n    float a = PI / s - atan(p.x, p.y);\n    float n = PI2 / s;\n    a = floor(a / n) * n;\n    p *= rotate(a);\n    return p;\n}\n\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat de1(vec3 p, float s)\n{\n    \n    float scale = s;\n    vec3 size = vec3(.3, 1., .3);\n        float d = sdBox(p, size);\n\n        for (int i = 0; i < 8; i++){\n           vec3 q = foldX(p);\n           q.xy -= size.y * 2.;\n           q.xy *= rotate(PI * iTime * 0.1);\n\n           d = min(d, sdBox(p, size * scale));\n           p = q;\n        }\n\n        d = min(d, sdBox(p, size));\n        return d;\n}\n    \n\nfloat map(vec3 p)\n{\n    vec3 p1 = p;\n    p1.xy = foldRotate(p.xy, 3.);\n    vec3 p2 = p;\n    p2.zy = foldRotate(p.zy, 5.);\n    vec3 p3 = p;\n    p3.zx = foldRotate(p.zx, 10.);\n\n    return min(de1(p1, 0.8), min(de1(p2, sin(iTime * 0.2) + .4), de1(p3, 1.)));\n} \n\nvec3 doColor(vec3 p)\n{\n    return vec3(0.,.1,.2);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec3 ro=vec3(0,0,-50);\n    ro.zx*=rotate(iTime*0.2);\n    ro.zy*=rotate(iTime*0.5);\n    vec3 rd=normalize(vec3(uv,2));\n    vec3 ta=vec3(0);\n    vec3 w=normalize(ta-ro);\n    vec3 u=normalize(cross(w,vec3(0,1,0)));\n    vec3 v=cross(u,w);\n    mat3 lookat=mat3(u,v,w);\n    rd=lookat*rd;\n    float d,i,t=0.0;\n    vec3 p=ro;\n    vec3 col=vec3(0);\n    for(i=1.0;i>0.0;i-=1./50.0)\n    {\n        t+=d=map(p);\n        if(d<0.0001)\n        {\n            col+=doColor(p);\n            col+=pow(i, 1.);\n            break;\n        }\n        p+=rd*d;\n    }\n    fragColor=vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}