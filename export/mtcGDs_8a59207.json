{"ver":"0.1","info":{"id":"mtcGDs","date":"1683318395","viewed":121,"name":"irregular checkerboard","username":"ianwall","description":"-","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float brightnessAtScale(vec2 fragCoord, float scale)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv += iTime/10.0;\n    vec2 checker = (floor(uv * scale)+0.5) / scale;\n    return dot(texture(iChannel0, checker).rgb, vec3(0.299, 0.587, 0.114));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Define the colors\n    vec3 color1 = vec3(1.0, 0.0, 0.0); // Red\n    vec3 color2 = vec3(0.0, 1.0, 0.0); // Green\n    vec3 color3 = vec3(0.0, 0.0, 1.0); // Blue\n    vec3 color4 = vec3(1.0, 1.0, 0.0); // Yellow\n    vec3 color;\n\n\n    float scale = 100.0;\n    for(int i = 0; i < 7; ++i)\n    {\n        float b = 1.0-brightnessAtScale(fragCoord, scale);\n        if(b > 0.9+0.06*sin(iTime/1.0))\n        {\n            break;\n        }\n        scale/=1.66;\n    }\n    \n    vec2 checker = mod(floor(uv * scale), 2.0);\n    color = mix(mix(color1, color2, checker.y), mix(color3, color4, checker.y), checker.x);\n\n    //color = vec3(fract(uv * scale), 0.0);\n    //color = vec3(brightnessAtScale(fragCoord, scale));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}