{"ver":"0.1","info":{"id":"NsSGRK","date":"1617622295","viewed":163,"name":"floating on the sea","username":"changwenhan","description":"massing with texture bump and smin function","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .01\n\n#define pi 3.14159265359\n#define twoPi 6.28318530718\n\n\n//from kynd https://thebookofshaders.com/edit.php?log=160414040804\nfloat smin(float a, float b, float k) {\n    return -log(exp(-k * a) + exp(-k * b)) / k;\n}\n\nfloat smax(float a, float b, float k) {\n    return -(smin(-(a),-(b),k));\n}\n\n// char function from FabriceNeyret2: https://www.shadertoy.com/view/ltcXzs\nvec4 char(vec2 p, int C) {\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n    return textureGrad( iChannel1, p/16. + fract( vec2(C, 15-C/16) / 16. ) , \n                       dFdx(p/16.),dFdy(p/16.) );\n}\n\nfloat Ball(vec3 p) {\n    float radius = 1.;\n    vec3 spPos = vec3(0.,1.,5.);\n    \n    float spDist = length(p-spPos) - radius;\n    \n    return spDist;\n}\n\nfloat Plane(vec3 p) {\n    float plane = p.y+1.;\n    \n    vec2 cuv = p.xz*.05 + vec2(0.1*iTime,0.1);\n    vec3 col = texture(iChannel0, cuv).rgb;\n    plane -= length(col) * (sin(iTime+p.x*.2)*.5+.6);\n\n    return plane;\n}\n\n\nfloat GetDist(vec3 p) {\n    return smin(Plane(p), Ball(p), 2.);\n}\n\n\nfloat RayMarch(vec3 ro, vec3 rd) {\n    float dO = 0.; //dist from origin\n    \n    for(int i=0; i<MAX_STEPS; i++) {\n        vec3 p = ro + rd * dO; // ray\n        float dS = GetDist(p);\n        dO += dS;\n        \n        if(dO > MAX_DIST || dS < SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(.0);\n    \n    vec3 ro = vec3(0., 1., 0.); //camera origin\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.)); //camera direction\n    \n    //panorama projection for recording 360 video\n    //from starea https://www.shadertoy.com/view/Ms2yDK\n    //vec2 sph = fragCoord.xy / iResolution.xy * vec2(twoPi, -pi);\n    //rd = vec3(sin(sph.y) * sin(sph.x), -cos(sph.y), sin(sph.y) * cos(sph.x)); \n \n    float d = RayMarch(ro, rd);\n    vec3 p = ro + rd * d; //ray\n\n    \n    vec2 cuv = p.xz*.05 + vec2(0.1*iTime,0.1);\n    col = texture(iChannel0, cuv).rgb;\n    \n    vec3 ballCol = vec3(1.6);\n    float ballMask = smoothstep(1.9,0.,Ball(p));\n    col = mix(col, ballCol, ballMask);\n    \n    float far = 30.; \n    col *= smoothstep(far, 0., d); //fade out by distance\n    \n    \n    vec3 sky = vec3(.3) - (rd.y * .5);\n    sky = max(sky, .1);\n    \n    float th = smoothstep(far-30., far, d);\n    col = mix(col, sky, th);\n    \n    col *= vec3(0.698,0.839,0.961);\n    \n    \n    //text: floating on the sea.\n    float text; \n    vec2 text_uv = uv;\n    \n    text_uv *= 18.;\n    text_uv.x += 2.25;\n    text_uv.y -= .1;\n    \n    //col.r = step(uv.x,0.);\n    //col.g = step(uv.y,0.);\n    \n    text += char(text_uv,64+32+6).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+12).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+15).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+1).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+20).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+9).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+14).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+7).x; text_uv.x-=.5;\n    \n    text_uv.y += 1.;\n    text_uv.x += 3.5;\n    \n    text += char(text_uv,64+32+15).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+14).x; text_uv.x-=.5;\n    \n    text_uv.x-=.5;\n    \n    text += char(text_uv,64+32+20).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+8).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+5).x; text_uv.x-=.5;\n    \n    text_uv.y += 1.;\n    text_uv.x += 2.5;\n    \n    text += char(text_uv,64+32+19).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+5).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+1).x; text_uv.x-=.5;\n    text += char(text_uv,32+14).x; text_uv.x-=.5;\n    \n    \n    col = max(vec3(0.),col);\n    col = min(vec3(1.),col);\n    \n    text = pow(text,.8);\n    text = smoothstep(.25,.75,text);\n    \n    col -= vec3(text);\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}