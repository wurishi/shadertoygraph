{"ver":"0.1","info":{"id":"ssVfWh","date":"1658115190","viewed":88,"name":"Red Cuts w/ Mouse Control","username":"CanadianWarship","description":"Basically the same thing as before, with added mouse control\nObvious values for the mouseControl variable are 0.0 and 1.0, but check out what happens with 1.5 or -0.5\nMostly intended as a mouse test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["red"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float mouseControl = 1.0; //1.0 or .0, but works with any float\n    vec2 c = fragCoord - (1.-mouseControl)*0.5*iResolution.xy; //definition of center coordinates [-Res.xy/2 ~ Res.xy/2]\n        c -= iMouse.xy * mouseControl;\n    float ang = atan(c.y,c.x); // [-pi ~ pi] angular coordinate\n    float dist = sqrt(dot(c,c)); // [0 ~ inf] polar distance coordinate\n    float spiral = dist*0.1 + .0*ang - (iTime); // spiral function\n    float primary = ceil(sin(spiral)); // square wave from spiral function\n    float invdist = (50./dist); // [0 ~ inf] \n    // invdist*=0.; // uncomment to separate center circle \n    float opposite = min(1.,ceil(invdist + sin( ang*5. + 0.5*iTime + 0.*sin(iTime)*sin(iTime))));\n    float result = min(primary, opposite);\nfragColor = vec4( result -0.5,  -0.5 ,  -0.5, 1.0); // output: R,G,B,alpha\n}","name":"Image","description":"","type":"image"}]}