{"ver":"0.1","info":{"id":"WtyXRD","date":"1582252764","viewed":275,"name":"thebookofshaders-1","username":"enigmawxy","description":"my first release from learning the book of shaders. enjoy it.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["wave","functions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n#define r iResolution.xy\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 c;\n    float l,z=t;\n    \n    // 把坐标规范化为[0,1]\n    vec2 uv, p = fragCoord/r;\n    uv=p;   \n    // 把坐标范围变为[-.5, .5]\n    p-=.5;\n    // p的x坐标考虑屏幕宽高比\n    p.x *= r.x/r.y;\n    // 距离场：p到原点的距离。距离作为颜色返回\n    l = length(p);\n    // 采用一个循环为颜色赋值\n    for(int i=0;i<3;i++) {\n        //把屏幕上每个像素坐标变为随时间波动的曲线\n        uv+=p/l*(sin(z)+1.)*abs(sin(l*9.-z*2.));\n        c[i] =0.05/length(abs(fract(uv)-.5));\n    }\n    \n    fragColor = vec4(c,t);\n}","name":"Image","description":"","type":"image"}]}