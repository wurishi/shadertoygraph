{"ver":"0.1","info":{"id":"DdcSD4","date":"1679764278","viewed":33,"name":"gpt4 cat1","username":"memo","description":"code created by chatgpt using gpt4\nsee code comments","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chatgpt","gpt4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\ncode created by chatgpt using gpt4\nprompt:\ncreate glsl code for shadertoy to draw a cat \n\nno changes made to GPT4 output. worked as is\n*/\n\n\n/*\nCreating a GLSL code for ShaderToy to draw a cat involves writing a fragment shader\nthat can generate a static or dynamic representation of a cat. Here's a simple example\nof a fragment shader for ShaderToy that creates a stylized cat using a combination of\ngeometric shapes:\n\nThis code creates a simple, stylized cat illustration using smoothstep functions and \ngeometric shapes. You can copy and paste this code into ShaderToy (https://www.shadertoy.com/)\nto see the cat drawing in action. Keep in mind that this is a basic representation, and you\ncan further refine the shapes and colors to create a more detailed illustration.\n*/\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = vec3(0.9, 0.9, 0.9); // Background color\n    \n    // Cat body\n    float bodyRadius = 0.3;\n    float body = smoothstep(0.0, 0.01, bodyRadius - length(uv - vec2(0.5, 0.5)));\n\n    // Cat head\n    float headRadius = 0.15;\n    float head = smoothstep(0.0, 0.01, headRadius - length(uv - vec2(0.5, 0.75)));\n\n    // Cat ears\n    float earSize = 0.07;\n    float leftEar = smoothstep(0.0, 0.01, earSize - length(uv - vec2(0.42, 0.85)));\n    float rightEar = smoothstep(0.0, 0.01, earSize - length(uv - vec2(0.58, 0.85)));\n\n    // Cat eyes\n    float eyeSize = 0.03;\n    float leftEye = smoothstep(0.0, 0.01, eyeSize - length(uv - vec2(0.45, 0.77)));\n    float rightEye = smoothstep(0.0, 0.01, eyeSize - length(uv - vec2(0.55, 0.77)));\n\n    // Cat nose\n    float noseSize = 0.008;\n    float nose = smoothstep(0.0, 0.01, noseSize - length(uv - vec2(0.5, 0.735)));\n\n    // Combine shapes\n    float catShape = max(max(max(body, head), max(leftEar, rightEar)), nose);\n    color = mix(color, vec3(0.2, 0.2, 0.2), catShape);\n    color = mix(color, vec3(1.0, 1.0, 1.0), max(leftEye, rightEye));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}