{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define GRADIENT_DELTA 0.0002\n#define MAX_RAYMARCH_ITER 128\n#define MIN_RAYMARCH_DELTA 0.0015\n#define PI 3.14159265359\n#define EXPOSURE 34.\n#define GAMMA 2.1\n#define time iTime\n\nconst vec3 cameraTarget = vec3(40, 10, 0);\nvec2 resolution;\nvec2 mouse;\n\n\nfloat sdBox(vec3 p, vec3 b)\n{\n\tvec3 d = abs(p) - b;\n\treturn min(max(d.x, max(d.y, d.z)), 0.) + length(max(d, 0.));\n}\n\n\nvec2 MapCornel(vec3 p)\n{\n\tfloat d = sdBox(p,vec3(10,10,10));\n\treturn vec2(0.0,d);\n}\n\nvec3 CornelNormal(vec3 p)\n{\n    return normalize(vec3(\n        MapCornel(p + vec3(GRADIENT_DELTA, 0, 0)).y - MapCornel(p - vec3(GRADIENT_DELTA, 0, 0)).y,\n        MapCornel(p + vec3(0, GRADIENT_DELTA, 0)).y - MapCornel(p - vec3(0, GRADIENT_DELTA, 0)).y,\n        MapCornel(p + vec3(0, 0, GRADIENT_DELTA)).y - MapCornel(p - vec3(0, 0, GRADIENT_DELTA)).y));\n}\n\nfloat TraceCornel(vec3 ray_start, vec3 ray_dir, out float dist, out vec3 p, out int iterations)\n{\n    dist = 0.0;\n    float minStep = 0.1;\n\tvec2 mapRes;\n    for (int i = 1; i <= MAX_RAYMARCH_ITER; i++)\n\t{\n        p = ray_start + ray_dir * dist;\n        mapRes = MapCornel(p);\n        if (mapRes.y < MIN_RAYMARCH_DELTA)\n\t\t{\n           iterations = i;\n           return mapRes.x;\n        }\n        dist += max(mapRes.y, minStep);\n    }\n    return -1.;\t\n}\n\n\nvec3 RenderCornel(vec3 origen, vec3 dir, vec2 fragCoord)\n{\n\tfloat dist;\n\tvec3 p;\n\tint iterations;\n\tfloat objectID = TraceCornel(origen, dir, dist, p, iterations);\n\t\n\tvec3 col = texture(iChannel0, fragCoord.xy).xyz;\n\t\n\t\n\tif(dist >= 0.0)\n\t{\n\t\tcol = CornelNormal(p);\n\t}\n\treturn col;\t\n}\n\n\n\n///////////////////////////////////////////\nvec3 rotateX(in vec3 p, float a) {\n\tfloat c = cos(a); float s = sin(a);\n\treturn vec3(p.x, c * p.y - s * p.z, s * p.y + c * p.z);\n}\n\nvec3 rotateY(vec3 p, float a) {\n\tfloat c = cos(a); float s = sin(a);\n\treturn vec3(c * p.x + s * p.z, p.y, -s * p.x + c * p.z);\n}\n\nvec3 rotateZ(vec3 p, float a) {\n\tfloat c = cos(a); float s = sin(a);\n\treturn vec3(c * p.x - s * p.y, s * p.x + c * p.y, p.z);\n}\n\n\nvec3 rotateCamera(vec3 ray_start, vec3 ray_dir)\n{\n/**/\n\tray_dir.x = -ray_dir.x; // Flip the x coordinate to match the scene data\n\tvec3 target = normalize(cameraTarget - ray_start);\n\tfloat angY = atan(target.z, target.x);\n\tray_dir = rotateY(ray_dir, PI/2. - angY);\n\tfloat angX = atan(target.y, target.z);\n\tray_dir = rotateX(ray_dir, - angX);\n\tfloat angZ = smoothstep(0., 1., (time - 5.) * .1) * sin(time * 1.1 + .77) * .05;\n\tray_dir = rotateZ(ray_dir, angZ);\n/**/\n\treturn ray_dir;\n}\n\nvec3 moveCamera(vec3 ray_start)\n{\n\t//return ray_start;\n\t/**/\n\tray_start += vec3(278, -1073, -3000);\n\tvec3 ray_start_a = ray_start\n\t\t+ vec3(cos(time * 0.8) * 50., cos(time * 0.9) * 50., (cos(time * .3) + 1.) * 50.);\n\treturn mix(ray_start, ray_start_a, smoothstep(0., 1., (time - 5.) * .1));\n\t/**/\n}\n\n//////////////////////////////////////////////////////\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    resolution = iResolution.xy;\n    mouse = min(iMouse.xy / iResolution.xy, vec2(1));\n\n\tvec3 ray_start = vec3(0.0, 0.0, -25.0);\n\tvec3 color = vec3(0);\n\tvec2 position = vec2((fragCoord.x - resolution.x *.5) / resolution.y, (fragCoord.y - resolution.y *.5) / resolution.y);\n\tvec3 ray_s = moveCamera(ray_start);\n\tvec3 ray_dir = rotateCamera(ray_s, normalize(vec3(position, 0) - ray_start));\n\n\tcolor += RenderCornel(ray_s, ray_dir, fragCoord);\n\t\n\tcolor *= EXPOSURE;\n\tcolor = pow(color, vec3(1. / GAMMA));\n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xd2GDd","date":"1395285974","viewed":161,"name":"[SH]2014 My shame","username":"unai","description":"My evolution:\nOhhlooks nice.\nSeems easy...\nUmm, whats that ?\nWhy is black!?\nWTF!! shit!\n?Â¿???$$%%\nÂ¿%%&$$!!!\n\nI HAVE A CUBE!!!!!\n\n\n\n, I have a cube!!!!!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","firstshader","myshame"],"hasliked":0,"parentid":"","parentname":""}}