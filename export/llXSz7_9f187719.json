{"ver":"0.1","info":{"id":"llXSz7","date":"1435250375","viewed":578,"name":"A Bouncing Ball","username":"Vizual","description":"A loop of a bouncing ball, with a diffuse light source in the top left, and a specular light source in the top right to add a 3D effect.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["phongshading","implicitsphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Light Intensities\nvec3 ia = vec3(0.1,0.1,0.1);\nvec3 id = vec3(0.0,0.0,1.0);\nvec3 is = vec3(1.0,1.0,1.0);\nfloat alpha = 8.0;\n\n// Viewport Resolution\nfloat aspect = iResolution.x / iResolution.y;\nfloat height = 1.0;\nfloat width = aspect;\n\n// Camera and Light Positions\nvec3 eye = vec3(width/2.0,height/2.0,-3.0);\nvec3 L1_pos = vec3(0.0, height, -2.0);\nvec3 L2_pos = vec3(1.5*width, 1.5*height, -1.0);\n\nbool insideCircle(vec2 P, vec3 center, float rad) \n{\n    float d1 = (P.x - center.x) * (P.x - center.x);\n    float d2 = (P.y - center.y) * (P.y - center.y);\n    return d1 + d2 < rad*rad;\n}\n\nvec3 getCenter(float rad)\n{\n    float t = mod(iTime,10.0);\n    float x = (t / 5.0);\n    float y = abs(sin(t) / t) + rad;\n    return vec3(x,y,0.0);\n}\n\nvec4 getColor(vec3 P, vec3 center, float rad)\n{\n    vec3 N = normalize(P - center);\n    vec3 L1 = normalize(L1_pos - P);\n    vec3 L2 = normalize(L2_pos - P);\n    vec3 V = normalize(eye - P);\n    vec3 R = 2.0 * dot(N,L2) * N - L2;\n    \n    vec3 ambient = ia;\n    vec3 diffuse = dot(N,L1) * id;\n    vec3 specular = pow(max(dot(R,V),0.0),alpha) * is;\n    \n    return vec4(ambient + diffuse + specular, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x = uv.x * aspect;\n    \n    float rad = 0.2;\n    vec3 center = getCenter(rad);\n    \n    if ( insideCircle(uv, center, rad) )\n    {\n        float z = -sqrt(rad*rad - pow(uv.x - center.x,2.0) - pow(uv.y - center.y,2.0));\n        vec3 point = vec3(uv.x, uv.y, z);\n        fragColor = getColor(point, center, rad);\n    }\n    else {\n        fragColor = vec4(0.5,0.5,0.5,1.0);\n    }\n}","name":"","description":"","type":"image"}]}