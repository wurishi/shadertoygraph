{"ver":"0.1","info":{"id":"MfyXDz","date":"1715031465","viewed":79,"name":"bae #007 ~ Windows of Blub","username":"BretHudson","description":"Blub blub","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["blub"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 p)\n{\n    p = fract(p * vec2(123.345, 734.6897));\n    p += dot(p, p + 45.32);\n    return fract(p.x * p.y);\n}\n\nfloat drawCircle(vec2 gv, float time, vec2 offset, float yDir, vec2 id)\n{\n    float n = hash(id);\n    float t = floor(time);\n    offset -= vec2(t, t * yDir);\n    vec2 jitter = vec2(time - 0.5, yDir * (time - 0.5)) + 0.5 * vec2(hash(id + offset));\n    \n    vec2 pos = gv - jitter - offset;\n    \n    float size = 0.15 + 0.1 * sin(n * 40.0 + time);\n    float d = length(pos) - size;\n    float m = 0.05 / abs(d);\n\n    return max(0., m * smoothstep(0.4, 0.2, d)) * .7;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    uv *= 1.5;\n    \n    uv += .5;\n    \n    float startTime = 35.9;\n    float _iTime = iTime + startTime;\n    \n    vec2 gv = fract(uv) - .5;\n    vec2 id = floor(uv);\n    float n = hash(id);\n\n    vec3 col = vec3(0., 0., 0.2);\n    \n    float tScale = 0.3 + sin(_iTime) * 0.002;\n    float time = _iTime * tScale + 1.3;\n    \n    for (float y = -1.; y <= 1.; ++y)\n    {\n        for (float x = -1.; x <= 1.; ++x)\n        {\n            float m = drawCircle(gv, _iTime, vec2(x, y), 1., id);\n            col += m * vec3(.7, .4, .0);\n            m = drawCircle(gv, time, vec2(x, y), -1., id);\n            col += m * vec3(1.0, 0.4, .6);\n        }\n    }\n    \n    float val = max(gv.x, gv.y) - .46;\n    if (val > 0.) col += val * 2.;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}