{"ver":"0.1","info":{"id":"sstBDs","date":"1657492602","viewed":115,"name":"c2lors","username":"natnatnat","description":"colors","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"7dtfDl","parentname":"Fork st0rs natnatnat 114"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14,\n    z = 10.,\n    R = 1.;\n\n// start: from https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat hash11(float p)\n{\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    p *= p + p;\n    return fract(p);\n}\n// end\n\nvoid mainImage( out vec4 O, in vec2 u ) {\n    vec2 Res = iResolution.xy, \n        U = (2. * u - Res) / Res.y;\n    O = vec4(0.);\n    vec2 Ur = round(U * z/2. + iTime); // rounded coords\n    vec2 N = vec2(hash11(Ur.x), hash11(Ur.y));\n    U = U + N; // + texture(iChannel1, vec2(round((U.x + 1.)/2. * z)/z)).x\n    vec2 U1 = round(U * z/2.); \n    if (hash12(U1) > 0.8) {\n        vec2 C = U1 * 2./z; // center\n        O = vec4(N, length(C), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}