{"ver":"0.1","info":{"id":"MsVfzW","date":"1527865766","viewed":188,"name":"Audio bar viz","username":"arco","description":"Remake of the audio bars of Shadertoy","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["audio","bars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb (vec3 hsv) {\n  // from HSV to RGB color vector\n  hsv.yz = clamp (hsv.yz, 0.0, 1.0);\n  return hsv.z * (1.0 + 0.63 * hsv.y * (cos (2.0 * 3.14159 * (hsv.x + vec3 (0.0, 1.0 / 3.0, 2.0 / 3.0))) - 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ratio = iResolution.x / iResolution.y;\n    \n    vec2 uv = fragCoord / iResolution.xy;\n\n    float vol = 0.;\n    float width = 20.;\n    float fakeX = fragCoord.x - mod(fragCoord.x, width);\n    for (float i = -(width/2.); i < width/2.; i++) {\n        vol += texelFetch(iChannel1, ivec2((fakeX + i) / ratio, 0), 0).r;\n    }\n    vol /= width;\n    \n    vec3 col;\n    if (vol * iResolution.y > fragCoord.y) {\n        col = hsv2rgb(vec3(vol,1,1));\n    } else {\n        col = vec3(0,0,0);\n    }\n    \n    // vec3 col = vec3(vol, vol, vol);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}