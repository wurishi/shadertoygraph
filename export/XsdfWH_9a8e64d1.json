{"ver":"0.1","info":{"id":"XsdfWH","date":"1524945335","viewed":134,"name":"Sausage bird","username":"dpiponi","description":"Some kind of swimmy thing. Gotta work on that aliasing and the occasional bits the marcher misses","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["organic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat4 translate(vec3 p) {\n    return mat4(1.0,  0.0,  0.0,  -p.x,\n              0.0,  1.0,  0.0,  -p.y,\n              0.0,  0.0,  1.0,  -p.z,\n              0.0, 0.0, 0.0, 1.0);\n}\n\nmat4 scale(vec3 s) {\n    return mat4(s.x,  0.0,  0.0,  0.0,\n              0.0,  s.y,  0.0,  0.0,\n              0.0,  0.0,  s.z,  0.0,\n              0.0, 0.0, 0.0, 1.0);\n}\n\nmat4 rotateZ(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat4(c,  -s,  0.0,  0.0,\n              s,  c,  0.0,  0.0,\n              0.0,  0.0,  1.0,  0.0,\n              0.0, 0.0, 0.0, 1.0);\n}\n\nmat4 rotateY(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat4(c,  0.0, s,  0.0,\n              0.0,  1.0, 0.0, 0.0,\n              -s,  0.0, c,  0.0,\n              0.0, 0.0, 0.0, 1.0);\n}\n\nmat4 rotateX(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat4(1.0, 0.0, 0.0, 0.0,\n                0.0, c,  -s,  0.0, \n                0.0, s,  c,  0.0,\n                0.0,  0.0,  0.0,  1.0);\n}\n\nfloat g(vec3 x) {\n    mat4 m = rotateZ(1.5*iTime)*scale(vec3(1.5, 2.5, 1.0));\n    x = (vec4(x, 1.0)*m).xyz;\n    return (length(x)-1.0)/2.5;\n}\n\nfloat h(vec3 x) {\n    mat4 m = rotateZ(1.5*iTime)*scale(vec3(1.0, 1.0, 1.0));\n    return g((vec4(x, 1.0)*m).xyz);\n}\n\nfloat f(vec3 x) {\n    mat4 m = translate(vec3(0.2, -0.11, 0.1))*rotateX(0.03*sin(0.5+2.0*iTime))*scale(vec3(1.01, 1.01, 1.01))*rotateZ(-0.025+0.075*sin(2.0*iTime));\n    float norm = 1.01;\n    float s = 1.0;\n    float t = 1000.0;\n    for (int i = 0; i < 30; ++i) {\n        x.x = abs(x.x);\n        float hh = h(x)/s;\n        t = min(t, hh);\n        x = (vec4(x, 1.0)*m).xyz;\n        s *= norm;\n    }\n    return t;\n}\n\nfloat eps = 0.0001;\nfloat lambda = 2.0;\n\n\nfloat lighting(vec3 x, vec3 n) {\n    return 4.0*f(x+0.1*n);\n}\n\nvec3 march(vec3 p, vec3 d) {\n    float c;\n    c = f(p);\n    if (c < 0.0) {\n        return vec3(0.0, 0.0, 0.0);\n    }\n    for (int i = 0; i < 80; ++i) {\n        float step = max(0.01, 1.0*c);\n        p = p+step*d;\n        c = f(p);\n        if (c <= 0.0) {\n            float ex, ey, ez;\n            ex = f(p+vec3(eps, 0.0, 0.0));\n            ey = f(p+vec3(0.0, eps, 0.0));\n            ez = f(p+vec3(0.0, 0.0, eps));\n            vec3 n = vec3(ex-c, ey-c, ez-c)/eps;\n            n = normalize(n);\n            //mat4 m = rotateY(0.1*iTime);\n            //vec3 light = (vec4(1.0,1.0,-1.0,1.0)*m).xyz;\n            //float l = 0.2+0.8*max(dot(n, light)/sqrt(3.0), 0.0);\n            float l = 1.5*lighting(p, n);\n            return vec3(l)*vec3(1.9, 1.2, 1.2);\n        }\n    }\n    return vec3(0.1, 0.2, 0.3);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy-0.5*iResolution.xy;\n    uv = 2.0*uv/iResolution.y;\n    vec2 xy = iMouse.xy/iResolution.xy;\n\n    vec3 p = vec3(0.0, 0.0, -10.0)+0.1*vec3(xy.x, xy.y, 0.0);;\n    vec3 d = normalize(vec3(0.5*uv, 1.0));\n    mat4 m = rotateY(0.1*iTime);\n    p = (vec4(p, 1.0)*m).xyz;\n    d = (vec4(d, 1.0)*m).xyz;\n    vec3 color = march(p, d);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}