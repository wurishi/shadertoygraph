{"ver":"0.1","info":{"id":"Wll3RS","date":"1556723488","viewed":723,"name":"Night snowfall","username":"avin","description":"My attempt to make snowfall shader","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["snow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Try another snow force with values in range [.1, .3]\n#define SNOW_FORCE .25\n#define INIT_SPEED 60.\n#define AMOUNT 5.\n\nfloat rand(vec2 co) { \n    return fract(sin(dot(co.xy , vec2(12.9898, 78.233))) * 43758.5453);\n} \n\nfloat snow( vec2 uv, float size, float speed, float timeOfst, float blur, float time)\n{       \n    vec2 ruv = uv*size  + .05;    \n    vec2 id = ceil(ruv) + speed;       \n        \n    float t = (time + timeOfst)*speed;\n        \n    ruv.y += t * (rand(vec2(id.x))*0.5+.5)*.1;\n    vec2 guv = fract(ruv) - 0.5;\n    \n    ruv = ceil(ruv);    \n    float g = length(guv);\n    \n    float v = rand(ruv)*0.5;\n    v *= step(v, clamp(SNOW_FORCE, .1, .3));\n    float m = smoothstep(v,v - blur, g);    \n    \n    return m;        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\n    float m = 0.;       \n    \n    float fstep = .1/AMOUNT;\n    for(float i=-1.0; i<=0.0; i+=fstep){\n        vec2 iuv = uv + vec2(cos(uv.y*2. + i*20. + iTime*.5)*.1, 0.);\n        float size = (i*.5+.5) * 40. + 10.;\n        m += snow(iuv + vec2(i*.1, 0.), size, INIT_SPEED + i*5., i*10., .3 + i*.25, iTime) * abs(1. - i);\n    }\n    \n    vec3 col = vec3(0.5) * m;\n        \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}