{"ver":"0.1","info":{"id":"4ljcRD","date":"1507684864","viewed":169,"name":"RandomDither","username":"dahart","description":"Adjustable color quantizing + optional random dither. Set DST_BITS to the number of bits per channel, and turn DITHER on or off.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random","dither","randither","randomdither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Adjustable color quantizing + optional random dither\n// Reduce color palette to DST_BITS per channel\n\n#define DITHER true // adjust this\n#define DST_BITS 2  // adjust this\n\n#define SRC_BITS 8\n#define SHIFT_BITS (SRC_BITS - DST_BITS)\n\n#define SRC_MAX   ((1 << SRC_BITS  ) - 1)\n#define DST_MAX   ((1 << DST_BITS  ) - 1)\n#define SHIFT_MAX ((1 << SHIFT_BITS) - 1)\n\n\nfloat Noise(vec2 n){return fract(sin(dot(n.xy,vec2(12.9898, 78.233)))*43758.5453);}\n\nfloat quant(float src, float rand) {\n    int isrc = int(src * float(SRC_MAX)); \n    int dst = isrc >> SHIFT_BITS;\n    if (DITHER) {\n        int maxTrunc = (1 << SHIFT_BITS) - 1;\n        int srcTrunc = isrc & maxTrunc;\n        if (float(srcTrunc) > rand * float(maxTrunc)) dst = min(DST_MAX, dst + 1);\n    }\n    return float(dst) / float(DST_MAX);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = texture(iChannel0, uv);\n    float s = Noise(uv + vec2(iTime, 0));    \n    float r = quant(color.r, s);\n    float g = quant(color.g, s);\n    float b = quant(color.b, s);\n    fragColor = vec4(r, g, b, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}