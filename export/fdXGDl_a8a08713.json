{"ver":"0.1","info":{"id":"fdXGDl","date":"1616773076","viewed":407,"name":"texture roll","username":"FabriceNeyret2","description":"texture 4-quadrants roll.\nSince it is done on a buffer of uv coordinates rather than directly on the texture pixels, this allows videos or webcam.\nRolling back should restore the image.","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["uv","roll"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    O = texture(iChannel1, T(U).xy );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    vec2 V = U - R/2.;\n    \n    if (iFrame<1) O.xy = U/R; // init with uv coordinates\n    else\n      O =  iFrame % 2 > 0     // must alternate rolls to allow transmission via overlapping\n             ?  T( U + vec2( 0 , sign(V.x) ))\n             :  T( U + vec2( -sign(V.y), 0.));  // 0. instead of 0 to fix a windows bug.\n}                                               // see https://www.shadertoy.com/view/fsj3Wh\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R    iResolution.xy\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )","name":"Common","description":"","type":"common"}]}