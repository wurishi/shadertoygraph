{"ver":"0.1","info":{"id":"MXdSWl","date":"1720327316","viewed":47,"name":"Playground #1","username":"stasyanje","description":"This is the first submitted playground ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define minDimension min(iResolution.x, iResolution.y)\n\n\nfloat Circle(vec2 center, float radius, vec2 uv, float smoothEdgeWidth)\n{\n   float value = distance(center, uv);\n   return smoothstep(radius + smoothEdgeWidth, radius, value);\n}\n\nvec4 drunkenSnake(\n    in vec2 ar,\n    in vec2 uv,\n    in float animation1,\n    in float animation2,\n    in vec2 center,\n    in float area\n) {\n\n  float count = 50.0;\n  vec3 color;\n  \n  for (float i = 0.0; i < count; i++) {\n    float travellingRadius = (i / count) * area * 0.5;\n    float velocity = 0.05 + 1.0 - area * travellingRadius;\n    float position = 5.0 + (count - i) * animation1 * velocity;\n    \n    vec2 circleCenter = center * ar;\n    \n    circleCenter = circleCenter + vec2(\n      sin(position * animation1),\n      cos(position * animation2)\n    ) * travellingRadius * uv / ar;\n    \n    vec3 circleColor;\n    \n    float animation1Abs = abs(animation1);\n    \n    circleColor.r = 1.0 - step(1.0, i) * animation1Abs * animation1Abs;\n    circleColor.g = 0.2 + i / count - animation1Abs * 0.1;\n    circleColor.b = i / (count * 0.5) - 0.3 - animation1Abs * 0.3;\n    \n    float circle = Circle(circleCenter, 0.05, uv, 1.5 / minDimension);\n    \n    color = mix(color, circleColor, circle);\n  }\n  \n  return vec4(color, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n  vec2 ar = vec2(iResolution.x / iResolution.y, 1.0);\n  \n  // vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n  vec2 uv = fragCoord / iResolution.y;\n  \n  vec4 color;\n  \n  float sine = sin(iTime);\n  float cosi = cos(iTime);\n  \n  float sumAnimation = sine + cosi;\n  float doubleSinAnimation = sine * sine;\n  float doubleCosAnimation = cosi * cosi;\n  \n  color += drunkenSnake(ar, uv, sumAnimation, 1.0 - doubleSinAnimation, vec2(0.1, 0.1), 1.6);\n  color += drunkenSnake(ar, uv, sumAnimation, doubleSinAnimation * 0.5, vec2(0.3, 0.6), 0.6);\n  color += drunkenSnake(ar, uv, sumAnimation * 0.5, doubleSinAnimation * 1.5, vec2(0.5, 0.15), 1.0);\n  color += drunkenSnake(ar, uv, sumAnimation, doubleSinAnimation, vec2(0.75, 0.5), 0.8);\n\n  fragColor = color;\n}\n\n","name":"Image","description":"","type":"image"}]}