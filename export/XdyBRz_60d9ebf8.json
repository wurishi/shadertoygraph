{"ver":"0.1","info":{"id":"XdyBRz","date":"1527355381","viewed":145,"name":"#51521_1_0","username":"purple_marine","description":"Name: \"Rising Sun\" Description: â€“ Common shader of \"rising sun from Japan\", perhaps this shader can be made as somehow simpler","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["japan","nice","novice","eazy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.y;\n    \n    vec2 st = vec2(atan(uv.y,uv.x), length(uv)); // Initialize polar coordinates\n    \n    uv = vec2(st.y , st.x-iTime); // Use polar coordinates on a cartesian coordinates\n    \n    \n    float y = uv.y*10.; // Rise the y coordinates by 10 times\n    float e = cos(y)*10.;\n    \n    \n    float c = e;\n    \n    vec3 mask = vec3(.0, 1., 1.); // Initialize mask to recolor\n    \n    vec3 col = vec3(c)*mask;\n    \n    col = col / fwidth(col); // Antialiasing. Thanks @FabriceNeyret2\n   \n    \n    fragColor = vec4(1.-col, 1.);\n}","name":"Image","description":"","type":"image"}]}