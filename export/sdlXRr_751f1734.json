{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float shake_speed = 30.;\n\nconst float shake_power = 0.3;\nconst float zoom_power = 0.4;\n\nconst float motion_blur_power = 0.005;\nconst float motion_blur_iter = 10.;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, 1.);\n    float ratio = pow(1. - time, 2.);\n    ratio *= -tanh(5. * (time - 0.5)) * 0.5 + 0.5;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    ///////////////\n    //   Shake   //\n    ///////////////\n    uv -= 0.5;\n    uv += shake_power * ratio * vec2(sin(shake_speed * time), \n                                     cos(shake_speed * time));\n    uv *= 1. - zoom_power * ratio;\n    uv += 0.5;\n    \n    uv = abs(uv);\n    uv = step(1., uv) * 2. + sign(1.-uv) * uv;\n\n    /////////////////////\n    //   Motion blur   //\n    /////////////////////\n    vec3 col = vec3(0.);\n    vec2 hold_uv;\n    for (float i = -motion_blur_iter/2.; i < motion_blur_iter/2.; ++i) {\n        hold_uv = vec2(uv.x + ratio * motion_blur_power * i, \n                       uv.y + ratio * motion_blur_power * i);\n        col += texture(iChannel0, hold_uv).rgb;\n    }\n    col /= motion_blur_iter;\n    col += pow(ratio, 2.) * col;\n    \n    \n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"sdlXRr","date":"1734426809","viewed":33,"name":"Shake.No.11","username":"avartation","description":"asdf","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""}}