{"ver":"0.1","info":{"id":"ttyGWz","date":"1578655898","viewed":60,"name":"KxcSquaresTest","username":"Harekelas","description":"Practicing with shader toy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tests"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DrawCircle (vec2 coord, vec2 c, float r, float th)\n{\n    float d = length(coord - c * iResolution.xy);\n    float col = 0.;\n    \n    if(d < r) col = 1.;\n    else if(d < r + th) col = 1. - (d - r) / th;\n    \n    return col;\n}\n\nfloat DrawSquare (vec2 coord, vec2 c, vec2 r)\n{\n    float xd = length(coord.x - c.x * iResolution.x);\n    float yd = length(coord.y - c.y * iResolution.y);\n    \n    float col = 0.;\n    if(xd <= r.x && yd <= r.y) col = 1.;\n    \n    return col;\n}\n\nvec3 DrawFace(vec2 fragCoord, vec2 fc, float fr, vec3 col)\n{\n    float fTh = fr * 0.02; \n    float oTh = fr * 0.01;\n    if(fTh < 2.) fTh = 2.;\n    if(oTh < 2.) oTh = 2.;\n    \n    float face = DrawCircle(fragCoord, fc, fr, fTh);\n\tfloat lEye = DrawCircle(fragCoord, vec2(fc.x - fr * 0.0005,fc.y + fr * 0.001), fr * 0.15,oTh);\n\tfloat rEye = DrawCircle(fragCoord, vec2(fc.x + fr * 0.0005\t,fc.y + fr * 0.001), fr * 0.15,oTh);    \n    \n    float lowMouth = DrawCircle(fragCoord, vec2(fc.x,fc.y - fr * 0.00005), fr * 0.675,oTh);\n    float upMouth = DrawCircle(fragCoord, vec2(fc.x,fc.y + fr * 0.00075), fr * 0.9,oTh);\n    float smile = lowMouth - upMouth;\n    if(smile < 0.) smile = 0.;\n    \n    float mask = face - smile - lEye - rEye;\n       \n    return col * mask;\n}\n\nvec3 DrawFrame(vec2 fragCoord)\n{\n    return vec3(0.,0.,0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //float s = sin(iTime) * 0.3 + 0.5;\n    //float c = cos(iTime) * 0.3 + 0.5;\n    //float as = -sin(iTime) * 0.3 + 0.5;\n    //float ac = -cos(iTime) * 0.3 + 0.5;\n    \n\t//vec3 face1 = DrawFace(fragCoord, vec2(s - 0.1,ac), 40.,vec3(1.,1.,0));    \n    //vec3 face2 = DrawFace(fragCoord, vec2(s + 0.1,c), 40.,vec3(0.5,1.,1.));\n    \n    float size = sin(iTime) * 0.5 + 0.5;\n    \n    float square1 = DrawSquare(fragCoord,vec2(0.166667,0.166667), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);    \n    float square2 = DrawSquare(fragCoord,vec2(0.5,0.166667), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);\n    float square3 = DrawSquare(fragCoord,vec2(0.83333,0.166667), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);\n    \n    float square4 = DrawSquare(fragCoord,vec2(0.166667,0.5), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);    \n    float square5 = DrawSquare(fragCoord,vec2(0.5,0.5), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);\n    float square6 = DrawSquare(fragCoord,vec2(0.83333,0.5), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);\n    \n    float square7 = DrawSquare(fragCoord,vec2(0.166667,0.83333), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);    \n    float square8 = DrawSquare(fragCoord,vec2(0.5,0.83333), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);\n    float square9 = DrawSquare(fragCoord,vec2(0.83333,0.83333), vec2(0.15 * iResolution.x,0.15 * iResolution.y)*size);\n    \n    //vec3 final = face1 + face2;\n    vec3 final = (square1 + square2 + square3 + square4 + square5 + square6 + square7 + square8 + square9)* vec3(1.,1.,1.);\n    \n    // Output to screen\n    fragColor = vec4(final,1.);\n}","name":"Image","description":"","type":"image"}]}