{"ver":"0.1","info":{"id":"ds2cWW","date":"1687772687","viewed":152,"name":"Chladni ispired pattern","username":"GianC","description":"Chladni ispired pattern","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["chladnitrippyvisual"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nfloat modFloat(float a, float b) {\n  return a - b * floor(a / b);\n}\nvec4 invertColor(vec4 color) {\n    return vec4(1.0 - color.r, 1.0 - color.g, 1.0 - color.b, color.a);\n}\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.26,0.516,0.357);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n      vec2 uv0 = uv;\n\n    uv=fract(uv)-0.5;\n    float t=iTime/1.0;\n    for (float i = 0.0; i < 3.0; i++) {\n    float n= PI*(4.0+15.0*sin(t/20.0)*cos(t/10.0))*i;\n    float m=PI*(2.0+12.0*sin(t/10.0)*cos(t/10.0))*i;\n    float v= cos(n*uv0.x)* cos(m*uv0.y) - cos(m*uv0.x) *cos(n*uv0.y);\n    float th=step(0.1,v);\n    \n    // Time varying pixel color\n    vec3 col = palette(v);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n        invertColor(fragColor);\n}\n}","name":"Image","description":"","type":"image"}]}