{"ver":"0.1","info":{"id":"4t23Rc","date":"1431004107","viewed":8691,"name":"RGB Shift Glitch","username":"Eethe","description":" ","likes":91,"published":1,"flags":0,"usePreview":1,"tags":["rgb","postprocess","glitch","shift","twitchy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * MIT License\n * Copyright © Etienne 'Eethe' Orlhac\n * 07/08/2015\n *\n * Permission is hereby granted, free of charge, to any person obtaining \n * a copy of this software and associated documentation files (the “Software”), \n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense, \n * and/or sell copies of the Software, and to permit persons to whom the Software \n * is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n * \n * The Software is provided “as is”, without warranty of any kind, \n * express or implied, including but not limited to the warranties of merchantability, \n * fitness for a particular purpose and noninfringement. In no event shall the authors \n * or copyright holders be liable for any claim, damages or other liability, whether in an \n * action of contract, tort or otherwise, arising from, out of or in connection with \n * the software or the use or other dealings in the Software.\n */\n\n#define AMPLITUDE 0.1\n#define SPEED 0.1\n\nvec4 rgbShift( in vec2 p , in vec4 shift) {\n    shift *= 2.0*shift.w - 1.0;\n    vec2 rs = vec2(shift.x,-shift.y);\n    vec2 gs = vec2(shift.y,-shift.z);\n    vec2 bs = vec2(shift.z,-shift.x);\n    \n    float r = texture(iChannel0, p+rs, 0.0).x;\n    float g = texture(iChannel0, p+gs, 0.0).y;\n    float b = texture(iChannel0, p+bs, 0.0).z;\n    \n    return vec4(r,g,b,1.0);\n}\n\nvec4 noise( in vec2 p ) {\n    return texture(iChannel1, p, 0.0);\n}\n\nvec4 vec4pow( in vec4 v, in float p ) {\n    // Don't touch alpha (w), we use it to choose the direction of the shift\n    // and we don't want it to go in one direction more often than the other\n    return vec4(pow(v.x,p),pow(v.y,p),pow(v.z,p),v.w); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    vec4 c = vec4(0.0,0.0,0.0,1.0);\n    \n    // Elevating shift values to some high power (between 8 and 16 looks good)\n    // helps make the stuttering look more sudden\n    vec4 shift = vec4pow(noise(vec2(SPEED*iTime,2.0*SPEED*iTime/25.0 )),8.0)\n        \t\t*vec4(AMPLITUDE,AMPLITUDE,AMPLITUDE,1.0);;\n    \n    c += rgbShift(p, shift);\n    \n\tfragColor = c;\n}","name":"Image","description":"","type":"image"}]}