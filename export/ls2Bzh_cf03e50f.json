{"ver":"0.1","info":{"id":"ls2Bzh","date":"1499546434","viewed":210,"name":"Dancing Lissajous lines","username":"revers","description":"Playing with [url=https://www.shadertoy.com/view/XdSGzh]\"Lissajous\" shader by simesgreen[/url].","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["2d","feedback","lissajous"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI \t\t3.14159\n#define TWO_PI  6.28318\n\n#define speed      (0.5)\n#define frameTime  (float(iFrame) / 60.0)\n#define time       (frameTime * 0.75)\n\n/**\n * Lissajous curve\n * http://en.wikipedia.org/wiki/Lissajous_curve\n */\nvec2 lissajous(float t, float a, float b, float d) \n{\n\treturn vec2(sin(a * t + d), sin(b * t));\n}\n\nvec3 render(vec2 fragCoord) \n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\n\tfloat a = 2.0;\n\tfloat b = 3.0;\n\tfloat d = time;\t// phase\n\n\ta += sin(time * 0.1);\n\tb += cos(time * 0.1);\n\n\tfloat m = 1.0;\n\tvec2 lp = lissajous(0.0, a, b, d) * 0.8; // last point\n\n\tfloat steps = floor((time * speed + 0.5) / 3.0) + 1.0;\n\tsteps = min(steps, 200.0);\n\n\tfor (float i = 1.0; i <= steps; i++) {\n\t\tfloat t = i * TWO_PI / steps;\n\t\tt += sin(time);\n\t\tvec2 p = lissajous(t, a, b, d) * 0.8;\n\n\t\t// distance to line\n\t\tvec2 pa = uv - p;\n\t\tvec2 ba = lp - p;\n\t\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n\t\tvec2 q = pa - ba * h;\n\t\tm = min(m, dot(q, q));\n\n\t\tlp = p;\n\t}\n\tm = sqrt(m);\n\n\tm = 0.1 / m;\n\tm = clamp(m, 0.0, 50.0);\n\n\tfloat st = mod((steps - 1.0) / 10.0, 10.0);\n\n\t// https://iquilezles.org/articles/palettes\n\tvec3 col = 0.5 + 0.5 * cos(TWO_PI * (st + 0.3 + vec3(0.0, 0.33, 0.67)));\n\n\treturn mix(vec3(0.0), col * 0.2, m);\n}\n\n/**\n * https://iquilezles.org/articles/functions\n */\nfloat parabola(float x, float k)\n{\n\treturn max(pow(4.0 * x * (1.0 - x), k), 0.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec3 col = render(fragCoord);\n\n\tvec2 uv = gl_FragCoord.xy / iResolution.xy;\n\tvec3 oldCol = texture(iChannel0, uv).rgb;\n\n\tcol = mix(col, oldCol, 0.9);\n\n\t// cyclic fading\n\tcol *= 1.0 - parabola(mod(time * speed + 1.0, 3.0), 3.0);\n\n\tfragColor = vec4(col, 1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}