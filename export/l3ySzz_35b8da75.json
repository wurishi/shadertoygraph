{"ver":"0.1","info":{"id":"l3ySzz","date":"1719834001","viewed":56,"name":"Moving Dots With AA","username":"jiangyiheng","description":"just moving dots","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define POINT_SIZE 0.03\n#define SMOOTHNESS 0.01\n#define SPEED      10.0\n\n// https://www.shadertoy.com/view/4djSRW\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\n// Result in (-0.25, 0.25)\nvec2 fast_sin(vec2 x)\n{\n\tvec2 a = 2.0 * (fract(x * (0.5 / 3.141593)) - 0.5);\n\treturn a * abs(a) - a;\n}\n\n\nfloat voronoi(vec2 uv, float time) \n{\n    float half_pi = 0.5 * 3.141593;\n\tvec2 fp = fract(uv);\n    vec2 ip = floor(uv);\n\tvec2 phase = hash22(ip) * time;\n\tvec2 offset = fast_sin(vec2(phase.y, phase.x - half_pi));\n    \n\tfloat d = distance(offset * 1.4f + 0.5f, fp);\n\treturn d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / 100.0;\n    \n    float d = 1.0 - smoothstep(POINT_SIZE-SMOOTHNESS, POINT_SIZE+SMOOTHNESS, voronoi(uv, iTime * SPEED));\n\n    // Time varying pixel color\n    vec3 col = vec3(d,d,d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}