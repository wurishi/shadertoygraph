{"ver":"0.1","info":{"id":"wttBz2","date":"1615356904","viewed":124,"name":"2d Water","username":"elindie","description":"A simple water with some floating balls. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2dwater"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sampleWaves(in float x, in float time)\n{\n    // Big Wave\n    float t = sin(x / 400.0 + time) + 1.0;\n    float t1 = t * t;\n      \n    // Med Wave\n    float t2 = sin(x / 100.0 + time) + 2.1;\n    \n    // Small Wave\n    float t3 = sin(x / 3.9) * 0.2;\n    \n    float terrUnion = t1 + t2 + t3 * 0.2;\n    \n    return terrUnion;\n}\n\nbool sampleSphere(in vec2 center, in float radius, in vec2 samplePos) \n{\n    vec2 sphereLocation = vec2(0.34 * iResolution.xy);\n    sphereLocation.y = sampleWaves(sphereLocation.x, iTime) * 50.0;\n    \n    float distance = length(samplePos.xy - center.xy);\n    \n    return distance < radius;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float gradient = sin(uv.y) + 0.2;\n\n    // Time varying pixel color\n    vec3 col = vec3(0,0, 0.5 + 0.5 * sin(uv.x)) * gradient;\n    vec3 skyCol = vec3(0.5,0.2,0) / gradient + 0.5;\n\n    float terrUnion = sampleWaves(fragCoord.x, iTime);\n    \n    float waterHeight = max((fragCoord.y - terrUnion * 50.0), 0.0);\n    vec3 col1 = waterHeight < 0.1 ? col : skyCol;\n  \n  \n    vec2 sphere1 = vec2(0.34 * iResolution.xy);\n    sphere1.y = sampleWaves(sphere1.x, iTime) * 50.0;\n    \n    vec2 sphere2 = vec2(0.31 * iResolution.xy);\n    sphere2.y = sampleWaves(sphere2.x, iTime) * 50.0;\n    \n    vec2 sphere3 = vec2(0.30 * iResolution.xy);\n    sphere3.y = sampleWaves(sphere3.x, iTime) * 50.0;\n    \n    vec2 sphere4 = vec2(0.28 * iResolution.xy);\n    sphere4.y = sampleWaves(sphere4.x, iTime) * 50.0;\n    \n    bool isSphere = sampleSphere(sphere1, 20.0, fragCoord)||\n                    sampleSphere(sphere2, 4.0, fragCoord) ||\n                    sampleSphere(sphere3, 8.0, fragCoord) ||\n                    sampleSphere(sphere4, 10.0, fragCoord);\n    \n    col1.xyz = isSphere ? vec3(1,0,0) : col1.xyz ;\n\n\n    // Output to screen\n    fragColor = vec4(col1,1.0);\n}","name":"Image","description":"","type":"image"}]}