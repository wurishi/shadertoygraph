{"ver":"0.1","info":{"id":"ws3cDj","date":"1601736809","viewed":668,"name":"fake Depth of Field","username":"FabriceNeyret2","description":"Using MIPmap to fake Depth of Field.","likes":19,"published":3,"flags":0,"usePreview":0,"tags":["dof","mipmap","depthoffield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{   vec2  U = u / iResolution.xy;                       // normalized coordinates\n    float z = 1.-.7*U.y;                                // depth along the plane\n    O = 1.5*textureLod(iChannel0, \n                       vec2( U.x-.5 , 1 )/ z -.1*iTime, // perspective parameterization\n                       5.+log2(abs(1./z - 1.5)) ).xxxx; // log2( circle of confusion ) \n  //O = sqrt(O);                                        // cheap sRGB convertion\n}","name":"Image","description":"","type":"image"}]}