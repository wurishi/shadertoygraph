{"ver":"0.1","info":{"id":"sscfW2","date":"1657282950","viewed":91,"name":"trigrid149397757759262942","username":"HaleyHalcyon","description":"grid","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float S3 = sqrt(3.); // compute once and reuse\n#define ZIG(x) 1. - abs(1. - 2. * fract(x))\nconst float TURN = acos(-1.) * 2.; // compute once and reuse\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n#define ROT(theta) mat2(cos(theta+vec4(0,33,11,0)))\n\n\nfloat tri(vec2 uv) {\n    uv -= vec2(2./3.,0.);\n    return min(\n        ZIG(uv.x * 2.),\n        min(\n            ZIG(\n                uv.x + S3 * uv.y\n            ),\n            ZIG(\n                -uv.x + S3 * uv.y\n            )\n        )\n    );\n}\n\nfloat smootherstep(float low, float high, float t) {\n    t = (t - low) / (high - low);\n    t = clamp(t, 0., 1.);\n    return t * t * t * (t * (t * 6. - 15.) + 10.);\n}\n\nvec3 color(float x) {\n    x = fract(x);\n    return mix(\n    mix(\n        HEX(0x009BE8),\n        HEX(0xEB0072), step(.25, x)\n    ), mix(\n        HEX(0xfff100),\n        HEX(0x010a31), step(.75, x)\n    ), step(.5, x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime * 0.75);\n    \n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    float scaleAll = exp2(\n        -smootherstep(0., 1., t)\n    ) * 1.5;\n    float rotAll = fract(0.5 + smootherstep(\n        0., 1.,\n        fract(t + 0.5)\n    ));\n    const float thicc = 1./8.;\n\n    float v = max(step(\n        tri(uv * scaleAll * ROT((rotAll - 1.) / 6. * TURN)),\n        thicc * scaleAll * smootherstep(0., 1., t)\n    ), step(\n        tri(uv * scaleAll * .5 * ROT(rotAll / 6. * TURN)),\n        thicc * scaleAll * .5\n    ));\n    \n    float dist = log2(length(uv));\n    float angle = atan(uv.y, uv.x) / TURN;\n\n    // Time varying pixel color\n    vec3 col = mix(\n        color(\n            -0.5 * dist\n            + 1. * angle\n            + 1. * t\n        ),\n        vec3(1),\n        v\n    );\n    \n//    col += step(length(uv), 1./64.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}