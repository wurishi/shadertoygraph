{"ver":"0.1","info":{"id":"dlVXDz","date":"1686057196","viewed":24,"name":"RexDannyS0","username":"RexDanny","description":"purple sinus curve","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sinus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/ iResolution.y;\n    float ratio = iResolution.x/iResolution.y;\n    \n    //float time = sin((mod(iTime, 2.0*ratio)-ratio)*3.1415);\n    float time = sin(iTime*2.0);\n    float scale = (time + 1.0)/2.0;\n\n    // draw background\n    \n    fragColor = vec4(0,0,0,1.0);\n    \n    float x = (uv.x + 1.0 + iTime) * 5.0;\n    float y = (sin(x)+uv.x*(0.5+scale/2.0))*(0.25 + scale/3.0);\n    vec2 vecS = vec2(uv.x,y);\n    vec2 vecS2 = vec2(uv.x, y+0.75);\n    vec2 vecS3 = vec2(uv.x, y-0.75);\n    if (distance(vecS, uv) < 0.1) {\n        fragColor = vec4(scale,1.0-scale,0,1.0) * (distance(vecS, uv)*5.0+0.5);\n    }\n    if (distance(vecS2, uv) < 0.1) {\n        fragColor = vec4(scale,0,1.0-scale,1.0) * (distance(vecS2, uv)*5.0+0.5);\n    }\n    if (distance(vecS3, uv) < 0.1) {\n        fragColor = vec4(scale,1.0-scale,1.0-scale,1.0) * (distance(vecS3, uv)*5.0+0.5);\n    }\n    float y1 = 0.85;\n    float dist = abs(abs(uv.y) - y1);\n    if (dist < 0.05) {\n        //fragColor = vec4(scale,0,1.0-scale,1.0) * (dist*20.0);\n    }\n}","name":"Image","description":"","type":"image"}]}