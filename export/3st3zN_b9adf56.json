{"ver":"0.1","info":{"id":"3st3zN","date":"1567964414","viewed":5445,"name":"Basic Line shader","username":"srishti87","description":"Basic Line shader","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //normalize\n    vec2 pos = fragCoord.xy/iResolution.yy;\n\n    //set bg color to black\n    fragColor = vec4(0.0,0.5,0.0, 1.0);\n\n    //Line width and point radius in openGL screen space 'units'\n    float lineWidth = 0.008;\n    float pointSize = 0.01;\n    float lineWidthHalf = lineWidth/2.0;\n\n    // arbitrary points\n    //Feel free to set these however you want\n    vec2 point1 = vec2(0.5, 0.7);\n    vec2 point2 = vec2(0.8, 0.3);\n\n    //line equation\n    float m = (point1.y - point2.y)/(point1.x - point2.x);\n    float c = point1.y - m*point1.x;\n\n\n    vec2 line = vec2((pos.y-c)/m, pos.x*m+c);\n    \n    //if current pixel is inside the line, set it's color to white\n    if ((pos.y > line.y-lineWidthHalf && pos.y < line.y+lineWidthHalf) || (pos.x > line.x-lineWidthHalf && pos.x < line.x+lineWidthHalf))\n        fragColor = vec4(1.0);\n    \n    //if current pixel is inside any of the points, set it's color to red\n    if (length(pos-point1) < pointSize || length(pos-point2) < pointSize)\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}