{"ver":"0.1","info":{"id":"XXfyzH","date":"1726050460","viewed":31,"name":"HeartsElizaveta5156488482662","username":"HaleyHalcyon","description":"ararrra","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["spiralheartszoom"],"hasliked":0,"parentid":"fd3yDB","parentname":"Pink and purple hearts"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU (6.283185307)\n#define HEX(x) (vec3((x >> 16) & 255, (x >> 8) & 255, x & 255) / 255.)\n\n#define HEARTCOUNT 6.\n#define HEARTSCALE 1.\n\n#define LAYERS 32.\n#define LAYERSPERLOOP 4.\n#define LAYERSTAGGER -6.\n#define ALLROT (-1./24.)\n#define LAYERSCALE 1.2\n#define TOOFAR 1./32.\n\nfloat genHearts(vec2 uv) {\n    uv.y -= 0.5;\n    uv.x = abs(uv.x);\n    float a = max(0.0, 3. * (uv.x + uv.y) - .5);\n    float b = 3. * (uv.x - uv.y) - .5;\n    return a*a + b*b;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float time = fract(1./3.*iTime);\n  // Normalized pixel coordinates (from 0 to 1)\n  float scale = min(iResolution.x, iResolution.y);\n  vec2 uv = (2. * gl_FragCoord.xy - iResolution.xy) / scale;\n  \n  float dist = length(uv);\n  float toofar = step(TOOFAR, dist);\n  float angle = atan(uv.y, uv.x) / TAU;\n  \n  float hearts = 0.;\n  vec3 col = vec3(0);\n  \n  for (float i = 0.; i < LAYERS; i++) {\n      float depth = i - time * LAYERSPERLOOP;\n      float layerRot = angle + depth * ALLROT + i * (LAYERSTAGGER / LAYERSPERLOOP / HEARTCOUNT);\n      vec2 uvHeart = vec2(\n          fract(layerRot * HEARTCOUNT) - 0.5,\n          clamp(\n              -0.3 + length(uv * min(0.0, depth - LAYERS + LAYERSPERLOOP) * LAYERSCALE)\n          , 0., 1.)\n      );\n      float v = genHearts(uvHeart) * toofar;\n      //col.rb = uvHeart;\n      //col.g = v;\n      hearts = mix(\n          hearts, 5.,\n          step(v, 0.8)\n      );\n      hearts = mix(\n          hearts, mod(floor(\n             (0.5 + layerRot) * 6.0\n          ), 3.0) + 1.0,\n          step(v, 0.4)\n      );\n  }\n  col = mix(\n      vec3(0xd5, 0xb8, 0xfe) / 255.,\n      vec3(0xa8, 0x7b, 0xd7) / 255.,\n      step(\n          0.8 +\n          0.13 * log(dist),\n          abs(2. * fract(\n              1.6 * dist +\n              15. * angle +\n              -2. * time\n          ) - 1.)\n      )\n  );\n  \n  col = mix(\n      mix(\n          col, vec3(0xd8, 0xec, 0xf7) / 255.,\n          step(0.5, hearts)\n      ),\n      mix(\n          vec3(0xff, 0xf3, 0xb8) / 255.,\n          mix(\n              vec3(0xf9, 0xca, 0xde) / 255.,\n              vec3(0xa8, 0x7b, 0xd7) / 255.,\n              step(3.5, hearts)\n          ),\n          step(2.5, hearts)\n      ),\n      step(1.5, hearts)\n  );\n  \n  col = mix(\n      vec3(0xa8, 0x7b, 0xd7) / 255.,\n      col,\n      toofar\n  );\n  \n  // heart drawing test\n  /*\n  col = vec3(\n     fract(uv.x), fract(genHearts(\n         fract(uv.y),\n         fract(uv.x) - .5\n     )),  fract(uv.y)\n  );//*/\n  \n  // Output to screen\n  fragColor = vec4(\n    col, 1.0\n  );\n}","name":"Image","description":"","type":"image"}]}