{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Fractal mouse dependent shader by David Jonsson 2014\n\t\n    const int maxIters = 256;\n    \n    int iter = 0;\n    \n    vec2 mouse = iMouse.xy/iResolution.xy;\n    vec2 c = vec2((mouse.x - .5) * 3., 5.*pow(1.5*(mouse.y - .5), 3.));\n    float iterLimit = 8.0; \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 z = (uv - vec2(.5, .5))* 3.0;\n    float zdot;\n    \n    for (int i = 0; i < maxIters ; i++) {\n      \tz = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n      \titer = i;\n        zdot = dot(z, z);\n        if (zdot > iterLimit) {\n            break;\n        }\n    }\n    \n\tfragColor = vec4(clamp(float(iter), 0., 40.)/80., float(iter)/float(maxIters), clamp(zdot, 0., 256.)/256., 1.0);\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltsGR8","date":"1418689974","viewed":311,"name":"Z → Z² + C","username":"davidjonsson","description":"Yet another fractal. Checking if Z → Z² + C converges or not (Z and C complex and C mouse dependent).\nDrag around with the mouse in x and y to change the shape.\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["julia","complexconvergence"],"hasliked":0,"parentid":"","parentname":""}}