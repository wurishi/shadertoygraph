{"ver":"0.1","info":{"id":"MtV3WK","date":"1477079927","viewed":213,"name":"Generating noise with Conway","username":"Nesvi7","description":"Experimenting with Conways game to generate things.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["noise","automata","cellular","conwaysgame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CAMERAMOVEMENT 0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    #if CAMERAMOVEMENT\n\tfragColor = vec4(texture(iChannel0,uv*(0.35 + 0.65*(sin(iTime*0.2)+1.0)*0.5)));\n    #else\n    fragColor = vec4(texture(iChannel0,uv*0.35));\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 positionToUV(vec2 p){\n    return p/iResolution.xy;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n\tvec2 uv = positionToUV( fragCoord);       \n\n    vec4 cellColor = texture(iChannel1,uv);\n    float alive = cellColor.r;\n    \n    \n    #if 1\n    if( mod(float(iFrame),150.0) == 0.0){//Initialization\n        float initialization = clamp((texture(iChannel3,mod(uv+vec2(float(iFrame)/12.0,float(iFrame)/43.0),1.0)).r-0.5)*1000.0,0.0,1.0);//float initialization = clamp((texture(iChannel3,mod(uv+vec2(float(iFrame)/12.0),1.0)).r-0.5)*1000.0,0.0,1.0);\n    \tif(cellColor.g > 0.1){\n            vec2 ss = 1.0/iResolution.xy;\n            cellColor.g = texture(iChannel1,uv+vec2(-ss.x,0.0)).g;\n            cellColor.g += texture(iChannel1,uv+vec2(ss.x,0.0)).g;\n            cellColor.g += texture(iChannel1,uv+vec2(0.0,-ss.y)).g;\n\t\t\tcellColor.g += texture(iChannel1,uv+vec2(0.0,ss.y)).g;\n            cellColor.g /= 4.0;\n        }\n    \tfragColor = vec4(initialization,0.0,cellColor.b+cellColor.g,0.7);      \t\n        return;\n    }\n    #else\n    if( iFrame < 20){//Initialization\n        float initialization = clamp((texture(iChannel3,uv).r-0.5)*1000.0,0.0,1.0);\n    \tfragColor = vec4(initialization,cellColor.g,0.0,0.7);    \t\n        return;\n    }\n    #endif\n    else if(fract(iTime/4.0)*10.0 == 0.01){\n\t\tfragColor = vec4(alive,0.0,0.0,0.0); \n        return;\n    }\n    else{        \n       \n        int neightbours = 0;\n        for(float i = -1.0; i <= 1.0; i++)\n            for(float j = -1.0; j <= 1.0; j++)\n\t\t\t\tif( !(i == 0.0 && j == 0.0) && texture(iChannel1,positionToUV(fragCoord.xy + vec2(i,j))).r > 0.0)\n                    neightbours++;\n               \n\t\tif(alive == 1.0){\n        \tif(neightbours < 2 || neightbours > 3)\n            \talive = 0.0;\n            \n\t\t}\n        else{\n            if(neightbours == 3){\n                alive = 1.0;\n                cellColor.g += 0.01;\n            }\n        }\n            \n    }    \n    fragColor = vec4(alive,cellColor.g,cellColor.b,cellColor.a);    \n}","name":"Buf A","description":"","type":"buffer"}]}