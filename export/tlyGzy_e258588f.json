{"ver":"0.1","info":{"id":"tlyGzy","date":"1579203463","viewed":384,"name":"8D sound experiment","username":"Veggiebob","description":"8D experimenting","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float head_radius = 0.1;\nconst vec2 ear_direction = vec2(0., 1.);\nconst vec2 ear_right = vec2(1.0, 0.) * head_radius;\nconst vec2 ear_left = vec2(-1.0, 0.) * head_radius;\nconst float _8D_speed = 1.0;\nfloat fade (float t, float intensity, float duration) {\n    return exp(-t / duration) * intensity;\n}\nfloat note (float frequency, float time, float start) {\n    return max(time-start, 0.0) * sin(440.0 * time * frequency);\n}\nvec2 sound_source (vec2 source, float volume) {\n    return vec2(\n        dot(normalize(source-ear_left), ear_direction),\n        dot(normalize(source-ear_right), ear_direction)\n    ) * volume;\n}\nvec2 rotate2d (vec2 p, float angle){\n    return vec2(p.x*cos(angle)-p.y*sin(angle), p.y*cos(angle)+p.x*sin(angle));\\\n}\nvec2 _8D (float t, float v) {\n    return sound_source(\n        rotate2d(\n            vec2(1.0, 0.), \n            t*_8D_speed\n        ), \n    v);\n}\nvec2 mainSound( in int samp, float time )\n{\n    return vec2(_8D(time, note(6.2831, time, 0.0) * fade(time, 8.0, 10.)));\n}","name":"Sound","description":"","type":"sound"}]}