{"ver":"0.1","info":{"id":"WlV3Dh","date":"1578834005","viewed":78,"name":"title screen sine wave","username":"Zeradok","description":"base for game title screen maybe","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wave","animation","sine","titlescreen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WAVE_WIDTH 0.05\n\nvec3 background() {\n    return vec3(1);\n}\n\nvec3 colorRGB(float x, float y, float z) {\n    return vec3(x/255., y/255., z/255.);\n}\n\nint wave(vec2 uv, float offset, float waveLength, float a, float speed, int layer) {\n    if (abs(a * sin((offset + uv.x + iTime * speed) * 1./waveLength) - uv.y) <= WAVE_WIDTH/3. + WAVE_WIDTH * pow(uv.x, 2.)) {\n    \treturn layer;\n    }\n    return 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = -1. + 2.*fragCoord/iResolution.xy;\n\n    // Clear background as base\n    vec3 col = background();\n    vec3 rd = vec3(normalize(uv), 1.);\n    vec3 red = colorRGB(255., 188., 188.);\n    vec3 blue = colorRGB(147., 255., 255.);\n    vec3 yellow = colorRGB(255., 237., 127.);\n    int wave1 = wave(uv, 0., .5, .25, .25, 1);\n    int wave2 = wave(uv, .4, .5, .20, .3, 2);\n    int wave3 = wave(uv, .7, 1., .20, .2, 3);\n    int wave = max(wave1, wave2);\n    wave = max(wave, wave3);\n    if (wave == 1) {\n        col = red;\n    } else if (wave == 2) {\n        col = blue;\n    } else if (wave == 3) {\n        col = yellow;\n    }\n\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}