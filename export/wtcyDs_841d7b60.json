{"ver":"0.1","info":{"id":"wtcyDs","date":"1610194053","viewed":290,"name":"grid punk","username":"fofod","description":"simple grid punk","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["cooltablegridsimple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xx -.5);\n\t//vec2 uv = (fragCoord.xy / iResolution.xx - 0.5)ï¼›\n\t float c = 0.02;\n         uv.y+=.22;\n\tuv*= abs(cos(iTime) + 1.);\n\n\tuv*= mat2(sin(iTime),cos(iTime),-cos(iTime),sin(iTime));\n\tvec3 p = vec3(uv,1.0);\n\tc = .3/length(uv);\n\tvec3 mask = fract(p*10.);\n\tvec3 mask1 = fract(p*100.);\n\t// mask*= vec3(1.,0.,0.);\n\tif(mask.x > .05 && mask.y > .05) {\n\t\tmask = vec3(0.);\n\t} else {\n\t\tmask = vec3(1.)*c;\n\t}\n\tif(mask1.x > .05 && mask1.y > .05) {\n\t\tmask1 = vec3(0.);\n\t} else {\n\t\tmask1 = vec3(1.)*c;\n\t}\n\tmask += mask1;\n\tvec3 col = mask * abs(sin(iTime)) * vec3(p +.3);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}