{"ver":"0.1","info":{"id":"Wlt3D2","date":"1577675071","viewed":116,"name":"Ryan's Game of Life","username":"rmccampbell7","description":"Conway's Game of Life","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    fragColor = texture(iChannel0, uv)*vec4(col,1);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Should be factor of display resolution\n#define SCALE 2.\n#define STEP 4\n\n#define KEY_R 82\n\nbool key_down(int key) {\n    return texelFetch(iChannel2, ivec2(key, 0), 0).r > .5;\n}\n\nfloat hash1(vec2 p) {\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat init(vec2 fragCoord) {\n    //return float(texture(iChannel1, fragCoord/iChannelResolution[1].xy).r > .9);\n    return float(hash1(fragCoord + iDate.w) > .9);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord = floor(fragCoord / SCALE) + .5;\n    vec2 res = iResolution.xy / SCALE;\n    vec2 uv = fragCoord / res;\n    float state = texture(iChannel0, uv).r;\n\n    if (iFrame < 4 || key_down(KEY_R)) {\n        state = init(fragCoord);\n    }\n    else if (iFrame % STEP == 0) {\n        int neighbors = int(round(\n            texture(iChannel0, uv + vec2( 1, 0)/res).r +\n            texture(iChannel0, uv + vec2( 1, 1)/res).r +\n            texture(iChannel0, uv + vec2( 0, 1)/res).r +\n            texture(iChannel0, uv + vec2(-1, 1)/res).r +\n            texture(iChannel0, uv + vec2(-1, 0)/res).r +\n            texture(iChannel0, uv + vec2(-1,-1)/res).r +\n            texture(iChannel0, uv + vec2( 0,-1)/res).r +\n            texture(iChannel0, uv + vec2( 1,-1)/res).r));\n        if (neighbors != 2) state = 0.;\n        if (neighbors == 3) state = 1.;\n    }\n\n    fragColor = vec4(vec3(state), 1.);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}