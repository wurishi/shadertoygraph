{"ver":"0.1","info":{"id":"ldyyzV","date":"1522605632","viewed":574,"name":"Pulsing Rotations","username":"AlphaRogue","description":"A circular equalizer.","likes":12,"published":1,"flags":64,"usePreview":0,"tags":["2d","circles","rotating","classic","half"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xtf3zS","filepath":"https://soundcloud.com/juliancalor/julian-calor-stranger","previewfilepath":"https://soundcloud.com/juliancalor/julian-calor-stranger","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SIZE .017\n#define AREA .6\n#define MAX 28.\n#define RED vec3(.6, .09, .08)\n#define BLUE vec3(.11, .15, .2)\n#define WHITE vec3(1., .98, .9)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  \tvec2 lM = vec2(max(iResolution.x, iResolution.y), min(iResolution.x, iResolution.y));\n  \tvec2 pos = ( fragCoord -.5 * lM) / lM.x;\n\t\n    float fft = 0.;\n    for (float i = 0.; i<= 1.; i += .05) fft += texture(iChannel0, vec2(i, .25) ).x;\n    fft /= 500.;\n    \n    //float fft = texture(iChannel0, vec2(0.1,0.5) ).x * 0.03;\n    float speed = sin(iTime * .05 * (1. + fft * .075)) * 12.5663706 /* Pi * 4 */;\n    float dist = length(pos);\n    \n    float way = 0.;\n    if (dist <= AREA + fft + SIZE) {\n        for (float i = 0.; i < MAX; i++) {\n          float angle = speed * (i + 1.);\n          float radius = AREA + fft - .025 * i;\n          if (dist > radius && dist < radius + SIZE && sin(angle) * pos.x + cos(angle) * pos.y > 0.) {\n              way = smoothstep(radius, radius + SIZE / 4.5, dist) * smoothstep(radius + SIZE, radius + SIZE / 1.2, dist);\n              break;\n          }\n        }\n    }\n\t\n    fragColor = vec4(mix(BLUE, mix(WHITE, RED, min(fft * fft * 1350., 1.)), way), 1.);\n}","name":"Image","description":"","type":"image"}]}