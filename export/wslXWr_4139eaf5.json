{"ver":"0.1","info":{"id":"wslXWr","date":"1551106419","viewed":356,"name":"Smiley face practice","username":"peng86david","description":"following this tutorial\nhttps://www.youtube.com/watch?v=GgGBR4z8C9o&list=PLGmrMu-IwbguU_nY2egTFmlg691DN7uE5&index=2","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tutorialpractice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 position, float radius, float blur){\n\tfloat d = length(uv - position);\n\tfloat c = smoothstep(radius, radius-0.01, d);\n    \t\t\t//smooth start  smooth end    \n    return c;\n}\n\nfloat eye(vec2 uv, vec2 position, float radius, float blur){\n\tfloat e = Circle(uv,position,radius,blur);\n    e *= Circle(uv,vec2(position.x, position.y-0.02),radius,blur);\n    \n    return e;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 col = vec3(0.);\n    \n    uv -= .5; //-0.5 ~ 0.5 centering origin\n    uv.x *= iResolution.x/iResolution.y; //fix coordinates from being long on x-axis\n    \n    vec2 p = vec2(0. , 0.);\n    float mask = Circle(uv, p, .4, 0.01);\n    \n    \n    float mouth = Circle(uv, vec2(0.), .27, .02);\n    mouth -= Circle(uv,vec2(0. , .1), .3, .02);\n    mask -= mouth;\n    \n    float re = eye(uv,vec2(.13, .13), .07, .02);\n    float le = eye(uv,vec2(-.13, .13), .07, .02);\n    mask -= le;\n    mask -= re;\n    \n    \n    col = vec3(1. ,1. ,0.)* mask;\n    \n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}