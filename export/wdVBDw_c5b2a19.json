{"ver":"0.1","info":{"id":"wdVBDw","date":"1607535203","viewed":50,"name":"some sinus waves","username":"ltms","description":"asdasf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float leftborder = -0.89;\nconst float rightborder = 0.89;\n\nfloat drawBand(float axis, float start, float end, float blur) \n{\n    float step1 = smoothstep(start-blur, start+blur, axis);\n    float step2 = smoothstep(end+blur, end-blur, axis);\n    return step1*step2;\n}\n\nfloat drawRect(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float band1 = drawBand(uv.x, left, right, blur);\n    float band2 = drawBand(uv.y, top, bottom, blur);\n    return band1 * band2;\n}\n\nfloat remap(float value, float low1, float high1, float low2, float high2)\n{\n    return ((value - low1) / (high1 - low1)) * (high2 - low2) + low2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // hogy kozepen legyen\n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    uv -= .5;\n    // hogy ne legyen ellipszis\n    // Normalized pixel coordinates (from -0.5*1.78 to 0.5*1.78)\n    uv.x *= iResolution.x/iResolution.y;\n\n    float x = uv.x;\n    // domain distortion, makes it wavey\n    float t = iTime;\n    float m = sin(t+ x*2.)/3.;\n    float y = uv.y - m;\n    // increasing blur \n    float blur = .004;\n    blur = remap(x, leftborder, .89, .005, .25);\n    //blur *= blur;\n    blur = pow(blur*3., 4.);\n    \n    float mask1 = drawRect(vec2(x,y), leftborder, .89, -.08, .1, blur);\n    // base color\n   \tvec3 color1 = vec3(0, .9, 0);\n    // masking the base color with the rectangles\n    color1 *= mask1;\n    \n    m = sin(t/2.+ x*3.)/3.;\n    y = uv.y - m;\n    float mask2 = drawRect(vec2(x,y), leftborder, .89, -.3, -.2, blur);\n    // base color\n   \tvec3 color2 = vec3(.9, 0, 0);\n    // masking the base color with the rectangles\n    color2 *= mask2;\n    \n    m = sin(t*1.1+ x*2.)/3.;\n    y = uv.y - m;\n    float mask3 = drawRect(vec2(x,y), leftborder, .89, .2, .3, blur);\n    // base color\n   \tvec3 color3 = vec3(0, 0, .9);\n    // masking the base color with the rectangles\n    color3 *= mask3;\n    \n    // Output to screen\n    fragColor = vec4(color1+color2+color3,1.0);\n}","name":"Image","description":"","type":"image"}]}