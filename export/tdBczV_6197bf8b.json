{"ver":"0.1","info":{"id":"tdBczV","date":"1586957613","viewed":279,"name":"Testing putpixel","username":"Leria","description":"Testing how to properly putpixel in Shadertoy","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","pixel","circle","putpixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Disclaimer : I use some parts of codes from @iq + I write some things in frenglish\n\nvec2 hash( vec2 x )  // replace this by something better\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\n//quintique\nvec2 fade5(vec2 f) {return f * f * f * (f * (f * 6.0 - 15.0) + 10.0);}\n\n//cubique\nvec2 fade3(vec2 f) {return f*f*(3.0-2.0*f);}\n\nfloat noise(vec2 p)\n{\n \tvec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    vec2 u = fade5(f);\n    \n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n        \n}\n\nfloat dist(vec2 a, vec2 b) \n{\n\treturn sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 origin = vec2(iResolution.x/2., iResolution.y/2.);\n    float radius = 50.;\n    \n\tif(fragCoord.x == iResolution.x/2.)\n    {\n     \tif(fragCoord.y == iResolution.y/2.)   \n        {\n        \tfragColor = vec4(1., 1., 1., 1.);\n        }\n    }\n    \n    \n    if(dist(origin, fragCoord) < radius)\n    {\n        float l = noise(fragCoord);\n     \tfragColor = vec4(l, l, l, 1.);  \t\n    }\n    \n    \n    if(dist(origin, fragCoord) > radius)\n    {\n     \tfragColor = vec4(0., 0., 1., 1.);   \n    }\n    \n        \tif(fragCoord.x == fragCoord.y)\n        {\n         \tfragColor = vec4(1., 1., 1., 1.);\n        }\n    \n    \n        //perimeter\n    if(dist(origin, fragCoord) >= radius && (dist(origin, fragCoord)) <= (radius+1.))\n    {\n     \tfragColor = vec4(1., 0., 0., 1.);   \n    }\n}","name":"Image","description":"","type":"image"}]}