{"ver":"0.1","info":{"id":"Mdd3zr","date":"1448770681","viewed":208,"name":"Feeling the Music","username":"italoplk","description":"Adapting the phoenix flare of bsdbeard to follow the music.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","sun","music","flare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// original by bsdbeard https://www.shadertoy.com/view/4d2XR1#, slightly modified\n \n\t#define ray_brightness 10.\n\t#define gamma 5.\n\t#define ray_density 4.5\n\t#define curvature 15.\n\t#define red   4.\n\t#define green 1.0\n\t#define blue  .3 \n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// !!!!!!!!!!!!! UNCOMMENT ONE OF THESE TO CHANGE EFFECTS !!!!!!!!!!!\n// MODE IS THE PRIMARY MODE\n#define MODE normalize\n// #define MODE \n\n#define MODE4 /\n\n#define MODE3 *\n// #define MODE3 +\n\n#define MODE2 r +\n// #define MODE2 \n\n// #define DIRECTION +\n#define DIRECTION -\n\n#define SIZE 0.1\n\n#define INVERT /\n// #define INVERT *\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nfloat noise( in vec2 x )\n{\n\treturn texture(iChannel1, x*.05).x; // INCREASE MULTIPLIER TO INCREASE NOISE\n}\n\n// FLARING GENERATOR, A.K.A PURE AWESOME\nmat2 m2 = mat2( 0.80,  0.60, -0.60,  0.80 );\nfloat fbm( in vec2 p )\n{\t\n\tfloat z=2.;       // EDIT THIS TO MODIFY THE INTENSITY OF RAYS\n\tfloat rz = -0.1; // EDIT THIS TO MODIFY THE LENGTH OF RAYS\n\tp *= 0.55;        // EDIT THIS TO MODIFY THE FREQUENCY OF RAYS\n\tfor (int i= 1; i < 6; i++)\n\t{\n\t\trz+= abs((noise(p)-0.5)*2.)/z;\n\t\tz = z*2.;\n\t\tp = p*2.*m2;\n\t}\n\treturn rz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t =   iTime*.04; \n\tvec2 uv = fragCoord.xy / iResolution.xy-0.5;\n\tuv.x *= iResolution.x/iResolution.y;\n\tuv*= curvature* SIZE;\n\t\n\tfloat r = sqrt(dot(uv,uv)); // DISTANCE FROM CENTER, A.K.A CIRCLE\n\tfloat x = dot(MODE(uv), vec2(0.5,0.0))+t;\n\tfloat y = dot(MODE(uv), vec2(0.0,0.5))+t;\n \n    float val;\n    val = fbm(vec2(MODE2 y * ray_density, MODE2 x MODE3 ray_density)); // GENERATES THE FLARING\n\tval = smoothstep(gamma*.02-.1,ray_brightness+(gamma*0.02-.1)+.001,val);\n\tval = sqrt(val); // WE DON'T REALLY NEED SQRT HERE, CHANGE TO 15. * val FOR PERFORMANCE\n\t\n\tvec3 col = val / vec3(red,green,blue);\n\tcol = 1.-col; // WE DO NOT NEED TO CLAMP THIS LIKE THE NIMITZ SHADER DOES!\n    float rad= 10. * texture(iChannel1, vec2(0,0)).x; // MODIFY THIS TO CHANGE THE RADIUS OF THE SUNS CENTER\n\tcol = mix(col,vec3(1.), rad - 266.667 * r); // REMOVE THIS TO SEE THE FLARING\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}