{"ver":"0.1","info":{"id":"Xdtfzr","date":"1523967262","viewed":159,"name":"Kanizsa Triangle","username":"fjavifabre","description":"Another optical illusion","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["illusion","perception"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// TODO: use 2D functions instead of just copying from\n// https://iquilezles.org/articles/distfunctions\n\n#define USE_WHITE 0 // Time varying pixel color\n#define AVOID_DISTORSIONS 1\n\nfloat dot2( in vec3 v ) { return dot(v,v); }\nfloat udTriangle( vec3 p, vec3 a, vec3 b, vec3 c )\n{\n    vec3 ba = b - a; vec3 pa = p - a;\n    vec3 cb = c - b; vec3 pb = p - b;\n    vec3 ac = a - c; vec3 pc = p - c;\n    vec3 nor = cross( ba, ac );\n\n    return sqrt(\n    (sign(dot(cross(ba,nor),pa)) +\n     sign(dot(cross(cb,nor),pb)) +\n     sign(dot(cross(ac,nor),pc))<2.0)\n     ?\n     min( min(\n     dot2(ba*clamp(dot(ba,pa)/dot2(ba),0.0,1.0)-pa),\n     dot2(cb*clamp(dot(cb,pb)/dot2(cb),0.0,1.0)-pb) ),\n     dot2(ac*clamp(dot(ac,pc)/dot2(ac),0.0,1.0)-pc) )\n     :\n     dot(nor,pa)*dot(nor,pa)/dot2(nor) );\n}\n\nfloat circle( vec2 p, vec2 c, float radius) \n{\n    \n    return sqrt(pow(p.x-c.x, 2.) + pow(p.y-c.y, 2.)) - radius;\n        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n#if AVOID_DISTORSIONS\n    vec2 uv = fragCoord/iResolution.y;\n   \tuv.x += (iResolution.y - iResolution.x) \n        / max(iResolution.x,iResolution.y) ;\n#else    \n    vec2 uv = fragCoord/iResolution.xy;\n#endif    \n\n\n#if USE_WHITE\n    vec3 col = vec3(1.);\n#else\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n#endif\n    \n    // Geometry\n    float d0 = udTriangle(vec3(uv.xy, 0), vec3(.5,0.9,0), vec3(.2,.25,0), vec3(0.8,.25,0));\n   \tfloat d1 = udTriangle(vec3(uv.xy, 0), vec3(.5,0.1,0), vec3(.8,.7,0), vec3(0.2,.7,0));\n    float s0 = circle(uv.xy, vec2(0.2, 0.7), 0.1 );\n    float s1 = circle(uv.xy, vec2(0.8, 0.7), 0.1 );\n    float s2 = circle(uv.xy, vec2(0.5, 0.1), 0.1 );\n    \n    // Scene\n    if( d0 > 0. && d0 < 0.01)\n    \tfragColor = vec4(vec3(0),1.0);\n    else\n        fragColor = vec4(col,1.0);\n    \n    if(s0 <= 0. || s1 <= 0. || s2 <= 0. )\n        fragColor = vec4(vec3(0),1.0);\n    \n    if(d1 == 0.)\n        fragColor = vec4(col,1.0); \n}","name":"Image","description":"","type":"image"}]}