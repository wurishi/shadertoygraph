{"ver":"0.1","info":{"id":"MXVSDh","date":"1719912890","viewed":29,"name":"l2-od","username":"ODtian","description":"null","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 pos, float r) {\n    return length(pos) - r;\n}\n\nfloat box(vec2 pos, float r) {\n    vec2 x = step(r / 2.0, pos) * 2.0 - 1.0;\n    vec2 y = step(-r / 2.0, pos) * 2.0 - 1.0;\n    return (x.x + x.y) * (y.x + y.y);\n}\n\nfloat box2(vec2 pos, vec2 a) {\n    vec2 r = abs(pos) - a;\n    return max(r.x, r.y);\n}\n\nfloat uni(float a, float b) {\n    return min(a, b);\n}\n\nfloat sub(float a, float b) {\n    return max(a, -b);\n}\n\nfloat inter(float a, float b) {\n    return max(a, b);\n}\n// float map(vec2 pos) {\n//     res = 1.0;\n//     res = uni(res, circle(pos, 0.2));\n//     res = uni(res, box2(pos,)); }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.y += 0.3;\n    float asp = iResolution.x / iResolution.y;\n    vec2 pos = uv - 0.5;\n    pos.y /= asp;\n\n    vec3 sky = 1.2 * vec3(0.4, 0.1, 1.0);\n    vec3 sun = vec3(1.0, 0.3, 0.0);\n    vec3 moon = vec3(1.0, 0.7, 0.0);\n    vec3 sun_light = vec3(1.0, 0.5, 0.0);\n    vec3 moon_light = 0.6 * vec3(1.0, 0.8, .3);\n    // vec3 moon_light = 0.3 *\n\n    // vec3 light_color_inv = mix(moon, sun, (sin(iTime) * 0.5 + 0.5));\n\n    vec3 sky1 = mix(sky, sun_light, 0.9 * (smoothstep(-0.8, (cos(iTime) * 0.5 + 0.5), uv.x) - smoothstep((cos(iTime) * 0.5 + 0.5), 1.8, uv.x)) - (1.0 - uv.y));\n\n    vec3 sky2 = mix(clamp(0.0, 1.0, sin(iTime) * 0.5 + 1.4) * sky, moon_light, 0.9 * (smoothstep(-0.8, (-cos(iTime) * 0.5 + 0.5), uv.x) - smoothstep((-cos(iTime) * 0.5 + 0.5), 1.8, uv.x)) - (1.0 - uv.y));\n    // vec3 sky2 = mix(sky, vec3(1.0, 0.6, 1.0), 0.3 * (smoothstep(-0.3, (-cos(iTime) * 0.5 + 0.5), uv.x) - smoothstep((-cos(iTime) * 0.5 + 0.5), 1.3, uv.x)) - (1.0 - uv.y));\n\n    fragColor.rgb = mix(sky2, sky1, (sin(iTime) * 0.5 + 0.5));\n    // fragColor.rgb = mix(sky2, sky1, (sin(iTime) * 0.5 + 0.5));\n    // fragColor.rgb = mix(sky, light_color, 0.3 * (smoothstep(0.0, (cos(iTime) * 0.5 + 0.5), uv.x) - smoothstep((cos(iTime) * 0.5 + 0.5), 1.0, uv.x)) - (1.0 - uv.y));\n\n    vec3 obj_color = mix(moon, sun, (sin(iTime) * 0.5 + 0.5));\n    float sdsun = sub(circle(pos - vec2(cos(iTime) * 0.6, sin(iTime) * 0.2), 0.02), box2(pos - vec2(0.0, -0.5), vec2(1.0, 0.5)));\n\n    fragColor.rgb = mix(fragColor.rgb, obj_color, 1.0 - smoothstep(0.0, 0.03, sdsun));\n\n    float sdmoon = sub(sub(circle(pos + vec2(cos(iTime) * 0.6, sin(iTime) * 0.2), 0.02), circle(pos + vec2(cos(iTime) * 0.6, sin(iTime) * 0.2) - vec2(-0.03, 0.03), 0.05)), box2(pos - vec2(0.0, -0.5), vec2(1.0, 0.5)));\n\n    fragColor.rgb = mix(fragColor.rgb, obj_color, 1.0 - smoothstep(0.0, 0.03, sdmoon));\n    // fragColor = vec4(red,  );\n    // fragColor = vec4(mix(red, blue, smoothstep(0.1, 0.3, fragColor.x) - smoothstep(0.3, 1.0, fragColor.x)), 1.0);\n}","name":"Image","description":"","type":"image"}]}