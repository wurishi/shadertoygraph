{"ver":"0.1","info":{"id":"dtdXD4","date":"1685433497","viewed":187,"name":"Visual Overdrive","username":"tomachi","description":"Most trippy shader ever. Put on your webcam.","likes":1,"published":1,"flags":34,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"ml23Wt","parentname":"camfeedback stuff"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 webcam = texture(iChannel1, uv) * 0.81;\n\n        fragColor = texture(iChannel0, uv) + webcam;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 saturate(in vec4 value)\n{\n    return clamp(value, vec4(-300.0), vec4(300.0));\n}\n\nvec3 huecol(float hue)\n{\n    return vec3(1.0, 0.0, 0.0) * cos(hue)\n        + vec3(0.0, 1.0, 0.0) * cos(hue + 1.0)\n        + vec3(0.0, 0.0, 1.0) * cos(hue + 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 muv = iMouse.xy / iResolution.xy;\n    vec4 wcamsrc = texture(iChannel1, uv);\n    \n   // vec4 wcam = wcamsrc - 0.5;\n    vec4 wcam = 1.91*wcamsrc - 0.349925001;\n    //vec4 wcam = wcamsrc - (texture(iChannel1, uv) * 0.499);\n    float fac      = 0.1*(1.0-4.0*length(uv -  0.5))+0.1*length(wcam);\n    float mousefac = 0.1*(10.0-4.0*length(muv - 0.5))+0.1*length(wcam);\n    //float fac = length(wcam);\n    float lenuv    = 0.5-length(uv-0.5);\n    float mouselen = 10.5-length(muv-0.5);\n    float facstr = fac*0.001 + 0.001*lenuv;\n    float mousestr = mousefac*10.001 + 0.001*mouselen;\n\n    uv = uv*(1.0+facstr) - facstr/2.;\n    muv = muv*(1.0+mousestr) - mousestr/2.;\n    vec4 self = texture(iChannel0, uv);\n   \n    vec4 col = saturate(wcam / (self - mod(fac, 0.1)));\n   \n    float isgreen = 1.0-dot(wcamsrc, vec4(0.0, 1.0, 0.0, 0.0));\n    isgreen = smoothstep(0.5, 0.4, isgreen);\n     if (iMouse.z > 0.08) { \n        fragColor = col;\n    } else {\n        fragColor =(col*-0.1);// + saturate( (col*0.5) + (self - mod(mousefac, 0.1)*0.01));\n       // fragColor = (0.92*saturate(wcam / (self - fac)))  +  (wcam*0.05) ;\n     }\n}","name":"Buffer A","description":"","type":"buffer"}]}