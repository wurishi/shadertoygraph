{"ver":"0.1","info":{"id":"ctfBDr","date":"1692784308","viewed":65,"name":"lattice slice","username":"twixuss","description":"this visualizes distance to a 3d grid","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","noise","slice","lattice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Mouse x controls z offset\n// Mouse y controls node randomness\n\nvec3 random_vec3(vec3 a) {\n    a = vec3(dot(a,vec3(127.1,311.7,634.8)), \n\t\t\t dot(a,vec3(269.5,183.3,878.8)), \n\t\t\t dot(a,vec3(413.2,631.3,194.3)));\n\treturn fract(sin(a)*43758.5453);\n}\nfloat distance_squared3(vec3 a, vec3 b) {\n    a -= b;\n    return dot(a, a);\n}\nfloat distanceToLine3(vec3 point, vec3 linea, vec3 lineb) {\n\tfloat l2 = distance_squared3(linea, lineb);\n\tif (l2 == 0.) return 0.;\n\n\tfloat t = dot(point - linea, lineb - linea) / l2;\n    t = clamp(t, 0., 1.);\n\tvec3 projection = linea + t * (lineb - linea);\n\treturn distance(point, projection);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tileCount = 8.;\n    vec3 uv;\n    uv.xy = fragCoord/iResolution.y * tileCount;\n    uv.z = iMouse.x / iResolution.x * 4.;\n    if (iMouse.z <= 0.)\n        uv.z += iTime;\n    \n    vec3 tile = floor(uv);\n    vec3 local = uv - tile;\n    \n    float d = 100.;\n    \n    vec3 r[3*3*3];\n    \n    for (int x = -1; x <= 1; ++x) {\n        for (int y = -1; y <= 1; ++y) {\n            for (int z = -1; z <= 1; ++z) {\n                int ix = x + 1;\n                int iy = y + 1;\n                int iz = z + 1;\n                r[ix*3*3 + iy*3 + iz] = vec3(x,y,z) + random_vec3(tile + vec3(x,y,z)) * (1.-iMouse.y / iResolution.y);\n            }\n        }\n    }\n    \n\tfor (int x = 0; x < 3; ++x) {\n\t\tfor (int y = 0; y < 3; ++y) {\n\t\t\tfor (int z = 0; z < 2; ++z) {\n\t\t\t\td = min(d, distanceToLine3(local, r[x*3*3 + y*3 + z], r[(x  )*3*3 + (y  )*3 + (z+1)]));\n\t\t\t\td = min(d, distanceToLine3(local, r[x*3*3 + z*3 + y], r[(x  )*3*3 + (z+1)*3 + (y  )]));\n\t\t\t\td = min(d, distanceToLine3(local, r[z*3*3 + x*3 + y], r[(z+1)*3*3 + (x  )*3 + (y  )]));\n\t\t\t}\n\t    }\n\t}\n    \n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}