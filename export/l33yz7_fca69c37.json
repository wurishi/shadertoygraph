{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"float AAstep(float thre, float val) {\n    return smoothstep(-.5, .5, (val - thre) / min(0.005, fwidth(val - thre)));\n}\nfloat AAstep(float val) {\n    return AAstep(val, 0.);\n}\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvec2 translate_rotate(in vec2 p, in vec2 off, in float a) {\n    p = p - off;\n    p *= rot(a);\n    return p;\n}\n\nfloat sd_box(vec2 p, vec2 h) {\n    p = abs(p) - h;\n    return length(max(p, 0.)) + min(0., max(p.x, p.y));\n}\n\nfloat map(vec3 p) {\n    return length(p) - 1.;\n}\n\nvec2 trace(vec3 ro, vec3 rd) {\n    float t = 0.;\n    for (int i = 0; i < 100; ++i) {\n        vec3 pos = ro + rd * t;\n        float d = map(pos);\n        if (d < 0.0001) { return vec2(t, 1.); }\n        t += d;\n        if (t > 100.) { break; }\n    }\n    return vec2(-1.);\n}\n\nvec3 get_norm(vec3 p) {\n    mat3 k = mat3(p, p, p) - mat3(0.0001);\n    return normalize(map(p) - vec3(map(k[0]), map(k[1]), map(k[2])));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord/iResolution.xy - 0.5)\n        * vec2(iResolution.x / iResolution.y, 1.);\n \n    vec3 ro = vec3(0., 0., -3.);\n    vec3 rd = normalize(vec3(uv, 1.));\n \n    vec3 col = vec3(0.85);\n    \n    vec2 hit = trace(ro, rd);\n    vec3 nplane = vec3(0, 1., 0.);\n    float plane = -(dot(ro, nplane) + 0.5) / dot(rd, nplane);\n    if (plane > hit.x && plane > 0. && hit.y < 0.) {\n        vec3 pos = ro + rd * plane; pos.z += 1.5;\n        col = mix(col, vec3(0., 0., 0.), smoothstep(.25, -1., length(pos) - 1.));\n    }\n    if (hit.y > 0.) {\n        vec3 pos = ro + rd * hit.x;\n        vec3 nor = get_norm(pos);\n        vec3 ld = normalize(vec3(1., 1., -.5));\n        float spec = pow(max(dot(reflect(ld, nor), rd), 0.), 10.);\n        spec = spec * texture(iChannel0, pos.xy * .09).x;\n        col = vec3(0.85, 0.4, 0.5) * (1. - spec);\n    }\n    \n    float outline = length(uv) - 0.35;\n    col = mix(col, vec3(0.), AAstep(abs(outline) - 0.01));\n    vec2 buv = translate_rotate(uv, vec2(-0.3, 0.2), 0.75);\n    float blue = sd_box(buv, vec2(0.05)) - 0.025;\n    blue = max(blue, -outline);\n    col = mix(col, vec3(0.1, 0.5, 1.), AAstep(blue));\n    col = mix(col, vec3(0.), AAstep(abs(blue) - 0.005));\n    vec2 yuv = translate_rotate(uv, vec2(-0.35, 0.09), 0.05);\n    float yellow = sd_box(yuv, vec2(0.05)) - 0.025;\n    yellow = max(yellow, -outline);\n    col = mix(col, vec3(1., .75, 0.1), AAstep(yellow));\n    col = mix(col, vec3(0.), AAstep(abs(yellow) - 0.005));\n    vec2 auv = translate_rotate(uv, vec2(-0.5, -0.04), 0.1);\n    float ahoge = length(auv) - 0.25;\n    ahoge = max(ahoge, -min(blue, yellow));\n    ahoge = max(ahoge, -(length(auv - vec2(0., -0.18)) - 0.4));\n    col = mix(col, vec3(0.), AAstep(ahoge));\n    \n    \n    col = sqrt(col);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"l33yz7","date":"1734897222","viewed":234,"name":"Bocchi The Ball","username":"panna_pudi","description":"Is that a Bocchi","likes":6,"published":1,"flags":0,"usePreview":1,"tags":["ball","anime"],"hasliked":0,"parentid":"","parentname":""}}