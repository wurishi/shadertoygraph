{"ver":"0.1","info":{"id":"dsG3R1","date":"1678182836","viewed":91,"name":"Fork Sphere nor Grooo 824","username":"Grooo","description":"Just the normals of a sphere, to use as a reference when debugging normal mapping.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["normals","sphere","ball","debug","normalmapping"],"hasliked":0,"parentid":"XsfXDr","parentname":"Sphere normal map"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nThis shader just shows the typical colors as seen in a normal map,\nin this case, with a sphere.\n\nTODO: typical other normal buffer formats.\n\n--\nZavie\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat ratio = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord / iResolution.xy;\n    \n\tvec2 uvNormal = vec2(ratio, 1.) * (2.4 * uv - 1.2);\n\t\n    vec3 n = vec3(uvNormal, sqrt(1. - clamp(dot(uvNormal, uvNormal), 0., 1.)));\n\n    vec3 color = 0.5 + 0.5 * n;\n    color = mix(vec3(0.5), color, smoothstep(1.01, 1., dot(uvNormal, uvNormal)));\n    \n    vec3 img = texture(iChannel0, uv + ( 0.7 * n.bg) ).rgb;\n    \n\tfragColor = vec4(img, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}