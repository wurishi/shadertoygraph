{"ver":"0.1","info":{"id":"WdX3zf","date":"1546966865","viewed":78,"name":"his coconut gun","username":"ruko","description":"if he shoots ya its gonna hurt","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["canfireinspurts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uncomment for gradient\n//#define drawgrad\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return length(max(d,0.0))\n         + min(max(d.x,max(d.y,d.z)),0.0); // remove this line for an only partially signed sdf \n}\n\nfloat march(vec3 start, vec3 dir) {\n    int steps = 0;\n    float d = 3.0;\n    vec3 p = start;\n    while (steps++ < 30) {\n        vec3 c = vec3(4.0, 4.0, 4.5 + 2.0*sin(iTime));\n        \n        float th = iTime * .1;\n        mat3 matt = mat3(\n            cos(th), 0, -sin(th),\n            0, 1, 0,\n            sin(th), 0, cos(th)\n        );\n        \n        mat3 maty = mat3(\n            cos(th), -sin(th), 0,\n            sin(th), cos(th), 0,\n            0, 0, 1);\n        \n        // hahahaha wtf\n        //vec3 q = matt*mod(p + vec3(iTime, 0.0, 0.0),c)-0.5*c;\n        \n        vec3 q = mod(maty*matt*p + vec3(iTime, 0.0, 0.0),c)-0.5*c;\n        float stuff = sdBox(\n            q,\n            vec3(1., 1., 1.)\n        );\n        d += stuff;\n        p = start + d * dir;\n    }\n    return d;\n}\n\nvoid draw(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x;\n    uv.x -= 0.5;\n    uv.y -= 0.5 * (iResolution.y/iResolution.x);\n    \n    vec3 cam = vec3(0., 0., -10.);\n   \n    vec3 dir = normalize(vec3(uv.x, uv.y, 1.));\n    \n    float d = march(cam, dir) / 40.;\n    \n    // Output to screen\n    fragColor = vec4(vec3(d), 1.0);\n}\n\nvoid gradient(out vec4 fragColor, in vec2 fragCoord) {\n    draw(fragColor, fragCoord+vec2(-1, -1));\n    vec4 x1y1 = fragColor;\n    draw(fragColor, fragCoord+vec2(-1, 1));\n    vec4 x1y2 = fragColor;\n    draw(fragColor, fragCoord+vec2(1, -1));\n    vec4 x2y1 = fragColor;\n    vec2 grad = vec2(distance(x2y1, x1y1), distance(x1y2, x1y1));\n    fragColor = vec4(length(grad))*10.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #ifdef drawgrad\n        gradient(fragColor, fragCoord);\n    #else\n        draw(fragColor, fragCoord);\n    #endif\n}","name":"Image","description":"","type":"image"}]}