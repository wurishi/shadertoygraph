{"ver":"0.1","info":{"id":"3ttSDB","date":"1581630980","viewed":215,"name":"Show Business","username":"hanabi","description":"work in progress","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["rain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\nfloat rand1(in float f)\n{\n    return fract(sin(f)*100000.0);\n}\n\nfloat random(in vec2 _st)\n{\n    return fract(sin(dot(_st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ) \n{\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float fFrame = float(iFrame);\n    \n    fragColor = vec4(hsb2rgb(vec3(0.7, 0.6, uv.y / 1.4)), 1.0);    \n    \n    float WIDTH = iResolution.x / 4.;\n    for (float i = 0.; i < WIDTH; i++) {\n        // radius of a ball\n        float r = 10.;\n        float hspace = iResolution.x / WIDTH;\n        // some dancing, some horizontal space\n        float x = iResolution.x / 60.0 * sin(PI / 180. * fFrame) + hspace * i - hspace  * rand1(i);\n        float movement = fFrame * iResolution.y / 360.;\n        // movement, some vertical space\n        float y = movement + iResolution.y * rand1(i);\n        \t  y = mod(-abs(y), iResolution.y + r);\n\n        vec2 ball = vec2(x, y);\n        vec2 ballDist = fragCoord - ball;\n\n        fragColor = mix(fragColor, vec4(hsb2rgb(vec3(0.20, .9, .9)), 1.0),\n                        1.-smoothstep(\n                            ball.y / 10., ball.y / 2.,\n                            dot(ballDist, ballDist)));\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}