{"ver":"0.1","info":{"id":"3sf3Dn","date":"1554219056","viewed":133,"name":"GAME OF LIFE","username":"mxm","description":"GAME OF LIFE","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 getColorFromCoord(in vec2 coord, in sampler2D text, in float res){\n\treturn texture(text, vec2(floor(coord.x)/res*iResolution.y/iResolution.x+1./res*iResolution.y/iResolution.x/2., floor(coord.y)/res+1./res/2.));\n}\n\nfloat numberAliveNeighbors(in vec2 coord, in sampler2D text, in float res){\n    float n = 0.0;\n    float x = coord.x;\n    float y = coord.y;\n    float n1 = getColorFromCoord(vec2(x+1.,y-1.), text, res).r;\n    float n2 = getColorFromCoord(vec2(x,y-1.), text, res).r;\n    float n3 = getColorFromCoord(vec2(x-1.,y-1.), text, res).r;\n    float n4 = getColorFromCoord(vec2(x+1.,y), text, res).r;\n    float n5 = getColorFromCoord(vec2(x-1.,y), text, res).r;\n    float n6 = getColorFromCoord(vec2(x+1.,y+1.), text, res).r;\n    float n7 = getColorFromCoord(vec2(x,y+1.), text, res).r;\n    float n8 = getColorFromCoord(vec2(x-1.,y+1.), text, res).r;\n    if(n1 == 1.){\n        n += 1.;\n    }\n    if(n2 == 1.){\n        n += 1.;\n    }\n    if(n3 == 1.){\n        n += 1.;\n    }\n    if(n4 == 1.){\n        n += 1.;\n    }\n    if(n5 == 1.){\n        n += 1.;\n    }\n    if(n6 == 1.){\n        n += 1.;\n    }\n    if(n7 == 1.){\n        n += 1.;\n    }\n    if(n8 == 1.){\n        n += 1.;\n    }\n    return n;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float RES = 100.;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvO = uv;\n    uv *= RES;\n    uv.x *= iResolution.x/iResolution.y;\n    //uv = fract(uv); \n    \n    float x = floor(uv.x);\n    float y = floor(uv.y);\n    \n    vec3 col = texture(iChannel0, uvO).rgb;\n    \n    if(iFrame == 0){\n    \tvec3 initCol = vec3(texture(iChannel1, uvO*5.).r);\n        \n        //if(x==4. && y==4.){\n        //    col = vec3(1.,1.,1.0);\n        //} else if(x==5. && y==4.){\n        //    col = vec3(1.,1.,1.0);\n        //} else if(x==6. && y==4.){\n        //    col = vec3(1.,1.,1.0);\n        //} else \n        if(mod(x,21.)==0.){\n\t\t\tcol = vec3(1.,1.,1.0);\n        } else {\n            //col = vec3(x/RES/2.,y/RES/2.,0.0);\n            col = vec3(0.0);\n        }\n        fragColor = vec4(x/RES/2.,y/RES/2.,0.0,1.0);\n        //col = step(.5,initCol);\n        \n    } else if(iFrame%5==0){\n        \n        float nOfN = numberAliveNeighbors(vec2(x,y), iChannel0, RES);\n        if(getColorFromCoord(vec2(x,y), iChannel0, RES).r == 1.){\n            if(nOfN < 2.0) {\n        \t\tcol = vec3(.0,0.,0.);\n            }\n            if(nOfN > 3.0) {\n                col = vec3(0.,0.,0.);\n            }\n        } else {\n        \tif(nOfN == 3.0) {\n                col = vec3(1.,1.,1.);\n            }\n        }\n        \n        float mouseX = iMouse.x/iResolution.x*RES*iResolution.x/iResolution.y;\n        float mouseY = iMouse.y/iResolution.y*RES;\n        if(x == floor(mouseX) && y == floor(mouseY)){\n        \tcol = vec3(1.,1.,1.);\n        }\n        \n    }\n    \n    \n    fragColor = vec4(col,1.);\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}