{"ver":"0.1","info":{"id":"ssjyDD","date":"1643577042","viewed":563,"name":"Making Music in Shadertoy - ep1","username":"athibaul","description":"The final file obtained at the end of the tutorial. See the video : https://www.youtube.com/watch?v=3mteFftC7fE","likes":20,"published":1,"flags":8,"usePreview":0,"tags":["tutorial","music","gpusound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// Making Music in Shadertoy - Episode 1 : Basics, Waveforms, and a Simple Tune\n//\n// See the youtube video for the commentary :\n// https://www.youtube.com/watch?v=3mteFftC7fE\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define TWOPI 6.2831\n\nfloat sinPluck(float f, float t)\n{\n    return sin(TWOPI*f*t)*exp(-3.*t) * 0.1;\n}\n\nfloat squarePluck(float f, float t)\n{\n    return sign(sin(TWOPI*f*t))*exp(-3.*t) * 0.1;\n}\n\nfloat sawPluck(float f, float t)\n{\n    return (mod(t*f, 1.)*2. -1.)*exp(-3.*t) * 0.1;\n}\n\nfloat FM(float fc, float fm, float iom, float t)\n{\n    return sin(TWOPI*fc*t + iom*sin(TWOPI*fm*t));\n}\n\nvec2 fmPluck(float f, float t)\n{\n    float fc = f; // carrier freq\n    float fm = f; // modulation freq\n    float iom = 1.; // index of modulation\n    \n    float env = exp(-3.*t) * 0.1;\n    vec2 sig = vec2(0);\n    \n    sig.x += FM(f+1., f+1., 1., t) * env;\n    sig.y += FM(f-1., f-1., 1., t) * env;\n    sig += FM(f, f, 15., t) * exp(-20.*t) * 0.03;\n    \n    return sig;\n}\n\nvec2 pan(float pos)\n{\n    vec2 e = vec2(1.-pos, 1.+pos);\n    return normalize(e);\n}\n\nfloat interval(float semitones)\n{\n    return pow(2., semitones/12.);\n}\n\nconst float notes[] = float[6](-12., -5., 2., -5., 3., 5.);\n\nvec2 jingle(float t)\n{\n    vec2 sig = vec2(0);\n    for(int i=0; i<6; i++)\n    {\n        float nn = notes[i];\n        float fi = 440.*interval(nn);\n        float t0i = 0.25*float(i);\n        float ti = mod(t-t0i, 2.);\n        float pos = float((i+1)%3) - 1.;\n        \n        sig += fmPluck(fi, ti) * pan(pos);\n    }\n    return sig;\n}\n\nvec2 mainSound( int samp, float t )\n{\n    vec2 sig = vec2(0);\n    \n    /*\n    sig += fmPluck(440., mod(t, 1.)) * pan(-0.5);\n    sig += fmPluck(660., mod(t - 0.25, 1.))  * pan(0.5);\n    */\n    \n    sig += jingle(t);\n    \n    \n    return sig;\n}\n","name":"Sound","description":"","type":"sound"}]}