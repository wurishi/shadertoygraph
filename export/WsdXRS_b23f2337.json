{"ver":"0.1","info":{"id":"WsdXRS","date":"1572357679","viewed":132,"name":"raymarching / sphere tracing tut","username":"littlemilk","description":"raymarching tutorial","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 1000\n#define MAX_DIST 100.0\n#define SURF_DIST 0.0001\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat GetDist(vec3 p) {\n    vec4 s = vec4(0.0, 1.0, 6.0, 1.0);\n\ts.y += sin(iTime);\n    \n    float sphereDist = length(p - s.xyz) - s.w;\n    float planeDist = p.y;\n    \n    float d = smin(sphereDist, planeDist, 0.8);\n    return d;\n\n}\n\nfloat RayMarch(vec3 ro, vec3 rd) {\n\tfloat dO = 0.0;\n    \n    for (int i = 0; i < MAX_STEPS; i++) {\n    \tvec3 p = ro + rd * dO;\n        float dS = GetDist(p);\n        dO += dS;\n        \n        if (dO > MAX_DIST || dS < SURF_DIST) {\n            break;\n        }\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n\tfloat d = GetDist(p);\n    vec2 e = vec2(0.01, 0);\n    \n    vec3 n = d - vec3(\n    \tGetDist(p - e.xyy),\n        GetDist(p - e.yxy),\n        GetDist(p - e.yyx)\n    );\n    \n    return normalize(n);\n}\n\n\nfloat GetLight(vec3 p) {\n\tvec3 lightPos = vec3(0.0, 5.0, 6.0);\n    lightPos.xz += vec2(sin(iTime), cos(iTime)) * 2.0;\n    vec3 l = normalize(lightPos - p);\n    vec3 n = GetNormal(p);\n    \n    float dif = clamp(dot(n, l), 0.0, 1.0);\n        \n    return dif;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.0);\n    \n    vec3 ro = vec3(0.0, 1.0, 0.0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.0));\n    \n    float d = RayMarch(ro, rd);\n    \n    vec3 p = ro + rd * d;\n    \n    float dif = GetLight(p);\n    col = vec3(dif);\n    \n\n    fragColor.rgb = col;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}