{"ver":"0.1","info":{"id":"4Xl3WX","date":"1707990389","viewed":42,"name":"CIE-Lab space visualizer","username":"StarlightSource","description":"LC projection of CIE-Lab","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["template"],"hasliked":0,"parentid":"X3X3Wf","parentname":"OK Lab space visualizer"},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float L_sdr = 203.0;\n\nfloat cbrt(float x) {\n    return sign(x) * pow(abs(x), 1.0 / 3.0);\n}\n\nvec3 RGB_to_XYZ(vec3 RGB) {\n    mat3 M = mat3(\n        0.6369580483012914, 0.14461690358620832,  0.1688809751641721,\n        0.2627002120112671, 0.6779980715188708,   0.05930171646986196,\n        0.000000000000000,  0.028072693049087428, 1.060985057710791);\n    return RGB * M;\n}\n\nvec3 XYZ_to_RGB(vec3 XYZ) {\n    mat3 M = mat3(\n         1.716651187971268,  -0.355670783776392, -0.253366281373660,\n        -0.666684351832489,   1.616481236634939,  0.0157685458139111,\n         0.017639857445311,  -0.042770613257809,  0.942103121235474);\n    return XYZ * M;\n}\n\nvec3 XYZD65_to_XYZD50(vec3 XYZ) {\n    mat3 M = mat3(\n         1.0479298208405488,   0.022946793341019088, -0.05019222954313557,\n         0.029627815688159344, 0.990434484573249,    -0.01707382502938514,\n        -0.009243058152591178, 0.015055144896577895,  0.7518742899580008);\n    return XYZ * M;\n}\n\nvec3 XYZD50_to_XYZD65(vec3 XYZ) {\n    mat3 M = mat3(\n         0.9554734527042182,   -0.023098536874261423, 0.0632593086610217,\n        -0.028369706963208136,  1.0099954580058226,   0.021041398966943008,\n         0.012314001688319899, -0.020507696433477912, 1.3303659366080753);\n    return XYZ * M;\n}\n\nconst float delta = 6.0 / 29.0;\nconst float deltac = delta * 2.0 / 3.0;\n\nfloat f1(float x, float delta) {\n    return x > pow(delta, 3.0) ?\n        cbrt(x) :\n        deltac + x / (3.0 * pow(delta, 2.0));\n}\n\nfloat f2(float x, float delta) {\n    return x > delta ?\n        pow(x, 3.0) :\n        (x - deltac) * (3.0 * pow(delta, 2.0));\n}\n\nvec3 XYZ_to_Lab(vec3 XYZ) {\n    vec3 XYZ_ref = XYZD65_to_XYZD50(RGB_to_XYZ(vec3(L_sdr)));\n\n    float X = XYZ.x;\n    float Y = XYZ.y;\n    float Z = XYZ.z;\n\n    X = f1(X / XYZ_ref.x, delta);\n    Y = f1(Y / XYZ_ref.y, delta);\n    Z = f1(Z / XYZ_ref.z, delta);\n\n    float L = 116.0 * Y - 16.0;\n    float a = 500.0 * (X - Y);\n    float b = 200.0 * (Y - Z);\n\n    return vec3(L, a, b);\n}\n\nvec3 Lab_to_XYZ(vec3 Lab) {\n    vec3 XYZ_ref = XYZD65_to_XYZD50(RGB_to_XYZ(vec3(L_sdr)));\n\n    float L = Lab.x;\n    float a = Lab.y;\n    float b = Lab.z;\n\n    float Y = (L + 16.0) / 116.0;\n    float X = Y + a / 500.0;\n    float Z = Y - b / 200.0;\n\n    X = f2(X, delta) * XYZ_ref.x;\n    Y = f2(Y, delta) * XYZ_ref.y;\n    Z = f2(Z, delta) * XYZ_ref.z;\n\n    return vec3(X, Y, Z);\n}\n\nvec3 RGB_to_Lab(vec3 color) {\n    color *= L_sdr;\n    color  = RGB_to_XYZ(color);\n    color  = XYZD65_to_XYZD50(color);\n    color  = XYZ_to_Lab(color);\n    return color;\n}\n\nvec3 Lab_to_RGB(vec3 color) {\n    color  = Lab_to_XYZ(color);\n    color  = XYZD50_to_XYZD65(color);\n    color  = XYZ_to_RGB(color);\n    color /= L_sdr;\n    return color;\n}\n\nconst float pi = 3.141592653589793;\nconst float epsilon = 1e-6;\n\nvec3 Lab_to_LCH(vec3 Lab) {\n    float a = Lab.y;\n    float b = Lab.z;\n\n    float C = length(vec2(a, b));\n    float H = 0.0;\n\n    if (!(abs(a) < epsilon && abs(b) < epsilon)) {\n        H = atan(b, a);\n        H = H * 180.0 / pi;\n        H = mod((mod(H, 360.0) + 360.0), 360.0);\n    }\n\n    return vec3(Lab.x, C, H);\n}\n\nvec3 LCH_to_Lab(vec3 LCH) {\n    // float C = max(LCH.y, 0.0);\n    float C = LCH.y;\n    float H = LCH.z * pi / 180.0;\n\n    float a = C * cos(H);\n    float b = C * sin(H);\n\n    return vec3(LCH.x, a, b);\n}\n\nmat3 BT2020_to_BT709 = mat3(\n     1.66049100210843540, -0.58764113878854950,  -0.072849863319884740,\n    -0.12455047452159074,  1.13289989712595960,  -0.008349422604369515,\n    -0.01815076335490526, -0.10057889800800737,   1.118729661362913000\n);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 lch = vec3(\n        fragCoord.y / iResolution.y * 100.0,\n        ((fragCoord.x / iResolution.x) - 0.5) * 400.0,\n        iMouse.x / iResolution.x * 360.0\n    );\n    bool inGamut;\n\n    fragColor = vec4(0.5, 0.5, 0.5, 1.0);\n\n    vec3 bt2020 = pow(Lab_to_RGB(LCH_to_Lab(lch)), vec3(1.0 / 2.4));\n    inGamut = bt2020 == clamp(bt2020, 0.0, 1.0);\n    if(inGamut) fragColor = vec4(bt2020, 1.0);\n\n    vec3 bt709 = pow(Lab_to_RGB(LCH_to_Lab(lch)) * BT2020_to_BT709, vec3(1.0 / 2.4));\n    inGamut = bt709 == clamp(bt709, 0.0, 1.0);\n    if(inGamut) fragColor = vec4(bt709, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}