{"ver":"0.1","info":{"id":"slKGWw","date":"1637819323","viewed":399,"name":"Fractal knots","username":"jarble","description":"A fractal with knot-like patterns.","likes":23,"published":3,"flags":0,"usePreview":0,"tags":["fractal","knot","lace"],"hasliked":0,"parentid":"fl3GDB","parentname":"Persian carpet 18"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//change these constants to get different patterns!\n#define c1 vec3(1.,0.5,1.5)\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec2 triangle_wave(vec2 a,float scale,float num){\n    //a = rotate(a,num*radians(180.));\n    return abs(fract((a+c1.xy)*scale)-.5);\n    //return abs(fract((a+c1.xy+num)*scale)-.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col;  \n    float t1 = 36.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv += vec2(iTime/2.0,iTime/3.0)/t1/8.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    float scale = c1.z;\n    float offset = 0.;\n    float offset1 = iTime/1000.;\n    float num = 0.;\n    vec3 col1 = col;\n    \n    for(int i=0;i<9;i++)\n    {\n        //num += ceil(uv.x-uv.y);\n        //uv.x *= sign(uv.x);\n        //uv.y *= sign(uv.y);\n        vec2 t2 = vec2(0.);\n        vec2 t3 = vec2(0.);\n        \n        //float scale = scale+col.x/16.;\n        for(int k = 0; k < 3; k++){\n            \n\n            //uv /= -scale-col.x;\n            //uv += ceil(t2*2.)/2.; //lace pattern\n\n            uv /= -scale;\n            uv -= offset + (t2.yx)/(scale);\n            \n            //uv += fract(uv.x/(3.))/3.; //a more interesting quilt pattern\n\n            //uv -= offset + (t2.yx)/(scale+length(col));\n            \n            //uv -= (t2.yx)/(scale+t3);\n            //uv -= (t2.yx)/(scale+col.x);\n            vec2 temp = t2;\n            t2 = triangle_wave(uv.yx-.5,scale,num);\n            //t2 = triangle_wave(uv.yx-.5+float(i),scale);\n            \n            t3 = triangle_wave(uv,scale,num);\n            //t2 -= abs(t2-.5)/4.;\n            //t3 -= abs(t3-.5)/4.;\n            //t2 = abs(t2-.5);\n            //t3 = abs(t3-.5);\n            \n            uv.yx = (t2+t3)/scale;\n            //t2 /= (1.+temp);\n            //offset -= col.x/16.;\n            //offset += offset1;\n        }\n        //offset += .5/scale;\n        col.x = abs(uv.y-uv.x+col.x);\n        col = col.yzx;\n        col1 = abs(col1-col);\n        //scale *= 1.0+col.x/16.;\n    }\n    fragColor =\n        vec4(col,1.0);\n        //vec4(col1,1.0);  \n}\n","name":"Image","description":"","type":"image"}]}