{"ver":"0.1","info":{"id":"3tyyRD","date":"1610600884","viewed":58,"name":"playing with kifs","username":"milez770","description":"kifs","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle){\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -.5 to .5)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    // zoom out a little\n    uv *= 1.5;\n     \n    // init col vector\n    vec3 col = vec3(0);\n\n    // mirror uv on x axis\n    uv = sin(abs(uv));\n    \n    // rotate angle\n    vec2 n = N(mouse.x*3.1415);\n    // direction on uv coord\n    float d = dot(uv-vec2(.5,0), n);\n    //draw a line\n    uv -= n*max(0., d)*2.;\n    \n    // line resolution\n    float scale = 1.;\n    uv.x += .5;\n    n = N(iTime*.1*3.1415);\n    for(int i=0; i<10; i++){\n    \n        uv*=3.;\n        scale *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        // bend\n        uv -= n*min(0., dot(uv, n))*2.;\n    }\n    \n    \n    \n    \n    //d = length(uv - vec2(clamp(uv.x, -1., 1.), 0));\n    //col+= smoothstep(1./iResolution.y, .0, d/scale);\n    uv /= scale;\n    // Output to screen\n    col += texture(iChannel0, uv*2.-iTime*.03).rgb;\n    //col.rg += uv;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}