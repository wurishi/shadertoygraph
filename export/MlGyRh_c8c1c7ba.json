{"ver":"0.1","info":{"id":"MlGyRh","date":"1535012711","viewed":146,"name":"pixelized area","username":"ruirodrigues","description":"pixelize area where mouse touch","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pixelize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat grides = 0.025;\nfloat objectSize = 0.5;\nfloat smoothObjectPadding = 0.33;\n\n//float type = 0.0; // square\nfloat type = 1.0; // circle\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 objectCenter = iMouse.xy/iResolution.xy;\n    \n    vec2 v = uv - objectCenter;\n    v.x = v.x * aspectRatio;\n\n    float size = objectSize / 2.0;\n    float smoothSize = size * smoothObjectPadding;\n    float circleMix = smoothstep(size - smoothSize, size, length(v));\n   \n    float squareMix = clamp(length(smoothstep(size - smoothSize, size, abs(v))), 0.0, 1.0);\n    \n    float m = mix(squareMix, circleMix, type);\n    \n    vec2 res = vec2(aspectRatio / grides, 1.0 / grides);\n    vec2 pixUv = floor(uv * res ) / res;\n    vec4 pixColor = texture(iChannel0, pixUv);\n    color.rgb = mix(pixColor.rgb, color.rgb, m);\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}