{"ver":"0.1","info":{"id":"Nt2cDz","date":"1667412032","viewed":155,"name":"Step Grid","username":"Yahor10","description":"Grid fract try","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["firsttrygrid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float r){\n  \n  float c = cos(r);\n  float s = sin(r);\n  return mat2(c,-s,s,c);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x-=.5;\n      uv.x *=iResolution.x/iResolution.y;\n      float x = 0.0;\n      float y =.0;\n      vec2 uvl = rotate(.7) *uv;\n      vec2 uvr = rotate(-.7) *uv;\n      vec2 uvres = fract(uvl+uvl.x *10.0 ); \n      vec2 uvrightres = fract(uvr+uvr.x*10.0);\n      float leftDiagonal = step(uvres.x,.343)-step(uvres.x,.32);\n      float rightDiagonal = step(uvrightres.x,.343)-step(uvrightres.x,.32);\n\n       // Output to screen\n      fragColor =vec4(vec4(rightDiagonal) * vec4(.0,1.0,.0,1.0)  + vec4(leftDiagonal) * vec4(1.0,.0,.0,1.0));\n}","name":"Image","description":"","type":"image"}]}