{"ver":"0.1","info":{"id":"DlfBW2","date":"1693433238","viewed":51,"name":"Shader Art Template","username":"Cesium_137","description":"I followed a youtube tutorial online and made some minor tweaks. This will come to serve as the template for future projects of mine, like I did with the fractals.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","abstract","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n\n    vec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1.);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    \n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.);\n    \n    \n    \n    for(float i = 0.; i < 4.; i++){ //For loop to make it look more interesting\n    \n        uv = fract(uv * 1.5) - .5; //Changing the 1.5 leads to different patterns\n        \n        float d = length(uv) * exp(-length(uv0)); //Changing this leads to new patterns\n        \n        vec3 col = palette(length(uv0) + iTime*.3 + i*.4); //Palette pattern\n        \n        d = d*10. + iTime;\n        d = sin(d); //This also changes the pattern if you didn't see the trend\n        d /= 10.;\n        d = abs(d);\n        \n        d = pow(.01/d,1.6); //Making the contrast higher (1 for default, >1 for higher contrast)\n        \n        finalColor += col * d;\n    }\n    \n    \n    fragColor = vec4(finalColor,1.);\n}","name":"Image","description":"","type":"image"}]}