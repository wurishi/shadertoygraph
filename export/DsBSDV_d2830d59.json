{"ver":"0.1","info":{"id":"DsBSDV","date":"1670873477","viewed":101,"name":"Hazy Color (Hyper-)Loop Warp","username":"Mojomajor","description":"the 90ies are back\n\nEDIT: made it bounce between the cool times. looks like the army of the dead portal, haha\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["hazynineties"],"hasliked":0,"parentid":"DsXSWN","parentname":"Hazy Color Warp"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define chillTime iTime/30.\n// best between 60 and 140 seconds\n\n\nfloat inverseLerp(float v, float minValue, float maxValue) {\n  return (v - minValue) / (maxValue - minValue);\n}\n\nfloat remap(float v, float inMin, float inMax, float outMin, float outMax) {\n  float t = inverseLerp(v, inMin, inMax);\n  return mix(outMin, outMax, t);\n}\n\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nfloat noise(vec2 st){\n    return fract(sin(dot(vec2(12.23,74.343),st))*43254.);  \n}\n\n#define pi acos(-1.)\nfloat noise2D(vec2 st){\n  \n  //id,fract\n  vec2 id =floor(st);\n  vec2 f = fract(st);\n  \n  //nachbarn\n  float a = noise(id);\n  float b = noise(id + vec2(1.,0.));\n  float c = noise(id + vec2(0.,1.));\n  float d = noise(id + vec2(1.));\n  \n  \n  //f\n  f = smoothstep(0.,1.,f);\n  \n  //mix\n  float ab = mix(a,b,f.x);\n  float cd = mix(c,d,f.x);\n  return mix(ab,cd,f.y);\n}\n\nmat2 rot45 = mat2(0.707,-0.707,0.707,0.707);\n\nmat2 rot(float a){\n  float s = sin(a); float c = cos(a);\n  return mat2(c,-s,s,c);\n}\nfloat fbm(vec2 st, float N, float rt,float time){\n    st*=3.;\n \n  float s = .5;\n  float ret = 0.;\n  for(float i = 0.; i < N; i++){\n     \n      ret += noise2D(st)*s; st *= 2.9; s/=2.; st *= rot((pi*(i+1.)/N)+rt*8.);\n      st.x += time/10.;\n  }\n  return ret;\n \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = remap(sin(chillTime)*3.*cos(chillTime),-1.,1.,10., 70.);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv2 = fragCoord/iResolution.xy;\n\n    vec2 position = - 1.0 + 2.0 * uv2;\n    position.x +=sin(time)*0.5;\n    \n    //space odyssey final scene\n    //position*=sin(time)/30.*0.5+0.5 * 30.;\n    \n    float a = atan( position.y, position.x );\n\tfloat r = sqrt( dot( position, position ) );\n\n\n    vec2 uv;\n\tuv.x = cos( a ) / r;\n\tuv.y = sin( a ) / r;\n\tuv /= 5.0;\n\tuv += time/4. ;\n    \n\t/*vec2 uv;\n\tuv.x = cos( a ) / r;\n\tuv.y = sin( a ) / r;\n\tuv /= 1.025+sin(time/6.)/6.;\n    uv*=6.5;*/\n\t//uv += time/30.;\n    \n    // fbm it\n    uv*=rot(sin(fbm(uv,10.,sin(time/4000.),time)));\n    \n    // more granularity\n    uv=uv*rot(time/4.);    \n    \n    float red = abs( sin( uv.x * uv.y + time / 5.0) );\n\tfloat green = abs( sin( uv.x * uv.y + time / 4.0 ) );\n\tfloat blue = abs( sin( uv.x * uv.y + time /3.0) );\n\tfragColor = vec4( red, green, blue, 1.0 );\n    \n    // trip clouds\n    fragColor.xyz = 0.5 + 0.5*cos(time+uv.xyx+vec3(0,2,4));\n    //clamp(0.5,0.0,1.0);\n    float factor = cos(uv.x+uv.y/4.)*0.5+0.5;\n\n    fragColor.xyz = mix(0.5 + 0.5*cos(time+uv.xyx+vec3(0,2,4)),fragColor.xyz, factor);\n    //vec3 result = clamp(texCol0.rgb - Density*(texCol1.rgb), 0.0, 1.0);\n    // flashes?\n    \n    vec3 hsvCol = rgb2hsv(fragColor.xyz);\n    //hsvCol.r = (sin(time/3.)*0.5+0.5);\n    hsvCol.g += 0.1; // saturation\n    hsvCol.b -= .0; // brightness\n    fragColor.xyz= hsv2rgb(hsvCol);\n    \n    \n\n}","name":"Image","description":"","type":"image"}]}