{"ver":"0.1","info":{"id":"7dffRX","date":"1645288045","viewed":114,"name":"Music Visualizr","username":"keshav2010","description":"I made this specifically for https://soundcloud.com/shubhneet-singh-3/baller-2 \nJust pause and play iChannel0 if nothing shows up","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4tjSWR","filepath":"https://soundcloud.com/shubhneet-singh-3/baller-2","previewfilepath":"https://soundcloud.com/shubhneet-singh-3/baller-2","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 noise2to3(vec2 co){\n    float r = fract(sin(dot(co, vec2(42.9898, 72.233)))) * 2.5453;\n    float g = 0.5*fract(cos(dot(co, vec2(12.9898, 8.233)))) * .5453;\n    float b = cos(cos(dot(co, vec2(42.9898, 78.233)))) * .5453;\n    return vec3(r,g,b);\n}\nvec3 drawRect(vec2 uv, vec2 origin, vec2 size)\n{\n    float w = size.x;\n    float h = size.y;\n    float inX = 1.-step(w/2.,abs(uv.x-origin.x));\n    float inY = 1.-step(h/2., abs(uv.y-origin.y));\n    return vec3(min(inX,inY));\n}\nvec2 rotate(vec2 rotateVector, float deg)\n{\n    return rotateVector*mat2(cos(deg), -sin(deg), sin(deg), cos(deg));\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.y)*100.;\n    \n    //sound texture 512x2\n    int tx = int(uv.x*1.12);\n    \n    // first row=frequency data (48Khz/4 in 512 texels, meaning 23 Hz per texel)\n\tfloat fft  = sin(texelFetch( iChannel0, ivec2(tx,0), 0 ).x*0.45)*3.;\n\n    // second row is the sound wave, one texel is one mono sample\n    float wave = sin(texelFetch( iChannel0, ivec2(tx,1), 0 ).x*0.15)*1.;\n    \n    vec2 rectSize = wave*10.+fft*vec2(50.)+smoothstep(0.5, 1.5, sin(fft));\n    vec2 rectPos= vec2(90., 50.);\n    float rotSpeed = fft*sin(iTime)*1.5;\n    \n    vec3 col = vec3(fft,wave, fft);\n    uv -= rectPos;\n    uv = rotate(uv.xy, rotSpeed*fft);\n    uv += rectPos;\n    col*= drawRect(uv, rectPos, rectSize);\n    col+= drawRect(uv, rectPos+vec2(25., 0.), rectSize-vec2(25.));\n    col+= drawRect(uv, rectPos+vec2(-25., 0.), rectSize-vec2(25.));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}