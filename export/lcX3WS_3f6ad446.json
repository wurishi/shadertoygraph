{"ver":"0.1","info":{"id":"lcX3WS","date":"1703429878","viewed":27,"name":"star rotating","username":"nayk","description":"star,rotate,colorful","likes":1,"published":1,"flags":1,"usePreview":0,"tags":["colorful","rotate","star","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*originals https://www.shadertoy.com/view/lslyRn# https://www.shadertoy.com/view/dt3GzB and other*/\n#define iterations 11\n#define formuparam 0.53\n\n#define volsteps 20\n#define stepsize 0.1\n\n#define zoom   0.800\n#define tile   0.850\n#define speed  0.000 \n\n#define brightness 0.0015\n#define darkmatter 0.300\n#define distfading 0.730\n#define saturation 0.850\n\n#define iTime (iTime*0.75)\n\n#define r(p) mat2(cos(round((atan(p.y,p.x)+k)/f)*f-k + vec4(0,33,11,0)))\nfloat glory_nice_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\nvoid mainVR( out vec4 fragColor, in vec2 fragCoord, in vec3 ro, in vec3 rd )\n{\n\t//get coords and direction\n\tvec3 dir=rd;\n\tvec3 from=ro;\n\tfloat f = .0856, d = f, k = iTime*f, t;\n\t//volumetric rendering\n\tfloat s=0.1,fade=1.;\n\tvec3 v=vec3(0.);\n\tfor (int r=0; r<volsteps; r++) {\n\t\tvec3 p=from+s*dir*.5;\n\t\tp = abs(vec3(tile)-mod(p,vec3(tile*2.))); // tiling fold\n\t\tfloat pa,a=pa=0.;\n\t\tfor (int i=0; i<iterations; i++) { \n\t\t\tp=abs(p)/dot(p,p)-formuparam;\n            p.xy*=r(p.xy);// the magic formula\n\t\t\ta+=abs(length(p)-pa); // absolute sum of average change\n\t\t\tpa=length(p);\n\t\t}\n\t\tfloat dm=max(0.,darkmatter-a*a*.001); //dark matter\n\t\ta*=a*a; // add contrast\n\t\tif (r>6) fade*=1.2-dm; // dark matter, don't render near\n\t\t//v+=vec3(dm,dm*.5,0.);\n\t\tv+=fade;\n\t\tv+=vec3(s,s*s,s*s*s*s)*a*brightness*fade; // coloring based on distance\n\t\tfade*=distfading; // distance fading\n\t\ts+=stepsize;\n\t}\n\tv=mix(vec3(length(v)),v,saturation); //color adjust\n\tfragColor = vec4(v*.05,1.);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\t\n\tvec3 dir=vec3(uv*zoom,1.);\n\tfloat time=iTime*speed+.25;\n    \n    \n    vec4 O=fragColor;\n    vec2 F=fragCoord;\n float f = .2856, d = f, k = iTime*f, t;\n    vec4  p, a = O *= t = 0.;\n    \n  \n        uv.x+=0.3*cos(iTime);\n             uv.y+=0.3*sin(iTime);\n    // anim between 0.9 - 1.1\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;    \n\n    vec2 R = iResolution.xy;\n    vec2 textSamp =  F/1024.+fract(k/20.);\n    vec4 sv = normalize(vec4((F+F-R)/R.y, 1, 0));\n     \n        sv.x+=0.5*cos(iTime);\n            sv.y+=0.5*sin(iTime);\n    for (float i=0.;i<6e1;i++) {\n        if(d <= .01) break;\n        p.z -= 5.;\n        p.zx *= r(p.xz);\n        p.yx *= r(p.xy);\n       \n        a += smoothstep(.02, .0, length(p.yz) - .05) *\n             smoothstep( 1., .0, length(p)    -  1.) *\n             (1. + cos(k+k + t+t + vec4(0,1,2,0)));\n             \n        t += d = min(max(length(p) - 1., .05 - length(p.yz)),\n                 .1 + texture(iChannel0, textSamp).r*.026);\n        p = t*sv;\n    }\n                 \n    O = .5*mix(O+.3, a, exp(-t*.1));\n    \n    O+= vec4( glory_nice_star(uv,anim) * vec3(0.55,0.3,0.35)*0.1, 1.0);\n\n\n\n\tvec3 from=vec3(1.,.5,0.5)*O.xyz;\n\tfrom+=vec3(time*2.,time,-2.);\n\t\n\t\n\tmainVR(fragColor, fragCoord, from, dir);\t\n    fragColor+=O;\n}\n","name":"Image","description":"","type":"image"}]}