{"ver":"0.1","info":{"id":"lstyWf","date":"1525560449","viewed":297,"name":"wolf1.2.8","username":"dahart","description":"wolf128 Shader version of the 128 byte ray caster, code straight from here: http://finalpatch.blogspot.com/2014/06/dissecting-128-byte-raycaster.html","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["wolf128"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// http://finalpatch.blogspot.com/2014/06/dissecting-128-byte-raycaster.html\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n   vec2 uv = fragCoord.xy / iResolution.xy;\n    uint x = uint(uv.x * 320.0);\n    uint y = uint(uv.y * 200.0);\n    \n    uint z = 0u;\n    uint xdist, ydist;\n    for(int i = 0; i < 256; ++i)\n    {\n        xdist = ((x - 160u) * z + 4096u) >> 8;\n        ydist = ((y - 100u) * z + 4096u) >> 8;\n        switch(z / 64u)\n        {\n        case 0u: xdist -= 10u; break;\n        case 1u: xdist -= 40u; break;\n        case 2u: xdist -= 20u; break;\n        case 3u: xdist -= 30u; break;\n        }\n        if ((xdist >=32u && ((z & 32u) != 0u)) || (ydist >= 32u))\n            break;\n        ++z;\n    }\n\n    uint texel = (xdist & 255u) ^ (ydist & 255u) ^ z;\n    texel %= 16u;\n    float c = float(texel) / 16.0;\n    fragColor = vec4(vec3(c), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}