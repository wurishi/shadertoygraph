{"ver":"0.1","info":{"id":"ldXfDs","date":"1498797561","viewed":566,"name":"Weird Game of Life Mod","username":"Ebanflo","description":"2d cellular automaton on each channel. Inspired by game of life rule. Mouse makes things interesting when you fullscreen and put it on the edges","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["automata","cellular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n    fragColor.xyz = fragColor.yzx;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame < 10) fragColor = texture(iChannel1, fragCoord / iResolution.xy);\n    else{\n        vec4 neighborhood = vec4(0.0);\n        fragCoord.y += 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.x += 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.y -= 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.y -= 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.x -= 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.x -= 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.y += 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        fragCoord.y += 1.0;\n        neighborhood += texture(iChannel0, fragCoord / iResolution.xy);\n        vec4 cell = texture(iChannel0, fragCoord / iResolution.xy);\n        for(int n = 0; n < 3; n++){\n            if(neighborhood[n] < 2.0 && cell[n] > .5) fragColor[n] = cell[n] * .25;\n            else if(neighborhood[n] > 3.0 && cell[n] < .5) fragColor[n] = cell[n] * 2.0;\n            else if(neighborhood[n] > 3.0) fragColor[n] = cell[n] * .25;\n            else fragColor[n] = cell[n];\n        }\n    }\n    if(distance(iMouse.xy, fragCoord) < 10.0){\n        fragColor = texture(iChannel1, fragCoord / iResolution.xy);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}