{"ver":"0.1","info":{"id":"3sB3zd","date":"1550356807","viewed":383,"name":"cartoon motionblur","username":"uynet","description":"like this https://twitter.com/uynet/status/961205101749714944","likes":11,"published":1,"flags":32,"usePreview":0,"tags":["motionblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 c0 = vec4(0.15,0.35,0.56,1.);//BG\nvec4 c1 = vec4(1.00,0.65,0.40,1.);//\n\nfloat time;\nfloat R;\nconst int samples = 20;\nvec2 g;\nvec2 uv;\nvec4 color;\n\nconst float PI = 3.14159265;\n\n\nstruct Square{\n    float size;\n    vec2 pos;\n    vec2 vel;\n};\n  float wave(float x , float f, float a){\n    return  cos(x*f)*a ;\n}\n    \n Square SquareCons(vec2 pos,float size){\n        Square sq;\n        sq.pos = pos;\n        sq.size = size;\n        return sq;\n}\n    \n float cLength(vec2 p){\n  if(abs(p.x)>abs(p.y))return abs(p.x);\n  return abs(p.y);\n}    \n\n\n\nfloat r = 0.03;\nvec4 drawCircle(vec2 v){ \n        float d = length(uv-v);\n        if( d < r)return vec4(0);\n        return vec4(d);\n}\n\nfloat track(float x){\n    float f = 0.;\n    //float po = sin(iTime);\n    //float yo = tan(iTime*1.0);\n     float t = 0.03 * (-iTime*130.0);\n   \n    x *= 40.;\n    f+=cos(x)*1. ;\n    \n    f += 10.* \n        sin(x*2.1 + t) * .55\n      *sin(x*1.72 + t * 1.121) * .50\n     //sin(x*2.221 + t * 0.437) * .50;\n     * sin(x*3.1122+ t * 4.269) * 0.35;\n    return f;\n}\n\nfloat disp(vec2 p){\n    return -0.01*sin(p.y*10.+iTime*10.);\n}\n\nvec4 drawSquare(Square sq,vec2 v){\n\n    vec2 p = uv-sq.pos;\n    vec2 q = p;\n    \n    v *= smoothstep(0.,1.,length(v)*10.);\n    v = -v;\n    \n    float unko = dot(p,normalize(v));\n\n    vec2 vertV = vec2(v.y , -v.x);\n    float Pvx = dot(q,normalize(vertV));//\n \n    float vl = length(v);\n    \n   // float d2 = disp(vec2(Pvx,unko));\n    vl  *=0.5+ track(Pvx);\n    //if(unko>0.5*vl) vl *=1.+d2*30.;\n    \n\n    unko = clamp(unko,0.,vl);\n    q  -= normalize(v) * unko;\n      \n    float d =   length(q);\n    return vec4(d);\n}\n\n\nvec2 move(float t){\n    vec2 p = vec2(0);\n    float r = 0.85;\n   \n    float v = 6.;\n    float w = 0.7;\n    float h = 0.4;\n    \n    t *= 1.;\n\n    \n    t = mod(t,4.);\n    if(t<2.)p.x = exp(-t*v)*w;\n    else p.x += (1.-exp(-(t-2.)*v))*w;\n    \n    if(1.<t && t<3.)p.y = exp(-(t-1.)*v)*h;\n    else p.y += (1.-exp(-(mod(t-3.,4.))*v))*h;\n    \n    p -= vec2(w/2. , h/2.);\n\n    p * 1.0000;\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    color = vec4(1);\n    vec2 mouseUV = (iMouse.xy-.5*iResolution.xy)/iResolution.x; \n    \n    mouseUV = move(iTime);\n  //  mouseUV = vec2(0);\n\n    \n    vec2 prevPos = move(iTime-0.05); \n   \n    vec2 v = move(iTime)-prevPos;\n    \n    Square sq = SquareCons(mouseUV,0.03);    \n\n    vec4 t  = drawSquare(sq,v); \n     t = vec4(smoothstep(0.,1.,t));\n    \n      t = vec4(step(0.005,t)); \n     if(t.x==0.)color = c1;\n    else color = c0;\n    fragColor = color;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(1);\n}","name":"Buffer A","description":"","type":"buffer"}]}