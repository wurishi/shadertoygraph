{"ver":"0.1","info":{"id":"ctXGRS","date":"1671890456","viewed":272,"name":"Tatami Walk","username":"panna_pudi","description":"Why did they put toilet in my room?...","likes":16,"published":1,"flags":64,"usePreview":0,"tags":["2d","zoom","phi","infinite","goldenratio","japan","tatami","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtjXRd","filepath":"https://soundcloud.com/kibumsbum/yojou-han-shinwa-taikai-the-tatami-galaxy-ed-full?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/kibumsbum/yojou-han-shinwa-taikai-the-tatami-galaxy-ed-full?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    Once again I saw ending from Tatami Galazy and \n    finally I got my hands on reproducing moment from it\n    https://www.youtube.com/watch?v=-IcFDwygw-o\n    \n    Golden Section Zoom by Fizzer:\n    https://www.shadertoy.com/view/WlcSD8\n*/\n\nconst float PI = acos(-1.);\nconst float TAU = 2. * PI;\n\nfloat smooth_floor(float x, float c) {\n    float a = fract(x);\n    float b = floor(x);\n    return ((pow(a, c) - pow(1. - a, c)) / 2.) + b;\n}\n\n#define AAstep(thre, val) smoothstep(-.2,.8,(val-thre)/min(0.03,fwidth(val-thre)))\n\nfloat hash21(vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat hash11(float p) {\n    return fract(sin(p * 78.233) * 43758.5453);\n}\n\nmat2 rot(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat sd_box(vec2 p, vec2 h) {\n    p = abs(p) - h;\n    return length(max(p, 0.)) + min(0., max(p.x, p.y));\n}\n\nfloat sd_circle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nconst vec4 phases = vec4(0.71, 1.21, 1.18, 0.);\nconst vec4 amp = vec4(-.63, -.63, -.52, 0.);\nconst vec4 freq = vec4(1.06, 1.31, 1.99, 0.);\nconst vec4 offsets = vec4(-.36, -.16, 0.01, 0.);\n\nvec3 to_rgb(vec4 grad) {\n    vec4 k = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(grad.xxx + k.xyz) * 6.0 - k.www);\n    return grad.z * mix(k.xxx, clamp(p - k.xxx, 0.0, 1.0), grad.y);\n}\n\nvec3 palette(float x) {\n    vec4 phase = phases * TAU;\n    x *= TAU;\n\n    vec4 col = vec4(offsets.r + amp.r * 0.5 * cos(x * freq.r + phase.r) + 0.5,\n                    offsets.g + amp.g * 0.5 * cos(x * freq.g + phase.g) + 0.5,\n                    offsets.b + amp.b * 0.5 * cos(x * freq.b + phase.b) + 0.5,\n                    offsets.a + amp.a * 0.5 * cos(x * freq.a + phase.a) + 0.5);\n    return to_rgb(clamp(col, 0., 1.));\n}\n\n\nfloat outline(float x) {\n    return abs(x) - 0.008;\n}\n\nvec3 tatami(vec2 p, float id, float time) {\n    vec3 col = vec3(0.);\n    vec2 pp = p + vec2(-0.002, 0.004);\n    float room = sd_box(pp, vec2(0.475, 0.49));\n\n    vec2 tatami_size = vec2(0.16, 0.34);\n    float tatami = sd_box(pp, vec2(0.18));\n    tatami = outline(tatami);\n    tatami = min(tatami, outline(sd_box(pp - vec2(0.34, 0.16), tatami_size)));\n    tatami = min(tatami, outline(sd_box(pp - vec2(-0.34, -0.16), tatami_size)));\n    tatami = max(tatami, room);\n\n    float entrance = sd_box(pp - vec2(0.488, 0.38), vec2(0.008, 0.07));\n    vec2 dp = pp - vec2(-0.415, -0.49);\n    dp *= rot(abs(sin(time * 5. + id)) * (PI / 2.));\n    float door = sd_circle(dp, 0.227);\n    door = max(door, -(dp.x));\n    door = max(door, -(dp.x + dp.y));\n    door = max(door, room);\n    \n    float toilet = sd_box(pp - vec2(0.4, -0.345), vec2(0.03, 0.07)) - 0.01;\n    toilet = min(toilet, sd_circle(pp * vec2(1., 1.3) - vec2(0.3, -0.45), 0.08));\n\n    float cid = abs(sin((id))) * 8.;\n    vec3 floor_col = palette(cid);\n    floor_col = smoothstep(0.05, 0.8, floor_col);\n    vec3 door_col = vec3(1., 0.8, 0.3) * 0.7;\n\n    col = mix(col, floor_col, AAstep(room, 0.));\n    col = mix(col, floor_col * .3, AAstep(tatami, 0.));\n    col = mix(col, door_col, AAstep(entrance, 0.));\n    col = mix(col, door_col, AAstep(door, 0.));\n    col = mix(col, vec3(0.), AAstep(outline(door), 0.));\n    if (hash11(cid) < .05 && time > 7.) {\n        col = mix(col, palette(hash11(cid)), AAstep(toilet, 0.));\n        col = mix(col, vec3(0.013), AAstep(outline(toilet), 0.));\n    }\n    return col;\n}\n\nconst float phi = (sqrt(5.) + 1.) / 2.;\n\nvec3 golden_zoom(vec2 uv, float time) {\n    vec2 pp = vec2(pow(phi - 1., 4.), pow(phi - 1., 3.));\n\n    vec2 zc = vec2(1., pp.y) / (1. - pp.x);\n\n    uv += vec2(cos(time * 1. * TAU), sin(-time * 1. * TAU)) * .1;\n\n    float a = .15 * time * TAU;\n    mat2 m = rot(a);\n\n    float scale = pow(pp.x, 1. + fract(time));\n\n    uv = m * uv * scale + zc;\n\n    vec3 color = vec3(0.);\n\n    for (float i = 0.; i < 32.; i++) {\n        float j = i + floor(time) * 4.;\n        if (uv.x < 1.) {\n            color = tatami(uv - 0.5, j, time);\n            break;\n        }\n        uv = (uv - vec2(1., 1.)).yx * vec2(-1., 1.) * phi;\n    }\n\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    float t = iTime;// + hash21(uv + iTime) * 2e-3;\n    t += smooth_floor(t * 0.8, 15.);\n    t *= 0.2;\n    \n    vec3 col = golden_zoom(uv, t);\n    \n    col = pow(col, vec3(1. / 2.2));\n\n    vec2 in_uv = fragCoord / iResolution.xy;\n    col *= pow(10. * in_uv.x * in_uv.y * (1. - in_uv.x) * (1. - in_uv.y), .096);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}