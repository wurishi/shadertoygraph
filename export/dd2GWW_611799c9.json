{"ver":"0.1","info":{"id":"dd2GWW","date":"1667621098","viewed":160,"name":"moment_2","username":"danzabarr","description":"number 2","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["trippy","hyperbolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 checkerboard(vec2 coord, vec2 scale)\n{\n\n    coord *= scale;\n    \n    vec2 floored = round(coord);\n    \n    float d = distance(coord, floored);\n    \n    vec4 color = vec4(.5, 1, .4, 1);\n    \n    if (mod(floored.x, 2.0) == mod(floored.y, 2.0))\n        color = vec4(.4, .6, .1, 1);\n    \n    \n    if (d > 0.5)\n        return vec4(1, 1, 1, 1) / (d * 10.0);\n    else\n        return (1.0 - color * d * d * 4.0);\n\n}\n\nvec2 convert(vec2 coord)\n{\n\n    float d = length(coord);\n    float a = atan(coord.y, coord.x);\n    //a += pow(d, 1.0 + iTime * sin(iTime / 100.0));\n\n    float cosa = cos(a);\n    float sina = sin(a);\n\n\n    vec2 converted = vec2(cosa + (sina * cos(iTime)), sina + (cosa * sin(iTime))) / (d / iTime);\n    converted = coord * d + converted * (1.0 - d);\n    \n    vec2 other = coord / (d * iTime);\n\n\n    return converted * d + other * (1.0 - d);\n    \n\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.0;\n    uv -= 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    fragColor = checkerboard(convert(uv), vec2(1, 1) / (1.0 + sin(iTime / 100.0)));\n}","name":"Image","description":"","type":"image"}]}