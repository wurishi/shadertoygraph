{"ver":"0.1","info":{"id":"ttXSWN","date":"1568165807","viewed":111,"name":"shaderattempt3","username":"mardinator2","description":"asdf","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = -1.0 + 2.0*uv;\n\tp.x *= iResolution.x/iResolution.y;\n\n   uv -= vec2 (0.9, 0.9)*(iTime*0.009);\n    float r = sqrt ( dot (uv,uv));\n    float a = atan ( uv.y, uv.x) + iTime*0.1;\n    float s = 0.1 + 0.1*sin ( 5.0*a);\n    float t = 0.15 + 0.15*pow ( s, 0.3);\n    t += 0.1*pow ( 0.5 + 0.5*cos ( 9.0*a), 0.5);\n    float h = r/t;\n    float f = 0.0;\n    \n    p.y = p.y + 1.0*sin(iTime*PI);\n    p.x = p.x + 1.0*sin(iTime);\n    \n    p.y = p.y*10.0 + sin(iTime*1.);\n    p.x = p.x*5.0 + sin(iTime*5.);\n    float ss = 0.5 + 0.5*sin (2.0*iTime);\n    float anim = 1.0 + 0.1*ss*clamp ( 1.0-r, 0.5, 1.0);\n    h *= anim;\n    \n    if ( h < 1.0) \n    {\n        f = 1.0;\n    }\n    \n    \n    \n    // Time varying pixel color\n    vec3 col = 0.1 + 1.5*sin(iTime+uv.xyx+vec3(0,2,9)*h) * 1.0*cos(iTime+uv.xyx+vec3(0,2,0)*h);\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}