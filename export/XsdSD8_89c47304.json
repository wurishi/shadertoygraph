{"ver":"0.1","info":{"id":"XsdSD8","date":"1459065401","viewed":359,"name":"Shader Lesson #9, Fern","username":"hubbe","description":"Barnsley IFS fern, rendered in slow-motion for effect. For more information about this fractal, see: https://en.wikipedia.org/wiki/Barnsley_fern Also illustrates how successive bilinear lookups can fuzz an image.\n","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["fractal","educational"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int speed_divider = 15;\nconst vec2 center = vec2(0.5, 0);\n\n// Look up a pixel in iChannel0, return black if outside of the texture.\nvec4 lookup(vec2 p) {\n    p += center;\n    if (p.x < 0.0 || p.x > 1.0 || p.y < 0.0 || p.y > 1.0) return vec4(0);\n    return texture(iChannel0, p) * 1.045;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // First frame: Return iChannel1 (Doesn't really matter what it is.)\n    if (iFrame < 5) {\n        fragColor = texture(iChannel1, uv);\n        return;\n    }\n \n    // Slow things down: if iFrame is not divisible by speed divider, then\n    // just return iChannel0 unmodified.\n    if (mod(float(iFrame), float(speed_divider)) != 0.0) {\n        fragColor = texture(iChannel0, uv);\n        return;\n    }\n\n    // Center is at the root of the stem.\n    uv -= center;\n\n    // Fern scale\n    float scale = 0.095;\n    \n    fragColor = vec4(0);\n    \n    // Each line below represents a copy of the whole image, scaled down.\n    // (You can try commenting them out to see what they do.)\n    \n    // This is the stem.\n    fragColor += lookup(mat2(100, 0, 0, 5) * uv) * 3.0;\n    \n    // This makes the next set of leaves up the stem.\n    fragColor += lookup(mat2(1.17, 0.055, -0.055, 1.17) * (uv - vec2(0,1.6)*scale));\n\n    // This makes leaves on the left.\n    fragColor += lookup(mat2(2.11, -2.2, 2.2, 1.9) * (uv - vec2(0, 1.6) * scale));\n    \n    // This makes leaves on the right.\n    fragColor += lookup(mat2(-2.2, 2.57, 2.389, 1.3787) * (uv - vec2(0, 0.44) * scale));\n}","name":"Buf A","description":"","type":"buffer"}]}