{"ver":"0.1","info":{"id":"7tc3DX","date":"1642100487","viewed":97,"name":"011soundA","username":"hauptroboter","description":"--","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["011sounda"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float osc_sin (float phase) { return sin(6.2831*phase);}\nfloat osc_sq  (float phase) { return step(0.5, phase)*2.0-1.0;}\nfloat osc_saw (float phase) { return phase*2.0-1.0 ;}\nfloat osc_tri (float phase) { return abs( phase - 0.5)*4.0-1.0;}\n\nfloat freq (float n) {return 440.0 * pow(2.0, (n-48.0)/12.0);}\n\nfloat synth(float t) {\n       \n       t *= 2.0;\n       t = mod (t, 8.0);\n       \n       float note = 16.0;\n       if (t < 1.0) note = 13.0;\n       else if (t < 2.0) note = 18.0;\n       else if (t < 3.0) note = 16.0;\n       else if (t < 4.0) note = 21.0;\n       else if (t < 5.0) note = 13.0;\n       else if (t < 6.0) note = 21.0;\n       else if (t < 7.0) note = 23.0;\n       else if (t < 8.0) note = 18.0;\n       \n       note += 12.0;\n       t = mod (t, 1.0);\n       \n       \n       float phase = mod(freq(note)*t, 1.0); \n       return osc_sin(phase)*exp(-3.5*t);\n}\n\n\n\nvec2 mainSound( int samp, float time )\n{   \n    return vec2(synth(time) * 0.01 );\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n         uv.y = 2.0*uv.y - 1.0;\n    \n\n   \n    fragColor = vec4(step(synth(uv.x*0.01)*synth(iTime), uv.y));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float osc_sin (float freq) { return sin(6.2831*freq);}\nfloat osc_sq  (float freq) { return step(0.5, freq)*2.0-1.0;}\nfloat osc_saw (float freq) { return freq*2.0-1.0 ;}\nfloat osc_tri (float freq) { return abs( freq - 0.5)*4.0-1.0;}\n\nfloat mtof (float n) {return 440.0 * pow(2.0, (n-48.0)/12.0);}\n\nfloat AR (float A, float R, float t) {\n         if (t < A) return smoothstep (0.0, A, t);\n          \n         t -=A;\n         return 1.0 - smoothstep(0.0, R, t);\n       \n\n}\n\nfloat instr01 (float t) {\n     \n       t *= 2.0;\n       \n       t = mod (t, 8.0);\n       \n       float note = 16.0;\n       if (t < 1.0) note = 13.0;\n       else if (t < 2.0) note = 18.0;\n       else if (t < 3.0) note = 16.0;\n       else if (t < 4.0) note = 21.0;\n       else if (t < 5.0) note = 13.0;\n       else if (t < 6.0) note = 21.0;\n       else if (t < 7.0) note = 23.0;\n       else if (t < 8.0) note = 18.0;\n       \n       note += 24.0;\n       \n       t = mod (t, 1.0);\n       \n       float freq = mod(mtof(note)*t, 1.0); \n       return osc_sq(freq)* AR(0.1, 2.0, t);\n\n}\n\n\n\nfloat instr02 (float t) {\n     \n      \n       \n       t = mod (t, 12.0);\n       \n       float note = 23.0;\n       \n      \n       if (t < 1.0) note = 16.0;\n       else if (t < 2.0) note = 13.0;\n       else if (t < 3.0) note = 21.0;\n       else if (t < 4.0) note = 23.0;\n       else if (t < 5.0) note = 16.0;\n       else if (t < 6.0) note = 16.0;\n        else if (t < 7.0) note = 18.0;\n       else if (t < 8.0) note = 23.0;\n       else if (t < 9.0) note = 21.0;\n       else if (t < 10.0) note = 13.0;\n       else if (t < 11.0) note = 21.0;\n       else if (t < 12.0) note = 23.0;\n       \n       note += 24.0;\n       \n       t = mod (t, 1.0);\n       \n       float freq = mod(mtof(note)*t, 1.0); \n       return 0.8*osc_sin(freq)*AR(0.05, 5.0, t) +  0.4*osc_tri(freq*2.0)*AR(0.1, 2.0, t) ;\n\n}\n\n\n\nfloat synth(float t) {\n       return 0.8*instr01(t) + 0.4*instr01(t - 0.25) + 0.2*instr01(t - 0.5) + instr02(t) + 0.4*instr02(t-0.3) ;\n}\n\n\n\n\n\nvec2 mainSound( int samp, float time )\n{   \n    return vec2(synth(time) * 0.02 );\n}","name":"Sound","description":"","type":"sound"}]}