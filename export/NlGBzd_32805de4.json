{"ver":"0.1","info":{"id":"NlGBzd","date":"1665007449","viewed":199,"name":"Laser-blob-box","username":"goteguru","description":"line drawing based on inverse distance from a section.\n(box drawing borrowed from Loeizd's code)\n\nchange: \n- better distortion handling (thx @FabriceNeyret2)\n- more laser like lines","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["line","draw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265\n\nvec3 drawLaserLine (vec2 a, vec2 b, vec2 u)\n{\n    vec2 ua = u-a;\n    vec2 ba = b-a;\n    float h = clamp( dot(ua, ba) / dot(ba, ba), 0., 1.);\n    float l = length(ua - h*ba);        \n    return vec3(\n        clamp(0.025/l, 0., 1.),\n        clamp(0.008/l, 0., 1.),\n        clamp(0.008/l, 0., 1.)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // float t = iTime*1.5;\n    // fix: don't loose precision over time\n    float t = mod(iTime*1., pi);\n\n\n    //in uv space\n    vec2 R = iResolution.xy,\n         uv = 2.8 * ( fragCoord -.5* R) / R.y,\n         p1 = vec2( sin(t)      , (-2. + cos(t+pi))/3.    ),\n         p2 = vec2( sin(t+pi)   , (-2. + cos(t))/3.       ),\n         p3 = vec2( sin(t+pi/2.), (-2. + cos(t-.5*pi))/3. ),\n         p4 = vec2( sin(t-pi/2.), (-2. + cos(t+.5*pi))/3. ),\n         p5 = vec2( sin(t)      ,  (2. + cos(t+pi))/3.    ),\n         p6 = vec2( sin(t+pi)   ,  (2. + cos(t))/3.       ),\n         p7 = vec2( sin(t+pi/2.),  (2. + cos(t-.5*pi))/3. ),\n         p8 = vec2( sin(t-pi/2.),  (2. + cos(t+.5*pi))/3. );\n    \n    vec3 lines = drawLaserLine(p1, p5, uv)\n        \t\t  + drawLaserLine(p2, p6, uv)\n        \t\t  + drawLaserLine(p1, p3, uv)\n        \t\t  + drawLaserLine(p3, p2, uv)\n        \t\t  + drawLaserLine(p1, p4, uv)\n        \t\t  + drawLaserLine(p4, p2, uv)\n        \t\t  + drawLaserLine(p5, p7, uv)\n        \t\t  + drawLaserLine(p7, p6, uv)\n        \t\t  + drawLaserLine(p6, p8, uv)\n        \t\t  + drawLaserLine(p8, p5, uv)\n        \t\t  + drawLaserLine(p3, p7, uv)\n        \t\t  + drawLaserLine(p4, p8, uv);\n    \n    fragColor = vec4(lines, 1.);\n}","name":"Image","description":"","type":"image"}]}