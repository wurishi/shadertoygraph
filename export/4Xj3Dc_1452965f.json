{"ver":"0.1","info":{"id":"4Xj3Dc","date":"1708968658","viewed":78,"name":"Fork flow/paint singularity","username":"sanderoneil","description":"using buffer adding velocity later","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["flow"],"hasliked":0,"parentid":"lX2GRK","parentname":"blood/river outflow sim"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    \n    vec4 buff_sample = texture(iChannel0, uv);\n    \n    fragColor = vec4(buff_sample.xyw,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float brush_size = 20.0;\nconst float sample_dist = 4.0;\nconst int sample_count = 6;\n\nconst float pi= 3.141569;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 buff_sample = texture(iChannel0, uv);\n    vec2 m = iMouse.xy;\n    float brush = max(brush_size - length(fragCoord - m),0.0);\n    \n    \n    vec3 v = vec3(0,0,0);\n    \n    vec2 sample_v = vec2(0,0);\n    \n    float total_pressure = 0.0;\n    float total_pressure_source = 0.0;\n    \n    for (float a = 0.0; a <= pi*2.0; a += pi*2.0/ float( sample_count))\n    {\n        vec2 sample_offset = vec2(cos(a),sin(a))*sample_dist;\n        vec4 sampl =  texture(iChannel0,uv+sample_offset/iResolution.xy).xyzw;\n        \n        sample_v += sample_offset * sampl.w * (dot(sampl.xy,sample_offset)+.001);\n        \n        \n        \n        vec4 sampl_opposing = texture(iChannel0,uv-sample_offset/iResolution.xy).xyzw;\n        \n        total_pressure += dot(sampl.xy,sample_offset)*( sampl.w + sampl_opposing.w);\n        total_pressure_source += dot(sampl.xy,sample_offset)*2.0;\n        \n        //buff_sample.w -= dot(sampl.xy,sample_offset)* sampl.w*iTimeDelta;\n    }\n    //sample_v = normalize(sample_v);\n    float average_pressure = total_pressure/total_pressure_source;\n    \n    float pressure = brush*10000. + average_pressure;\n    \n    vec4 before_clamp= buff_sample + vec4(sample_v*iTimeDelta,1.0,brush*iTimeDelta);\n    \n    fragColor.x = min(1.0,before_clamp.x);\n    fragColor.y = min(1.0,before_clamp.y);\n    fragColor.z = min(1.0,before_clamp.z);\n    //fragColor.w = min(1.0,before_clamp.w);\n    pressure = max(brush,pressure);\n    \n    fragColor.w = max( min(1.0, pressure),0.0);\n    \n    //fragColor.w = brush;\n}","name":"Buffer A","description":"","type":"buffer"}]}