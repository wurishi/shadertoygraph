{"ver":"0.1","info":{"id":"DtKcRV","date":"1700829309","viewed":24,"name":"20231119","username":"wwwww","description":"sin and cos ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pisincos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n#define r iResolution.xy\n#define PI 3.14159265359  // PIの値を定義\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 c1, c2;\n    float l1, l2, z = t;\n    for (int i = 0; i < 3; i++) {\n        vec2 uv1, uv2, p = fragCoord.xy / r;\n        uv1 = uv2 = p;\n        p -= 0.5;\n        p.x *= r.x / r.y;\n\n        // 波形1の座標オフセット\n        vec2 offset1 = vec2(0.25, 0.25);\n        vec2 p1 = p + offset1;\n\n        // 波形1の色の変化\n        vec3 colorChange1 = vec3(sin(t), cos(t), sin(t + PI / 2.0));\n\n        z += 0.07;\n        l1 = length(p1) * 2.1;\n        uv1 += p1 / l1 * (sin(z) + 1.) * abs(sin(l1 * 9. - z * 2.));\n        c1[i] = colorChange1[i] * (0.05 / length(mod(uv1, 1.) - 0.5));\n\n        // 波形2の座標オフセット\n        vec2 offset2 = vec2(-0.25, -0.25);\n        vec2 p2 = p + offset2;\n\n        // 波形2の色の変化\n        vec3 colorChange2 = vec3(cos(t + PI / 2.0), sin(t), cos(t));\n\n        float z2 = z + 0.5;\n        l2 = length(p2) * 1.8;\n        uv2 += p2 / l2 * (sin(z2) + 1.) * abs(sin(l2 * 7. - z2 * 2.5));\n        c2[i] = colorChange2[i] * (0.05 / length(mod(uv2, 1.) - 0.5));\n    }\n\n    // 2つの色を混合\n    vec3 finalColor = mix(c1, c2, 0.5); // 50%で混合\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}