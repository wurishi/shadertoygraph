{"ver":"0.1","info":{"id":"ctK3Dy","date":"1684590872","viewed":108,"name":"Colour Graph Scanline Effect","username":"fizzer","description":"A simple effect applied to a video. I don't actually know what kind of name this effect usually goes by.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["video","effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float video_aspect = iChannelResolution[0].y / iChannelResolution[0].x;\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    uv = vec2(uv.x * video_aspect + .5, uv.y + .5);\n\n    if(uv.x < 0. || uv.y < 0. || uv.x > 1. || uv.y > 1.)\n    {\n        fragColor = vec4(0);\n        return;\n    }\n\n    vec2 d = vec2(1024, 32);\n    vec2 quv = floor(uv * d) / d;\n    vec2 fuv = fract(uv * d);\n\n    vec3 col = textureLod(iChannel0, quv, 0.).rgb;\n\n    col = mix(vec3(.52), vec3(.85), step(fuv.y, (col.r + col.b * .5 - .3) * 1.1));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}