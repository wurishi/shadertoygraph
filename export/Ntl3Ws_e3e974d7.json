{"ver":"0.1","info":{"id":"Ntl3Ws","date":"1623119537","viewed":100,"name":"CGOLIFE","username":"trigophers","description":"the amazing 15 minute pixel celled conway's game of life!\n2021-6-30 | added \"motion blur\" (fake)","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["automata","life","cellular","conway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 data = texture( iChannel0, uv );\n    vec3 col = data.xyz/data.w;\n    \n\tfragColor = vec4( pow(col, vec3(0.45)), 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Hash by Nimitz -->\nuint baseHash( uvec2 p ) {\n    p = 1103515245U*((p >> 1U)^(p.yx));\n    uint h32 = 1103515245U*((p.x)^(p.y>>3U));\n    return h32^(h32 >> 16);\n}\nfloat hash1( inout float seed ) {\n    uint n = baseHash(floatBitsToUint(vec2(seed+=.1,seed+=.1)));\n    return float(n)/float(0xffffffffU);\n}\nvec2 hash2( inout float seed ) {\n    uint n = baseHash(floatBitsToUint(vec2(seed+=.1,seed+=.1)));\n    uvec2 rz = uvec2(n, n*48271U);\n    return vec2(rz.xy & uvec2(0x7fffffffU))/float(0x7fffffff);\n}\n// <--\n\nfloat numNeighbors(vec2 uv, vec2 res) {\n    float x = 0.;\n    float changeX = 1./res.x;\n    float changeY = 1./res.y;\n    \n    x += floor(texture(iChannel0, mod(uv+vec2( changeX, 0. ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( changeX, 0.-changeY ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( changeX, changeY ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( 0.-changeX, 0. ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( 0.-changeX, 0.-changeY ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( 0.-changeX, changeY ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( 0., 0.-changeY ), vec2(1.0))).x);\n    x += floor(texture(iChannel0, mod(uv+vec2( 0., changeY ), vec2(1.0))).x);\n    \n    return x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 uv = fragCoord/res;\n    vec4 data = texture( iChannel0, uv );\n    \n    if (float(iFrame)/2.==floor(float(iFrame)/2.)) {\n        if (iFrame == 0 || iMouse.z>0.) {\n            vec2 p = (-iResolution.xy + 2.*fragCoord - 1.)/iResolution.y;\n            float seed = float(baseHash(floatBitsToUint(p - iTime)))/float(0xffffffffU);\n            data = vec4(vec3(hash1(seed)<0.9?0.:1.), 1.0);\n        } else {\n            float num = numNeighbors(uv, res);\n\n            if (num == 3.0) {\n                data = vec4(1, 1, 1, 1);\n            } else if (num < 2. || num > 3.) {\n                data = vec4(data.xyz*vec3(0.4), 1.0);\n            } else {\n\n            }\n        }\n    }\n    fragColor = data+vec4(0, 0, 0, 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}