{"ver":"0.1","info":{"id":"Wt3Xz8","date":"1580339866","viewed":360,"name":"Horizontal Loading Bar","username":"BackwardsCap","description":"A quick example for a friend!\nA loading bar with a texture scrolling to the right","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["loadingbar","repeating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415927\n\n//the size of a pixel for anti-aliasing purposes\n#define PX 3./iResolution.y\n\n//our rotation matrix\nmat2 rot(float x)\n{\n    float s = sin(x);\n    float c = cos(x);\n    return mat2(c,-s,s,c);\n}\n\n//the mask for our loading bar\nfloat mask(vec2 uv, float w, float h)\n{\n    float caps = smoothstep(PX,0.,length(abs(uv)-vec2(w,0))- h);\n    vec2 box =smoothstep(PX,.0,abs(uv)-vec2(w-h,0.)-h);\n    return clamp(caps+(box.x*box.y),0.,1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //normalize our coordinates\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y, \n         //sample the uv for the stationary mask\n         u = uv;\n    \n    //move along x axis\n    uv.x-=mod(iTime/5.,sqrt(2.));\n    \n    //rotate by 45 degrees\n    uv*=rot(PI/4.);\n    \n    //sample a horizontal slice of texture 0\n    fragColor.rgb = texture(iChannel0,vec2(uv.x,.5)).rgb;\n    \n    //apply the loading bar mask\n    fragColor.rgb*=mask(u,1.,.1);\n}","name":"Image","description":"","type":"image"}]}