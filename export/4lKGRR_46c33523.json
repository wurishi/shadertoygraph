{"ver":"0.1","info":{"id":"4lKGRR","date":"1472738522","viewed":142,"name":"Cube segments","username":"dawee","description":"draw cube segments","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Segment {\n    vec3 vertices[2];\n    vec2 xBounds;\n    vec2 yBounds;\n    vec2 zBounds;\n};\n\nstruct Mesh {\n    Segment segments[12];\n};\n    \nMesh cube;\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    bool inSquare = false;\n    float pxByUnit = iResolution.y / 4.0;\n    float lineWidth = 1.0 / 12.0;\n\n    // Back Face\n    cube.segments[0].vertices[0] = vec3(-0.5, 0.5, -0.5);\n    cube.segments[0].vertices[1] = vec3(0.5, 0.5, -0.5);\n    cube.segments[1].vertices[0] = vec3(0.5, 0.5, -0.5);\n    cube.segments[1].vertices[1] = vec3(0.5, -0.5, -0.5);\n    cube.segments[2].vertices[0] = vec3(0.5, -0.5, -0.5);\n    cube.segments[2].vertices[1] = vec3(-0.5, -0.5, -0.5);\n    cube.segments[3].vertices[0] = vec3(-0.5, -0.5, -0.5);\n    cube.segments[3].vertices[1] = vec3(-0.5, 0.5, -0.5);\n\n    // Front Face\n    cube.segments[4].vertices[0] = vec3(-0.5, 0.5, 0.5);\n    cube.segments[4].vertices[1] = vec3(0.5, 0.5, 0.5);\n    cube.segments[5].vertices[0] = vec3(0.5, 0.5, 0.5);\n    cube.segments[5].vertices[1] = vec3(0.5, -0.5, 0.5);\n    cube.segments[6].vertices[0] = vec3(0.5, -0.5, 0.5);\n    cube.segments[6].vertices[1] = vec3(-0.5, -0.5, 0.5);\n    cube.segments[7].vertices[0] = vec3(-0.5, -0.5, 0.5);\n    cube.segments[7].vertices[1] = vec3(-0.5, 0.5, 0.5);\n\n    // Middle vertices\n    cube.segments[8].vertices[0] = vec3(-0.5, 0.5, -0.5);\n    cube.segments[8].vertices[1] = vec3(-0.5, 0.5, 0.5);\n    cube.segments[9].vertices[0] = vec3(0.5, 0.5, -0.5);\n    cube.segments[9].vertices[1] = vec3(0.5, 0.5, 0.5);\n    cube.segments[10].vertices[0] = vec3(-0.5, -0.5, -0.5);\n    cube.segments[10].vertices[1] = vec3(-0.5, -0.5, 0.5);\n    cube.segments[11].vertices[0] = vec3(0.5, -0.5, -0.5);\n    cube.segments[11].vertices[1] = vec3(0.5, -0.5, 0.5);\n\n    \n    for (int segIndex = 0; segIndex < 12; ++segIndex) {\n        cube.segments[segIndex].xBounds = cube.segments[segIndex].vertices[0].x < cube.segments[segIndex].vertices[1].x ? vec2(cube.segments[segIndex].vertices[0].x, cube.segments[segIndex].vertices[1].x) : vec2(cube.segments[segIndex].vertices[1].x, cube.segments[segIndex].vertices[0].x);\n        cube.segments[segIndex].yBounds = cube.segments[segIndex].vertices[0].y < cube.segments[segIndex].vertices[1].y ? vec2(cube.segments[segIndex].vertices[0].y, cube.segments[segIndex].vertices[1].y) : vec2(cube.segments[segIndex].vertices[1].y, cube.segments[segIndex].vertices[0].y);\n        cube.segments[segIndex].zBounds = cube.segments[segIndex].vertices[0].z < cube.segments[segIndex].vertices[1].z ? vec2(cube.segments[segIndex].vertices[0].z, cube.segments[segIndex].vertices[1].z) : vec2(cube.segments[segIndex].vertices[1].z, cube.segments[segIndex].vertices[0].z);\n\n\n        for (float z = -1.0; z <= 1.0; z += 0.1) {\n            vec3 worldCoord = vec3(((fragCoord.x - iResolution.x / 2.0) / pxByUnit) - z * 0.5, ((fragCoord.y - iResolution.y / 2.0) / pxByUnit) - z * 0.5, z);\n\n            bool followX = worldCoord.x >= cube.segments[segIndex].xBounds.x - lineWidth / 2.0 && worldCoord.x <= cube.segments[segIndex].xBounds.y + lineWidth / 2.0;\n            bool followY = worldCoord.y >= cube.segments[segIndex].yBounds.x - lineWidth / 2.0 && worldCoord.y <= cube.segments[segIndex].yBounds.y + lineWidth / 2.0 ;\n            bool followZ = worldCoord.z >= cube.segments[segIndex].zBounds.x - lineWidth / 2.0 && worldCoord.z <= cube.segments[segIndex].zBounds.y + lineWidth / 2.0 ;\n\n            if (followX == true && followY == true && followZ == true) {\n                inSquare = true;\n            }\n        }\n\n    }\n    \n    fragColor = vec4(1, 1, 1, 1);\n\n    if (inSquare == true) {\n        fragColor = vec4(0, 0, 0, 1);\n    }\n}\n","name":"Image","description":"","type":"image"}]}