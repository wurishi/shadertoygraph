{"ver":"0.1","info":{"id":"llVczG","date":"1536825841","viewed":257,"name":"bubbles or what?","username":"reven86","description":"Cells or bubbles, I dunno.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// modification of https://www.shadertoy.com/view/MstGRl\n\n\n// Determines how many cells there are\n#define NUM_CELLS 16.0\n\n// Arbitrary random, can be replaced with a function of your choice\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 463.5453);\n}\n\n// Returns the point in a given cell\nvec2 get_cell_point(ivec2 cell) {\n\tvec2 center = vec2(0.5, 0.5f * iResolution.y / iResolution.x);\n\tvec2 cell_base = vec2(cell);\n    float d = length(cell_base - center * NUM_CELLS);\n    cell_base /= NUM_CELLS;\n\tfloat noise_x = rand(vec2(cell) + d * vec2(0.0, (iTime * 0.25)* 0.00001));\n    float noise_y = rand(vec2(cell.yx) +  d * vec2(0.0, (iTime * 0.15)* 0.00001));\n    return cell_base + (0.5 + 1.5 * vec2(noise_x, noise_y)) / NUM_CELLS;\n}\n\n// Performs worley noise by checking all adjacent cells\n// and comparing the distance to their points\nfloat worley(vec2 coord) {\n\tvec2 center = vec2(0.5, 0.5f * iResolution.y / iResolution.x);\n    ivec2 cell = ivec2(coord * NUM_CELLS);\n    float dist = 1.0;\n    float dist2 = 1.0;\n    \n    // Search in the surrounding 5x5 cell block\n    for (int x = 0; x < 5; x++) { \n        for (int y = 0; y < 5; y++) {\n        \tvec2 cell_point = get_cell_point(cell + ivec2(x-2, y-2)) - coord;\n            float lenSq = dot(cell_point, cell_point);\n            dist = min(dist, lenSq);\n            dist2 = min(dist2, sqrt(lenSq));\n        }\n    }\n        \n    dist *= NUM_CELLS * NUM_CELLS;// * 0.707;\n    dist2 *= NUM_CELLS;\n    dist2 = max(0.6, dist2);\n    \n    dist += dist2;\n            \n    coord = 2.0 * (coord - center);\n    float t = 1.0 - dot(coord, coord);\n    dist *= t * t;\n    return dist;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n\tfragColor = vec4(worley(uv));\n}","name":"Image","description":"","type":"image"}]}