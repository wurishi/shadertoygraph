{"ver":"0.1","info":{"id":"WldfDS","date":"1613390949","viewed":640,"name":"OMZG Shader Royale - Cosamentale","username":"louis_C","description":"visual Livecoded during the OMZG shader royake the 12/02/21.\nhttps://www.youtube.com/watch?v=Dc5laRa09WY&t=6758s&ab_channel=FilipeCruz","likes":34,"published":1,"flags":40,"usePreview":0,"tags":["livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 croix, in vec2 fragCoord )\n{\nvec2 uv = fragCoord/iResolution.xy;\n \n\tcroix = texture(iChannel0,fragCoord/iResolution.xy);\n  \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float hs(vec2 p){return fract(sin(dot((p),vec2(45.,269.)))*7845.236+iTime*10.);}\nfloat rd(vec3 p){return fract(sin(dot(floor(p),vec3(45.,65.,269.)))*7845.236);}\nmat2 rot(float t){float c = cos(t); float s = sin(t); return mat2 (c,-s,s,c);}\nfloat bl (vec2 p, vec2 b){ vec2 q = abs(p)-b;\n  return length(max(vec2(0.),q))+min(0.,max(q.x,q.y));}\n  float box (vec3 p, vec3 b){ vec3 q = abs(p)-b;\n  return length(max(vec3(0.),q))+min(0.,max(q.x,max(q.z,q.y)));}\n  float zl1 ;float zl2;float bl2;float zl3; float bl3;\nfloat map(vec3 p,vec3 tm){\n  vec3 pb =p;\n  vec3 pc = p;\n   pc.xy *= rot(tm.y);\n  vec3 pnc =pc;\n \n  vec3 pn = p;\n  vec3 pl = p;\n  p = abs(p);\n  p -= 1.;\n  if(p.x>p.y)p.xy=p.yx;\n  if(p.x>p.z)p.xz=p.zx;\n  vec3 p2 = p;\n  vec3 rp1 = vec3 (2.);\n  p = mod(p,rp1)-0.5*rp1;\n  vec3 rp2 = vec3 (4.);\n  p2 = mod(p2,rp2)-0.5*rp2;\n  float d1 = bl(p.zy,vec2(0.2));\n  float d2 = bl(pn.xz,vec2(5.));\n  float d4 = bl(p2.xz,vec2(0.1));\n  float dl =min(d1,d4);\n  float d3 = max(min(d1,d4),-d2);\n  zl1 = max(d4,-d2);\n  //return d3;\n  pc = abs(pc);\n  pc += 3.;\n  if(pc.x<pc.y)pc.xy=pc.yx;\n  if(pc.y<pc.z)pc.yz=pc.zy;\n  vec3 pc2 = pc;\n  vec3 rc1 = vec3(0.1,0.3,0.55);\n  pc = mod(pc,rc1)-0.5*rc1;\n  vec3 rc2 = vec3(0.005,0.3,0.2+fract(iTime*0.1));\n  pc2 = mod(pc2,rc2)-0.5*rc2;\n  float c1 = box(pc,vec3(0.1));\n  float c2 = min(box(pnc,vec3(2.5,0.2,0.5)),box(pnc,vec3(0.5,5.,0.5)));\n  float c4 = box(pc2,vec3(0.02));\n  float c5 = min(length(pn)-tm.z*2.5,length(pc)-tm.z*0.2);\n  float c3 = max(max(min(c1,c4),c2),-c5);\n  float cl = min(max(c4,c2),length(pn)-tm.z*2.5);\n  \n  zl2 = cl;\n  float fl2 = 0.01;\n  bl2 += fl2 /(fl2+cl);\n  float r2 = min(d3,c3);\n  pb += vec3(0.,-5.,0.);\n  vec3 pb2 = pb;\n  vec3 pb3 = pb;\n  float ft = 6.38/12.;\n  float at = mod(atan(pb.y,pb.x)+0.5*ft,ft)-0.5*ft;\n  pb.xy = vec2(cos(at),sin(at))*length(pb.xy);\n  float at2 = mod(atan(pb2.y,pb2.z)+0.5*ft,ft)-0.5*ft;\n  pb2.zy = vec2(cos(at2),sin(at2))*length(pb2.zy);\n  float at3 = mod(atan(pb3.z,pb3.x)+0.5*ft,ft)-0.5*ft;\n  pb3.xz = vec2(cos(at3),sin(at3))*length(pb3.xz);\n  float b1 = box(pb-vec3(2.5,0.,0.),vec3(tm.x,0.02,0.02));\n  float b2 = box(pb2-vec3(0.,0.,2.5),vec3(0.02,0.02,tm.x));\n  float b3 = box(pb3-vec3(2.5,0.,0.),vec3(tm.x,0.02,0.02));\n  float b5 = length(pn)-tm.z*5.;\n  float b4 = max(min(min(b1,b3),b2),-pn.y+5.);\n  \n  float fl3 = 0.01;\n  bl3 += fl3 /(fl3+b4);\n  zl3 = b4;\n  float r3 = min(r2,b4);\n  return r3;\n  }\n  vec3 nor (vec3 p,vec3 tm){vec2 e = vec2(0.01,0.); return normalize(map(p,tm)-vec3(map(p-e.xyy,tm),map(p-e.yxy,tm),map(p-e.yyx,tm)));}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uc = uv;\n    uv -= 0.5;\n    uv *= 2.;\n    uv.x *= iResolution.x/iResolution.y;\n    float t1 = pow(sin(time*0.5)*0.5+0.5,10.);\n  vec3 p = vec3(0.,t1*20.*sin(time*0.25)+3.,-5.);\n  float tmx = mod(time*5.,floor(fract(time*0.1)*10.)/10.+0.1)*1.1;\n  vec3 r = normalize(vec3(uv,1.));\n\n  float tmy = mix(pow(fract(time*0.1),0.1),pow(1.-fract(time*0.1),10.),step(0.5,fract(time*0.05)))*3.14;\n  float tmz = smoothstep(0.5,1.,fract(time*0.05));\n  vec3 tm = vec3(tmx,tmy,tmz);\n  p.xz*= rot(time);\n  r.xz*= rot(time);\n  r.zy *=rot(t1*2.);\n  float dd = 0.;\n  for(int i = 0 ; i < 48 ; i++){\n    float d = map(p,tm);\n    if(dd>40.){break;}\n    if(d<0.01){break;}\n    p += r*d;\n    dd +=d;\n  }\n  vec3 n = nor(p,tm);\n  float tex = rd(p*70.);\n  float s = smoothstep(40.,0.,dd);\n  float dn = smoothstep(0.,2.,length(p.y))*smoothstep(0.,2.,length(p.x))*smoothstep(0.,2.,length(p.z));\n  float ml = distance(0.5,fract(p.x*0.1+time*2.));\n  float l1 = smoothstep(2.,0.,zl1)*0.2+smoothstep(3.,0.,zl1)*0.1*smoothstep(0.,0.5,ml);\n  l1 += smoothstep(1.,0.,zl1)*2.*smoothstep(0.25,0.26,ml);\n  l1 *= dn;\n  float l2 = smoothstep(0.05,0.,zl2)*2.+bl2*0.05;\n  float l3 = smoothstep(0.05,0.,zl3)*2.+bl3*0.5;\n  float ld = clamp(dot(n,-r),0.,1.);\n   float dao = 0.8;\n  float ao = 1.3;\n  float fres = pow(1.-ld,3.+tex*6.)*0.1;\n  float spec = pow(ld,5.+tex*10.)*0.2;\n  float b = sqrt(24.);\n  float c = 0.;\n  float d = pow(length(uv.y),2.)*0.004+0.0004;\n  float r0 = ((fres+spec)*ao+l1+l2+l3)*s+mix(-0.05,0.05,hs(uv));\n  for(float j = -0.5*b;j <=0.5*b;j++)\n  for(float k = -0.5*b;k <=0.5*b;k++){\n    c += texture(iChannel0,uc+vec2(j,k)*d).a;\n  }\n  c /= 24.;\n  float tr = step(0.7,fract(time*0.3));\n\n  vec3 r1 = mix(vec3(1.),3.*abs(1.-2.*fract(c*0.4+mix(0.4,0.85,tr)+vec3(0.,-1./3.,1./3.)))-1.,mix(0.3,0.8,tr)+mix(0.2,0.,ao))*c*1.1;\n  vec3 r2 = pow(r1,mix(vec3(0.55,0.8,0.7),vec3(1.2),length(uv.y)));\n    fragColor = vec4(r2,clamp(r0,0.,1.));\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nfloat rand(float st){return fract(sin(st*42151.5524124));}\nfloat rd(float t){ return fract(sin(dot(floor(t),45.236))*7845.254);}\nfloat no (float t) { return mix(rd(t), rd(t+1.), smoothstep(0.,1.,fract(t)));}\nfloat hash(float x){return fract(sin(x) * 897612.531);}\nfloat voc(float t, float f, float ft){float x = fract(t * f) / f;\nfloat e=(sin(x*4.*ft)+sin(x*22.*ft)+sin(x*25.*ft)); \n   return e* min(x * 1000., 1.) * exp(x * -200.);}\nvec2 t1(float t, float var){\n    vec2 v = vec2(0., 0.);\n    for(int i = 0; i < 16; ++i){\n        float h = float(i);\n       \tfloat m = voc(t + h / 3., 50. + pow(2.01, (h - 8.) * .2), var);\n        float pan = hash(h);\n        v.x += m * pan;\n        v.y += m * (1. - pan);\n    }\n    return v * .1;\n   \n}\n\nvec2 mainSound( int samp, float time )\n{\n\n float tx = pow(sin(time*0.5)*0.5+0.5,10.);\n float tr = smoothstep(0.6,0.8,fract(time*0.3));\n    vec2 f1 = vec2(0.);\n    for( int  i = 0 ; i < 7 ; i++){\n     float v1 = floor(fract(time*0.1-float(i)*0.2)*10.)/10.+0.1;\n     float tmx = mod(time*20.,v1);\n     float tmz = smoothstep(0.5,1.,fract(time*0.05));\n    f1 += t1(tmx*(0.2-float(i)*0.1)+tmz,10.+float(i)*10.+tx*50.)*0.3;\n    }\n    f1 /= 7.;\n    vec2 f2 = vec2(0.);\n    for( int  i = 0 ; i < 25 ; i++){\n    float t = time+float(i)*0.05;\n     float tmy = mix(pow(fract(t*0.1),0.07),pow(1.-fract(t*0.1),10.),step(0.5,fract(t*0.05)))*3.14;\n     f2 += t1(tmy+tr*0.1,50.)/(1.+float(i));\n    }\n  \n    return vec2(f1+ f2);\n}","name":"Sound","description":"","type":"sound"}]}