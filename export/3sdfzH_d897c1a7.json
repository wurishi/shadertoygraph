{"ver":"0.1","info":{"id":"3sdfzH","date":"1604508723","viewed":102,"name":"Spongetoy descent","username":"mdnestor","description":"my first shader here :D\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint in_set(vec2 uv, int n) {\n    for (int i = 0; i < n; i++) {\n        float p = pow(3., float(i));\n        if (mod(floor(uv.x *p),3.) == 1. && (mod(floor(uv.y *p),3.) == 1.)) {\n            return(0);\n        }\n    }\n    return(1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float t = mod(.5*iTime, 1.);\n    uv -= vec2(.5,.5);\n    \n    uv.x *= iResolution.x/iResolution.y;\n    \n    float s = 2.*3.14159*(t+1.)/4.;\n    uv = vec2(cos(s)*uv.x-sin(s)*uv.y, sin(s)*uv.x+cos(s)*uv.y); \n    \n    uv *= pow(3.,-t);\n    uv += vec2(.5,.5*pow(3.,-t));  \n    vec3 col;\n    if (in_set(uv, 7)==1) {\n        col = vec3(.8, .5+0.2*sin(iTime), .2);\n    } else {\n        col = vec3(.8+0.2*sin(iTime), .95, 1.);\n    }\n    \n    vec2 ab = uv - vec2(.5,.5*pow(3.,-floor(t+1.)));\n    col *= exp(-2.*sqrt(pow(ab.x,2.)+pow(ab.y,2.)));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}