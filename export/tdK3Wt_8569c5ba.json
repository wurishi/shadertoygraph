{"ver":"0.1","info":{"id":"tdK3Wt","date":"1571234939","viewed":151,"name":"Tyre Icon","username":"coposuke","description":"Tyre Desu.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","tyre"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265356989\n#define PI_2 6.28318530713978\n#define TYRE_COLOR         vec4(0.1, 0.1, 0.1, 1.0)\n#define WHEEL_BG_COLOR     vec4(0.3, 0.3, 0.3, 1.0)\n#define WHEEL_COLOR        vec4(0.7, 0.7, 0.7, 1.0)\n#define WHEEL_COLOR_SHADOW vec4(0.6, 0.6, 0.6, 1.0)\n#define BOLT_COLOR         vec4(0.2, 0.2, 0.2, 1.0)\nconst mat3 m = mat3(0.00, 1.60, 1.20, -1.60, 0.72, -0.96, -1.20, -0.96, 1.28);\n\nmat2 rotate2d(float _angle)\n{\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec3 hsv(float h, float s, float v)\n{\n    vec4 t = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(vec3(h) + t.xyz) * 6.0 - vec3(t.w));\n    return v * mix(vec3(t.x), clamp(p - vec3(t.x), 0.0, 1.0), s);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nfloat fbm( vec3 p )\n{\n    float f;\n    f  = 0.5000*noise( p ); p = m*p*2.02;\n    f += 0.2500*noise( p ); p = m*p*2.03;\n    f += 0.12500*noise( p ); p = m*p*2.01;\n    f += 0.06250*noise( p );\n    return f;\n}\n\nvec4 tyre(vec2 uv, float time)\n{\n    vec4 color = vec4(0,0,0,0);\n\n    // tyre & wheel\n    float dist = distance(vec2(0,0), uv);\n    float angle = atan(uv.y, -uv.x);\n    float angleSpeed = -time;\n    angle = 1.0 - (angle + PI) / (PI * 2.0);\n    angle = fract(angle + angleSpeed);\n    \n    // tyre\n    color.rgb += step(0.4, dist) * step(dist, 0.6) * TYRE_COLOR.rgb * ((dist - 0.4) / 0.3);\n\n    // wheel\n    color.rgb = mix(color.rgb, WHEEL_COLOR.rgb * (dist / 0.4), step(dist, 0.4));\n    float shadowDist = distance(vec2(0.0025, 0.0), uv);\n    color.rgb = mix(color.rgb, WHEEL_COLOR_SHADOW.rgb, step(shadowDist, 0.35));\n    color.rgb = mix(color.rgb, WHEEL_BG_COLOR.rgb, step(dist, 0.335));\n\n    float wheelDistance = 0.0;\n    wheelDistance = abs(clamp(sin(angle * PI_2 * 8.0) + 0.0, 0.0, 1.0)) - 0.6;\n    color.rgb = mix(color.rgb, WHEEL_COLOR.rgb, step(dist, wheelDistance));\n    wheelDistance = abs(clamp(sin((angle + 0.05) * PI_2 * 8.0) + 0.0, 0.0, 1.0)) - 0.6;\n    color.rgb = mix(color.rgb, WHEEL_COLOR.rgb, step(dist, wheelDistance));\n    wheelDistance = abs(clamp(sin((angle + 0.05) * PI_2 * 36.0 * 2.0) + 0.0, 0.0, 1.0)) - 0.3;\n    color.rgb = mix(color.rgb, hsv(0.2 + iTime * 0.25, 0.2, 0.2), step(dist, wheelDistance) * step(0.56, dist) * step(dist, 0.59));\n    wheelDistance = abs(clamp(sin((angle + 0.005) * PI_2 * 36.0 * 1.0) + 0.0, 0.0, 1.0)) - 0.3;\n    color.rgb = mix(color.rgb, hsv(0.2 + iTime * 0.25, 0.2, 0.2), step(dist, wheelDistance) * step(0.54, dist) * step(dist, 0.59));\n\n    color.rgb = mix(color.rgb, WHEEL_COLOR.rgb, step(dist, 0.1));\n    color.rgb = mix(color.rgb, WHEEL_BG_COLOR.rgb, step(dist, 0.03));\n    color.rgb = mix(color.rgb, WHEEL_COLOR_SHADOW.rgb, step(0.075, dist) * step(dist, 0.09));\n    \n    // bolt\n    const int BOLT_NUM = 5;\n    for(int i=0 ; i<BOLT_NUM ; ++i)\n    {\n        wheelDistance = distance(vec2(0.0, 0.0 + 0.06) * rotate2d(PI_2 / float(BOLT_NUM) * float(i) - angleSpeed * PI_2), uv);\n        color.rgb = mix(color.rgb, BOLT_COLOR.rgb, step(wheelDistance, 0.025));\n        color.rgb = mix(color.rgb, WHEEL_COLOR.rgb, step(wheelDistance, 0.015));\n    }\n\n    // fade\n    vec3 fade = vec3(1,1,1) * (distance(vec2(1, -1) * 0.75, uv));\n    color.rgb *= fade.rgb;\n\n    // draw enable\n    color.a = step(dist, 0.6);\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    // bg\n    vec2 gbUV = uv * 2.0;\n\n    // wave\n    vec2 wave = uv;\n    wave.x += iTime * 0.5;\n    wave = vec2(1,0) * fbm(vec3((wave) * 0.05, 0.0)) * 2.0;\n    wave.y += sin(uv.x * 2.0 + iTime * 3.0) * 0.15;\n    wave.x += sin(uv.y * 2.0 + iTime * 3.0) * 0.025 + wave.y;\n    gbUV += wave;\n    gbUV.x += iTime * 0.125;\n    float f = mod(step(0.5, fract(gbUV.x)) + step(0.5, fract(gbUV.y)), 2.0);\n    vec3 bg = mix(vec3(1.0, 1.0, 1.0), hsv(0.2 + iTime * 0.25, 0.2, 0.2), f);\n    fragColor.rgb += bg * (uv.y * 0.75 + 1.0);\n\n    const int TIRE_NUM = 10;\n    const int TIRE_TYPE = 3;\n    for(int y=0 ; y<TIRE_TYPE ; y++)\n    {\n        for(int x=0 ; x<TIRE_NUM ; x++)\n        {\n            vec2 tireUV = uv;\n            tireUV.x += 2.0 / float(TIRE_NUM) * float(x) - (1.0 + 1.0 / float(TIRE_NUM)); // 横に整列\n\n            float tireSpeed = mix( 0.1, 1.0, rand(vec2(x,y))) * iTime;\n            float tireScale = float(TIRE_TYPE) - float(y) * 7.0 + 5.5;\n            int tireRap = int(floor(tireUV.x + 0.5 + tireSpeed));\n            tireUV.x += tireSpeed;\n            tireUV.y += mix(-1.0, 1.0, rand(vec2(x+1+tireRap,y+1)));\n            tireUV.x = mod(tireUV.x, 2.0) - 1.0;\n            \n            vec4 tireColor = tyre(tireUV * tireScale, tireSpeed);\n            vec3 tireFade = vec3(1,1,1) * (uv.y + 1.5) * (float(y) + 1.0) / float(TIRE_TYPE);\n            tireColor.rgb *= tireFade.rgb;\n            fragColor = mix(fragColor, tireColor, tireColor.a);\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}