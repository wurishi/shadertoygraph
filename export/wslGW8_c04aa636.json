{"ver":"0.1","info":{"id":"wslGW8","date":"1546116596","viewed":181,"name":"Reaction Diffusion word","username":"lucastakejame","description":"Inspired in coding challenge video:\nhttps://www.youtube.com/watch?v=BV9ny785UNc","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["2d","diffusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 t(vec2 uv, vec2 pixOffset)\n{\n\tpixOffset *= 1./iResolution.xy;    \n\treturn texture(iChannel0, uv + pixOffset);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 tuv = fragCoord/iResolution.y - vec2(.5*iResolution.x/iResolution.y, .5);\n\n    \n    // Time varying pixel color\n    vec3 col = vec3(t(uv, vec2(0.)).xyz);\n    \n\tvec4 s = texture(iChannel1, uv);    \n    \n    vec3 v = 0.5 + 0.5*cos(5.*iTime+uv.xyx+vec3(0,2,4));\n    \n    col = mix( col*sin(tuv.y*8. + 8.), v, col.y * (1.-s.y));\n    \n    //col = t(uv, vec2(0.)).xyz;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Reaction Diffusion simulation\n\nconst float c_DA= 1.;\nconst float c_DB= .22;\nconst float c_f = .055;\nconst float c_k = .062;\n\nconst float c_dt = 1.;\n\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 t(vec2 uv, vec2 pixOffset)\n{\n\tpixOffset *= 1./iResolution.xy;    \n\treturn texture(iChannel0, uv + pixOffset);\n}\n\n// filter calculated around current pixel\nvec2 lapl(vec2 uv)\n{\n    vec2 cur = t(uv, vec2(0., 0.)).xy;\n    \n    float w0 = .05;\n    float w1 = .2;\n    float w2 = -1.;\n    \n    vec2 mean = \n           (w0)*t(uv, vec2(-1., -1.)).xy\n         + (w1)*t(uv, vec2(0., -1.)).xy\n         + (w0)*t(uv, vec2(1., -1.)).xy\n         + (w1)*t(uv, vec2(-1., 0.)).xy\n         + (w2)*cur\n         + (w1)*t(uv, vec2(1., 0.)).xy\n         + (w0)*t(uv, vec2(-1., 1.)).xy\n         + (w1)*t(uv, vec2(0., 1.)).xy\n         + (w0)*t(uv, vec2(1., 1.)).xy;\n\n    return mean;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = vec4( 0. );\n    \n    if(iFrame < 10)\n    {\n        vec2 cuv = fragCoord/iResolution.y - vec2(.5*iResolution.x/iResolution.y, .5);\n\n        float b;\n   \t\tb = texture(iChannel1, uv).g;\n\n\t\t//b = 1.- smoothstep(.01,.3, length( cuv*cos(100.*atan(cuv.y,cuv.x)) ) )/1.1;\n        //b = 1.-smoothstep(.1,.12, max(length(uv-vec2(.5)), length(uv.y-vec2(.5).y) ) );\n\t\t//b = 1.- smoothstep(.1,.12, sin(uv.x*20.) + cos(uv.y*20.) );\n        \n\t    fragColor = vec4(1.-b,b,0.0,1.0);\n    }\n    else\n    {\n        vec4 l = t(uv, vec2(0.));\n        \n        vec2 lap = lapl(uv);\n        \n        fragColor.x = l.x + (c_DA*lap.x - l.x*l.y*l.y + c_f*(1.-l.x)) * c_dt + .001;\n        fragColor.y = l.y + (c_DB*lap.y + l.x*l.y*l.y - (c_k + c_f)*l.y)* c_dt;\n\n    }\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// COPIED from https://www.shadertoy.com/view/ltGXWc \n// and changed the word\n\n#define saturate(x) clamp(x,0.,1.)\nfloat char(vec2 p,float c){//Thanks to Fabrice Neyret for this function\n\tif(p.x<0.||p.x>1.||p.y<0.||p.y>1.)return 1e5;\n\treturn texture(iChannel0,p/16.+fract(floor(vec2(c,16.-c/16.))/16.)).a;\n}\nfloat forcedSigmoid(float x, float a){\n\treturn(x>.5?2.-pow((-2.*x)+2.,a):pow(x*2.,a))/2.;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(fragCoord.xy/iResolution.xy)-.5;\n\tuv.x*=iResolution.x/iResolution.y;\n\tuv*=4.;\n\tfloat time=forcedSigmoid(fract(iTime),4.);\n\tfloat weight=.5;\n\tfloat sharpen=100.;\n\tfloat drawing=1.;\n\t//\"Sistole\" => 83 ,105 ,115 ,116 ,111 ,108 ,101\n    #define charMorph(p,aChar,bChar) 1.-saturate(((mix(char(p+.5,aChar),char(p+.5,bChar),fract(time)))-weight)*sharpen)\n\tdrawing-=1.-saturate((char((uv-vec2(-4.+fract(time),0.))+.5,83.)-(weight*fract(time)))*sharpen); //Fading-in S - 83\n\tdrawing-=charMorph(uv-vec2(-3.+fract(time),0.), 83.,105.); //i - 105\n\tdrawing-=charMorph(uv-vec2(-2.+fract(time),0.),105.,115.); //s - 115\n\tdrawing-=charMorph(uv-vec2(-1.+fract(time),0.),115.,116.); //t - 116\n\tdrawing-=charMorph(uv-vec2( 0.+fract(time),0.),116.,111.); //o - 111\n\tdrawing-=charMorph(uv-vec2( 1.+fract(time),0.),111.,108.); //l - 108\n\tdrawing-=charMorph(uv-vec2( 2.+fract(time),0.),108.,101.); //e - 101\n\tdrawing-=1.-saturate((char((uv-vec2( 3.+fract(time),0.))+.5,101.)-(weight*(1.-fract(time))))*sharpen); //Fading-out e - 101\n\tfragColor=vec4(0.,1.-drawing,0.,1.);\n}","name":"Buffer B","description":"","type":"buffer"}]}