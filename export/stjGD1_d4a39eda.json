{"ver":"0.1","info":{"id":"stjGD1","date":"1623858250","viewed":64,"name":"Playing w/ Chromatic Aberration","username":"andunai","description":"Playing around with simple chromatic aberration effect.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["chromatic","aberration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926536\n\nvec2 rotate(vec2 src, float angle) {\n    float sn = sin(angle);\n    float cs = cos(angle);\n    return vec2(src.x * cs - src.y * sn, src.x * sn + src.y * cs);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float radius = 0.0065;\n    float angle = iTime * 4.0 + (uv.x * 80.0 + uv.y * 80.0) * 0.015;\n    float angle2 = iTime * 4.0 + (uv.x * 80.0 + uv.y * 80.0) * 0.015;\n    float angle3 = iTime * 4.0 + (uv.x * 80.0 + uv.y * 80.0) * 0.015;\n    \n    vec2 vector = vec2(0, radius);\n    \n    vec4 red = texture(iChannel0, uv + rotate(vector/* + sin(iTime * 7.0) * 0.0025*/, angle));\n    vec4 green = texture(iChannel0, uv + rotate(vector/* + sin(iTime * 9.0) * 0.0025*/, angle2 + 2.0 * PI / 3.0));\n    vec4 blue = texture(iChannel0, uv + rotate(vector/* + sin(iTime * 11.0) * 0.0025*/, angle3 + 2.0 * PI / 3.0 * 2.0));\n    fragColor = vec4(red.r, green.g, blue.b, 1.0);\n\n    // Output to screen\n    // fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}