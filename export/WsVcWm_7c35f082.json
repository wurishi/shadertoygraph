{"ver":"0.1","info":{"id":"WsVcWm","date":"1603023814","viewed":396,"name":"Polar coordinates with mix.","username":"henrmota","description":"The power of polar coordinates and linear interpolation","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14155\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 st = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    \n    //atan goes from -PI to PI so normalize with angle/(2.*PI) + 0.5\n    float angle = atan(st.y, st.x)/(2.*PI) + 0.5 + iTime*0.1;\n    st = vec2(angle, length(st));\n   \n   \tst.y *=2.; \n    \n    //comment to see another cool effect (flower)\n    st.x += st.y;\n    st.x = fract(st.x * 10. );\n   \tfloat pct = smoothstep(-0.5, 0.5, sin(iTime));\n    fragColor = texture(iChannel0, mix(st, uv, pct));\n}","name":"Image","description":"","type":"image"}]}