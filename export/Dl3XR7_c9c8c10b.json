{"ver":"0.1","info":{"id":"Dl3XR7","date":"1685159954","viewed":122,"name":"rainbow pools","username":"flylo","description":"trig stuff","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["2d","metal","liquid"],"hasliked":0,"parentid":"dty3Rd","parentname":"liquid metal"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int[18] ns = int[](-1, -1, 0, -1, 1, -1, -1, 0, 1, 0, 0, 0, -1, 1, 0, 1, 1, 1);\n\nvec4 texel(in ivec2 x) {\n    return texelFetch( iChannel0, x, 0 );\n}\n\nvec4 avg( in ivec2 px )\n{\n \n    vec4 sum = vec4(0.);\n        \n    for (int i = 0; i < 18; i += 2) {\n       vec4 n = texel(px+ivec2(ns[i%18],ns[(i%18)+1]));\n       sum += n;\n    }\n \n   return sum/9.;\n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    ivec2 iv = ivec2(fragCoord);\n    fragColor = avg(iv);\n    fragColor = texel(iv);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    float dt  = .5+.5*sin(.06*iTime);\n    float dt2 = .5+.5*sin(.18*iTime);\n    float mdt = dt;\n    float mdt2 = .7+.3*dt2;\n    \n    float dt3 = .5+.5*sin(.04*iTime);\n    float dt4 = .5+.5*sin(.33*iTime);\n    float mdt3 = dt3;\n    float mdt4 = .7+.3*dt4;\n\n    float dt5  = .5+.5*sin(.05*iTime);\n    float dt6 = .5+.5*sin(1.5+.19*iTime);\n    float mdt5 = dt5;\n    float mdt6 = .7+.3*dt6;\n\n    float dt7  = .5+.5*sin(.3*iTime);\n    float dt8  = .5+.5*sin(1.5+.2*iTime);\n    float mdt7 = .9+.1*dt7;\n    float mdt8 = .9+.1*dt8;\n\n\n    //uv = vec2(sin(25.*uv));\n\n    float r2 = length(uv)*length(uv);\n\n    vec3 c = vec3(mdt*sin(mdt2*5.2*uv.x), mdt3*sin(mdt4*6.1*uv.y), mdt5*.7*length(sin(mdt6*4.4*uv)));  \n   \n    //c = vec3(uv.x, uv.y, uv.x/uv.y);  \n    //c = vec3(1.+sin(21.*uv), 0.);\n  \n    for(int i = 0; i < 5; i++) {\n        //uv = vec2(sin(uv.x), sin(uv.y));\n        float r3 = length(c)*length(c)*length(c);\n        c = c*(1./(vec3(.1*mdt7+r3)));\n        c = tan(mdt8*c);\n        \n        //c = .2*vec3(1./(.079+r2*c.x), 1./(.075+r2*c.y), 1./(.05);\n        //uv = vec2(mdt5*sin(tan(.005*mdt3*uv.x)), mdt6*sin(tan(.2 + .5*mdt4*uv.y)));\n        //uv = vec2(115.*mdt5*tan(.3*uv.x), 1.); // 1.*mdt6*tan(.004*mdt4*uv.y));\n        //c = vec2(tan(1.*sin(1.2*mdt5*uv.x)), tan(1.*sin(1.2*mdt6*uv.y)));\n        //uv = vec2(uv.x*sin(r2)-uv.y*cos(r2), uv.x*cos(r2)+uv.y*sin(r2));\n        //uv = vec2(cos(.2*(uv.x-uv.y)), sin(.3*(uv.x-uv.y)));\n   \n    }\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}