{"ver":"0.1","info":{"id":"X3XBRS","date":"1728497863","viewed":41,"name":"look at dis ","username":"kukuff","description":"думайте...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["homework"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//вертим куб\nmat2 rotate(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\n//рисуем куб\nfloat cube(vec3 ro, vec3 rd, float s) {\n    vec3 m = 1.0 / rd;\n    vec3 n = m * ro;\n    vec3 k = abs(m) * s;\n    vec3 t1 = -n - k;\n    vec3 t2 = -n + k;\n    float tN = max(max(t1.x, t1.y), t1.z);\n    float tF = min(min(t2.x, t2.y), t2.z);\n    if (tN > tF || tF < 0.0) return -1.0;\n    return tN;\n}\n\n//сам шейдер\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    //тут мы камеру\n    vec3 ro = vec3(0.0, 0.0, 2.0); // ray origin\n    vec3 rd = normalize(vec3(uv, -1.5)); // ray direction\n\n    //вращение кубика\n    float t = iTime * 0.5;\n    ro.xy *= rotate(t); \n    ro.yz *= rotate(t * 0.7);\n    rd.xy *= rotate(t); \n    rd.yz *= rotate(t * 0.7);\n\n    float dist = cube(ro, rd, 0.4);\n\n    vec3 color = vec3(0.1, 0.7, 0.1);\n    if (dist > 0.0) {\n        vec3 pos = ro + rd * dist;\n        vec3 n = sign(pos);\n        color = n * 0.5 + 0.5;\n    }\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}