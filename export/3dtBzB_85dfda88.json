{"ver":"0.1","info":{"id":"3dtBzB","date":"1606642867","viewed":102,"name":"Stripes AA","username":"arthursw","description":"Anti-aliased stripes, moirÃ© effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["antialiasing","stripes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(vec2 v, float alpha)\n{\n\tfloat vx = v.x*cos(alpha)-v.y*sin(alpha);\n\tfloat vy = v.x*sin(alpha)+v.y*cos(alpha);\n\treturn vec2(vx, vy);\n}\n\nfloat distToLines(float x, float p, float r)\n{\n    return 2.0*abs((x/p) - floor(x/p)-0.5)-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    float screenRatio = iResolution.x / iResolution.y;\n\n    uv = screenRatio > 1. ? vec2(uv.x * screenRatio, uv.y) : vec2(uv.x, uv.y / screenRatio);\n    float x = uv.x;    \n    uv = rotate(uv, 0.25*3.1416);\n    \n    float lineWidth = 3.0; // in pixel\n    float lineSpacing = 6.0;\n    \n    float lineRatio = lineWidth / lineSpacing;\n    float pixelSize = 1.0/iResolution.y;\n    \n    float dist = 1.0*distToLines(uv.x, lineSpacing*pixelSize, lineRatio);\n    \n    // from https://www.shadertoy.com/view/4tc3DX\n    float scale = abs(screenRatio > 1. ? dFdy(uv).y : dFdx(uv).x);\n    float line1 = clamp(dist / scale, 0.0, 1.0);\n    \n    // from https://shadertoyunofficial.wordpress.com/2019/01/02/programming-tricks-in-shadertoy-glsl/\n    float line2 = smoothstep( 1.5, -1.5, iResolution.y * dist);\n    \n    float c = x < 0.0 ? line1 : line2;\n    \n    fragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}]}