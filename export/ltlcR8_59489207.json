{"ver":"0.1","info":{"id":"ltlcR8","date":"1503479458","viewed":944,"name":"Assert macro in glsl","username":"gloinart","description":"Implementation of an assert macro in GLSL\n- Blinks where the assertion has failed\n- Blinks in different colors depending on how many times the asserts has failed\n- Toggle DEBUG to enable\\disable\n- Requires MAIN_IMAGE_EXIT() as last line of mainImage(...)\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tricks","assert"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* License: Use as you will, creding somewhere would be nice though :) */\n\n\n// Toggle to enable-disable ASSERTS\n#define DEBUG 1\n\n// Asserts enabled\n#if DEBUG == 1\nint _assertion_fail_count_ = 0;\nvec4 _assert_color_func(int ifail_count) {\n  // Blink in different colors depending on how many times the assert broke\n  vec4 blink_color = vec4(1.0, 1.0, 1.0, 1.0);\n  if(ifail_count == 1)      blink_color = vec4(0.0, 0.0, 1.0, 1.0);\n  else if(ifail_count == 2) blink_color = vec4(0.0, 1.0, 0.0, 1.0);\n  else if(ifail_count == 3) blink_color = vec4(0.0, 1.0, 1.0, 1.0);\n  else if(ifail_count == 4) blink_color = vec4(1.0, 0.0, 0.0, 1.0);\n  else if(ifail_count == 5) blink_color = vec4(1.0, 0.0, 1.0, 1.0);\n  else                      blink_color = vec4(1.0, 1.0, 0.0, 1.0);\n    \n  return (mod(iTime, 1.0) > 0.5) ? blink_color :  vec4(1.0, 1.0, 1.0, 1.0);\n}\n\n#define ASSERT(condition) {if(!(condition)){ ++_assertion_fail_count_; }}\n#define MAIN_IMAGE_EXIT() while(_assertion_fail_count_ != 0) { fragColor = _assert_color_func(_assertion_fail_count_); break; }\n\n// Asserts disabled\n#else\n#define ASSERT(condition)\n#define MAIN_IMAGE_EXIT()\n#endif\n\n\n\n\n\n// Use in free functions\nfloat func(vec2 iuv) {\n  if(iuv.y < 0.02) ASSERT(false);\n  return iuv.y;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Assert just like regular C code\n    ASSERT(uv.x < 0.90); \n    ASSERT(uv.x < 0.95); \n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    fragColor.g += func(uv);\n    MAIN_IMAGE_EXIT(); // Required at exit of main function\n}","name":"Image","description":"","type":"image"}]}