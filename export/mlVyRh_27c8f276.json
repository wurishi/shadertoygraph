{"ver":"0.1","info":{"id":"mlVyRh","date":"1699956918","viewed":59,"name":"X marks the spot!","username":"jkom","description":"pirate map!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["pirate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define METHOD 0\n\n// 0: cubic\n// 1: quintic\n#define INTERPOLANT 0\n\n#if METHOD==0\nfloat hash( in ivec2 p )  // this hash is not production ready, please\n{                         // replace this by something better\n\n    // 2D -> 1D\n    int n = p.x*3 + p.y*113;\n\n    // 1D hash by Hugo Elias\n\tn = (n << 13) ^ n;\n    n = n * (n * n * 15731 + 789221) + 1376312589;\n    return -1.0+2.0*float( n & 0x0fffffff)/float(0x0fffffff);\n}\n#else\nfloat hash(vec2 p)  // replace this by something better\n{\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n#endif\n\nfloat noise( in vec2 p )\n{\n    #if METHOD==0\n    ivec2 i = ivec2(floor( p ));\n    #else\n    vec2 i = floor( p );\n    #endif\n    vec2 f = fract( p );\n\t\n    #if INTERPOLANT==1\n    // quintic interpolant\n    vec2 u = f*f*f*(f*(f*6.0-15.0)+10.0);\n    #else\n    // cubic interpolant\n    vec2 u = f*f*(3.0-2.0*f);\n    #endif    \n\n    #if METHOD==0\n    return mix( mix( hash( i + ivec2(0,0) ), \n                     hash( i + ivec2(1,0) ), u.x),\n                mix( hash( i + ivec2(0,1) ), \n                     hash( i + ivec2(1,1) ), u.x), u.y);\n    #else\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n    #endif\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 scaledUV = uv * 12.0;\n\n    float n = noise(scaledUV);\n\n    \n    float land = smoothstep(0.01,0.3, n);\n\n    vec3 waterColor = vec3(0.1, 0.3, 0.6); \n    vec3 landColor = vec3(0.6, 0.4, 0.2); \n    vec3 borderColor = vec3(1, 1, 0.7);\n    vec3 color = mix(waterColor, landColor, land);\n\n    float border = step(0.05, min(uv.x, min(uv.y, min(1.0-uv.x, 1.0-uv.y))));\n    color = mix(borderColor, color, border);\n\n  vec2 treasurePos = vec2(0.4, 0.7); \n    float treasureSize = 0.02; \n    float xAreaSize = 0.05; \n\n   \n    bool inXArea = all(lessThan(abs(fragCoord.xy / iResolution.xy - treasurePos), vec2(xAreaSize)));\n\n   \n    float line1 = step(treasureSize, abs(uv.x - uv.y - treasurePos.x + treasurePos.y));\n    float line2 = step(treasureSize, abs(uv.x + uv.y - treasurePos.x - treasurePos.y));\n\n   \n    float xPattern = inXArea ? min(line1, line2) : 1.0;\n    color = mix(vec3(0.0, 0.0, 0.0), color, xPattern);\n\n    fragColor = vec4(color, 1.0);\n\n\n}","name":"Image","description":"","type":"image"}]}