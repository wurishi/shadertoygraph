{"ver":"0.1","info":{"id":"tt33Rl","date":"1577213062","viewed":108,"name":"Koro Sensei no kao","username":"ParaBellum","description":"Feliz Navidad Vale","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["present"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n#define T int(floor(iTime))-(24*int(int(iTime)/24))\n\n// No se si este tono de naranja es tu favorito perdon\n#define VALE_FAVORITE_COLOR vec3(1., .549, .0)\n\n#define YELLOW vec3(1., .9725, .2784)\n#define GREEN vec3(.3882, .8705, .3843)\n#define GRAY vec3(.94,.96,.98)\n#define PINK vec3(.9882, .6764, .7392)\n#define ORANGE vec3(.9647, .6235, .3137)\n#define PURPLE vec3(.6117, .4274, .7411)\n#define RED vec3(.9803, .3882, .3078)\n#define WHITE vec3(1.)\n\nfloat sdCircle(in vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nfloat sdLine( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat sdBox(in vec2 p, in vec2 s)\n{\n    p = abs(p)-s;\n    return max(p.x, p.y);\n}\n\nfloat Head(in vec2 p, float r, float c)\n{\n    return smoothstep(.025, .075, abs(sdCircle(p, r))-c);\n}\n\nfloat HeadFill(in vec2 p)\n{\n    return 1.-smoothstep(.02, .07, sdCircle(p, 4.));\n}\n\nfloat Eyes(in vec2 p, in vec2 aEyeL, in vec2 bEyeL, in vec2 aEyeR, in vec2 bEyeR)\n{\n    float eyeL = sdLine(p, aEyeL, bEyeL);\n    eyeL = smoothstep(.1, .15, eyeL);\n    float eyeR = sdLine(p, aEyeR, bEyeR);\n    eyeR = smoothstep(.1, .15, eyeR);\n    return min(eyeL, eyeR);\n}\n\nfloat Teeth(in vec2 p)\n{\n    return smoothstep(.09, .1, fract(p.x*1.6));\n}\n\nfloat HappyMouth(in vec2 p)\n{\n    float angleUpperLip = abs(atan(p.x, p.y-1.16) / PI);\n    angleUpperLip = smoothstep(.67, .68, angleUpperLip);\n    \n    float angleLowerLip = abs(atan(p.x, p.y) / PI);\n    angleLowerLip = smoothstep(.59, .6, angleLowerLip);\n    \n    float upperLip = abs(sdCircle(p-vec2(.0, 1.16), 3.52));\n    upperLip = smoothstep(.01, .05, upperLip);\n    upperLip = max(upperLip, 1.-angleUpperLip);\n    float lowerLip = abs(sdCircle(p-vec2(.0, .0), 3.));\n    lowerLip = smoothstep(.01, .05, lowerLip);\n    lowerLip = max(lowerLip, 1.-angleLowerLip);\n    \n    return min(upperLip, lowerLip);\n}\n\nfloat HappyMouthFill(in vec2 p)\n{\n    float upperLip = (sdCircle(p-vec2(.0, 1.16), 3.52));\n    upperLip = smoothstep(-.05, .0, upperLip);\n    float lowerLip = (sdCircle(p-vec2(.0, .0), 3.));\n    lowerLip = smoothstep(.0, .05, lowerLip);\n    return max(1.-upperLip, lowerLip);\n}\n\nfloat PokerMouth(in vec2 p)\n{\n    return smoothstep(.025, .075, sdLine(p, vec2(-.2, -2.8), vec2(.2, -2.8)));\n}\n\nfloat cheeks(in vec2 p)\n{\n    float cheekL = sdCircle(p*vec2(.6, 1.)-vec2(-1.5, -.6), .1);\n    cheekL = smoothstep(.3, .35, cheekL);\n    float cheekR = sdCircle(p*vec2(.6, 1.)-vec2(1.5, -.6), .1);\n    cheekR = smoothstep(.3, .35, cheekR);\n    return min(cheekL, cheekR);\n}\n\nfloat maru(in vec2 p)\n{\n    return Head(p, 3., .4);\n}\n\nfloat batsu(in vec2 p)\n{\n    float a = PI*45./180.;\n    mat2 rot = mat2(cos(a), sin(a), -sin(a), cos(a));\n    p *= rot;\n    float b1 = sdBox(p, vec2(.45, 3.5));\n    float b2 = sdBox(p, vec2(3.5, .45));\n    \n    return smoothstep(.0, .05, min(b1, b2));\n}\n\nfloat stripes(in vec2 p)\n{\n    return smoothstep(.0, .1, sin(p.y*3.-2.));\n}\n\nvec3 KoroSensei(in vec2 p)\n{\n    float head = Head(p, 4., .1);\n    float hFill = HeadFill(p);\n    \n    vec2 eyeL = vec2(-1.3, -.1);\n    vec2 eyeR = vec2(1.3, -.1);\n    float eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n    \n    float mouth = HappyMouth(p)-min(1.-HappyMouthFill(p), 1.-Teeth(p));\n    \n    vec3 normalColor = hFill*YELLOW;\n    vec3 sadColor = hFill*GRAY;\n    vec3 pervertColor = mix(RED, PINK, hFill*cheeks(p));\n    vec3 maruColor = mix(RED, ORANGE, hFill*maru(p));\n    vec3 batsuColor = mix(RED, PURPLE, hFill*batsu(p));\n    vec3 confidentColor = mix(YELLOW, GREEN, hFill*stripes(p));\n    \n    vec3 currentColor = normalColor;\n    if (T >= 0 && T <= 4)\n    {\n        if (T < 1)\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            mouth = PokerMouth(p);\n        \tcurrentColor = mix(currentColor, sadColor, fract(iTime));\n        }\n        else\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            mouth = PokerMouth(p);\n            currentColor = sadColor;\n        }\n    }\n    if (T >= 4 && T <= 8)\n    {\n        if (T < 5)\n        {\n            eyes = mix(Eyes(p, eyeL, eyeL, eyeR, eyeR),\n                       Eyes(p, eyeL-vec2(-.1, .0), eyeL-vec2(.1, .1), eyeR-vec2(-.1, .1), eyeR-vec2(.1, .0)),\n                       fract(iTime)\n            \t\t  );\n            mouth = HappyMouth(p)-min(1.-HappyMouthFill(p), 1.-Teeth(p));\n        \tcurrentColor = mix(currentColor, pervertColor, fract(iTime));\n        }\n        else\n        {\n            eyes = Eyes(p, eyeL-vec2(-.1, .0), eyeL-vec2(.1, .1), eyeR-vec2(-.1, .1), eyeR-vec2(.1, .0));\n            mouth = HappyMouth(p)-min(1.-HappyMouthFill(p), 1.-Teeth(p));\n            currentColor = pervertColor;\n        }\n    }\n    if (T >= 8 && T <= 12)\n    {\n        if (T < 9)\n        {\n        \teyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            currentColor = mix(currentColor, maruColor, fract(iTime));\n        }\n        else\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            currentColor = maruColor;\n        }\n    }\n    if (T >= 12 && T <= 16)\n    {\n        if (T < 13)\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n        \tcurrentColor = mix(currentColor, batsuColor, fract(iTime));\n        }\n        else\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            currentColor = batsuColor;\n        }\n    }\n    if (T >= 16 && T <= 20)\n    {\n        if (T < 17)\n        {\n            eyes = mix(Eyes(p, eyeL, eyeL, eyeR, eyeR),\n                       Eyes(p, eyeL-vec2(-.1, .0), eyeL-vec2(.1, -.1), eyeR-vec2(-.1, -.1), eyeR-vec2(.1, .0)),\n                       fract(iTime)\n            \t\t  );\n        \tcurrentColor = mix(currentColor, confidentColor, fract(iTime));\n        }\n        else\n        {\n            eyes = Eyes(p, eyeL-vec2(-.1, .0), eyeL-vec2(.1, -.1), eyeR-vec2(-.1, -.1), eyeR-vec2(.1, .0));\n            currentColor = confidentColor;\n        }\n    }\n    if (T >= 20 && T <= 24)\n    {\n        if (T < 21)\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            currentColor = mix(currentColor, normalColor, fract(iTime));\n        }\n        else\n        {\n            eyes = Eyes(p, eyeL, eyeL, eyeR, eyeR);\n            currentColor = normalColor;\n        }\n    }\n    \n    float face = min(head, eyes);\n    float mask = (T >= 0 && T < 4) ? mouth : HappyMouthFill(p);\n    return mix(VALE_FAVORITE_COLOR, mix(mouth*WHITE, currentColor*face, mask), hFill);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 6.;\n\n    vec3 col = vec3(0.);\n    \n    col += KoroSensei(uv);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}