{"ver":"0.1","info":{"id":"mtSXRh","date":"1675685629","viewed":169,"name":"CMYK Halftone Post-processing","username":"Mungoes","description":"Post processing effect that emulates CMYK halftone printers.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing","halftone","cmyk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float cellXCount = 200.0;\nconst float smoothRange = 0.1;\nconst float gamma = 1.8;\n\nconst mat2 cRot = mat2( 0.258819, -0.965926, // 75 degrees\n                        0.965926, 0.25881);\nconst mat2 mRot = mat2( 0.965926, -0.258819, // 15 degrees\n                        0.258819, 0.965926);\nconst mat2 yRot = mat2( 1.0     , 0.0      , // 0 degrees\n                        0.0     , 1.0     );\nconst mat2 kRot = mat2( 0.707106, -0.707106, // 45 degrees\n                        0.707106, 0.707106);\n\nfloat halftoneLookup(vec2 uv, mat2 rotationMat){\n\n    // rotate uv into grid space\n    vec2 uvRot = uv * rotationMat;\n    // repeat grid\n    vec2 cellPosition = vec2(mod(uvRot.x, 1.0 / cellXCount), mod(uvRot.y, 1.0 / cellXCount));\n    vec2 cellCentre = vec2((1.0 / cellXCount) / 2.0);\n    \n    // sample grid\n    float fragDistToGrid = length(cellPosition - cellCentre) * sqrt(cellXCount * cellXCount * 2.0);\n    // gamma\n    fragDistToGrid = pow(fragDistToGrid, gamma);\n    return fragDistToGrid;\n}\n\n\nfloat threshold(float val, float thresholdVal) {\n    float valToStepSpace = 1.0 - (val - thresholdVal + smoothRange) / smoothRange;\n    return smoothstep(0.0, 1.0, valToStepSpace);\n\n}\n\n\nvec4 rgbToCmyk(vec4 color){\n    vec4 cmyk;\n    \n    \n    float white = max(color.r, max(color.g, color.b));\n    // key\n    cmyk.a = 1.0 - white;\n    \n    // cyan\n    cmyk.r = (1.0 - color.r - cmyk.a) / white;\n    // magenta\n    cmyk.g = (1.0 - color.g - cmyk.a) / white;\n    // yellow\n    cmyk.b = (1.0 - color.b - cmyk.a) / white;\n    \n    return cmyk;\n}\n\n\nvec4 cmykToRgb(vec4 cmyk){\n    vec4 color;\n    float oneMinusK = 1.0 - cmyk.a;\n    \n    color.r = (1.0 - cmyk.r) * oneMinusK;\n    color.g = (1.0 - cmyk.g) * oneMinusK;\n    color.b = (1.0 - cmyk.b) * oneMinusK;\n    color.a = 1.0;\n    \n    return color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 fragUV = fragCoord / iResolution.xy;\n    vec2 fragUVAspect = vec2(fragUV.x, fragUV.y / (iResolution.x / iResolution.y));\n    // Sample input texture\n    vec4 sampleRGB = texture(iChannel0, fragUV);\n    vec4 sampleCMYK = rgbToCmyk(sampleRGB);\n    vec4 halftones = vec4(\n        threshold(halftoneLookup(fragUVAspect, cRot), sampleCMYK.r),\n        threshold(halftoneLookup(fragUVAspect, mRot), sampleCMYK.g),\n        threshold(halftoneLookup(fragUVAspect, yRot), sampleCMYK.b),\n        threshold(halftoneLookup(fragUVAspect, kRot), sampleCMYK.a));\n        \n\n    fragColor = cmykToRgb(halftones);\n   \n}","name":"Image","description":"","type":"image"}]}