{"ver":"0.1","info":{"id":"DdX3WS","date":"1722169626","viewed":87,"name":"Ephemeral Starfall","username":"ayat0","description":"kishimisu's YouTube tutorial ... https://www.youtube.com/watch?v=dhuigO4A7RY\n\nThe end result has been modified into something original.\n\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","sky","repetition","stars","study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// tutorial by \"The Art of Code\": https://www.youtube.com/watch?v=dhuigO4A7RY\n\n#define NUM_LAYERS 18.\n#define PI acos(-1.)\n\nmat2 Rot(float a)\n{\n\tfloat s = sin(a), c = cos(a);\n\treturn mat2(c, -s, s, c);\n}\n\nfloat Hash(vec2 p)\n{\n\tp = fract(p * vec2(123.67, 652.92));\n\tp += dot(p, p+ 61.56);\n\treturn fract(p.x * p.y);\n}\n\nfloat Star(vec2 uv, float flare)\n{\n\tfloat d = length(uv);\n\tfloat m = 0.06/d;\n\t\n\tfloat rays = max(0.0, 1.0 - abs(uv.x * uv.y * 400.0));\n\t\n\tm += rays * flare;\n\t\n\tuv *= Rot(PI/4.);\n\trays = 0.25 * max(0.0, 1.0 - abs(uv.x * uv.y * 700.0));\n\tm += rays * flare;\n\t\n\tm  *= smoothstep(0.6, 0.2, d);\n\t\n\treturn m;\n}\n\nvec3 StarLayer(vec2 uv)\n{\n\tvec3 col = vec3(0.0);\n\t\n\tvec2 gv = fract(uv) - 0.5;\n\tvec2 id = floor(uv);\n\t\n\tfor(int y = -1; y <= 1; y++) {\n\t\tfor(int x = -1; x <= 1; x++) {\n\t\t\tvec2 offs = vec2(x, y);\n\t\t\tfloat n = Hash(id+offs);\n\t\t\tfloat size = fract(n * 354.913);\n\t\t\tfloat star = Star(gv - offs - ( vec2(n, fract(n*61.0))-0.5 ), 0.7*smoothstep(0.8,1.0, size));\n\t\t\t\n\t\t\tvec3 color = sin(iTime + 445.739 * fract(n * 37.13) * vec3(0.2, 0.5, 0.7)) * 0.5 + 0.5;\n\t\t\tcolor = color*vec3(0.9, 0.6, 1.0 + size);\n\t\t\t\n\t\t\tstar *= sin(iTime*1.8 + n * 7.53) * 0.5 + 0.5; \n\t\t\tcol += star * size * color;\n\t\t}\n\t}\n\t\n\treturn col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (gl_FragCoord.xy - iResolution.xy/2.0) / min(iResolution.x, iResolution.y);\n\t\n\tfloat t = iTime*1.0/20.0;\n\tuv *= Rot(t);\n\t\n\tvec3 col = vec3(0);\n\tfor(float i=0.0; i < 1.0; i+= 1./NUM_LAYERS)\n\t{\n\t\tfloat depth = fract(i+t);\n\t\t\n\t\tfloat scale = mix(40.0, .5, depth);\n\t\tfloat fade = depth * smoothstep(1., .9, depth);\n\t\tcol += StarLayer(uv*scale + i*623.53) * fade;\n\t}\n\n\tvec4 color = vec4(col, 1.0);\n\tfragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}