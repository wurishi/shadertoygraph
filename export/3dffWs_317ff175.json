{"ver":"0.1","info":{"id":"3dffWs","date":"1589249199","viewed":146,"name":"glow //test","username":"tr0sle","description":"testing some stuff","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test","lines","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    \n    float cor = 0.0;\n\n \n\n    \n    for (int i = 0; i < 10; i++)\n    {\n        \n        float radius = 0.5;\n        float rad = radians(360.0 / 5.0) * float(i);\n       \n        \n        cor += 0.005 * (abs(sin(iTime/2.)) + 1.) / length(uv + vec2(radius * cos(rad), radius * sin(rad)));\n     cor += 0.001 * (abs(cos(iTime/5.)) + 1.) / length(uv + vec2(radius * sin(rad), radius * cos(rad)));\n        \n        uv.x += (sin(iTime*5.) / 20.0);\n        uv.y += (cos(iTime*5.) / 20.0);\n\n    }\n    \n       \n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(vec3(cor - 0.5 + 0.5*cos(iTime+vec3(0,2,4))), 1.0);\n}","name":"Image","description":"","type":"image"}]}