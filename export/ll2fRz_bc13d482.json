{"ver":"0.1","info":{"id":"ll2fRz","date":"1514738102","viewed":713,"name":"Simple wave equation","username":"LuisRodriguezRuiz","description":"A simple wave equation implemented as a cellular automaton","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["wave","cellularautomatonn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    fragColor=texture(iChannel0,fragCoord.xy/iResolution.xy);\n\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}\n\n\n","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}\n    \n\n","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"const float wave=0.1;\n\n\n\nfloat rnd(vec2 seed)\n{\n    return fract(sin(dot(seed.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nfloat getNeighborValue(vec2 pos)\n{   \n  \n  return texture(iChannel0,pos/iResolution.xy).x;  \t\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    \t float waveValue;\n         float prevValue = texture(iChannel1,fragCoord.xy/iResolution.xy).x;        \n     \t\n         float currentValue = texture(iChannel0,fragCoord.xy/iResolution.xy).x;\t\t\n\t\t\n         if(iFrame==0)        \n             waveValue=rnd(fragCoord.xy);\n         else\n         { \n                   \n            float neighborsValue=(getNeighborValue(fragCoord.xy+vec2(0,-1))+\n                                  getNeighborValue(fragCoord.xy+vec2(0,1))+\n                                  getNeighborValue(fragCoord.xy+vec2(-1,0))+\n                                  getNeighborValue(fragCoord.xy+vec2(1,0)))/4.;\n             \n            \n            waveValue=clamp(2.0*currentValue-prevValue+2.0*wave*(neighborsValue-currentValue),0.0,1.0);\n           \n          }\n              \n        fragColor=vec4(waveValue);\n    \t                                           \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Buf C","description":"","type":"buffer"}]}