{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"//Inspired by http://stackoverflow.com/questions/6030814/add-fisheye-effect-to-images-at-runtime-using-opengl-es\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )//Drag mouse over rendering area\n{\n\tvec2 p = fragCoord.xy / iResolution.x;//normalized coords with some cheat\n\t                                                         //(assume 1:1 prop)\n\tfloat prop = iResolution.x / iResolution.y;//screen proroption\n\tvec2 m = vec2(0.5, 0.5 / prop);//center coords\n\tvec2 d = p - m;//vector from center to current fragment\n\tfloat r = sqrt(dot(d, d)); // distance of pixel from center\n\n\tfloat power = ( 2.0 * 3.141592 / (2.0 * sqrt(dot(m, m))) ) *\n\t\t\t\t(iMouse.x / iResolution.x - 0.5);//amount of effect\n\n\tfloat bind;//radius of 1:1 effect\n\tif (power > 0.0) bind = sqrt(dot(m, m));//stick to corners\n\telse {if (prop < 1.0) bind = m.x; else bind = m.y;}//stick to borders\n\n\t//Weird formulas\n\tvec2 uv;\n\tif (power > 0.0)//fisheye\n\t\tuv = m + normalize(d) * tan(r * power) * bind / tan( bind * power);\n\telse if (power < 0.0)//antifisheye\n\t\tuv = m + normalize(d) * atan(r * -power * 10.0) * bind / atan(-power * bind * 10.0);\n\telse uv = p;//no effect for power = 1.0\n\n\tvec3 col = texture(iChannel0, vec2(uv.x, -uv.y * prop)).xyz;//Second part of cheat\n\t                                                  //for round effect, not elliptical\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s2GRR","date":"1382693934","viewed":10550,"name":"Fisheye / antifisheye","username":"SanchYESS","description":"Input parameter: \"power\", output effect: fisheye or fisheye correction of input texture. Should work with different proportions.\nOrigins from http://stackoverflow.com/questions/6030814/add-fisheye-effect-to-images-at-runtime-using-opengl-es","likes":66,"published":1,"flags":0,"usePreview":1,"tags":["fisheye","correction"],"hasliked":0,"parentid":"","parentname":""}}