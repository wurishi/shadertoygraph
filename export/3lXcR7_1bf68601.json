{"ver":"0.1","info":{"id":"3lXcR7","date":"1673038239","viewed":270,"name":"naive hologram","username":"katila4","description":"Naive hologram","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["learning","hologram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float TOTAL_PLAY_TIME = 14.0;\n\nfloat GetTime()\n{\n    return iTime;\n}\n\nfloat GetTotalTime()\n{\n    return mod(GetTime(), TOTAL_PLAY_TIME) / TOTAL_PLAY_TIME;\n}\n\nfloat Acceptable(in vec3 col)\n{\n    if (col.g > 0.4 && col.r < 0.4 && col.b < 0.4)\n    {\n        return 0.0;\n    }\n    return 1.0;\n}\n\nfloat Grid(in vec2 pos)\n{\n    float v = step(0.2, mod(pos.y * 100.0, 0.75));\n    return v;\n}\n\nfloat Intensivity(in vec3 orig)\n{\n    return 0.299 * orig.r + 0.587 * orig.g + 0.114 * orig.b;\n}\n\nvec3 Blue(in vec2 uv)\n{\n    vec3 orig = texture(iChannel0, uv).rgb;\n    \n    uv.y += 0.5 * GetTotalTime();\n    \n    float v = Acceptable(orig);\n    float i = Intensivity(orig);\n    \n    vec3 backColor = vec3(0.0);\n    vec3 blue = vec3(0.0, 1.0, 1.0);\n    vec3 back = backColor * 0.75;\n    \n    float res = Grid(uv) * v;\n    float resI = (res * (max(i, 0.55) - 0.05) * 1.55);\n    vec3 resColor = vec3(resI) * blue * 1.15;\n    return resColor + back * (1.0 - res);\n}\n\nvec2 Line(in vec2 pos)\n{\n    float t = GetTotalTime();\n    float v = sin((pos.y + t * 4.0) * 3.14 * 4.0);\n    pos.x += 0.0015 * sin(v * 3.14) * cos(v * 3.14 * 2.0);\n    pos.y += 0.0055 * cos(v * 3.14) * sin(v * 3.14 * 2.0);\n    return pos;\n}\n\nvec3 Factor(in vec2 uv, float stepV, int stepI, int stepJ)\n{\n    vec3 resCol = vec3(0.0);\n    int steps = 0;\n    for (int i = -stepI; i <= stepI; ++i)\n    {\n        for (int j = -stepJ; j <= stepJ; ++j)\n        {\n            resCol += Blue(uv + vec2(stepV * float(i), stepV * float(j))); \n            ++steps;\n        }\n    }\n    resCol /= float(steps);\n    return resCol;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = Line(uv);\n    \n    vec3 resCol = Factor(uv, 0.015, 6, 1);\n    resCol += Factor(uv, 0.015, 4, 4);\n    resCol += Factor(uv, 0.004, 2, 2);\n    resCol += Factor(uv, 0.001, 1, 2);\n    \n    resCol /= 4.0;\n    \n    fragColor = vec4(resCol, 1.0);\n}","name":"Image","description":"","type":"image"}]}