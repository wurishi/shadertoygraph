{"ver":"0.1","info":{"id":"4l3yRM","date":"1531904158","viewed":2193,"name":"Vogel disk sampling","username":"ashalah","description":"This shader visualizes the sample patterns generated by Vogel disk sampling. Change numSamples to see a different pattern. Change rotationSpeed to 0 to stop the movement.","likes":25,"published":3,"flags":0,"usePreview":1,"tags":["sampling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const int numSamples = 128;\n    float rotationSpeed = -0.2;\n\n    vec2 center = iResolution.xy / 2.0;\n    float diskRadius = 150.0;\n    float pointSize = 2.5;\n    vec3 color = vec3(0.10, 0.10, 0.13);\n    \n    for (int i = 0; i < numSamples; i++)\n    {\n        // Calculate Vogel disk sample\n        float theta = 2.4 * float(i) + iTime * -0.2;\n        float r = sqrt(float(i) + 0.5) / sqrt(float(numSamples));\n        vec2 u = r * vec2(cos(theta), sin(theta));\n        vec2 pos = center + u * diskRadius;\n        \n        // Blend color\n        float alpha = smoothstep(pointSize + 1.0, pointSize - 1.0, length(fragCoord - pos));\n        float shade = 0.5 * (1.0 - r) + 0.5;\n        color = mix(color, vec3(shade, shade, shade), alpha);\n    }\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}