{"ver":"0.1","info":{"id":"lcX3Rl","date":"1703349193","viewed":57,"name":"yes I followed kishimisu tutoria","username":"Miolith","description":"Un grand merci Ã  ce bon vieux kishimisu.\n\nClick to reveal the orthographic projection.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphereSdf(vec3 pos, vec3 center, float radius)\n{\n    return distance(pos, center) - radius;\n}\n\nfloat scene(vec3 ray_pos)\n{\n    vec3 sphere_pos = ray_pos + vec3(0.0, 0.0, iTime);\n    sphere_pos = fract(sphere_pos) - 0.5;\n    float sphere = sphereSdf(sphere_pos, vec3(0.0, 0.0, 0.0), 0.2);\n    \n    float ground = ray_pos.y + 0.75;\n    \n    return min(ground, sphere);\n}\n\nvec3 palette( float t, vec3 a, vec3 b,  vec3 c, vec3 d)\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 colorize(float t)\n{\n    return palette(t,\n        vec3(1.000,0.761,0.678),\n        vec3(0.2, 0.4, 0.2),\n        vec3(2.0, 1.0, 1.0),\n        vec3(0.00, 0.25, 0.25)\n    );\n}\n\nmat2 rotation(float angle)\n{\n    return mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.0);\n    \n    vec3 ray_origin = vec3(uv, -3.0);\n    \n    vec2 start_xy = (iMouse.z <= 0.0) ? uv : vec2(0.0);\n    vec3 ray_dir = normalize(vec3(start_xy, 1.5));\n    \n    float t = 0.0;\n    \n    float time = iTime / 2.0;\n    \n    ray_origin.xz = rotation(time) * ray_origin.xz;\n    ray_dir.xz = rotation(time) * ray_dir.xz;\n    \n    ray_origin.xy = rotation(time) * ray_origin.xy;\n    ray_dir.xy = rotation(time) * ray_dir.xy;\n    \n    for (int i = 0; i < 80; i++)\n    {\n        vec3 ray_pos = ray_origin + ray_dir * t;\n\n        float dist = scene(ray_pos);\n        \n        t += dist;\n        \n        if (dist > 100.0 || dist < 0.001) break;\n    }\n    if (t >= 10.0)\n        col = vec3(0.239,0.710,1.000) + length(uv)/4.0;\n    else\n        col = colorize(t * 0.2);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}