{"ver":"0.1","info":{"id":"Wl2GRh","date":"1558499376","viewed":102,"name":"Sphere split","username":"plosique","description":"splits a sphere in half","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","metric","amoeba"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_STEPS=255; \nconst float MAX_DIST=100.0; \nconst float MIN_DIST=0.0; \nconst float EPS=0.001; \nconst float a=1.0; \nconst vec3 ls=vec3(1.0,1.0,-1.0); \nconst vec3 ia=vec3(1.0,1.0,1.0);\nconst vec3 id=vec3(0.5,0.5,0.5); \nconst vec3 is=vec3(0.5,0.5,0.5); \nconst float kd=0.5; \nconst float ks=0.2; \nconst float ka=0.4; \nvec3 c=vec3(0.0,0.0,1.0); \nfloat r=1.3; \n\nfloat dist(vec3 pt,mat3 mat){ \n    return pow(dot(pt,mat*pt),0.5); \n}\n\nfloat sphereSDF(in vec3 pt,in mat3 mat){ \n    return dist(pt-c,mat)-r; \n}\n\n\nfloat craterSDF(in vec3 pt){ \n    vec3 cent=c+vec3(0.0,0.0,-r); \n    float radius=0.4;\n    return length(pt-cent)-radius; \n} \n\nfloat diff(in float A,in float B){ \n    return max(A,-B); \n}\n\nfloat sceneSDF(in vec3 pt,mat3 mat){   \n    return sphereSDF(pt,mat); \n}\n\n\nvec4 ray_march(in vec3 eye, in vec3 dir,mat3 mat){\n    vec4 bkg=vec4(0.0,0.0,0.0,1.0); \n    vec3 pt; \n\tpt=eye;\n    float step_size=0.0;\n    for(int i=0;i<MAX_STEPS;i++){\n        step_size=sceneSDF(pt,mat); \n        \n        pt=pt+step_size*dir;\n        \n        if (step_size>MAX_DIST){  \n            return bkg ;\n        } \n        if (step_size<EPS){\n            vec3 N=(pt-c); \n            vec3 L=(ls-pt); \n            vec3 V=(eye-pt); \n            vec3 R=reflect(-L,N);\n            vec3 ret=ka*ia+kd*(dot(L,N))*id+ks*pow(dot(R,V),a)*is;\n            vec4 ret2=vec4(ret,1.0);\n            return ret2;\n                \n            \n        } \n       \n    }return bkg ;\n}\n\nvec3 ray_dir(vec3 eye,vec3 pix_loc){ \n    return normalize(pix_loc-eye); \n        }\n\nfloat det(mat3 mat){  \n    return mat[0][0]*mat[1][1]*mat[2][2]; \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n    vec2 r1=fragCoord-0.5*iResolution.xy; \n    vec2 r=r1.xy/(0.5*iResolution.y); \n    mat3 mat=mat3(1.0-sin(3.14*r.y)*cos(iTime),0.0,0.0,\n                  0.0,1.0-cos(3.14*r.x)*cos(iTime),0.0,\n                  0.0,0.0,1.0-sin(3.14*r.y)*cos(3.14*r.x)*cos(iTime)); \n    mat=mat/det(mat); \n    vec3 eye=vec3(0.0,0.0,-1.0); \n    vec3 pix_loc=vec3(r,0.0); \n    vec3 dir=ray_dir(eye,pix_loc);  \n    vec4 pix_val=ray_march(eye,dir,mat); \n     \n    fragColor=pix_val;\n \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}