{"ver":"0.1","info":{"id":"wljGWR","date":"1559175222","viewed":710,"name":"Chromatic Shockwave 2","username":"Mogster","description":"description","likes":12,"published":1,"flags":0,"usePreview":1,"tags":["shockwave","chromatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Sawtooth calc of time\n    float offset = (iTime - floor(iTime)) / iTime;\n\tfloat time = iTime * offset;\n\n    // Wave design params\n\tvec3 waveParams = vec3(10.0, 0.8, 0.1 );\n    \n    \n    // Find coordinate, flexible to different resolutions\n    float maxSize = max(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord.xy / maxSize;\n\n    \n    // Find center, flexible to different resolutions\n    vec2 center = iResolution.xy / maxSize / 2.;\n\n    // Distance to the center\n    float dist = distance(uv, center);\n    \n    time = pow(time, 0.55);\n    \n    // Original color\n\tvec4 c = texture(iChannel0, uv);\n    \n\tif (time > 0. && dist <= time + waveParams.z && dist >= time - waveParams.z) {\n      \n        // The pixel offset distance based on the input parameters\n\t\tfloat diff = (dist - time);\n\t\tfloat diffPow = (1.0 - pow(abs(diff * waveParams.x), waveParams.y));\n\t\tfloat diffTime = (diff  * diffPow);\n\n        // The direction of the distortion\n\t\tvec2 dir = normalize(uv - center);\n        \n\t\t\n        uv.x += (rand(vec2(iTime,fragCoord.y))-1.0) / ((time * dist * 3000.0));\n        \n        // Perform the distortion and reduce the effect over time\n\t\tuv += ((dir * diffTime) / (time * dist * 20.0)) * (dist / 2.0);\n        \n\n\t\tc = texture(iChannel0, uv);\n\n        vec4 red = texture(iChannel0, vec2(uv.x - (0.2 / (time* dist * 500.0)), uv.y)) * vec4(1.0, 0.0, 0.0,1.0);\n\t\tvec4 green = texture(iChannel0, vec2(uv.x + (0.2 / (time* dist * 500.0)) , uv.y))\n\t\t   * vec4(0.0, 1.00, 0.0,1.0);\n\t\tvec4 blue  = texture(iChannel0, vec2(uv.x, uv.y)) * vec4(0.0, 0.0, 1.0,1.0);\n\t\tc += red + green + blue;\n        c /= 2.;\n\t}\n    \n    if (c.r > 0.2) c.a = 0.0;\n    \n\tfragColor = c;\n}","name":"Image","description":"","type":"image"}]}