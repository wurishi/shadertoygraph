{"ver":"0.1","info":{"id":"lXjSDt","date":"1711252210","viewed":37,"name":"Smile Mask","username":"FlexZ","description":"my first shadertoy ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Create a Circle\n// reutrn value 0 <> 1\nfloat Circle(vec2 uv, vec2 pos, float radius, float edgeBlur) {\n    float dis = length(uv - pos);\n    float value = smoothstep(radius, radius - edgeBlur, dis);\n    \n    return value;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // range -.5 <> .5\n    uv -= .5;\n    // make uv square normalize\n    uv.x *= (iResolution.x / iResolution.y);\n    \n    float c1 = Circle(uv, vec2(.0, .0), .4, .04);\n    \n    float c2 = Circle(uv, vec2(-.13, .2), .1, .04);\n    float c3 = Circle(uv, vec2(.13, .2), .1, .04);\n\n    c1 -= c2;\n    c1 -= c3;\n    \n    //smile shape\n    float c4 = Circle(uv, vec2(.0, .1), .3, .04);\n    float c5 = Circle(uv, vec2(.0, .05), .3, .04);\n    \n    float smile = c5 - c4;\n    \n    float mask = c1 - smile;\n    vec4 color = vec4(1.,1.,0.,1.);\n    \n    color *= mask;\n\n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}