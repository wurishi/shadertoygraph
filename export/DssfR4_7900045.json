{"ver":"0.1","info":{"id":"DssfR4","date":"1688516981","viewed":55,"name":"Moire Than a Dream","username":"graygoose","description":"fine tune and experience the universe.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["interference","moire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float factor;\n    if(iTime>120.)\n         factor = 250.*abs(sin(0.001*iTime));\n    else\n         factor = 100.*abs(sin(0.00018*iTime));\n    vec2 uv = fragCoord / iResolution.xy * 2. * factor - vec2(0.6, 1.)* factor;\n\n    // Add some noise to vary the shape\n    if(iTime>120.)\n        uv += 1.0 * vec2(sin(.01521*iTime + uv.y * 100.0), cos(0.023*iTime + uv.x * 100.0));\n\n    else\n        uv += 0.1 * vec2(sin(.01521*iTime + uv.y * 3.0), cos(0.023*iTime + uv.x * 3.0));\n\n    // Rotate UV coordinates over time\n    float rotationAngle = 0.000001 * iTime;\n    uv = mat2(cos(rotationAngle), -sin(rotationAngle), sin(rotationAngle), cos(rotationAngle)) * uv;\n\n    // Convert to polar coordinates\n    float radius = length(uv);\n    float angle = atan(uv.y, uv.x);\n\n    // Constants\n    float minCircleSize = 0.000022 * sin(0.0000003 * iTime);\n    float maxCircleSize = 0.0012 * cos(0.0000111 * iTime);\n    float moireFactor = 0.999; // Close to 1.0 to create moiré patterns\n\n    // Modulate the circle size and frequency as a function of the radius\n    float circleSize = mix(minCircleSize, maxCircleSize, 1.0 - radius);\n    float frequency = 1.0 / circleSize;\n\n    // Create two sets of circles with slightly different frequencies to\n    // create moiré patterns\n    float circle = 0.5 * sin(frequency * angle - iTime) + 0.5;\n    for(int i=0; i<100; i++){\n        if(i%2==0)\n            circle += sin(moireFactor * frequency * angle - iTime) + 0.5;\n        else if(i%3==0)\n            circle *= sin(moireFactor * frequency * angle - iTime) + 0.5;\n        else if(i%5==0)\n            circle *= cos(moireFactor * frequency * angle - iTime) + 0.5;\n        else\n            circle *= cos(moireFactor*1.01 * frequency * angle - iTime) * sin(moireFactor*.99 * frequency * angle - iTime) + 0.5;\n            \n        moireFactor -= 0.0001;//*sin(0.01*iTime);\n    }\n\n    // Use the moiré pattern to modulate the color\n    vec3 color;\n    color.r = circle * sin(frequency * angle - iTime * 1.5) + circle * cos(frequency*.99 * angle - iTime * 1.5);\n    color.g = circle * sin(1.00017 * frequency * angle - iTime * 1.5) + circle * cos(1.00325 * frequency * angle - iTime * 1.5);\n    color.b = circle * sin(1.0025 * frequency * angle - iTime * 1.5) + circle * cos(1.0013 * frequency * angle - iTime * 1.5);\n\n\n    // Output to screen\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}