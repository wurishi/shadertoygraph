{"ver":"0.1","info":{"id":"ltXfzn","date":"1510748006","viewed":166,"name":"TextureTiler","username":"shortnotion","description":"Texture tiling with time-based variations for demonstration purposes","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["texture","tiling","repeater"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // config\n    float number_of_rows = 2.0;\n    float number_of_cols = 3.0;\n    float fps = 4.0;\n    mat2 tileOffset = mat2(\n        0, // column-tile-offset-x\n        -0.01, // row-tile-offset-x\n        -0.03, // column-tile-offset-y\n        -0.015);// row-tile-offset-y\n\n    // start at frame 1.0 so if fps=0.0 (no animation)\n    // there will still be tiling visible\n    float frame = floor(iTime*fps)+1.0;\n\n\t// get normalized coordinates\n    vec2 xy = fragCoord.xy / iResolution.xy;\n    \n    // use normalized coordinates to row/column offset factors\n    vec2 tilefactor = floor(xy * vec2(number_of_cols, number_of_rows));\n\n    // apply column and row offset factors, and multiply by current frame for animation effect\n    xy += vec2(frame) * tilefactor * tileOffset;\n\n    //'fract' is there because I can't use 'repeat' on buffered textures here.\n    fragColor = texture(iChannel0, xy); //fract(xy * (mod(floor(iTime*.5), 4.0)+1.0))); \n}\n","name":"Image","description":"","type":"image"}]}