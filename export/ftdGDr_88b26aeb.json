{"ver":"0.1","info":{"id":"ftdGDr","date":"1635998018","viewed":95,"name":"jneen - 25min practice","username":"jneen","description":"practice n stuff","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["jneen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float G=0.;\nfloat box(vec3 p,vec3 a){vec3 q=abs(p)-a;return length(max(q,0.))+min(0.,max(q.x,max(q.y,q.z)));}\n\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\n\n#define time (iTime*2.)\n\nfloat scene(vec3 p) { \n      //p.xy *= rot(-.0001*sin(3.14+2.*time));\n      p.xz *= rot(time*.0001);\n      p.x+=1.;\n      p.y+=5.*(.5+.5*sin(time));\n\n\n  float bg = p.y+5.*(.5+.5*sin(time));\n    \n   p.x += 5.*sin(2.*time);\n    \n    \n  float per=15.;\n  p.xz = mod(p.xz,per)-.5*per;\n  p.xz *= rot(time);\n  p.xy *= rot(.2*time);\n  float sph = length(p)-2.;\n  float B = box(p, vec3(2));\n \n  float solid = mix(sph,B,2.*sin(iTime));\n  \n  solid = max(solid,-(length(p.yz)-2.5));\n  float glowy =max(-solid,solid -1.);\n  if (solid>.1) G += max(0.,-glowy);\n  glowy = abs(glowy)+.001;\n  \n\n  \n  return min(bg,glowy);//min(sph,glowy);\n}\n\nfloat ray(vec3 p, vec3 rd){\nG=0.;float d=0.; for (int i=0;i<400;i++){float c=scene(p+d*rd);d+=c;if(c<.001||d>1000.)return d;}return d;}\n\nvec3 grad(vec3 p){\nmat3 k=mat3(p,p,p)-mat3(.001);\nreturn scene(p)-vec3(scene(k[0]),scene(k[1]),scene(k[2]));}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 cam=vec3(0,0,20.*time);\n    vec3 dir=normalize(vec3(uv,1));\n    \n    float dist=ray(cam,dir);\n    float glow=G;\n    vec3 hit=cam+dir*dist;\n    vec3 norm=normalize(grad(hit));\n    vec3 refl = reflect(dir,norm);\n    float refldist = ray(hit+.01*refl,refl);float reflglow=0.;\n    if (dist<1000.) reflglow = G;\n    \n    \n    // Time varying pixel color\n    vec3 col = .2*mix(vec3(1,.4,.8)*glow,vec3(1,.1,.4)*reflglow,.1);\n\n    // Output to screen\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}