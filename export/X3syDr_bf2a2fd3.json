{"ver":"0.1","info":{"id":"X3syDr","date":"1726077135","viewed":21,"name":"long shadow","username":"ddinhddoong","description":"s to scale\nr to rotate","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"M3fcWr","parentname":"long shadow test by SDF"},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getAngle(vec2 v1, vec2 v2)\n{\n    vec2 dir = v2 - v1;\n    return mod(atan(dir.y, dir.x), 2.*PI);\n}\nvoid rotate(inout vec2 p,float angle,vec2 rotationOrigin)\n{\n    p -= rotationOrigin;\n    p *= mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    p += rotationOrigin;\n}\nvoid scale(inout vec2 p, float ratio, vec2 origin)\n{\n    p-= origin;\n    p/= ratio;\n    p+= origin;\n}\n\nvoid mainImage( out vec4 o, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = u/R;\n    \n        if(KEY_S > 0.)\n       scale(u, R.y*0.0075, iMouse.xy);\n    if(KEY_R > 0.)\n       rotate(u,getAngle(R/2., iMouse.xy) - PI/2., R/2.);\n       \n    vec4 data = T(u);\n    getLightSource(R, iTime, iMouse);\n    float sunDistance = distance(lightSource, u);\n    \n    vec3 skyColor = vec3(0.45,0.53,0.55);\n    skyColor+= noise(uv* iTime)*0.1;\n    vec3 landColor = vec3(.6,.4,.1);\n    landColor = mix(landColor, skyColor, 0.75); //ambient light\n    \n    float star = isInStar(uv, R) * sunDistance/(R.x);\n    skyColor += star;\n    float StarInShadow = isInLand(u, R)? 0. : star;\n    o.xyz = isInLand(u, R)? landColor: skyColor;\n    \n    float sun = min(0., 0.1 - sunDistance/5.);\n    o.xyz += exp(sun);\n    o.xyz += max(-0.5, 0.25 - sunDistance/R.x - data.x); //light and shadow\n    \n    if (isInLand(u, R)) o.xyz = mix(o.xyz, landColor, 0.2);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = u/R.xy;\n    bool land = isInLand(u, R);\n    vec2 center = vec2(R.x * 0.5, R.y * 0.5);\n    getLightSource(R, iTime, iMouse);\n    lightVector = center - lightSource;\n    \n    lightVector = normalize(lightVector);\n    o = T(u);\n    o.x = land? 1. : 0.;\n    \n      int numSteps = 20;\n      int i = iFrame;\n      float stepWidth = 20.;\n     \n     vec4 a = T(u - stepWidth * lightVector);\n     if (a.x > 0.) o.x += a.x*fading;\n     if (o.x > 1.) o.x = 1.;\n     \n     vec4 a1 = T(u - stepWidth/6. * lightVector);\n     vec4 a2 = T(u - 2.*stepWidth/6. * lightVector);\n     vec4 a3 = T(u - 4.*stepWidth/6. * lightVector);\n     o.x = (o.x + a1.x + a2.x + a3.x)/4.;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(U) texture(iChannel0, (U)/iResolution.xy)\n\n#define KEY_R round(texelFetch(iChannel3, ivec2(82,0) , 0 ).x)\n#define KEY_S round(texelFetch(iChannel3, ivec2(83,0) , 0 ).x)\n\n#define PI 3.14159265\n\nfloat fading = 0.5;\n\nvec2 lightSource;\nvec2 lightVector;\n\nvoid getLightSource(vec2 R, float iTime, vec4 iMouse){\n    vec2 center = vec2(R.x * 0.5, R.y * 0.5);\n    float rotateSpeed = iTime*.075;\n    lightSource = center + R.x/3. * vec2( cos(rotateSpeed),sin(rotateSpeed));\n    if (iMouse.z > 0.) {\n    lightSource = iMouse.xy;\n    }\n}\n//land\nbool isInLand(vec2 u, vec2 R){\n    float ratio = R.y/100.;\n    float nScale = 3. * ratio;\n    float noise = 10. *ratio *(cos(u.x/nScale) * sin(u.y/nScale));\n    return length(u.xy - R/2.) + noise < R.y/4.;\n}\n\nfloat noise(vec2 p)\n{\n    return fract(dot(sin(p.x * 123.12)*142.,cos(p.y *34.95)*165.47));\n}\n\nfloat N21(vec2 p){\n    return fract(sin(p.x * 1000. + p.y * 6574.) * 5647.);\n}\n\nfloat SmoothNoise(vec2 uv){\n    vec2 lv = fract(uv * 10.);\n    vec2 id = floor(uv * 10.);\n    \n    lv = lv * lv * (3. -2. * lv);\n    \n    float bl = N21(id);\n    float br = N21(id + vec2(1,0));\n    float b = mix(bl, br, lv.x);\n    \n    float tl = N21(id+vec2(0,1));\n    float tr = N21(id+vec2(1,1));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\n//star\nfloat isInStar(vec2 uv, vec2 R){\n    float noise = SmoothNoise(uv*15.);\n    //vec2 center = vec2(R.x * 0.5, R.y * 0.5);\n    //circle = s\n    return smoothstep(0.95, 1., noise);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = u/R.xy;\n    bool land = isInLand(u, R);\n    vec2 center = vec2(R.x * 0.5, R.y * 0.5);\n    getLightSource(R, iTime, iMouse);\n    lightVector = center - lightSource;\n    \n    lightVector = normalize(lightVector);\n    o = T(u);\n    o.x = land? 1. : 0.;\n    \n      int numSteps = 20;\n      int i = iFrame;\n      float stepWidth = 20.;\n     \n     vec4 a = T(u - stepWidth * lightVector);\n     if (a.x > 0.) o.x += a.x*fading;\n     if (o.x > 1.) o.x = 1.;\n     \n     vec4 a1 = T(u - stepWidth/6. * lightVector);\n     vec4 a2 = T(u - 2.*stepWidth/6. * lightVector);\n     vec4 a3 = T(u - 4.*stepWidth/6. * lightVector);\n     o.x = (o.x + a1.x + a2.x + a3.x)/4.;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = u/R.xy;\n    bool land = isInLand(u, R);\n    vec2 center = vec2(R.x * 0.5, R.y * 0.5);\n    getLightSource(R, iTime, iMouse);\n    lightVector = center - lightSource;\n    \n    lightVector = normalize(lightVector);\n    o = T(u);\n    o.x = land? 1. : 0.;\n    \n      int numSteps = 20;\n      int i = iFrame;\n      float stepWidth = 20.;\n     \n     vec4 a = T(u - stepWidth * lightVector);\n     if (a.x > 0.) o.x += a.x*fading;\n     if (o.x > 1.) o.x = 1.;\n     \n     vec4 a1 = T(u - stepWidth/6. * lightVector);\n     vec4 a2 = T(u - 2.*stepWidth/6. * lightVector);\n     vec4 a3 = T(u - 4.*stepWidth/6. * lightVector);\n     o.x = (o.x + a1.x + a2.x + a3.x)/4.;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 o, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = u/R.xy;\n    bool land = isInLand(u, R);\n    vec2 center = vec2(R.x * 0.5, R.y * 0.5);\n    getLightSource(R, iTime, iMouse);\n    lightVector = center - lightSource;\n    \n    lightVector = normalize(lightVector);\n    o = T(u);\n    o.x = land? 1. : 0.;\n    \n      int numSteps = 20;\n      int i = iFrame;\n      float stepWidth = 20.;\n     \n     vec4 a = T(u - stepWidth * lightVector);\n     if (a.x > 0.) o.x += a.x*fading;\n     if (o.x > 1.) o.x = 1.;\n     \n     vec4 a1 = T(u - stepWidth/6. * lightVector);\n     vec4 a2 = T(u - 2.*stepWidth/6. * lightVector);\n     vec4 a3 = T(u - 4.*stepWidth/6. * lightVector);\n     o.x = (o.x + a1.x + a2.x + a3.x)/4.;\n}","name":"Buffer D","description":"","type":"buffer"}]}