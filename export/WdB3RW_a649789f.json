{"ver":"0.1","info":{"id":"WdB3RW","date":"1548323768","viewed":172,"name":"Trying Out","username":"deathswordian","description":"This is just trying out tutorial for beginner from this site : https://gamedevelopment.tutsplus.com/tutorials/a-beginners-guide-to-coding-graphics-shaders--cms-23313","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["tuts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":3,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy / iResolution.xy; // Condensing this into one line\n    vec4 texColor = texture(iChannel2,xy); // Get the pixel at xy from iChannel0\n    \n    vec4 newTexColor = texture(iChannel3,xy);\n    \n    vec3 newColor;\n    float gray = (texColor.r + texColor.g + texColor.b)/3.0;\n    newColor.r = gray ;\n    newColor.g = gray ;\n    newColor.b = gray ;\n    \n    vec3 usedColor;\n    usedColor.r = newColor.r * abs(cos(iTime)) + texColor.r * abs(sin(iTime));\n    usedColor.g = newColor.g * abs(cos(iTime)) + texColor.g * abs(sin(iTime));\n    usedColor.b = newColor.b * abs(cos(iTime)) + texColor.b * abs(sin(iTime));\n    \n    if(newTexColor.g > 0.6 && newTexColor.r < 0.5 && newTexColor.b < 0.5)\n    {\n        newTexColor.r = texColor.r;\n        newTexColor.g = texColor.g;\n        newTexColor.b = texColor.b;\n    }\n    \n    fragColor = newTexColor; // Set the screen pixel to that color\n}","name":"Image","description":"","type":"image"}]}