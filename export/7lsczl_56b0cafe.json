{"ver":"0.1","info":{"id":"7lsczl","date":"1649037121","viewed":175,"name":"inverting rectangles","username":"Edward_Wong_Hau_Pepelu_Tivrusk","description":"that overlapping effect from the dogdog mv\n\nnot finished but I can't be bothered to fix it","likes":1,"published":3,"flags":64,"usePreview":0,"tags":["meme"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtBSRz","filepath":"https://soundcloud.com/pika-lynx582/dogdog-abuse-ft-hatsune-miku","previewfilepath":"https://soundcloud.com/pika-lynx582/dogdog-abuse-ft-hatsune-miku","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define freqStart -1.0\n#define freqInterval 0.1\n#define sampleSize 0.02           // How accurately to sample spectrum, must be a factor of 1.0\n\n\nconst int rectangles = 10;\n\n\nconst float PHI = (1.0 + sqrt(5.0)) / 2.0; // Î¦ = Golden Ratio \n\nfloat gold_noise(vec2 xy, float seed)\n{\n    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\n\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) \n{\n    float intensity = 0.0;\n\tfor(float s = 0.0; s < freqInterval; s += freqInterval * sampleSize) {\n\t\tintensity += texture(iChannel0, vec2(freqStart + s, 0.0)).r;\n\t}\n    intensity = abs(intensity);\n    intensity = pow((intensity*sampleSize),3.0)*4.0;\n    \n    vec4 invertedSquares;\n    vec4 squares;\n    vec4 blueOutlines;\n    vec4 pinkOutlines;\n    vec2 res = iResolution.xy;\n\n    for (int i = 0; i < rectangles; i++) {\n        vec4 square;\n        vec2 uv = abs((fragCoord - vec2(res.x / 3.0 + float((i % 2) * 2 - 1) * iTime * 10.0 + (res.x / 4.0 * gold_noise(vec2(i, i), float(i))), res.y / 3.0 + res.y / 4.0 * gold_noise(vec2(i, i), float(i)))) / res.y * mat2(sin(iTime / (10.0 * gold_noise(vec2(i, i), float(i))) + radians(float((i % 2) * 2 - 1) * 90.0) * vec4(3, 0, 0, 1))));\n        square = vec4(1.0 * smoothstep(1.0 / res.y, 0.0,  max(uv.x / PHI, uv.y) - 0.1));\n        blueOutlines += vec4(1.0 * smoothstep(2.0 / res.y, 0.0,  max(uv.x / (PHI+0.05*intensity), uv.y) - 0.1));\n        pinkOutlines += vec4(1.0 * smoothstep(2.0 / res.y, 0.0,  max(uv.x / PHI, uv.y / (1.0+0.05*intensity)) - 0.1));\n\n        squares += square;\n        invertedSquares = abs(invertedSquares-square);\n    }\n    \n    blueOutlines -= squares;\n    pinkOutlines -= squares;\n    blueOutlines.r = 0.0;\n    pinkOutlines.g = 0.0;\n    vec4 outlines = pinkOutlines+blueOutlines;\n    fragColor = mix(invertedSquares, outlines, outlines.a);\n    //fragColor = outlines;\n    \n}","name":"Image","description":"","type":"image"}]}