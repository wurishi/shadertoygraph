{"ver":"0.1","info":{"id":"Xf2SWd","date":"1706991933","viewed":118,"name":"Pattern_003_generator","username":"Imagyx","description":"Fractal mosaic generator based on \"Fractal mosaic 25 (music)\" by jarble.\nThanks for the idea and setup.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","pattern","mosaic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 triWave(vec2 a){ \n    return abs(fract((a + vec2(1.0, 0.5)) * 1.5) - 0.5);\n}\n\nfloat q2[4] = float[](0.0,1.0,1.5,2.0);\nvec3 calc(vec2 uv, in int flags){\n    float q1 = flags%2==1 ? 1.0 : -1.0;\n    float q3 = flags%16/8==1 ? 1.0 : 1.5;\n    vec3 t1 = vec3(0.0);\n    vec2 t2 = vec2(0.0);\n    bool f = true;\n    for(int k = 0; k < 5; k++){\n       f = uv.x < uv.y;\n       if(f){ \n           uv = uv.yx;\n           t2 = t2.yx;\n       }\n       uv = abs(uv + t2 + 0.5 * q1);\n       t2 = triWave(uv - 0.5 * q3);\n       uv = t2 - triWave(uv.yx) * q2[flags%8/2];\n       vec3 t11 = t1.yxz;\n       if(f || uv.y < uv.x){\n           t11 = abs(t1.zyx - vec3(t1.zx, uv.y - uv.x));\n       }\n       if(!f || -uv.y > -uv.x){\n           t11 = abs(t11.xzy - max(t1.zyx, vec3(t1.zx, uv.y - uv.x)));\n       }\n       t1 = t11;\n    }\n    return t1;\n}\n\nvoid mainImage( out vec4 c, in vec2 xy){\n    vec2 uv = xy / iResolution.y * 0.2;\n    vec3 col = calc(uv, iFrame / 60);\n    c = vec4(min(col * 2.0, vec3(1.0)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}