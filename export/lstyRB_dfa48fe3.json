{"ver":"0.1","info":{"id":"lstyRB","date":"1519448239","viewed":102,"name":"boinggg","username":"weaf","description":"2 hours and I didn't have time for texture mapping? I need more practice","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["compoboing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//from 0 to 1\nfloat tri(float x)\n{\n    float y = mod(x, 1.0);\n    float z = mod(x, 2.0);\n    return y*(1.0-step(1.0,z)) + (1.0-y)*(step(1.0,z));\n}\n\nfloat bounce(float x)\n{\n    float y = mod(x, 1.0);\n    return -4.0*(y*y-y);\n}\n\n//Calculate normal on \"sphere\"\nvec3 normal(vec2 p, vec2 center, float r)\n{\n    p = (p-center)/r;\n    return vec3(p.xy, sqrt(1.0-p.x*p.x-p.y*p.y));\n}\n\n//Lazy shit\nfloat shade(vec3 p, vec3 n)\n{\n    vec3 l = normalize(vec3(iResolution.xy, iResolution.x/2.0) - p);\n    return dot(n, l);\n}\n\nvec3 ball(vec2 p, vec2 center, float r)\n{\n    vec3 n = normal(p, center, r);\n    return vec3(shade(vec3(p.xy,0.0), normal(p,center,r)));\n}\n\nvec3 background(vec2 p)\n{\n    return p.y<iResolution.y/5.0 \n        ? shade(vec3(p.xy,0.0),vec3(0.0,1.0,0.0))*vec3(1.0, 0.0, 0.5) \n        : shade(vec3(p.xy,0.0),vec3(0.0,0.0,1.0))*vec3(0.0, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = iResolution.x/20.0;\n    vec2 center = (0.8*vec2(tri(0.314*iTime)+0.1, bounce(iTime)+0.15))*iResolution.xy;\n    float d = distance(center, fragCoord);\n\n    // scene\n    vec3 col = d<r ? ball(fragCoord, center,r) : background(fragCoord);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}