{"ver":"0.1","info":{"id":"4stSWf","date":"1461849739","viewed":461,"name":"Cellular Activities","username":"vox","description":"Cellular Activities","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["cellularactivities"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359\n#define E 2.7182818284\n#define GR 1.61803398875\n\n#define time ((saw(float(__LINE__))*.001+1.0)*iTime/PI+100.0)\n#define saw(x) (acos(cos(x))/PI)\n\n\nvec2 cmul(vec2 v1, vec2 v2) {\n\treturn vec2(v1.x * v2.x - v1.y * v2.y, v1.y * v2.x + v1.x * v2.y);\n}\n\nvec2 cdiv(vec2 v1, vec2 v2) {\n\treturn vec2(v1.x * v2.x + v1.y * v2.y, v1.y * v2.x - v1.x * v2.y) / dot(v2, v2);\n}\n\nvec2 tree(vec2 uv, vec2 multa, vec2 offa, vec2 multb, vec2 offb)\n{\n\treturn cdiv(cmul(uv, multa) + offa, cmul(uv, multb) + offb);\n}\n\nvec3 phase(float map)\n{\n    return vec3(saw(map),\n                saw(4.0*PI/3.0+map),\n                saw(2.0*PI/3.0+map));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float scale = (4.0+3.0*sin(time/PI))*PI;\n    uv = uv*scale-scale/2.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float r = length(uv);\n\n    \n    float map = 0.0;\n    float noise = 1.0;\n    \n\tconst int max_iterations = 4;\n    \n    vec2 multa, multb, offa, offb;\n\n    for(int i = 0; i < max_iterations; i++)\n    {\n        float iteration = float(i)/float(max_iterations);\n        \n        \n        multa = cos(vec2(time*.1, time*.2)+iteration*PI);\n        offa = cos(vec2(time*.3, time*.4)+iteration*PI);\n        multb = cos(vec2(time*.5, time*.6)+iteration*PI);\n        offb = cos(vec2(time*.7, time*.8)+iteration*PI);\n        \n        uv = tree(uv, multa, offa, multb, offb);\n        float dist = length(uv);\n        uv = saw(uv*1.0*PI)*2.0-1.0;\n        map += pow(clamp(1.0-length(uv), 0.0, 1.0), .5)*noise;    \n        noise *= clamp(1.0-length(fwidth(uv)), 0.0 ,1.0)*\n            \t clamp(1.0-fwidth(map), 0.0 ,1.0);\n        \n    }\n    \n    fragColor = vec4(phase(map*1.0*PI+time), 1.0);\n    \n    //fragColor = vec4(uv*.5+.5, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}