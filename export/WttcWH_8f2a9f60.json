{"ver":"0.1","info":{"id":"WttcWH","date":"1609196276","viewed":334,"name":"Fractal gateway","username":"gaz","description":"3d","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void lookAt(inout vec3 rd,vec3 ro,vec3 ta,vec3 up){\n    vec3 w=normalize(ta-ro),u=normalize(cross(w,up));\n    rd=rd.x*u+rd.y*cross(u,w)+rd.z*w;\n}\n\nvoid rot(inout vec3 p,vec3 a,float t){\n\ta=normalize(a);\n\tvec3 u=cross(p,a),v=cross(a,u);\n\tp=u*sin(t)+v*cos(t)+a*dot(a,p);   \n}\n\nvoid rot(inout vec2 p,float t){\n    p=p*cos(t)+vec2(-p.y,p.x)*sin(t);\n}\n\n#define hash(p)fract(sin(p*12345.5))\n\nvec3 randVec(float s)\n{\n    vec2 n=hash(vec2(s,s+215.3));\n    return vec3(cos(n.y)*cos(n.x),sin(n.y),cos(n.y)*sin(n.x));\n}\n\nvec3 randCurve(float t,float n)\n{\n    vec3 p = vec3(0);\n    for (int i=0; i<3; i++){\n        p+=randVec(n+=365.)*sin((t*=1.3)+sin(t*.6)*.5);      \n    }\n    return p;\n}\n\n#define sabs(p) sqrt((p)*(p)+1e-5)\n#define smin(a,b) (a+b-sabs(a-b))*.5\n#define smax(a,b) (a+b+sabs(a-b))*.5\n\nfloat dodec(vec3 p,float r){\n\tfloat G=sqrt(5.)*.5+.5;\n\tvec3 n=normalize(vec3(G,1,0));\n\tfloat d=0.;\n    p=sabs(p);\n    d=smax(d,dot(p,n));\n    d=smax(d,dot(p,n.yzx));\n    d=smax(d,dot(p,n.zxy));\n\treturn d-r;\n}\n\nfloat icosa(vec3 p,float r){\n\tfloat G=sqrt(5.)*.5+.5;\n\tvec3 n=normalize(vec3(G,1./G,0));\n\tfloat d=0.;\n    p=sabs(p);\n    d=smax(d,dot(p,n));\n    d=smax(d,dot(p,n.yzx));\n    d=smax(d,dot(p,n.zxy));\n\td=smax(d,dot(p,normalize(vec3(1))));\n    return d-r;\n}\n\nfloat stones(vec3 p)\n{\n\tp.z-=iTime*1.5;\n    p.y-=iTime;\n    rot(p.xz,.3);\n    float c=2.;\n    vec3 e=floor(p/c);\n    e = sin(1.0*(2.5*e+3.0*e.yzx+1.345)); \n    p-=e*.6;\n    p=mod(p,c)-c*.5;\n    rot(p,hash(e+166.887)-.5,iTime*1.5); \n    if(hash(dot(e,vec3(.234,.24,98))+16776.887)<.5)\n    {\n        return min(.5,icosa(p,.12));    \n    }else{\n        return min(.5,dodec(p,.12));    \n    }\n}\n\nfloat gate(vec3 p){\n \tp.z-=iTime;\n\tfloat c=13.;\n    float e=floor(p.z/(.5*c));\n    p.z=mod(p.z,c)-.5*c;\\\n    c=13.;\n    p.xy=mod(p.xy-.5*c,c)-.5*c;\n    rot(p,randVec(e*1.233),.2*(hash(e+123.456)*2.-1.));\n    vec3 q=p;\n    p=abs(p)-3.8;\n    if(p.x<p.y)p.xy=p.yx;\n    if(p.y<p.z)p.yz=p.zy;\n    if(p.z<p.x)p.zx=p.xz;\n     \n\tfloat s=2.5;\n\tp=sabs(p);\n\tvec3  off = p*1.36;\n\tfor (float i=0.; i<4.; i++){\n    \tp=1.-abs(abs(p-2.)-1.); \n    \tfloat r=-4.*clamp(1.7*max(.75/dot(p,p),.47),.0,2.5);\n        s*=r;\n    \tp*=r;\n    \tp+=off+normalize(vec3(2,7,15))*(6.-.5*i);\n \t}\n\ts=abs(s);\n\tfloat a=16.;\n\tp-=clamp(p,-a,a);\n\t\n\tq=abs(q)-vec3(3.6);\n    if(q.x<q.y)q.xy=q.yx;\n    if(q.y<q.z)q.yz=q.zy;\n    if(q.z<q.x)q.zx=q.xz;\n  \tfloat de=max(max(abs(q.y),abs(q.z))-1.8,length(p)/s);\n    return min(.8,de);\n}\n\nfloat map(vec3 p){\n    return min(stones(p),gate(p));\n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.005;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<120;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nfloat calcShadow( vec3 light, vec3 ld, float len ) {\n\tfloat depth=march(light,ld,0.,len);\t\n\treturn step(len-depth, .01);\n}\n\nvec3 doColor(vec3 p)\n{\n    if(stones(p)<.001)return vec3(1.2,1.3,1.5);\n    return vec3(1);\n}\n\nvec2 billboardUv(vec3 ro,vec3 rd, vec3 a)\n{\n    a-=ro;\n    vec3 g= cross(a, rd);\n    vec3 up=normalize(cross(a,cross(a,vec3(0,1,0))));\n    return vec2(dot(g,up),dot(g,cross(up,normalize(a))));\n}\n\n// https://www.shadertoy.com/view/ltcXzs\nvec4 char(vec2 p, int C) {\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n    return textureGrad( iChannel0, p/16. + fract( vec2(C, 15-C/16) / 16. ) , \n                       dFdx(p/16.),dFdy(p/16.) );\n}\n\nfloat deChar(vec2 p, int c)\n{\n    vec4 f = char(p.xy * 0.13 + 0.5, c);\n    return smoothstep(0.47, 0.75, f.w);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(fragCoord*2.-iResolution.xy)/iResolution.y;\n    vec3 ro=vec3(sin(iTime*.2+sin(iTime*.2)*.2),sin(iTime*.2+sin(iTime*.1)*.1),5.);\n    vec3 ta=vec3(sin(iTime*.3+sin(iTime*.5)*.2),sin(iTime*.1+sin(iTime*.2)*.4),0);\n    vec3 rd=normalize(vec3(uv,1));\n    lookAt(rd,ro,ta,vec3(0,1,0));   \n    vec3 col=vec3(.2,.3,.6);\n    const float maxd=20.;\n    float t=march(ro,rd,.3,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=doColor(p);\n        vec3 n=calcNormal(p);      \n\t\tvec3 lightPos=vec3(5,28,10)*.5;\n    \tvec3 li=lightPos - p;\n\t\tfloat len=length( li );\n\t\tli/=len;\n\t\tfloat dif=clamp(dot(n, li),.5,1.);\n        float sha=calcShadow(lightPos,-li,len);\n        col*=max(sha*dif, 0.8);\n        float rimd=pow(clamp(1.-dot(reflect(-li,n),-rd),0.,1.),2.5);\n\t\tfloat frn=rimd+2.2*(1.-rimd);\n    \tcol*=frn*.5;\n        col*=max(.5+.5*n.y,.0);\n        col*=exp2(-2.*pow(max(.0,1.-map(p+n*.3)/.3),2.));\n        col+=1.*vec3(.9,.5,.1)*pow(clamp(dot(reflect(rd,n),li),0.,1.),20.);      \n        col=mix(vec3(.2,.3,.6),col,exp(-t*t*.005));\n    }\n    \n    for(float i=0.;i<10.;i++)\n    {\n        vec3 p=vec3(0,0,i*2.);\n        float c=floor(p.z*20.);\n        p.z+=iTime;\n        p.z=mod(p.z,20.)-15.2;\n        if(dot(rd,p-ro)<t)\n        {\n            uv=  billboardUv(ro,rd,p)*10.;\n            float de=1.,seed=c+i+1234.567;\n            int iSeed=int(c+i)+18;\n            for(int j=0;j<4;j++)\n            {\n                vec2 off=(vec2(hash(seed+=123.23),hash(seed+=143.6))*2.-1.)*8.;\n                de=min(de,deChar(uv-off,iSeed+=8));\n            }\n            col = mix(col, vec3(1), smoothstep(.05,.0,de)*exp(-t*t*.003));\n        }\n    }\n    \n    for(float i=0.;i<5.;i++)\n    {\n        vec3 p=(vec3(\n            hash((i+142.3)*523.12),\n            hash((i+112.3)*256.12),\n            hash((i+612.3)*778.12)\n            )*2.-1.)*vec3(7,5,1);\n        p+=randCurve(iTime*.5+hash(i*2256.1234)*1000.,(i+67.234)*345.99)*2.5;\n        float L=length(cross(rd,p-ro));\n        col = mix(col, vec3(.8+.2*sin(iTime*12.),.6,.4), exp(-L*L*3.));\n    }\n    \n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}