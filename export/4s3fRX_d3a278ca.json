{"ver":"0.1","info":{"id":"4s3fRX","date":"1526054778","viewed":762,"name":"2-Sample sharpening filter","username":"Hamneggs","description":"Since blurring removes high frequency noise from an image, adding the difference between the original and blurred images to the original amplifies high frequency features.\nAlso since mipmapping gives us blurred images, we don't have to do it ourselves.","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["filter","sharp","sample","2","two","sharpening"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BIAS_FACTOR 3.0 /* How much blur do you want to have? */\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Get an x-based blur amount.\n    float bias = floor(uv.x*2.0)*BIAS_FACTOR;\n\n    // Non-blurred sample.\n    vec4 a = texture(iChannel0,uv);\n    \n    // Blurred sample.\n    vec4 b = texture(iChannel0,uv,bias);\n    \n    // Add the difference back to the original image.\n    fragColor = a + (a-b);\n}","name":"Image","description":"","type":"image"}]}