{"ver":"0.1","info":{"id":"sslGzN","date":"1615742731","viewed":251,"name":"test audio fft","username":"guil","description":"Fork from https://www.shadertoy.com/view/4lGSzy","likes":8,"published":1,"flags":64,"usePreview":0,"tags":["fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4tjSW3","filepath":"https://soundcloud.com/thebestofbach/johann-sebastian-bach-chaconne?si=2feaa8b5be084c6ea230ea892df37bb3&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/thebestofbach/johann-sebastian-bach-chaconne?si=2feaa8b5be084c6ea230ea892df37bb3&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Fork from https://www.shadertoy.com/view/4lGSzy\n\n//https://soundcloud.com/neilbalfour/prelude-no-1-in-c-major-j-s\n//https://soundcloud.com/glennmorrison/beethoven-moonlight-sonata\n//https://soundcloud.com/awfulpianosound/yiruma-river-flows-in-you\n//https://soundcloud.com/nermeen-meawad/moonlight-sonata-beethoven\n//https://soundcloud.com/veillex01/vivaldi-four-seasons\n//https://soundcloud.com/thebestofbach/johann-sebastian-bach-chaconne?si=2feaa8b5be084c6ea230ea892df37bb3&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing\n//https://soundcloud.com/claudiocruz/max-bruch-violin-concerto-in-g\n//https://soundcloud.com/guitaristique-fr/diapason\n\n#define time iTime\n\nfloat noise3D(vec3 p)\n{\n\treturn fract(sin(dot(p ,vec3(12.9898,78.233,12.7378))) * 43758.5453)*2.0-1.0;\n}\n\nvec3 mixc(vec3 col1, vec3 col2, float v)\n{\n    v = clamp(v,0.0,1.0);\n    return col1+v*(col2-col1);\n}\n\nconst float Semitone  = 1.05946309436; //12 notes between an octave, octave is 2, so a semitone is 2^(1/12)\n\nfloat KeyToFrequency(float n){\n    return pow(Semitone,(n-8.))*440./48000.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = uv*2.0-1.0;\n    p.x*=iResolution.x/iResolution.y;\n    p.y+=0.5;\n    \n    vec3 col = vec3(0.0);\n    vec3 ref = vec3(0.0);\n   \n    float nBands = 64.0;\n    float i = floor(uv.x*nBands);\n    float f = fract(uv.x*nBands);\n    float band = KeyToFrequency(i);\n    float s = texture( iChannel0, vec2(band,0.25) ).x;\n    s *= s;\n    \n    /* Gradient colors and amount here */\n    const int nColors = 4;\n    vec3 colors[nColors];  \n    colors[0] = vec3(0.0,0.0,1.0);\n    colors[1] = vec3(0.0,1.0,1.0);\n    colors[2] = vec3(1.0,1.0,0.0);\n    colors[3] = vec3(1.0,0.0,0.0);\n    \n    vec3 gradCol = colors[0];\n    float n = float(nColors)-1.0;\n    for(int i = 1; i < nColors; i++)\n    {\n\t\tgradCol = mixc(gradCol,colors[i],(s-float(i-1)/n)*n);\n    }\n    \n    \n    col += vec3(1.0-smoothstep(0.0,0.01,p.y-s*1.5));\n    col *= gradCol;\n    if (p.y>1.25){\n      vec3 col1 = vec3(0.0);\n      col1 += .5*smoothstep(0.00,0.125,f);\n      if (mod(i,12.)==2.){col1 = vec3(.1);}\n      if (mod(i,12.)==4.){col1 = vec3(.1);}\n      if (mod(i,12.)==7.){col1 = vec3(.1);}\n      if (mod(i,12.)==9.){col1 = vec3(.1);}\n      if (mod(i,12.)==11.){col1 = vec3(.1);}\n      col += col1;}\n    \n    ref += vec3(1.0-smoothstep(0.0,-0.01,p.y+s*1.5));\n    ref*= gradCol*smoothstep(-0.5,0.5,p.y);\n    \n    col = mix(ref,col,smoothstep(-0.01,0.01,p.y));\n    \n    \n\n\n    col *= smoothstep(0.125,0.375,f);\n    //col *= smoothstep(0.875,0.625,f);\n    \n    float wave = texture(iChannel0, vec2(uv.x,0.75)).x;\n    \n    col += 1.0 - smoothstep(0.0, 0.01, abs(0.8*wave - uv.y - 0.3));\n\n    col = clamp(col, 0.0, 1.0);\n\n    float dither = noise3D(vec3(p,time))*2.0/256.0;\n    col += dither;\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}