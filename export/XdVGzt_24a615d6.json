{"ver":"0.1","info":{"id":"XdVGzt","date":"1618850498","viewed":82,"name":"mandelbox kaleidoscope","username":"asneakyfatcat","description":"started out as a slice of a mandelbox, turned into some kaleidoscope effect, best part is around 35sec. If someone has an idea to smooth the aliasing on the far points let me know, I'm not sure how to do it. Center coloring is broken on some devices.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope","trippy","mandelbox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 boxFold(vec2 v)\n{\n    v.x = v.x > 1. ? 2.-v.x : v.x < -1. ? v.x = -2.-v.x : v.x;\n    v.y = v.y > 1. ? 2.-v.y : v.y < -1. ? v.y = -2.-v.y : v.y;\n    return v;\n}\nvec2 ballFold(float r, vec2 box)\n{\n    float m = length(box);\n    m<r ? m /= r*r : m<1. ? m = 1./m : m = m;\n    return m*box;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.-4.*uv;\n    //uv *= 5.;\n    vec2 v = vec2(0.);\n    float s=sin(iTime*.5)+5.*sin(.1*iTime),r=cos(iTime*.1)*.5+.5,f=1.;\n    float trap = 0.;\n    float dist=0.;\n    vec4 col = vec4(1.);\n    \n    for(int i = 0; i < 512; i++){\n        if(dot(v,v)>100.*cos(iTime*.5)+100.){trap = float(i);break;}\n        dist = min( 1e20, dot(v,v))+cos(float(i)*12.005+.001*iTime);\n        v = s*ballFold(r, f*boxFold(v)) + uv;\n    }\n    dist = sqrt(dist);\n\tfloat orb = sqrt(float(trap))/64.;\n    fragColor=vec4(sin(dist+.001*iTime)*.5+.5,cos(dist+.1*iTime)*.5+.5,tan(dist*orb)*.5+.5,1.);\n}\n","name":"Image","description":"","type":"image"}]}