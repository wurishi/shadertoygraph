{"ver":"0.1","info":{"id":"DljyDt","date":"1692449339","viewed":34,"name":"Tilling","username":"FFFFFFear1","description":"Some tilling, nothing special :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define float2x2 mat2\n\nvec2 _size = vec2(0.05f, 0.05f);\nvec2 _center = vec2(0.5f, 0.5f);\nvec2 _tilling = vec2(15.0f, 1.0f);\nvec3 _color1 = vec3(1.0f, 1.0f, 0.0f);\nvec3 _color2 = vec3(0.9f, 1.0f, 1.0f);\nfloat _rotateSpeed = 5.0f;\n\n\nfloat rect(vec2 pos, vec2 size, vec2 center) {\n    vec2 newPos = pos - center;\n    vec2 halfSize = size * 0.5f;\n    \n    float horz =  step(-halfSize.x, newPos.x) - step(halfSize.x, newPos.x);\n    float vert = step(-halfSize.y, newPos.y) - step(halfSize.y, newPos.y);\n    \n    return horz + vert;\n}\n\nfloat horizontal(vec2 pos, vec2 size, vec2 center) {\n    vec2 newPos = pos - center;\n    vec2 halfSize = size * 0.5f;\n    \n    float horz =  step(-halfSize.x, newPos.x) - step(halfSize.x, newPos.x);\n    \n    return horz;\n}\n\nfloat vertical(vec2 pos, vec2 size, vec2 center) {\n    vec2 newPos = pos - center;\n    vec2 halfSize = size * 0.5f;\n    \n    float vert = step(-halfSize.y, newPos.y) - step(halfSize.y, newPos.y);\n    \n    return vert;\n}\n\nfloat frac(float num1) {\n    return num1 - floor(num1);\n}\n\nfloat2x2 getRotationMatrix(float theta) {\n    float s = sin(theta);\n    float c = cos(theta);\n    \n    return float2x2(c,-s,s,c);\n}\n\nfloat2x2 getScaleMatrix(float scale) {\n    return float2x2(scale,0,0,scale);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float2x2 rotateMat = getRotationMatrix(iTime * _rotateSpeed);\n    float2x2 scaleMat = getScaleMatrix((sin(iTime) + 1.0) / 3.0 + 0.5);\n    float2x2 mat = rotateMat * scaleMat;\n    \n    vec2 pos = vec2(frac(uv.x * _tilling.x), frac(uv.y * _tilling.y));\n    \n    vec2 newPos = (mat * (pos - _center) + _center);\n\n    vec3 color = (_color1 * horizontal(newPos, _size, _center)) + (_color2 * vertical(newPos, _size, _center));\n\n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}