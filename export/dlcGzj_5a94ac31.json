{"ver":"0.1","info":{"id":"dlcGzj","date":"1683041563","viewed":213,"name":"schzna-kaleidoscope-1","username":"schzna","description":"d","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\n\nfloat atan2(in float y, in float x){\n    return x == 0.0 ? sign(y)*PI/2.0 : atan(y, x);\n}\n\nfloat d1(vec2 v, float rad){\n    return abs(v.y * sin(rad) + v.x * cos(rad));\n}\n\nfloat d(vec2 v, int n, float ang){\n    float t = atan2(v.y,v.x)+ang;\n    t = t - floor((t+PI)/(2.0*PI))*2.0*PI;\n    float a = -PI;\n    for(int i = 0; i < n; i++){\n        if(a < t && t < (a+PI*2.0/float(n))){\n            float c = a + PI/float(n)+ang;\n            return d1(v, c);\n        }\n        a += PI*2.0/float(n);\n    }\n    return d1(v, 0.0);\n}\n\nfloat range(float x, float a, float b){\n    return step(a, x) * step(-b, -x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 v = (fragCoord-iResolution.xy*0.5)/iResolution.xx;\n    float time = iTime * 2.0;\n    float phase = 2.0*abs(cos(time));\n    \n    int N = 3;\n    \n    N = int(floor(3.0+(1.0+cos(time*0.1))*3.0/2.0));\n    \n    float m = 0.5/pow(abs(d(v, N, time*1.0) - 0.1*(1.0+cos(time))), 0.4);\n    float l = d(v, N*2, 0.5*time);\n    float n = length(v) * 0.3/pow(abs(d(v, N*2, time*0.4) - 0.08), 0.4);;\n    m = m * (2.2-l) * (n+0.1);\n    vec3 col = (0.4 + 0.1*cos(time+v.xyx+vec3(0,2,4)))*m + vec3(0.0,l,l*1.4);\n    //col = vec3(0.8) * m;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}