{"ver":"0.1","info":{"id":"XsKGRm","date":"1453751619","viewed":110,"name":"Very Creepy","username":"Emil","description":"autogenerated music test and creepy visuals","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["sound","music","bad"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y; // thanks FabriceNeyret2!\n    vec2 uv_01 = (fragCoord- .5*iResolution.xy )/iResolution.xy;\n    float newTime = iTime*0.25;\n    \n    ///// Start Creepy stuff\n    float rotStrength = (0.06*sin(newTime))/length(uv);\n    float sinX = sin ( rotStrength + newTime);\n    float cosX = cos ( rotStrength + newTime);\n    float sinY = sin ( rotStrength + newTime);\n    mat2 rotMatrix = mat2( cosX, -sinX, sinY, cosX);\n    \n    \n    vec2 twistedUV = uv * rotMatrix;\n    twistedUV.x /= 1.8*(1.0-0.2*sin(newTime));\n    ///// End Creepy stuff\n    \n    vec3 viewDir = normalize(vec3(twistedUV,0.4 + 0.1*sin(newTime*3.0)));\n    \n    vec2 planarUV_y = viewDir.xz/abs(viewDir.y);\n    vec2 planarUV_x = viewDir.yz/abs(viewDir.x);\n    \n    float depth = min(planarUV_y.y, planarUV_x.y);\n    planarUV_y += vec2(0.0, newTime*-10.6);\n    planarUV_x += vec2(0.0, newTime*-10.6);\n    \n    vec3 albedo = \ttexture( iChannel0, planarUV_y).rgb*step(abs(planarUV_y.x),0.99)\n        \t\t+\ttexture( iChannel0, planarUV_x).rgb*step(abs(planarUV_x.x),1.01);\n    \n    float light = (1.1)/(depth*depth)*viewDir.z*(0.5+0.2*(sin(newTime*5.0)));\n    \n    float fog = clamp(depth*0.02,0.0,0.6);\n    \n    fragColor = vec4(light*albedo+vec3(2.0+sin(newTime*6.0),0.45,0.2)*fog,1.0);\n    fragColor *= 2.5-4.0*max(abs(uv_01.x),abs(uv_01.y)); // square vignette\n    fragColor = mix(fragColor, fragColor / (0.0+0.4*sin(fragColor+iTime*1.5)), 0.01);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"float random (float x){\n    return fract(sin(dot(vec2(x, x+12.36) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n\nvec2 mainSound( in int samp, float time )\n{\n    float mtime = 0.0;\n    float randomtact = random(ceil(time));\n    float tact = time*(0.6);\n    \n    float randomnote = random(ceil(tact));\n    \n    float note1 = (26.0+randomnote*10.0)*ceil(3.0*fract(tact));\n    note1 += ceil(3.0*sin(tact*2.0+radians(90.0)));\n    note1 += ceil(3.0*fract(tact-0.5));\n    \n    randomnote = random(ceil(-tact+30.0));\n    \n    float note2 = (15.0+randomnote*10.0)*ceil(3.0*fract(tact));\n    note2 += ceil(3.0*sin(tact*2.0+radians(90.0)));\n    note2 += ceil(3.0*fract(tact-0.5));\n    \n    mtime = time*note1*10.0;\n    float bass = ( sin(6.2831*mtime) );\n    mtime = time*note2*10.0;\n    float melody = ( fract(sin(mtime*2.0)));\n    \n    float hihat = (2.0*fract(tact*12.0))<0.02?random(time):0.0;\n    float drum = (fract(tact*2.0))<0.05?random(time)+sin(8.0):0.0;\n    drum += (fract(tact*4.0))<0.05?random(time)+sin(8.0):0.0;\n    drum *= melody*0.3+0.7;\n    \n    //return vec2(noise);\n    vec2 result = 0.03*vec2(0.,(0.26+melody*2.0+bass*0.3));\n    result.x += 0.03*(0.3+bass);\n    result += 0.1*vec2(hihat);\n    result += 0.1*vec2(drum);\n    return result;\n}","name":"Sound","description":"","type":"sound"}]}