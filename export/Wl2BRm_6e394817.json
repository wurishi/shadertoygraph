{"ver":"0.1","info":{"id":"Wl2BRm","date":"1598555722","viewed":208,"name":"Minimalism #04","username":"Flopine","description":"Fourth piece of a shader serie about minimalism, how to do small and quick artwork that are about composition and animation.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","scanline","minimalist"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n\n#define TAU 6.2831853\n#define time(speed) fract(iTime*speed) \n#define square(puv,s) (max(abs(puv.x),abs(puv.y))-s)\n#define xor(a,b) ((1.-b)*a+(1.-a)*b)\n\nfloat frame (vec2 uv)\n{\n    float stripesy = floor(uv.y*15.)-.5;\n    float stripesx = floor(uv.x*15.)-.5;\n    \n    float squvx = uv.x + sin(time(stripesy*0.1)*TAU);\n    float squvy = uv.y + sin(time(stripesx*0.15)*TAU)*0.6;\n    \n \tfloat mask = smoothstep(0.01,0.02,square(vec2(squvx,uv.y),0.5));\n    mask = xor(mask,smoothstep(0.01,0.02,square(vec2(uv.x,squvy),0.5)));\n    \n    return mask;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 col = mix(vec3(0.01,0.06,0.),vec3(0.55,0.7,0.3),frame(uv*1.2)); \n        \n    // scanline\n    vec3 weight_G = vec3(1., 0.7, 1.);\n    vec3 weight_RB = vec3(0.7, 1., 0.7);\n    vec3 weight = mix(weight_G, weight_RB, mod(floor(fragCoord.y), 3.));\n    \n    fragColor = vec4(sqrt(col*weight),1.0);\n}","name":"Image","description":"","type":"image"}]}