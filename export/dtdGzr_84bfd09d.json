{"ver":"0.1","info":{"id":"dtdGzr","date":"1681907487","viewed":82,"name":"Coastal Road Traffic Lights","username":"Tinnaaaa","description":"Car driving along a picturesque coastal road with a stoplight","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["cardriving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define ss(a, b, t) smoothstep(a, b, t)\n#define SS(U) smoothstep(3./R.y,0.,U)\n\nfloat box(vec2 p, vec2 b)\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),3.0);\n}\n\nfloat circ(vec2 p, float r)\n{\n    return length(p)-r;\n}\n\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.66025404,0.5,0.977350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\nfloat hash(float n)\n{\n\treturn fract(sin(n)*43758.54);\n}\n\nfloat roadpoint(float n)\n{\n\tif (hash(n+0.5) > 0.75)\n\t\treturn 0.0;\n\tfloat z = (hash(n)-0.5)*1.9;\n\treturn sign(z) * pow(abs(z),2.0);\n}\n\nfloat noise(float x)\n{\n\tfloat p = floor(x);\n\tfloat f = fract(x);\n\tfloat p0 = roadpoint(p);\n\tfloat p1 = roadpoint(p+1.0);\n\tfloat p2 = roadpoint(p+2.0);\n\tfloat p3 = roadpoint(p+3.0);\n\tfloat a = (-p0*0.5 + 1.5*p1 - 1.5*p2 + p3*0.5);\n\tfloat b = p0 - 2.5*p1 + 2.0*p2 - 0.5*p3;\n\tfloat c = 0.5*p2 - 0.5*p0;\n\tfloat d = p1;\n\treturn d + f*(c + f*(b + f*a));\n}\t\n\nfloat road_offset(float pos)\n{\n\treturn noise(pos/90.0)*10.0\n\t\t+ noise(pos/500.0)*60.0;\n}\n\nfloat road_slope(float pos)\n{\t\n\treturn (road_offset(pos+4.0) - road_offset(pos-4.0))/8.0;\t\n}\n\n\nvec2 pix(vec2 uv, float sz)\n{\n    vec2 uv2 = uv/sz;\n    return  vec2(float(int(uv2.x)), float(int(uv2.y)))*sz;\n}\nfloat trafficLightState(float time) {\n    float cycleTime = min(time, 8.0);\n    if (cycleTime < 4.0) return 0.0; // Red\n    else if (cycleTime < 6.0) return 1.0; // Orange\n    else return 2.0; // Green the car starts\n}\n    \nfloat drawCar2(vec2 p) {\n    p = abs(p);\n    return length(max(p - vec2(0.05, 0.04), 0.0)) - 0.002;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    //Light trafic\n    vec2 trafficLightUV = (fragCoord.xy - vec2(iResolution.x * 0.5, iResolution.y * 0.9)) / iResolution.x;\n    vec2 trafficLightBoxUV = trafficLightUV * vec2(1.0, 2.5);\n    float trafficLightBox = SS(box(trafficLightBoxUV, vec2(0.05, 0.14)));\n\n    float lightState = trafficLightState(iTime);\n    vec3 trafficLightColor = vec3(0.0);\n\n    float lightMask = SS(circ(trafficLightUV, 0.03));\n\n    if (lightState < 1.0) {\n        trafficLightColor = vec3(1.0, 0.0, 0.0); // Red\n    } else if (lightState < 2.0) {\n        trafficLightColor = vec3(1.0, 0.5, 0.0); // Orange\n    } else {\n        trafficLightColor = vec3(0.0, 1.0, 0.0); // Green\n    }\n\n    vec4 trafficLightOutput = vec4(trafficLightColor, 1.0) * trafficLightBox * lightMask;\n    vec4 trafficLightFrame = vec4(0.0, 0.0, 0.0, 1.0) * trafficLightBox;\n\n    if (trafficLightBox > 0.0) {\n        fragColor = mix(trafficLightFrame, trafficLightOutput, lightMask);\n        return;\n    }\n    \n    \n    //Sea \n\tvec2 position = fragCoord.xy / iResolution.yy;   \n\tfloat y = position.y-0.62;\n\tif (position.y > 0.6) {\n\t\tfragColor = vec4(0.604,0.710,0.816,1.0);\n\t\treturn;\n\t} \n\ty = -y;\n\n\tfloat z = 1.0 / y;\n    float speed = lightState == 2.0 ? 3.5 : 0.1;\n\tfloat dist = pow(z,0.65); \n\tfloat spacing=5.0;\n\tfloat bottom_trackpos = iTime*speed*spacing + 1.0*spacing;\n\tfloat trackpos = (dist+iTime*speed)*spacing;\n\tfloat xcenter = -iResolution.x/iResolution.y*0.5;\n\tfloat averaged_slope = (road_slope(bottom_trackpos) + road_slope(bottom_trackpos - speed)) / 2.0;\n\tfloat base_slope = road_slope(bottom_trackpos);\n\tfloat slope = averaged_slope*0.70;\n\tfloat slope_offset = (0.82-y) * slope * 8.5; //\n\tfloat x = (position.x + xcenter - slope_offset) * z;\n\tfloat road_point = road_offset(bottom_trackpos);\n\troad_point = road_point - slope*3.5;\n\troad_point = road_point  + sin(iTime*1.0)*0.40;\n\tx -= road_point;\n\tx += road_offset(trackpos);\n\tfloat xa = abs(x);\n\tfloat phase = sin(trackpos);\n\tfloat state = phase > 0.0 ? 0.0 : 1.0;\n\tfloat darken = state == 0.1 ? 2.0 : 0.7;\n    \n    //position\n    vec2 p=position+vec2(-0.25+x*0.12, 0.0);\n    float sdb1=box( p-vec2(0.5,0.15), vec2(0.2,0.08)); \n    float sdLlantaIzq=box( p-vec2(0.3,0.1), vec2(0.02,0.05)); //roue\n    float sdLlantaDer=box( p-vec2(0.7,0.1), vec2(0.02,0.05));\n    \n    float sdLineaA=box( p-vec2(0.5,0.1), vec2(0.15,0.0015)); \n    float sdLineaB=box( p-vec2(0.5,0.22), vec2(0.15,0.0015)); \n    \n    \n    float sdLucesA=box( p-vec2(0.35,0.19), vec2(0.015,0.035)); \n    float sdLucesB=box( p-vec2(0.65,0.19), vec2(0.015,0.035)); \n    \n    \n    float sdVentanaA= sdHexagon( p-vec2(0.5,0.24), 0.13 );\n    float sdVentanaB= sdHexagon( p-vec2(0.5,0.24), 0.1 );\n        \n    \n    sdb1 = SS(sdb1);\n    sdLlantaIzq= SS(sdLlantaIzq);\n    sdLlantaDer= SS(sdLlantaDer);\n    \n    sdLineaA= SS(sdLineaA);\n    sdLineaB= SS(sdLineaB);\n    \n    \n    sdLucesA= SS(sdLucesA);\n    sdLucesB= SS(sdLucesB);\n    \n    sdVentanaA= SS(sdVentanaA);\n    sdVentanaB= SS(sdVentanaB);\n            \n    vec3 col =vec3 (0.0);\n    col=mix(col, vec3(0.0), sdVentanaA);\n    col=mix(col, vec3(0.914,0.376,0.086), sdVentanaB);\n    \n    float carBody = box(p - vec2(0.5, 0.15), vec2(0.2, 0.08));\n    //float carRoof = box(p - vec2(0.5, 0.25), vec2(0.12, 0.04));\n    float carWindshield = box(p - vec2(0.5, 0.12), vec2(0.10, 0.02));\n\n    carBody = SS(carBody);\n    //carRoof = SS(carRoof);\n    carWindshield = SS(carWindshield);\n\n    col = mix(col, vec3(0.0), carBody);\n\n   // col = mix(col, vec3(0.910,0.949,0.922), carRoof);*/\n    col = mix(col, vec3(0.933,0.788,0.788), carWindshield);   \n    if (xa > 3.5)\n        fragColor = vec4(0.165,0.655,0.776,1) * mix(1.0,darken * phase,y);\n    else if (xa > 3.0) {\n\t    fragColor = (state==0.0 ? vec4(0.902,0.902,0.902,1) : vec4(0.259,0.325,0.663,1));\n\t}\n    else if (state == 0.0 && abs(xa - 0.55) < 0.05)\n        fragColor = vec4(0.953,0.929,0.929,1);\n    else\n        fragColor = vec4(0.627,0.612,0.612,1.0);\n        \n    fragColor =mix(fragColor, vec4(col,1.0),sdVentanaA);\n    fragColor =mix(fragColor, vec4(col,1.0),sdVentanaB);  \n    fragColor =mix(fragColor, vec4(col,1.0),sdb1);\n    fragColor =mix(fragColor, vec4(col,1.0),sdLlantaIzq);\n    fragColor =mix(fragColor, vec4(col,1.0),sdLlantaDer);\n    fragColor =mix(fragColor, vec4(col,1.0),sdLineaA);\n    fragColor =mix(fragColor, vec4(col,1.0),sdLineaB);\n    fragColor =mix(fragColor, vec4(col,1.0),sdLucesA);\n    fragColor =mix(fragColor, vec4(col,1.0),sdLucesB);\n  ;\n}\n","name":"Image","description":"","type":"image"}]}