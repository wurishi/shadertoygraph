{"ver":"0.1","info":{"id":"4stSz4","date":"1457993662","viewed":129,"name":"edge fork","username":"penna","description":"forked","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["forkedge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Bump up the iterations!\n// More iterations means more detail + aliasing\n#define ITERATIONS 20\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    float mouseDown = step(.05, iMouse.z);\n    float scale = mix(1., .4, mouseDown);\n    vec2 look = (iMouse.xy / iResolution.xy - .5) * 3. * mouseDown;\n    \n    float time = iTime * 2. + 15.;\n    vec2 res = iResolution.xy;\n\tvec2 uv = fragCoord.xy / res - vec2(.5) + look;\n    uv *= vec2(res.x / res.y, 1.) * 4. * scale;\n    \n    float len = dot(uv, uv) * .3 - .4;\n    \n    vec3 z = sin(time * vec3(.23, .19, .17));\n    for (int i = 0; i < ITERATIONS; i++) {\n        z += cos(z.zxy + uv.yxy * float(i) * len);\n    }\n    \n    float val = z.r * .06 + .3;\n    val -= smoothstep(.1, -.3, len) * 1.5 + len * .3 - .4;\n    fragColor = vec4(0.1, 0.0, 0.6, 0.8) * vec4(vec3(max(val, .1)), 1.);\n    \n}","name":"Image","description":"","type":"image"}]}