{"ver":"0.1","info":{"id":"wtsfRj","date":"1597213440","viewed":65,"name":"Two tadpoles","username":"akanarika","description":"2 swimming tadpoles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float calc(vec2 uv, float ratio) {\n    float col = 1.0;\n    float tail = smoothstep(-.1, .8, abs(.9 * sin(uv.x - .1)));\n    if (uv.x < -.15 && uv.x > -ratio && abs(uv.y * 1.1) < .32) {\n        col = smoothstep(0., .05 * (1. - tail) * (1. - sin(uv.x)), 2. * abs(uv.y + .2 * sin(iTime * 10.) * sin(uv.x) * sin(uv.x) * sin(uv.x)) * tail);\n    } else {\n        col = smoothstep(0.7, .8, 3.5 * length(vec2((uv.x - 0.11) * .8, uv.y)));\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2. * (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n    \n    float ratio = iResolution.x / iResolution.y;\n    \n    vec2 p = vec2(uv.x + step(uv.y, 0.) - .5, abs(uv.y) - .4 + (step(uv.y, 0.) - .2) * sin(iTime + step(uv.y, 0.)) * .2);\n\n    float col = calc(p, ratio);\n    \n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}