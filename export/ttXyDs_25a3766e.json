{"ver":"0.1","info":{"id":"ttXyDs","date":"1593415153","viewed":82,"name":"Checker Dance","username":"jdyerjdyer","description":"Nice static like noise texture focusing on points rotating through time.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["static","rotation","justforfun","noisetexture","determinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Skip slow intro portion\n    float time = iTime + 30.0;\n    \n    //Get angle based on time in radians and calculate x, y components.\n    float theta = mod(iTime, 360.0) * 3.14159 / 360.0;\n    float s = sin(theta);\n    float c = cos(theta);\n\n    //Rotate around the origin by the angle.\n    vec2 coord = vec2(fragCoord.x * c + fragCoord.y * s, -fragCoord.x * s + fragCoord.y * c) * time / 30.0;\n\n    //Default color is black.\n    float red = 0.0;\n    float green = 0.0;\n    float blue = 0.0;\n\n    //Get a distance near a point.\n    float rmod = mod(coord.x, 4.0);\n    float gmod = mod(coord.y, 4.0);\n    float bmod = (mod(coord.x, 4.0) + mod(coord.y, 4.0)) / 2.0;\n\n    //If distance is near enough, calculate gradient from that point.\n    if (rmod < 8.0) {\n        red = 1.0 / rmod;\n    }\n\n    if (gmod < 8.0) {\n        green = 1.0 / gmod;\n    }\n    \n    if (bmod < 8.0) {\n        blue = 1.0 / bmod;\n    }\n\n    //Assign the color.\n    fragColor = vec4(red, green, blue, 1.0);\n\n}\n\n","name":"Image","description":"","type":"image"}]}