{"ver":"0.1","info":{"id":"fsl3Dr","date":"1615807497","viewed":44,"name":"elem deck 004 thewall","username":"xile2013","description":"https://github.com/patriciogonzalezvivo/PixelSpiritDeck/blob/master/00-elements/004-the_wall.frag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["deck"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float stroke(float x, float s, float w) {\n  float d = step(s,x+w*.5) - step(s,x-w*.5);\n  return clamp(d, 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 color = vec3(0.);\n    \n    if (iResolution.y > iResolution.x) {\n      uv.y *= iResolution.y/iResolution.x;\n      uv.y -= (iResolution.y*.5-iResolution.x*.5)/iResolution.x;\n    } else {\n      uv.x *= iResolution.x/iResolution.y;\n      uv.x -= (iResolution.x*.5-iResolution.y*.5)/iResolution.y;\n    }\n    \n    color += stroke(uv.x, .5, .15);\n    \n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}