{"ver":"0.1","info":{"id":"7lcGD8","date":"1636064625","viewed":84,"name":"Vornoi water","username":"Wildric","description":"An attempt to make water using Vornoi","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","water","vornoi","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    //----\n    const float cellsRootSquare = 10.0;\n    const float spd = 4.0;\n    const float sep = 1.1;\n    const vec3 additiveColor = vec3(0.11, 1.0, 1.0);\n    //-----\n    const float sinAmplitude = 0.15;\n        const float movementAmplitude = 6.28;\n    float minDistance = 1.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col =additiveColor;\n    uv *= cellsRootSquare;\n    \n    vec2 intPart = floor(uv);\n    vec2 floatPart = fract(uv);\n    \n    for (int i = 0; i <2; i++) {\n        for (int j = 0; j<2; j++)\n        {\n            vec2 neighbourCell = vec2(float(j), float(i));\n            vec2 ourPoint = random2(neighbourCell + intPart);\n            ourPoint =  sinAmplitude*(1.0 + sin(iTime*spd + movementAmplitude*ourPoint));\n            minDistance = min(minDistance, length(neighbourCell + ourPoint - floatPart));\n        }\n    };\n\n    col +=sep*minDistance;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}