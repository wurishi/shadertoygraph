{"ver":"0.1","info":{"id":"4lGfDd","date":"1544462626","viewed":784,"name":"best scrambling offset","username":"FabriceNeyret2","description":"Video [url]https://www.youtube.com/watch?v=sj8Sg8qnjOg[/url] pretends golden ratio gives the best Sunflower because it's the \"most irrational\" number.\nI find the argument a lot less convincing with linear offsets rather than circular.\nMouse.y control. ","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["random","hash","sunflower","short","goldenration","lowdiscrepency","irationnal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N  40.\n#define PHI .61803398875 // indeed, -PHI ( = PHI-1 )\n#define GAP 4.\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy, J=vec2(1);\n         U /= R.y; U.x -= .5*R.x/R.y;\n    O -= O;\n\n    O.r += float ( abs(U.y-PHI) < 1. / R.y );  // red line at y=PHI\n    O.g += float ( abs(U.x) < 1. / R.y );      // green line\n    \n    float r = iMouse.y/R.y, y, l;\n    if (r==0.) r = PHI;\n    \n    if (U.x > 0. )                             // right: Sunflower\n        U.y -= .5, l = length(U), J.x = l*6.28,\n        U = vec2( atan(U.y,U.x)/6.28 , l );\n    \n    y = floor(U.y*N);\n    \n    U = U*N +vec2(GAP*r*y,0);                     // dot offsetting \n    \n    if ( mod(U.x+.5,GAP) < 1. )                   // draw dots\n        U = fract( U +vec2(.5,0) ) -.5,\n        O += smoothstep (2.*N/R.y,0.,length(U*J)-.3);\n}","name":"Image","description":"","type":"image"}]}