{"ver":"0.1","info":{"id":"Xf33RB","date":"1711810063","viewed":46,"name":"Fork of: Basic print PMalin text","username":"bills","description":"Fork of https://www.shadertoy.com/view/Dl2GWy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["utility","numbers","font","digits"],"hasliked":0,"parentid":"Dl2GWy","parentname":"Basic print number example"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// See Common for printing code\nvec3 addTextOverlays( vec2 fragCoord, vec2 origin, float valueToPrint, vec3 color ) {\n\n  vec2 vFontSize = vec2( 8.0, 15.0 );\n  \n  float customDigit = PrintValue( ( fragCoord - origin ) / vFontSize, valueToPrint, 1.0, 1.0 );\n  \n  return mix( vec3( 0. ), color, customDigit );\n  \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n  // lower right\n  vec3 textOverlays = addTextOverlays( fragCoord, vec2( iResolution.x - 50.0, 25.0 ), iTime, vec3( 1., 1., 0. ) );\n  \n  // lower left\n  textOverlays += addTextOverlays( fragCoord, vec2( 50.0, 25.0 ), iTime, vec3( 1., 0., 1. ) );\n  \n  // top left\n  textOverlays += addTextOverlays( fragCoord, vec2( 50.0, iResolution.y - 25.0 ), iTime, vec3( 0., 1., 1. ) );\n  \n  // top right\n  textOverlays += addTextOverlays( fragCoord, iResolution.xy - vec2( 50.0, 25.0 ), iTime, vec3( 1., 1., 1. ) );\n  \n  fragColor = vec4( textOverlays, 1.0 );\n  \n}\n\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// GLSL Number Printing - @P_Malin\n// Creative Commons CC0 1.0 Universal (CC-0) \n// https://www.shadertoy.com/view/4sBSWW\n\nfloat DigitBin( const int x ) {\n    return x==0 ? 480599.0 : x==1 ? 139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\nfloat PrintValue( vec2 vStringCoords, float fValue, float fMaxDigits, float fDecimalPlaces ) {       \n  if( (vStringCoords.y < 0.0) || (vStringCoords.y >= 1.0) )\n    return 0.0;\n    \n  bool bNeg = ( fValue < 0.0 );\n  fValue = abs(fValue);\n    \n  float fLog10Value = log2(abs(fValue)) / log2(10.0);\n  float fBiggestIndex = max( floor(fLog10Value), 0.0 );\n  float fDigitIndex = fMaxDigits - floor(vStringCoords.x);\n  float fCharBin = 0.0;\n  if( fDigitIndex > (-fDecimalPlaces - 1.01) ) {\n    if(fDigitIndex > fBiggestIndex) {\n      if((bNeg) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin = 1792.0;\n    }\n    else {\n      if( fDigitIndex == -1.0 ) {\n\t    if( fDecimalPlaces > 0.0 )\n          fCharBin = 2.0;\n\t}\n    else {\n      float fReducedRangeValue = fValue;\n      if(fDigitIndex < 0.0) { fReducedRangeValue = fract( fValue ); fDigitIndex += 1.0; }\n\t  float fDigitValue = (abs(fReducedRangeValue / (pow(10.0, fDigitIndex))));\n        fCharBin = DigitBin(int(floor(mod(fDigitValue, 10.0))));\n      }\n    }\n  }\n  return floor(mod((fCharBin / pow(2.0, floor(fract(vStringCoords.x) * 4.0) + (floor(vStringCoords.y * 5.0) * 4.0))), 2.0));\n}\n\n\n","name":"Common","description":"","type":"common"}]}