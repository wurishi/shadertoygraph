{"ver":"0.1","info":{"id":"csjXRD","date":"1669986248","viewed":89,"name":"Inner Voices Intro BG","username":"HenriPK","description":"A simple wavy shader for the intro of the game Inner Voices by Pedro Braga (not yet announced).","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["earthbound","battlebackground"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n#define DARK\n\nvec3 get_pattern(vec2 uv) {\n    \n    #ifdef LIGHT\n    vec3 a = vec3(34, 11, 82)/255.;\n    vec3 b = vec3(52, 15, 105)/255.;\n    #elif defined OTHER\n    vec3 a = vec3(84, 40, 204)/255.;\n    vec3 b = vec3(80, 153, 104)/255.;\n    #else\n    vec3 a = vec3(34, 11, 82)/255.*0.5;\n    vec3 b = vec3(52, 15, 105)/255.*0.7;\n    #endif\n    \n    float amt = TAU * 5.;\n    \n    return vec3(cos(uv.x*amt)+cos(uv.y*amt*iResolution.y/iResolution.x) > 0.0 ? a : b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 rr = vec2(240., 135.);\n    vec2 ff = floor(fragCoord / iResolution.xy * rr);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ff/rr;\n    \n\n    // Split the uv;\n    if (int(ff.y) % 2 == 0) {\n        \n        uv.x = -uv.x;\n    }\n    \n    // Scroll the uv!\n    uv += iTime * 0.3;\n    \n    float m = 2.;\n    float n = 0.03;\n\n    uv.x += sin(uv.y * TAU * m + iTime * 3.) * n;\n    \n\n   // vec3 col = vec3(uv, 1.0);\n    vec3 col = get_pattern(uv);\n    \n    #ifdef DARK\n    if (int(ff.y) < 24 || int(ff.y) > int(rr.y) - 24) {\n        col = vec3(0.0);\n    }\n    #endif\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}