{"ver":"0.1","info":{"id":"XssfWX","date":"1498507529","viewed":196,"name":"Terrainz 2","username":"VoidChicken","description":"A basic icy terrain scene with motion blur.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["3d","terrain","raymarch","blur","perlin","ice","motion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage ( out vec4 c, vec2 u ) {\n\tvec2 R=iResolution.xy,U=u/R;\n    c=texture(iChannel1,U);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 sun = vec3(0,.2,1);\nvec3 sky(vec3 d) {\n    vec3 top = vec3(1);\n    vec3 sky = vec3(0,.7,1);\n\tvec3 c = mix(sky,top,.5+d.y/2.);\n    float q =dot(normalize(d*vec3(iResolution.x/iResolution.y,1,1)),normalize(sun)); \n    if(q>0.99) {\n    \tc+=vec3(1,1,0)*((q-.99)/.01);    \n    }\n    return c;\n}\nfloat smin( float a, float b )\n{\n    float k = .1;\n    a = pow( a, k ); b = pow( b, k );\n    return pow( (a*b)/(a+b), 1.0/k );\n}\nvec2 rotate(vec2 o, float m) {\n    float f = atan(o.x,o.y)+m;\n    return vec2(cos(f),sin(f))*length(o);\n}\n\nfloat hash(vec3 p) \n{\n    p  = fract( p*0.3183099+.1 );\n\tp *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    return mix(mix(mix( hash(p+vec3(0,0,0)), \n                        hash(p+vec3(1,0,0)),f.x),\n                   mix( hash(p+vec3(0,1,0)), \n                        hash(p+vec3(1,1,0)),f.x),f.y),\n               mix(mix( hash(p+vec3(0,0,1)), \n                        hash(p+vec3(1,0,1)),f.x),\n                   mix( hash(p+vec3(0,1,1)), \n                        hash(p+vec3(1,1,1)),f.x),f.y),f.z);\n}\nfloat fbm(vec3 p) {\n\tfloat m = 0.;\n    for (float i=0.;i<10.;i++){\n        m+=noise(p*exp2(i))/exp2(i);\n    }\n    return m;\n}\nfloat terrain(vec3 p) {\n\tfloat t = fbm(p/13.)*7.;\n    t=max(t,5.);\n    return p.y-t;\n}\nfloat sig(float i) {\n\treturn smoothstep(0.,1.,i);\n}\nvec4 tex(vec2 uv) {\n\tvec4 m = vec4(0);\n    for (float i = 1.; i < 15.; i++) {\n        m+=texture(iChannel0,uv*exp2(i))/exp2(i);\n    }\n    return m;\n}\nfloat map(vec3 p,out vec3 c) {\n    float x = 10000.;\n    float b = min(x,terrain(p));\n    if(b!=x) {\n        vec3 t = mix(tex(p.xz/2.).grb,vec3(1),sig((b+p.y-6.)/2.));\n        c=vec3((p.y)/10.*t);\n        \n        if(abs((-(b-p.y))-5.)<.1)\n            c=mix(sky(vec3(0,1,0)),vec3(0,.5,1),.6);\n    }\n\treturn b;\n}\nfloat trace(vec3 o, vec3 d) {\n    float t = 5.;\n    vec3 m;\n    for (int i = 0; i < 100; i++) {\n        if(t>50.)break;\n     \tt+=map(o+d*t,m)*.7;\n    }\n    return t;\n}\n\nvec3 normal(vec3 x)\n{\n    vec2 e = vec2( .01, 0.0 );\n    vec3 i = vec3(0);\n    return normalize( vec3( map(x+e.xyy,i) - map(x-e.xyy,i),\n                            map(x+e.yxy,i) - map(x-e.yxy,i),\n                            map(x+e.yyx,i) - map(x-e.yyx,i) ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R=iResolution.xy,uv = fragCoord.xy / R;\n    vec3 c, o =vec3(0,10,iTime*10.),d=vec3(uv*2.-1.,2);\n    o.y=-terrain(vec3(o.xz,0).xzy)+2.5;\n    c = sky(d);\n    d.x*=R.x/R.y;\n    d=normalize(d);\n    float t = trace(o,d);\n    vec3 h = o+d*t;\n    vec3 col = vec3(0),z;\n    float b = map(h,col);\n    float sf = 1.;\n    if (b<.01) {\n        vec3 n = normal(h);\n        c=col;\n        \n        float ao = (length(n)/10.-map(h+n/10.,z));\n        \n        c-=ao;\n        sf=t/50.;\n        c=mix(c,sky(d),sf);\n    }\n    float si = sign(sf-.99);\n\tvec4 fc = mix (max(vec4(mix(c,vec3(0),length(uv-.5)/2.),1.0),0.0),texture(iChannel1,uv),.7);\n    \n    \n    fragColor=vec4(fc.xyz,1.);\n}","name":"Buf A","description":"","type":"buffer"}]}