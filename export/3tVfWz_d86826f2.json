{"ver":"0.1","info":{"id":"3tVfWz","date":"1614189288","viewed":135,"name":"GLSL synth test for platforms.","username":"gyabo","description":"GLSL synth test for per platforms with fp precision.","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["glslsound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gettex(vec2 a) {\n    vec2 iuv = vec2(a);\n\tfloat col = sin(dot(iuv, iuv) * 0.1) * 2.5;\n    return (vec4(col * vec4(1,2,4,1) * 0.25)).xyz;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 dir = normalize(vec3(uv, 1.0));\n    vec3 pos = vec3(iTime, 0, iTime * 0.5);\n    float t = 0.0;\n    for(int i = 0 ; i < 100; i++) {\n        vec3 p = dir * t + pos;\n        t += 2.0 - abs(p.y);\n    }\n    vec3 p = dir * t + pos;\n    fragColor = vec4(t * 0.02 + gettex(p.xz).xyz, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float getnote(float a) {\n  return pow(2.0, a / 12.0) * 1e3;\n}\n\n\n\n//#define KNB_SYNTH\n\nfloat getwave(float a, float ph) {\n  float k = 0.0;\n  float o = 1.0;\n  for(int b = 0 ; b < 2; b++) {\n    float det = 1.0;\n    for(int i = 0 ; i < 2; i++) {\n      float n = getnote(a);\n      float ka = (sin(a + o * det * n * ph));\n      ka += (sin(a + 0.5 + o * det * n * ph));\n      k += ka;\n#ifdef KNB_SYNTH\n      if(mod(a, 11.0) > 3.0)\n        k += fract(ka + a) * 2.0 - 1.0;\n\n      if(mod(a, 7.0) > 2.0)\n        k += ka > 0.65 ? 1.0 : -1.0;\n#endif //KNB_SYNTH  \n      det *= 0.99;\n    }\n    o *= 0.5;\n  }\n\n#ifdef KNB_SYNTH\n  return sin(k * 0.153) * 0.3;\n#else //KNB_SYNTH\n  return sin(k * 0.53) * 0.3;\n#endif //KNB_SYNTH  \n}\n\nvec2 mainSound( int samp, float time ) {\n  vec2 a = vec2(0.0);\n  float base = 50.0;\n  float speed = 25.0;\n  float btph = (1.0 / 128.0) * speed;\n  float sq = fract(time * btph / 4.0);\n  float tm = fract(time * btph) * 2.0;\n  float ph = fract(time * btph);\n  float oct = -12.0;\n  if(sq >= 0.5)\n    base -= 3.0;\n\n  if(mod(tm, 0.25) >= 0.125)\n    oct += 12.0;\n\n  if(mod(tm, 0.125) >= 0.0625)  \n    oct += 7.0;\n\n  if(mod(tm, 2.0) >= 1.5)  \n    oct += 7.0;\n\n  if(tm > 0.875) {\n    float decay = exp(-1.7*(tm + 0.125));\n    vec2 k = vec2(0.0);\n    k += vec2(0.8, 0.5) * getwave(-12.0 + oct + base + 0.0 - 1.0 - 7.0, ph);\n    k += vec2(0.8, 0.5) * getwave(oct + base + 0.0 - 1.0 - 7.0, ph);\n    k += vec2(0.5, 0.8) * getwave(base + 7.0 - 1.0 - 7.0, ph);\n    k += vec2(0.6, 0.8) * getwave(oct + base + 11.0 - 2.0 - 2.0, ph);\n    k += vec2(0.6, 0.7) * getwave(base + 16.0 - 2.0 - 3.0, ph);\n    a += k * decay;\n  }\n  if(tm > 0.50) {\n    float decay = exp(-1.8*(tm + 0.50));\n    vec2 k = vec2(0.0);\n    k += vec2(0.5, 0.9) * getwave(-12.0 + oct + base + 0.0 - 1.0, ph);\n    k += vec2(0.5, 0.9) * getwave(oct + base + 0.0 - 1.0, ph);\n    k += vec2(0.7, 0.2) * getwave(base + 7.0 - 1.0, ph);\n    k += vec2(0.2, 0.6) * getwave(oct + base + 11.0 - 2.0, ph);\n    k += vec2(0.7, 0.6) * getwave(base + 16.0 - 2.0, ph);\n    a += k * decay;\n  }\n  if(tm > 0.0) {\n    float decay = exp(-1.9*(tm + 1.0));\n    vec2 k = vec2(0.0);\n    k += vec2(0.9, 0.3) * getwave(-12.0 + oct + base + 0.0, ph);\n    k += vec2(0.9, 0.3) * getwave(oct + base + 0.0, ph);\n    k += vec2(0.2, 0.7) * getwave(base + 7.0, ph);\n    k += vec2(0.7, 0.5) * getwave(oct + base + 11.0, ph);\n    k += vec2(0.6, 0.7) * getwave(base + 16.0, ph);\n    a += k * decay;\n  }\n  a = sin(a * 3.141592);\n  \n  return (a * min(1.0, time * 0.5));\n}\n\n","name":"Sound","description":"","type":"sound"}]}