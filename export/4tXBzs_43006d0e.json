{"ver":"0.1","info":{"id":"4tXBzs","date":"1512846838","viewed":139,"name":"Kaleido Gingham Thing","username":"jakerr","description":"Learning tiling strategies","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tiles","gingham"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RAD (3.1415/180.0)\n\nvoid rot(inout vec2 p, float rad) {\n p *= mat2(\n     cos(rad),\n     -sin(rad),\n     sin(rad),\n     cos(rad));\n}\n\nvec4 shapes(vec2 p) {\nreturn vec4(\n    smoothstep(0.0, 0.01, p),\n    smoothstep(0.0, 0.01, p).y,\n    1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord/iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.y;\n    float sc = 7.0 - abs(sin(iTime*3.14159/15.)*3.0);\n    vec2 p = uv*sc - mouse * sc + 0.5;\n    rot(p, sin(cos(iTime/ 20.0)));\n    vec2 reflect = vec2(1.0);\n    if (mod(p.x, 2.0) > 1.0) {\n        reflect.x = -1.0;\n    } if (mod(p.y, 2.0) > 1.0) {\n        reflect.y = -1.0;\n    }\n    p = fract(p) - 0.5;\n    p *= reflect;\n    rot(p, iTime);\n    vec4 c = shapes(p); \n    for (int i = 0; i < 4; i++) {\n    rot(p, radians(15.0));\n    c = mix(c, shapes(p), 0.4);\n    }\n    fragColor=(c);\n}","name":"Image","description":"","type":"image"}]}