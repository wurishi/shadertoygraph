{"ver":"0.1","info":{"id":"WtKGDh","date":"1578834729","viewed":405,"name":"nebula 112","username":"aodnawg","description":"inspired https://www.shadertoy.com/view/4tlSzl","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["nebula"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float n11(float p) {\n\treturn fract(sin(p*154.101)*313.019);\n} \nfloat n21(vec2 p) {\n    float n = sin(dot(p, vec2(7, 157)));    \n    return n;\n}\nvec3 hash33(vec3 p){ \n    float n = sin(dot(p, vec3(7, 157, 113)));    \n    return fract(vec3(2097152, 262144, 32768)*n); \n}\n\nfloat voronoi(vec3 p){\n\tvec3 b, r, g = floor(p);\n\tp = fract(p);\n\tfloat d = 1.; \n\tfor(int j = -1; j <= 1; j++) {\n\t    for(int i = -1; i <= 1; i++) {\n\t\t    b = vec3(i, j, -1);\n\t\t    r = b - p + hash33(g+b);\n\t\t    d = min(d, dot(r,r));\n\t\t    b.z = 0.0;\n\t\t    r = b - p + hash33(g+b);\n\t\t    d = min(d, dot(r,r));\n\t\t    b.z = 1.;\n\t\t    r = b - p + hash33(g+b);\n\t\t    d = min(d, dot(r,r));\n\t    }\n\t}\n\t\n\treturn d; // Range: [0, 1]\n}\n\nvec3 hsl2rgb( in vec3 c ){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0,1.0);\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nfloat nebula(in vec3 p) {\n    float amp = 1., sum=0., z= 1., m = 0.;\n    for(int i=1; i<=10;i++){\n    \tvec3 t = vec3(0., 0., p.z+iTime*.1);\n        z *= 2.;\n        m += voronoi(vec3(p.xy*z, 1.)+t) *amp;\n        sum += amp;\n        amp *= .5;\n    }\n    m /= sum;\n    return pow(m, 1.5);\n}\n\nfloat star(vec3 p) {\n    float z = 16.;\n    float t = p.z;\n    vec2 gv = fract(p.xy*z)-.5;\n    vec2 id = floor(p.xy*z);\n    gv.x += sin(n21(id)*354.23)*.3;\n    gv.y += sin(n11(n21(id))*914.19)*.3;\n    float r = n11(n21(id));\n    float m =  .1*n11(r)*abs(sin(p.z+r*133.12))*.4/length(gv)*.1;\n    return m;\n}\n\nfloat stars(in vec3 p) {\n    float z= 1., m = 0.;\n    for(int i=1; i<=10;i++){\n    \tvec3 t = vec3(0., 0., p.z+iTime*.2);\n        z *= 2.;\n         m += star(vec3(p.xy*z, 1.)+t);\n    }\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(.0);\n    \n    vec3 col1 = normalize(vec3(159., 38., 106.))*nebula(vec3(uv,1.));\n    vec3 col2 = normalize(vec3(106., 110., 185.))*nebula(vec3(uv,1298.));\n    col += mix(col1,col2,5.);\n    float m = stars(vec3(uv, iTime*2.));\n    col += vec3(m);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}