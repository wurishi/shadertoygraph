{"ver":"0.1","info":{"id":"dlSGRD","date":"1672929219","viewed":78,"name":"sp4ghet logo","username":"sp4ghet","description":"Designed by Pinieon, just rendering the SVG","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["logo","svg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define logo_res vec4(1280, 1280, 1, 1)\n\n#define PI (3.14159265)\n#define TAU (6.28318530718)\n\n#define cb(x) ((x)*(x)*(x))\n#define sq(x) ((x)*(x))\n#define saturate(x) (clamp((x), 0., 1.))\n\nvec2 cubic_bezier(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t){\n    return cb(1.-t)*p0 + 3.*sq(1.-t)*t*p1 + 3.*(1.-t)*sq(t)*p2 + cb(t)*p3;\n}\n\nvec2 derivative(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t){\n    return -3.*sq(1.-t)*p0 + (3.*sq(1.-t) - 6.*(1.-t)*t)*p1 + (6. * (1.-t) * t - 3. * sq(t))*p2 + 3. * sq(t) * p3;\n}\n\nconst float SENTINEL = -197.98;\nvec3 solveCubic(float a, float b, float c, float d){\n    float p = (3. * a * c - sq(b)) / (3. * sq(a));\n    float q = (2. * cb(b) - 9. * a * b * c + 27. * sq(a) * d) / (27. * cb(a));\n\n    float offset = -b / (3.*a);\n    if(abs(p) < 0.00001 && abs(q) < 0.00001){\n        return vec3(offset, SENTINEL, SENTINEL);\n    }\n    float det = sq(q) / 4. + cb(p) / 27.;\n    if(det == 0. && abs(p) > 0.00001){\n        return vec3(3.*q / p + offset, - 1.5 * q / p + offset, SENTINEL);\n    }\n    if(det < 0. && abs(p) > 0.00001){\n        float u = .333333333333333 * acos(1.5 * q * sqrt(-3.0 / p) / p);\n        float v = 2. * sqrt(-(1. / 3.) * p);\n        return vec3(v * cos(u), v * cos(u - (2./3.) * PI), v * cos(u - (4./3.) * PI)) + offset;\n    }\n\n    //https://fortran-lang.discourse.group/t/cardanos-solution-of-the-cubic-equation/111/7\n    float tempa = -0.5 * q + sqrt(det),\n    tempb = -0.5 * q - sqrt(det);\n    float cardano = sign(tempa)*pow(abs(tempa), 0.333333) + sign(tempb)*pow(abs(tempb), 0.333333);\n\n    return vec3(cardano + offset, SENTINEL, SENTINEL);\n}\n\nvec3 lineL(vec2 uv, vec2 p, float x, float y){\n    vec2 to = vec2(x,y);\n    float miny = min(p.y, to.y);\n    float maxy = max(p.y, to.y);\n\n    float wind = 0.;\n    float t = (uv.y - p.y) / (to.y - p.y);\n    float ix = mix(p, to, t).x;\n    if(miny == maxy){\n        ix = min(p.x, to.x);\n        t = 0.;\n    }\n    if(t == saturate(t) && ix > uv.x){\n        wind = -sign(to.y - p.y);\n    }\n    return vec3(x, y, wind);\n}\n\n// https://www.pokitec.com/research/FillingClosedBezierPaths.html\nvec3 bezierC(vec2 uv, vec2 p, float x1, float y1, float x2, float y2, float x3, float y3){\n    vec2 q = vec2(x1, y1);\n    vec2 r = vec2(x2, y2);\n    vec2 s = vec2(x3, y3);\n    p/=logo_res.xy;\n    q/=logo_res.xy;\n    r/=logo_res.xy;\n    s/=logo_res.xy;\n    uv/=logo_res.xy;\n\n    float miny = min(p.y, min(q.y, min(r.y, s.y)));\n    float maxy = max(p.y, max(q.y, max(r.y, s.y)));\n    float wind = 0.;\n    if(uv.y > maxy || uv.y < miny){\n        return vec3(vec2(x3, y3), wind);\n    }\n\n    float a = -p.y + 3. * q.y - 3. * r.y + s.y;\n    float b = 3. * p.y - 6. * q.y + 3. * r.y;\n    float c = -3. * p.y + 3. * q.y;\n    float d = p.y;\n    vec3 ts = solveCubic(a,b,c,d - uv.y);\n\n    if(ts.x != SENTINEL && ts.x == saturate(ts.x) && cubic_bezier(p,q,r,s,ts.x).x > uv.x){\n        vec2 df = derivative(p,q,r,s,ts.x);\n        wind += sign(df.y / df.x);\n    }\n    if(ts.y != SENTINEL && ts.y == saturate(ts.y) && cubic_bezier(p,q,r,s,ts.y).x > uv.x){\n        vec2 df = derivative(p,q,r,s,ts.y);\n        wind += sign(df.y / df.x);\n    }\n    if(ts.z != SENTINEL && ts.z == saturate(ts.z) && cubic_bezier(p,q,r,s,ts.z).x > uv.x){\n        vec2 df = derivative(p,q,r,s,ts.z);\n        wind += sign(df.y / df.x);\n    }\n\n    return vec3(vec2(x3, y3), wind);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 pt = (uv * 2. - 1.) * vec2(iResolution.x / iResolution.y, 1.);\n\n    vec3 c = vec3(0.);\n\n    vec3 d = vec3(550.59,822.09, 0.);\n    float wind = 0.;\n\n    pt *= .5 * logo_res.xy;\n    pt += .5 * logo_res.xy;\n    pt.y = logo_res.y - pt.y;\n    d = bezierC(pt, d.xy, 550.59, 822.09, 556.87, 813.02, 564.82, 802.22);\n    wind += d.b;\n\n\n    d = bezierC(pt, d.xy, 574.25, 789.42, 590.48, 776.34, 602.77, 772.15);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 631.68, 762.30, 632.85, 744.93, 623.48, 735.64);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 617.76, 729.98, 601.52, 728.20, 567.73, 734.65);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 609.40, 706.37, 664.35, 717.76, 695.53, 728.41);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 747.18, 746.05, 757.54, 680.54, 701.96, 673.1);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 669.38, 668.74, 638.60, 669.54, 585.45, 698.79);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 634.56, 648.48, 669.69, 653.65, 713.38, 595.32);\n    wind += d.b;\n\n    d = bezierC(pt, d.xy, 733.00, 566.46, 912.78, 302.02, 912.78, 302.02);\n    wind += d.b;\n    d = lineL(pt, d.xy, 691.92, 147.22);\n    wind += d.b;\n    d = lineL(pt, d.xy, 221.13,821.42);\n    wind += d.b;\n    d = lineL(pt, d.xy, 550.59,822.09);\n    wind += d.b;\n    float val = mod(wind,2.);\n\n\n    wind = 0.;\n    d.xy = vec2(808.85,526.73);\n    d = bezierC(pt, d.xy, 808.85,526.73, 792.5,550.08, 776.05,573.68);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 755.09,603.73, 739.13,611.38, 721.11,629.);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 708.26,641.56, 706.28,656.8, 725.41,662.57);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 813.93,689.27, 832.53,763.52, 755.45,756.48);\n    wind += d.b;\n    d = bezierC(pt, d.xy, 706.69,752.03, 634.97,768.56, 589.99,836.01);\n    wind += d.b;\n    d = lineL(pt, d.xy, 395.94,1111.69);\n    wind += d.b;\n\n\n    d = lineL(pt, d.xy, 739.05,1111.69);\n    wind += d.b;\n    d = lineL(pt, d.xy, 1033.54,685.8);\n    wind += d.b;\n    d = lineL(pt, d.xy, 808.85,526.73);\n    wind += d.b;\n    val += mod(wind,2.);\n\n    c = vec3(val);\n\n\n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}