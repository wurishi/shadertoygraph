{"ver":"0.1","info":{"id":"XsKBD1","date":"1528692200","viewed":107,"name":"A box of nothing","username":"Veggiebob","description":"It's pretty basic: a box","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texture","box"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool insideBox (vec3 point, vec3 boxPos, vec3 boxDim){\n    if (point.x>boxPos.x&&point.x<boxPos.x+boxDim.x&&\n            point.y>boxPos.y&&point.y<boxPos.y+boxDim.y&&\n            point.z>boxPos.z&&point.z<boxPos.z+boxDim.z\n       ) { return true;} else {return false;}\n}\nvec4 box (vec3 o, vec3 r, vec3 p, vec3 dim) {\n    float t = 0.;\n    vec3 boxCenter = p+dim*0.5;\n    for(int i = 0; i<1000; i++){\n        vec3 spot = o+r*t;\n        t+=0.01;//length(boxCenter-spot)*0.5;\n        if(spot.y<0.){\n            \n            return vec4(1.0 / (1.0 + t*t*0.05));\n        }\n        if(insideBox(spot, p, dim)){\n            return texture(iChannel0, vec3(o+r*t).xz);\n        }\n    }\n    return vec4(0.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t//uv.x*=iResolution.x/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse.x-=0.5;\n    mouse.y = 1.-mouse.y;\n    mouse.x*=iResolution.x/iResolution.y;\n    \n    float angle = mouse.x*3.14159;\n    float angley = mouse.y*3.14159;\n    vec3 camera = vec3(0., 2., -2.);\n    vec2 raySet = vec2(uv.x*2.-1., uv.y*2. -1.);\n    vec3 ray = vec3(raySet.x+sin(angle), raySet.y+cos(angley)*2., 1.+cos(angle));\n    \n    float dim = 1.;\n    vec3 boxPos = vec3(-dim/2.);\n    ray = normalize(ray);\n    \n    vec4 col = box(camera, ray, boxPos, vec3(dim));\n\n    // Output to screen\n    fragColor = vec4(col.xyz,1.0);\n}","name":"Image","description":"","type":"image"}]}