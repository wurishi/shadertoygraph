{"ver":"0.1","info":{"id":"tddXDM","date":"1572193457","viewed":107,"name":"CirclelingWaves","username":"Bozarre","description":"Circleling waves","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float d2(vec2 a, vec2 b) {\n    return sqrt((a.x - b.x)*(a.x - b.x) + (a.y - b.y)*(a.y - b.y));\n}\n\nvec3 circlingBall (inout vec4 fragColor, vec2 fragCoord, float delay, float size, float radius, float offset) {\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 center = iResolution.xy /2.0;\n    \n    float delayedTime = iTime + delay;\n        \n    vec2 orbit = 10. + radius*sin(delayedTime) * vec2(sin(delayedTime*3.+offset), cos(delayedTime*3.+offset));\n    \n    // Check for distance\n    if(d2(fragCoord, center + orbit) < abs(size*sin(delayedTime))){\n\n\n        // Time varying pixel color\n        return 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n        // Output to screen\n        \n    } else {\n     \t// Time varying pixel color\n        return vec3(0.,0.,0.);//0.5 + 0.5*cos(iTime+uv.xyx);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float nbCircles = 64.;\n    float nbTrails = 16.;\n    \n    \n    for (float trail = 0.; trail < nbTrails; trail++) {\n        for (float i = 0.; i < nbCircles; i++) {\n            fragColor += vec4(circlingBall (fragColor, fragCoord, -i*0.02 + 360. / nbTrails * (trail+1.), abs(nbCircles-i), (trail+1.)*100., (trail+1.)*(360./nbTrails)),1.0);\n        }\n    }\n    \n    \n    \n    /*for (float i = 0.; i < nbCircles; i++) {\n        fragColor += vec4(circlingBall (fragColor, fragCoord, -i*0.02 + 180., abs(nbCircles-i)),1.0);\n    }*/\n   \n    \n}","name":"Image","description":"","type":"image"}]}