{"ver":"0.1","info":{"id":"cs2fRG","date":"1689844183","viewed":79,"name":"Hard Corner Blur","username":"Suwu","description":"Hard Corner， blur","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hardcornerblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI2 6.2831853072 // PI * 2\n#define PI_O_2 1.5707963268 // PI / 2\nconst float range = 0.5;\nconst float intensity = 0.15;\nconst float passes = 64.0;\nconst float radius = 32.0;\nconst float lossiness = 2.0;\nconst float preserveOriginal = 0.0;\nconst float PI = 3.14159265;\n    \nfloat udRoundBox( vec2 p, vec2 b, float r )\n{\n    return length(max(abs(p)-b+r,0.0))-r;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 pixel = 1.0 / iResolution.xy;\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float count = 1.0 + preserveOriginal;\n    vec4 color = texture(iChannel0, uv) * count;\n    float directionStep = PI2 / passes;\n\n    vec2 off;\n    float c, s, dist, dist2, weight;\n    for(float d = 0.0; d < PI2; d += directionStep) {\n        c = cos(d);\n        s = sin(d);\n        dist = 1.0 / max(abs(c), abs(s));\n        dist2 = dist * (2.0 + lossiness);\n        off = vec2(c, s);\n        for(float i= dist * 1.5; i <= radius; i += dist2) {\n            weight = i / radius; // 1.0 - cos(i / radius * PI_O_2);\n            count += weight;\n            color += texture( iChannel0, uv + off * pixel * i) * weight;\n        }\n    }\n\n    fragColor =  color / count;\n    \n    float t = 0.2 + 0.2 * sin(mod(iTime, 2.0 * PI) - 0.5 * PI);\n    float iRadius = min(iResolution.x, iResolution.y) * (0.05 + range);\n    vec2 halfRes = 0.5 * iResolution.xy;\n\n    // compute box\n    float b = udRoundBox( fragCoord.xy - halfRes, halfRes, iRadius ) * intensity;\n    \n    vec4 src = texture(iChannel0,fragCoord/iResolution.xy);  \n    vec3 x = mix( src.xyz, fragColor.xyz, smoothstep(0.0,1.0,b * intensity) );\n    //如果想看下全局的模糊效果，可以把最后这行注释掉\n\tfragColor = vec4(x, 1.0);\n}","name":"Image","description":"","type":"image"}]}