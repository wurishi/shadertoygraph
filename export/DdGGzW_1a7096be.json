{"ver":"0.1","info":{"id":"DdGGzW","date":"1678897892","viewed":201,"name":"oily Pollo","username":"louis_C","description":"PLaying with the Neural SDFs from blackle for the form and texture from img2shadertoy of rkibria.","likes":13,"published":1,"flags":40,"usePreview":1,"tags":["sdf","bitmap","head"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord /iResolution.xy;\n      float b = sqrt(32.);\n    vec3 c = vec3(0.);\n    float d = pow(distance(0.5,uv.y),0.5)*0.002+0.0002;\n    for (float i = -0.5*b;i<=0.5*b;i++)\n    for (float j = -0.5*b;j<=0.5*b;j++){\n    c += texture(iChannel0,uv+vec2(i,j)*d).xyz;\n    }\n    c/=32.;\n    fragColor = vec4(c,1.);\n\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec2 isphe ( in vec3 ro, in vec3 rd, in vec3 cen , in float rad)\n{\nro -= cen;\nfloat b = dot(rd,ro);\nfloat c =dot(ro,ro)-rad*rad;\nfloat h = b*b-c;\nif(h<0.)return vec2(-1.);\nh = sqrt(h);\nreturn vec2(-b-h,-b+h);\n}\nconst vec2 bitmap_size = vec2(64, 126);\nconst int[] palette = int[] (\n0x00000000,\n0x00ffffff,\n0x00514e67,\n0x00544b73,\n0x00746e87,\n0x004e4b56,\n0x00888295,\n0x00948d9f,\n0x009d96a7,\n0x00a99eb8,\n0x00625c6a,\n0x00b9aac0,\n0x005a545c,\n0x007d787e,\n0x00b3a6b4,\n0x006f686f,\n0x00767076,\n0x00c0bac0,\n0x00a291a1,\n0x00c3b3c1,\n0x00a997a6,\n0x009b8b98,\n0x008d838a,\n0x00877d84,\n0x00af9da8,\n0x00bda8b3,\n0x00c4adb8,\n0x00b5a3ac,\n0x0095848c,\n0x00ccb5bf,\n0x00948b8f,\n0x00cbaeba,\n0x00c4a6b2,\n0x00c8aab6,\n0x00d0b2be,\n0x00bab0b4,\n0x00a5959b,\n0x00a39a9d,\n0x00c1a6ae,\n0x00caaeb6,\n0x00cdb3ba,\n0x00c2a2aa,\n0x00c6a6ae,\n0x00caaab2,\n0x00d2b2ba,\n0x00ceaeb6,\n0x00ac959b,\n0x00bca4aa,\n0x00c6a2aa,\n0x00caa6ae,\n0x00a68d93,\n0x00b59ca2,\n0x00dab2ba,\n0x00baa1a6,\n0x00c6adb2,\n0x00b3969b,\n0x00957e82,\n0x009d868a,\n0x00857a7c,\n0x00d3aeb4,\n0x00d6b2b8,\n0x00b29a9e,\n0x00c2aaae,\n0x00cab2b6,\n0x00ac9a9d,\n0x00c5b2b5,\n0x00bc9ea2,\n0x00b69a9e,\n0x00bea2a6,\n0x00c6aaae,\n0x00c2a6aa,\n0x00caaeb2,\n0x00d2b6ba,\n0x00ceb2b6,\n0x00c6a2a6,\n0x00c2a2a6,\n0x00c6a6aa,\n0x00caaaae,\n0x00ceaeb2,\n0x00d6b6ba,\n0x008c7b7d,\n0x009d8a8c,\n0x00948385,\n0x00ba9b9e,\n0x00ac9395,\n0x00a38b8d,\n0x00beaaac,\n0x007f7475,\n0x009e9293,\n0x00a49495,\n0x00dab4b6,\n0x00b39495,\n0x00937d7e,\n0x009b8485,\n0x00d2b5b6,\n0x00d6babb,\n0x00b19e9f,\n0x00b5a2a3,\n0x00c1aeaf,\n0x00876a6a,\n0x00d2aeae,\n0x00c2a2a2,\n0x00c6a6a6,\n0x00caaaaa,\n0x00b79a9a,\n0x00ceaeae,\n0x00bea2a2,\n0x00c6aaaa,\n0x00c2a6a6,\n0x00caaeae,\n0x00ceb2b2,\n0x00b29a9a,\n0x00baa2a2,\n0x00b69e9e,\n0x00bea6a6,\n0x00c6aeae,\n0x00c2aaaa,\n0x00cab2b2,\n0x00baa6a6,\n0x008f8282,\n0x00948a8a,\n0x00937675,\n0x00a68f8e,\n0x009b8f8e,\n0x00d2b2ae,\n0x00c2a6a2,\n0x00caaeaa,\n0x00cdb2ae,\n0x00b49a96,\n0x00c3aaa6,\n0x00bea6a2,\n0x00c6aeaa,\n0x00b69f9a,\n0x00b29e9a,\n0x00baa6a2,\n0x00beaaa6,\n0x00c2aeaa,\n0x00b8a39e,\n0x009c8a86,\n0x00ac9a96,\n0x00867a76,\n0x00a0a696,\n0x009aa6aa,\n0x00bac9d0,\n0x004d6b94,\n0x005e82b6,\n0x00738db2,\n0x0045659a,\n0x00486a9e,\n0x003c547b,\n0x005573a4,\n0x00668ac2,\n0x005e7cad,\n0x006483b3,\n0x0058739d,\n0x005f7aa3,\n0x006d8aba,\n0x00364e77,\n0x00446193,\n0x005577b3,\n0x00445e8c,\n0x004e6a9c,\n0x00445b84,\n0x006483bc,\n0x005a77a9,\n0x004c638d,\n0x003c4f70,\n0x00546b95,\n0x00728ec0,\n0x002e436c,\n0x003c5484,\n0x00506eaa,\n0x004d6ba3,\n0x005573ac,\n0x005d7cb6,\n0x004c6594,\n0x001f283a,\n0x00546d9c,\n0x006d8ac3,\n0x0046587b,\n0x00718ec6,\n0x006c84b4,\n0x000b152a,\n0x0027375b,\n0x004c659b,\n0x00607ebf,\n0x00546da4,\n0x006583c3,\n0x005c78b2,\n0x004b5d85,\n0x005e74a3,\n0x007590ca,\n0x006a7fad,\n0x007f91b9,\n0x00d1d6e1,\n0x00122042,\n0x00203056,\n0x0035456a,\n0x005d74ac,\n0x006e8aca,\n0x00647cb6,\n0x006d86c3,\n0x00728ac6,\n0x006c84bc,\n0x003d4a6a,\n0x00728ac1,\n0x00768ec6,\n0x006478a8,\n0x007c94cb,\n0x0059698f,\n0x00798ec1,\n0x007489b9,\n0x00596685,\n0x00485269,\n0x006e7c9f,\n0x001c294d,\n0x002d3c67,\n0x00475c94,\n0x003c4b76,\n0x00435482,\n0x004b5d8c,\n0x00536490,\n0x00445276,\n0x00333d58,\n0x005d6f9f,\n0x007286bf,\n0x005b6c99,\n0x00768ac1,\n0x00546186,\n0x004f5b7d,\n0x007d91c5,\n0x007383b1,\n0x008699cb,\n0x003d455c,\n0x008fa1d1,\n0x007984a2,\n0x00324275,\n0x00546598,\n0x00768ac6,\n0x007b8eca,\n0x00677294,\n0x00535b73,\n0x00263566,\n0x0043548c,\n0x004e5d95,\n0x00444b62,\n0x00555967,\n0x003e4c81,\n0x002b3149,\n0x002f3139,\n0x00393b4a,\n0x00424352,\n0x00606078,\n0x006a6a82,\n0x007a7a90\n);\nconst int longs_per_line = 16;\nconst int[] bitmap = int[] (\n0x25252525, 0x25252525, 0x25252525, 0x25252525, 0x25252525, 0x25252525, 0x25252525, 0x25582525, 0x58585858, 0x58585825, 0x58585858, 0x58585858, 0x25252558, 0x258e2525, 0x188e188e, 0x188e188e,\n0x8d252525, 0x25258d08, 0x088d2525, 0x2525258d, 0x258d088d, 0x8d072525, 0x8d078d07, 0x58078d07, 0x078d078d, 0x078d0758, 0x078d078d, 0x078d0758, 0x258d078d, 0x8e25258e, 0x8e1b8e60, 0x23232323,\n0x08258d08, 0x258d088d, 0x2525258e, 0x078d0825, 0x8d082525, 0x258d2508, 0x078d078d, 0x078d078d, 0x07580758, 0x0758588d, 0x07580758, 0x5807588d, 0x25078d07, 0x8d8e2525, 0x23231b8e, 0x23232323,\n0x8d08258d, 0x8e252525, 0x8d088d58, 0x25258d08, 0x078d078d, 0x25078d25, 0x58252507, 0x078d5825, 0x8d078d8d, 0x8d070758, 0x8d1e8d07, 0x078d071e, 0x8d25588d, 0x8e608e25, 0x2323230e, 0x23232311,\n0x088d0825, 0x25258e25, 0x258d0825, 0x8d082525, 0x8d258d08, 0x258d0725, 0x8d07258d, 0x8d078d07, 0x078d0707, 0x581e8d58, 0x07580758, 0x581e8d58, 0x58078d07, 0x8e8d2525, 0x23232376, 0x8e232323,\n0x8d258d25, 0x8e258d08, 0x8e25258d, 0x25258d25, 0x25082525, 0x0725258d, 0x8d078d25, 0x58072558, 0x8d07588d, 0x078d0707, 0x1e8d1e8d, 0x8d071e07, 0x078d5807, 0x8e252558, 0x2323238e, 0x8e232323,\n0x08252525, 0x2525088d, 0x8d250825, 0x078d0825, 0x088d258d, 0x258d0725, 0x078d078d, 0x588d078d, 0x07588d07, 0x5807588d, 0x8d1e071e, 0x1e1e581e, 0x581e0758, 0x8d25071e, 0x23238e1b, 0x618e2323,\n0x258d088d, 0x8d258d25, 0x258d2525, 0x8d088d08, 0x8d078d08, 0x25258d07, 0x8d078d07, 0x07588d07, 0x8d07588d, 0x8d58071e, 0x1e1e5807, 0x071e1e07, 0x1e1e1e1e, 0x258d1e1e, 0x238e238e, 0x618e238e,\n0x08252525, 0x0825088d, 0x08258e25, 0x2525258d, 0x258d2525, 0x8d07088d, 0x58252525, 0x078d078d, 0x078d0758, 0x1e078d58, 0x1e1e1e1e, 0x1e1e1e1e, 0x1e161e1e, 0x25071e1e, 0x231b8e8d, 0x8e0e2323,\n0x8d088d25, 0x8d258d25, 0x8d258d08, 0x8d088d07, 0x25088d07, 0x07258d25, 0x078d078d, 0x8d075825, 0x581e8d07, 0x078d1e07, 0x1e071e8d, 0x1e1e1e1e, 0x16161616, 0x071e1e16, 0x8e8e8d25, 0x8e238e23,\n0x258d0825, 0x25082508, 0x25082525, 0x25252525, 0x088d078d, 0x8d25078d, 0x078d2507, 0x588d078d, 0x078d0758, 0x1e1e078d, 0x1e1e1e1e, 0x16161e1e, 0x0d171716, 0x1e781617, 0x618e2558, 0x238e238e,\n0x08258d25, 0x8d258d25, 0x8d258d08, 0x8d078d8e, 0x8d252508, 0x088d2508, 0x07258d58, 0x078d588d, 0x58078d07, 0x8d1e581e, 0x1e1e1e1e, 0x1716161e, 0x17170d17, 0x1e161717, 0x8e8d251e, 0x1b1b8e76,\n0x8d082525, 0x088d0825, 0x088d078d, 0x088d2558, 0x0725258d, 0x5825078d, 0x8d07078d, 0x8d075807, 0x8d580758, 0x1e071e07, 0x1e1e1e1e, 0x17171616, 0x0d0d170d, 0x16170d0d, 0x258d071e, 0x1b8e1b8e,\n0x25258d25, 0x8d08258d, 0x8d088d25, 0x25252508, 0x8d258d08, 0x8d078d25, 0x58258d08, 0x078d078d, 0x1e071e8d, 0x1e1e1e8d, 0x161e1e1e, 0x17171616, 0x0d170d17, 0x160d170d, 0x25251e1e, 0x8e618e8d,\n0x8d082525, 0x088d2508, 0x25252525, 0x258d088d, 0x0825078d, 0x258d078d, 0x25078d07, 0x58078d07, 0x588d8d07, 0x1e8d1e07, 0x1e161e1e, 0x17171716, 0x0d0d170d, 0x170d0d0d, 0x071e1e16, 0x8e8d2525,\n0x258d088d, 0x25258d08, 0x8d088d25, 0x25088d08, 0x8d078d08, 0x07252525, 0x588d078d, 0x078d078d, 0x071e078d, 0x1e1e1e1e, 0x16161e1e, 0x17171716, 0x0d0d0d17, 0x0d0d0d0d, 0x1e1e1616, 0x25585858,\n0x08252525, 0x8d08258d, 0x25252508, 0x258d2525, 0x088d258d, 0x8d078d25, 0x8d072525, 0x58078d07, 0x8d585807, 0x1e1e8d1e, 0x16161e1e, 0x17171717, 0x0d161717, 0x0d0d0d0d, 0x1e1e1616, 0x1e1e1e1e,\n0x258d2525, 0x25258d08, 0x088d088d, 0x0825078d, 0x8d250825, 0x088d2507, 0x8d078d58, 0x078d5807, 0x071e078d, 0x1e1e1e1e, 0x1616161e, 0x16160d16, 0x16171617, 0x170d0d0d, 0x1e1e1616, 0x16161e1e,\n0x25088d08, 0x258d088d, 0x8d258d08, 0x8d258d08, 0x25088d25, 0x8d25078d, 0x25588d07, 0x58078d58, 0x1e8d0758, 0x1e1e1e8d, 0x1716161e, 0x16171716, 0x16161616, 0x16171717, 0x1e1e1e1e, 0x17161e1e,\n0x8d25088d, 0x07252508, 0x2508258d, 0x07252525, 0x8d25088d, 0x078d2525, 0x078d078d, 0x8d07078d, 0x1e078d1e, 0x1e1e1e07, 0x1616161e, 0x16161717, 0x1e781616, 0x16161778, 0x8d078d1e, 0x161e8d8e,\n0x08258d25, 0x8e8d258d, 0x258d2525, 0x258d258e, 0x25078d25, 0x8d078d08, 0x8d072525, 0x07588d07, 0x581e0758, 0x1e1e1e1e, 0x17161616, 0x78161616, 0x1e1e1e1e, 0x1e161e1e, 0x8e8d071e, 0x8d8e8e25,\n0x258d0825, 0x8d088d08, 0x8d250825, 0x258e0825, 0x258d8d08, 0x088d078d, 0x58078d58, 0x588d078d, 0x071e8d07, 0x1e1e1e1e, 0x17161616, 0x1e781617, 0x8d078d1e, 0x1e1e1e1e, 0x8e8d078d, 0x8e0e231b,\n0x8d088d25, 0x08252525, 0x078d258d, 0x8d078d25, 0x0725088d, 0x8d078d25, 0x078d2508, 0x8d075825, 0x8d1e5858, 0x161e1e1e, 0x1616171e, 0x1e1e1616, 0x078d071e, 0x061e1e8d, 0x6125251e, 0x23230e8e,\n0x25252525, 0x8d088d08, 0x25082525, 0x8d25258d, 0x8d252507, 0x078d088d, 0x58078d25, 0x588d078d, 0x1e8d0707, 0x1e1e1e1e, 0x0d161716, 0x071e1616, 0x258e8d8d, 0x171e078d, 0x8e8e581e, 0x238e2323,\n0x088d8e25, 0x2525258d, 0x8d258d08, 0x08252508, 0x2508258d, 0x25258d07, 0x258d078d, 0x07078d07, 0x071e1e8d, 0x161e1e1e, 0x16171616, 0x8d1e1e16, 0x25258e08, 0x0d1e588e, 0x8e8d1e16, 0x8e238e1b,\n0x8d252525, 0x8d088d08, 0x25250825, 0x258d078d, 0x258d8d07, 0x0725088d, 0x8d25258d, 0x8d588d07, 0x8d078d07, 0x161e1e1e, 0x16171616, 0x8d1e1e16, 0x258e8e25, 0x1e1e258d, 0x251e1e1e, 0x8e608e8d,\n0x25088d25, 0x088d088d, 0x088d258d, 0x25088d25, 0x0825078d, 0x8d258d25, 0x25078d08, 0x078d078d, 0x1e580758, 0x161e1e1e, 0x16161716, 0x8e071e1e, 0x8e61188d, 0x8d8e8d8e, 0x078d258d, 0x1e585858,\n0x8d258e25, 0x25252508, 0x25088d08, 0x8d25078d, 0x588d2525, 0x2508258d, 0x8d252525, 0x078d2507, 0x078d588d, 0x1e161e1e, 0x78161616, 0x8d8d1e1e, 0x8e8e8e18, 0x25252525, 0x8d088e08, 0x1e1e1e58,\n0x08252525, 0x078d258d, 0x258d088d, 0x07258d08, 0x8e25088d, 0x258d0725, 0x25088d08, 0x8d07258d, 0x1e078d07, 0x161e1e8d, 0x1e161616, 0x8e088d1e, 0x8d18608e, 0x8d252525, 0x8e258d25, 0x8e8e8d8e,\n0x258d2525, 0x258d0825, 0x8d082525, 0x088d2525, 0x8d078d25, 0x8d088d25, 0x088d2525, 0x25258d25, 0x078d0725, 0x1e1e1e1e, 0x1e1e1e16, 0x25258d07, 0x8e8d8e8e, 0x25088d25, 0x258e258e, 0x61408e25,\n0x8d08258d, 0x08258d08, 0x258d258d, 0x8d078d07, 0x258d0825, 0x088d0825, 0x8d08258d, 0x088d0825, 0x58078d8d, 0x1e1e1e8d, 0x1e1e1e1e, 0x8e8e2558, 0x258e1860, 0x258d0825, 0x25252525, 0x8e8e258e,\n0x078d0725, 0x2508258d, 0x0825078d, 0x8d25258d, 0x25258d08, 0x25258d08, 0x588d0825, 0x8d25258e, 0x8d250825, 0x1e8d0707, 0x071e1e1e, 0x618d8e8d, 0x25258e8e, 0x088d078d, 0x8d8e2525, 0x408d2525,\n0x8d088d25, 0x258d0825, 0x8d258d08, 0x25088d07, 0x8e250825, 0x8d08258d, 0x8e088d08, 0x258e2525, 0x08258d8e, 0x1e071e8d, 0x8d8d078d, 0x8e182508, 0x258e8d60, 0x8d252525, 0x25252525, 0x25258e25,\n0x088d2525, 0x8d08258d, 0x25250825, 0x088d2525, 0x58088d8d, 0x25258d25, 0x258d258d, 0x2525258e, 0x258d8e25, 0x078d8d8e, 0x8d078d58, 0x8e618e8e, 0x25258e0e, 0x078d078d, 0x258d088d, 0x088d2525,\n0x8d25088d, 0x088d2507, 0x8d088d25, 0x8d078d08, 0x8e8d2508, 0x8e250825, 0x25258e25, 0x8e8d8e25, 0x8e258e25, 0x8d082525, 0x258d088d, 0x230e8e60, 0x8e25188e, 0x8d088d25, 0x8d078d08, 0x8d252525,\n0x258d0725, 0x25078d25, 0x078d078d, 0x258d088d, 0x07252525, 0x258d258d, 0x258d2525, 0x258e258e, 0x8e18188e, 0x8e8d8e25, 0x8e258e25, 0x8e23238e, 0x258e1b1b, 0x2525088d, 0x08252525, 0x088d088d,\n0x25088d25, 0x258d2525, 0x8d252525, 0x25088d08, 0x8d088d25, 0x25250825, 0x8e08258e, 0x8e188d25, 0x8e1b8e61, 0x8e188e1b, 0x0e618e25, 0x23232323, 0x258d8e23, 0x078d2525, 0x258d078d, 0x8d078d08,\n0x078d2525, 0x8d25078d, 0x25088d07, 0x088d2525, 0x088d078d, 0x258e258d, 0x258d258d, 0x618e258e, 0x2323238e, 0x1b8e1b1b, 0x238e1b1b, 0x23232323, 0x8e8e2323, 0x8d252525, 0x8d088d08, 0x25258d07,\n0x8d25088d, 0x08258d08, 0x078d258d, 0x8d07258d, 0x25258d08, 0x258d2525, 0x8e258e25, 0x8e618e60, 0x230e8e23, 0x230e238e, 0x23230e8e, 0x23232323, 0x8e1b0e23, 0x08258e25, 0x2525258d, 0x8d08258d,\n0x088d2525, 0x8d078d25, 0x8d082525, 0x258d0825, 0x8d082525, 0x08258e25, 0x258e258d, 0x0e8e618e, 0x23232323, 0x238e2323, 0x23232323, 0x23111111, 0x188e2323, 0x8d078d25, 0x088d0825, 0x258d0725,\n0x8d082525, 0x258d0825, 0x25258d07, 0x08258d08, 0x088d088d, 0x258d2525, 0x258d258e, 0x231b8e8e, 0x23112323, 0x23232323, 0x11112323, 0x11231111, 0x8e232323, 0x258d258e, 0x8d078d07, 0x25088d25,\n0x25078d25, 0x8d08258d, 0x078d0825, 0x258d078d, 0x8d258d07, 0x25088d08, 0x8e258e25, 0x8e1b8e60, 0x11111123, 0x23232311, 0x11111123, 0x23111111, 0x1b232311, 0x8d25258e, 0x08252558, 0x078d078d,\n0x8d8d0825, 0x078d2507, 0x8d25258d, 0x25258d25, 0x2508258d, 0x8d252525, 0x608d2525, 0x238e618e, 0x11111123, 0x11231123, 0x11111123, 0x11111111, 0x23232323, 0x8d088e1b, 0x8d078d07, 0x8d252507,\n0x08258d25, 0x25258d25, 0x258e078d, 0x078d0825, 0x088d0825, 0x088d088d, 0x8e258e25, 0x23238e60, 0x11111111, 0x11231111, 0x11111123, 0x23111111, 0x8e232323, 0x258d8e1b, 0x078d078d, 0x088d2558,\n0x8d082525, 0x088d0825, 0x8d582525, 0x8d078d07, 0x8d078d25, 0x25258d08, 0x258e258d, 0x238e618e, 0x11111111, 0x23232311, 0x11112311, 0x23231123, 0x8e238e23, 0x8e188d23, 0x58582525, 0x8d07078d,\n0x8d078d25, 0x258d0725, 0x078d078d, 0x088d078d, 0x258d0725, 0x088d2525, 0x8e8d2525, 0x23238e25, 0x11111123, 0x23232323, 0x23232323, 0x8e232323, 0x8e0e8e23, 0x258e8e61, 0x8d078d25, 0x25258d07,\n0x078d0825, 0x07258d25, 0x25258d25, 0x8d072525, 0x07258d07, 0x8d08258d, 0x25258e25, 0x238e618e, 0x11111111, 0x8e232323, 0x8e238e23, 0x1b8e8e23, 0x8d8e618e, 0x8d25258e, 0x078d258e, 0x078d0758,\n0x25258d25, 0x2507258d, 0x8d07258d, 0x258d2525, 0x2525258d, 0x258d078d, 0x8e252525, 0x238e8e60, 0x23111111, 0x8d8e8e23, 0x8d8e8d8e, 0x8d8d8d8e, 0x258d258d, 0x25258d25, 0x8d088d25, 0x25258d25,\n0x07250725, 0x8d8d0725, 0x088d2507, 0x25078d07, 0x8d072507, 0x08258d07, 0x258d258d, 0x23768e8d, 0x23111123, 0x258d8e8e, 0x581e5858, 0x07580758, 0x07580758, 0x251e0758, 0x25252507, 0x258e2508,\n0x258d8d25, 0x2525258d, 0x8d25078d, 0x258d2525, 0x078d258d, 0x258d088d, 0x25082508, 0x238e8e25, 0x23232323, 0x1e1e258d, 0x17161616, 0x8d581e16, 0x1e078d25, 0x1e1e1e1e, 0x8d8e8d58, 0x8e252525,\n0x0725078d, 0x078d0725, 0x07258d08, 0x0725078d, 0x2525078d, 0x8d078d25, 0x8d258d25, 0x8e618d25, 0x8e232323, 0x0d0d1e25, 0x0d0d1010, 0x8e8e8d1e, 0x8d8e8e8e, 0x1617171e, 0x8e581e1e, 0x258d8e25,\n0x8d258d08, 0x8d258d25, 0x8d078d25, 0x8d258d08, 0x088d2525, 0x8d25078d, 0x08580807, 0x8e8e2525, 0x8d0e2323, 0x0f100d1e, 0x16100ff6, 0x231b8e8d, 0x1b232323, 0x0d0d1e8e, 0x25071e17, 0x25252525,\n0x8d072525, 0x25072507, 0x258d2507, 0x25082525, 0x8d088d08, 0x088d2525, 0x078d588d, 0x8e25258d, 0x8d8e8e1b, 0x050a1016, 0x1e100a0c, 0x2323188e, 0x23231123, 0x0d178d8e, 0x8d1e160d, 0x258e8d25,\n0x25258d25, 0x258d258d, 0x0725078d, 0x258d078d, 0x088d088d, 0x2525258e, 0x1e078d07, 0x8d58071e, 0x251b238e, 0x050a1016, 0x1e570a0c, 0x0e8e8e8d, 0x23232323, 0x101e8e0e, 0x071e170d, 0x8d25088d,\n0x078d0725, 0x078d0725, 0x8d258d25, 0x088d2525, 0x8d8e2525, 0x8e8e8e18, 0x1e58078d, 0x581e781e, 0x8e0e8e60, 0x0a10778d, 0x170d100a, 0x238d181e, 0x238e238e, 0x0d1e8d0e, 0x8d1e0d10, 0x08255807,\n0x8d088d25, 0x25258d25, 0x2507258d, 0x8d088d07, 0x0e8e8d25, 0x18232323, 0x161e8d25, 0x1e0d0d17, 0x6123238e, 0x777b8d8e, 0x1e1e178c, 0x8e1b8d1e, 0x23232323, 0x0f178d8e, 0x581e0d0d, 0x8d078d07,\n0x078d0725, 0x078d0725, 0x8d8d0725, 0x25252525, 0x231b258e, 0x8e231111, 0x171e078d, 0x16100f10, 0x23230e8d, 0x8d8e188e, 0x8e8d1e1e, 0x8e58078d, 0x8e238e61, 0x0f101e8d, 0x071e170d, 0x258d078d,\n0x8d258d25, 0x8d088d25, 0x25088d07, 0x588e258e, 0x238e8d25, 0x23118f11, 0x0d161e8e, 0x0d0ff60f, 0x23238e8d, 0x8e0e2323, 0x1b8e8d8e, 0x1e8d8e0e, 0x58588d58, 0x0d0d171e, 0x1e1e160d, 0x0725588d,\n0x07250725, 0x2525078d, 0x078d078d, 0x8d25258d, 0x8e8d1e07, 0x238f5f11, 0x0d171e8d, 0x0d0a0c0f, 0x8e230e25, 0x23232323, 0x8d8e180e, 0x8e23230e, 0x1e07078d, 0x161e1e1e, 0x581e1e17, 0x8d258d07,\n0x8d258d25, 0x8d258d08, 0x25258d07, 0x078d0725, 0x8d16161e, 0x238f8f23, 0x10171e8e, 0x0d0a0c0f, 0x238e8e8d, 0x23112311, 0x25180e23, 0x230e8e8e, 0x8e232323, 0x1e8d8e8e, 0x078d1e1e, 0x0825258d,\n0x078d0725, 0x0725078d, 0x8d25258d, 0x58078d8e, 0x160d0d78, 0x2311118e, 0x0d0d168d, 0x0d0f0f0f, 0x23238e58, 0x11111123, 0x8e232311, 0x8e8d8d61, 0x258d8e8e, 0x1e1e588d, 0x8d07078d, 0x8d258e07,\n0x8d078d25, 0x8d258d25, 0x25072508, 0x078d2525, 0x160d171e, 0x2311118d, 0x0d0d1658, 0x0d10100d, 0x238e8d58, 0x11112323, 0x23231111, 0x258e1b8e, 0x5825258d, 0x07075807, 0x25588d1e, 0x2525258d,\n0x088d0725, 0x08250725, 0x258d2558, 0x8d078d25, 0x1617781e, 0x8e112325, 0x0d17168d, 0x0d171717, 0x8e23251e, 0x11232323, 0x23111111, 0x181b0e23, 0x8d8e258e, 0x8d8d8d25, 0x8e8e258d, 0x258e258e,\n0x58258d25, 0x8d258d25, 0x08258d07, 0x078d078d, 0x078d071e, 0x0e23238d, 0x780d168d, 0x161e8d1e, 0x238e8d1e, 0x23112323, 0x23111111, 0x8e232323, 0x188e610e, 0x258e8e8e, 0x258e8e8e, 0x25258d25,\n0x8d072525, 0x25078d07, 0x8d25088d, 0x1e078d07, 0x8e258d58, 0x8e238e8e, 0x1e161625, 0x1e8e8e8d, 0x238e071e, 0x2323238e, 0x11232323, 0x23232323, 0x8e238e23, 0x8e18181b, 0x8e1b611b, 0x8e258e18,\n0x25258d25, 0x078d088d, 0x8d078d25, 0x1e580725, 0x188d1e16, 0x8e8d8e1b, 0x16161e8d, 0x588e8d1e, 0x0e8d7816, 0x23232323, 0x23232323, 0x8e238e23, 0x231b0e23, 0x1b0e238e, 0x8e618e8e, 0x258e258d,\n0x078d0725, 0x8d252525, 0x088d2525, 0x1e1e8d25, 0x8e251e1e, 0x58251823, 0x1e1e1e1e, 0x1e8d581e, 0x8e580d0d, 0x2323238e, 0x238e2323, 0x8e23238e, 0x1b8e8e76, 0x8e8e618e, 0x188e610e, 0x8d258e18,\n0x8d088d25, 0x25078d07, 0x25088d08, 0x8d078d25, 0x8e25078d, 0x1e8d8e23, 0x16161616, 0x17161e16, 0x8d16100f, 0x2323238e, 0x8e232323, 0x8e8e0e23, 0x1b618e1b, 0x878e238e, 0x618e0e8e, 0x8e188e8e,\n0x8d072525, 0x258d2525, 0x258d078d, 0x8e8d088d, 0x1b8d8e8e, 0x588e2323, 0x8d1e1e16, 0x0d161e1e, 0x1e0d0a0f, 0x23230e25, 0x23232323, 0x23768e0e, 0x0e8e768e, 0x0e238e61, 0x8e231b23, 0x8d8e611b,\n0x07258d25, 0x0725078d, 0x0825258d, 0x23188e25, 0x8e231123, 0x23232323, 0x238e8e8e, 0x0d8d8e8e, 0x170f0c0f, 0x238e8e8d, 0x23232323, 0x618e0e23, 0x8e618e8e, 0x238e1b23, 0x238e238e, 0x188e618e,\n0x8d250725, 0x8d258d25, 0x8d250725, 0x0e8e8d25, 0x23231123, 0x1111238e, 0x11111111, 0x0d1e8e23, 0x0d0a0c0f, 0x8e8d2516, 0x8e8e238e, 0x8e618e8e, 0x618e618e, 0x8e768e8e, 0x8e238e76, 0x8e618e1b,\n0x258d2525, 0x25078d07, 0x258d8d07, 0x8d188e25, 0x23238e8e, 0x230e8e1b, 0x8e232311, 0x0d161e8d, 0x0f0c0c0f, 0x25251e0d, 0x1b8e8d8e, 0x8d8d258d, 0x8d8e8d25, 0x1b8e618e, 0x1b8e768e, 0x8e618e1b,\n0x07250725, 0x258d088d, 0x8d07078d, 0x58258d08, 0x0e8e8d58, 0x8d8d8d8e, 0x1e1e258d, 0x8d1e1e16, 0x0c0c1078, 0x581e1710, 0x8d25258d, 0x08252525, 0x25258e25, 0x618e608e, 0x768e0e8e, 0x1b8e1b8e,\n0x8d078d25, 0x8d072525, 0x07258d07, 0x0d78078d, 0x8d1e160d, 0x17171e25, 0x1e16160d, 0x0e8e8e8d, 0x0c0d8d8e, 0x160d0f0c, 0x5807581e, 0x078d5807, 0x8d25258d, 0x8e188d8e, 0x8e618e61, 0x8e768e23,\n0x258d2507, 0x258d2507, 0x8d582525, 0x0d171e25, 0x1e1e170d, 0x1010171e, 0x258d1e0d, 0x23231b8e, 0x0f8d2323, 0x0d0f0cfb, 0x1e1e1616, 0x1e1e1e1e, 0x25250758, 0x8e8d8e25, 0x618e618e, 0x1b8e1b8e,\n0x07258d25, 0x8d078d8d, 0x8d078d07, 0x16161e07, 0x078d1617, 0x5817161e, 0x8e0e8e8e, 0x238e8d25, 0x178e2323, 0x0f0c050c, 0x16160d10, 0x1e1e1e1e, 0x258d5807, 0x8e25258e, 0x8e1b8e61, 0x760e8e76,\n0x258d0725, 0x088d0725, 0x078d078d, 0x1e8d078d, 0x8d078d8d, 0x238e8d8d, 0x8d232323, 0x8d1e1e25, 0x588d8e8e, 0x100f0f0d, 0x0d10100f, 0x1e1e1616, 0x25078d1e, 0x408e2525, 0x1b8e618e, 0x8e8e768e,\n0x8d078d25, 0x8d078d25, 0x58252558, 0x8e078d58, 0x088d0e8e, 0x231b8e25, 0x8e8e2323, 0x17171e25, 0x171e581e, 0x163a0d0d, 0x0d100d17, 0x1e1e0d0d, 0x8d1e1e1e, 0x8d258d07, 0x618e8d8e, 0x1b231b8e,\n0x25252507, 0x25252507, 0x8d078d07, 0x1b8d0807, 0x258e2323, 0x238e8d25, 0x1b232323, 0x100d588e, 0x0d0d0d10, 0x1e171010, 0x10788d8d, 0x170d0d10, 0x1e071e1e, 0x25252558, 0x8e8d1825, 0x238e8e61,\n0x078d258d, 0x078d258d, 0x258d078d, 0x8e258d25, 0x258d8e0e, 0x23238e25, 0x8e232323, 0x0f0d1e8d, 0x1e1e0d10, 0x8d161616, 0x1e23238e, 0x170d100f, 0x1e1e1e16, 0x25075807, 0x618e2525, 0x8e238d8e,\n0x8d072525, 0x258d0725, 0x58078d25, 0x8d258d07, 0x0758258d, 0x1123238e, 0x16588e23, 0x0d10100d, 0x8e8e8d78, 0x078d8d8e, 0x8e8f1123, 0x0d0f0a0d, 0x1e16160d, 0x078d1e1e, 0x8e25258d, 0x238e0e18,\n0x08258d25, 0x8d07258d, 0x8d258d07, 0x25085807, 0x78171607, 0x11110e8d, 0x0f0d7b8e, 0x1e0d0f0f, 0x611b258e, 0x8d258e0e, 0x115f8f23, 0x0f0c0f8d, 0x16170d0d, 0x1e1e1e1e, 0x8d258d07, 0x618e618e,\n0x8d072507, 0x258d2507, 0x25072525, 0x1e8d078d, 0x0d10171e, 0x8e8e8d16, 0x0a0a0d58, 0x8d1e0d0a, 0x8e23230e, 0x1e588d8e, 0x8f8f5f8e, 0x0a0c160e, 0x0d0d100f, 0x1e161617, 0x25251e1e, 0x8e618e8d,\n0x258d258d, 0x07258d25, 0x8d25078d, 0x078d5807, 0x100d171e, 0x7858160d, 0x0f0f0f0d, 0x8e8d160d, 0x118f1111, 0x100d1e18, 0x118f118d, 0x0f168e11, 0x0d0d0d0f, 0x17170d0d, 0x251e1e16, 0x8d8e258e,\n0x07250725, 0x8d25078d, 0x25078d25, 0x5807258d, 0x0d171e1e, 0x161e160d, 0x570f0f0d, 0x1e1e1e16, 0x8fc2238d, 0x0a108d11, 0x5f118e10, 0x7823118f, 0x161e0d0d, 0x0d0d0d0d, 0x1e1e1617, 0x25252558,\n0x8d258d25, 0x25078d07, 0x07258d07, 0x078d5825, 0x781e1e8d, 0x1e1e1e1e, 0x1e161717, 0x171e8d8d, 0xc2231e0d, 0x0a782311, 0x118e8c0c, 0x8e111111, 0x8d8d1e1e, 0x10101016, 0x16160d10, 0x258d1e1e,\n0x25072525, 0x258d2525, 0x8d25078d, 0x58078d07, 0x8d078d07, 0x8d078d07, 0x8e8d8d8d, 0x1e8e0e8e, 0x5f8d1010, 0x778e11c2, 0x58570a0f, 0x8e23238d, 0x8e8e1e8d, 0x0f10178d, 0x0d10100f, 0x1e1e1616,\n0x8d8d078d, 0x8d078d07, 0x078d2507, 0x8d25078d, 0x8e8d078d, 0x8e8d8e8e, 0x230e0e8e, 0x8e232323, 0x230d100d, 0x8d238fc2, 0x0d0d171e, 0x581e1e16, 0x1b8d1e1e, 0x0d0d788e, 0x0f0f100d, 0x16170d10,\n0x08252525, 0x0725258d, 0x8d25078d, 0x07258d25, 0x1b8e8d25, 0x1b1b2323, 0x8e8e0e0e, 0x23238e8d, 0x8d0d0f8d, 0x235fc28f, 0x8d8d8e8e, 0x0d161e07, 0x8e25160d, 0x1e16168d, 0x0f10178d, 0x0d100f0f,\n0x258d0725, 0x8d258d07, 0x25078d25, 0x258d2507, 0x0e8e2508, 0x8e232323, 0x1e258d8d, 0x238e1e1e, 0x1610108e, 0xc2c2c223, 0x0e231111, 0x0d1e8d8e, 0x0e8d0d10, 0x8e781e8e, 0x0f178d8e, 0x0f0f0f0a,\n0x25078d8d, 0x2507258d, 0x8d078d07, 0x25078d25, 0x8e8d258d, 0x8e232323, 0x0d171658, 0x8e7b160d, 0x1710178d, 0xc2c25f8d, 0x118fc2c2, 0x178d8e23, 0x8d070d10, 0x8d1e588e, 0x108d8e23, 0x0f0f0f0f,\n0x8d250725, 0x258d0725, 0x078d258d, 0x8d25078d, 0x618e2525, 0x8e23238e, 0x10100d58, 0x251e160d, 0x0d101e25, 0xc25f8e1e, 0x11c2c2c2, 0x0d1e8d0e, 0x8d1e1010, 0x8e8d8e18, 0x178e2323, 0x0d100f10,\n0x07258d25, 0x0725258d, 0x8d250725, 0x07258d08, 0x258d088d, 0x8d8e8d8e, 0x10100d1e, 0x8e8e1e0d, 0x0d0d1e25, 0x238e8d16, 0x8d234111, 0x10100d78, 0x1e0d0f0a, 0x1b8e1b8e, 0x1e8e1111, 0x770d0d16,\n0x258d0725, 0x8d258d07, 0x58078d25, 0x258d0725, 0x25252525, 0x1e252525, 0x10100d16, 0x188d780d, 0x16161e8e, 0x7b1e1616, 0x0d781e8d, 0x0a0f0f10, 0x3a0a0c0c, 0x23231b8d, 0x8d231111, 0x8d168d8d,\n0x25258d25, 0x0725078d, 0x078d078d, 0x0725258d, 0x258d088d, 0x1e1e078d, 0x100d0d16, 0x1b8d160d, 0x16168d8e, 0x0d161616, 0x0d0d0d0d, 0x0f100d0d, 0x0f05050c, 0x11238e16, 0x0e238f11, 0x8e8e0e23,\n0x8d072525, 0x8d258d07, 0x25258d07, 0x8d25078d, 0x8d078d07, 0x161e5807, 0x17170d17, 0x0e8d1616, 0x161e8d23, 0x10177816, 0x16100f0f, 0x3a788d58, 0x0c050c10, 0x118e5810, 0x2323118f, 0x23111111,\n0x078d0725, 0x2507258d, 0x078d078d, 0x078d5825, 0x0725588d, 0x1e8d078d, 0x7817171e, 0x8e251e1e, 0x1e8d0e11, 0x1017161e, 0x0d0f0c0a, 0x588e0e8e, 0x0c0c0f16, 0x238d160f, 0x8e231111, 0x11118f8f,\n0x25258d25, 0x07258d25, 0x8d07258d, 0x8d078d07, 0x8d078d07, 0x8d075807, 0x1616168d, 0x238e8d8d, 0x8e0e1111, 0x10171e1e, 0x3a0c0c0a, 0x8e23118e, 0x0f103a8d, 0x8e1e0d10, 0x618d2323, 0x11c2c211,\n0x078d0725, 0x8d25078d, 0x078d2507, 0x2525258d, 0x078d078d, 0x8e8d8d58, 0x0d168d8e, 0x238e2506, 0x11118f11, 0x571e8e8e, 0x0d0c0c0c, 0x0e118f8d, 0x17178d25, 0x251e1e16, 0x8d078e8d, 0xc2c25f11,\n0x8d088d25, 0x258d2525, 0x8d078d25, 0x8d078d07, 0x58582507, 0x188e078d, 0x171e8e0e, 0x238e5817, 0x8fc25f8f, 0x0d8d238f, 0x0d0f0c0f, 0x11c21125, 0x1e16078e, 0x8d8e8d8d, 0x1e78588e, 0x11c2118e,\n0x25252525, 0x25078d07, 0x258d0725, 0x8d582525, 0x8d078d07, 0x8e255807, 0x171e8d61, 0x238d170d, 0x5f8f8f11, 0x7b8e118f, 0x3a0f0a10, 0x8fc2238d, 0x1e178d23, 0x2323238e, 0x16168d0e, 0x1111118d,\n0x078d0725, 0x078d088d, 0x8d07258d, 0x25078d07, 0x58078d58, 0x258d078d, 0x161e258e, 0x8d170d0d, 0x8f5f1123, 0x1e1b2311, 0x1e0d0f0d, 0xc211618e, 0x16178d11, 0x1111238d, 0x168d2311, 0x23238e07,\n0x8d258d25, 0x8d252507, 0x078d2507, 0x078d078d, 0x588d078d, 0x58075807, 0x1e1e1e58, 0x0d0d0d78, 0x23238e8d, 0x788d8d1b, 0x7b0d0d0d, 0x5f238e8e, 0x171e238f, 0x11118e25, 0x8e238f8f, 0x8e8e618d,\n0x25072525, 0x25078d25, 0x8d078d25, 0x8d258d25, 0x8d078d07, 0x8d588d07, 0x1e1e1e07, 0x0d0d781e, 0x8d8d5816, 0x100d1658, 0x8d160d10, 0x238e2323, 0x168e1111, 0x11238e78, 0x118f5f11, 0x8d1b2311,\n0x8d8d0725, 0x258d2507, 0x078d2507, 0x07580725, 0x078d078d, 0x0758078d, 0x1e071e58, 0x161e078d, 0x078e581e, 0x0f100d16, 0x8d16100f, 0x8d23230e, 0x16258d8d, 0x230e7b0d, 0xc28f8f11, 0x8e11118f,\n0x25088d25, 0x8d25078d, 0x8d25088d, 0x8d258d07, 0x25588d07, 0x8d078d58, 0x071e8d07, 0x8d8d8e8d, 0x8d258d08, 0x0a0a1016, 0x8e160d0f, 0x8e231123, 0x0d0d1716, 0x238d0d10, 0x8f5f1123, 0x231111c2,\n0x078d0725, 0x25078d25, 0x25078d07, 0x0725078d, 0x078d078d, 0x078d078d, 0x078d1e58, 0x8e182525, 0x8d8e8e8e, 0x0c0f1016, 0x8d160d0f, 0x0e111123, 0x0c0a0f1e, 0x8d100ff6, 0x5f8f1123, 0x23118f5f,\n0x25258d25, 0x258d078d, 0x8d25258d, 0x8d078d07, 0x078d2525, 0x8d07588d, 0x58078d07, 0x8e8e8e8d, 0x1e252561, 0x0a0a1016, 0x8e58170f, 0x23111123, 0x05050f8d, 0x0d0a0c0c, 0x11118e58, 0x23231111,\n0x078d0725, 0x07258d25, 0x078d0725, 0x2525258d, 0x8d078d07, 0x07588d07, 0x078d078d, 0x6118258d, 0x1e258d8e, 0x0f0f1017, 0x0e8d7810, 0x23112323, 0x050c0d8e, 0x0f0a0c05, 0x231b8d17, 0x8e232323,\n0x8d078d25, 0x258d2507, 0x2525258d, 0x8d078d07, 0x258d0725, 0x588d0725, 0x8d078d07, 0x258d8d07, 0x1e072525, 0x10100d78, 0x8e8e1e0d, 0x23232323, 0x0f10788e, 0x0f0f0c0a, 0x8e8d160d, 0x8e8d8e8e,\n0x258d0825, 0x25078d25, 0x8d078d07, 0x588d2525, 0x07258d07, 0x25078d25, 0x2558258d, 0x8d072525, 0x8d588d08, 0x17781e1e, 0x8e8d1e16, 0x1b238e23, 0x3a3a1e8e, 0x0d100d8c, 0x581e1617, 0x25258d25,\n0x0725588d, 0x258d078d, 0x258d078d, 0x08078d07, 0x58078d25, 0x8d25078d, 0x078d0707, 0x078d078d, 0x078d078d, 0x8d8d8d08, 0x6025581e, 0x8e8e1b8e, 0x1e16588d, 0x1e781e8d, 0x071e1e8d, 0x58252558,\n0x258d0725, 0x25088d07, 0x25088d25, 0x8d8d258d, 0x8d258d07, 0x07258d07, 0x8d078d8d, 0x25258d07, 0x8d072558, 0x8e088e8d, 0x258e8d8e, 0x258d8e8d, 0x1e16161e, 0x8d8e8d8e, 0x8d8e8e08, 0x1e8d0758,\n0x8d078d25, 0x078d2525, 0x078d078d, 0x25250725, 0x25250725, 0x258d078d, 0x25252507, 0x078d078d, 0x078d078d, 0x188d2525, 0x8e8e188e, 0x258e1b1b, 0x780d171e, 0x8e188e25, 0x8e230e8d, 0x1e078d8e,\n0x25252525, 0x8d072507, 0x8d252525, 0x078d8d25, 0x8d078d25, 0x25252507, 0x078d078d, 0x8d252525, 0x25258d07, 0x8e25258d, 0x1b1b8e61, 0x8e23238e, 0x0d0d0d1e, 0x1b231b8d, 0x11238e1b, 0x1e8e0e23,\n0x088d078d, 0x258d258d, 0x25078d07, 0x25072507, 0x078d258d, 0x8d078d25, 0x25258d07, 0x078d078d, 0x25088d25, 0x258d0825, 0x8e618e8d, 0x8e1b230e, 0x0d0d168d, 0x238e8e1e, 0x23238e8e, 0x8d0e1111,\n0x8d252525, 0x8d078d07, 0x258d2525, 0x258d258d, 0x8d252507, 0x258d2525, 0x8d072525, 0x8d258d08, 0x258d0825, 0x8e258d8e, 0x618e2525, 0x8e1b8e8e, 0x0d0d1625, 0x230e8d1e, 0x238e1b1b, 0x8d231111,\n0x078d0725, 0x078d088d, 0x0725078d, 0x8d25078d, 0x078d0725, 0x0725078d, 0x258d258d, 0x25072525, 0x8d08258d, 0x25250825, 0x8e258d8e, 0x258d8e8d, 0x0d0d1e8d, 0x1b8e2516, 0x0e8d238e, 0x8e0e2323,\n0x25258d25, 0x8d252525, 0x8d258d07, 0x25078d07, 0x8d088d07, 0x8d258d08, 0x8d072507, 0x8d8d2508, 0x088d2508, 0x258d2525, 0x258d0825, 0x8d252525, 0x16781e07, 0x8e8d581e, 0x8e0e0e23, 0x8d8e8e8d,\n0x088d0725, 0x088d078d, 0x07252525, 0x8d25258d, 0x25588d25, 0x08252525, 0x258d258d, 0x08258d25, 0x25088d25, 0x8e258e8d, 0x8e258d25, 0x088d8e25, 0x1e1e8d25, 0x8e258d07, 0x8e1b8e61, 0x1e588d25,\n0x8d088d25, 0x8d088d07, 0x8d078d25, 0x078d0725, 0x088d0725, 0x258d078d, 0x08250725, 0x8d25088d, 0x8d258d08, 0x25252508, 0x25258e25, 0x2525258d, 0x8e8d088d, 0x8e258e8d, 0x0e23231b, 0x161e258e,\n0x25252525, 0x07252525, 0x078d088d, 0x8d25258d, 0x8d088d25, 0x8d088d25, 0x8d258d25, 0x25088d07, 0x2525088d, 0x8e25258d, 0x258e2525, 0x258e258e, 0x25252525, 0x8e1b258e, 0x2323238e, 0x171e8d1b,\n0x078d088d, 0x8d25078d, 0x25252525, 0x25088d07, 0x25252508, 0x07252508, 0x0825088d, 0x258d258d, 0x8e258d08, 0x258d8e25, 0x258d258e, 0x8e252525, 0x8e258e25, 0x768e8e25, 0x1111238e, 0x178d8e23,\n0x8d088d07, 0x258d2525, 0x25078d08, 0x258d258d, 0x8d078d8d, 0x8d088d25, 0x8d088d08, 0x08250825, 0x2525258d, 0x25252525, 0x25252525, 0x258e258e, 0x8d258d25, 0x8e768e60, 0x11232323, 0x1e8e2311,\n0x25252525, 0x25088d07, 0x258d088d, 0x8d072508, 0x088d2508, 0x078d0825, 0x8d58258d, 0x8d258d08, 0x258e2508, 0x258e258e, 0x258e8d8e, 0x25258d25, 0x258e258e, 0x1b8e618e, 0x23238e0e, 0x1e0e2311,\n0x258d0725, 0x078d088d, 0x8d252525, 0x25258d25, 0x8d25078d, 0x25258d07, 0x25088d25, 0x8d082525, 0x25258d25, 0x258d258d, 0x8d252525, 0x8d258e25, 0x8e252525, 0x8e1b8e25, 0x23232323, 0x588e2323\n);\n\nint getPaletteIndexXY(in ivec2 fetch_pos)\n{\n    int palette_index = 0;\n    if(fetch_pos.x >= 0 && fetch_pos.y >= 0\n        && fetch_pos.x < int(bitmap_size.x) && fetch_pos.y < int(bitmap_size.y))\n    {\n        int line_index = fetch_pos.y * longs_per_line;\n\n        int long_index = line_index + (fetch_pos.x >> 2);\n        int bitmap_long = bitmap[long_index];\n\n        int byte_index = fetch_pos.x & 0x03;\n        palette_index = (bitmap_long >> (byte_index << 3)) & 0xff;\n    }\n    return palette_index;\n}\nint getPaletteIndex(in vec2 uv) {\n    int palette_index = 0;\n    ivec2 fetch_pos = ivec2(uv * bitmap_size);\n    palette_index = getPaletteIndexXY(fetch_pos);\n    return palette_index;\n}\n\nvec4 getColorFromPalette(in int palette_index) {\n    int int_color = palette[palette_index];\n    return vec4(float(int_color & 0xff)/ 255.0,float((int_color >> 8)& 0xff)/ 255.0,float((int_color >> 16)& 0xff)/ 255.0,0);\n}\nvec4 getBitmapColor(in vec2 uc) {\n vec2 ut = fract(vec2(2.*mix(uc.x,1.-uc.x,step(0.5,uc.x)),uc.y));\n    return getColorFromPalette(getPaletteIndex(ut));\n}\n/*float gr(in vec2 uc){\nvec2 ut = fract(uc);\nfloat m1 = getBitmapColor(ut).x;\n    float m2 = getBitmapColor(ut+vec2(1./64.,0.)).x;\n    float mm = smoothstep(0.,1.,fract(uc.x*64.));\n    float m3 = mix(m1,m2,mm);\n    float m4 = getBitmapColor(ut+vec2(0.,1./126.)).x;\n    float m5 = getBitmapColor(ut+vec2(1./64.,1./126.)).x;\n    float m6 = mix(m4,m5,mm);\n    float mf = mix(m3,m6,smoothstep(0.,1.,fract(uc.y*126.)));\n    return clamp(mf,0.,1.);}*/\n    float tf(in vec2 uc){\n    float nbi = 32.;\n    float b = sqrt(nbi);\n    float c = 0.;\n    vec2 d = vec2(16./9.,1.)*0.002;\n    for(float  i = -0.5*b ; i<=0.5* b ; i +=1.)\n    for(float  j = -0.5*b ; j<=0.5* b ; j +=1.){\n    c+= clamp(getBitmapColor(uc+vec2(i,j)*d).x,0.,1.);\n    }\n    c/=nbi;\n    return c;}\nmat2 rot( float t){ float c = cos(t); float s = sin(t); return mat2(c,-s,s,c);}\nfloat box (vec3 p, vec3 b){ vec3 q = abs(p)-b;\nreturn length(max(vec3(0.),q))+min(0.,max(q.x,max(q.y,q.z)));}\nfloat rd (float t){ return fract(sin(dot(floor(t),45.))*7845.26);}\nfloat no(float t){ return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat it(float t){ float r = 0. ; float a = 0.5; for(int i =0 ; i <4 ; i++){\nr += no(t/a)*a;a*=0.5;}return r;}\nfloat it2(float t){ float r = 0. ; float a = 0.5; for(int i =0 ; i <4 ; i++){\nr += rd(t/a)*a;a*=0.5;}return r;}\nfloat map(vec3 p,float t) {\np.zy *= rot(-1.5);\nfloat ta = smoothstep(0.,0.8,t);\np.xy *= rot(p.z*smoothstep(1.,0.,smoothstep(0.,0.8,ta))*-5.);\nvec3 p2 = p;\n    \n    if (length(p) > 1.) {\n        return length(p)-.8;\n    }\n     p.x = -sqrt(p.x*p.x*0.9);\n  \nvec4 f0_0=sin(p.y*vec4(-.321,-2.791,-4.643,2.284)+p.z*vec4(1.222,-2.110,-4.376,1.614)+p.x*vec4(2.547,-1.405,-3.135,4.394)+vec4(1.334,-7.759,4.197,-6.586));\nvec4 f0_1=sin(p.y*vec4(-2.796,.867,-.386,.910)+p.z*vec4(2.377,-.290,-.203,-3.215)+p.x*vec4(-1.568,.111,1.377,-3.537)+vec4(-1.977,-6.628,-3.971,-5.934));\nvec4 f0_2=sin(p.y*vec4(-1.871,-3.235,3.295,.910)+p.z*vec4(3.963,.751,.891,4.440)+p.x*vec4(-.108,3.951,-1.522,-1.894)+vec4(.379,4.143,7.199,2.787));\nvec4 f0_3=sin(p.y*vec4(-.115,-3.706,-1.781,-1.297)+p.z*vec4(3.281,-4.293,2.850,-2.724)+p.x*vec4(3.866,-.665,-3.967,3.145)+vec4(6.485,.496,.868,-1.146));\nvec4 f0_4=sin(p.y*vec4(4.171,2.656,-.363,-.121)+p.z*vec4(-3.205,-4.420,2.844,.058)+p.x*vec4(-1.284,.743,3.714,-.188)+vec4(-6.291,3.200,4.634,4.619));\nvec4 f0_5=sin(p.y*vec4(-2.016,-4.793,3.785,3.076)+p.z*vec4(3.738,-2.051,-4.521,-.045)+p.x*vec4(.111,1.219,1.401,3.412)+vec4(2.144,2.998,-.668,3.818));\nvec4 f0_6=sin(p.y*vec4(-4.779,-2.003,2.483,1.341)+p.z*vec4(2.295,-.182,2.588,1.196)+p.x*vec4(1.747,.270,2.048,-3.450)+vec4(3.011,6.535,-2.411,-4.661));\nvec4 f0_7=sin(p.y*vec4(-4.501,-.512,2.655,2.182)+p.z*vec4(3.152,.787,-.934,-4.359)+p.x*vec4(-2.421,-1.935,-3.250,.455)+vec4(-4.039,5.692,-7.783,-5.423));\nvec4 f1_0=sin(mat4(-.061,.182,-.273,-.176,-.288,.178,-.130,.433,-.054,-.376,-.117,.213,.056,-.541,.010,-.253)*f0_0+\n    mat4(-.061,-.081,.294,.149,-.269,-.384,.362,.113,.450,-.214,-.326,.195,.029,-.408,.322,.251)*f0_1+\n    mat4(-.168,-.252,-.137,-.196,.467,-.176,-.263,-.179,.233,-.259,-.519,-.288,.527,-.398,.362,.042)*f0_2+\n    mat4(-.219,-.117,-.089,-.168,.340,-.151,.516,-.217,-.177,.231,-.092,.315,-.152,-.284,-.122,.061)*f0_3+\n    mat4(-.218,-.024,.090,-.064,-.304,.027,-.194,-.073,-.229,.056,-.205,-.397,-.196,.225,-.062,-.539)*f0_4+\n    mat4(-.015,-.209,-.068,-.074,.616,.070,-.290,.016,.168,.316,.776,.107,-.073,.058,-.244,.174)*f0_5+\n    mat4(.040,-.348,.039,-.219,.005,-.041,-.168,.110,-.806,-.061,-.022,-.130,.056,-.133,-.392,.072)*f0_6+\n    mat4(.164,-.267,.219,-.303,.803,.380,.231,-.054,.408,.223,.600,.341,.115,.167,.431,.124)*f0_7+\n    vec4(.693,-.130,-1.966,-.497))/1.0+f0_0;\nvec4 f1_1=sin(mat4(-.137,-.409,-.236,-.510,-.290,.769,-.288,-.603,.443,-.501,.201,.073,.000,-.211,-.252,.520)*f0_0+\n    mat4(-.238,.462,-.056,.142,.699,-.714,-.180,.071,-.334,-.066,-.462,-.184,.328,-.456,.484,-.262)*f0_1+\n    mat4(-.077,-.491,.392,-.165,.412,-.324,-.118,-.068,-.231,.485,.209,.282,-.376,.149,.208,-.301)*f0_2+\n    mat4(.298,.082,-.303,.145,-.038,.069,-.456,.286,-.225,.105,-.637,-.860,.443,.564,-.197,.127)*f0_3+\n    mat4(.187,.145,-.099,.218,.089,.025,.060,.365,-.244,.394,-.405,.326,.409,-.368,.091,-.362)*f0_4+\n    mat4(-.082,-.420,.144,.093,-.140,-.317,-.305,.380,-.459,.153,-.263,-.036,-.069,-.377,.505,.329)*f0_5+\n    mat4(.356,-.386,-.144,.140,-.233,.838,-.144,-.255,-.549,.431,-.140,-.011,-.256,.006,-.247,-.862)*f0_6+\n    mat4(.449,-.089,-.259,-.279,-.152,.222,-.077,.199,.365,.458,-.031,.145,-.313,-.559,-.548,-.638)*f0_7+\n    vec4(.979,-1.097,-2.461,-1.371))/1.0+f0_1;\nvec4 f1_2=sin(mat4(.405,-.169,.025,.373,.756,.002,.283,.115,-.162,-.194,-.020,.456,-.257,-.226,.209,.022)*f0_0+\n    mat4(.139,-.086,.133,-.148,-.132,.132,.028,.088,.034,.304,-.103,-.019,-.442,.258,-.141,-.185)*f0_1+\n    mat4(.069,-.012,-.322,.051,-.692,.335,.282,.609,.325,-.165,-.099,-.355,.299,-.060,.226,.264)*f0_2+\n    mat4(.019,-.163,-.188,.089,-.336,.269,-.180,-.273,-.138,-.028,-.209,.113,-.294,.240,-.258,.115)*f0_3+\n    mat4(-.131,-.212,.046,.199,-.092,.139,.169,-.227,.076,.006,.324,.014,-.325,-.086,-.213,.301)*f0_4+\n    mat4(-.129,-.319,.462,.012,-.006,.076,-.317,-.117,.308,-.144,.178,.261,.011,-.170,.217,-.364)*f0_5+\n    mat4(-.442,-.051,-.097,-.020,.373,.021,.003,.150,.466,-.160,.177,.226,.519,.001,.059,.303)*f0_6+\n    mat4(-.061,.061,-.175,-.148,-.890,.780,.178,-.060,-.376,.311,.143,-.107,-.078,-.247,-.158,-.456)*f0_7+\n    vec4(1.695,.780,-1.666,2.100))/1.0+f0_2;\nvec4 f1_3=sin(mat4(.311,.158,-.277,-.233,-.296,-.168,-.000,.140,-.252,-.161,.127,.006,.057,.449,.133,-.113)*f0_0+\n    mat4(-.438,-.039,.244,.441,-.156,.500,.233,-.069,.520,.087,.232,-.220,-.388,-.201,.137,-.041)*f0_1+\n    mat4(-.441,-.319,.088,-.391,-.125,.178,.062,-.069,.151,.370,.099,.040,.305,-.245,-.483,-.410)*f0_2+\n    mat4(-.092,.175,-.045,.134,.522,.030,.230,-.260,-.387,-.150,-.420,-.113,.080,-.913,.208,-.264)*f0_3+\n    mat4(-.222,-.561,.419,.220,.133,-.002,-.068,-.077,.424,-.363,.393,.098,-.279,.322,.217,.310)*f0_4+\n    mat4(-.091,.034,-.229,-.548,-.121,.011,.302,.161,.680,.061,-.310,-.136,-.347,.264,.762,.327)*f0_5+\n    mat4(-.191,-.146,-.202,-.060,.116,-.233,-.149,.210,.203,-.135,.069,-.424,.092,.110,-.237,-.283)*f0_6+\n    mat4(-.061,-.207,-.468,-.173,-.392,.278,.475,.230,-.198,.146,.206,.304,-.089,-.485,.085,.251)*f0_7+\n    vec4(1.381,1.839,-1.666,1.197))/1.0+f0_3;\nvec4 f1_4=sin(mat4(.246,.120,-.078,-.362,.550,.122,.444,-.393,-.162,.485,.154,-.739,.445,-.433,.236,-.149)*f0_0+\n    mat4(-.112,-.108,.194,.376,-.017,-.348,.366,.006,-.299,-.141,.208,.116,-.530,-.423,.228,.411)*f0_1+\n    mat4(.211,-.511,.249,-.322,-.322,.351,-.261,-.386,.083,-.289,.212,.040,.083,-.433,.158,-.078)*f0_2+\n    mat4(-.034,.175,.301,-.720,.021,-.049,-.445,.212,-.145,.322,-.518,.010,.173,.045,.913,.446)*f0_3+\n    mat4(-.135,.075,-.091,-.086,-.051,-.214,.151,.295,.076,-.204,-.448,.205,.146,.225,.212,-.272)*f0_4+\n    mat4(-.113,.082,-.010,-.202,-.266,.085,-.077,-.196,-.070,.114,.643,-.542,-.031,-.007,.169,-.031)*f0_5+\n    mat4(-.386,-.062,-.215,.641,.155,-.230,-.455,.212,.204,-.275,-.142,.148,.018,-.559,-.284,.224)*f0_6+\n    mat4(.178,.383,-.358,.478,.245,.400,.346,-.457,.396,-.054,.147,-.037,-.026,-.158,-.284,-.433)*f0_7+\n    vec4(-1.584,-1.011,-.332,1.641))/1.0+f0_4;\nvec4 f1_5=sin(mat4(-.208,-.405,-.433,-.312,.018,.241,-.029,-.036,-.144,.086,-.072,.697,-.151,-.595,-.364,.115)*f0_0+\n    mat4(.435,-.201,.149,-.044,.348,-.202,.145,-.001,-.136,.540,-.044,.027,-.019,.512,-.200,.416)*f0_1+\n    mat4(-.353,-.273,.384,-.088,.158,.230,-.143,.098,.144,.264,.921,.280,.402,-.962,-.155,-.242)*f0_2+\n    mat4(.184,-.068,.363,.048,-.003,-.286,-.247,-.668,.296,.315,-.123,-.187,-.493,.111,.184,-.041)*f0_3+\n    mat4(.363,-.020,-.317,-.275,-.121,.179,-.300,.178,.392,.345,-.128,-.428,.009,-.430,.034,.261)*f0_4+\n    mat4(.057,.007,.431,.267,-.335,-.089,1.248,.593,.122,-.002,-.332,-.224,-.303,.268,.260,-.208)*f0_5+\n    mat4(.230,.078,-.151,-.359,-.366,.160,.266,-.294,.329,.689,.078,-.373,.389,-.390,-.065,-.096)*f0_6+\n    mat4(.340,-.007,-.219,-.245,.100,.201,.537,1.009,.023,.409,-.373,.228,.161,-.436,.024,-.046)*f0_7+\n    vec4(2.296,.204,.510,-1.976))/1.0+f0_5;\nvec4 f1_6=sin(mat4(-.221,.402,.027,.083,.226,.519,-.342,.300,-.043,.506,-.253,.321,-.162,-.327,.075,-.073)*f0_0+\n    mat4(-.401,-.703,.092,-.487,-.045,-.309,.261,.076,-.410,-.374,.165,-.025,.086,.508,-.185,-.261)*f0_1+\n    mat4(.143,.036,.405,-.129,-.500,-.271,.401,-.076,-.308,-.412,.437,.351,-.284,.585,.193,-.948)*f0_2+\n    mat4(-.074,.274,.000,.322,-.439,-.463,.849,-.853,.766,.035,.465,.041,.146,.322,-.081,-.472)*f0_3+\n    mat4(.095,.119,-.128,.370,-.154,-.125,.285,-.101,-.253,-.757,-.256,.233,.069,.453,.121,-.141)*f0_4+\n    mat4(.302,.241,-.100,-.284,-.448,-.141,.102,.251,-.363,-.436,-.086,-.033,.017,.408,-.215,.263)*f0_5+\n    mat4(.394,-.244,.049,.400,.154,.111,-.522,-.085,-.180,-.392,.138,.332,.420,.518,.282,.260)*f0_6+\n    mat4(.725,-.161,.045,.052,-.049,.055,.281,-.530,.096,-.484,.026,-.083,-.165,-.295,-.481,.350)*f0_7+\n    vec4(-2.466,1.140,-2.734,-1.018))/1.0+f0_6;\nvec4 f1_7=sin(mat4(.268,-.423,.269,.365,.067,-.236,.600,.196,-.432,.191,-.145,.364,.028,.352,.064,.397)*f0_0+\n    mat4(.452,.536,.794,.083,-.396,-.070,-.217,-.169,.167,.584,.358,.318,-.094,-.625,.254,-.215)*f0_1+\n    mat4(.104,-.071,.281,.135,.017,.263,-.153,.548,.293,.387,-.381,.226,-.112,-.590,.397,.390)*f0_2+\n    mat4(-.114,.183,.179,.366,.248,-.085,.175,-.009,-.063,-.137,-.493,-.267,-.003,-.135,.155,-.169)*f0_3+\n    mat4(-.185,-.022,.201,-.027,.350,-.471,.163,.059,-.500,.416,.000,-.076,-.492,-.081,-.139,-.189)*f0_4+\n    mat4(.035,-.362,-.253,.162,-.180,-.131,-.754,.070,.260,.372,-.216,.217,-.157,.275,.101,-.285)*f0_5+\n    mat4(.158,-.496,-.058,-.258,.080,.491,.610,-.298,-.514,.087,-.290,-.406,.484,-.004,.278,-.194)*f0_6+\n    mat4(-.244,-.079,-.012,-.422,-.129,.415,.652,.041,-.743,-.169,.269,-.447,.037,-.004,-.200,-.236)*f0_7+\n    vec4(1.280,2.398,1.793,1.544))/1.0+f0_7;\nvec4 f2_0=sin(mat4(.102,-.331,.103,.125,-.009,.179,.091,-.521,.770,-.288,.339,.321,-.305,.336,.350,.030)*f1_0+\n    mat4(-.075,-.020,-.250,-.353,-.094,-.094,-.385,.260,-.196,-.087,.047,.424,-.148,-.451,.032,-.048)*f1_1+\n    mat4(.545,-.275,-.261,.657,.052,.766,-.050,.436,.248,.077,.008,-.702,.057,-.192,-.519,.146)*f1_2+\n    mat4(-.095,.162,.165,.040,.411,-.121,-.190,.167,.495,-.211,.388,.175,-.562,.129,-.490,-.301)*f1_3+\n    mat4(.451,-.115,.234,.024,-.302,-.109,.183,-.206,-1.022,.094,-.187,-.372,-.002,.092,.192,-.069)*f1_4+\n    mat4(.180,.579,-.100,1.239,.062,-.076,-.321,-.283,.024,.056,.054,.114,.009,-.572,-.133,.105)*f1_5+\n    mat4(-.268,-.337,-.023,-.142,-.570,-.165,.080,-.303,.314,-.133,.015,-.513,-.075,.158,-.135,.220)*f1_6+\n    mat4(-.020,.185,-.191,.405,-.392,-.082,-.325,-.224,.074,-.002,-.144,.154,.234,-.520,.175,.230)*f1_7+\n    vec4(.863,.693,.346,.314))/1.4+f1_0;\nvec4 f2_1=sin(mat4(.112,-.037,.200,-.197,-.173,.365,.124,.187,-.374,.359,.001,-.310,.119,.373,.144,-.160)*f1_0+\n    mat4(.093,-.418,.006,.338,.362,.174,.022,-.116,.188,.173,-.043,-.116,.558,-.004,-.054,-.073)*f1_1+\n    mat4(-.621,-.232,-.377,.367,.023,.058,-.550,-.083,.440,.100,-.240,-.168,-.019,.376,.036,.307)*f1_2+\n    mat4(-.238,-.013,-.146,-.336,-.532,.368,-.487,.466,.049,-.575,.472,.112,-.369,.298,-.272,-.222)*f1_3+\n    mat4(-.067,-.213,-.089,.464,-.204,.132,.238,-.363,.377,.073,-.573,-.325,.486,.099,-.018,-.225)*f1_4+\n    mat4(-.086,.005,.366,.428,-.476,-.133,.150,.062,-.209,.491,-.426,-.169,-.247,-.263,-.077,-.070)*f1_5+\n    mat4(.092,.464,-.146,.105,.034,-.223,-.183,-.001,.141,.079,-.206,.242,.080,-.282,-.022,.107)*f1_6+\n    mat4(-.378,.164,.380,.168,-.519,.274,-.198,.046,-.205,.234,.188,.301,-.301,.166,.323,.308)*f1_7+\n    vec4(.781,.833,1.151,.488))/1.4+f1_1;\nvec4 f2_2=sin(mat4(.258,.031,.426,.855,.376,-.373,-.631,-.267,.202,.085,-.120,-.202,-.168,.106,-.251,-.233)*f1_0+\n    mat4(-.112,-.164,.844,.300,-.132,-.158,.420,-.380,-.035,.253,.100,-.143,.795,-.225,-.307,-.316)*f1_1+\n    mat4(-.818,-.017,-.239,.027,.592,-.028,.094,.463,.616,-.186,.396,.128,-.789,.399,-.279,.015)*f1_2+\n    mat4(-.346,.484,.367,.400,-.052,-.022,.499,.439,.814,-.640,-.073,.081,-.059,.631,-.117,-.118)*f1_3+\n    mat4(.303,-.414,.330,-.064,.521,-.222,-.642,-.549,-.262,.551,-.293,.073,-.470,.443,.224,.067)*f1_4+\n    mat4(1.114,-.350,.079,.120,.132,-.382,.025,.319,-.922,.243,.456,-.135,.710,-.507,-.202,-.772)*f1_5+\n    mat4(.125,-.398,-.561,-.329,-.391,.301,-.266,.237,.539,-.165,-.250,-.710,-.258,-.200,-.240,-.324)*f1_6+\n    mat4(-.264,.109,-.274,-.027,-.522,.543,-.061,.017,-.838,.127,-.208,.338,-1.062,-.029,.173,-.335)*f1_7+\n    vec4(-1.326,-1.393,-1.972,-.514))/1.4+f1_2;\nvec4 f2_3=sin(mat4(.383,.429,-.111,.352,-.250,.156,-.088,-.430,.196,.016,.169,.143,-.093,.352,.178,.077)*f1_0+\n    mat4(.135,-.179,-.180,-.321,.022,-.300,.075,-.200,-.087,.278,-.256,.426,-.217,-.262,.229,-.497)*f1_1+\n    mat4(.291,.218,.254,.024,-.407,.362,-.043,.511,-.582,-.413,.249,-.298,.088,.485,.084,-.078)*f1_2+\n    mat4(.408,.921,.200,.024,.232,.042,-.401,.059,-.305,-.329,-.368,-.177,.260,.239,.214,-.133)*f1_3+\n    mat4(-.295,-.312,.036,-.070,.293,-.120,-.384,.212,.304,.079,-.085,-.312,.067,-.067,.416,.311)*f1_4+\n    mat4(-.137,.154,-.303,.111,.241,.510,.146,-.243,.078,-.057,-.097,-.051,.064,-.474,.367,.127)*f1_5+\n    mat4(.068,.319,.250,-.459,.229,.037,-.206,-.155,-.071,.325,.179,-.028,-.229,-.113,-.473,-.030)*f1_6+\n    mat4(.372,.087,-.041,-.276,.519,-.012,.366,.464,.072,.001,-.141,.078,.279,-.201,-.406,-.254)*f1_7+\n    vec4(-1.739,1.745,-.625,.767))/1.4+f1_3;\nvec4 f2_4=sin(mat4(.553,-.386,-.669,.425,-.464,.256,.160,.190,-.423,.688,-.251,.137,-.508,.280,.379,.339)*f1_0+\n    mat4(-.134,.183,.240,.146,-.178,-.138,-.487,-.139,-.059,-.174,1.495,.105,-.057,.033,-.579,.068)*f1_1+\n    mat4(-.228,-.865,.544,.625,.652,-.155,.022,-.120,-.326,-.152,-.526,.131,.023,.334,.155,.223)*f1_2+\n    mat4(-.217,-.154,-.383,.221,.584,-.173,-.911,.087,-.036,.602,.551,.368,-.078,.090,.304,-.282)*f1_3+\n    mat4(-.329,.121,-.290,-.312,.049,.074,.229,.005,.022,-.499,-.442,-.047,-.115,.042,.215,.162)*f1_4+\n    mat4(.472,.444,.013,-.156,.730,-.384,-.845,-.541,-.061,.526,.113,-.268,-.276,-.573,.016,.066)*f1_5+\n    mat4(-.119,.473,.304,-.390,.043,.318,-.626,.270,-.526,.163,1.073,.208,-.260,1.016,.135,-.084)*f1_6+\n    mat4(.292,.398,-.394,-.281,-.274,-.093,-.078,-.047,-.002,-.124,.108,-.416,.264,.024,.171,.040)*f1_7+\n    vec4(2.598,2.164,1.042,-1.008))/1.4+f1_4;\nvec4 f2_5=sin(mat4(-.427,-.229,.771,-.129,.452,.039,-.117,1.090,.192,-.024,1.178,.383,.009,.282,-.625,-.209)*f1_0+\n    mat4(-.436,.036,-.321,-.874,-.118,-.308,-.236,-.194,.159,.274,-.497,.078,.268,.119,-.480,.134)*f1_1+\n    mat4(-.101,-1.475,.375,.536,-.389,.130,.234,.218,.059,.079,1.463,.567,-.012,.281,-.011,-.029)*f1_2+\n    mat4(-.006,.351,-.202,-.636,.261,.081,.917,.504,.660,.093,.584,.473,-.061,-.199,.715,-.725)*f1_3+\n    mat4(.346,-.100,-.197,-.161,.366,.882,.140,-.175,-.175,.812,-.860,.237,.360,.049,.366,.151)*f1_4+\n    mat4(-.630,-.600,.638,-.249,.344,-.050,-.469,.428,-.133,-.151,.765,-.311,.154,-.566,.055,.015)*f1_5+\n    mat4(-.048,.508,.124,.108,.177,-.315,-.376,.514,-.229,-.009,.763,.220,.252,-.608,.630,-.256)*f1_6+\n    mat4(-.035,.565,.196,.076,-.314,-.155,-.178,.095,-.363,-.007,.533,.258,.038,.188,-1.086,-.266)*f1_7+\n    vec4(-1.547,.073,.701,.673))/1.4+f1_5;\nvec4 f2_6=sin(mat4(.263,-.291,.052,.053,.170,.217,-.267,-.461,.551,.097,-.102,.112,.476,.321,.063,-.047)*f1_0+\n    mat4(.333,-.113,.225,.137,-.705,.277,-.420,.277,-.197,.181,.199,-.217,-.067,.020,.149,.340)*f1_1+\n    mat4(.517,-.297,-.025,-.263,-.182,.078,.473,.280,.545,.405,-.040,.051,-.189,.313,-.023,-.590)*f1_2+\n    mat4(-.542,.282,-.361,-.008,-.257,-.199,.121,-.296,-.525,.612,.394,.392,-.125,-.815,.276,.898)*f1_3+\n    mat4(-.049,.373,-.645,.085,-.027,.023,.069,.163,-.279,-.062,-.558,-.095,-.447,-.432,-.710,.061)*f1_4+\n    mat4(.208,-.368,.584,.508,-.139,-.349,.200,.695,-.577,-.154,-.146,-.876,.549,-.469,-.399,-.203)*f1_5+\n    mat4(-.132,.033,-.283,-.375,-.023,.538,.097,-.163,.578,.271,.018,-.597,.212,.169,-.210,.037)*f1_6+\n    mat4(-.192,.062,.280,.301,-.499,.266,.236,.271,-.414,-.027,-.109,.271,-.259,.131,.290,.159)*f1_7+\n    vec4(-1.010,.958,-.092,1.274))/1.4+f1_6;\nvec4 f2_7=sin(mat4(-.352,-.275,-.271,-.402,.191,.336,-.290,-.129,-.405,-.092,.294,.066,.638,-.274,.651,.132)*f1_0+\n    mat4(.182,.048,.268,.477,.024,-.150,.644,.261,.339,.208,-.079,.339,-.097,-.244,.077,-.129)*f1_1+\n    mat4(.516,.366,-.223,-.007,-.580,.229,.170,.123,-.323,.517,.236,-.427,-.176,.264,-.805,-.355)*f1_2+\n    mat4(-.198,.195,.286,-.256,-.131,.019,-.551,-.155,-.573,-.034,.114,-.292,.344,.044,-.067,-.262)*f1_3+\n    mat4(-.152,.334,.026,-.126,-.346,-.120,-.228,-.256,.126,.022,-.060,-.194,-.162,-.126,.221,-.118)*f1_4+\n    mat4(.065,.352,.351,.270,.024,-.384,-.225,.277,.077,.114,-.194,.356,-.016,-.237,.339,.188)*f1_5+\n    mat4(.017,.008,.349,.071,-.187,-.215,-.298,.001,.215,-.126,-.066,-.312,.730,.333,-.049,.174)*f1_6+\n    mat4(-.051,-.458,.217,-.137,-.064,-.358,-.065,.244,.065,-.103,-.157,.477,.390,.025,-.201,-.087)*f1_7+\n    vec4(.136,-.895,.972,.912))/1.4+f1_7;\nfloat tt =  dot(f2_0,vec4(-.008,.032,-.027,.028))+\n    dot(f2_1,vec4(-.022,.014,.036,.017))+\n    dot(f2_2,vec4(.016,.028,-.029,.035))+\n    dot(f2_3,vec4(.039,-.020,-.035,.050))+\n    dot(f2_4,vec4(-.040,.013,.017,-.016))+\n    dot(f2_5,vec4(.032,.018,-.007,-.019))+\n    dot(f2_6,vec4(.024,-.018,.023,.015))+\n    dot(f2_7,vec4(.021,-.023,-.021,.034))+\n    -0.097;    \n    p2.xy *= rot(1.5);\n    vec3 re = vec3(0.5);\n    vec3 p3 = mod(p+vec3(0.,0.,-iTime*0.3)+0.5*re,re)-0.5*re;\n    float t2 = (texture(iChannel0,(p2.yz)*vec2(0.72,0.69)+vec2(0.495,0.47)).a-0.5)*0.1*smoothstep(-0.5,0.,p.y)\n    *smoothstep(0.,0.5,p.y);    \n    float t3 = tt+t2+(texture(iChannel1,p*8.5).x-0.5)*0.0015;\n    float c1 = length(p3)-ta*0.5;\n    float r1 = max(t3,c1);\n    return r1;\n}\nvec3 nor (vec3 p,float t){ vec2 e  = vec2(0.01,0.); return normalize(map(p,t)-vec3(map(p-e.xyy,t),map(p-e.yxy,t),map(p-e.yyx,t)));}\nfloat ev (vec3 r ,float bl) { return smoothstep(0.5+bl,0.5,pow(length(r.z),-smoothstep(0.,1.7,length(r.y))*0.51+0.8))\n* smoothstep(0.5+bl,0.5,pow(length(r.y),-smoothstep(0.,1.7,length(r.z))*0.51+0.8));}\nvec3 ov(vec3 base, vec3 blend) {\n    return mix(2.0*base*blend,1.0-2.0*(1.0-base)*(1.0-blend),step(0.5,base));}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nvec2 uc = fragCoord /iResolution.xy;\n    vec2 uv = (uc-0.5)*2.;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 e = vec3(0.,0.,-2.);\n    vec3 r = normalize(vec3(uv,1.5));\n    float t = it(iTime*0.6);\n    float t2 =mix(-0.4,-1.5,distance(t,0.5)+(sin(iTime)*0.5+0.5)*0.5);\n    e.xz *= rot(t2);\n    r.xz *= rot(t2);\n    vec3 p  =e;\n    float dd = 0.;\n      vec2 vol = isphe (e,r,vec3(0.,0.,0.), 0.85);\n    if(vol.y>0.0)\n    {\n    for(int i = 0 ; i < 40 ; i++){\n    float d = map(p,t);\n    if(dd>5.){break;dd=5.;}\n    if(d<0.001){break;}\n    p += r*d;\n    dd += d;\n    }\n    } else{dd=5.;}\n    float s = smoothstep(.2,1.,dd);\n    vec3 n = nor(p,t);\n    float rou = 0.1;\n    vec3 n3 = normalize(n);\n    float dao = 1.4;\n    float ao = smoothstep(0.,1.,map(p+n3*dao,t)/dao);\n    float dss = 2.;\n    float ss = pow(clamp(map(p+r*dss,t)/dss,0.,1.),3.);\n    float dss2 = 0.2;\n    float ss2 = clamp(map(p+r*dss2,t)/dss2,0.,1.)+ss*0.3;\n    vec3 l1 = vec3(0.,-10.,-5.);\n    \n    float o1 = clamp(dot(n3,normalize(l1)),0.,1.);\n    float lp = clamp(dot(n3,-r),0.,1.);\n    float fres = pow(1.-lp,mix(0.,10.,rou));\n    float fres2 = pow(1.-lp,mix(0.,20.,rou));\n    float spec = pow(lp,500.);\n    float spec2 = smoothstep(0.,0.7,pow(lp,mix(20.,50.,rou))*rou);\n    float fd = ev(r,0.01);\n    float fd2 = ev(r,0.1);\n    float ref = ev(reflect(r,n3),rou)*0.8+ev(reflect(r,n3),rou*0.5)*0.5;\n    float r0 = ref*0.5+fd2*ss2+fres*0.5+spec;\n    float sat =mix(0.,0.1,fres)+mix(0.,0.05,ss2)+mix(0.2,0.,ao);\n    vec3 c1 = mix(vec3(1.),3.*abs(1.-2.*fract(fres*0.2+0.25+mix(0.,0.2,ss2)+ref*0.1+ao*0.2+vec3(0.,-1./3.,1./3.)))-1.,sat);\n    vec3 c2 =  (c1*mix(mix(0.,0.3,rou),mix(0.2,1.5,rou),ref)+fd2*ss2)+(fres*0.2+spec*0.8+fres2*0.5+spec2);\n    float eve = step(0.2,it2(iTime));\n    vec3 r1 = mix(mix(c1,c2,eve)*ao,vec3(mix(1.-fd,fd,eve)),clamp(map(p,t),0.,1.))*smoothstep(0.3,0.7,pow(it(iTime*5.),0.5));\n    vec3 r2 = ov(mix(vec3(0.05),vec3(0.95),r1),vec3(mix(0.5,\n    fract(sin(dot(uc,vec2(45.23,98.14)))*7845.368+iTime),0.2)));\n    float c=tf(uc);\n    fragColor = vec4(vec3(r2),c);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float hash(float x){return fract(sin(x) * 897612.531);}\nfloat rd (float t){ return fract(sin(dot(floor(t),45.))*7845.26);}\nfloat no(float t){ return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat it(float t){ float r = 0. ; float a = 0.5; for(int i =0 ; i <4 ; i++){\nr += no(t/a)*a;a*=0.5;}return r;}\nfloat it2(float t){ float r = 0. ; float a = 0.5; for(int i =0 ; i <4 ; i++){\nr += rd(t/a)*a;a*=0.5;}return r;}\nfloat voc(float t, float f, float ft,float tp, float f2){float x = fract(t * f) / f;\nfloat oa = smoothstep(0.3,0.7,pow(it((t)*5.),0.5));\nfloat o=(sin(x*5.*ft)*.4+sin(x*10.*ft)+sin(x*25.*ft)*.2);\nfloat a=(sin(x*6.5*ft)*.4+sin(x*13.*ft)+sin(x*24.*ft)*.2);\nfloat r = mix(mix(o,a,oa),mix(a,o,oa),distance(tp,0.5)+(sin(t+f2)*0.5+0.5)*0.5);\n   return r* min(x * 1000., 1.) * exp(x * -200.);}\nvec2 form(float t, float var,float tp, float f2){\n    vec2 v = vec2(0., 0.);\n    for(int i = 0; i < 16; ++i){\n        float h = float(i);\n       \tfloat m = voc(t + h / 3., 60. + pow(2.01, (h - 8.) * .2), var,tp,  f2);\n        float pan = hash(h);\n        v.x += m * pan;\n        v.y += m * (1. - pan);\n    }\n    return v * .1;\n   }\nvec2 sp (float time, float ff,float fs){\nvec2 s1 = vec2(0.);\nfor(int  i = 1 ; i < 40 ; i++){\nfloat f = float( i);\nfloat f2 = f*ff;\nfloat tp = it((time+f2)*0.6);\nfloat tap = smoothstep(0.,0.8,tp);\nfloat ta3 = smoothstep(1.,0.,smoothstep(0.,0.8,tap));\n         s1 += form(time,(ta3)*200.*fs,tp,f2)/f;    \n         s1+= ((form(time,200.*fs,tp,f2)*step(it2(time-f2*0.5),0.2))/f);\n       \n    }\n \n   s1 -= 0.25;\n    return vec2(s1);\n    }\nvec2 mainSound( int samp, float time )\n{\nvec2 s1 = sp(time,0.1,1.);\nvec2 s2 = sp(time,1.,0.5);\nvec2 s3 = sp(time,0.01,1.5);\nreturn s2*0.8+s3*0.3+s1*0.8;\n}","name":"Sound","description":"","type":"sound"}]}