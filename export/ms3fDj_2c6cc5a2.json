{"ver":"0.1","info":{"id":"ms3fDj","date":"1697641275","viewed":28,"name":"Fork Damaged VC Cryszzz 268","username":"Cryszzz","description":"Simulating a damaged VCR playing a video","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    \n    vec2 warpedUv = uv;\n    float line=mod(iTime/4.0f,1.0);\n    float offset=line-uv.y;\n    if(abs(offset)<0.1){\n        offset+=0.1;\n        int bdoffset=int(offset*500.0)/4;\n        warpedUv.x+=0.03*(tan(float(bdoffset)/1.25)+tan(offset*2.0));\n        //warpedUv/=vec2((float(bdoffset)+sin(iTime)*25.0)/10.0,0.0f);\n        warpedUv=vec2(mod(warpedUv.x,1.0f),mod(warpedUv.y,1.0f));\n    }\n    \n    vec2 offset1 = vec2(-0.01,0.01*sin(iTime));\n    vec2 offset2 = vec2(0.01,-0.01);\n    vec2 offset3 = vec2(-0.01,0.01*sin(iTime));\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}