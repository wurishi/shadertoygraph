{"ver":"0.1","info":{"id":"lXlfzl","date":"1728792896","viewed":24,"name":"Fork Hazy Aura Standard","username":"sockmit2007","description":"Circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circleneon"],"hasliked":0,"parentid":"l3lfzl","parentname":"Hazy Aura Neon"},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hazy(vec2 origin, vec2 offset, float radius, float haze, vec2 pos, float correction) {\n    float dust = distance((pos - offset), origin);\n    return 1.0 - clamp(abs(dust - radius) / haze, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float correct = iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3((1.0 - (0.25 * sin(iTime) * sin(iTime) * sin(iTime) * sin(iTime)))* hazy(vec2(0.5 * correct, 0.5), vec2(0.0, 0.0), 0.3, 0.05, vec2(uv.x * correct, uv.y), correct), (0.5 - (0.25 * cos(iTime) * cos(iTime) * cos(iTime) * cos(iTime)))* hazy(vec2(0.5 * correct, 0.5), vec2(0.0, 0.0), 0.3, 0.02, vec2(uv.x * correct, uv.y), correct), (0.25 - (0.25 * sin(iTime) * sin(iTime) * cos(iTime) * cos(iTime)))* hazy(vec2(0.5 * correct, 0.5), vec2(0.0, 0.0), 0.3, 0.1, vec2(uv.x * correct, uv.y), correct));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}