{"ver":"0.1","info":{"id":"dlffzH","date":"1692604053","viewed":31,"name":"Simple wood","username":"Suma","description":"Very simple (no noise) procedural 3D texture of wood","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["material"],"hasliked":0,"parentid":"mtffzH","parentname":"Wood shader"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// shader adapted from https://2pha.com/demos/threejs/shaders/wood_grain.html\n\nconst vec3 color1 = vec3(0.738762, 0.521938, 0.258542);\nconst vec3 color2 = vec3(0.84707, 0.738762, 0.576776);\n\n\nconst float frequency = 7.6;\nconst float ringScale = 0.6;\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    // Normalize the coordinates and get 3D position\n    vec2 uv = fragCoord / iResolution.yy * 0.5;\n    vec3 vPosition = vec3(uv, iMouse.x * 0.001); // Using a default z value for simplicity\n    vec3 center = vec3(0.25,0.25,0.25);\n    float distance = length((center - vPosition) * vec3(1.0, 1.0, 0.1));\n\n    float ring = fract(frequency * distance * 10.0);\n    ring *= 4.0 * (1.0 - ring);\n    \n    // Adjust ring smoothness and shape, and add some noise\n    float lrp = pow(ring, ringScale);\n    vec3 base = mix(color1, color2, clamp(lrp,0.0,1.0));\n    \n    fragColor = vec4(base, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}