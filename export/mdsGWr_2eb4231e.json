{"ver":"0.1","info":{"id":"mdsGWr","date":"1666341029","viewed":85,"name":"Eternal raindrop in Blood Moon","username":"Osakazaur","description":"This shader is an intermediate one for a shader I try to make.\nI plan to add multiply raindrops randomised on appearance time and place.\nThis version is so meditative so I decided to publicate it now.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles","plasma","lines","geometry","moving"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// the water pattern based on this shader:\n// https://www.shadertoy.com/view/XsVSDz\n\nvec3 dark = vec3(4., 13., 10.) / 255.;\nvec3 baseCol = vec3(38., 131., 100.) / 255.;\nvec3 subCol = vec3(139., 0., 0.) / 255.;\n\nfloat waveWide = 15.;\nfloat waveMin = 1.5;\nfloat timeScale = 15.;\n\nfloat pi = 3.14;\n\nfloat m = 1./20.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // WATER BLOCK //\n    \n    float t = iTime*10.;\n\n    vec2 cnt = iResolution.xy * 0.5;\n    vec2 pnt = fragCoord - cnt;\n    \n    \n    vec2 p1d = vec2(cos( t / 98.0),  sin( t / 178.0)) * cnt - pnt;\n    vec2 p2d = vec2(sin(-t / 124.0), cos(-t / 104.0)) * cnt - pnt;\n\tvec2 p3d = vec2(cos(-t / 165.0), cos( t / 55.0))  * cnt - pnt;\n    \n    float sum = 0.5 + 0.5 * (\n    // this numbers might be changed to set plasma shape\n\t\tcos(length(p1d) * 0.3*m) +\n\t\tcos(length(p2d) * 0.5*m) +\n\t\tsin(length(p3d) * 0.2*m) * sin(p3d.x * 0.25*m) * sin(p3d.y * 0.3*m));\n    \n    vec3 colWater = mix(dark, baseCol, smoothstep(0., 1., sum));\n    \n    // DROPS BLOCK //\n    \n    \n    vec2 dropC = cnt;\n    float mnt = cos(length(pnt)/25.*2.*pi-iTime);\n    \n    vec3 col = mix(colWater, subCol, smoothstep(.9, 1.0, mnt));\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}