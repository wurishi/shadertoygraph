{"ver":"0.1","info":{"id":"sdyGWw","date":"1631735892","viewed":126,"name":"Masayoshi Shapes","username":"Jinkweiq","description":"You might see some cool fractals you know - all contained within slices of one 4d shape. \n\nhttps://www.reddit.com/r/math/comments/5fgb27/4_parameters_interesting_patterns/","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","math","ifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations 8\n\n// from rory618 https://www.shadertoy.com/user/rory618\n#define F1(z) (mat2(a,-a.y,a.x)*(z) + mat2(B,-B.y,B.x)*(z*vec2(1,-1)))\n#define F2(z) (mat2(y,-y.y,y.x)*(z-vec2(1,0)) + mat2(d,-d.y,d.x)*(z*vec2(1,-1)-vec2(1,0))+vec2(1,0))\n// ---\n\nvec2 a, B, y, d;\n\n#define ps 6\nvec2 as[ps] = vec2[](vec2(.5, .5), vec2(.5, -.4), vec2(.5, -.5), vec2(.0, .0), vec2(.0,    .0), vec2(.5, .5));\nvec2 bs[ps] = vec2[](vec2(.0, .0), vec2(.0,  .0), vec2(.0,  .0), vec2(.5, .5), vec2(.5,    .3), vec2(.0, .0));\nvec2 ys[ps] = vec2[](vec2(.0, .0), vec2(.7,  .2), vec2(.5, -.5), vec2(.5, .0), vec2(.0,    .0), vec2(.0, .0));\nvec2 ds[ps] = vec2[](vec2(.5, .5), vec2(.0,  .0), vec2(.0,  .0), vec2(.0, .0), vec2(2./3., .0), vec2(.5, .5));\n\n\nvec2 map(int f){\n    vec2 z = vec2(f&1,0);\n    f /= 2;\n    for(int i = 0; i < iterations; i++) {\n        z=(1==(f&1)?F1(z):F2(z));\n    \tf /= 2;\n    }\n    \n    return z*vec2(.5,.5)-vec2(0.25,0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float t = iTime * .3;\n    \n    int idx = int(mod(floor(t), float(ps)-1.));\n    \n    float mf = smoothstep(.1, .9, fract(t));\n    a = mix(as[idx], as[idx+1], mf);\n    B = mix(bs[idx], bs[idx+1], mf);\n    y = mix(ys[idx], ys[idx+1], mf);\n    d = mix(ds[idx], ds[idx+1], mf);\n\n\tvec2 uv = (fragCoord - .5*iResolution.xy) / min(iResolution.x, iResolution.y);    \n    vec4 color = vec4(mix(vec3(0.890,0.863,0.729), vec3(0.235,0.224,0.224), length(uv)), 0.);\n\n    float d = 1e9;\n    for (int i=0;i<2<<iterations;i++) {\n        vec2 p = map(i);\n        float dp = length(uv-p);\n        d = min(d, dp);\n    }\n    d = 1.-clamp(smoothstep(.003,.005,d), 0., 1.);\n    color -= vec4(d);\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}