{"ver":"0.1","info":{"id":"lclXzH","date":"1711124550","viewed":429,"name":"Twisty cubes","username":"ChunderFPV","description":"It's been a couple months since I made this... figured I'd make it public since I haven't done anything lately.","likes":39,"published":1,"flags":16,"usePreview":0,"tags":["wireframe","cubes","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// wireframe code modified from FabriceNeyret2: https://www.shadertoy.com/view/XfS3DK\n\n#define H(a) (cos(radians(vec3(-30, 60, 150))+(a)*6.2832)*.5+.5)  // hue\n#define A(v) mat2(cos((v*3.1416) + vec4(0, -1.5708, 1.5708, 0)))  // rotate\n#define s(a, b) c = max(c, .01/abs(L( u, K(a, v, h), K(b, v, h) )+.02)*k*10.*o); // segment\n//#define s(a, b) c += .02/abs(L( u, K(a, v, h), K(b, v, h) )+.02)*k*o*(1.-i);  // alt segment\n\n// line\nfloat L(vec2 p, vec3 A, vec3 B)\n{\n    vec2 a = A.xy, \n         b = B.xy - a;\n         p -= a;\n    float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n    return length(p - b*h) + .01*mix(A.z, B.z, h);\n}\n\n// cam\nvec3 K(vec3 p, mat2 v, mat2 h)\n{\n    p.zy *= v; // pitch\n    p.zx *= h; // yaw\n    if (texelFetch(iChannel0, ivec2(80, 2), 0).x < 1.) // P key\n        p *= 4. / (p.z+4.); // perspective view\n    return p;\n}\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec2 R = iResolution.xy,\n         u = (U+U-R)/R.y*1.2,\n         m = (iMouse.xy*2.-R)/R.y;\n    \n    float t = iTime/60.,\n          l = 15.,  // loop size\n          j = 1./l, // increment size\n          r = .8,   // scale size\n          o = .1,   // brightness\n          i = 0.;   // starting increment\n    \n    if (iMouse.z < 1.) // not clicking\n        m = sin(t*6.2832 + vec2(0, 1.5708)), // move in circles\n        m.x *= 2.; // stretch mouse x (circle to ellipse)\n    \n    mat2 v = A(m.y), // pitch\n         h; // yaw (set in loop)\n    \n    vec3 p = vec3(0, 1, -1),    // cube coords\n         c = .2*length(u)*H(t), // background\n         k; // cube color (set in loop)\n    \n    // cubes\n    for (; i<1.; i+=j)\n    {\n        k = H(i+iTime/3.)+.2; // cube color\n        h = A(m.x+i); // rotate\n        p *= r; // scale\n        s( p.yyz, p.yzz )\n        s( p.zyz, p.zzz )\n        s( p.zyy, p.zzy )\n        s( p.yyy, p.yzy )\n        s( p.yyy, p.zyy )\n        s( p.yzy, p.zzy )\n        s( p.yyz, p.zyz )\n        s( p.yzz, p.zzz )\n        s( p.zzz, p.zzy )\n        s( p.zyz, p.zyy )\n        s( p.yzz, p.yzy )\n        s( p.yyz, p.yyy )\n    }\n    \n    // squaring c for contrast, tanh limits brightness to 1 (less blowout)\n    C = vec4(tanh(c*c*3.), 1);\n}","name":"Image","description":"","type":"image"}]}