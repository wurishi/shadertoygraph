{"ver":"0.1","info":{"id":"ld3GDs","date":"1452863214","viewed":352,"name":"Magic Crystals","username":"TambakoJaguar","description":"This is a small script I've made in Javascript, and then \"translated\" it into GLSL. I also added the perspective thing at the end. :)","likes":12,"published":1,"flags":32,"usePreview":0,"tags":["2d","random","pixels","perspective","crystals","2dgraphics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float startFrame = 180.;\nconst float endFrame = 1000.;\n\nvec2 rotateVec(vec2 vect, float angle)\n{\n    float xr = vect.x*cos(angle) - vect.y*sin(angle);\n    float yr = vect.x*sin(angle) + vect.y*cos(angle);\n    return vec2(xr, yr);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n    float perspv = 1.;\n    if (mod(float(iFrame), endFrame)>startFrame)\n    {\n        float f = 600.*smoothstep(0., endFrame - startFrame, (mod(float(iFrame), endFrame) - startFrame));\n    \tuv-= vec2(0.5, 0.25);\n        uv.y*= iResolution.y/iResolution.x;\n        float angle = 0.85*pow(smoothstep(endFrame*0.47, endFrame*0.95, mod(float(iFrame - 1), endFrame)), 2.);\n        uv = rotateVec(uv, angle);\n        uv.y/= iResolution.y/iResolution.x;\n        uv*= exp(0.0055*f);\n        float uvy = fragCoord.y/iResolution.y;\n        perspv = 1.-uvy*1.3*smoothstep(endFrame/8., endFrame/1.2, f);\n        uv/= perspv;\n        uv+= vec2(0.5, 0.25);\n    \tuv = mod(uv, vec2(1.));\n    }\n\tfragColor = smoothstep(0.12, 0.88, perspv)*smoothstep(endFrame, endFrame*0.9, mod(float(iFrame - 1), endFrame))*texture(iChannel0,uv);\n    //fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float seedProb = 13000.;\nconst float compProb = 3.;\n\nconst float colMaxRand = 0.1;\nconst float windowSize = 1.;\nconst float startFrame = 180.;\nconst float endFrame = 1000.;\n\n// From https://www.shadertoy.com/view/4djSRW\n#define MOD3 vec3(.1031,.11369,.13787)\nfloat random(float p)\n{\n\tvec3 p3  = fract(vec3(p) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\nvec3 minCol = vec3(\n               \trandom(42.74*iDate.z + 14.18*iDate.w),\n               \trandom(25.52*iDate.z + 38.23*iDate.w),\n                random(42.87*iDate.z + 83.64*iDate.w)\n            )*0.7;\nvec3 maxCol = vec3(\n               \trandom(242.74*iDate.z + 214.18*iDate.w),\n               \trandom(225.52*iDate.z + 238.23*iDate.w),\n                random(242.87*iDate.z + 283.64*iDate.w)\n            )*0.7+vec3(0.3);\n\n    \n    if (mod(float(iFrame), endFrame)==1.)\n    {\n        if (floor(seedProb*random(2.74*iDate.z + 4.18*iDate.w + 17.48*fragCoord.x + 7.56*fragCoord.y))==floor(seedProb*0.9*random(fragCoord.x*fragCoord.y)))\n        {\n           \tvec3 rcol = mix(minCol, maxCol, vec3(\n               \trandom(142.74*iDate.z + 114.18*iDate.w + 117.48*fragCoord.x + 187.56*fragCoord.y),\n               \trandom(125.52*iDate.z + 138.23*iDate.w + 174.62*fragCoord.x - 195.34*fragCoord.y),\n                random(142.87*iDate.z + 183.64*iDate.w + 147.42*fragCoord.x + 185.47*fragCoord.y)\n            ));\n        \tfragColor = vec4(rcol, 1.);\n        }\n        else\n            fragColor = vec4(0., 0., 0., 0.);\n    }\n    else\n    {\n        vec2 uv = fragCoord.xy / iResolution.xy;\n        float compProb2;\n        if (mod(float(iFrame - 1), endFrame)<startFrame*1.2)\n           compProb2 = compProb;\n        else\n           compProb2 = 1./(0.01 + 0.9*smoothstep(startFrame*1.2, endFrame, mod(float(iFrame - 1), endFrame)));\n        if (floor(compProb2*random(5.57*iDate.z + 3.23*iDate.w + 2.58*fragCoord.x + 4.85*fragCoord.y))==0.)\n        {\n            vec3 tc = vec3(0.);\n            float tn = 0.;\n            \n            if(texture(iChannel0, fragCoord.xy / iResolution.xy).a<0.5 || mod(float(iFrame), endFrame)>startFrame*1.2)\n            {\n                for (float yy=-windowSize; yy<=windowSize; yy++)\n                {\n                    for (float xx=-windowSize; xx<=windowSize; xx++)\n                    {\n                        vec2 off = vec2(xx, yy);\n                        vec4 samplet = texture(iChannel0, mod(fragCoord.xy + off, iResolution.xy)/iResolution.xy);\n                        if(samplet.a>0.5 && (xx!=0. || yy!=0.)) \n                        {\n                            tn++; \n                            tc+= samplet.rgb;\n                        }\n                    }\n                }\n            \tif (tn>0.)\n            \t\tfragColor = vec4(tc/tn, 1.)*(1. - colMaxRand*0.5 + colMaxRand*random(252.27*iDate.z + 131.95*iDate.w + 221.12*fragCoord.x + 237.27*fragCoord.y));\n                else\n                    fragColor = texture(iChannel0,uv);\n            }\n            else\n                fragColor = texture(iChannel0,uv);\n        }\n        else      \t\n        \tfragColor = texture(iChannel0,uv);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}