{"ver":"0.1","info":{"id":"ldVfDm","date":"1529188721","viewed":260,"name":"Sidescrolling Starfield","username":"rkibria","description":"A homage to old space shooter games.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float scrollspeed = 0.1;\n\nconst int small_count = 25;\nconst vec4 small_color = vec4( 0.7, 0.7, 1.0, 1.0 );\nconst float small_size = 0.003;\nconst float small_flicker = 2.5;\n\nconst int big_count = 6;\nconst vec4 big_color = vec4( 1.0, 1.0, 0.6, 1.0 );\nconst float big_size = 0.005;\nconst float big_flicker = 1.5;\n\nvoid iteration(inout float a, inout float b)\n{\n    float t = 0.111 * a + 1.123 * fract(123.456 * b);\n    float v = 0.999 * b - 3.456 * fract(456.123 * a);\n    a = t;\n    b = -v;\n}\n\nfloat starfield(int index, float seed, int count, vec2 uv, float radius, float flicker)\n{\n    int n = count + 3;\n    float w = 1.0 / float(count);\n\n    float a = 2.1 + float(index) + seed;\n    float b = 1.2 + seed;\n    float c = 0.0;\n\n    for( int i = 0; i < n; i++ )\n    {\n        iteration( a, b );\n\n        if( i > 2 )\n        {\n            float x = float(i - 3) * w + fract(a) * w / 2.;\n            float y = fract(b) * iResolution.y/iResolution.x;\n\t        vec2 star = vec2( x, y );\n            float d = distance(star, uv);\n            float r = (1. + 0.5 * abs(sin(2.*(x+y) + radius + iTime*flicker))) * radius;\n            c = max(c, smoothstep(r, r - 0.001, d));\n        }\n    }\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    int index = int( iTime * scrollspeed );\n    float offset_x = mod( iTime * scrollspeed, 1. );\n    \n    fragColor = vec4(0, 0, (1.-uv.y) * 0.1, 0.);\n\n    fragColor += small_color\n        * starfield(index, 0., small_count, vec2(uv.x + offset_x, uv.y), small_size, small_flicker);\n    fragColor += small_color\n        * starfield(index + 1, 0., small_count, vec2(-1.0 + uv.x + offset_x, uv.y), small_size, small_flicker);\n\n    fragColor += big_color\n        * starfield(index, 1., big_count, vec2(uv.x + offset_x, uv.y), big_size, big_flicker);\n    fragColor += big_color\n        * starfield(index + 1, 1., big_count, vec2(-1.0 + uv.x + offset_x, uv.y), big_size, big_flicker);\n    \n    fragColor = pow(fragColor, vec4(1./2.2));\n}","name":"Image","description":"","type":"image"}]}