{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\n#define BACKGROUND_BLUR_ITER 4.0\n#define BACKGROUND_BLUR_SIZE 5.0\n#define FOREGROUND_BLUR_ITER 4.0\n#define FOREGROUND_BLUR_SIZE 10.0\n\n\n#define WATER_LEVEL 0.2\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat hash1( float n ){\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat terrainHeight(float x){\n\tfloat lowF = sin(x+sin(x*3.5)) * 0.60;\n\tfloat medF = sin(x*10.0+cos(x*7.7)) * 0.05;\n\tfloat highF = sin(x*20.0 + sin(x*70.5)) * 0.015;\n\treturn (lowF + medF + highF) / 4.0 + 0.26;\n}\n\nfloat vignette(vec2 uv){\t\n\tvec2 delta = uv - vec2(iResolution.x / iResolution.y / 2.0, 0.5);\n    delta.y *= 3.0;\n\treturn 1.0 - dot(delta,delta) * 0.4;\n}\n\nfloat getBlade(vec2 xy, float seed, float spread, float height){\n\tfloat nearestBlade = (floor(xy.x * spread)) / spread;\n\tfloat offset = hash1(nearestBlade * seed);\n\tfloat base = nearestBlade + offset / spread / 2.0 + 0.25 / spread;\n\t\n\tfloat distFromCenter = abs(xy.x - base - 50.0 * xy.y * (nearestBlade + 0.5 / spread - base));\n\tfloat sm = 1.0 - pow(1.0 - smoothstep(0.000, 0.011, distFromCenter), 5.0);\n\treturn mix(pow(clamp((height - xy.y) / height, 0.0, 1.0), 2.0), 0.0, sm);\n}\n\nfloat getTree(vec2 xy, float seed, float fade, float spread){\n\tfloat nearestBlade = (floor(xy.x * spread)) / spread;\n\tfloat offset = (hash1(nearestBlade * seed) - 0.5) * 0.5 / spread + 0.5 / spread;\n\tfloat base = nearestBlade + offset;\n\t\n\tfloat distFromCenter = abs(xy.x - base);\n    float width = 0.15 + (0.02 / (xy.y + 0.1));\n    return 1.0 - smoothstep(width - fade, width, distFromCenter * spread * 2.0);\n}\n\nfloat backgroundTerrainSample(vec2 uv){\n\tfloat globalX1 = (uv.x + iTime / 12.0 + 100.0);\n\tfloat height1 = terrainHeight(globalX1) + 0.3;\n\tfloat globalX2 = (uv.x + iTime / 17.0 + 50.0);\n\tfloat height2 = terrainHeight(globalX2) + 0.05;\n    \n    float tree1 = getTree(vec2(uv.x + iTime / 12.0, height1), 59.0, 0.07, 1.8);\n    float tree2 = getTree(vec2(uv.x + iTime / 17.0, height2), 23.0, 0.07, 1.2);\n    \n    float back0 = mix(0.5, 1.0, clamp(-tree2 + smoothstep(height2, height2 + 0.15, uv.y), 0.0, 1.0));\n    float back1 = mix(0.2, back0, clamp(-tree1 + smoothstep(height2, height2 + 0.15, uv.y), 0.0, 1.0));\n    \n    return back1;\n}\n\nfloat background(vec2 uv){\n\tfloat sum = 0.0;\n\tfor(float dx = -BACKGROUND_BLUR_ITER; dx <= BACKGROUND_BLUR_ITER; dx++){\n\t\tsum += backgroundTerrainSample(uv + vec2(dx, 0) * BACKGROUND_BLUR_SIZE / iResolution.y);\n\t}\n\tsum /= BACKGROUND_BLUR_ITER*2.0 + 1.0;\n\t\n\tfloat color = sum;\n\t\n\tfloat globalX = (uv.x + iTime / 10.0);\n\tfloat waterSurface = clamp(sin(uv.y * 500.0 + 5.0 * sin(globalX * 3.0)) / 2.0 + 0.5, 0.0, 1.0) / 4.0;\n\tcolor += mix(waterSurface, 0.0, clamp(abs(uv.y - WATER_LEVEL) * 80.0, 0.0, 1.0));\n\tcolor += (1.0 - smoothstep(WATER_LEVEL - 0.01, WATER_LEVEL + 0.01, uv.y)) * 0.12;\n\tcolor = mix(0.0, color, smoothstep(0.04, WATER_LEVEL, uv.y));\n\t\n\treturn color * vignette(uv);\n}\n\n\nvec2 terrain(vec2 uv){\n\tfloat globalX = uv.x + iTime / 10.0;\n\tfloat height = terrainHeight(globalX);\n\t\n\tfloat grassHeight = (sin(globalX * 8.0 + 5.0 * sin(globalX * 2.0)) - 0.3) * 0.05;\n\tgrassHeight = mix(-0.11, grassHeight, smoothstep(-0.1, 0.1, height - WATER_LEVEL));\n\t\n\t\n\tfloat grassAlpha = 0.0;\n\tvec2 bladeUV = vec2(globalX, uv.y - height);\n\t\n\tif(uv.y < grassHeight + height + 0.1){\n\t\tif(uv.y > height){\n\t\t\tgrassAlpha += getBlade(bladeUV, 9.0,  30.0, max(0.0, grassHeight + 0.08));\n\t\t\tgrassAlpha += getBlade(bladeUV, 99.0, 295.0, max(0.0, grassHeight + 0.07));\n\t\t\tgrassAlpha += getBlade(bladeUV, 33.0, 40.0, max(0.0, grassHeight + 0.06));\n\t\t\tgrassAlpha += getBlade(bladeUV, 44.0, 45.0, max(0.0, grassHeight + 0.05));\n\t\t\tgrassAlpha += getBlade(bladeUV, 5.0,  50.0, max(0.0, grassHeight + 0.09));\n\t\t\tgrassAlpha += getBlade(bladeUV, 6.0,  55.0, max(0.0, grassHeight + 0.07));\n\t\t\tgrassAlpha += getBlade(bladeUV, 7.0,  60.0, max(0.0, grassHeight + 0.06));\n\t\t\tgrassAlpha += getBlade(bladeUV, 8.0,  65.0, max(0.0, grassHeight + 0.10));\n\t\t\tgrassAlpha = clamp(grassAlpha, 0.0, 1.0);\n\t\t}\n\t}\n\t\n\tfloat terrainAlpha = 1.0 - smoothstep(height, height + 0.007, uv.y);\n    \n    grassAlpha += getTree(bladeUV, 22.0, 0.05, 0.7);\n\t\n\treturn vec2(0.0, clamp(grassAlpha + terrainAlpha, 0.0, 1.0));\n}\n\nvec2 foregroundTerrainSample(vec2 uv){\n\tfloat globalX = (uv.x + iTime / 2.0 + 23.0);\n\tfloat height = terrainHeight(globalX) - 0.5;\n    \n\treturn vec2(0.5, 0.3 - smoothstep(height, height + 1.0, uv.y) * 0.3);\n}\n\nvec2 foreground(vec2 uv){\n\tvec2 sum = vec2(0.0, 0.0);\n\tfor(float dx = -FOREGROUND_BLUR_ITER; dx <= FOREGROUND_BLUR_ITER; dx++){\n\t\tsum += foregroundTerrainSample(uv + vec2(dx, 0) * FOREGROUND_BLUR_SIZE / iResolution.y);\n\t}\n\tsum /= FOREGROUND_BLUR_ITER*2.0 + 1.0;\n\t\n    sum.y = clamp(sum.y, 0.0, 0.8);\n    \n\treturn sum;\n}\n\nfloat scene(vec2 uv){\n\tfloat color = background(uv);\n\tvec2 terrainColor = terrain(uv);\n\tcolor = mix(color, terrainColor.x, terrainColor.y);\n\tvec2 foregroundColor = foreground(uv);\n\tcolor = mix(color, foregroundColor.x, foregroundColor.y);\n\treturn color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\tfloat color = scene(uv) + rand(uv * iTime) * 0.06;\n\tcolor *= smoothstep(0.0, 7.0, iTime);\n\tfragColor = vec4(color, color, color, 1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ssXzs","date":"1405943451","viewed":781,"name":"Limbo","username":"Amarcoli","description":"Was inspired to make a shader effect that replicated the look and feel of the game Limbo.  I think it turned out pretty good!  Still lots of optimization and documentation to be done, everything is terrible right now.  ","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["limbogameblureffectgrass"],"hasliked":0,"parentid":"","parentname":""}}