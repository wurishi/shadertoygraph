{"ver":"0.1","info":{"id":"4sKSD1","date":"1464148044","viewed":199,"name":"Compact Raymarcher","username":"jackdavenport","description":"A compact raymarcher, in 24 lines and 511 characters :P","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sphere","raymarcher","distance","compact","small"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy * .5) / iResolution.y;\n    vec3 p = vec3(0.,0.,-2.5);\n    vec3 d = vec3(uv,1.);\n    vec3 sp = vec3(sin(iTime),0.,0.);\n    int id = -1;\n    for(int i = 0; i < 256; i++) {\n    \tfloat dst = length(sp-p) - 1.;\n        p += d * dst * .75;\n        if(dst < .001) {\n            id = 0;\n            break;\n        }\n    }\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    if(id == 0) {\n        vec3 n = normalize(p-sp);\n        vec3 r = normalize(reflect(d,n));\n        vec3 ld = normalize(vec3(45.,30.,-45.));\n        float d = max(dot(ld,n), 0.);\n        float s = max(pow(dot(ld,r),20.),0.);\n        fragColor.xyz = vec3(1.,0.,0.)*d+(s*d);\n    }\n}","name":"Image","description":"","type":"image"}]}