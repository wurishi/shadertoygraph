{"ver":"0.1","info":{"id":"stGSWz","date":"1640468608","viewed":100,"name":"RGB Wobbler","username":"BetaSoftCologne","description":"Just my little first shader. It's based on my first tries at shader coding ever, made during Revision (around 2018) when I was in awe what people produced in the Shader Showdowns. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wobble","rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Author: BetaSoftCologne\n// Title: BSCDemo9 edition B\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// Code below\nfloat gx = -20.;\nfloat gy = 10.;\nconst float mHeight = 70.0;\nfloat height = mHeight;\nconst float factor = 6.0;\nconst float pi = 3.1415926;    \n\n\nmat2 rotMatDeg(float theta) {\n    return mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\nvec4 addCircles(in vec2 fragCoord, in float a) {\n    mat2 rot = rotMatDeg(a / 10.0);\n    vec2 xy = rot * fragCoord;\n    xy = xy / gx;\n    \n    float r = sin(xy.x) - cos(xy.y);\n    float g = sin(xy.x) + cos(xy.y);\n    float b = sin(xy.y) - cos(xy.x);\n    return vec4(r, g, b, 1.0);\n}\n\n\nvec4 addFoo(in vec2 pos, in float t) {\n    mat2 rot = rotMatDeg(t);\n    \n    vec2 scr = iResolution.xy / 2.0;\n    pos = rot * vec2(pos.x - scr.x, pos.y - scr.y);\n\n    float f = 20.0; // * (gy - gy / 8.0);\n    float g = 2.0;\n    float v = g*sin(pos.x / f) + g*cos(pos.y / f);\n    vec2 a = rot * vec2(v, -v);\n\n    return vec4(a, a/2.0);\n}\n\n// void main( )\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = iDate.w / 2.0; // wall clock seconds    \n    vec4 temp = vec4(0);\n    \n    // add circles\n    vec2 uv = fragCoord.xy; // /u_resolution;\n    temp += addCircles(uv * (1.3 + sin(0.9*iTime)), a);\n    temp += addCircles(uv / 1.5 + sin(1.1*iTime), a);\n    \n    uv.x = mod(uv.x, 180. + 50.*sin(2.*a));\n    uv.y = mod(uv.y, 180. + 50.*cos(2.*a));\n    \n    // advance\n    gx = factor * a / cos(a * factor);\n    gy = 2.0 * sin(a * factor);\n    height = mHeight + mHeight * cos(factor * a);\n    float y = mod(uv.y + uv.x, 1.8);\n    temp += y * addFoo(uv, a);\n     \n    fragColor = temp;\n}\n","name":"Image","description":"","type":"image"}]}