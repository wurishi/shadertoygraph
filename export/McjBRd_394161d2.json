{"ver":"0.1","info":{"id":"McjBRd","date":"1725391956","viewed":49,"name":"Blurred RGBA Noise By RikR","username":"rikr","description":"Just an idea for gaussian blurred rgba noise... Made by Rik Riesmeijer in 2024 - No rights reserved (cc0).","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","hash","cc0","short","blurred","rgba"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Blurred RGBA Noise By Rik Riesmeijer, 2024\n// License: CC0 1.0 Universal - Commercial Use Allowed.\n// Copyright Has Been Released To The Public Domain. \n// More information at: CreativeCommons.org/publicdomain.\n\nfloat d( vec2 v) { return dot(v, v);                       }\nfloat p( vec2 v) { return 0.1992 * exp(0.5 * -d(v));       }\nuvec4 l(uvec4 u) { return 99507u * u.wxyz ^ u;             }\nuvec4 s( vec2 v) { return uvec4(v + v, v + 1e5);           }\n vec4 f( vec2 v) { return vec4(l(l(l(s(v))))) / vec4(~0u); }\n\nvec4 n(vec4 c, vec2 v) {\n    int b = 3; vec2 o; c -= c; v /= 3.0; float k, l;\n    for(int i = -b; i <= b; i++) {\n        for(int j = -b; j <= b; j++) {\n            l += k = p(o = vec2(i, j));\n            c += k * f(v + o);\n        }\n    }\n    return c / l;\n}\n\nvoid mainImage(out vec4 c, in vec2 v) {\n    v.x += iTime * 2e2;\n    c = n(c, v);\n}\n","name":"Image","description":"","type":"image"}]}