{"ver":"0.1","info":{"id":"cdGGDK","date":"1679032115","viewed":118,"name":"pseudo-recursive tiles","username":"ianertson","description":"just having some fun","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R (iResolution.xy)\n#define T (iTime)\n\nuint hash21u(in vec2 ip, in float seed) {\n    uvec2 p = uvec2(floatBitsToUint(ip.x), floatBitsToUint(ip.y));\n    uint s = floatBitsToUint(seed);\n    s ^= ~s >> 3U; p ^= (p << 17U); s ^= (~p.x); s ^= (~p.y);\n    p ^= (p >> 11U); p ^= (p << 5U); p ^= (s << 3U);\n    return ((p.x + p.y) ^ (p.x * s + p.y))*293U;\n}\n\nfloat hash21(in vec2 ip, in float seed) {return float(hash21u(ip, seed))/float(0xFFFFFFFFU);}\n\nvec3 hash23(in vec2 ip, in float seed) {\n    uint n = hash21u(ip, seed); n ^= (n >> 13U);\n    return vec3(float((n >> 16U) & 0xFFU), float((n >> 8U) & 0xFFU), float(n & 0xFFU)) / float(0xFFU);\n}\n\nvec3 pattern(in vec2 uv) {\n    float v = 0.0;\n    float tile = 4.0;\n    float c = 3.0;\n    vec3 col = vec3(0.0);\n    for (float i = 0.0; i < c; i++) {\n        vec2 id = floor(uv*tile);\n        vec2 lv = fract(uv*tile);\n        vec2 alv = abs(lv*2.0-1.0);\n        float t = float(i)/(c*2.0);\n        v += clamp(smoothstep(0.47-t, 0.5+t, alv.x-0.5) + \n             smoothstep(0.47-t, 0.5+t, alv.y-0.5), 0.0, 1.0);\n        col += hash23(id, 44.492815 + (i*3.292815));\n        float rid = hash21(id, 5.5934124 + (i*4.4982815));\n        tile *= ceil(rid*5.5);\n    }\n    return v + col / c;\n}\n\nvoid mainImage( out vec4 O, in vec2 fc )\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = (fc-0.5*R.xy)/R.y;\n    col += pattern((uv * mix(0.1, 2.0, (0.5+(0.5*sin(T))))) + vec2(cos(T*0.5), sin(T*0.5))*0.5);\n    O = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}