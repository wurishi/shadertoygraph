{"ver":"0.1","info":{"id":"ldt3zX","date":"1451446867","viewed":155,"name":"DecareCoordinate","username":"xdlmost","description":"Setup a DecareCoordinate, that can be used to test GLSL build-in functions","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["setupadecarecoordinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//facter means the max sacle on X Axis\nvec2 Decare(vec2 uv, vec2 resolution ,float facter){\n    vec2 uvres=1.-2.*uv;\n    uvres.y=uvres.y*resolution.y/resolution.x;\n    uvres=uvres*facter;\n    return uvres;\n}\nvec4 DrawAxis(vec2 uv,float thickness){\n    //hao much times is a dot's radius to thickness\n    float times=2.0;\n    //Draw scale on X Axis\n    if(fract(uv.x+times*thickness)<=times*2.*thickness && distance(uv,vec2(floor(uv.x+times*thickness),.0))<=times*thickness){\n        return vec4(1,0,0,1);\n    }\n    //Draw scale on Y Axis\n    if(fract(uv.y+times*thickness)<=times*2.*thickness && distance(uv,vec2(0,floor(uv.y+times*thickness)))<=times*thickness){\n        return vec4(1,0,0,1);\n    }\n    //Draw X and Y Axis\n    if(abs(uv.x)-thickness<=0.||abs(uv.y)-thickness<=0.){\n        return vec4(0,0,0,1);\n    }else{\n        return vec4(1,1,1,1);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv=Decare(uv,iResolution.xy,8.);\n\tfragColor = DrawAxis(uv,0.03);\n}","name":"","description":"","type":"image"}]}