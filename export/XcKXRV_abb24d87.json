{"ver":"0.1","info":{"id":"XcKXRV","date":"1715467142","viewed":57,"name":"dotted lines: motion illusion","username":"altunenes","description":"Track the red disc as it moves, and notice how the checkered lines seem to shift. :)\nIt works best on a big screen. Sometimes it doesn't work on me, but there is an article about it :)\nhttps://journals.sagepub.com/doi/10.1068/p6383\nhttps://michaelbach.de/","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["illusion","vision","perception","psychology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SCALE 55.0\n#define PI 3.14\n//If it doesn't work, maybe you can try lowering the SCALE a little?\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    // bg is important for the effectiveness of the illusion //\n    vec3 bg = vec3(0.5); \n    for (int i = 0; i < 2; i++) {\n        float sign = i == 0 ? 1.0 : -1.0;\n        float dist = abs(uv.y - (0.5 * sign * uv.x + 0.5 * (1.0 - sign)));\n        float line = smoothstep(0.01, 0.01 - 0.005, dist);\n        float strip = step(0.5, mod(floor(uv.x * SCALE + sign * uv.y * SCALE * 0.5), 2.0));\n        vec3 scolor = vec3(strip);\n        if (line > 0.0) { \n            bg = mix(bg, scolor, line);  \n        }\n    }\n    float ballx = 0.35 * (1.0 + sin(iTime * 0.5 * PI));\n    vec2 start = vec2(ballx, 0.5);\n    float road = length(uv - start);\n    float ball = 1.0 - smoothstep(0.01, 0.012, road);\n    vec3 bc = vec3(1.0, 0.0, 0.0);\n    bg = mix(bg, bc, ball);\n    fragColor = vec4(bg, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}