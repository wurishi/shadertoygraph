{"ver":"0.1","info":{"id":"mtfcDl","date":"1691321094","viewed":37,"name":"Shader个球-Simple Ball Lighting","username":"Leslie","description":"make a perfect blur when using 3d shading","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = (2.*fragCoord-iResolution.xy)/scale;\n    \n    //vec3 clr = vec3(192., 72., 81.)/255.; // ballColor\n    \n    vec3 bClr = vec3(199., 210., 212.)/255.; // backColor\n    \n    float zNrml;\n    zNrml = sqrt(   max(pow(0.8 , 2.)-pow(length(uv), 2.), 0.0)  ); /*`max(...)` avoid `sqrt()` a negtive value which will result in a `NaN`;\n    Any math operation with `NaN` will result in a `NaN`;\n    `dot(v, vec3(x, y, NaN))` will also result in a `NaN`;\n    Then `clr *= cosLit` will make `clr` outside of ball always be black;\n    Then blur will always mix blackColor with backColor, leave serrations on brightside of ball*/\n    \n    //zNrml = sqrt(   pow(0.8 , 2.)-pow(length(uv), 2.)  ); // uncomment this line to see what `NaN` cause\n    vec3 clr = texture(iChannel0, vec3(uv.xy, zNrml)).rgb;\n    \n    vec3 nrml = normalize(vec3(uv, zNrml));\n    vec3 dirSun = normalize(vec3(sin(iTime), 0.6, cos(iTime)));\n    \n    float cosLit = max(0., dot(nrml, dirSun)); // Diffuse Coeffe\n    clr *= cosLit;\n    clr = clamp(clr, 0., 1.);\n    \n    float blur = 3./scale; // keep blur width be same in pixel size\n    float smth = smoothstep(0.8-blur, 0.8+blur, length(uv));\n    fragColor = vec4(mix(clr, bClr, smth), 1.);\n    \n    //fragColor = vec4(clr, 1.); // uncomment this line to see the color outside of ball\n}\n","name":"Image","description":"","type":"image"}]}