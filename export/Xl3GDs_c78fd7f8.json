{"ver":"0.1","info":{"id":"Xl3GDs","date":"1472274419","viewed":110,"name":"Phoenix Fractal","username":"Kneebiter","description":"Based on the work of Shigehiro Ushiki. https://www.math.kyoto-u.ac.jp/~ushiki/\n\nPhoenix. IEEE Transaction on Circuits and System, Vol. 35, No. 7, 1998.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float y = sin(iTime/1.3);  // set y and yi both to 0. to see the original phoenix set\n    float yi = cos(iTime/1.7);\n    float x = .9 - ((iResolution.y - fragCoord.y) / (iResolution.y * .5));\n    float xi = -1.5 + (3. * fragCoord.x / iResolution.x);\n    float color = 0.0;\n    \n    float p = 0.56667; // + 0.01 * sin(iTime/1.3);\n    float q = -0.5; // + 0.01 * cos(iTime/1.7);\n    \n    float xs, xis, xtemp, xitemp;\n    for(int i = 0; i < 255; i++) {\n        xs = x*x;\n        xis = xi * xi;\n        xtemp = xs - xis + (p + q*y);\n        xitemp = (2.0*x*xi) + (q*yi);\n        y = x;\n        yi = xi;\n        x = xtemp;\n        xi = xitemp;\n        color += 1.0/255.0;\n        if(xs + xis > 400.0) {\n            break;\n        }\n    }\n    if(color < 16.0/255.0) {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    } else if(color < 0.5) {\n        fragColor = vec4(color, 0, 0.5-color, 1.0);\n    } else {\n        fragColor = vec4(color, color, color, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}