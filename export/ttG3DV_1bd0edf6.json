{"ver":"0.1","info":{"id":"ttG3DV","date":"1579890276","viewed":145,"name":"hyperbola debug","username":"nabr","description":"mouse =  look around\nkeyboard: \nspacebar = toggle plane\npause shadertoy + all keys= frame by frame\nlooking into: [url=https://en.wikipedia.org/wiki/Jacobi_elliptic_functions]jacobi[/url] | [url=https://en.wikipedia.org/wiki/Elliptic_filter]filter[/url]","likes":5,"published":1,"flags":16,"usePreview":0,"tags":["debug","hyperbola","sperical"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// basically i just playing around ... (it looks interessting)\n// best thing if you pause the shadertoy and look around\n// hide plane = space\n\n#define initialZOOM 8.\n\n// copy+paste from iq! thx\nfloat iSphere(in vec3 ro, in vec3 rd, in vec4 sph)\n{\n    vec3 oc = ro - sph.xyz;\n    float b = dot(oc, rd);\n    float c = dot(oc, oc) - sph.w * sph.w;\n    float h = b * b - c;\n    if (h < 0.0)\n        return -1.0;\n    h = sqrt(h);\n    float t1 = -b - h;\n    float t2 = -b + h;\n    if (t1 < .001 && t2 < .001)\n        return -1.0;\n    if (t1 < .001)\n        return t2;\n    return t1;\n}\nconst float hpi = 3.1415926 / 2.;\n\n// https://www.shadertoy.com/view/llySRh\n#define keyDown(ascii)(texelFetch(iChannel3,ivec2(ascii,1),0).x > 0.)\n\nfloat tex(in vec3 U)\n{\n    vec2 p = U.xy;\n    float f = 0.0;\n    float t = 0.;\n   \n    // anim loop\n    int sec = 5; float speed = 240.;\n    int frm = 1; \n    \n    if(!keyDown(39))\n        frm++;\n    \n    \n    t = float(frm+iFrame%(60*sec)) / speed;\n    \n    \n    for(float i = 0.0; i < 4.; ++i)\n    {\n        float s = sin(t + i * hpi) * p.y * 5.;\n        float c = cos(t + i * hpi) * p.x * 2.;\n        f += .0175 / abs(length(p - vec2(0, 2)) + clamp(c + s, -6., 1.));\n    }\n    \n    // return  .01/length(U.xy); \n    \n    return f;\n}\n\n#define R(_p,_a)_p=(cos(_a)*_p+sin(_a)*vec2(_p.y,-_p.x));\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec3 col = vec3(.501);\n    vec2 R = iResolution.xy;\n    \n    vec3 o = vec3(0, 0,initialZOOM);\n    vec3 d = normalize(vec3((U - .5 * R) / min(R.x, R.y), -.5));\n    vec2 m = (3. * atan(hpi-3. * vec2(iMouse.x, iMouse.y) / R));\n    if (iMouse.z > .0001)\n    {\n        o.z = 10.; //\"zoom\"\n        R(o.yz, m.y) R(d.yz, m.y)R(o.xz, m.x) R(d.xz, m.x)\n    }\n\tvec3 dn = vec3(0, 1, 0), dc = vec3(0, -2, 0.5);//plane\n    vec3 dk = dot(dn, o - dc) / dot(dn, d) * d \n        \t\t\t\t\t\t\t\t\t\t+ dc;//flip texture\n    float pt = dot(dn, dc) / dot(dn, d);\n\n    \n    vec4 sc0 = vec4(0, 0, 6, 200.);//big one\n    vec4 sc1 = vec4(0, 0, 0.5, 2.);//green\n    float t0 = iSphere(o, d, sc0);\n    float t1 = iSphere(o, d, sc1);\n\n    float tmin = 1e10;\n\tif(!(texelFetch(iChannel3,ivec2(32,2),0).x > 0.) ) // spacebar\n    if (pt > 0. && pt < tmin)//plane\n    {\n        tmin = pt;\n        vec3 hit = o + pt * d;\n        vec3 n = normalize(hit - dk);\n        float ntex = tex(n.xyz) + tex(n.yzx) + tex(n.zxy);\n        col = ntex + vec3(0, 0, .5);\n    }\n    if (t0 > 0.0 && t0 < tmin)//big one\n    {\n        tmin = t0;\n        vec3 hit = o + t0 * d;\n        vec3 n = normalize(hit - sc0.xyz);\n        float ntex = tex(n.xyz) + tex(n.yzx) + tex(n.zxy);\n        col = ntex + vec3(.5, 0, 0);\n    }\n    if(t1 > 0.0 && t1 < tmin) //green sph\n    {\n        tmin = t1;\n        vec3 hit = o + t1 * d;\n        vec3 n = normalize(hit - sc1.xyz);\n         n=n-n-n; //rotation\n        //R(n.xy,radians(90.))\n       // R(n.yz,radians(90.))    \n        float ntex = tex(n.xyz) + tex(n.yzx) + tex(n.zxy);\n        // if(mod(iTime, 2.)>1.) ntex = tex(6.*-n.xyz);\n        col = mix(col, (12. * ntex) * vec3(0, .5, 0), .2);\n    }\n    O.xyz = col;\n    O.a = 1.;\n}","name":"Image","description":"","type":"image"}]}