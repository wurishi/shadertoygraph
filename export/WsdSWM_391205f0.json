{"ver":"0.1","info":{"id":"WsdSWM","date":"1572274399","viewed":240,"name":"KIFS Meditation","username":"copperTones","description":"2d KIFS fractal, similar to a Ces√†ro fractal, with (buggy) noise","likes":7,"published":1,"flags":8,"usePreview":0,"tags":["2d","fractal","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.1415\n#define R iResolution.x\n#define _45(x) normalize(vec2(x, 1))\n#define arb_mirror(x, n) (x - 2.*n*min(dot(x, n), 0.))\n//parameters\n//#define KIFS_angle 2.*pi*iMouse.x/iResolution.x\n#define KIFS_angle pi/12.\n#define KIFS_norm vec2(cos(KIFS_angle), sin(KIFS_angle))\n#define KIFS_sepr cos(KIFS_angle*2.)\n#define KIFS_width (1.+KIFS_sepr)\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    fragCoord -= iResolution.xy/2.;\n    vec2 uv = fragCoord/R;//clamp/scale by x\n    uv *= 2.;\n    \n    uv = arb_mirror(uv, _45(1));//square-ify\n    uv = arb_mirror(uv, _45(-1));\n    uv.y -= .5;\n    \n    float scale = 1.;//in order to unscale lines\n    for (int i = 0; i < 5; i++) {//KIFS transform\n        uv *= 2.*KIFS_width;\n        scale *= 2.*KIFS_width;\n        \n        uv.x = abs(uv.x);//middle mirror\n        uv.x -= KIFS_sepr;\n    \tuv = arb_mirror(uv, KIFS_norm);//halfway bend\n        uv.x -= .5;\n        \n        uv.y *= -1.;//flip vertically\n    }\n    uv /= scale;\n    \n    //fragColor = vec4(uv*5., 0., 1.);\n    vec2 tuv = uv*.5 + iTime*vec2(.01, .04);\n    tuv = abs(mod(tuv, 2.) - 1.);//xy flip instead of repeat\n    fragColor.xyz = 1.-texture(iChannel0, tuv).yxz;\n    \n    uv.x -= clamp(0., 1., uv.x);//dot -> line\n    float line = smoothstep(0., 3./R, length(uv));\n    fragColor.xyz *= line;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define pi 3.1415\n#define n 5.*normalize(vec2(sqrt(2.), 1.))//avoid going over same place twice\n\nfloat note(float time) {\n    float vol = (.5+.5*sin(3.*pi*time))*pow(.5, time);\n    return vol*sin(2.*pi*220.*time);\n}\nfloat garble(float time) {\n    return texture(iChannel1, time*n).x;\n}\nfloat noise(float time) {\n    return texture(iChannel0, time*n).x;\n}\n\nvec2 mainSound( in int samp,float time) {\n    vec2 a = vec2(note(mod(time, 12.)), note(mod(time+6., 12.)));//l/r channel notes\n    float b = mix(garble(time), noise(time), .5+.5*sin(pi/6.*time));\n    return .3*a + .15*vec2(b);\n}","name":"Sound","description":"","type":"sound"}]}