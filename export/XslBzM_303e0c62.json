{"ver":"0.1","info":{"id":"XslBzM","date":"1495383046","viewed":207,"name":"Cubesnakes","username":"slerpy","description":"-","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d","tunnel","procedual"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n#define ITER 200\n#define QUA .001\n#define NORK 5e-4\n\nfloat map(vec3 p)\n{\n    p.xy += vec2(cos(p.z),sin(p.z))/2.;\n\tvec3 cen = round(p);\n    vec3 v = abs(cen-p);\n\treturn max(v.x,v.y)-.1;\n}\n\nvec3 normal(vec3 p, float k)\n{\n\tvec2 e = vec2(.0,k);\n\treturn normalize(vec3(\n\t\tmap(p + e.yxx) - map(p - e.yxx),\n\t\tmap(p + e.xyx) - map(p - e.xyx),\n\t\tmap(p + e.xxy) - map(p - e.xxy)\n\t));\n}\n\nfloat tracer(vec3 ro, vec3 rd)\n{    \n    float t = .0, d;\n    for(int i=0; i < ITER; i++){        \n        d = map(ro + rd*t);\n        if (d < QUA*t) break;\n        t += .9 * d;\n    } \n    return t;\n}\n\nvec3 fog(vec3 col, float t)\n{\n    vec3 fcol = vec3(.1);\n    return mix( col, fcol, 1.0-exp(-t));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    /*int m = int(iResolution.x);\n    uint xor = ( uint(fragCoord.x) ^ uint(fragCoord.y) ) % uint(m);\n    if(xor != uint(iFrame%m))discard;*/\n    \n\tvec2 uv = (2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n    \n\tfloat ang = atan(uv.x,uv.y) - iTime/8.;\n\tuv = vec2(cos(ang),sin(ang))*length(uv);\n\n\tvec3 ro = vec3(vec2(.5),iTime);\n    vec3 rd = normalize(vec3(uv,2));\n    \n    float t = tracer(ro,rd);\n\tvec3 sp = ro + rd*t;\n    \n\tvec3 sn = normal(sp,NORK);\n    vec3 ld = normalize(ro-sp);\n\tfloat diff = max(dot(sn,ld),0.);\n    \n    vec3 col = (sn.xyz+1.)/2.;\n    col *= (3.+diff)/4.;\n    col = fog(col, t/8.);\n    \n\tfragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}]}