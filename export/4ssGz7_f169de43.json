{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define PI 3.14159265359\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat gap(int t) {\n\treturn floor(rand(vec2(float(t))) * 5.9999);\n}\n\nbool occupied(int t, float i) {\n\treturn rand(vec2(i, float(t))) < 5.0 / 6.0 && gap(t) != i;\n}\n\nvec3 hsv_to_rgb(float h, float s, float v)\n{\n\tfloat c = v * s;\n\th = mod((h * 6.0), 6.0);\n\tfloat x = c * (1.0 - abs(mod(h, 2.0) - 1.0));\n\tvec3 color;\n \n\tif (0.0 <= h && h < 1.0) {\n\t\tcolor = vec3(c, x, 0.0);\n\t} else if (1.0 <= h && h < 2.0) {\n\t\tcolor = vec3(x, c, 0.0);\n\t} else if (2.0 <= h && h < 3.0) {\n\t\tcolor = vec3(0.0, c, x);\n\t} else if (3.0 <= h && h < 4.0) {\n\t\tcolor = vec3(0.0, x, c);\n\t} else if (4.0 <= h && h < 5.0) {\n\t\tcolor = vec3(x, 0.0, c);\n\t} else if (5.0 <= h && h < 6.0) {\n\t\tcolor = vec3(c, 0.0, x);\n\t} else {\n\t\tcolor = vec3(0.0, 0.0, 0.0);\n\t}\n \n\tcolor += v - c;\n \n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tuv -= 0.5;\n\t\n\tuv.x /= iResolution.y / iResolution.x;\n\t\n\tfloat time = iTime * 1.3;\n\tint t = int(time);\n\tfloat s = fract(time);\n\tfloat ao = time;\n\t\n\tfloat a = mod(atan(uv.y, uv.x) + PI + ao, PI * 2.0);\n\tfloat i = floor(a / 2.0 / PI * 6.0);\n\tfloat da = a - (i + 0.5) * 2.0 * PI / 6.0;\n\tfloat d = length(uv) * cos(da) - length(texture(iChannel0, vec2(0.0, 0.0))) * 0.03;\n\t\n\tfloat brightness;\n\tif (d < 0.015) {\n\t\tbrightness = 0.05;\n\t} else if (abs(d - 0.015) < 0.003) {\n\t\tbrightness = 0.9;\n\t} else {\n\t\tbool l = occupied(t, i);\n\t\t\n\t\tif (l && abs(d - 0.9 + s) < 0.05) {\n\t\t\tbrightness = 0.9;\n\t\t} else {\n\t\t\tfloat target = mix(gap(t - 1), gap(t), clamp(s * 2.0 - 0.4, 0.0, 1.0)) - 1.0;\n\t\t\tfloat dir = target / 6.0 * 2.0 * PI - ao;\n\t\t\t\n\t\t\tvec2 x = vec2(cos(dir), sin(dir));\n\t\t\tvec2 y = vec2(-x.y, x.x);\n\t\t\t\n\t\t\tvec2 uv2 = vec2(dot(uv, x), dot(uv, y));\n\t\t\t\n\t\t\tif (abs(uv2.x) < uv2.y + 0.1 && uv2.y < -0.087) {\n\t\t\t\tbrightness = 0.9;\n\t\t\t} else {\n\t\t\t\tbrightness = 0.05 + floor(mod(i + iTime, 2.0)) * 0.05;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvec3 bg = hsv_to_rgb(iTime * 0.05, 1.0, 1.0);\n\tfragColor = vec4(bg * brightness, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ssGz7","date":"1366270524","viewed":1433,"name":"hexagon","username":"vahokif","description":"Inspired by a horribly addictive game. http://superhexagon.com/","likes":33,"published":1,"flags":0,"usePreview":0,"tags":["2d","hexagon"],"hasliked":0,"parentid":"","parentname":""}}