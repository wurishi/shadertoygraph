{"ver":"0.1","info":{"id":"sttfWs","date":"1664077887","viewed":45,"name":"Fork colorspher sanderonei 666","username":"sanderoneil","description":"use mouse to rotate sphere","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"7ldBWs","parentname":"colorsphere"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec3 col;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 M = iMouse.xy/10.;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    //uv.x *= iResolution.x/iResolution.y;\n    vec2 xy = vec2(uv.x*ratio,uv.y)-vec2(ratio/2.,.5);\n    \n    \n    \n    xy *= 2.;\n    \n    xy.x = abs(xy.x);\n   \n    xy -= vec2(1.,0.);\n    if (uv.x>.5){\n    xy.x*=-1.;}\n    \n    float r = length(xy);\n    float z = sqrt(1.-r*r);\n    \n    vec3 xyz = normalize(vec3(xy,z));\n    if (uv.x>.5){\n    xyz *= -1.;}\n    \n    //xyz = rot(xyz,iTime/1.,1);\n    xyz = rot(xyz,-M.x,1);\n    xyz = rot(xyz,-M.y,2);\n    \n    \n    \n    //if (length(xy)<1.){\n    // Time varying pixel color\n    vec3 ab = abs(xyz);\n    \n    float m = max(max(ab.x,ab.y),ab.z);\n    \n    float c = iMouse.z/1000.+1.;\n    \n    xyz = xyz/m;\n    \n    col = (xyz+1.)/2.;\n    \n    //else{\n    \n    //col = vec3(0,0,0);\n    //}\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 rot( vec3 p, float a, int axis )\n{\n    int dim1 = (axis+1)%3;\n    int dim2 = (axis +2)%3;\n    vec3 temp = p+0.;\n    temp[dim1] = p[dim1]*cos(a) - p[dim2]*sin(a);\n    temp[dim2] = p[dim1]*sin(a) + p[dim2]*cos(a);\n    \n    return temp;\n}","name":"Common","description":"","type":"common"}]}