{"ver":"0.1","info":{"id":"wdfSDX","date":"1552338544","viewed":86,"name":"study perlin noise","username":"jfwf","description":"study perlin noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat wrand1d(float x)\n{\n    return fract( sin(x)*10000.0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x += iTime*0.1;\n    uv.x = uv.x * 10.0;\n    float samplei=floor(uv.x);\n    float samplef=fract(uv.x);\n    \n    float r = wrand1d( samplei*1.0 );\n    \n    float rnext = wrand1d( samplei+1.0 );\n    \n    float curvef=samplef*samplef*(3.0-2.0*samplef);\n    float rx=mix( r, rnext , curvef );\n    \n    int outputY = int(rx*iResolution.y);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    //fragColor = vec4( vec3(r),1.0);\n    \n    if( outputY ==int(fragCoord.y) )\n    {\n        fragColor=vec4(0.);\n    }else\n    {\n        fragColor=vec4(1.);\n    }\n    \n\n}","name":"Image","description":"","type":"image"}]}