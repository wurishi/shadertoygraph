{"ver":"0.1","info":{"id":"slGfDG","date":"1665149165","viewed":36,"name":"note08_rotatescale","username":"utopialeo","description":"rotate,scale,trans","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),sin(_angle),cos(_angle));\n}\n\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,0.0,_scale.y);\n}\n\n\nfloat box(in vec2 _uv, in vec2 _size){\n    _size = vec2(0.5)- _size*0.5;\n    vec2 uv = smoothstep(_size, _size+vec2(0.001), _uv);\n    uv *= smoothstep(_size,_size+vec2(0.001), vec2(1.)-_uv);\n    return uv.x*uv.y;\n}\n\n\nfloat cross(in vec2 _uv, float _size){\n    return box(_uv, vec2(_size,_size/4.)) + box(_uv, vec2(_size/4.,_size));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    //rotate\n    uv -= vec2(0.5);\n    uv = rotate2d(sin(iTime)*3.14)*uv;\n\n    //scale\n    uv = scale(vec2(sin(min(fract(iTime),1.-fract(iTime)))+1.)) * uv;\n    uv += vec2(0.5);\n    \n\n    //trans\n    vec2 translate = vec2(cos(iTime),sin(iTime));\n    uv += translate*0.35;\n\n    color = vec3(uv.x,uv.y,0.0);\n\n    color += vec3(cross(uv,0.4));\n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}