{"ver":"0.1","info":{"id":"mt23D3","date":"1674054819","viewed":228,"name":"BraKi - Sobel - Drag Mouse L / R","username":"braki","description":"Sobel operator for webcam feed. Made this with help from GPT-3. Check out my gpt-3 discord bot on my github: https://github.com/Brakistad","likes":0,"published":3,"flags":2,"usePreview":0,"tags":["sobel","webcam","cam","machinevision","vision","variable","gpt3","sobeloperator","gpt","braki"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define KERNEL_SIZE 3\n\nuniform sampler2D inputTex;\nfloat threshold;\n\nvec4 convolution(vec2 uv) {\n    vec4 sum = vec4(0.0);\n    vec2 offset;\n    for (int x = -KERNEL_SIZE; x <= KERNEL_SIZE; x++) {\n        for (int y = -KERNEL_SIZE; y <= KERNEL_SIZE; y++) {\n            offset = vec2(x, y) / iResolution.xy;\n            vec4 texel = texture(inputTex, uv + offset);\n            if (x == -1 && y == -1) sum += texel * -1.0;\n            if (x == -1 && y == 0) sum += texel * -2.0;\n            if (x == -1 && y == 1) sum += texel * -1.0;\n            if (x == 0 && y == -1) sum += texel * -2.0;\n            if (x == 0 && y == 0) sum += texel * 4.0;\n            if (x == 0 && y == 1) sum += texel * 2.0;\n            if (x == 1 && y == -1) sum += texel * -1.0;\n            if (x == 1 && y == 0) sum += texel * 2.0;\n            if (x == 1 && y == 1) sum += texel * 1.0;\n        }\n    }\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = convolution(uv);\n    color = (color + 1.0) / 2.0;\n    threshold = iMouse.x / iResolution.x;\n    color.rgb = step(threshold, color.rgb);\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}