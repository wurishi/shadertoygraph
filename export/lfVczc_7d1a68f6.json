{"ver":"0.1","info":{"id":"lfVczc","date":"1732206015","viewed":32,"name":"Psyph first sound visualizer","username":"Psyph","description":"first sound visualizer. not fully happy with it, but overall I am really happy with how this looks, so its time to make the next one. a lot of time spent on the minute fiddle with this one...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n\nvec3 palette(float t)\n{\n    /*\n    vec3 a=vec3(0.500,0.500,0.500);\n    vec3 b=vec3(1.000,1.000,1.000);\n    vec3 c=vec3(0.310,0.310,0.310);\n    vec3 d=vec3(0.000,0.667,0.333);\n    */\n    \n    vec3 a=vec3(0.888,0.608,0.333);\n    vec3 b=vec3(0.588,0.418,0.250);\n    vec3 c=vec3(0.750,0.750,0.750);\n    vec3 d=vec3(0.000,0.667,0.333);\n    \n\treturn a+b*cos(2.*PI*(c*t+d));\n}\nvec2 rot2d(vec2 v, float ang)\n{\n    float s=sin(ang);\n    float c=cos(ang);\n    return v*mat2(c,-s,s,c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 col=vec3(0.);\n    //vec3 col=texture(iChannel0,uv).xyz;\n    \n    /*\n    float scal=512./iResolution.x;\n    //fr is the positionin the channel. where x is frequency\n    float fr=fragCoord.x*scal;\n    \n    //fd is volume at the frequency of the current fr\n    float fd=texelFetch(iChannel0,ivec2(fr,0),0).x;\n    \n    \n    if(fragCoord.y<fd*iResolution.y)\n    {\n        col=vec3(.8*fd)+.2;\n    }\n    */\n    \n    \n    \n    //float s=(.2*(sin(iTime/2.)+1.)+1.);\n    float s=((sin(iTime/10.)+sin(.3*iTime+1.6))+3.5)/2.;\n    float le=length(uv)*s;\n    float le2=mod(le,1.);\n    //float fd=texelFetch(iChannel0,ivec2((1.-le2)*512.,0),0).x;\n    float fd=texelFetch(iChannel0,ivec2(le2*512.,0),0).x;\n    float fd2=texelFetch(iChannel0,ivec2(le*100.,0),0).x;\n    \n    float le3=floor(le);\n    float rotang=2.*fd2+mod(iTime/3.+(sin(iTime/3.)+1.)/2.,2.*PI);\n    uv=rot2d(uv,-rotang+PI*le3/3.);\n    //if(le>1.) uv=rot2d(uv,PI/2.);\n    float a=(2.*atan(uv.y/uv.x)/PI+1.);\n    \n\n    //colored lines\n    //if(a-.7>fd&&a-.7<fd+fd2*.4+(le-1.)*(le-1.))\n    //if(a>fd&&a<fd+.1)\n    if(a-.7>fd&&a-.7<fd+.2+fd2*.4)\n    {\n        //col+=vec3(.8,.05,0.)*3.*fd;\n        col+=palette(2.*a+3.*fd2+iTime/4.+le)*.75;\n    }\n    \n    \n    //blue circle\n    uv=rot2d(uv,PI/4.);\n    a=(2.*atan(uv.y/uv.x)/PI+1.);\n    //col+=(3.5-le)*(.9-a)*fd*vec3(.07,.1,.9);\n    //col+=(2.7-le*.8)*(a)*fd*vec3(.07,.1,.8);\n    col+=a/2.*((sin(20.*(a+.1))+3.)/3.)*vec3(.07,.1,.8);\n    \n    \n    //brightness\n    //col=vec3(length(uv));\n    //if(le>1.) col*=a*1.8;\n    col*=(exp(fd)-.8);\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}