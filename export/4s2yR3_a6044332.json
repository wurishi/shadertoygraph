{"ver":"0.1","info":{"id":"4s2yR3","date":"1493116254","viewed":166,"name":"Loading icon for VR","username":"michaelxqy","description":"Loading icon for VR","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["shaderloadingicon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define SMOOTH(r) (mix(1.0, 0.0, smoothstep(0.9,1.0, r)))\n#define M_PI 3.1415926535897932384626433832795\n\nfloat movingRing(vec2 uv, vec2 center, float r1, float r2)\n{\n    vec2 d = uv - center;\n    float r = sqrt( dot( d, d ) );\n    d = normalize(d);\n    float theta = -atan(d.y,d.x);\n    theta  = mod(-iTime+0.5*(1.0+theta/M_PI), 1.0);\n    //anti aliasing for the ring's head (thanks to TDM !)\n    theta -= max(theta - 1.0 + 1e-2, 0.0) * 1e2;\n    return theta*(SMOOTH(r/r2)-SMOOTH(r/r1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy;\n    if(fragCoord.x < iResolution.x/2.0)\n    {\n    \tfloat ring = movingRing(uv, vec2(iResolution.x/4.0,iResolution.y/2.0), 20.0, 30.0);\n    \tfragColor = vec4( 0.1 + 0.9*ring );\n    }\n    else\n    {\n        float ring = movingRing(uv, vec2(iResolution.x * 0.75,iResolution.y/2.0), 20.0, 30.0);\n        fragColor = vec4( 0.1 + 0.9*ring );\n    }\n}","name":"Image","description":"","type":"image"}]}