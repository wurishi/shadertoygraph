{"ver":"0.1","info":{"id":"mtt3zf","date":"1682884578","viewed":66,"name":"Color Stud - Bezold Eff PXIII-1","username":"Slals","description":"Bezold effect showing how contrasted color change the appearance of clearer colors (here the red)","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["interactionofcolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// bricks implementation taken from https://thebookofshaders.com/09/\n// by Patricio Gonzalez Vivo\nvec2 grid(vec2 uv) {\n    uv *= 20.0;\n    \n    uv.x += step(1.0, mod(uv.y, 2.0)) * 0.5;\n    \n    return fract(uv);\n}\nfloat brickSDF(vec2 uv, vec2 s, float f) {\n    s = vec2(0.5) - s * 0.5;\n    vec2 uv2 = smoothstep(s, s + vec2(0.150001 - (0.1 * f)), uv);\n    uv2 *= smoothstep(s, s + vec2(0.150001 - (0.1 * f)), vec2(1.0) - uv);\n    return uv2.x * uv2.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float MY = iMouse.y / iResolution.y;\n    \n    float strokeColor = step(max(0.0, 0.5 - (1.0 - MY)), uv.y - 0.5);\n\n    vec2 g = grid(uv);\n    \n    vec3 red = vec3(1.0, 0.11, 0.133);\n    vec3 color = red * brickSDF(g, vec2(0.9), strokeColor);\n    \n    color = color.r == 0.0 ? vec3(strokeColor) : color;\n    \n    color = (uv.x <= 0.2 || uv.x >= 0.8) || (uv.y >= 0.5 && uv.y <= 0.55) ? vec3(1.0) : color;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}