{"ver":"0.1","info":{"id":"XfSXWK","date":"1706797901","viewed":202,"name":"Fork Sea Sickne NikolaErce 791","username":"NikolaErceg","description":"Found it in https://github.com/Oncorporation/obs-shaderfilter/ seems nice.\nChange the parameters ","likes":1,"published":3,"flags":2,"usePreview":0,"tags":["distortion","filter"],"hasliked":0,"parentid":"7sfyD4","parentname":"Sea Sickness"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":" float amplitude = 0.012; // 0.01 to 0.1, 0.03\n float speed = 4.0; // 0.1 to 10, 1\n float frequency = 12.0; // 1 to 30, 6\n float opacity = 0.7; // 0 to 1, 0.5\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 pulse = sin(iTime * speed - frequency * uv);\n    vec2 coord = uv + amplitude * vec2(pulse.x, -pulse.y);\n    fragColor = texture(iChannel0,coord) * opacity;\n    \n}","name":"Image","description":"","type":"image"}]}