{"ver":"0.1","info":{"id":"tlXfRM","date":"1596314654","viewed":69,"name":"v3Discs4.glsl","username":"jorge2017a1","description":" keijiro /ShaderSketches \nhttps://github.com/keijiro/ShaderSketches/blob/master/Fragment/Discs2.glsl","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["v3discs4glsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float x) { return clamp(x, 0.0, 1.0); }\n\nfloat rand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvec3 palette(float z)\n{\n    float g = 0.6 + 0.4 * sin(z * 8.0 + iTime * 2.0);\n    float b = 0.5 + 0.4 * sin(z * 5.0 + iTime * 3.0);\n    return vec3(1, g, b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = iResolution.y / 5.0;\n    vec2 p = fragCoord.xy / scale;\n\n    vec2 offs1 = vec2(iTime * 0.53, sin(iTime * 1.35) * 0.2);\n    vec2 offs2 = vec2(iTime * 0.81, sin(iTime * 1.19) * 0.2);\n\n    vec2 p1 = p + offs1;\n    vec2 p2 = p + offs2 - 0.5;\n\n    float z1 = rand(0.19 * floor(p1));\n    float z2 = rand(0.31 * floor(p2));\n\n    p1 = fract(p1) - 0.5;\n    p2 = fract(p2) - 0.5;\n\n    float s1 = 0.9 + sin(iTime * (0.6 + z1)) * 0.6;\n    float s2 = 0.9 + sin(iTime * (0.6 + z2)) * 0.6;\n\n    float d1 = (0.25 - abs(0.5 - fract(length(p1) * s1 * 10.0 + 0.26))) / (s1 * 10.0);\n    float d2 = (0.25 - abs(0.5 - fract(length(p2) * s2 * 10.0 + 0.26))) / (s2 * 10.0);\n\n    vec3 c1 = palette(z1) * saturate(d1 * scale);\n    vec3 c2 = palette(z2) * saturate(d2 * scale);\n\n    float a1 = saturate((0.5 - length(p1)) * scale);\n    float a2 = saturate((0.5 - length(p2)) * scale);\n\n    vec3 c1on2 = mix(c2 * a2, c1, a1);\n    vec3 c2on1 = mix(c1 * a1, c2, a2);\n\n    fragColor = vec4(mix(c2on1, c1on2, step(z1, z2)), 1);\n}\n\n\n","name":"Image","description":"","type":"image"}]}