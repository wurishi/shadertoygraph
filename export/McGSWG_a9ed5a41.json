{"ver":"0.1","info":{"id":"McGSWG","date":"1715686084","viewed":56,"name":"Weird Shit","username":"Saw8888","description":"IDK","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palleteGenerator( float t ){\n    vec3 a = vec3(0.508, 0.558, 0.080);\n    vec3 b = vec3(-0.422, 0.428, 0.638);\n    vec3 c = vec3(1.468, -2.472, 3.138);\n    vec3 d = vec3(1.968, 0.478, 5.362);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){ //You recieve the coordenate of a pixel and return its colour. This function is run for every pixel.\n    vec2 uv = fragCoord.xy / iResolution.xy; //This normalizes the canvas so that it ranges from 0-1 not from 0 to sizeX\n    \n    uv = (uv - 0.5)*2.0;//Makes (0,0) the center of the screen\n    uv.x *= iResolution.x / iResolution.y;//Makes the image be the same no matter the aspect ratio\n\n    float d = length(uv); // SDF length\n    \n    vec3 col = palleteGenerator(d); \n    vec3 backgroundCol = palleteGenerator(length(uv)+iTime*0.4); \n    \n    d -= 0.3;\n    \n    d = abs(d);\n    \n    d = sin(d*11.+iTime*1.7)/3.;\n    \n    d = smoothstep(0.04,0.1,d);\n    \n    float d2 = d;\n    \n    d = 0.09/d;\n    \n    if(d>0.1){\n        fragColor = vec4(backgroundCol,1.);\n    }\n    if(d<0.7){\n        fragColor = vec4(col*d2,1.);\n    }\n    /*\n    if(d2>4.){\n        fragColor = vec4(col*d2,1.);\n    }\n    */\n}","name":"Image","description":"","type":"image"}]}