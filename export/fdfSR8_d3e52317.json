{"ver":"0.1","info":{"id":"fdfSR8","date":"1618240197","viewed":62,"name":"Morphing Basic","username":"kithy","description":"morphing,raymarching,anbient occlusion","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","morphing","anbientocclusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPS 0.001\n#define MAX_DIST 64\n\nmat2 rot(float a){\n\tfloat s=sin(a);\n\tfloat c=cos(a);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat sphere(vec3 p){\n\treturn length(p)-2.0;\n}\n\nfloat box(vec3 p,vec3 s){\n\tvec3 q=abs(p);\n\tvec3 m=max(s-q,0.0);\n\treturn length(max(q-s,0.0))-min(min(m.x,m.y),m.z);\n}\n\nfloat mainDist(vec3 p){\n\t//p=mod(p,8.0)-4.0;\n\tp.xy*=rot(iTime);\n\tp.yz*=rot(iTime);\n\tfloat a=sin(iTime*2.0)*0.5+0.5;\n\treturn mix(sphere(p),box(p,vec3(2.0)),a);\n}\n\nvec3 rayMarch(const vec3 eye,const vec3 ray,out float depth,out float steps){\n\tdepth=0.0;\n\tsteps=0.0;\n\tfloat dist;\n\tvec3 rp;\n\n\tfor(int i=0;i<MAX_DIST;i++){\n\t\trp=eye + depth*ray;\n\t\tdist = mainDist(rp);\n\t\tdepth+= dist;\n\t\tsteps++;\n\t\tif(dist<EPS)break;\n\t}\n\t\n\treturn rp;\n}\n\nvec3 genNormal(vec3 p){\n\treturn normalize(vec3(\n\t\tmainDist(vec3(p.x+EPS,p.y,p.z))-mainDist(vec3(p.x-EPS,p.y,p.z)),\n\t\tmainDist(vec3(p.x,p.y+EPS,p.z))-mainDist(vec3(p.x,p.y-EPS,p.z)),\n\t\tmainDist(vec3(p.x,p.y,p.z+EPS))-mainDist(vec3(p.x,p.y,p.z-EPS))\n\t));\n}\n\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\t\n\tvec3 ray=normalize(vec3(uv,1.0));\n\tvec3 camPos=vec3(0.0,0.0,-6.0);\n\n\tfloat depth=0.0;\n\tfloat steps=0.0;\n\tvec3 rp=rayMarch(camPos+EPS*ray,ray,depth,steps);\n\n\tfloat ao=steps*0.01;\n\tao=1.0-ao/(ao+0.5);\n\tfragColor=vec4(vec3(ao),1.0);\n\n\t// vec3 normal=genNormal(rp);\n\t// fragColor=vec4(normal*0.5+0.5,1.0);\n}","name":"Image","description":"","type":"image"}]}