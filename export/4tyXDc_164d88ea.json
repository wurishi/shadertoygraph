{"ver":"0.1","info":{"id":"4tyXDc","date":"1486127290","viewed":588,"name":"something...","username":"piotrekli","description":"draw with your mouse","likes":14,"published":3,"flags":32,"usePreview":0,"tags":["2d","test","noise","experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv)*3.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float DEC = 1.0/100.0;\nconst float PROB = 0.8;\nconst float SMUL = 0.8;\nconst float CMUL = 0.002;\nconst int R = 2;\n\n// https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE1 443.8975\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat posHash(vec2 fragCoord, int idx)\n{\n    return hash13(vec3(float(idx)*0.21217+fragCoord/iResolution.xy, mod(iTime, 10.1234123)));\n}\n\nbool isPixelUpdating(vec2 fragCoord)\n{\n    return posHash(fragCoord, 0) < PROB;\n}\n\nvec3 getPixel(vec2 fragCoord)\n{\n    return texture(iChannel0, fragCoord/iResolution.xy).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 val = getPixel(fragCoord);\n    if (length(val) <= posHash(fragCoord, 9)*0.2)\n    {\n        for (int i=0; i<3; ++i)\n        {\n            for (int xx=-R; xx<=R; ++xx)\n                for (int yy=-R; yy<=R; ++yy)\n                {\n                    if (xx == 0 && yy == 0) continue;\n                    vec2 pos = mod(fragCoord+vec2(xx, yy), iResolution.xy);\n                    if (isPixelUpdating(pos))\n                    {\n                        vec3 pix = getPixel(pos);\n                        float pv = pix[i] + (posHash(pos, 2+i)-0.5)*CMUL;\n                        if (posHash(pos, 1)*SMUL < length(pix))\n                            val[i] = max(val[i], pv);\n                    }\n                }\n        }\n    }\n    else if (isPixelUpdating(fragCoord)) val *= max(length(val)-DEC, 0.0)/length(val);\n    if (iMouse.z > 0.0 && ivec2(iMouse.xy) == ivec2(fragCoord) ||\n       (iResolution.x < 400.0 && mod(float(iFrame), 500.0) == 0.0 && ivec2(fragCoord) == ivec2(iResolution.xy)/2))\n        val = vec3(posHash(fragCoord, 10), posHash(fragCoord, 11), posHash(fragCoord, 12));\n    fragColor.xyz = val;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const int R = 1;\nconst int X = 2*R + 1;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 val = vec4(0.0);\n    for (int xx=-R; xx<=R; ++xx)\n        for (int yy=-R; yy<=R; ++yy)\n            val = max(texture(iChannel0, fract((fragCoord+vec2(xx, yy))/iResolution.xy)), val);\n    fragColor = mix(val, texture(iChannel0, fragCoord/iResolution.xy), 0.9);\n}","name":"Buf B","description":"","type":"buffer"}]}