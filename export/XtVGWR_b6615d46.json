{"ver":"0.1","info":{"id":"XtVGWR","date":"1474144868","viewed":187,"name":"Superformula Experiments (2D)","username":"camargo","description":"Experiments with the \"superformula\" in 2D. \n\nRef: https://en.wikipedia.org/wiki/Superformula","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","superformula"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Superformula Experiments (2D)\n// Chris Camargo, September 2016\n\n// Shapes.\n// Try out shapes 1 - 8.\n#define SHAPE 7\n\n// Superforluma.\nfloat super(float phi, float a, float b, float n1, float n2, float n3, float y, float z)\n{\n    float abs1 = pow(abs( cos( (y * phi) / 4.0) / a ), n2);\n    float abs2 = pow(abs( sin( (z * phi) / 4.0) / b ), n3);\n    float pow1 = -(1.0/n1);\n\n    return pow(abs1  +  abs2, pow1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Map coords to [0, 1].\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    \n    // Map coords to [-1, 1].\n    vec2 q = -1.0 + 2.0*p;\n    \n    // Scale x based on aspect ratio.\n    q.x *= iResolution.x / iResolution.y;\n    \n    // Zoom out (i.e. make all coords larger).\n    q *= 2.0;\n    \n    // Final shape color.\n    vec3 col = vec3(p, 0.5+0.5*sin(iTime));\n    \n    // Superformula params (set SHAPE number to see different shapes).\n\n    float phi = atan(q.y, q.x);\n    \n#if SHAPE == 1\n    float a = 1.0, b = 1.0, n1 = 3.0, n2 = 1.0, n3 = 1.0, y = 4.0, z = 6.0;\n#endif\n    \n#if SHAPE == 2\n    float a = 1.0, b = 1.0, n1 = 2.0, n2 = 1.0, n3 = 1.0, y = 6.0, z = 3.0;\n#endif\n\n#if SHAPE == 3\n    float a = 1.0, b = 1.0, n1 = 1.5, n2 = 1.0, n3 = 1.0, y = 2.0, z = 10.0;\n#endif\n\n#if SHAPE == 4\n    float a = 1.0, b = 1.0, n1 = -1.5, n2 = 1.0, n3 = 1.0, y = 2.0, z = 10.0;\n#endif\n\n#if SHAPE == 5\n    q *= 10.0; // Zoom out more.\n    float a = 1.0, b = 1.0, n1 = -0.2, n2 = 1.0, n3 = 1.0, y = 2.0, z = 44.0;\n#endif\n\n#if SHAPE == 6\n    q *= 15.0; // Zoom out more.\n    float a = 1.0, b = 1.0, n1 = -0.2, n2 = 1.0, n3 = 1.0, y = 8.0, z = 40.0;\n#endif\n\n#if SHAPE == 7\n    float a = 1.0, b = 1.0, n1 = 3.0, n2 = 1.0, n3 = 1.0, y = 88.0, z = 64.0;\n#endif\n    \n#if SHAPE == 8\n    float a = 1.0, b = 1.0, n1 = -20.0, n2 = 1.0, n3 = 1.0, y = 88.0, z = 64.0;\n#endif\n\n    // Calculate the radius using the superformula.\n    float r = super(phi, a, b, n1, n2, n3, y, z);\n    \n    // \"Graph\" the superformula using smoothstep.\n    // \t\tAny pixels <= r away from q are colored\n    //\t\tAny pixels > r + 0.03 away from q are black.\n    col *= smoothstep(r + 0.03, r, length(q));\n    \n    // Output final color.\n\tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}