{"ver":"0.1","info":{"id":"mtccDr","date":"1699059754","viewed":51,"name":"breathing cthulthu","username":"potNick616","description":"it gets better the longer you look","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.141593\nfloat fFractalIterations = 35.0; //fractal parameter 2, range 1 to 128, classic is 32\nfloat fCoordMultiplier; // fractal parameter 3, range 1.0 to 1.5, classic is 1.3\nfloat fCoordPreMulti; // fractal parameter 4, classic is 2.0, zoom\nfloat fRotCenter; // fractal parameter 5, classic is -1.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfFractalIterations = 40.0 + 10.3 * sin(sin(pi / 4.0 + 0.01 * iTime) * pi / 7.0 + 0.1 * iTime);// + sin(iTime * 0.45) * 12.0;\nfCoordMultiplier = 1.1 + 0.01 * sin(pi / 3.0 + 40.4 * iTime);// + cos (1.0 + iTime * 0.3) * 0.01;\nfCoordPreMulti = 6.0 + sin(iTime * 0.92) * 0.9 * cos(1.32 + iTime * 0.62); //v2 =  1.0\nfRotCenter = -3.0;\nfloat fRotAngle = 0.1 + iTime * 0.01;\n    vec2 trueCenterCoord = fragCoord / iResolution.xy * 2.0 - 1.0;\n    trueCenterCoord = abs(trueCenterCoord);\n    trueCenterCoord = 1.0 - trueCenterCoord;\n    float trueLength = pow(length(trueCenterCoord),\n    (sin(iTime *  2.0) * sin(iTime *  1.13) * cos(iTime * 1.5)) * 1.5);\n    vec2 normalizedCoord = fragCoord / iResolution.xy * fCoordPreMulti + fRotCenter;\n    // coordinates from center, range -1 to 1,\n    // set floats to 2.0 and -1.0 for classic\n    //start of fractal loop\n    for (float i = 0.0; i < fFractalIterations; i += 1.0)\n    {\n    normalizedCoord = abs(normalizedCoord) - 0.6;\n    //makes 4\n    normalizedCoord *= fCoordMultiplier;\n    normalizedCoord *= mat2(\n    cos(fRotAngle * 1.00 + 0.2 * (sin(1.54 + iTime*3.4))),\n    -sin(fRotAngle) * 1.0,\n    sin(fRotAngle) * 1.0,\n    cos(fRotAngle * 1.0));\n    }//end of fractal loop\n    fragColor = vec4(\n    trueLength * length(normalizedCoord) * 1.0,// + vec2(0.2, -0.2)), //RED \n    trueLength * length(normalizedCoord), //+ vec2(0.0, -0.0)), //GREEN\n    trueLength * length(normalizedCoord), //+ vec2(0.3, -0.0)), //BLUE\n    1.0); //ALPHA\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}