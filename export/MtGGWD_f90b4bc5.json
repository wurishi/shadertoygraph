{"ver":"0.1","info":{"id":"MtGGWD","date":"1474641834","viewed":331,"name":"Dots in deep blue ","username":"gaz","description":"3d","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime * 0.1 + 65.0\n\nmat2 rotate(float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nmat3 lookat(in vec3 eye, in vec3 target)\n{\n\tvec3 w = normalize(target-eye);\n\tvec3 u = normalize(cross(w,vec3(0,1,0)));\n\tvec3 v = normalize(cross(u,w));\n    return mat3(u,v,w);\n}\n\nfloat smin( float a, float b, float k )\n{\n    return -log(exp(-k*a)+exp(-k*b))/k;\n}\n\nfloat sabs(in float n, in float k)\n{\n    return  -smin(n,-n,k);\n}\n\nfloat sfold(in float n, in float s, in float k)\n{\n    return 4.0*s*sabs(smin(fract(n/(4.0*s)),1.0-fract(n/(4.0*s)),k),k)-s; \n}\n\nfloat map(in vec3 p)\n{   \n    float len = length(p);\n    p.yz *= rotate(-time);\n    float s = 1.0 + 0.8 * sin(time);\n    p.x = sfold(p.x, s, 32.0);\n\tp.y = sfold(p.y, s, 32.0);\n\tp.z = sfold(p.z, s, 32.0);\n    return length(p) - 1.0 - 0.25 * (sin(time) + 1.0) + 0.3 * len;\n}\n\nvec3 calcNormal(in vec3 pos)\n{\n    vec2 e=vec2(1.0,-1.0)*0.002;\n    return normalize(\n        e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n        e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p2 = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.05, 0.1, 0.5) * (0.5 - 0.4 * p2.y * p2.y);\n    vec3 ro = vec3(0, 0, 6);\n    vec3 rd = normalize(vec3(p2, 2.0));\n    ro.xz *= rotate(time);\n    rd = lookat(ro, vec3(0)) * rd;\n    float maxd = 10.0;\n    float t = 0.0, d;\n    for(int i = 0; i < 128; i++)\n    {\n        t += d = map(ro + rd * t);\n        if(d < 0.001 || t > maxd) break;\n    }\n    if(t < maxd)\n    {\n        vec3 p = ro + t * rd;\n        vec3 nor = calcNormal(p);\n\t\tcol = normalize(abs(p));\n\t\tvec3 li = normalize(vec3(1));\n        li.xy *= rotate(time);\n        float dif = clamp(dot(nor, li), 0.0, 1.0);\n        float amb = max(0.5 + 0.5 * nor.y, 0.0);\n        float spc = pow(clamp(dot(reflect(rd, nor), li), 0.0, 1.0), 20.0);\n        col *= clamp(0.0, 1.0, max(dif, 0.3) * amb + spc);\n        col = mix(vec3(1), col, exp(-t * t * 0.0015));\n\t\tcol = pow(col, vec3(0.7));\n    }\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}