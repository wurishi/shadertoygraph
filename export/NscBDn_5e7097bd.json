{"ver":"0.1","info":{"id":"NscBDn","date":"1656309673","viewed":285,"name":"checkerboard distance field","username":"mrange","description":"License CC0: checkerboard distance field\nNeeded a checkerboard so threw this together. \nCheckerboard can be created by sign(p.x*p.y) but\nthe issue is the lines might look jagged once \nrotating the board","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// License CC0: checkerboard distance field\n// Needed a checkerboard so threw this together. \n// Checkerboard can be created by sign(p.x*p.y) but\n// the issue is the lines might look jagged once \n// rotating the board\n#define TIME        iTime\n#define RESOLUTION  iResolution\n\n#define PI          3.141592654\n#define TAU         (2.0*PI)\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nfloat checkerboard(vec2 p) {\n  p = fract(p)-0.5;\n  float s = sign(p.x*p.y);\n  p = abs(abs(p)-0.25);\n  return s*(max(p.x, p.y) - 0.25);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 q = fragCoord/RESOLUTION.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= RESOLUTION.x/RESOLUTION.y;\n  vec2 op = p;\n  p *= ROT(0.2*TIME);\n\n  const float sz = 2.0;\n  float aa = sz*2.0/RESOLUTION.y; \n\n  float d = checkerboard(p*sz);\n\n  vec3 col = mix(vec3(0.0), vec3(0.5), smoothstep(aa, -aa, d));\n  if (op.x > 0.0) col += 0.5*vec3(0.0, 0.5, 1.0)*sin(TAU*d/(10.0*aa));\n  col = sqrt(col);\n  fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}