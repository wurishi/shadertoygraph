{"ver":"0.1","info":{"id":"4X3XD2","date":"1720329817","viewed":38,"name":"SierX2","username":"maxiie","description":"Test","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n\n    fragColor=texelFetch(iChannel0,ivec2(((mapYP(fragCoord/iResolution.xy-0.5,4)+0.5)*iResolution.xy)*(sqrt(2.)+sin(iTime)/5.)-vec2(125.,100.)),0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 draw(vec2 p, float start, float end, float iter,float t) \n{   \n    if (p.x < start || p.x > end || p.y < start || p.y > end) {\n        return vec3(0,0,0);\n    }\n    float len = end - start;\n    float x = p.x - start;\n    float y = p.y - start;\n    vec3 a=vec3(0,1,1);\n    for(float i=0.; i<iter; i++) {\n        len /= 3.;         \n        if (int(x/len) % 3 == 1 && int(y/len) % 3 == 1) {\n            a+=vec3(1./(iter+1.),1,1)*(sin(t/sqrt(2.)+min(abs(p.x),abs(p.y)))/iter+1.);  \n        }\n        if (int(x/len) % 3 == 1 ) {\n            a+=vec3(1./(iter+1.),1,1)/2.*(sin(t+min(abs(p.x),abs(p.y)))+1.);  \n        }\n        if (int(y/len) % 3 == 1 ) {\n            a+=vec3(1./(iter+1.),1,1)/2.*(sin(t+min(abs(p.x),abs(p.y)))+1.);  \n        }\n        \n    }\n    return a;    \n}\nvec3 dsum(vec2 p,int it){\n    int i=0;\n    vec3 a=vec3(0);\n    while(i<it){a+=draw(p, -1., 1., float(i+1),iTime*sqrt(2.)*(1.+float(i)/10.))/(sqrt(float(i))*0.+1.);i++;}\n    return a;\n}\nvec2 trSh(vec2 p)\n{return normalize(p)*length(p+sin(sin(iTime)*0.1+0.))-sin(sin(iTime*1.1)*0.1+0.);}\nvec2 trSh2(vec2 p)\n{return normalize(p)*length(p+sin(cos(iTime)*0.1+0.))-sin(cos(iTime*1.1)*0.1+0.);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{  \n    vec2 p = (2.*fragCoord - iResolution.xy)/iResolution.y; // [-1,1] vertically \n    vec2 p1=trSh(p);\n    vec3 color = hsv2rgb(dsum(trSh2(vec2(p1.x,-p1.y)),5));\n   \n   fragColor = vec4((color),1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec2 rotate(vec2 uv, float th) {\n    return mat2(cos(th), sin(th), -sin(th), cos(th)) * uv;\n}\nvec2 mapX(vec2 cor){\nreturn vec2(\n    cor.x*sqrt(1.-cor.y*cor.y/2.),\n    cor.y*sqrt(1.-cor.x*cor.x/2.));\n}\nvec2 mapY(vec2 cor){\nreturn vec2(\n    cor.x*sqrt(1.+cor.y*cor.y/2.),\n    cor.y*sqrt(1.+cor.x*cor.x/2.));\n}\nvec2 mapYP(vec2 cor,int iter){\nvec2 c=mapY(cor);\nwhile(iter>0){\n  c=mapY(c);\n  iter--;\n}    \nreturn c;\n}\n","name":"Common","description":"","type":"common"}]}