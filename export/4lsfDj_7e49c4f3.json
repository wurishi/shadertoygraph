{"ver":"0.1","info":{"id":"4lsfDj","date":"1513370750","viewed":331,"name":"lost iphone calculator","username":"ukeyshima","description":"It is the design of the former iphone calculator\n\nGPGPU-calculateor:https://ukeyshima.github.io/GPGPU-calculator/","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    #define PI 3.14\n\n    mat2 rotate2d(float angle){\n        return mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    }\n    float zero(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        color*=step(19.0,sqrt(pow((p.x)*1.5,2.0)+pow(p.y,2.0)))+step(sqrt(pow((p.x)*1.5,2.0)+pow(p.y,2.0)),14.0);\n        return color;\n    }\n    float one(vec2 p,vec2 c){\n        p-=c;\n        p.y+=3.0;\n        float color=1.0;\n        color*=clamp(step(p.y,-15.0)+step(20.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        p-=vec2(1.0,20.0);\n        p*=rotate2d( sin(PI/2.0) );\n        color*=clamp(step(p.y,-15.0)+step(0.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        return color;\n    }\n    float two(vec2 p,vec2 c){\n        p-=c;\n        p.y-=7.0;\n        float color=1.0;\n        color*=clamp(step(p.y,0.0)+step(11.0,sqrt(pow((p.x),2.0)+pow((p.y),2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y),2.0)),7.0),0.0,1.0);\n        color*=clamp(step(p.x,6.0)+step(11.0,sqrt(pow((p.x),2.0)+pow((p.y)*1.3,2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y)*1.3,2.0)),7.0),0.0,1.0);\n        color*=clamp(step(p.x,-10.0)+step(12.0,p.x)+step(-20.0,p.y)+step(p.y,-24.0),0.0,1.0);\n        p-=-vec2(3.0,15.0);\n        p*=rotate2d( sin(PI/4.0) );\n        color*=clamp(step(p.y,-11.0)+step(15.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        return color;\n    }\n    float three(vec2 p,vec2 c){\n        p-=c;\n        p.y-=10.0;\n        float color=1.0;\n        color*=clamp(step(p.y,0.0)*step(p.x,-3.0)+step(10.0,sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)),6.0),0.0,1.0);\n        p.y+=17.0;\n        color*=clamp(step(0.0,p.y)*step(p.x,-3.0)+step(12.0,sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)),8.0),0.0,1.0);\n        return color;\n    }\n    float four(vec2 p,vec2 c){\n        p-=c;\n        p.y+=4.0;\n        float color=1.0;\n        color*=clamp(step(p.y,-15.0)+step(20.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        color*=clamp(step(p.x,-18.0)+step(8.0,p.x)+step(-3.0,p.y)+step(p.y,-7.0),0.0,1.0);\n        p-=vec2(-1.0,19.0);\n        p*=rotate2d( sin(PI/5.0) );\n        color*=clamp(step(p.y,-28.0)+step(0.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        return color;\n    }\n    float five(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        p.y+=8.0;\n        color*=clamp(step(0.0,p.y)*step(p.x,-7.0)+step(12.0,sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)),8.0),0.0,1.0);\n        color*=clamp(step(p.x,-8.0)+step(11.0,p.x)+step(23.0,p.y)+step(p.y,19.0),0.0,1.0);\n        p-=vec2(-7.0,18.0);\n        p*=rotate2d( sin(PI/25.0) );\n        color*=clamp(step(p.y,-14.0)+step(4.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        return color;\n    }\n    float six(vec2 p,vec2 c){\n        p-=c;\n        p.y+=2.0;\n        float color=1.0;\n        color*=clamp(step(p.y,9.0)*step(-8.0,p.x)+step(19.0,sqrt(pow((p.x)*1.5,2.0)+pow(p.y,2.0)))+step(sqrt(pow((p.x)*1.5,2.0)+pow(p.y,2.0)),14.0),0.0,1.0);\n        color*=step(11.0,sqrt(pow((p.x+0.3)/1.05,2.0)+pow(p.y+5.5,2.0)))+step(sqrt(pow((p.x+0.3)/1.05,2.0)+pow(p.y+5.5,2.0)),7.0);\n        return color;\n    }\n    float seven(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        color*=clamp(step(p.x,-16.0)+step(8.0,p.x)+step(14.0,p.y)+step(p.y,10.0),0.0,1.0);\n        p-=vec2(7.0,15.0);\n        p*=rotate2d( sin(PI/7.0) );\n        color*=clamp(step(p.y,-39.0)+step(-2.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        return color;\n    }\n    float eight(vec2 p,vec2 c){\n        p-=c;\n        p.y-=6.0;\n        float color=1.0;\n        color*=clamp(step(10.0,sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)),6.0),0.0,1.0);\n        p.y+=17.0;\n        color*=clamp(step(12.0,sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)))+step(sqrt(pow((p.x),2.0)+pow((p.y)*1.1,2.0)),8.0),0.0,1.0);\n        return color;\n    }\n    float nine(vec2 p,vec2 c){\n        p-=c;\n        p.y+=2.0;\n        float color=1.0;\n        color*=clamp(step(-9.0,p.y)*step(p.x,8.0)+step(19.0,sqrt(pow((p.x)*1.5,2.0)+pow(p.y,2.0)))+step(sqrt(pow((p.x)*1.5,2.0)+pow(p.y,2.0)),14.0),0.0,1.0);\n        color*=step(11.0,sqrt(pow((p.x+0.3)/1.05,2.0)+pow(p.y-5.5,2.0)))+step(sqrt(pow((p.x+0.3)/1.05,2.0)+pow(p.y-5.5,2.0)),7.0);\n        return color;\n    }\n    float period(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        p.y+=17.0;\n        color*=step(3.0,length(p));\n        return color;\n    }\n    float clearMark(vec2 p,vec2 c){\n        p-=c;\n        p.y+=2.0;\n        p.x+=2.0;\n        float color=1.0;\n        color*=clamp(step(p.y,8.0)*step(-8.0,p.y)*step(0.0,p.x)+step(17.0,sqrt(pow((p.x)*1.2,2.0)+pow(p.y,2.0)))+step(sqrt(pow((p.x)*1.2,2.0)+pow(p.y,2.0)),12.0),0.0,1.0);\n        return color;\n    }\n    float equalMark(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        color*=clamp(step(p.x,-20.0)+step(20.0,p.x)+step(12.0,p.y)+step(p.y,8.0),0.0,1.0);\n        color*=clamp(step(p.x,-20.0)+step(20.0,p.x)+step(-8.0,p.y)+step(p.y,-12.0),0.0,1.0);\n        return color;\n    }\n    float plusMark(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        color*=clamp(step(p.y,-20.0)+step(20.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        color*=clamp(step(p.x,-20.0)+step(20.0,p.x)+step(2.0,p.y)+step(p.y,-2.0),0.0,1.0);\n        return color;\n    }\n    float minusMark(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        color*=clamp(step(p.x,-20.0)+step(20.0,p.x)+step(2.0,p.y)+step(p.y,-2.0),0.0,1.0);\n        return color;\n    }\n    float multiMark(vec2 p,vec2 c){\n        p-=c;\n        p*=rotate2d((PI/4.0));\n        float color=1.0;\n        color*=clamp(step(p.y,-20.0)+step(20.0,p.y)+step(2.0,p.x)+step(p.x,-2.0),0.0,1.0);\n        color*=clamp(step(p.x,-20.0)+step(20.0,p.x)+step(2.0,p.y)+step(p.y,-2.0),0.0,1.0);\n        return color;\n    }\n    float divisionMark(vec2 p,vec2 c){\n        p-=c;\n        float color=1.0;\n        color*=clamp(step(p.x,-20.0)+step(20.0,p.x)+step(2.0,p.y)+step(p.y,-2.0),0.0,1.0);\n        p.y-=17.0;\n        color*=step(3.0,length(p));\n        p.y+=34.0;\n        color*=step(3.0,length(p));\n        return color;\n    }\n    void mainImage( out vec4 fragColor, in vec2 fragCoord){\n        vec2 p=fragCoord.xy;\n        vec3 color=vec3(224.0/255.0);\n        color-=step(floor(iResolution.y/5.0)*4.0,p.y)*(10.0/225.0);\n        color*=step(p.x,floor(iResolution.x/4.0)*3.0);\n        color+=step(length(color),0.1)*vec3(255.0,142.0,0.0)/255.0;\n        color*=clamp(step(floor(iResolution.y/5.0)*4.0,p.y)+step(mod(p.y,floor(iResolution.y/5.0)),floor(iResolution.y/5.0)-1.0),0.0,1.0);\n        color*=clamp(step(p.y,floor(iResolution.y/5.0))*step(p.x,floor(iResolution.x/4.0))+step(floor(iResolution.x/4.0)*3.0,p.x)+step(mod(p.x,floor(iResolution.x/4.0)),floor(iResolution.x/4.0)-1.0),0.0,1.0);\n        color+=step(length(color),0.1)*vec3(142.0)/255.0;\n        color*=zero(p,vec2(iResolution.x*0.125,iResolution.y*0.1));\n        color*=one(p,vec2(iResolution.x*0.125,iResolution.y*0.3));\n        color*=two(p,vec2(iResolution.x*0.375,iResolution.y*0.3));\n        color*=three(p,vec2(iResolution.x*0.625,iResolution.y*0.3));\n        color*=four(p,vec2(iResolution.x*0.125,iResolution.y*0.5));\n        color*=five(p,vec2(iResolution.x*0.375,iResolution.y*0.5));\n        color*=six(p,vec2(iResolution.x*0.625,iResolution.y*0.5));\n        color*=seven(p,vec2(iResolution.x*0.125,iResolution.y*0.7));\n        color*=eight(p,vec2(iResolution.x*0.375,iResolution.y*0.7));\n        color*=nine(p,vec2(iResolution.x*0.625,iResolution.y*0.7));\n        color*=period(p,vec2(iResolution.x*0.625,iResolution.y*0.1));\n        color*=clearMark(p,vec2(iResolution.x*0.125,iResolution.y*0.9));\n        color+=1.0-equalMark(p,vec2(iResolution.x*0.875,iResolution.y*0.1));\n        color+=1.0-plusMark(p,vec2(iResolution.x*0.875,iResolution.y*0.3));\n        color+=1.0-minusMark(p,vec2(iResolution.x*0.875,iResolution.y*0.5));\n        color+=1.0-multiMark(p,vec2(iResolution.x*0.875,iResolution.y*0.7));\n        color+=1.0-divisionMark(p,vec2(iResolution.x*0.875,iResolution.y*0.9));\n        vec2 m=vec2(iMouse);\n        m.y=iMouse.y;\n        color*=clamp(0.8+ (m.x <iResolution.x/2.0 && m.y<iResolution.y/5.0?step(floor(iResolution.x/2.0),p.x)+step(floor(iResolution.y/5.0),p.y):(step(m.x-mod(m.x,floor(iResolution.x/4.0))+floor(iResolution.x/4.0),p.x)+step(p.x,m.x-mod(m.x,floor(iResolution.x/4.0))))+(step(m.y-mod(m.y,floor(iResolution.y/5.0))+floor(iResolution.y/5.0),p.y)+step(p.y,m.y-mod(m.y,floor(iResolution.y/5.0))))),0.0,1.0);\n        fragColor=vec4(color,1.0);\n    }","name":"Image","description":"","type":"image"}]}