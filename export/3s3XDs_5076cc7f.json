{"ver":"0.1","info":{"id":"3s3XDs","date":"1578101785","viewed":176,"name":"bubbluv","username":"lucastakejame","description":"playing with color channel offsets","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["2d","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CS(a) vec2(cos(a), sin(a))\n#define D(uv, m, w) (mod(uv*m, w) - w/2.)\n#define PI 3.1415\n\nfloat h11(float x)\n{\n    return fract(sin(x*x*2.2)*824.324)*2. -1.;\n}\n\nfloat dist(vec2 uv, float a)\n{\n    return pow(pow(uv.x,a) + pow(uv.y,a), 1./a);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\tvec2 muv = (iMouse.xy - .5*iResolution.xy)/iResolution.y;\n    \n    vec4 bufA = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    \n   \tvec2 puv = vec2(length(uv), atan(uv.y, uv.x));\n    \n    float save = puv.x;\n    puv.x += puv.x*sin(7.*puv.y  + 2.*iTime)*.1;\n        \n    //fragColor = vec4(puv.x);\n\t//return;\n       \n    vec2 noise = puv.x*vec2(cos(puv.y + cos(puv.x*20. + iTime)*.7),\n                            sin(puv.y + sin(puv.x*20. + iTime)*.7));\n    vec2 noise2 = vec2(cos(uv.y*16. + iTime)*.15,\n                       sin(uv.x*9.+ iTime)*.2);\n    \n    \n    \n    float alpha = sin(iTime*.4)*.5 + .5;\n   \tuv += mix(noise, noise2, mix(alpha, bufA.x, bufA.x));\n    \n    float w = 0.4;\n    uv*=w*5.;\n    \n    float dr = dist(D(uv, 1.00, w), 2. + (-bufA.x*4.));\n    float dg = dist(D(uv, 1.05, w), 2. + (-bufA.x*4.));\n    float db = dist(D(uv, 1.10, w), 2. + (-bufA.x*4.));\n    \n    float r = 5.*smoothstep(-.9, 1.5, -.8+ abs(.2 - dr));\n    float g = 5.*smoothstep(-.9, 1.5, -.8+ abs(.2 - dg));\n    float b = 5.*smoothstep(-.9, 1.5, -.8+ abs(.2 - db));\n    \n    // Time varying pixel color\n    vec3 col = 5.*vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    //fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ss(a,b,c) smoothstep(a,b,c)\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n\tvec2 muv = (iMouse.xy - .5*iResolution.xy)/iResolution.y;\n    \n    \n    if(iFrame < 10)\n    {\n\t\tfragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n    else\n    {\n        \n\t    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n        \n        if(iMouse.z > 0.)\n        {\n            float radius = .1;\n            float streng = .5;\n            \n            fragColor += streng*vec4(  clamp( 1.-length(muv-uv)/radius, 0., 1. ) );\n            fragColor = clamp(fragColor, vec4(0.), vec4(1.));\n        }\n        \n        // decay\n        fragColor *= .993;\n        \n    }\n}","name":"Buf A","description":"","type":"buffer"}]}