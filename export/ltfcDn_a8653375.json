{"ver":"0.1","info":{"id":"ltfcDn","date":"1504537341","viewed":95,"name":"Avelina's Mandelbrot Zoom","username":"Avelina","description":"Mandelbrot zoom","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 uv2ri( highp vec2 uv, float radius, highp vec2 offset )\n{\n    float r = uv.x * 2.0 * radius - radius + offset.x;\n    float i = uv.y * 2.0 * radius - radius + offset.y;\n    \n    return vec2( r, i );\n}\n\n\n\nint mandelbrot( highp vec2 c )\n{\n    vec2 z = vec2( 0, 0 );\n    \n    for( int depth = 0; depth < 4001; depth++ )\n    {\n        z = vec2( z.x * z.x - z.y * z.y + c.x,\n                  2.0 * z.x * z.y + c.y );\n        if( length( z ) >= 2.0 )\n        {\n            return depth;\n        }\n    }\n    return -1;\n}\n\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 ir = uv2ri( uv, 2.0 / ( 1.0 + pow( 1.5, iTime ) / 2.0 ), vec2( -0.745428, 0.113009 ) );\n    \n    float c = float( mandelbrot( ir ) )/1000.0;\n    if( c < 0.0 )\n    {\n        fragColor = vec4(0,0,0,1);\n    }\n    else\n    {\n        fragColor.rgb = hsv2rgb( vec3( c, 1, pow( c, 0.5) ) );\n        fragColor.a = 1.0;\n    }\n}","name":"Image","description":"","type":"image"}]}