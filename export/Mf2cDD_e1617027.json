{"ver":"0.1","info":{"id":"Mf2cDD","date":"1722373654","viewed":16,"name":"mandleboring","username":"afrodex","description":"simple mandlebrot set visualization.\nnext step: add color","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define max_it 5   //increase max iterations for better resolution\n#define threshold 1.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    bool inside = true;\n    vec2 z = uv;\n    for(int i = 0; i < max_it; i++)\n    {\n        z = vec2(z.x*z.x - z.y*z.y + uv.x, 2.0*z.x*z.y+uv.y);\n        if (length(z) > threshold){\n            inside = false;\n            break;\n        }\n    }\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    if (inside)\n        col = vec3(1.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}