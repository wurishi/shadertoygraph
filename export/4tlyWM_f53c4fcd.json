{"ver":"0.1","info":{"id":"4tlyWM","date":"1505932317","viewed":78,"name":"Size Modifiable Checkerboard","username":"Lunck","description":"Checkerboard with modifiable size.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//-----CHANGE SIZE OF TILES------    \nfloat size = 1.0;\n\n\n//takes mod of uv then returns the new point with it's \"odd\" and \"even\" values\nvec2 OddEven(vec2 point, float tileSize)\n{\n//multiply values by 10 to use integers rather than decimals\n\tpoint = vec2 (point.x * 10.0, point.y * 10.0); \n    \n//divide old uv by the desired size, then take the mod to find out if it's even or odd\n\tvec2 tile = vec2 (mod(point.x/tileSize, 2.0), mod(point.y/tileSize, 2.0));\n\n    return tile;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 tile = OddEven(uv, size);\n    \n//Checks if the box tile is even or odd, then makes it black or white\n    if ((tile.x > 1.0 && tile.y > 1.0) || (tile.x < 1.0 && tile.y < 1.0))\n    {\n    \tfragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n    else \n    {    \n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}