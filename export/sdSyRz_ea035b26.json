{"ver":"0.1","info":{"id":"sdSyRz","date":"1642982101","viewed":182,"name":"Little Spinny Blobs","username":"SnoopethDuckDuck","description":"small little shader, trying to make it 3D but might give up","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;  \n    \n    float time = 0.25 * iTime;\n   // time += thc(40000000., iResolution.y * uv.x);\n    float sc = 2.; //length(uv) * 32.;\n    \n    float r = 0.05;\n    //r += 0.05 * cos(4. * length(uv));\n    float sp = 0.45;\n    float n = 11.;\n    float d = 100.;\n    for (float i = 0.; i < n; i++) {\n        float e = (i/n) * pi;\n        vec2 p = sp * thc(sc, time + e) * vec2(cos(e), sin(e));\n        d = smin(d, length(uv - p));\n    }\n    d -= r;\n   \n    float k = 0.5/iResolution.y;\n    float s = smoothstep(-k, k, -d);\n    \n    vec3 col = vec3(s);\n    \n    fragColor = vec4(col, 1.);\n   // fragColor = vec4( 1. - d/fwidth(d) );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\n// (SdSmoothMin) stolen from here: https://www.shadertoy.com/view/MsfBzB\nfloat smin(float a, float b)\n{\n    float k = 0.12;\n    float h = clamp(0.5 + 0.5 * (b-a) / k, 0.0, 1.0);\n    return mix(b, a, h) - k * h * (1.0 - h);\n}","name":"Common","description":"","type":"common"}]}