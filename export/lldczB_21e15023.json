{"ver":"0.1","info":{"id":"lldczB","date":"1533105113","viewed":127,"name":"Truchet tiles 1","username":"zwwgggbest","description":"Truchet tiles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["truchettiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n\nvec2 rotate2D(vec2 _uv, float _angle)\n{\n\tmat2 rotate = mat2(cos(_angle), -sin(_angle),\n                        sin(_angle), cos(_angle));\n    _uv -= .5;\n    _uv = rotate * _uv;\n    _uv += .5;\n    \n    return _uv;\n}\n\nvec2 tileStyle1(vec2 _uv)\n{\n    _uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(_uv, PI * 0.5);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(_uv, PI);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(_uv, PI * 0.0);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(_uv, PI * -0.5);\n    }\n    \n\treturn _uv;\n}\n\nvec2 tileStyle2(vec2 _uv)\n{\n\t_uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(_uv, PI * 0.5);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(_uv, 0.0);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(_uv, PI);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(_uv, PI * -0.5);\n    }\n    \n\treturn _uv;\n}\n\nvec2 tileStyle3(vec2 _uv)\n{\n\t_uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(tileStyle2(_uv), PI);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI);\n    }\n    \n\treturn _uv;\n}\n\nvec2 tileStyle4(vec2 _uv)\n{\n\t_uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI);\n    }\n    \n\treturn _uv;\n}\n\nvec2 tileStyle5(vec2 _uv)\n{\n\t_uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI * .5);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI * .5);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI * .5);\n    }\n    \n\treturn _uv;\n}\n\nvec2 tileStyle6(vec2 _uv)\n{\n\t_uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(tileStyle2(_uv), PI * -.5);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI * -.5);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI * .5);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), PI * .5);\n    }\n    \n\treturn _uv;\n}\n\nvec2 tileStyle7(vec2 _uv)\n{\n\t_uv *= 2.;\n    float index = 0.;\n    index += step(1., mod(_uv.x, 2.));\n    index += step(1., mod(_uv.y, 2.)) * 2.;\n    \n    //     |\n    //  2  |   3\n    //     |\n    //------------\n    //     |\n    //  0  |   1\n    //     |\n    \n    _uv = fract(_uv);\n    \n    if(index == 0.0) {\n        _uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 1.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 2.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    } else if(index == 3.0) {\n    \t_uv = rotate2D(tileStyle2(_uv), 0.0);\n    }\n    \n\treturn _uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n   \tuv *= 4.;\n    uv = fract(uv);\n    \n    // choose which you like\n    \n    //uv = tileStyle1(uv);\n    //uv = tileStyle2(uv);\n    uv = tileStyle3(uv);\n    //uv = tileStyle4(uv);\n    //uv = tileStyle5(uv);\n    //uv = tileStyle6(uv);\n    //uv = tileStyle7(uv);\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = vec3(smoothstep(uv.x, uv.x + .02, uv.y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}