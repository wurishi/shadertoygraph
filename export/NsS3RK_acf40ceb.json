{"ver":"0.1","info":{"id":"NsS3RK","date":"1617625612","viewed":70,"name":"overlaptest","username":"Hyeve","description":"a test shader with overlapping circles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a), -sin(a), sin(a), cos(a)) \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy-.5 * iResolution.xy)/iResolution.y;\n\n    vec4 col;\n    \n    vec2 circlecentre1 = vec2(sin(iTime) / 4., cos(iTime) / 4.);\n    vec2 circlecentre2 = vec2(cos(iTime) / 2., sin(iTime) / 4.);\n    vec2 circlecentre3 = vec2(sin(iTime) / 2., sin(iTime) / 4.);\n    vec2 circlecentre4 = vec2(cos(iTime) / 2., cos(iTime) / 4.);\n\n    float d1 = distance(uv, circlecentre1);\n    float d2 = distance(uv, circlecentre2);\n    float d3 = distance(uv, circlecentre3);\n    float d4 = distance(uv, circlecentre4);\n    \n    vec4 rainbow = mix(mix(vec4(1.,0.,0.,1.), vec4(0.,1.,0.,1.), uv.x + 0.5), vec4(0.,0.,1.,1.), uv.y + 0.5);\n\n    if(d1 < 0.4) col = mix(texture(iChannel0, uv * rot(iTime) - circlecentre1 * rot(iTime)), rainbow, step(0.39,d1));   \n    if(d2 < 0.3) col = mix(texture(iChannel1, uv * rot(iTime) - circlecentre2 * rot(iTime)), rainbow, step(0.29,d2));   \n    if(d3 < 0.2) col = mix(texture(iChannel0, uv * rot(-iTime) - circlecentre3 * rot(-iTime)), rainbow, step(0.19,d3));   \n    if(d4 < 0.1) col = mix(texture(iChannel1, uv * rot(-iTime) - circlecentre4 * rot(-iTime)), rainbow, step(0.09,d4));   \n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}