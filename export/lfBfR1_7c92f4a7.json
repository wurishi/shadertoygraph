{"ver":"0.1","info":{"id":"lfBfR1","date":"1724633848","viewed":40,"name":"moire pixels","username":"MadMath123","description":"pixel moire effect lol","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["moire","pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\nfloat rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\nfloat rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\nfloat rand(vec3 co){ return rand(co.xy+rand(co.z)); }\nmat2 rotate(float d)\n{\n    float c = cos(d);\n    float s = sin(d);\n    return  mat2(c, -s, s, c);\n}\nvec4 getPixelMult(vec2 fc){\n    // Output to screen\n    vec4 o = vec4(vec3(0.),1.0);\n    if(mod(fc.y,18.) >= 9.){\n        fc.x += 4.5;}\n    if(mod(fc.x,3.) < 2.){\n        o = vec4(vec3(0.),1.0);\n    }\n    else if(mod(fc.y,9.) < 2.){\n        o = vec4(vec3(0.),1.0);\n    }\n    else if(mod(fc.x,9.) < 3.){\n        o = vec4(6.,0.,0.,1.0);\n    }\n    else if(mod(fc.x,9.) < 6.){\n        o = vec4(0.,6.,0.,1.0);\n    }\n    else{\n        o = vec4(0.,0.,6.,1.0);\n    }\n    return o;\n\n}\nvec4 getPM2(vec2 fc){\n    return (getPixelMult(fc)*4.+getPixelMult(fc+vec2(1.,0.))+getPixelMult(fc+vec2(-1.,0.))+getPixelMult(fc+vec2(0.,1.))+getPixelMult(fc+vec2(0.,-1.)))/8.;\n}\nvec4 getPM3(vec2 fc){\n    return (getPM2(fc)*4.+getPM2(fc+vec2(2.,0.))+getPM2(fc+vec2(-2.,0.))+getPM2(fc+vec2(0.,2.))+getPM2(fc+vec2(0.,-2.)))/8.;\n}\nvec4 colorFromDir(vec3 dir){\n\n    dir *= .5/dir.z;\n    vec2 uv = dir.xy;\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    return vec4(texture(iChannel0,dir.xy*.5+vec2(.25,.4375)).rgb,1.0)*getPM3(dir.xy*2048.);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 dir = normalize(vec3((fragCoord - .5 * iResolution.xy) / iResolution.y,1.5));\n    dir.yz *= rotate(PI/16.);\n    dir.xz *= rotate(-PI/8.);\n    dir.xy *= rotate(-PI/64.);\n    vec3 dir2;\n    vec4 ret = vec4(0);\n    for(float i = 0.; i < 25.; i ++){\n        dir2 = dir;\n        dir2.xz *= rotate(PI/8192.*(mod(i,5.)-2.));\n        dir2.yz *= rotate(PI/8192.*(floor(i/5.)-2.));\n        ret += colorFromDir(dir2);\n    }\n    fragColor = ret/25.;\n}","name":"Image","description":"","type":"image"}]}