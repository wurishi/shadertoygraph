{"ver":"0.1","info":{"id":"4l2SDW","date":"1443729738","viewed":227,"name":"Mmm, squares","username":"paulsuda","description":"Checker board, move the mouse.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["background","squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"\nfloat numTiles = 32.0;\n\n/**\n * Returns 0.0 if out of the circle, 1.0 if in the circle.\n */\nfloat unitSq(in vec2 uv, in float size){\n    uv = abs(uv - 0.5) / size;\n    return floor(uv.x + uv.y);\n}\n\n/**\n * Vary output from 0.0 to 1.0.\n */\nvec2 tile(in float tileDivisor, in vec2 uv, out vec2 tileProgress){\n    tileProgress = uv / tileDivisor;\n    return fract(tileProgress);\n}\n\nfloat sqSizeFactor(in float tileDivisor, in vec2 tileProgress){\n    vec2 mousePosition = iMouse.xy / tileDivisor;\n    float dist = distance(tileProgress, mousePosition);\n    return (dist / (numTiles * 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\n\tvec2 tileRes = iResolution.xx;\n\tfloat tileDivisor = iResolution.x / numTiles;\n\n\tvec2 uv = fragCoord.xy;\n    vec2 tileProgress = vec2(0.0, 0.0);\n    float sqSize = 1.0;\n    /* Set tileProgress here. */\n    uv = tile(tileDivisor, uv, tileProgress);\n    sqSize = sqSize * sqSizeFactor(tileDivisor, tileProgress);\n    float r = unitSq(uv, sqSize / 2.0);\n    fragColor = vec4(r/1.0, 1.0, 1.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}