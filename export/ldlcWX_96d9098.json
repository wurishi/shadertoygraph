{"ver":"0.1","info":{"id":"ldlcWX","date":"1490174967","viewed":995,"name":"Tonemap Comparison","username":"robobo1221","description":"Just a quick comparison of the some tonemaps and my tonemap.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["glsl","tonemap","comparison","robobo1221"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//tonemap comparision on the following order from top to bottom:\n//Robobo1221's Tonemap\n//Reinhard\n//Jt_Tonemap\n\nvec3 robobo1221sTonemap(vec3 x){\n\treturn sqrt(x / (x + 1.0f / x)) - abs(x) + x;\n}\n\nvec3 basicReinhard(vec3 x){\n\treturn x / (1.0 + x);\n}\n\n#define toLum(color) dot(color, vec3(.2125, .7154, .0721) )\n#define lightAjust(a,b) ((1.-b)*(pow(1.-a,vec3(b+1.))-1.)+a)/b\n#define reinhard(c,l) c * (l / (1. + l) / l)\nvec3 jt_toneMap(vec3 x){\n    float l = toLum(x);\n    x = reinhard(x,l);\n    float m = max(x.r,max(x.g,x.b));\n    return min(lightAjust(x/m,m),x);\n}\n#undef toLum\n#undef lightAjust\n#undef reinhard\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 x = vec3(0.5 / uv.x);\n    x *= vec3(0.3, 0.5, 1.0);\n    \n    x = pow(x, vec3(2.2));\n    \n    if (uv.y > 0.5 && uv.y < 0.75) x = robobo1221sTonemap(x);\n\telse\n\tif (uv.y > 0.25 && uv.y < 0.5) x = basicReinhard(x);\n    else\n    if (uv.y > 0.0 && uv.y < 0.25) x = jt_toneMap(x);\n        \n    x = pow(x, vec3(0.454545));\n    \n\tfragColor = vec4(x,1.0);\n}","name":"Image","description":"","type":"image"}]}