{"ver":"0.1","info":{"id":"4dGSRt","date":"1465877970","viewed":834,"name":"Shader to Sing/Breath to","username":"gunnarclovis","description":"My first interaction testing the microphone with a shader. Even just the sound made from the keyboard typing this description looks cool to me.","likes":0,"published":3,"flags":4,"usePreview":0,"tags":["audio","microphone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sinMod(float x)\n{\n    return 0.5 + 0.5 * sin(x);\n}\nfloat cosMod(float x)\n{\n    return 0.5 + 0.5 * cos(x);\n}\nfloat tanMod(float x)\n{\n    return 0.5 + 0.5 * tan(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 mic = texture(iChannel0, uv);\n    \n    fragColor = vec4(mic.r, mic.g * 2.0, mic.b * mic.b, 1.0);\n    fragColor += vec4(0.12 * sinMod(iTime + mic.r),\n                      0.12 * cosMod(iTime + mic.g),\n                      0.12 * tanMod(iTime + mic.b), 1.0);\n    //fragColor += vec4(tanMod(mic.g), 1.1 * cosMod(mic.b), cosMod(mic.r), 1.0);\n}","name":"Image","description":"","type":"image"}]}