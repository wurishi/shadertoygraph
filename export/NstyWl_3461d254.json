{"ver":"0.1","info":{"id":"NstyWl","date":"1654245377","viewed":277,"name":"repro image by dart throwing","username":"FabriceNeyret2","description":"Reproduce ref image with random splats ( ultra slow to converge ;-) )\nred = remaining error\nblue = reconstruction\ngreen/red splats:  positive/negative shape dart throwing\nNB: you can change splat shape in buffA:23-26","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["montecarlo","gpmipmap","dartthrowing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O = T(U);\n    if ( O.g != 0. ) O = 30.*vec4(-O.g,O.g,0,0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define T(U) texelFetch( iChannel0, ivec2(U), 0 )\n#define R    iResolution.xy","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// O.r : current image error\n// O.b : current image best\n// O.g : current image delta proposal\n// O.a : integral error\n\n#define hash(p)  fract(sin((p)* vec2(12.9898, 78.233 )) * 43758.5453)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = T(u);                      // restore previous state\n    vec2  U = u/R.y;\n    float m = textureLod(iChannel0, vec2(.5), 99.).r, // total image difference\n          m0= O.a;                 // previous image difference\n    if ( m < m0 ) O.b += O.g,      // if last draw improved, keep it.\n                  O.a = m;         // store new image difference\n    O.g = 0.;                      // proposal: modification to prev best\n    for( float s,t,i = 0.; i < 1.; i++ ) {           // simulatenous tests (not independant: whole lot ok or not)\n        t = iTime -7.1*i;                            // seed\n        vec2 p = R/R.y*hash(t), r = hash(t+1.), d;   // random rectangle\n        r = .2*r*r;                                  // size distribution\n        s =  2.*hash(t+.5).y -1.;                    // random signed weight\n                                                     // proposal splat:\n     // d = r - abs(U-p); O.g += s* step( 0.,min(d.x,d.y)); //  rectangle\n     // O.g += s* step( length(U-p) , r.x );         //         disc\n        O.g += s* max(0., r.x - length(U-p) );       //         cone\n     // O.g += s* smoothstep(r.x,0.,length(U-p) );   //         blob\n    }\n    O.r = abs ( O.b+O.g - texture(iChannel1,u/R).b );// error compare to reference\n                                                     // top MIPmap LOD will integrate    \n    if (iFrame<1) O = vec4(1e9, .5,0, 1e9); \n}","name":"Buffer A","description":"","type":"buffer"}]}