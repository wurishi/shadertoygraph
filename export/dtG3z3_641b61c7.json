{"ver":"0.1","info":{"id":"dtG3z3","date":"1684353238","viewed":118,"name":"Hamster Ant","username":"starmole2","description":"Based on: https://en.wikipedia.org/wiki/Langton%27s_ant\nThings to try: Enable MULTIANT define in Buffer A (and restart the shader!). Change zoom level in Image shader.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["cellular","ant","langton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 c =  iChannelResolution[0].xy * .5;\n    float zoom = 1.0 / 6.0;\n    vec4 col = texelFetch(iChannel0, ivec2((fragCoord-c)*zoom+c), 0);\n    float v = col.z / (col.z+1.0);\n    \n    if ( col.y != 0.0 ) \n       col = vec4(1.0, 0.1, 0.1, 1.0);\n    else if ( col.x != 0.0 ) \n       col = vec4(0.5, v, 1.0-v, 1.0);\n    else   \n       col = vec4(0.0, 0.1, v, 1.0 );\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//#define MULTIANT\n\nfloat InitAnt(ivec2 p) {\n    // single ant, facing right\n    if ( p.x == (int(iChannelResolution[0].x) >> 1) && p.y == (int(iChannelResolution[0].y) >> 1) )\n        return 1.0;\n       \n    // more ants! \n#ifdef MULTIANT\n    if ( p.x % 33 == 0 && p.y % 33 == 0 )\n        return float(((p.x*p.y) / (33*33)) % 4 + 1);\n#endif \n\n    return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 ip = ivec2(fragCoord);\n    if ( iFrame == 0 ) {\n        fragColor = vec4(0.0, InitAnt(ip), 0.0, 0.0);\n    } else {\n        vec4 c = texelFetch(iChannel0, ip, 0);\n        c.y = 0.0;\n        vec4 left = texelFetch(iChannel0, ip + ivec2(-1,0), 0); // 1\n        vec4 right = texelFetch(iChannel0, ip + ivec2(1,0), 0); // 2\n        vec4 up = texelFetch(iChannel0, ip + ivec2(0,-1), 0);   // 3 \n        vec4 down = texelFetch(iChannel0, ip + ivec2(0,1), 0);  // 4\n\n        if ( left.y == 1.0 ) {\n            // move it here \n            if ( c.x == 1.0 ) c.y = 4.0; // turn left\n            else c.y = 3.0; // turn right\n            c.x = 1.0 - c.x;\n            c.z += 1.0; // increment visit counter\n        } \n        if ( right.y == 2.0 ) {\n            // move it here \n            if ( c.x == 1.0 ) c.y = 3.0;\n            else c.y = 4.0;\n            c.x = 1.0 - c.x;\n            c.z += 1.0; // increment visit counter\n        } \n        if ( up.y == 3.0 ) {\n            // move it here \n            if ( c.x == 1.0 ) c.y = 1.0;\n            else c.y = 2.0;\n            c.x = 1.0 - c.x;\n            c.z += 1.0; // increment visit counter\n        } \n        if ( down.y == 4.0 ) {\n            // move it here \n            if ( c.x == 1.0 ) c.y = 2.0;\n            else c.y = 1.0;\n            c.x = 1.0 - c.x;\n            c.z += 1.0; // increment visit counter\n        } \n\n        fragColor = c;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}