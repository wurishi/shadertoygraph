{"ver":"0.1","info":{"id":"WsVGWG","date":"1570853218","viewed":140,"name":"Interior Map","username":"kass","description":"interior","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interiormap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float GetIntersectLength(vec3 rayPos, vec3 rayDir, vec3 planePos, vec3 planeNormal)\n{\n    return dot(planePos - rayPos, planeNormal) / dot(rayDir, planeNormal);\n}\n\nfloat GetRandomNumber(vec2 texCoord, float Seed)\n{\n    return fract(sin(dot(texCoord.xy, vec2(12.9898, 78.233)) + Seed) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 Albedo = vec4(0.0,0.0,0.0,1.0);\n    \n    vec2 uv = (fragCoord/iResolution.xy)*2. - 1.;\n    vec4 m = (iMouse / iResolution.xyxx)*2. - 1.;\n   \n    vec3 objectScale = vec3(5.0,5.0,1.0); \n    \n    vec3 objectWorldPos = vec3(0.0,0.0,-5.);\n   \tvec3 objectFragPos = objectWorldPos + vec3(uv.x,uv.y,0.0) * objectScale;\n    \n    float rad = iTime; \n    mat3 rotate = mat3(\t\n                  \tcos(rad), -sin(rad), 0,\n                    sin(rad), cos(rad) , 0,\n        \t\t\t0,\t0,\t1\n                  );\n    \n    vec3 cameraPos \t= vec3(m.x*10.0,m.y*10.0 ,40);\n    vec3 rayPos\t\t= vec3(objectFragPos.x,objectFragPos.y,objectFragPos.z);\n    vec3 rayDir \t= rayPos.xyz - cameraPos.xyz;\n    \n    ///////////////////////////////\n   \n    vec3 planePos \t\t= vec3(0.0,0.0,0.0);\n    vec3 planeNormal \t= vec3(0.0,0.0,0.0);\n    vec3 UpVec \t\t\t= vec3(0, 1., 0);\n\tvec3 RightVec \t\t= vec3(1., 0, 0);\n\tvec3 FrontVec \t\t= vec3(0, 0, 1.);\n    vec3 planeOffset \t= vec3(0.0,0.0,0.0);\n    \n    /////////////////////////////\n    \n    float len = 999.;\n\n    // ceil and floor\n    {\n        float which = step(0.0, dot(rayDir, UpVec));\n    \tplanePos = vec3(0.0,0.0,0.0);\n        \n        planePos.y = ceil(rayPos.y - 0.5);\n        \n    \tplaneNormal = vec3(0, mix(1., -1., which), 0);\n        planePos.y -= mix(0.5, -0.5, which);\n        \n    \tfloat l = GetIntersectLength(rayPos,rayDir,planePos,planeNormal);\n        if(l < len){\n            \n            len = l;\n        \tAlbedo = vec4(1.0,which,0.0,1.0);\n        \n        }\n    }\n    \n    // side wall\n    {\n        float which = step(0.0, dot(rayDir, RightVec));\n    \tplanePos = vec3(0.0,0.0,0.0);\n        \n        planePos.x = ceil(rayPos.x- 0.5);\n        \n        planeNormal = vec3(mix(1., -1., which), 0, 0);\n        planePos.x -= mix(0.5, -0.5, which);\n        \n    \tfloat l = GetIntersectLength(rayPos,rayDir,planePos,planeNormal);\n        if(l < len){\n            len = l;       \n            Albedo = vec4(0.0,which,1.0,1.0);\n        }\n    }\n\n    float _x = float(int(rayPos.x));\n    float _y = float(int(rayPos.y));\n    \n    // depth wall\n    {\n        float which = step(0.0, dot(rayDir, FrontVec));\n        \n        float depth = -10.0;\n        \n    \tplanePos = vec3(0.0,0.0, depth );\n        \n    \tplaneNormal = vec3(0.0,0.0,mix(1., -1., which));\n\n    \tfloat l = GetIntersectLength(rayPos,rayDir,planePos,planeNormal);\n        if(l <= len){\n            len = l;\n            Albedo = vec4(1.0,0.0,1.0,1.0);\n        }\n    }\n    \n    vec4 light = Albedo;\n    fragColor = light;\n}","name":"Image","description":"","type":"image"}]}