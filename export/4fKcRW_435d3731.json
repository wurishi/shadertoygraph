{"ver":"0.1","info":{"id":"4fKcRW","date":"1731559281","viewed":78,"name":"BrendanLuuPrint","username":"brendanluu","description":"nice texture here","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["popart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Hash function for random number generation\nfloat hash(vec2 p) {\n    p = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\n\n// 2D Value Noise function\nfloat noise( in vec2 p ) {\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n    \n    vec2 u = f*f*(30.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\n// Fractional Brownian Motion\nfloat fbm(vec2 p) {\n    float value = 0.0;\n    float amplitude = .9;\n    float frequency = .4;\n    \n    for(int i = 0; i < 10; i++) {\n        value += amplitude * noise(p * frequency);\n        frequency *= 20.0;\n        amplitude *= 1.0;\n    }\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Scale UV for more detail\n    uv *= 8.0;\n    \n    // Create base noise for stone pattern\n    float noise1 = fbm(uv * 1.0);\n    float noise2 = fbm(uv * 2.0 + vec2(100.0));\n    float noise3 = fbm(uv * 4.0 + vec2(-100.0));\n    \n    // Combine noise layers for stone texture\n    float stonePattern = noise1 * 0. + noise2 * 0.3 + noise3 * 0.2;\n    \n    // Create separate noise for moss growth\n    float mossNoise = fbm(uv * 3.0 + vec2(42.0, 13.0));\n    float mossPattern = smoothstep(0.4, 0.6, mossNoise);\n    \n    // Define colors\n    vec3 stoneColor = vec3(0.6, 0.6, 0.6);\n    vec3 mossColor = vec3(0.4, 0.8, 0.2);\n    \n    // Add detail to stone\n    stoneColor *= mix(0.8, 1.2, stonePattern);\n    \n    // Mix stone and moss based on pattern\n    vec3 finalColor = mix(stoneColor, mossColor, mossPattern);\n    \n    // Add subtle variation to moss color\n    finalColor.g += mossNoise * 0.1;\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}