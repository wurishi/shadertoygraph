{"ver":"0.1","info":{"id":"mdcXW7","date":"1680888243","viewed":76,"name":"Generalized vector norm","username":"GetItemFromBlock","description":"A visual representation of the generalized norm formula.\nThe top half uses an improved formula which factors by the infinite norm, where the bottom half use the regular generalized norm formula.\nYou can change the exponent used with mouse X","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","vector","norm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Gives the infinite norm of the vector\nfloat infLen(vec2 vec)\n{\n    return max(abs(vec.x), abs(vec.y));\n}\n\n// Gives a better approximation of the norm, by factoring by the infinite norm\nfloat len(vec2 vec, float power)\n{\n    float infL = infLen(vec);\n    return infL * pow(pow(abs(vec.x/infL),power) + pow(abs(vec.y/infL), power), 1./power);\n}\n\n// Gives the norm of the vector by using the generalized norm formula;\n// This can causes imprecision with very high/low values, as seen on the screen where the bottom half\n// fills with a white square as the exponent increase\nfloat simpleLen(vec2 vec, float power)\n{\n    return pow(pow(abs(vec.x),power) + pow(abs(vec.y), power), 1./power);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 d = fragCoord/iResolution.yy - vec2(iResolution.xy/iResolution.yy*0.5);\n    float l = pow(iMouse.x / iResolution.x*5., 4.);\n    if (l < 0.000001) l = 1.;\n    vec3 col = vec3(0);\n    for (int i = 0; i < 3; i++)\n    {\n        if (d.y >= 0.)\n        {\n            col[i] = len(d,l) > 0.3 + float(i)*0.1 ? 0. : 1.;\n        }\n        else\n        {\n            col[i] = simpleLen(d,l) > 0.3 + float(i)*0.1 ? 0. : 1.;\n        }\n    }\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}