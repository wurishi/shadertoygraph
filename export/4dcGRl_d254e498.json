{"ver":"0.1","info":{"id":"4dcGRl","date":"1451504635","viewed":213,"name":"cobweb diagram","username":"TehSuckerer","description":"use the mouse to play with the diagram\n\ncredit: I basically stole iq's code for the bifurcation diagram in the background, check out his stuff: https://www.shadertoy.com/view/4dSXWt","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","attractor","chaos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define iterations1 200.0\n#define iterations2 200\n#define iterations3 512\n#define thickness1 1.75\n#define thickness2 1.25\n#define thickness3 0.75\n#define background vec4(1.0,1.0,1.0,1.0)\n#define curve vec4(0.0,1.0,0.0,1.0)\n#define line vec4(0.0,0.0,0.0,1.0)\n#define laserstart vec4(1,0.0,0.0,1.0)\n#define laserend vec4(0.0,0.0,1.0,1.0)\n\nfloat parabola ( in float x, in float amp )\n{\n    return amp*(1.0 - 4.0*(x - 0.5)*(x - 0.5));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = background;\n    \n    //bifurcation diagram\n    float e = 4.0/iResolution.x;\n\tfloat x = 0.5;\n\tfor( int i=0; i < iterations2; i++ )\n        x = 4.0*uv.x*x*(1.0-x);\n\n    float f = 0.0;\n    for( int i=0; i < iterations3; i++ )\n    {\n        x = 4.0*uv.x*x*(1.0-x);\n        f += 0.1*exp(-200000.0*(uv.y-x)*(uv.y-x));\n    }\n    f = 1.0 - f;\n    fragColor = vec4( f, f, f, 1.0 );\n    \n    //curve\n    float amplitude = iMouse.x/iResolution.x;\n    float value = parabola(uv.y, amplitude);\n    float tangent = amplitude*(4.0 - 8.0*uv.y);\n    vec2 thicknessmodifier = vec2(1.0,1.0) / iResolution.xy;\n    if (abs(uv.x - amplitude) < thickness3*thicknessmodifier.x)\n        fragColor = line;\n    if (abs(uv.x - value) < thickness1*thicknessmodifier.x*sqrt(tangent*tangent + 1.0) || abs(uv.y - uv.x) < thickness1*thicknessmodifier.x*sqrt(2.0))\n\t\tfragColor = curve;\n    \n    //laser\n    float posy = iMouse.y/iResolution.y;\n    float posx = 0.0;\n    vec4 laser1;\n    vec4 laser2 = laserstart;\n    for (float i = 0.0; i < iterations1; ++i)\n    {\n        laser1 = laser2;\n        laser2 = ((iterations1 - i - 0.5)*laserstart + (i + 0.5)*laserend)/iterations1;\n        value = parabola(posy, amplitude);\n        if ((uv.x - value)*(uv.x - posx) <= 0.0 && abs(uv.y - posy) < thickness2*thicknessmodifier.y)\n            fragColor = ((uv.x - posx)*laser2 + (value - uv.x)*laser1)/(value - posx);\n        posx = value;\n        laser1 = laser2;\n        laser2 = ((iterations1 - i - 1.0)*laserstart + (i + 1.0)*laserend)/iterations1;\n        if ((uv.y - value)*(uv.y - posy) <= 0.0 && abs(uv.x - posx) < thickness2*thicknessmodifier.x)\n            fragColor = ((uv.y - posy)*laser2 + (value - uv.y)*laser1)/(value - posy);\n        posy = posx;\n    }\n}","name":"","description":"","type":"image"}]}