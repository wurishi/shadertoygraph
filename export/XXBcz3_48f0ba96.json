{"ver":"0.1","info":{"id":"XXBcz3","date":"1727473784","viewed":35,"name":"Octagon w square slip","username":"Elsio","description":"é octágono ou octógono?","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["animate","geometri","slip","octogono","octagono","cabri","geogebra"],"hasliked":0,"parentid":"4XSyR3","parentname":"Animate poligon"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.)\n#define TAU 2. * PI\n\n// next: Dodecagon w hexagon slip\n// https://www.shadertoy.com/view/4XlBDn\n\nvec2 move(float poly, float ra, float d, float t) {\n    float s = TAU / poly; \n    float T = t * poly;\n    vec2 side = floor(T) * s + vec2(0, 11) + d;\n    \n    return mix(\n               cos(side), \n               cos(side + s), \n               fract(T)\n           ) * ra;\n}\n\nfloat Poly(vec2 p, float k, float ra, float T, bool fill) {\n    float d;\n    d = atan(p.y, p.x) - T;\n    d = mod(d, TAU / k) - PI / k;\n    d = cos(d) * length(p) - ra;\n    \n    return fill? d : abs(d);\n}\n\nvoid mainImage(out vec4 o, vec2 U){\n    vec2 r = iResolution.xy,\n         u = 1. * (U - r / 2.) / r.y;\n            \n    float k = 4., ds,\n          t = fract(iTime * .08) * k;\n    \n    float\n    t1 = (floor(t) + smoothstep(.0, .2, fract(t))) / k + 2. / k,\n    t2 = (floor(t) + smoothstep(.2, 1., fract(t))) / k;\n    \n    vec4 R = vec4(.26, .18, .45, .49);\n    \n    vec2 q1 = move(k, R.x, ds, t1);\n    vec2 q2 = move(k, R.x, ds + PI / k, t2);\n\n    o *= .0;\n    \n    o += max(o, smoothstep(4. / r.y, .0, length(u) - R.w)) * .125; // bg\n    \n    o.rg += max(o.g, smoothstep(4. / r.y, .0, \n            Poly(u - q1, k, R.y, ds + PI / k, true)));\n    o.gb += max(o.b, smoothstep(4. / r.y, .0, \n            Poly(u - q2, k, R.y, ds, true)));\n\n    //if(false)\n        o.r += \n              smoothstep(\n                4. / r.y, .0, \n                Poly(u, k * 2., R.z, ds + PI / (2. * k), false)\n              );\n}\n\n/*\n\n#define rot(a) mat2(cos(a + vec4(0, 1.5, .5, 0) * pi))\n#define pi acos(-1.)\n#define TAU (2.* pi)\n#define t iTime * .4\n\nfloat poly(vec2 p, float k, float ra, float T, bool fill) {\n    float d = \n               cos(\n                   mod(\n                       atan(p.y, p.x) - T, \n                       TAU / k\n                   ) - pi / k\n               ) * length(p) - ra;\n               \n    return fill ? d :abs(d);\n}\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy;\n    u = (u - r / 2.) / r.y;\n    \n    float d1, d2, d3, \n          lado = .44 * tan(pi / 8.), mv = lado - .45,\n          T = floor(t) + smoothstep(0., .4, fract(t)),\n          T2 = floor(t) + smoothstep(.4, .8, fract(t)),\n    \n          fase = mod(T, 4.),\n          fase2 = mod(T2 + 2., 4.),\n          r1 = 2.;\n    \n    vec2 offs1, offs2;\n    \n    if(fase < 1.) {\n        offs1 = mix(vec2(0, -mv), vec2(mv, 0), fase);\n    }\n    \n    else if(fase < 2.) {\n        offs1 = mix(vec2(mv, 0), vec2(0, mv), fase - 1.);\n    }\n    \n    else  if(fase < 3.) {\n        offs1 = mix(vec2(0, mv), vec2(-mv, 0), fase - 2.);\n    }\n    \n    else {\n        offs1 = mix(vec2(-mv, 0), vec2(0, -mv), fase - 3.);\n    }\n    \n\n\n\n    \n    if(fase2 < 1.) {\n        offs2 = mix(vec2(0, -mv), vec2(mv, 0), fase2);\n    }\n    else \n    if(fase2 < 2.) {\n        offs2 = mix(vec2(mv, 0), vec2(0, mv), fase2 - 1.);\n    }\n    else \n    if(fase2 < 3.) {\n        offs2 = mix(vec2(0, mv), vec2(-mv, 0), fase2 - 2.);\n    }\n    else {\n        offs2 = mix(vec2(-mv, 0), vec2(0, -mv), fase2 - 3.);\n    }\n    \n    offs2 = rot(pi / 4.) * offs2;\n    \n    \n    d1 = poly(u, 8., .45, pi / 8., false);\n    d2 = poly(u + offs1, 4., lado, pi / 4., true);\n    d3 = poly(u + offs2, 4., lado, pi / 2., true);\n    \n    o = smoothstep(3. / r.y, .0, length(u) - .5) * vec4(.75);\n    o = mix(o, vec4(1, 0, 0, 0), smoothstep(3. / r.y, .0, d1));\n    o = mix(o, vec4(0, 1, 0, 0), smoothstep(3. / r.y, .0, d2));\n    o = mix(o, vec4(0, 0, 1, 0), smoothstep(3. / r.y, .0, d3));\n}\n\n*/","name":"Image","description":"","type":"image"}]}