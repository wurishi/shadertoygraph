{"ver":"0.1","info":{"id":"XtdfDX","date":"1541371279","viewed":164,"name":"tsunami grid","username":"meteotrix","description":"it has to look like a metal demonlord tsunami, so basically it needs art assets insted of tiling :D","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["splines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct bezier_segment\n{\n    vec2[4] p;\n};\n\nvec2 bezier(vec2[4] p, float t)\n{    \n    return pow(1.0-t,3.0)*p[0] + 3.0*pow(1.0-t,2.0)*t*p[1] + 3.0*(1.0-t)*t*t*p[2] + pow(t,3.0)*p[3];\n}\n\n//t can go beyond 1\nvec2 multibezier(bezier_segment[2] curves, float t)\n{\n    return bezier(curves[int(floor(t))].p, t-floor(t));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    vec2[4] p; //spline Points\n    p[0] = vec2(0.0,  0.5);\n    p[1] = vec2(0.1, 0.5);\n    p[2] = vec2(0.7+sin(iTime*2.0)*0.5, 1.5+sin(iTime*1.5)*0.2);\n    p[3] = vec2(1.0,  0.1);\n    \n    vec2[4] q; //second spline Points\n    q[0] = vec2(1.0,  0.1);\n    q[1] = vec2(1.125, 0.0);\n    q[2] = vec2(1.875, 0.1);\n    q[3] = vec2(2.0,  0.1);\n    \n    float t = uv.x *2.0;\n    //float t = mod(iTime*4.0,2.0);\n    \n    bezier_segment[2] curves;\n    curves[0].p = p;\n    curves[1].p = q;\n    \n    int goblack = 0;\n    \n    \n    \n    //if(uv.y < bezier(p,t).y) fragColor = vec4(0.0);\n    //if(uv.y < multibezier(curves,t).y) fragColor = vec4(0.0);\n    \n    //for(float u = 0.0;u<2.0;u+= 0.01) if(length(uv.xy-multibezier(curves,u))< 0.005) fragColor = vec4(1.0);\n    \n    uv *= 1.25;\n    uv.x += 0.75;\n    uv.y *= 0.85;\n    \n    //float prev_uvx = uv.x;\n    uv.x -= multibezier(curves,uv.y).x*0.5;\n    uv.y -= multibezier(curves,uv.x).y;\n    \n    \n    if(uv.y > 0.0 || uv.x <0.0) goblack = 1; \n    \n    //tiled pattern :D\n    fragColor = vec4(mod(floor(mod((iTime*8.0/**6.0+2.0*(sin(iTime))*/)+uv.x*10.0,2.0))+floor(+mod(uv.y*10.0,2.0)),2.0));\n    \n    \n    if(goblack==1) fragColor = vec4(0.5);\n    \n}","name":"Image","description":"","type":"image"}]}