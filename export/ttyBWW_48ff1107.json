{"ver":"0.1","info":{"id":"ttyBWW","date":"1614436254","viewed":47,"name":"Screen Eaters","username":"lmno","description":"THEY ATE THE SCREEN","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["worms","black","eating"],"hasliked":0,"parentid":"WtGfDD","parentname":"Spraypaint Worms"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PARTICLES 100\n#define PARTICLE_RADIUS 0.1\n\n#define getParticlePos(id) texelFetch(iChannel0, ivec2(id, 0), 0).xy\n#define getParticleVel(id) texelFetch(iChannel0, ivec2(id, 1), 0).xy\n\n#define getColor(id) 1.5 + 2.5 * vec3(sin(id), cos(id), sin(cos(id)) * cos(sin(id)))\n\n// Hash from \"Hash without Sine\" by Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nvec2 Hash12(in float x) {\n\tvec3 p3 = fract(x * vec3(1.1031, 1.103, 1.0973));\n\tp3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.xx + p3.yz) * p3.zy);\n\n}\n\n// Hash from \"Hash without Sine\" by Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nfloat Hash11(in float x) {\n    x = fract(x * 0.1031);\n    x *= x + 33.33;\n    x *= x + x;\n    return fract(x);\n}\n\nfloat snoise(in float x) {\n    return mix(Hash11(floor(x)), Hash11(ceil(x)), smoothstep(0.0, 1.0, fract(x)));\n}\n\nfloat fbm(in float x, in float scale, in int octaves) {\n    x *= scale;\n\n    float value = 0.0;\n    float nscale = 1.0;\n    float tscale = 0.0;\n\n    for (int o=0; o < octaves; o++) {\n        value += snoise(x) * nscale;\n        tscale += nscale;\n        nscale *= 0.5;\n        x *= 2.0;\n    }\n\n    return value / tscale;\n}\n\nvec2 randomPos(in float x) {\n    x += iDate.w;\n    return Hash12(x) - 0.5;\n}\n\nvec2 randomVel(in float x) {\n    x += iDate.w;\n    return Hash12(x * 847.586 + 285.364) * 0.01 - 0.005;\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 Rotate(in float r) {\n    float c = cos(r), s = sin(r);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 corner = vec2(0.5 * (iResolution.x / iResolution.y), 0.5);\n    fragColor = vec4(1.1, 1.0, 0.0, 0.0);\n    ivec2 iFragCoord = ivec2(fragCoord);\n    if (iFragCoord.x < PARTICLES && iFragCoord.y < 2) {\n        if (iFrame == 0) {\n            if (iFragCoord.y == 0) fragColor.xy = randomPos(fragCoord.x);\n            if (iFragCoord.y == 1) fragColor.xy = randomVel(fragCoord.x);\n        }\n\n        if (iFrame > 0) {\n            vec2 pos = getParticlePos(iFragCoord.x);\n            vec2 vel = getParticleVel(iFragCoord.x);\n\n            vel *= Rotate(fbm(iTime + fragCoord.x * 487.385 + 247.374, 1.0, 5) * 0.4 - 0.2);\n            pos += vel;\n\n            if (iFragCoord.y == 0) fragColor.xy = pos;\n            if (iFragCoord.y == 1) fragColor.xy = vel;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    if (iFrame == 0) fragColor = vec4(getColor(1.0), 1.0);\n    if (iFrame > 0) {\n        vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n        fragColor = texture(iChannel1, fragCoord / iResolution.xy);\n        float unit = 2.0 / iResolution.y;\n        for (int p=0; p < PARTICLES; p++) {\n            float id = float(p);\n            vec2 particlePos = getParticlePos(p);\n            float dist = length(uv - particlePos) - PARTICLE_RADIUS;\n            fragColor.rgb = mix(fragColor.rgb, getColor(id), exp(-100.0 * dist));\n        }\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}