{"ver":"0.1","info":{"id":"NsjcWR","date":"1643353110","viewed":299,"name":"Voronoi/Pixel Editor","username":"Farbs","description":"Click to draw!\n\nPen has three levels of red, green, and blue.\nQWE - Brighten pen channel\nASD - Darken pen channel\n\nF - Toggle pixel view\n\nWhat's going on:\nThis is a pixel editor, except the pixels are Voronoi cells and they move toward similar neighbours","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["pixelart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int KEY_F = 70;\n\nfloat strength(vec4[25] samples, int dx, int dy, int i, vec2 point)\n{\n    vec2 offset = vec2(ivec2(dx, dy))+point;\n    \n    // offset by similarity to neighbours\n    /*for( int nx=-1; nx<=1; ++nx )\n    {\n        for( int ny=-1; ny<=1; ++ny )\n        {\n            float similarity = length(samples[i].rgb-samples[i+nx+ny*5].rgb);\n            offset -= vec2(nx, ny) * similarity * length( vec2( nx, ny ) ) * 0.125;\n        }\n    }*/\n    vec2 glom = vec2(0.0);\n    if( samples[i]==samples[i-1] )\n    {\n        glom.x-=1.0;\n    }\n    if( samples[i]==samples[i+1] )\n    {\n        glom.x+=1.0;\n    }\n    if( samples[i]==samples[i-5] )\n    {\n        glom.y-=1.0;\n    }\n    if( samples[i]==samples[i+5] )\n    {\n        glom.y+=1.0;\n    }\n    offset += glom * GLOM_SCALE;\n       \n    \n    //return 1.0-length(offset)+length(samples[i].rgb)*0.5;\n    //return 10.0-length(offset)*(2.0-length(samples[i].rgb));\n    return 10.0-length(offset);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // texel coordinates\n    vec2 uv = fragCoord*vec2(ROW_COUNT,ROW_COUNT)/iResolution.y;\n\n    // Voronoi output\n    // first sample a 5x5 area (eep)\n    vec4[25] samples;\n    ivec2 root = ivec2(floor(uv));\n    for(int i=0; i<25; ++i)\n    {\n        samples[i] = texelFetch( iChannel1, root + ivec2((i%5)-2,i/5-2), 0 );\n    }\n    \n    // Now return highest strength value from the nearest 3x3\n    // (outer were sampled for determining point location by colour)\n    float best = 0.0;\n    fragColor = vec4(0);\n    vec2 point = 1.0-fract(uv)-vec2(0.5);\n    for(int y=-1; y<=1; ++y)\n    {\n        for(int x=-1; x<=1; ++x)\n        {\n            int i = x + 2 + ( y + 2 ) * 5;\n            float testStrength = strength(samples, x, y, i, point);\n            if( testStrength > best )\n            {\n                fragColor = samples[i];\n                best = testStrength;\n            }\n        }\n    }\n    \n    // toggle just showing the grid\n    if( texelFetch( iChannel2, ivec2(KEY_F,2), 0 ).x > 0.0 )\n    {\n        fragColor=samples[12];\n    }\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// pen colour\n\n// brighten\nconst int KEY_Q = 81;\nconst int KEY_W = 87;\nconst int KEY_E = 69;\n\n// darken\nconst int KEY_A = 65;\nconst int KEY_S = 83;\nconst int KEY_D = 68;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 colour=texelFetch( iChannel0, ivec2(0,0), 0).rgb;\n\n    colour.r = clamp( colour.r + ( texelFetch( iChannel1, ivec2(KEY_Q,1), 0 ).x - texelFetch( iChannel1, ivec2(KEY_A,1), 0 ).x ) * -0.5, 0.0, 1.0);\n    colour.g = clamp( colour.g + ( texelFetch( iChannel1, ivec2(KEY_W,1), 0 ).x - texelFetch( iChannel1, ivec2(KEY_S,1), 0 ).x ) * -0.5, 0.0, 1.0);\n    colour.b = clamp( colour.b + ( texelFetch( iChannel1, ivec2(KEY_E,1), 0 ).x - texelFetch( iChannel1, ivec2(KEY_D,1), 0 ).x ) * -0.5, 0.0, 1.0);\n\n    fragColor = vec4(colour,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord;\n    vec4 m = iMouse * vec4(ROW_COUNT,ROW_COUNT,ROW_COUNT,ROW_COUNT)/iResolution.y;\n    \n    if( m.z>0.0 && floor(uv.x) == floor(abs(m.x)) && floor(uv.y) == floor(abs(m.y)) )\n    {\n        fragColor = 1.0 - texelFetch( iChannel0, ivec2(floor(fragCoord)), 0);    // invert so it starts out white\n    }\n    else\n    {\n        fragColor = texelFetch( iChannel1, ivec2(floor(fragCoord)), 0);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const int ROW_COUNT=16;\nconst float GLOM_SCALE = 0.3333333333333333333333333333333333333;\n\n\nvec4 someFunction( vec4 a, float b )\n{\n    return a+b;\n}","name":"Common","description":"","type":"common"}]}