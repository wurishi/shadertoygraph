{"ver":"0.1","info":{"id":"DsGczc","date":"1696406193","viewed":100,"name":" 宇宙不動産","username":"chenxianming","description":"detect the planet adapted for human live.","likes":4,"published":1,"flags":40,"usePreview":0,"tags":["sky","signal","alientationsdetected"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat sp( vec3 p ){\n    \n    float c = 5.;\n    \n    for( float i = 0.; i < c; i++ ){\n        p.xz = abs( p.xz );\n        p.xy *= rot( i / c );\n        p.x = abs( p.x );\n        p.xz *= rot( i /c );\n    }\n\n    return max(\n        max( abs( p.x ) - .4, abs( p.y ) - .4 ),\n        abs( p.z ) - .002\n    );\n}\n\nfloat st( vec3 p ){\n    p.xz *= rot( iTime * .25 );\n    p.y -= .2;\n    p.y += cos( iTime ) * .1;\n    \n    return min(\n        sp( p ),\n        length( p + vec3( 0., -.2, 0. ) ) - .1\n    );\n}\n\nfloat sc( vec3 p, int m ){\n    p.y += .1;\n    p.yz *= rot( PI * -.05 );\n    p /= m == 0 ? 1. : cos( iTime ) * 2. - 2.;\n    return max(\n        abs( p.y + .2 ) - 0.5,\n        length( p.xz ) - 3.\n    );\n}\n\nfloat ter( vec3 p, int m ){\n    vec3 p2 = p;\n    p.y += 2.3;\n    p.xz *= .7;\n    p += texture( iChannel0, p * .5 ).rgb * .05;\n    \n    return v(\n            max(\n            length( p ) - 2.,\n            sc( p2, m == 0 ? 0 : 1 )\n        ) );\n}\n\nfloat df( vec3 p ){\n    return min(\n        min(\n            st( p ),\n            ter( p, 1 )\n        ),\n        ter( p, 0 )\n    );\n}\n\nfloat gsp( vec3 p ){\n    vec3 p2 = p;\n    p += te( iChannel0, p ).rgb * .01;\n    \n    return length( p ) - 1.;\n}\n\nfloat gry( vec3 p ){\n    p.y -= .1;\n    p.y = -p.y;\n    p.xz *= rot( PI * ( .3 + fract( iTime * .2 ) * .3 ) );\n    \n    p.x = abs( p.x );\n    p = normalize( p );\n    p = mod( p, .5 ) - .25;\n    \n    \n    float py = p.y / 2. + .3;\n    \n    return max(\n        length( p.xz ) - .3 * py,\n        abs( p.y ) - .2\n    );\n}\n\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nfloat g( vec3 a, vec3 p ){\n    return v( dot( a, l(p) ) );\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = (V * 2.0 - I.xy) / I.y;\n    vec2 u2 = V / I.xy;\n    \n    u += te( iChannel1, u ).r * .005;\n    \n    vec3 c = te( iChannel2, u2 ).rrr * .1, nm = vec3( .5555 ), p, p2, p3, o = vec3( 0., 0., -10. ), r = vec3( u * .1, 1. );\n    float t, t2, t3, d, d2, d3, af, i, dp, dp2, e = sqrt( 1e-4 );\n    \n    for( ; i < 64.; i++ )\n        p = o + r * t,\n        p2 = o + r * t2,\n        p3 = o + r * t3,\n        d = df( p ),\n        d2 = gsp( p2 ),\n        d3 = gry( p3 ),\n        dp = ( 1. - abs( d2 ) / e ),\n        dp2 = ( 1. - abs( d3 ) / e ),\n        t += d,\n        c += ( dp > 0. ) ? .1 * dp / t2 : 0.,\n        af += ( dp2 > 0. ) ? .2 * dp2 / t3 : 0., // if not be tiny: plus transp & equal entity\n        t2 += max( abs( d2 ), e * .5 ),\n        t3 += max( ( d3 ), e * .9 );\n        \n    if( d < 1e-3 )\n        c = df( p ) == st( p ) ? vec3( g( -nm, p ) + g( nm, p ) ) * .6 : (\n            df( p ) == ter( p, 1 ) ? vec3( smoothstep( .0, g( -nm, p ), .1 ) * .1 * t ) : vec3( g( nm, p ) * .15 )\n        );\n    \n    c += vec3( sp( p ) * af ) * .2 / t3;\n\n    c = mix(\n        c,\n        vec3( .9 ),\n        v( te( iChannel3, abs( u2 ) ).rgb * .3 )\n    );\n    \n    // c = v( te( iChannel3, u2 ).rgb );\n    \n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/*\n    music box ef for GPU sound\n    melody author unknow\n*/\n\n#define DO3 131\n#define RE3 147\n#define MI3 165\n#define FA3 175\n#define SO3 196\n#define LA3 220\n#define SI3 233\n\n#define DO4 262\n#define RE4 294\n#define MI4 312\n#define FA4 330\n#define SO4 392\n#define LA4 440\n#define SI4 494\n\n#define DO5 523\n#define RE5 587\n#define MI5 659\n#define FA5 698\n#define SO5 783\n#define LA5 880\n#define SI5 988\n\n\n#define DO6 1046\n#define RE6 1175\n#define MI6 1319\n#define FA6 1397\n#define SO6 1568\n#define LA6 1760\n#define SI6 1976\n\n\n#define addSound( timeline, pos, f, t ) timeline += ( t > pos ) ? sin(6.2831*float(f)*t)*exp(-3.0*(t - pos)) : 0.\n\n\nvec2 mainSound( int samp, float time )\n{\n\n    float s = 0.;\n    \n    float t = fract( time * cos( time ) * sin( time ) * .1 ) * 15.;\n    \n    addSound( s, 1., MI5, t );\n    addSound( s, 2., MI3, t );\n    addSound( s, 2.5, MI5, t );\n    addSound( s, 3., DO3, t );\n    addSound( s, 4., MI6, t );\n    addSound( s, 5., RE6, t );\n    addSound( s, 6., SI4, t );\n    addSound( s, 7., MI5, t );\n    \n    \n    addSound( s, 1., MI3, t );\n    addSound( s, 3., SO3, t );\n    addSound( s, 3., SI3, t );\n    addSound( s, 5., MI3, t );\n    addSound( s, 6., SO3, t );\n    addSound( s, 7., SI3, t );\n    \n    \n    addSound( s, 9., MI4, t );\n    addSound( s, 10., MI5, t );\n    addSound( s, 10.5, MI5, t );\n    addSound( s, 11., MI3, t );\n    addSound( s, 12., MI6, t );\n    addSound( s, 13., RE4, t );\n    addSound( s, 14., SI5, t );\n    addSound( s, 15., MI5, t );\n    \n    \n    addSound( s, 9., MI3, t );\n    addSound( s, 11., SO3, t );\n    addSound( s, 11., SI3, t );\n    addSound( s, 13., MI3, t );\n    addSound( s, 14., SO3, t );\n    addSound( s, 15., SI3, t );\n    \n    addSound( s, 16., SI3, t );\n    \n    \n    \n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( s );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// bg\n#define X .3\n#define Y .5\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = (V * 2.0 - I.xy) / I.y;\n    u *= rot( PI * -.1 );\n    u *= rot( cos( iTime * .5 ) * .05 );\n    \n    u.y += fract( iTime * .05 );\n    \n    vec2 h = vec2( X, Y ) * .5;\n    \n    vec2 c = floor(( u +  vec2( X, Y ) * .5 ) / vec2( X, Y ));\n    u.y -= mod( c.x, fract(123.123 + c.y ) * 5. ) * fract(123.123 + c.x ) * 20.;\n    u = mod(u + vec2( X, Y ) * .5, vec2( X, Y ) ) - vec2( X, Y ) * .5;\n\n    // Time varying pixel color\n    vec3 col = vec3( step( length( u ) - .015 * fract( 123.456 * c.x ), 0. ) );\n\n    // Output to screen\n    col += te( iChannel0, V / I.xy ).rgb * fract( 4321.456 * c.x * c.y ) * 1.03;\n    U = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define I iResolution\n#define PI 3.14159\n#define rot( a ) mat2( cos( a ), sin( a ), -sin( a ), cos( a ) )\n#define v( a ) clamp(a , 0., 1. )\n#define te( a, b ) texture( a, b )","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// af\n\n// === icon message: \"sound in\". link: https://www.shadertoy.com/view/MtyXRW\n\n// --- access to the image of ascii code c\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.))\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureLod( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), \\\n//                                                                               log2(length(fwidth(U/16.*iResolution.xy))) )\n/*\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel0, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(65);\n    C(103);\n    C(101);\n    C(32);\n    C(50);\n    C(49);\n    C(55);\n    C(55);\n    return (length(T.yz)==0. ? -1. : T.x ); // or: endMsg;\n}\n\nfloat message2(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(84);C(101);C(112);C(32);C(52);C(56);C(176);\n    return (length(T.yz)==0. ? -1. : T.x ); // or: endMsg;\n}\n\nfloat message3(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(67);\n    C(111);\n    C(110);\n    C(115);\n    C(32);\n    C(67);\n    C(47);\n    C(67);\n    C(97);\n    \n    return (length(T.yz)==0. ? -1. : T.x ); // or: endMsg;\n}\n*/\n\nvoid mainImage( out vec4 O, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = (V * 2.0 - I.xy) / I.y;\n    // vec2 u2 = (V * 2.0 - I.xy) / I.y;\n    \n    u.x += cos( iTime * .1 ) * 1.5;\n    u.y += cos( iTime * .3 ) * .6 + sin( iTime ) * .3;\n    u *= rot( cos( iTime ) * 2. ) * 2.;\n    \n    float p = max(\n        abs( u.x ) - .25 + cos( iTime ) * .05,\n        abs( u.y ) - .005\n    );\n    \n    p = step( p, 0. );\n    \n    p *= (.3 + cos( iTime ) * .3 ) - abs( u.x );\n    \n    vec3 c = vec3( p );\n    \n    c += te( iChannel1, V / I.xy ).rgb * .96;\n    /*\n    c = mix(\n        c,\n        vec3( .8 ),\n        vec3(\n        message((V/I.y-vec2(.0,.3))*8. ))\n    );\n    \n    c = mix(\n        c,\n        vec3( .8 ),\n        vec3(\n        message2((V/I.y-vec2(.0,.16))*8. ))\n    );\n    \n    c = mix(\n        c,\n        vec3( .8 ),\n        vec3(\n        message3((V/I.y-vec2(.0,.02))*8. ))\n    );\n    */\n    O = vec4( c, 1. );\n}","name":"Buffer B","description":"","type":"buffer"}]}