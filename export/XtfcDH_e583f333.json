{"ver":"0.1","info":{"id":"XtfcDH","date":"1504543832","viewed":315,"name":"Octagon","username":"PrzemyslawZaworski","description":" ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","tutorial","beginner","lines","education","geometry","octagon","vertices"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line( vec2 p, vec2 a, vec2 b )\n{\n\tvec2 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    vec2  d = pa - ba*h;\n\treturn dot(d,d);\n}\n\nfloat circle( vec2 p,vec2 a )\n{\n\treturn dot(p-a,p-a);\n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n    float t = 0.01; //thickness\n\tvec2 p = (2.0*fragCoord-iResolution.xy) / iResolution.y; //start from center of screen\n    const int n=8;  //number of vertices\n    vec2 vertices[n]; //array of coordinates\n\tvertices[0]=vec2(0.24,0.60); \n\tvertices[1]=vec2(0.60,0.24);\n\tvertices[2]=vec2(0.60,-0.24);\n\tvertices[3]=vec2(0.24,-0.60);\n    vertices[4]=vec2(-0.24,-0.60);\n\tvertices[5]=vec2(-0.60,-0.24);\n\tvertices[6]=vec2(-0.60,0.24);\n\tvertices[7]=vec2(-0.24,0.60);\n\tvec2 d = vec2(1.0); \n\tfor( int i=0; i<n-1; i++ ) \n\t{\n\t\tvec2 a = vertices[i+0];\n\t\tvec2 b = vertices[i+1];\n\t\td = min( d, vec2(line( p,a,b ), circle(p,a) ) );\n\t}\n\td = sqrt( min( d, vec2(line( p,vertices[7],vertices[0]),circle(p,vertices[7])))); //make octagon\n    vec3 color = vec3(0.8); //make background color\n\tcolor = mix( color, vec3(0.0,0.0,0.0), 1.0-smoothstep(0.0,t,d.x) );  //add line color\n\tcolor = mix( color, vec3(0.0,0.0,1.0), 1.0-smoothstep(3.0*t,4.0*t,d.y) );  //add circle color\n\tfragColor = vec4(color,1.0); //final image\n}","name":"Image","description":"","type":"image"}]}