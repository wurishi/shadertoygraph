{"ver":"0.1","info":{"id":"mt3XWH","date":"1685332195","viewed":64,"name":"tunnel-2","username":"yunyunzhuzhu","description":"tunnelï¼Œgenerate high quality kaleidoscope tunnel GLSL shader code which can run in ShaderToy that can automatically transit, tunnel's size, rotation, time, purple,white and blue outline and different shape color, intensity from center to outer","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Parameters\n    float time = iTime;\n    float tunnelSize = 0.2 + 0.2 * sin(time / 5.0);\n    float tunnelRotation = time / 10.0;\n    float tunnelSpeed = 0.5;\n    float tunnelSmoothness = 1.0;\n    vec3 mainColor = vec3(1.0, 0.7, 0.1);\n    vec3 outlineColor1 = vec3(0.8, 0.2, 0.8);\n    vec3 outlineColor2 = vec3(0.1, 0.7, 1.0);\n    float outlineIntensity = 0.1 + 0.1 * sin(time / 3.0);\n    float kaleidoscopeSides = 6.0;\n    vec3 kaleidoscopeColor1 = vec3(0.9, 0.8, 0.3);\n    vec3 kaleidoscopeColor2 = vec3(1.0, 1.0, 0.7);\n    float kaleidoscopeIntensity = 0.2 + 0.2 * sin(time / 2.0);\n\n    // Normalized coordinates\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    p.y *= iResolution.y / iResolution.x;\n\n    // Distance to center\n    float r = length(p);\n\n    // Angle around center\n    float a = atan(p.y, p.x) + tunnelRotation;\n\n    // Tunnel effect\n    float d = abs(sin(r * kaleidoscopeSides + a * tunnelSpeed));\n    d = pow(d, tunnelSmoothness);\n    vec3 tunnelColor = mix(mainColor, vec3(0.0), d);\n    \n    // Outline effect\n    float o1 = 0.05 + 0.01 * sin(r * 10.0 + a * 8.0 + time);\n    float o2 = 0.05 + 0.01 * sin(r * 10.0 - a * 8.0 + time);\n    float o = smoothstep(1.0 - outlineIntensity, 1.0, o1 * o2);\n    vec3 outlineColor = mix(outlineColor1, outlineColor2, sin(r * 10.0));\n    vec3 outline = mix(vec3(0.0), outlineColor, o);\n\n    // Kaleidoscope effect\n    vec2 k = vec2(cos(a * kaleidoscopeSides), sin(a * kaleidoscopeSides));\n    vec2 t = vec2(2.0 * max(abs(k.x), abs(k.y)), 2.0 * min(abs(k.x), abs(k.y)));\n    t = 2.0 * fract(0.5 * t + 0.5);\n    vec3 kaleidoscopeColor = mix(kaleidoscopeColor1, kaleidoscopeColor2, t.x);\n    float i = kaleidoscopeIntensity * pow(1.0 - t.y, 2.0);\n    vec3 kaleidoscope = mix(vec3(0.0), kaleidoscopeColor, i);\n\n    // Combine effects\n    fragColor.rgb = tunnelColor + outline + kaleidoscope;\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}