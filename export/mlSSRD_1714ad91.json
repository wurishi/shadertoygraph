{"ver":"0.1","info":{"id":"mlSSRD","date":"1675733364","viewed":81,"name":"Color blending example","username":"ChunderFPV","description":"Tool for blending rgb.  Use H function with 3 radians (positions on the color wheel) and a value(a).  If the value is a range like x the blend will repeat between integers.  Or use H2 for hue to rgb.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","color","rgb","hue","blend","pallete"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define H(p,a) (cos(p-((a)*6.2832))*.5+.5) // hue\n#define H2(a) (cos(radians(vec3(0, 120, 240))-((a)*6.2832))*.5+.5) // hue to rgb\n#define L(v) smoothstep(4.*min(fwidth(v), 1.), vec3(0.), abs(v)) // line\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    vec3  p, c;\n    vec2  R = iResolution.xy,\n          u = XY/R,\n          u2 = (XY-.5*R)/R.y*2.;\n    float t = iTime/3.,\n          a = atan(u2.x, u2.y),  // arc\n          r = length(u2),        // radius\n          T = 6.2832,            // pi*2\n          tr = (iMouse.z > 0.) ? // transform ratio\n               iMouse.x/R.x*2.-.5:\n               cos(t)+.5;\n    \n    tr = smoothstep(0., 1., tr);        // smooth clamp\n    u = u*(1.-tr) + vec2(a/T*tr, r*tr); // polar transition\n    p = radians(vec3(0, 120, 240));     // positions in degrees\n    p += sin(t*vec3(.3, -.7, 1))*T/2.;  // move with time\n    c = H(p, u.x);                      // pallete to range\n    //c = H2(.5);                       // hue[0 to 1] to rgb\n    c += L(u.y-(cos(u.x*T-p)*.5+.5));   // waves\n    c *= min(abs(u.y), 1./abs(u.y));    // darken\n    \n    RGBA = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}