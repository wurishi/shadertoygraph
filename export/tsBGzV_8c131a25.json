{"ver":"0.1","info":{"id":"tsBGzV","date":"1549352165","viewed":417,"name":"Mini Mandelbox flythrough","username":"xem","description":"A \"scale 2.8\" Mandelbox fractal raymarched in WebGL seen along the axis [x: -0.44, y: 0.11] Formula by Tom Lowe (2010) Code by BÃ¡lint Csala and Maxime Euziere (js1k 2019)","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractalraymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 r = normalize(vec3(fragCoord.xy / 500. - vec2(.5), 1.)),\n         p = vec3(-.44, .11,-15. + iTime);\n    for(float i = .0; i < 200.; i++){\n        vec4 o = vec4(p, 1), q = o;\n        for(int i = 0;i < 20;i++){\n            o.xyz = clamp(o.xyz, -1., 1.)*2. - o.xyz;\n            o = o * clamp(max(.25 / dot(o.xyz, o.xyz), .25), 0., 1.);\n            o = o * (vec4(2.79) / .25) + q;\n        }\n        float d = (length(o.xyz) - 1.) / o.w - pow(2.79, -9.);\n        if(d < .0001){\n            break;\n        }\n        p += r * d;\n        fragColor.rgb = vec3(1. - i / 100.);\n    }\n}","name":"Image","description":"","type":"image"}]}