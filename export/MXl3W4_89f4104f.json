{"ver":"0.1","info":{"id":"MXl3W4","date":"1707491420","viewed":87,"name":"Day of the tentacle","username":"bjorkstromm","description":"My first shader. Just playing around :)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float a, float d) {\n    return 0.1+d*sin(vec3(5,1,5) + a);\n}\n\nfloat circle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nfloat square(vec2 p, float side) {\n    return length(p * sin(p)) - side;\n}\n\n\n#define ROT(a)      mat2(cos(a), sin(a), -sin(a), cos(a))\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 q = fragCoord/iResolution.xy;\n    vec2 p = -1. + 2. * q;\n    p.x *= iResolution.x/iResolution.y;\n  \n    // Color\n    float d = circle(p, 2.);   \n    vec3 col = palette(17.5 * d - iTime, 0.5);\n    \n    // Squares\n    for(int i = 0; i < 7; ++i) {\n        float itime = iTime+0.3*float(i);\n        float ff = abs(0.05 * sin(itime * 1. - float(i)));\n\n        vec2 ps = p * ROT(.5*cos(itime));\n        ps.x += sin(itime);\n        ps.y += sin(itime);\n        float s = square(ps, ff);\n\n        if (s < .0) {\n            float d = circle(p, 2.);   \n            col = palette(17.5 * d - iTime, 0.2);\n        }\n    }\n    col = sqrt(col);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}