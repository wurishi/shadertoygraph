{"ver":"0.1","info":{"id":"Ns3yD4","date":"1653428091","viewed":618,"name":"Overlay Blending","username":"andgokevin","description":"Photoshop overlay blend mode.","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["blend","overlay"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 source = texture( iChannel0, uv );\n    vec4 one = vec4(1.0);\n\n\n    float opacity = 0.5;\n    vec3 color = vec3(115./255., 145./255., 205./255.);\n    \n    vec4 blend = vec4(color, 1.);\n\n    vec4 multiply = 2.0 * source * blend;\n    vec4 screen = one - (2.0 * (one - source)) * (one - blend);\n    \n    // Multiply blend mode if source < 0.5, else screen blend mode.\n    float gray = (source.r + source.b + source.g) / 3.0;\n    float threshold = step(gray, 0.5);\n    vec4 overlay = (multiply * (1.0 - threshold)) + (screen * threshold);\n\n    if (uv.x < 0.25) {\n      fragColor = source;\n    } else if (uv.x < 0.5) {\n      fragColor = multiply;\n    } else if (uv.x < 0.75) {\n      fragColor = screen;\n    } else {\n      fragColor = mix(source, overlay, vec4(opacity));\n    }\n    \n\n    // fragColor = source;\n}","name":"Image","description":"","type":"image"}]}