{"ver":"0.1","info":{"id":"ctyXD3","date":"1686497798","viewed":58,"name":"GLSL_Test_1_Tuto_By_kishimisu","username":"NatShadLab","description":"GLSL Test 1, from the Tutorial by kishimisu:\nhttps://www.youtube.com/watch?v=f4s1h2YETNY&ab_channel=kishimisu","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test","tuto","kishimisu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n//Toon Simplify Function\nvec3 ToonSimplify( vec3 c, float steps){\n    //Toon Simplify\n    //steps = 3.;\n    \n    vec3 hsvcol = rgb2hsv(c);\n    hsvcol.x = round(hsvcol.x * steps* 2.)/(steps*2.);\n    hsvcol.y = round(hsvcol.y * steps)/steps;\n    hsvcol.z = round(hsvcol.z * steps)/steps;\n    c = hsv2rgb(hsvcol);\n    return c;\n}\n\nvec3 palette( float t, vec3 a, vec3 b, vec3 c, vec3 d){\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    float num = 8.;\n    \n    float steps = 5.;\n    float time = ToonSimplify(vec3(iTime * .125), steps).x;\n    \n    for (float i = 0.0; i < num; i++){\n    \n    \n   \n        uv = fract(uv * mix(mix(.618,2.618,sin(time)),mix(1.618,.618,cos(time)), i / num)) - 0.5;\n        uv = abs(uv);\n        uv.x = pow(fract(uv.x + time + iTime * .01618),mix(.618,3.618,sin(time* .618)));\n        uv.y = pow(fract(uv.y - time - iTime * .01618),mix(8.,.25,cos(time * 1.618)));\n\n        float len = length(uv) * exp(-length(uv0));\n\n        vec3 a = vec3(0.478,0.302,0.302);\n        vec3 b = vec3(0.3618, 0.3618, 0.3618);\n        vec3 c = vec3(0.902,0.902,0.902);\n        vec3 d = vec3(0.996,0.980,0.584);\n        \n        float sig = floor(fract(i * .5))*2.0 - 1.0;\n\n        vec3 col = palette(length(uv0) + 1.0/(i+1.0) * (time + iTime + i)/ 4.0,a,b,c,d);\n        \n        \n        col = hsv2rgb(vec3(rgb2hsv(col).x + time, rgb2hsv(col).y, rgb2hsv(col).z));\n\n        len = sin(len * 10.0 + 1.0/(i+1.0) * (iTime + i)) / 10.0;\n        len = abs(len);\n\n        len = pow(0.01/(i+1.0)/len, 1.1618);\n\n        finalColor +=  col * len;\n        finalColor = ToonSimplify(finalColor, steps);\n        //finalColor =  vec3(sig);\n     \n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}