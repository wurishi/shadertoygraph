{"ver":"0.1","info":{"id":"7tjGzV","date":"1624309684","viewed":253,"name":"satur spin contour final","username":"sanderoneil","description":"try clicking and sliding mouse on shader screen, if there is no activity in iChannel1 then your camera and the site aren't working together \ntry moving your mouse to center bottom of screen for best results","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["saturation"],"hasliked":0,"parentid":"7t23RV","parentname":"color contour edges camera"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = cos(iTime+uv.x+vec3(0,2.+uv.y*3.,4))*.5+.5;\n    \n    vec2 m = iMouse.xy/iResolution.xy;\n    float a = iTime*5.;\n    \n    vec2 r = rotate(vec2(1.,1.),a);\n    float camx = texture(iChannel1, uv).x;\n    float cam2x = texture(iChannel1, uv+(m.x/10.-.05)*r).x;\n    \n    r = rotate(vec2(1.,1.),a+3.1415/3.*2.);\n    float camy = texture(iChannel1, uv).y;\n    float cam2y = texture(iChannel1, uv+(m.x/10.-.05)*r).y;\n    \n    r = rotate(vec2(1.,1.),a+3.1415/3.*4.);\n    float camz = texture(iChannel1, uv).z;\n    float cam2z = texture(iChannel1, uv+(m.x/10.-.05)*r).z;\n    \n    float x = abs(camx - cam2x)/m.y;\n    float y = abs(camy - cam2y)/m.y;\n    float z = abs(camz - cam2z)/m.y;\n    \n    col = vec3(x,y,z)/m.y ;\n    \n    fragColor = vec4((col),0.);\n    //fragColor = vec4(hsvtoc(vec3(1.,m.y*2.,m.x)),1.0);\n    //fragColor = vec4(hsvtoc(vec3(1,0,1.8)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 hsvtoc( vec3 hsv )\n{\n    float h = hsv.x * 2. * 3.1415;\n    float s = hsv.y;\n    float v = hsv.z;\n    //vec3 hscircle = vec3(cos(h),sin(h),0)*s+vec3(0,0,1);//possibly divide s by .612 or sqr(6)/4\n    vec3 hsc = vec3(cos(h),sin(h),0);\n    vec3 c = hsc*s + vec3(0,0,tan(radians(90.-35.)));\n    \n    float a = radians(55.);\n    c = vec3(c.x,c.y*cos(a) - c.z*sin(a),c.z*cos(a) + c.y*sin(a));\n    \n    a = radians(135.);\n    c = vec3(c.x*cos(a) - c.y*sin(a),c.y*cos(a) + c.x*sin(a),c.z);\n    \n    vec3 hscircle = c ;\n    vec3 cone = (hscircle)*(1.212)*v;\n    return(cone);\n}\nvec3 ctohsv( vec3 c )\n{\n    float a = radians(55.);\n    a = radians(-135.);\n    c = vec3(c.x*cos(a) - c.y*sin(a),c.y*cos(a) + c.x*sin(a),c.z);\n    \n    a = radians(-55.);\n    c = vec3(c.x,c.y*cos(a) - c.z*sin(a),c.z*cos(a) + c.y*sin(a));\n\n    vec3 ot =  vec3(c.x,c.y,0);\n    float h = atan(c.x,c.y)*1.+1.4+2.*2.*3.1415/3.;\n    float s = length(ot);\n    float v = c.z;\n    vec3 hsv = vec3(h/(2. * 3.1415),s,v);\n    return(hsv);\n}\nvec3 satpick( vec3 col, float sar )\n{\n    //float s = col.x+col.y+col.z;\n\t//vec3 p = vec3(s/3.);\n    //vec3 fromgray = col - p;\n    //float sat = acos(dot(col,vec3(1)));\n    \n    \n    //return( p + fromgray * sar);\n    \n    //return(hsvtoc(ctohsv(col)*vec3(1,sar,1)));\n    return(hsvtoc(ctohsv(col)));\n}\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}","name":"Common","description":"","type":"common"}]}