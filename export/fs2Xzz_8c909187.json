{"ver":"0.1","info":{"id":"fs2Xzz","date":"1619592387","viewed":83,"name":"Puzzle ball pattern.","username":"ff3","description":"The rings rotate and only when they are aligned do they all turn blue.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rotate","pokeball","geometry","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TWO_PI = 6.28318530718;\n\n//palette \nconst vec4 BLACK = vec4(0.0,0.0,0.0,1.0);\nconst vec4 WHITE = vec4(1,1,1,1);\nconst vec4 BLUE = vec4(0,0,1,1);\n\nvec2 rotate(vec2 vector, float rads)\n{\n    return vector * mat2(cos(rads), -sin(rads), sin(rads),cos(rads));\n}\n\nvec4 colorStep(vec4 ColorA,vec4 ColorB,float midpt,float x, float line_width)\n{\n    float a = midpt - (line_width / 2.0);\n    float b = a + line_width;\n    \n    vec4 toLine = smoothstep(midpt,a,x) * ColorA + smoothstep(a,midpt,x) * BLACK;\n    vec4 fromLine = smoothstep(b,midpt,x) * BLACK + smoothstep(midpt,b,x) * ColorB;\n    return toLine + fromLine;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //centered, -.5 to .5\n    vec2 uv = (fragCoord - iResolution.xy / 2.0)/iResolution.xx;\n    uv *= 2.0;\n    \n    vec2 uv1 = rotate(uv, (TWO_PI/64.*round(iTime * 4.)));\n    vec2 uv2 = rotate(uv, (TWO_PI/64.*round(iTime * 2.)));\n    vec2 uv3 = rotate(uv, (TWO_PI/64.*round(iTime)));\n    vec2 uv4 = rotate(uv, (TWO_PI/64.*round(iTime / 2.)));\n    \n    \n    vec2 rb1 = rotate(BLUE.rb, (TWO_PI/64.*round(iTime*4.)));\n    vec4 col1 = vec4(rb1.x,0,rb1.y,1);\n    vec4 col_far = col1;\n    \n    vec2 rb2 = rotate(BLUE.rb, (TWO_PI/64.*round(iTime*2.)));\n    vec4 col2 = vec4(rb2.x,0,rb2.y,1);\n    col_far = distance(col_far,BLUE) < distance(col2,BLUE) ? col2 : col_far;\n    \n    vec2 rb3 = rotate(BLUE.rb, (TWO_PI/64.*round(iTime)));\n    vec4 col3 = vec4(rb3.x,0,rb3.y,1);\n    col_far = distance(col_far,BLUE) < distance(col3,BLUE) ? col3 : col_far;\n    \n    vec2 rb4 = rotate(BLUE.rb, (TWO_PI/64.*round(iTime / 2.)));\n    vec4 col4 = vec4(rb4.x,0,rb4.y,1);\n    col_far = distance(col_far,BLUE) < distance(col4,BLUE) ? col4 : col_far;\n    \n    // Output to screen\n    fragColor = col_far;\n    fragColor = colorStep(colorStep(col1, WHITE, 0., uv4.x, .01), fragColor, 0.4, length(uv4), .01);\n    fragColor = colorStep(colorStep(col2, WHITE, 0., uv3.x, .01), fragColor, 0.2, length(uv3), .01);\n    fragColor = colorStep(colorStep(col3, WHITE, 0., uv2.x, .01), fragColor, 0.1, length(uv2), .01);\n    fragColor = colorStep(colorStep(col4, WHITE, 0., uv1.x, .01), fragColor, 0.04, length(uv1), .01);\n    \n\n}\n   ","name":"Image","description":"","type":"image"}]}