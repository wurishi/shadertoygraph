{"ver":"0.1","info":{"id":"XlsfDB","date":"1513184261","viewed":170,"name":"Zoomable Mandelbrot set","username":"sebastian_venter","description":"WASD to move, Q/E to zoom","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["fractal","mandelbrot","keyboard","persistence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define min(a,b) (a) < (b) ? (a) : (b)\n#define max(a,b) (a) > (b) ? (a) : (b)\n\nvec3 mandelbrot(float re0, float im0) {\n\tfloat value = 255.0;\n    float total = 0.0;\n    \n    float re = 0.0;\n    float im = 0.0;\n    \n    for (int i=0; i<255; i++) {\n        if (!((value > 0.0) && (re*re + im*im < 36.0))) {\n    \n        } else {\n            value = value - 1.0;\n\n            float oldre = re;\n            re = re*re - im*im + re0;\n            im = 2.0*oldre*im + im0;\n        }\n    }\n    \n    if (value != 0.0) {\n        total = (value-4.0/pow(sqrt(re*re+im*im), 0.4))/255.0;\n    } else {\n        total = 0.0;\n    }\n    \n    float red = (min(255.0, max(0.0, round(total*pow(255.0, 1.0-2.0*pow(total, 45.0))))))/255.0;\n    float green = (min(255.0, max(0.0, round(70.0*total-880.0*pow(total, 18.0)+701.0*pow(total, 9.0)))))/255.0;\n    float blue = (min(255.0, max(0.0, round(80.0*total+255.0*pow(total, 9.0)-950.0*pow(total, 99.0)))))/255.0;\n    \n    return vec3(red, green, blue);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec4 data = texture(iChannel0, vec2(0, 0));\n    float centreRe = 5.0*data.x - 5.0;\n    float centreIm = 4.0*data.y - 2.0;\n    float zoom = 1.0 / data.z;\n    vec2 range = vec2(3.5 * zoom, 2.0 * zoom);\n    \n\tfloat re = ((fragCoord.x / iResolution.x) * range.x + (centreRe - 0.5*range.x));\n\tfloat im = ((fragCoord.y / iResolution.y) * range.y + (centreIm - 0.5*range.y));\n    \n    fragColor = vec4(mandelbrot(re, im), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool readKey(int value) {\n    float keyVal = texture(iChannel0, vec2((float(value)+0.5)/256.0, 0.25)).x;\n\treturn (keyVal > 0.5) ? true: false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    if (iFrame < 30) {\n        if (true) {\n            float centreRe = -0.75;\n            float centreIm = 0.0;\n            float zoom = 1.0;\n\n            fragColor = vec4((centreRe/5.0 + 1.0), (centreIm+2.0) / 4.0, 1.0/zoom, 1.0);\n        }\n    } else {\n        if (true) {\n            vec4 data = texture(iChannel1, vec2(0, 0));\n\n            float centreRe = 5.0*data.x-5.0;\n            float centreIm = 4.0*data.y - 2.0;\n            float zoom = 1.0 / data.z;\n\n            if (readKey(65)) {\n                centreRe = centreRe - 0.05*zoom;\n            }\n            \n            if (readKey(68)) {\n                centreRe = centreRe + 0.05*zoom;\n            }\n            \n            if (readKey(87)) {\n                centreIm = centreIm + 0.05*zoom;\n            }\n\n            if (readKey(83)) {\n                centreIm = centreIm - 0.05*zoom;\n            }\n            \n            if (readKey(69)) {\n                zoom = zoom - zoom*0.05;\n            }\n            if (readKey(81)) {\n                zoom = zoom + zoom*0.05;\n            }\n            \n            fragColor = vec4((centreRe/5.0 + 1.0), (centreIm+2.0) / 4.0, 1.0/zoom, 1.0);\n        }\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"}]}