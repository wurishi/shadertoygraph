{"ver":"0.1","info":{"id":"wtsGDB","date":"1557561504","viewed":89,"name":"pattern20190510","username":"edapx","description":"pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nvec2 rotate2D (vec2 _st, float _angle) {\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n    \nvec2 squareFrame(vec2 res, vec2 coord){\n    vec2 uv = 2.0 * coord.xy / res.xy - 1.0;\n    uv.x *= res.x / res.y;\n    return uv;\n}\n\nfloat plot(vec2 st, float pct, float th){\n  return  smoothstep( pct-th, pct, st.y) -\n          smoothstep( pct, pct+th, st.y);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n    _st *= 2.0;\n    float index = 0.0;\n    index += step(1., mod(_st.x,2.0));\n    index += step(1., mod(_st.y,2.0))*2.0;\n    _st = fract(_st);\n\n    if(index == 1.0){\n        _st = rotate2D(_st,PI*0.5);\n    } else if(index == 2.0){\n        _st = rotate2D(_st,PI*-0.5);\n    } else if(index == 3.0){\n        _st = rotate2D(_st,PI);\n    }\n\n    return _st;\n}\n\n// inigo gain function\nfloat gain(float x, float k) \n{\n    float a = 0.5*pow(2.0*((x<0.5)?x:1.0-x), k);\n    return (x<0.5)?a:1.0-a;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 lime = vec3(0.733, 1.0, 0.31);\n  \tvec3 red = vec3(1.0, 0.353, 0.208);\n    vec3 blu = vec3(0.086, 0.29, 0.8);\n\n    vec2 st = squareFrame(iResolution.xy,fragCoord);\n\t\n    //net\n    vec2 uv = st;\n    uv *= 2.0;\n    uv = fract(uv);\n    uv = rotateTilePattern(uv);\n    float y = gain(uv.x, 0.49 + tan(iTime*0.10)* 0.1);\n    float net = plot(uv, y, 0.07);\n    \n    //segments\n    vec2 uv2 = rotateTilePattern(st) *2.0;\n    uv2 = fract(uv2);\n    uv2 += vec2(sin(iTime), cos(iTime)) * 0.05;\n    float segments = plot(uv2, y, 0.09);\n    \n    //texture\n    vec3 texc = texture(iChannel0, st).xyz;\n\n    //compose\n    float l = net + segments;\n    vec3 bgColor = blu * (1.0 - l);\n    bgColor += red * net;\n    bgColor += texc * segments;\n\n    bgColor = pow(bgColor, vec3(1.1545)); // gamma corr\n\n    // Output to screen\n    fragColor = vec4(bgColor,1.0);\n}","name":"Image","description":"","type":"image"}]}