{"ver":"0.1","info":{"id":"4fc3Rl","date":"1711999106","viewed":15,"name":"Project 3: Medium","username":"mirae","description":"werk","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["school"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n\n    // Correct the aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Colors for each corner\n    vec3 colorTopLeft = vec3(0.24, 0.46, 1.0);      \n    vec3 colorTopRight = vec3(1.0, 0.64, 0.0);      \n    vec3 colorBottomLeft = vec3(0.0, 1.0, 1.0);     \n    vec3 colorBottomRight = vec3(1.0, 1.0, 0.0);    \n\n    // Color based on the position of the current pixel\n    vec3 gradientColor = mix(\n        mix(colorBottomLeft, colorBottomRight, uv.x * 0.5 + 0.5),  \n        mix(colorTopLeft, colorTopRight, uv.x * 0.5 + 0.5),        \n        uv.y * 0.5 + 0.5                                          \n    );\n\n    float time = iTime / 0.5;\n\n    float spacing = 0.9; \n    float radius = length(uv * 10.0) * spacing; \n    float rings = sin(time + radius);\n\n    // Thickness of rings\n    float threshold = 0.00000000009; \n\n    // Sine value into a binary value\n    float binaryRings = step(threshold, rings);\n\n    // Color of rings\n    vec3 solidColor = gradientColor;\n\n    vec4 color = vec4(solidColor * binaryRings, 1.0);\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}