{"ver":"0.1","info":{"id":"3ljcWt","date":"1595708436","viewed":86,"name":"Multicolor Spinner","username":"ChocolatePinecone","description":"A OSX-like multicolor spinner","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spinner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n\n//  Function from Iigo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5)-st;\n    float angle = atan(toCenter.y,toCenter.x) + iTime * TWO_PI;\n    float radius = length(toCenter)*2.5;\n\n    // Map the angle (-PI to PI) to the Hue (from 0 to 1)\n    // and the Saturation to the radius\n    color = hsb2rgb(vec3((angle/TWO_PI)+0.5,radius,1.0));\n\n    float dis = length(fragCoord.xy - 0.5 * iResolution.xy);\n    float shortestRes = min(iResolution.x, iResolution.y);\n    float ring = step(0.15 * shortestRes, dis) - step(0.45 * shortestRes, dis);\n    color = mix(vec3(0.0), color, ring);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}