{"ver":"0.1","info":{"id":"wtySz1","date":"1582177014","viewed":52,"name":"01 Shadertoy WebGL 2.0 bootstrap","username":"waffles","description":"This example illustrates all the shader code under the hood of shadertoy.com website\n\nAll the code here is copy-pasted from shadertoy.com website's source code. Shadertoy holds the copyrights.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["example","shadertoy","bootstrap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// All the code here is copy-pasted\n// from shadertoy.com website's source code.\n// Shadertoy holds the copyrights\n\n/*\n// Vertex Shader (WebGL 2.0 /w OpenGL ES 3.0)\n\n#version 300 es\n\n#ifdef GL_ES\nprecision highp float;\nprecision highp int;\nprecision mediump sampler3D;\n#endif\n\nlayout(location = 0) in vec2 pos;\n\nvoid main() {\n    gl_Position = vec4(pos.xy,0.0,1.0);\n}\n*/\n\n/*\n// Fragment Shader (WebGL 2.0 /w OpenGL ES 3.0)\n\n#version 300 es\n\n#ifdef GL_ES\nprecision highp float;\nprecision highp int;\nprecision mediump sampler3D;\n#endif\n\n#define HW_PERFORMANCE 1\n\nuniform vec3      iResolution;\nuniform float     iTime; \nuniform float     iChannelTime[4]; \nuniform vec4      iMouse; \nuniform vec4      iDate; \nuniform float     iSampleRate; \nuniform vec3      iChannelResolution[4]; \nuniform int       iFrame; \nuniform float     iTimeDelta; \nuniform float     iFrameRate;\n\nstruct Channel;\n{\n    vec3  resolution;\n    float time;\n};\nuniform Channel iChannel[4];\n\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\nuniform sampler2D iChannel2;\nuniform sampler2D iChannel3;\n\nvoid mainImage( out vec4 c,  in vec2 f );\n\nout vec4 outColor;\nvoid main( void ) {\n    vec4 color = vec4(0.0,0.0,0.0,1.0);\n    mainImage( color, gl_FragCoord.xy );\n    color.w = 1.0;\n    outColor = color;\n}\n*/\n\n// Here's the part of the code that you can modify:\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}