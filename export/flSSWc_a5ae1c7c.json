{"ver":"0.1","info":{"id":"flSSWc","date":"1628731104","viewed":73,"name":"万花筒","username":"tangyuan","description":"作业","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["polarcoord"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159256\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //对于圆心的向量\n    vec2 dir = uv - 0.5;\n    //0 - 0.5x\n    float len = length(dir);\n    // 相对中心的角度\n    float angle = atan(dir.y, dir.x);\n    // 增加频率\n    angle *= 4.0;\n    // 按照距离给扭曲\n    angle += len * PI * 5. + PI - iTime;\n    // 转为 n PI\n    float ang = angle / PI / 2.;\n    // 0- 1\n    ang = fract(ang);\n    \n    float s = sin(ang * PI);\n    float c = cos(ang * PI);\n    \n    //颜色-1 - 1转 0 - 1，但是依旧摆脱不了有中间色的问题，比如黄色\n    vec2 color = vec2(c, s);\n    color = color * 0.5 + 0.5;\n\n    // Output to screen\n    // 通过mix来决定颜色，可以让场景里只有红绿两个颜色\n    fragColor = vec4(mix(vec2(1.0, 0), vec2(0., 1.0), 1. - c),.0, 1);\n    //fragColor = vec4(color,.0, 1);\n}","name":"Image","description":"","type":"image"}]}