{"ver":"0.1","info":{"id":"tsjXDt","date":"1555395359","viewed":67,"name":"Basics - Mandelbrot Set","username":"trevorleake","description":"A study in shader basics.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 center = vec2(0);\nfloat scale = 3.;\nint iter = 30;\n\n\t\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 z, c;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.yy;\n    uv = (uv+vec2(1.))/2.;\n\n    c.x = (uv.x - 0.5) * scale - center.x;\n    c.y = (uv.y - 0.5) * scale - center.y;\n\n    int i;\n    z = c;\n    for(i=0; i<iter; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.y * z.x + z.x * z.y) + c.y;\n\n        if((x * x + y * y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n    }\n    \n\n    float v = (i == iter ? 0.0 : float(i)) / 50.0;\n\tvec3 col = vec3(v, 0, v);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}