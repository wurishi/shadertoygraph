{"ver":"0.1","info":{"id":"wtf3WN","date":"1556336185","viewed":346,"name":"dogslow","username":"jj99","description":"slow","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["slow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n// shader mod (slow and dirty)\n//\n\nfloat SMOKE_HEIGHT = 0.4;\nfloat SMOKE_CHOPPY = 40.0;\nfloat SMOKE_FREQ = 0.06;\nfloat SEA_TIME = 21.;\nmat2 octave_m = mat2(1.6,1.2,-1.2,1.6);\n\nfloat hash( vec2 p )\n{\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\t\n\tvec2 u = f*f*(3.0-2.0*f);\n    return -1.0+2.0*mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat sea_octave(vec2 uv, float choppy)\n{\n    uv += noise(uv);        \n    vec2 wv = 1.0-abs(sin(uv));\n    vec2 swv = abs(cos(uv));    \n    wv = mix(wv,swv,wv);\n    return pow(1.0-pow(wv.x * wv.y,0.65),choppy);\n}\n\nfloat map_detailed(vec3 p)\n{\n    float freq = SMOKE_FREQ;\n    float amp = SMOKE_HEIGHT;\n    float choppy = SMOKE_CHOPPY;\n    vec2 uv = p.xz; uv.x *= 0.75;\n    \n    float d, h = 0.0;    \n    for(int i = 0; i < 3; i++)\n    {        \n    \td = sea_octave((uv+SEA_TIME)*freq,choppy);\n    \td += sea_octave((uv-SEA_TIME)*freq,choppy);\n        h += d * amp;        \n    \tuv *= octave_m; freq *= 1.9; amp *= 0.22;\n        choppy = mix(choppy,1.0,0.2);\n    }\n    return p.y - h;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    \n    float time = iTime+0.5;\n    vec2 resolution = iResolution.xy;\n\tvec2 gg = fragCoord.xy;\n\tgg.y += sin(time);\n\t\n\t\n\tgg-= resolution*0.5;\n\t\n\tgg*=1.5+sin(time*0.42)*0.1;\n\t\n\t\n\tgg.x += time*100.0;\n\t\n\t\n\tSEA_TIME += 21.0+sin(time*0.1)*12.0;\t\n\tSMOKE_HEIGHT = (0.5+(sin(time*0.77)*0.5))+0.1;\n\t\n\t\n\tfloat noiseVal = (1.0 - gg.y / resolution.y);\n\tfloat x =gg.x / 12.-time + sin(gg.x*0.01+time*0.8);\n\tfloat y = pow(noiseVal + noise(vec2(1.0,0.0)+gg.xy/resolution) * noiseVal + sin(gg.y*.0001), 0.9);\n\tfloat z = gg.y / 10.-time + cos(gg.x*0.01+time*0.1);\n\tfragColor = vec4( vec3( map_detailed(vec3(x, y, z))), 1.0 );\n\n\tfloat rradd = sin(50.0+gg.y*0.003+time*0.4+gg.x*0.001)*2.0;\n\trradd = -abs(rradd-0.4);\n\t\n\tif (fragColor.r<0.0)\n\t\tfragColor.r *= (rradd-0.1);\n\tfragColor.g *= 1.5;\n\tfragColor.b *= 0.7;\n\t\n}\n\n","name":"Image","description":"","type":"image"}]}