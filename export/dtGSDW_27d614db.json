{"ver":"0.1","info":{"id":"dtGSDW","date":"1686090750","viewed":100,"name":"RainbowTool","username":"spocino","description":"It's a pulsating rainbow tool","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nfloat psin(in float f) {\n    return (sin(f) + 1.) / 2.;\n}\n\nvec3 h2rgb(in float h) {\n    float H = h / (1./6.);\n    float X = 1. - abs(mod(H, 2.) - 1.);\n    \n    float r = 0.;\n    float g = 0.;\n    float b = 0.;\n    \n    if (0. <= H && H < 1.) {\n        r = 1.;\n        g = X;\n    } else if (1. <= H && H < 2.) {\n        r = X;\n        g = 1.;\n    } else if (2. <= H && H < 3.) {\n        g = 1.;\n        b = X;\n    } else if (3. <= H && H < 4.) {\n        g = X;\n        b = 1.;\n    } else if (4. <= H && H < 5.) {\n        r = X;\n        b = 1.;\n    } else if (5. <= H && H <= 6.) {\n        r = 1.;\n        b = X;\n    }\n    \n    return vec3(r, g, b);   \n}\n\nfloat dot2(in vec2 v) { return dot(v, v); }\n\nfloat sdShaft(in vec2 p, in vec2 wh) {\n    p.x = abs(p.x); p.y = -p.y;\n    vec2 q = p -wh;\n    \n    float d1 = dot2(vec2(max(q.x, 0.0), q.y));\n    q.x = (p.y > 0.0) ? q.x : length(p)-wh.x;\n    float d2 = dot2(vec2(q.x,max(q.y,0.0)));\n    float d = sqrt(min(d1,d2));\n    \n    return (max(q.x,q.y)<0.0) ? -d : d;\n}\n\nfloat sdBalls( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    float d = min(\n        sdBalls(vec2(uv.y * .8, - uv.x * .8)),\n        sdShaft(vec2(uv.y, uv.x - .9), vec2(.4, 2.)));\n    \n    vec3 color = h2rgb(psin(iTime + d*PI*0.6));\n    \n    d = sin(d*8. + iTime)/8.;\n    d = abs(d);\n    \n    d = 0.05 / d;\n    \n    fragColor = vec4(d * color, 1.0);\n}","name":"Image","description":"","type":"image"}]}