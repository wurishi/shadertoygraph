{"ver":"0.1","info":{"id":"mtffzl","date":"1693330942","viewed":71,"name":"vec4 coordinate display","username":"Amita","description":"print values of a vec4 (iMouse)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","digits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CHARW 30.0\n#define CHARH 64.0\n#define H_OFF 17.0\n#define DIGITS 10\nvec2 digitCharStart(float x) {\n    return vec2(floor(x),3.0)*CHARH;\n} \n\nvec4 interpolatePixels(vec2 pixel) {\n    vec4 corners[4] = vec4[4](\n        texelFetch(iChannel0, ivec2(pixel), 0),\n        texelFetch(iChannel0, ivec2(ceil(pixel.x),pixel.y), 0),\n        texelFetch(iChannel0, ivec2(pixel.x,ceil(pixel.y)), 0),\n        texelFetch(iChannel0, ivec2(ceil(pixel)), 0)\n    );\n    vec2 x = mod(pixel,1.0);\n    return (corners[0]*(1.0-x.x) + corners[1]*x.x)*(1.0-x.y) + (corners[2]*(1.0-x.x) + corners[3]*x.x)*x.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec4 analysis = iMouse; // vec4 being displayed at the bottom of the screen\n    \n    float scale = iResolution.y/4.0/CHARH;\n    vec2 charSize = vec2(CHARW,CHARH);\n    ivec2 index = ivec2(fragCoord/scale/charSize);\n    vec2 charPix = vec2(mod(fragCoord.x/scale,charSize.x)+H_OFF,charSize.y - mod(fragCoord.y/scale,charSize.y));\n    \n    // Output to screen\n    if (index.y < 4 && index.x < DIGITS) {\n        float num = analysis[3-index.y];\n        /*switch (index.y) {\n            case 0: num = analysis.w; break;\n            case 1: num = analysis.z; break;\n            case 2: num = analysis.y; break;\n            case 3: num = analysis.x; break;\n        }*/\n        if (num < 0.0) {index -= ivec2(1,0); num *= -1.0;}\n        float powTen = 1.0; int size = 0;\n        for (; powTen <= num; powTen *= 10.0, size++) {}\n        vec2 char;\n        if (index.x == -1) {char = vec2(13,2)*CHARH;}\n        else if (size == index.x) {char = vec2(14,2)*CHARH;}\n        else {\n            if (index.x < size) {\n                for (int i = 1; i < size - index.x; i++) {\n                    num /= 10.0;\n                }\n            } else {\n                for (int i = 0; i < index.x-size; i++) {\n                    num *= 10.0;\n                }\n            }\n            char = digitCharStart( mod(num,10.0) );\n        }\n        fragColor = vec4(vec3(interpolatePixels( char + charPix ).r),1.0);\n        \n        if (index.y == 0) {\n            fragColor = fragColor*0.5 + vec4(0.5); // alpha\n        } else {\n            fragColor[3-index.y] = 1.0;            //r, g or b\n        }\n    } else {\n        fragColor = vec4(0.0);\n    }\n    //replace screen with display of all characters\n    //fragColor = texelFetch(iChannel0, ivec2(fragCoord*iChannelResolution[0].xy/iResolution.xy), 0);\n}","name":"Image","description":"","type":"image"}]}