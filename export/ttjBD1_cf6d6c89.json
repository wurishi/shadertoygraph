{"ver":"0.1","info":{"id":"ttjBD1","date":"1598883622","viewed":336,"name":"Fractal gutter","username":"gaz","description":"fractal","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat orbit;\nfloat map(vec3 p){\n\tp.yz*=rot(iTime*0.05);\n\tp.xz*=rot(iTime*0.1);  \n\tp=abs(p)-3.;\n\tif(p.x<p.z)p.xz=p.zx;\n\tif(p.y<p.z)p.yz=p.zy;\n \tif(p.x<p.y)p.xy=p.yx;\n \tfloat s=2.;\n\tvec3  off=p*.5;\n\tfor(int i=0;i<12;i++){\n\t\tp=1.-abs(p-1.);\n  \t\tfloat k=-1.1*max(1.5/dot(p,p),1.5);\n    \ts*=abs(k);\n   \t\tp*=k;\n\t\tp+=off;\n    \tp.zx*=rot(-1.2);\n    }\n\torbit=log2(s);\n\tfloat a=2.5;\n\tp-=clamp(p,-a,a);\n\treturn length(p)/s;\n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<80;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<0.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nfloat calcShadow( vec3 light, vec3 ld, float len ) {\n\tfloat depth = march( light, ld, 0.0, len );\t\n\treturn step( len - depth, 0.01 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0,0,9.+sin(.3*iTime+.4*sin(.2*iTime)));\n    vec3 rd = normalize(vec3(uv,-2.0));\n    vec3 col = vec3(0);\n\tconst float maxd = 40.0;\n    float t = march(ro,rd,0.0,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=2.*clamp(mix(vec3(1),\n                3.*(cos(vec3(2,5,17)+orbit*2.+p*.3)*.5+.5),\n                .7),0.,1.);\n        vec3 n = calcNormal(p);      \n\t\tvec3 lightPos=vec3(10);\n    \tvec3 li = lightPos - p;\n\t\tfloat len = length( li );\n\t\tli /= len;\n\t\tfloat dif = clamp(dot(n, li), 0.5, 1.0);\n        float sha = calcShadow( lightPos, -li, len );\n        col *= max(sha*dif, 0.4);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd+2.2*(1.0-rimd);\n    \tcol *= frn*0.7;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += vec3(0.5,0.4,0.9)*pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 60.0);\n        col = mix(vec3(0),col,exp(-t*t*.003));\n    }\n    fragColor.xyz = clamp(col,0.,1.);\n}","name":"Image","description":"","type":"image"}]}