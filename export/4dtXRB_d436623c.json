{"ver":"0.1","info":{"id":"4dtXRB","date":"1460023913","viewed":130,"name":"Prac 1","username":"TomRyanMaxwell","description":"Just a quick practice shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sqr(float val) {\n    return val*val;\n}\n\nfloat linearStep(float edge0, float edge1, float x) {\n    float t = (x - edge0)/(edge1 - edge0);\n    return clamp(t, .0, 1.0);\n}\n\nvoid disc(vec2 c, float r, vec3 col, inout vec3 o, float edgeSmooth) {\n\tfloat r2 = sqr(r);\n\to = mix(o, col, smoothstep(r2, r2-edgeSmooth, dot(c,c)));   \n}\n\nvoid diamond(vec2 center, float radius, vec3 diamondColor, inout vec3 color) {\n    if (abs(center.x) + abs(center.y) < radius) {\n        color = diamondColor;\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // aspect + coords setup\n    vec2 r = 2.0 * vec2(fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float t = iDate.w;\n    float s = sin(t);\n    float c = cos(t);\n    \n    // colors\n    vec3 red = vec3(1.0,0.0,0.0);\n    vec3 black = vec3(0.0);\n    vec3 gray1 = vec3(0.1);\n    vec3 gray2 = vec3(0.2);\n    vec3 gray3 = vec3(0.8);\n    vec3 greenDark = vec3(.2,.4,.1);\n    vec3 greenLight = vec3(.2,.6,.1);\n    \n    // pixel color\n    vec3 color = black;\n    \n    // pixelate\n    float d = .06;\n    vec2 pix = vec2(d * floor(r.x / d), d * floor(r.y / d));\n    r = pix;\n    \n    // rotated coords\n    vec2 rRotation = vec2(\n        c * r.x + s * r.y,\n        s * r.x + c * r.y\n   \t);\n    \n    // ball\n    if (dot(r,r) < 1.0) {\n\n        if (rRotation.y > 0.0) {\n            color = red;\n        }\n        else {\n            color = vec3(.9);\n        }\n\n        // horizontal line\n        if (abs(rRotation.y) < .05) {\n            color = vec3(.0);\n        }\n\n        disc(r, .3, vec3(.1), color, .001);\n        disc(r, .2, vec3(.2), color, .001);\n        disc(r, .1, vec3(.8), color, .001);\n        \n    }\n    // background\n    else {\n        \n        color = mix(greenDark, greenLight, step(cos(r.x * 10.0), 0.0));\n        \n        disc(r, 1.1, vec3(.0), color, .6); \n        \n    }\n    \n\n\tfragColor = vec4(color,1.0);\n\n}\n","name":"Image","description":"","type":"image"}]}