{"ver":"0.1","info":{"id":"wtyfRw","date":"1614066938","viewed":344,"name":"blur pyramid - distance field","username":"FabriceNeyret2","description":"Paint, and display the weighted sum of MIPmaps. Curves = local grey level.\n\nWIP - test ( won't work properly on systems with wrong MIPmap, like windows... and linux at some resolutions ).\nFinal goal is auto-built of distance field using MIPmap.\n","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["distancefield","sdf","pyramid","gpmipmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(v)  smoothstep( 1.5, 0., abs(v)/fwidth(v) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    O-=O;\n    float L = floor(log2(R.y));\n    for (float l = 0.; l < L; l++ )\n         O += (l+1.)*textureLod(iChannel0, U/R, l);\n         \n // O /= L;\n // O = .5+.5*sin(10.*O);\n    float vx = S( fract(U.x/40.) - O.x/L ),\n          vy = S( fract(U.y/40.) - O.x/L );\n    O = mix( min(O,1.),  vec4(vy,vx,0,0), max(vx,vy) );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R    iResolution.xy\n#define T(U) texelFetch( iChannel0, ivec2(U), 0 )","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    O = max( T(U) , smoothstep( 3.,0., length(U-iMouse.xy) ) );\n}","name":"Buffer A","description":"","type":"buffer"}]}