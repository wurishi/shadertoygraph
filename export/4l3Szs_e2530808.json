{"ver":"0.1","info":{"id":"4l3Szs","date":"1481060810","viewed":285,"name":"magic wand","username":"JeanArthurDeda","description":"Smoke & Mirrors for a magic wand effect. Just point & click.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["magicwand"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BORDERATTEN_OORADIUS (1.0 / 100.0)\n#define FLAREATTEN_OORADIUS (1.0 / 180.0)\n#define BORDER_SCROLL_SPEED (0.5)\n#define SMOKE_SCROLL_SPEED (0.05)\n#define SPARK_SCROLL_SPEED (0.2)\n#define SPARK_TILE (8.0)\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;    \n    \n    float water \t= texture (iChannel0, uv).r;\n    float smoke\t\t= texture (iChannel1, uv - vec2 (0.0, SMOKE_SCROLL_SPEED * iTime)).r;\n    \n    \n    // generate the mapping for the lines\n    vec2 linesUV\t= uv;\n    linesUV\t\t\t-= iMouse.xy / iResolution.xy;\n    linesUV\t\t\t+= water * 0.3 - 0.15;\n\n    float lines\t\t= texture (iChannel3, linesUV).r;\n\n    fragColor\t\t= vec4 (lines * water, lines * water, lines * water, 1.0);\n}\n\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;    \n    \n    float water \t= texture (iChannel0, uv).r;\n    float terrain\t= texture (iChannel1, uv * 2.0 - vec2 (0.0, BORDER_SCROLL_SPEED * iTime)).r;\n    float smoke\t\t= texture (iChannel1, uv - vec2 (0.0, SMOKE_SCROLL_SPEED * iTime)).r;\n    float sparks\t= texture (iChannel2, (uv - vec2 (0.0, SPARK_SCROLL_SPEED * iTime)) * SPARK_TILE).r;\n    \n    // Generate the border\n    const float kThreshold = 0.3;\n    const float kOOThreshold = 1.0 / kThreshold;\n    \n    float dist \t\t= water * 1.2 - terrain - kThreshold;\n    float border\t= 1.0 - clamp (abs(dist), 0.0, kThreshold) * kOOThreshold;\n    \n    // Generate the border atten\n\tvec2 vec\t= fragCoord.xy - iMouse.xy;\n    float len\t= dot (vec, vec);\n    float atten = 1.0 - clamp (len * BORDERATTEN_OORADIUS * BORDERATTEN_OORADIUS, 0.0, 1.0);\n    \n    // Generate the flare\n    float fatten= 0.0;\n    float alternate = sin (iTime * 90.0) > 0.1 ? 0.75 : 0.0;\n    if (iMouse.z > 0.0)\n        fatten= clamp (1.0 - sqrt (len) * FLAREATTEN_OORADIUS, 0.0, 1.0);\n    \n    // generate the sparks\n    const float kThresholdSparks = 0.1;\n    const float kOOThresholdSparks = 1.0 / kThresholdSparks;\n    \n    sparks \t\t\t= water - sparks;\n    sparks\t\t\t= clamp (sparks, 0.0, kThresholdSparks) * kOOThresholdSparks;\n    if (sparks >= 0.9)\n        sparks = 0.0;\n    \n    // mix them\n    const vec4 kWaterColor \t= vec4 (15.0 / 255.0, 68.0 / 255.0, 111.0 / 255.0, 1.0);\n    const vec4 kBorderColor = vec4 (100.0 / 255.0, 171.0 / 255.0, 214.0 / 255.0, 1.0);\n    const vec4 kFlareColor\t= vec4 (0.1, 0.5, 0.5, 1.0);\n    \n    fragColor\t\t= \t3.0 * smoke * water * kWaterColor +\n        \t\t\t\t0.5 * border * kBorderColor + \n        \t\t\t\t0.75 * water * sparks +\n        \t\t\t\t0.9 * alternate * fatten * fatten * kFlareColor;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define BLOB_OORADIUS (1.0 / 20.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n\tfragColor \t= texture (iChannel0, uv);\n\tvec2 vec\t= fragCoord.xy - iMouse.xy;\n    float blob \t= clamp (1.0 - dot (vec, vec) * BLOB_OORADIUS * BLOB_OORADIUS, 0.0, 1.0);\n    if ((iMouse.z > 0.0))\n        fragColor.r += blob;\n    fragColor = clamp (fragColor, 0.0, 1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define DIFFUSION (0.96)\n#define BLUR_SPREAD (4.0)\n#define SCROLL (-0.2 * iTimeDelta)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv.y += SCROLL;\n    \n    // Blur\n    vec2 grad = vec2 (dFdx (uv).x, dFdy (uv).y) * BLUR_SPREAD;\n\n    fragColor = vec4 (0.0, 0.0, 0.0, 1.0);\n    \n    fragColor += texture (iChannel0, uv + vec2 (-1.0 * grad.x, -1.0 * grad.y));\n    fragColor += texture (iChannel0, uv + vec2 (-0.0 * grad.x, -1.0 * grad.y));\n    fragColor += texture (iChannel0, uv + vec2 ( 1.0 * grad.x, -1.0 * grad.y));\n    \n    fragColor += texture (iChannel0, uv + vec2 (-1.0 * grad.x, -0.0 * grad.y));\n    fragColor += texture (iChannel0, uv + vec2 (-0.0 * grad.x, -0.0 * grad.y));\n    fragColor += texture (iChannel0, uv + vec2 ( 1.0 * grad.x, -0.0 * grad.y));\n\n    fragColor += texture (iChannel0, uv + vec2 (-1.0 * grad.x,  1.0 * grad.y));\n    fragColor += texture (iChannel0, uv + vec2 (-0.0 * grad.x,  1.0 * grad.y));\n    fragColor += texture (iChannel0, uv + vec2 ( 1.0 * grad.x,  1.0 * grad.y));\n    \n    fragColor *= 1.0 / 9.0;\n    \n    // Diffuse\n    fragColor *= DIFFUSION;\n    \n    fragColor = clamp (fragColor, 0.0, 1.0);\n\n}","name":"Buf B","description":"","type":"buffer"}]}