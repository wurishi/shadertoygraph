{"ver":"0.1","info":{"id":"lsdcWB","date":"1520116558","viewed":177,"name":"Reverse Karplus Pluck","username":"metabog","description":"Riffing on an old karplus strong shader... probably the most incomprehensible code I've ever written, sadly.","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["karplusstrong","physicalmodeling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    if (iResolution.y<2000.) {float c=message(fragCoord.xy/8.);if(c>=0.){fragColor=vec4(c);return;}}\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Shoddy karplus\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n//Don't even ask\nfloat evaluate(float t, float k)\n{\n    float kk = k*2.0*(sin(t*0.5)+1.0);\n    float noiseBurst = rand(vec2(t*kk,t*kk)) * exp(-64.0* (mod(t*k*2.0*(cos(t*0.5)+1.0),0.5)));\n\treturn noiseBurst;\n}\n\nfloat moment(float intime, float time)\n{\n    float o = 0.0;\n    for(int k=0;k<1;k++)\t{\n   \t\t for(int i=1; i <50; i++)\t{\n             float freq = cos(float(k+1)*time*0.5)*220.0 + 25.0;\n             o += evaluate((intime)-float(i)/freq,float(k+1))/float(i);\n       \t }\n    }\n    return o;\n}\n\nvec2 mainSound( in int samp,float time)\n{    \n    //Weird delay line\n    float nb = 0.0;\n    const int max = 100;\n    float values[max];\n    for(int j=0;j<max;j++)\t{\n        values[j] = moment(time-(float(j)/44100.0), time)/float(max);  \n    }\n    \n    for(int j=0;j<max;j++)\t{\n        nb += values[j] - values[j+1]*(float(j)/float(max));\n    }\n    float dryMix = 1.0;\n    float wetMix = 2.5;\n    return vec2(nb*wetMix + values[0]*dryMix);\n}","name":"Sound","description":"","type":"sound"}]}