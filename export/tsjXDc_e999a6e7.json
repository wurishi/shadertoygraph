{"ver":"0.1","info":{"id":"tsjXDc","date":"1555214841","viewed":118,"name":"Sector timer a0 + a1","username":"andreyu","description":"A useful timer renderer, where: \na0 is a start angle in radians;\na1 is a sector size in radians.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ui","widget"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Sector timer by Andrey A. Ugolnik\n// 2019\n\nconst float M_PI = 3.1415926535897932384626433832795;\n\nconst vec4 color = vec4(0.0, 0.0, 0.3, 1.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a0 = M_PI * 0.0;\n    float a1 = mod(iTime * 0.5, M_PI * 2.0);\n\n\tvec2 res = iResolution.xy;\n    vec2 p = (2.0 * fragCoord - res) / res.y;\n    \n    float r = cos(a1 * 0.5 + a0 + atan(-p.x, p.y));\n    float d = cos(a1 * 0.5);\n\n    float f = smoothstep(r, r, d);\n\n    // mix with texture\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 tc = texture(iChannel0, uv);\n    fragColor = mix(tc, color, f);\n}","name":"Image","description":"","type":"image"}]}