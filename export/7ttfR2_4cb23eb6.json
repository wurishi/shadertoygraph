{"ver":"0.1","info":{"id":"7ttfR2","date":"1663372442","viewed":170,"name":"2D Raymarcher Example","username":"Xor","description":"A simple 2D raymarcher demo for [url=getrevue.co/profile/xordev]mini tutorial series[/url]","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"2D Raymarcher Example\" by @XorDev\n    \n    A simple 2D raymarcher demo for mini tutorial series: getrevue.co/profile/xordev\n\n    This code is only for illustrating, so it's not my cleanest or most clear code.\n*/\n\nfloat dist_circle(vec2 p, float r)\n{\n    return length(p) - r;\n}\nfloat dist_square(vec2 p, float w, float r)\n{\n    vec2 a = abs(p) - w;\n    return length(max(a, 0.0)) - r + min(max(a.x, a.y),0.);\n}\nfloat dist_line(vec2 p, vec2 a, vec2 b)\n{\n    return length(p - a + (a-b)*clamp(dot(a-p, a-b) / dot(a-b, a-b), 0.0, 1.0));\n}\nfloat map(vec2 p)\n{\n    return min(min(dist_circle(p + vec2(3e2,0), 1e2), dist_square(p - vec2(3e2,0), 5e1, 5e1)),\n    min(4e2-abs(p.y), dist_line(p, vec2(1e2), -vec2(1e2)) - 5e1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 res = iResolution.xy;\n    float scale = 840./res.y;\n    vec2 coord = (fragCoord - res * 0.5)*scale;\n\n    float m = map(coord)/scale;\n    vec3 col = (0.9 + 0.1 * sin(m)) * \n    mix(vec3(1, 0.2, 0.2), vec3(0.2, 0.2, 1), clamp(m*0.2+0.5, 0.0, 1.0)) / (1.+abs(m)/2e2);\n    \n    vec2 pos = (iMouse.xy - res.xy * 0.5)*scale;\n    vec2 start = pos;\n    vec2 dir = normalize(-pos);\n    \n    \n    for(int i = 0; i<99; i++)\n    {\n        float ms = map(pos);\n        col *= min(abs(length(pos - coord) - abs(ms))*0.5, 1.0);\n        pos += ms*dir;\n    }\n    col.r += 1.-min(length(start - coord)*.5-4.,1.);\n    col *= min(dist_line(coord, start, pos)*0.5, 1.0);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}