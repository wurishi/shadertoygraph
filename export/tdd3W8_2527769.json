{"ver":"0.1","info":{"id":"tdd3W8","date":"1568404349","viewed":79,"name":"throughColor","username":"foran","description":"throughColor","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["throughcolor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nvec2 modA(vec2 p, float c)\n{\n  float a = atan(p.y,p.x);\n  a = mod(a , c);\n\n  return vec2(cos(a),sin(a)) * length(p);\n}\n\nfloat smin(float a, float b, float k)\n{\n  float h = clamp(.5 + .5 * (b -a)/k,0.,1.);\n  return mix(b,a,h) - k * h *(1. - h);\n}\n\nmat2 rot(float a)\n{\n  float sa = sin(a);  float ca  = cos(a);\n  return mat2(ca,-sa,sa,ca);\n}\n\n#define time (iTime)\n\nfloat map(vec3 p, out float id)\n{\n  id = 0.;\n  float dist  = 10000.;\n  vec3 cp = p;\n  p.yz = modA(p.yz, 6.);//  непрерывность спирали\n  p.yz *= rot(p.x * .75 + time*2.);// форма спирали\n  p.y += 3.;//  амплитуда\n  float co = length(p.yz) - (1. + sin(p.x) * .58);//  спираль\n\n  p = cp;\n  float ti = time;\n  for(float i  = 1.; i < 5.; ++i)//  фон с фигуркой\n  {\n    p.y += (sin(ti + p.x ) + cos(ti + p.z)) * 1.13;//  фигурка\n    dist = smin(length(p) - .85, dist, 1.25);//  слияние амплитуды фигурки\n    ti += i * .2;\n    p *= 1.1;// FOP фигурки  близко-далеко\n    p.xz *= rot(.25 + i);//  вращение по xz\n    p.yz *= rot(i * 2.);//  вращение по yz\n    p.x += .6;\n  }\n\n  if(co < .01) id = 1.;//  спираль\n  dist = min(dist , co);\n  return dist;\n}\n\nfloat Ray(inout vec3 cp, vec3 rd, out float id)\n{\n  float st = 0.;\n  float cd = 0.;\n  for(; st < 1.; st += 1. / 40.)  //128.)  // глубина\n  {\n    cd = map(cp, id);\n    if(cd < .01) break;// epsilon=0.01\n    cp += rd * cd * .45;\n  }\n\n  return st;\n}\n\nvec3 normal(vec3 p)\n{\n  float id;\n  float m = map(p, id);\n  vec2 e = vec2(.01,.0);\n  return normalize(vec3(\n  m - map(p + e.xyy, id),\n  m - map(p + e.yxy, id),\n  m - map(p + e.yyx, id)\n));\n}\n\nvec3 LookAt(vec3 eye, vec3 sub,vec2 uv)\n{\n  vec3 fo = normalize(sub - eye);\n  vec3 ri = cross(fo, vec3(0.,1.,0.));\n  vec3 up = cross(ri,fo);\n  return normalize(fo + ri * uv.x + up * uv.y);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n  vec2 uv=vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n  uv-=.5;\n  uv/=vec2(iResolution.y/iResolution.x,1);\n\n  vec3 eye = vec3(0.,0.,-12.);//  FOV\n  vec3 sub = vec3(0.);\n  vec3 cp = eye;\n  float st = 0.;\n  float id = 0.;\n  vec3 rd = LookAt(eye, sub, uv);\n  st = Ray(cp, rd, id);\n  vec3 ld = normalize(sub - eye);\n  vec3 norm = normal(cp);//  cp из Ray\n  float li = dot(ld, norm);\n  li = 1. - li;\n  li *= 1.5;// яркость\n  li = pow(li, 2.);\n  norm.xy *= rot(time + cp.z);\n  norm.xz *= rot(time + cp.y);\n  norm.yz *= rot(time + cp.x);\n  vec4 out_color=vec4(1.);\n  out_color = vec4(norm, 0.) * li;\n  out_color *= (1. - st) * (5. );\n  fragColor=vec4(out_color);\n}","name":"Image","description":"","type":"image"}]}