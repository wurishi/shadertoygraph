{"ver":"0.1","info":{"id":"lX2GRK","date":"1708968630","viewed":141,"name":"blood/river outflow sim","username":"sanderoneil","description":"tried to replicate forces which cause river creek formation /blood vessel think it worked pretty well","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["flow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    \n    vec4 buff_sample = texture(iChannel0, uv);\n    \n    fragColor = vec4(buff_sample.xyw/2.+vec3(.5,.5,.5),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const float brush_size = 140.0;\nconst float sample_dist = 4.4;\nconst float sample_count = 20.;\n\nconst float pi= 3.14159265358979323846264338327950288;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec2 uv = (fragCoord )/iResolution.xy;\n    vec4 buff_sample = texture(iChannel0, uv);\n    \n    //buff_sample.xyz =  buff_sample.xyz *2. - vec3(1,1,1);\n    vec2 m = iMouse.xy;\n    float brush = max(brush_size - length(fragCoord - m),0.0);\n    vec2 brush_push = brush * normalize(fragCoord - m);\n    \n    vec3 v = vec3(0,0,0);\n    \n    vec2 sample_v = vec2(0,0);\n    \n    float total_pressure = 0.0;\n    float total_pressure_source = 0.0;\n    \n    for (float a = 0.0; a < pi*2.0; a += pi*2.0/ float( sample_count))\n    {\n        vec2 sample_offset = vec2(cos(a),sin(a));\n        vec4 sampl =  texture(iChannel0,uv+sample_offset/iResolution.xy*sample_dist).xyzw;\n        \n        float inflow = dot(sampl.xy,sample_offset);\n        \n        sample_v += sample_offset * sampl.w * inflow;\n        \n        \n        total_pressure += inflow *( sampl.w);\n        total_pressure_source += inflow;\n        \n        //vec4 sampl_opposing = texture(iChannel0,uv-sample_offset/iResolution.xy).xyzw;\n        \n        \n        \n        //buff_sample.w -= dot(sampl.xy,sample_offset)* sampl.w*iTimeDelta;\n    }\n    \n \n    if (length(sample_v) > .01){\n    sample_v/= total_pressure_source;}\n    //sample_v = normalize(sample_v);\n    \n    // /= total_pressure_source;\n    float average_pressure = total_pressure/total_pressure_source;\n    \n    float pressure = average_pressure;\n    \n    vec2 vel = sample_v;\n    \n    if (length(brush_push ) > length(sample_v)){\n    vel = brush_push;}\n    \n    \n    if (length(vel) > 1.)\n    {\n    vel /= length(vel);\n    }\n    \n    vec4 before_clamp= buff_sample * (1.0-iTimeDelta) + iTimeDelta*vec4(vel,1.0,brush*iTimeDelta);\n    \n    fragColor.x =max( min(1.0,before_clamp.x) ,-1.0);\n    fragColor.y =max( min(1.0,before_clamp.y),-1.0);\n    fragColor.z =max( min(1.0,before_clamp.z),-1.0);\n    \n    //fragColor.xyz = fragColor.xyz/2. + vec3(.5,.5,.5);\n    //fragColor.w = min(1.0,before_clamp.w);\n    pressure = max( min(1.0, pressure),0.0);\n    pressure = max(brush,pressure);\n    \n    fragColor.w = pressure;\n    \n    //fragColor.w = brush;\n    if (iTime < 0.5){\n    fragColor = vec4(0,0,0,0);}\n    \n}\n","name":"Buffer A","description":"","type":"buffer"}]}