{"ver":"0.1","info":{"id":"XlGyzV","date":"1536866009","viewed":116,"name":"CheckerBoard Shader","username":"Ben_Hubner","description":"Simple checkerboard pattern for class EGP-200","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","homework"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float size = 10.0;\t//Changes width of boxes\nfloat size2 = 10.0;\t//Changes height of boxes\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.xy;\t// Normalized pixel coordinates, going from 0 to 1\n\n\tvec4 newColor = vec4(1.0,1.0,1.0,1.0);\t//First color made (white)\n\tvec4 secColor = vec4(0.0,0.0,0.0,1.0);\t//Second color made (black)\n    \n\tfloat temp = mod(floor(uv.x * size), 2.0);\t//Float variable calculating whether the current pixel is an even-numbered space in normalized x-coordinates\n    \n\tfloat temp2 = mod(floor(uv.y * size2), 2.0);\t//Second float variable calculating where the current pixel is an even-numbered space in normalized y-coordinates\n    \n\tif( temp == 0.0)\t//If the pizel is in an even x-coordinate on the plane, change the fragColor to newColor (white)\n\t{\n\t\tfragColor = newColor;\n\t}\n\telse\t//Otherwise, change fragColor to secColor (black)\n\t{\n\t\tfragColor = secColor;\n\t}\n\tif(temp2 == 0.0 && fragColor == newColor)\t//If the pizel is in an even y-coordinate on the plane and already newColor (white), change the fragColor to secColor (black)\n\t{\n        fragColor = secColor;\n\t}\n    else if(temp2 == 0.0 && fragColor == secColor)\t//Otherwise, if the pizel is in an even y-coordinate on the plane and already secColor (black), change the fragColor to newColor (white)\n    {\n        fragColor = newColor;\n    }\n    \n}\n","name":"Image","description":"","type":"image"}]}