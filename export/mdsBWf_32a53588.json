{"ver":"0.1","info":{"id":"mdsBWf","date":"1689249483","viewed":58,"name":"exponential twisting","username":"dokso","description":"floating point limitations causes silly things\n(wait til ~17 seconds in)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float sectorSize = 6.282 / 5.0;\n//                               ^ amount of sectors\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord - iResolution.xy)/iResolution.y;\n\n    // spin\n    float angle = exp(iTime) + exp(iTime) * -length(uv);\n    float c = cos(angle);\n    float s = sin(angle);\n    uv = uv * mat2(\n        c, s,\n        -s, c\n    );\n    \n    // duplicate\n    float sector = round(atan(uv.y, uv.x) / sectorSize);\n    angle = sector * sectorSize;\n    c = cos(angle);\n    s = sin(angle);\n    uv = uv * mat2(\n        c, s,\n        -s, c\n    );\n    \n    float d = length(uv - vec2(0.5, 0.0)) - 0.2;\n    \n    vec3 col = vec3(-sign(d));\n    //col = vec3(uv.xy, 0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}