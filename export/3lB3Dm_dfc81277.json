{"ver":"0.1","info":{"id":"3lB3Dm","date":"1559737531","viewed":223,"name":"Transition image using noise","username":"markknol","description":"Transition image using noise","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["noise","transition","image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // get image of iChannel1\n    vec2 offset = uv.xy * 0.5;\n    vec4 channel1 = texture(iChannel1, offset); \n    \n    float opacity = 0.5 + cos(iTime * 0.5) * 0.5;\n    \n    float amount = opacity;\n    uv.x += channel1.r * amount;\n    uv.y += channel1.g * amount;\n    uv.x -= channel1.b * amount;\n    uv.y -= channel1.a * amount;\n    \n    // get image of iChannel0\n    vec4 channel0 = texture(iChannel0, uv.xy);\n    \n    // Output to screen\n   \tfragColor = channel0;\n    fragColor = mix(channel0, vec4(0.5), opacity);\n   \t//fragColor = vec4(blendColorDodge(channel0.xyz, vec3(0.5), opacity), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n// blendOverlay from <https://github.com/jamieowen/glsl-blend/blob/master/overlay.glsl>\nfloat blendOverlay(float base, float blend) {\n\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n}\nvec3 blendOverlay(vec3 base, vec3 blend) {\n\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n// blendColorDodge from <https://github.com/jamieowen/glsl-blend/blob/master/color-dodge.glsl>\nfloat blendColorDodge(float base, float blend) {\n\treturn (blend == 1.0) ? blend:min(base / (1.0 - blend), 1.0);\n}\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n\treturn vec3(blendColorDodge(base.r, blend.r), blendColorDodge(base.g,blend.g), blendColorDodge(base.b, blend.b));\n}\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}","name":"Common","description":"","type":"common"}]}