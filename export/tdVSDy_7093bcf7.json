{"ver":"0.1","info":{"id":"tdVSDy","date":"1575275545","viewed":152,"name":"TestGlitch","username":"LeoGong","description":"Test glitch effect for Eden","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float amount = 0.1;\nfloat speed = 3.0;\n\nfloat random1d(float n){\n    return fract(sin(n) * 43758.5453);\n}\nfloat random2d(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\nfloat randomRange (in vec2 seed, in float min, in float max) {\n    return min + random2d(seed) * (max - min);\n}\nfloat insideRange(float v, float bottom, float top) {\n    return step(bottom, v) - step(top, v);\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat blendDarken(float base, float blend) {\n\treturn min(blend,base);\n}\n\nvec3 blendDarken(vec3 base, vec3 blend) {\n\treturn vec3(blendDarken(base.r,blend.r),blendDarken(base.g,blend.g),blendDarken(base.b,blend.b));\n}\n\nvec3 blendDarken(vec3 base, vec3 blend, float opacity) {\n\treturn (blendDarken(base, blend) * opacity + base * (1.0 - opacity));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float sTime = abs(sin(iTime) * speed);\n    vec3 finalColor;\n    bool condition = abs(sin(iTime) * 0.5) > 0.1;\n    if (!condition) {\n    \tvec3 inCol = texture(iChannel0, uv).rgb;\n    \tvec3 outCol = inCol;\n    \tfloat maxOffset = amount/2.0;\n    \tvec2 uvOff;\n    \tfor (float i = 0.0; i < 10.0; i += 1.0) {\n        \tif (i > 10.0 * amount) \n                break;\n        \tfloat sliceY = random2d(vec2(sTime + amount, 2345.0 + float(i)));\n        \tfloat sliceH = random2d(vec2(sTime + amount, 9035.0 + float(i))) * 1.0;\n    \t\tfloat hOffset = randomRange(vec2(sTime + amount, 9625.0 + float(i)), -maxOffset, maxOffset);\n        \tfloat vOffset = randomRange(vec2(sTime + amount, 1734.0 + float(i)), -maxOffset, maxOffset);        \t\tuvOff = uv;\n        \tuvOff.x += hOffset;\n            uvOff.y += vOffset;\n        \tvec2 uvOff = fract(uvOff);\n        \tif (insideRange(uv.y, sliceY, fract(sliceY+sliceH)) == 1.0 ){\n        \t\toutCol = texture(iChannel0, uvOff).rgb;\n    \t\t}\n\t}\n    float maxColOffset = amount/6.0;\n    vec2 colOffset = vec2(randomRange(vec2(sTime + amount, 3545.0),-maxColOffset,maxColOffset), randomRange(vec2(sTime , 7205.0),-maxColOffset,maxColOffset));\n    uvOff = fract(uv + colOffset);\n    float rnd = random2d(vec2(sTime + amount, 9545.0));\n    if (rnd < 0.33) {\n        outCol.r = texture(iChannel0, uvOff).r;\n    } else if (rnd < 0.66) {\n        outCol.g = texture(iChannel0, uvOff).g;\n    } else {\n        outCol.b = texture(iChannel0, uvOff).b;\n    }\n    vec3 inCol2 = texture(iChannel1, uv).rrr;\n    finalColor = blendDarken(outCol, inCol2);\n    }\n    else{\n    \tfinalColor = texture(iChannel0, uv).rgb;\n    }\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}