{"ver":"0.1","info":{"id":"dtycWV","date":"1700772735","viewed":56,"name":"Fractal shader 0001","username":"Makisness","description":"Learning glsl, made a fractal shader. Enjoy!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n   \n   float angle = -cos(iTime/3.14)+sin(-iTime/7.17);\n   for(float i = 0.0; i < 32.; i += 1.0){\n   \n   vec2 uv0 = uv;\n   vec3 finalColor = vec3(0.0);\n   float d = length(uv) * exp(-length(uv0));\n\n   \n   uv = abs(uv);\n   uv -= .5;\n   uv *= 1.1;\n   uv *= mat2(\n   cos(angle), -sin(angle),\n   sin(angle), cos(angle)\n   );\n   \n   vec3 col = palette (length(uv0) + i*.4 + iTime*.4);\n   finalColor += col;\n    fragColor = vec4(finalColor, 1.0);\n}\n}\n\n","name":"Image","description":"","type":"image"}]}