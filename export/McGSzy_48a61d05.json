{"ver":"0.1","info":{"id":"McGSzy","date":"1715345822","viewed":103,"name":"fly view","username":"robertosilvestri","description":"fly view","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["animal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TILINGS 32.0\nfloat hexDist(in vec2 p) {\n    p = abs(p);\n    float edgeDist = dot(p, normalize(vec2(1.0, 1.73)));\n    return max(edgeDist, p.x);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * TILINGS;\n    float unit = 1.0 * TILINGS / iResolution.y;\n\n    vec2 rep = vec2(1.0, 1.73); // 1.73 ~ sqrt(3)\n    vec2 hrep = 0.5 * rep;\n    vec2 a = mod(uv, rep) - hrep;\n    vec2 b = mod(uv - hrep, rep) - hrep;\n    vec2 hexUv = dot(a, a) < dot(b, b) ? a : b;\n    vec2 cellId = uv - hexUv;\n\n    vec2 sampleUv = cellId / TILINGS;\n    sampleUv.x *= iResolution.y / iResolution.x;\n    vec3 col = texture(iChannel0, sampleUv + 0.5).rgb;\n    float brightness = col.r;\n    fragColor = vec4(col * smoothstep(unit, 0.0, hexDist(hexUv) - brightness * .9),1.);\n}","name":"Image","description":"","type":"image"}]}