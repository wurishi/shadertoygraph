{"ver":"0.1","info":{"id":"Nl3yDB","date":"1660410374","viewed":83,"name":"Goo Falling","username":"lotusotho","description":"Basic wave shader using math to simulate liquid falling","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = uv - vec2(0.5, 0.5); \n\n    // Time varying pixel color\n    vec3 col = vec3(1.0, 1.0, 1.0);\n   \n    float c = 0.2 + 0.1 * cos((uv.y - uv.x) - tan(uv.x - 0.5) * 20.0 * 0.5 * 2.0) + iTime;\n    \n    //Color\n    vec3 f = cos(vec3(0.5, 0.7, 1.0));\n    \n    \n    //Ball motion\n    c -= sin(uv.x) * 2.0 / cos(uv.y) * atan(uv.x - uv.y) - floor(uv.y);\n    \n    col *= smoothstep(0.1, 0.1, length(p * sin(c))) * smoothstep(0.2, 0.7, f); \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}