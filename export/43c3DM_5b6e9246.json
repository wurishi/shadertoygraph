{"ver":"0.1","info":{"id":"43c3DM","date":"1716530774","viewed":38,"name":"Kaleido flow","username":"masel","description":" my first shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader","flow","first","kaleido","my"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// My first shader\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Reflect the coordinates around the center\n    uv = abs(uv - 0.5) * 2.0;\n    \n    // Add some distortion to the reflection\n    uv.x += 0.1 * sin(uv.y * 10.0 + iTime);\n    uv.y += 0.1 * cos(uv.x * 10.0 + iTime);\n    \n    // Time varying pixel color with reflection effect\n    vec3 col = 0.5 + 0.5 * cos(iTime + uv.xyx * 3.0 + vec3(0, 2, 4));\n    \n    // Increase contrast\n    col = col * col * (3.0 - 2.0 * col);  \n    \n    // Final color output with added reflections and increased contrast\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}