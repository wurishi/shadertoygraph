{"ver":"0.1","info":{"id":"M3XSR2","date":"1709715669","viewed":320,"name":"jj1","username":"jjdee","description":"jj1","likes":1,"published":1,"flags":4,"usePreview":0,"tags":["jj1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define light(d, att) 1. / (1.+pow(abs(d*att), 1.3))\n#define rot(a) mat2(cos(a + vec4(0,33,11,0)))\n\n/* Audio-related functions */\n#define getLevel(x) (texelFetch(iChannel0, ivec2(int(x*512.), 0), 0).r)\n#define logX(x,a,c) (1./(exp(-a*(x-c))+1.))\nfloat logisticAmp(float amp){\n   float c = .80, a = 25.;  \n   return (logX(amp, a, c) - logX(0.0, a, c)) / (logX(1.0, a, c) - logX(0.0, a, c));\n}\nfloat getPitch(float freq, float octave){\n   freq = pow(2., freq)   * 261.;\n   freq = pow(2., octave) * freq / 12000.;\n   return logisticAmp(getLevel(freq));\n}\nfloat getVol(float samples) {\n    float avg = 0.;\n    for (float i = 0.; i < samples; i++) avg += getLevel(i/samples);\n    return avg / samples;\n}\n/* ----------------------- */\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nfloat hash13(vec3 p3) {\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv   = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(.1,.0,.14);\n    float vol = getVol(8.);\n    \n    vec3 ro = vec3(0, 8, 12)*(1. + vol*.3);\n    ro.zx *= rot(iTime*.4);    \n    vec3 f = normalize(-ro), r = normalize(cross(vec3(0,1,0), f));\n    vec3 rd = normalize(f + uv.x*r + uv.y*cross(f, r));\n    \n    float hasSound = 1.; if (iChannelTime[0] <= 0.) hasSound = .4;\n    \n    for (float i = 0., t = 0.; i < 30.; i++) {\n        vec3 p  = ro + t*rd;        \n        \n        vec2 cen = floor(p.xz) + .5;\n        vec3 id = abs(vec3(cen.x, 0, cen.y));\n        float d = length(id);\n        \n        float freq = smoothstep(0., 20., d)*3.*hasSound + hash13(id)*2.;\n        float pitch = getPitch(freq, .7);\n        \n        float v  = vol*smoothstep(2., 0., d);\n        float h  = d*.2*(1.+pitch*1.5) + v*2.;\n        float me = sdBox(p - vec3(cen.x, -50., cen.y), vec3(.3, 50. + h, .3)+pitch) - .05;\n        \n        col += mix(mix(vec3(.8,.2,.4), vec3(0,1,0), min(v*2.,1.)), vec3(.5,.3,1.2), smoothstep(10., 30., d))\n               *(cos(id)+1.5)\n               * (pitch * d*.08 + v)\n               * light(me, 20.) * (1. + vol*3.);\n        \n        t += me;\n    }\n    \n    fragColor = vec4(col,10.0);   \n}","name":"Image","description":"","type":"image"}]}