{"ver":"0.1","info":{"id":"cdf3Rr","date":"1666194606","viewed":99,"name":"Poop","username":"Retard_Gaming","description":"poopy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["poop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random(float x, float y) {\n    float i = pow(10.0,4.0)*sin((x + y / 5.3)*pow(10.0,4.0));\n    i %= 1.0;\n    return (i * 2.0) - 1.0;\n}\n\nfloat gradient(float s1, float s2, float x) {\n    float fx = (s1+s2)*x*x*x - (2.0*s1+s2)*x*x + s1*x;\n    float gx = 2.0*x*x-2.0*x+1.0;\n    return fx / gx;\n}\nfloat stepfunc(float x) {\n    return x*x/(x*x+(1.0-x)*(1.0-x));\n}\nfloat perlin1(float x, float y) {\n    float xlerp = mod(x, 1.0);\n    float value1 = gradient(random(floor(x), floor(y)), random(floor(x + 1.0), floor(y)), xlerp);\n    float value2 = gradient(random(floor(x), floor(y + 1.0)), random(floor(x + 1.0), floor(y + 1.0)), xlerp);\n    float ylerp = mod(y, 1.0);\n    float value3 = (1.0 - stepfunc(ylerp)) * value1 + stepfunc(ylerp) * value2;\n    return value3;\n}\nfloat perlin2(float x, float y) {\n    float value = (perlin1(x, y) + perlin1(y,x + 18624.0f));\n    return value;\n}\n\nfloat fractalNoise(float x, float y, int octaves, float scale, float influence) {\n    float value = perlin2(x, y);\n    for (int i = 1; i < octaves; i++) {\n        float x2 = x * float(i) * scale + float(i) * 26182.0;\n        float y2 = y * float(i) * scale + float(i) * 5318.0;\n        value += perlin2(x2, y2) / (float(i) * influence);\n    }\n    return (value + 1.0)/2.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec2 res = iResolution.xy;\n    float x = res.x * uv.x / 50.0;\n    float y = res.y * uv.y / 50.0;\n    x += 5.0 * fractalNoise(x + iTime / 5.0, y - iTime / 5.0, 8, 3.0, 3.0);\n    y += 5.0 * fractalNoise(x - iTime / 5.0, y - iTime / 5.0, 8, 3.0, 3.0);\n    float l = fractalNoise(x - iTime / 5.0, y - iTime / 5.0, 8, 3.0, 3.0);\n    \n    //vec4 col1 = vec4(0.588, 0.294, 0, 0); // dark brown\n    vec4 col1 = vec4(0.804, 0.521, 0.266, 0); // light brown\n    vec4 col2 = vec4(0);\n\n    // Output to screen\n    fragColor = col1 * (1.0-l) + col2 * l;\n}","name":"Image","description":"","type":"image"}]}