{"ver":"0.1","info":{"id":"dlV3W3","date":"1684800681","viewed":113,"name":"First Shader Art","username":"kofiro222","description":"Tutorial by Kishimisu","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["shaderart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b* cos(6.28318 *(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n   // vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    //uv.x *= iResolution.x/iResolution.y;\n    // above becomes simplified below\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    vec3 finCol = vec3(0.0);\n    \n    \n    for(float i = 0.0;i<4.0;i++){\n    \n    \n        // for spaced repetition\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime *.4);\n\n        d = sin(d * 8.0 + iTime)/8.0;\n        d = abs(d);\n\n        //d = smoothstep(0.0, 0.1, d);\n        d = pow(0.01/d, 1.2);\n\n\n\n        finCol += col * d;\n    }\n    \n    fragColor = vec4(finCol, 1.0);\n}","name":"Image","description":"","type":"image"}]}