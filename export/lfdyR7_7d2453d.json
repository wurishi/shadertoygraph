{"ver":"0.1","info":{"id":"lfdyR7","date":"1730428042","viewed":85,"name":"Misc Checkerboard","username":"SeoFernando","description":"Some silly over-complicated checkerboard patterns","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["misc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Define constants\n\nconst float pi = 3.14159265359;\n\nfloat m(float x, float y) {\n    const float epsilon = 0.1;\n    \n    float a = pi * x / y;\n    return y * (0.5 - (1.0 / pi) * atan((cos(a) * sin(a)) / (pow(sin(a), 2.0) + pow(epsilon, 2.0))));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    const float W = 50.0;\n    const float H = 50.0;\n    float tileX = fragCoord.x / W, tileY = fragCoord.y / H;\n    \n    // Tile X,Y flipping rules\n    const int NUM_PATTERNS = 18;\n    vec2 flipPatterns[NUM_PATTERNS] = vec2[NUM_PATTERNS](\n        vec2(mod(2.0 * mod(tileX, 1.0), 1.0), mod(4.0 * mod(tileY, 1.0), 1.0)),\n        vec2(mod(tileX, 1.5), mod(tileY, 2.0)),\n        vec2(abs(sin(tileX * 0.5)) * 0.5, abs(cos(tileY * 0.5)) * 0.5),\n        vec2(fract(sin(tileX * 3.0)), fract(cos(tileY * 3.0))),\n        vec2(mod(-2.0 * mod(tileX, 1.0), 1.0), mod(tileY, 1.0)),\n        vec2(m(tileX, 1.0), m(2.0 * m(tileY, 1.0), 1.0)),\n        vec2(mod(2.0 * mod(tileX, 1.0), 1.0), mod(2.0 * mod(tileY, 1.0), 1.0)),\n        vec2(mod(tileX, 1.0), mod(tileY, 1.0)),\n        vec2(sin(pow(tileX, 0.5)) * 0.5, cos(pow(tileY, 0.5)) * 0.5),\n        vec2(mod(tileX + tileY, 2.0), mod(tileY - tileX, 1.0)),\n        vec2(smoothstep(0.0, 1.0, m(tileX, 2.0)), smoothstep(0.0, 1.0, m(tileY, 2.0))),\n        vec2(sin(tileX) * cos(tileY), cos(tileY) * sin(tileX)),\n        vec2(pow(sin(tileX * 1.5), 2.0), pow(cos(tileY * 1.5), 2.0)),\n        vec2(m(tileY, 1.0), m(tileX, 1.0)),\n        vec2(m(-tileX, 1.0), m(-tileX, 1.0)),\n        vec2(sin(tileX * pi) * 0.5, cos(tileY * pi) * 0.5),\n        vec2(smoothstep(0.0, 1.0, m(tileX, 2.0)), smoothstep(0.0, 1.0, m(tileY, 2.0))),\n        vec2(sin(tileX * pi) * 0.5, 0.5 + cos(tileY * pi) * 0.5)\n    );\n    // Transition\n    const float DURATION = 18.0;\n    \n    float t = mod(iTime, DURATION) / DURATION * float(NUM_PATTERNS);\n    float blend = fract(t);\n    float easeBlend = blend * blend * (3.0 - 2.0 * blend);\n    int idx = int(t);\n\n    // Interpolate between the current and next pattern\n    vec2 flipLocal = mix(flipPatterns[idx], flipPatterns[(idx + 1) % NUM_PATTERNS], easeBlend);\n\n    // Apply flips\n    float localX = mix(mod(fragCoord.x, W), W - mod(fragCoord.x, W), flipLocal.x);\n    float localY = mix(mod(fragCoord.y, H), H - mod(fragCoord.y, H), flipLocal.y);\n    \n        \n    // Painting\n    float pattern = localX - localY;\n    \n\n    float hueBlack = mod(iTime * 0.3 + localX / W, 1.0);  \n\n    vec3 colorBlack = vec3(0.5 + 0.5 * cos((vec3(0.0, 1.0 , 2.0 / 3.0) + hueBlack)));\n    vec3 colorWhite = vec3(0.9, 0.9, 1.0);\n\n    vec3 color = mix(colorBlack, colorWhite, pattern);\n\n    fragColor = vec4(color, 1.0);\n    //fragColor = vec4(vec3(pattern), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}