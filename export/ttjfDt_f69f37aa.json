{"ver":"0.1","info":{"id":"ttjfDt","date":"1600193700","viewed":251,"name":"jh0ker_gaussblur","username":"jh0ker","description":"gaussblur implementiation?","likes":1,"published":3,"flags":34,"usePreview":0,"tags":["blur","gauss"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int width = 17;\nfloat weights[17] = float[] (0.05105, 0.05066, 0.04952, 0.04766, 0.04519, 0.0422, 0.03882, 0.03519, 0.03143, 0.02767, 0.02401, 0.02056, 0.01737, 0.0145, 0.01197, 0.00978, 0.00793);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel1, uv) * weights[0];\n    \n    for (int i = 1; i < width; i++) {\n\n        col += texture(\n            iChannel1,\n            uv + vec2(0, i) / iChannelResolution[1].xy\n        ) * weights[i];\n        \n        col += texture(\n            iChannel1,\n            uv - vec2(0, i) / iChannelResolution[1].xy\n        ) * weights[i];\n    }\n    \n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int width = 17;\nfloat weights[17] = float[] (0.05105, 0.05066, 0.04952, 0.04766, 0.04519, 0.0422, 0.03882, 0.03519, 0.03143, 0.02767, 0.02401, 0.02056, 0.01737, 0.0145, 0.01197, 0.00978, 0.00793);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv) * weights[0];\n    \n    for (int i = 1; i < width; i++) {\n\n        col += texture(\n            iChannel0,\n            uv + vec2(i, 0) / iChannelResolution[0].xy\n        ) * weights[i];\n        \n        col += texture(\n            iChannel0,\n            uv - vec2(i, 0) / iChannelResolution[0].xy\n        ) * weights[i];\n    }\n    \n    //col /= float(box);\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}