{"ver":"0.1","info":{"id":"4fsczM","date":"1720954411","viewed":34,"name":"See Urchin","username":"ODtian","description":"null","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSegment(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\n#define PI 3.1415926\n#define PI2 (PI * 2.0)\n#define pos(ang, r) (vec2(cos(ang), sin(ang)) * r)\n\n// FabriceNeyret2\n#define MOD 4  // type of Perlin noise\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define hash31(p) fract(sin(dot(p,vec3(127.1,311.7, 74.7)))*43758.5453123)\n\n\nfloat noise3(vec3 p) {\n    vec3 i = floor(p);\n    vec3 f = fract(p);\n    f = f * f * (3. - 2. * f); // smoothstep\n\n    float v = mix(mix(mix(hash31(i + vec3(0, 0, 0)), hash31(i + vec3(1, 0, 0)), f.x), mix(hash31(i + vec3(0, 1, 0)), hash31(i + vec3(1, 1, 0)), f.x), f.y), mix(mix(hash31(i + vec3(0, 0, 1)), hash31(i + vec3(1, 0, 1)), f.x), mix(hash31(i + vec3(0, 1, 1)), hash31(i + vec3(1, 1, 1)), f.x), f.y), f.z);\n    return MOD == 0 ? v : MOD == 1 ? 2. * v - 1. : MOD == 2 ? abs(2. * v - 1.) : 1. - abs(2. * v - 1.);\n}\n\nfloat fbm3(vec3 p) {\n    float v = 0., a = .5;\n    mat2 R = rot(.37);\n\n    for (int i = 0; i < 2; i++, p *= 2., a /= 2.) p.xy *= R, p.yz *= R, v += a * noise3(p);\n\n    return v;\n}\n\nfloat sdCircle(vec2 p, float r) {\n    return length(p) - r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float asp = iResolution.x / iResolution.y;\n    // vec2 pos = uv - 0.5;\n    // pos.y /= asp;\n    vec2 pos = ( fragCoord -.5* iResolution.xy ) / iResolution.x;\n    const float strings = 3.0;\n\n    float r = 0.003, dist = 0.4;\n\n    float val = 5.0, d = 0.01;\n\n    for (float j = 0.0; j < 1.0; j += 1.0 / strings) {\n\n        for (float i = j + d; i < j + 1.0 / strings; i += d) {\n            vec2 a = pos(i * PI2, dist), b = pos((i + d) * PI2, dist);\n            a = pos((i + 0.1 * (fbm3(vec3(a * 100.0, iTime))) - 0.5) * PI2, dist * fbm3(vec3(a, iTime)));\n            b = pos((i + d + 0.1 * fbm3(vec3(b * 100.0, iTime))) * PI2, dist * fbm3(vec3(b, iTime)));\n            val = min(val, sdSegment(pos, a, b) - 0.0001);\n        }\n    }\n    fragColor.rgb = vec3(smoothstep(0.0, 1.5 / iResolution.x, val));\n}","name":"Image","description":"","type":"image"}]}