{"ver":"0.1","info":{"id":"dsXczl","date":"1687099366","viewed":32,"name":"I am The Spot!","username":"juve938383","description":"Spots and metacircles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SquaredDistance(float x0, float y0, float x1, float y1){\n    return (pow((x0-x1), 2.0) + pow((y0-y1), 2.0));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 centre = vec2(iResolution.x/2.0, iResolution.y/2.0);\n    // x, y, r\n    vec3[] circles = vec3[](//Main blob\n                            vec3(centre.x, centre.y-50.0 + 5.0*cos(iTime), 75), \n                            vec3(centre.x, centre.y+50.0 + 20.0*cos(iTime), 75),\n                            //Blob deformation\n                            vec3(centre.x + 65.0*sin(iTime+1.0), centre.y + 70.0 - 65.0*cos(iTime+1.0), 20.0),\n                            vec3(centre.x + 50.0 + 50.0*cos(iTime+1.0), centre.y - 45.0*cos(iTime), 20.0),\n                            vec3(centre.x - 75.0*cos(iTime+1.0), centre.y + 90.0*sin(iTime), 30),\n                            vec3(centre.x + 0.4*sin(iTime) * max(80.0 ,abs(130.0*cos(iTime+1.0))), centre.y + 130.0*cos(iTime+1.0), 15),\n                            //External blobs\n                            vec3(centre.x + 160.0 + 5.0*sin(iTime*1.2), centre.y + 30.0 + 7.5*sin(iTime*1.2), 10),\n                            vec3(centre.x - 170.0 + 5.0*cos(iTime*1.2), centre.y + 100.0 - 7.5*cos(iTime*1.2), 6),\n                            vec3(centre.x + 150.0 + 5.0*cos(iTime), centre.y - 120.0 - 3.5*cos(iTime+1.0), 5),\n                            vec3(centre.x - 10.0 + 5.0*sin(iTime+0.5), centre.y - 180.0 + 5.0*sin(iTime), 10),\n                            vec3(centre.x - 50.0 + 2.0*cos(iTime), centre.y + 180.0 - 2.5*cos(iTime*1.2), 2),\n                            vec3(centre.x - 130.0 + 7.5*cos(iTime+0.5), centre.y - 130.0 - 2.5*cos(iTime), 3),\n                            vec3(centre.x + 120.0 + 5.0*cos(iTime), centre.y + 170.0 - 5.0*cos(iTime + 1.0), 7),\n                            vec3(centre.x - 170.0 + 5.0*sin(iTime+1.0), centre.y - 40.0 - 2.5*cos(iTime*1.2), 8),\n                            //Bubbles coming out of the main blob\n                            vec3(centre.x - 90.0 - 60.0*cos(iTime), centre.y - 110.0 - 105.0*cos(iTime), 20.0*max(0.0, cos(iTime+1.5))),\n                            vec3(centre.x - 60.0 - 60.0*sin(iTime), centre.y + 110.0 + 105.0*sin(iTime), 20.0*max(0.0, sin(iTime+1.5))),\n                            vec3(centre.x + 90.0 + 50.0*cos(iTime/1.5+1.0), centre.y - 90.0 - 100.0*cos(iTime/1.5+1.0), 10.0*max(0.0, cos(iTime/1.5+2.5)))\n                            );\n    float mask = 1.0;\n    for(int i = 0; i < circles.length(); i++){\n        float radius = circles[i][2];\n        float dist = SquaredDistance(fragCoord.x, fragCoord.y, circles[i][0], circles[i][1]);\n        float radiusSquared = radius * radius;\n        float coef = abs(dist-radiusSquared)/max(dist, radiusSquared);\n        \n        if(dist < radiusSquared){\n            mask = 0.0;\n        }else{\n            mask *= coef;\n        }\n    }\n    \n    float threshold = 0.25;\n    if(mask < threshold){\n        mask = 0.0;\n    }else{\n        mask *= 2.0;\n    }\n    \n    fragColor = vec4(mask, mask, mask, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}