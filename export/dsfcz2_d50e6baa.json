{"ver":"0.1","info":{"id":"dsfcz2","date":"1686985316","viewed":51,"name":"kaleidoscope1","username":"takaya","description":"pr","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sdf","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3( 0.948, 0.708, 0.528 );\n    vec3 b = vec3( 0.488 ,0.068 ,0.198 );\n    vec3 c = vec3 ( 1.738, 3.138 ,3.138 );\n    vec3 d = vec3 ( 0.975 ,0.565, 1.588 );\n\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 nextColor = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.3) - 0.5;\n\n           float d = length(uv) * exp(-length(nextColor)*sin(iTime)*1.3);\n\n        vec3 col = palette(length(nextColor) + i* .8 - iTime*.7);\n\n        d = sin(d*8. - iTime)/8.;\n        d = abs(d)*.8;\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}