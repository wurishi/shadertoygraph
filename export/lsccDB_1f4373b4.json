{"ver":"0.1","info":{"id":"lsccDB","date":"1520026101","viewed":870,"name":"maze automata","username":"FabriceNeyret2","description":"maze cellular automata.\nwait for window fill :-)\n\nclick for zoom in/out.","likes":19,"published":3,"flags":32,"usePreview":0,"tags":["automata","cellular","flood","maze","fill","short","coral","lda"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 O, vec2 u) {\n    vec2 U = iMouse.z <= 0. ? u/2.\n        : (u+vec2(iMouse.x,0)) * iMouse.y/iResolution.y;\n    O = T(0,0);\n    if (O.x > 1.) O = .6 + .6 * cos( .1*O  + vec4(0,23,21,0)  );}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{ \n    O = T(0,0);                             // restore previous state\n    \n    // --- grow maze\n    if (iFrame==0 && U-.5 == 0.*iResolution.xy/2. ) O++;    // maze seed\n   \n    if ( fract(1e4*sin(iTime+dot(U,vec2(77,13)))) < .3 )  { // random progression\n        vec3 H=vec3(0), V = H;\n        float t, n=0.; \n        for (int k=0; k++<9; )              // 3x3 neighborhood filling stats\n            n += t = T(k%3-1,k/3-1).x,      // n,H,T = total, per line, per col\n            H[k/3] += t,\n            V[k%3] += t;  \n        \n        #define v(i,j) T(i-1, j-1).x > 0. && n == (j==1 ? V[i] : H[j] )\n        if ( v(0,1) || v(2,1) || v(1,0) || v(1,2) ) O++;    // connect \n    }\n    \n    // --- grow colors\n    #define t(i,j)  T(i,j).x > 1.\n    if ( O.x > 0. && \n        (  length(U-vec2(iResolution.x/2.,0)) < 2.          // color seed\n         || t (-1,0) || t(1,0) || t(0,-1) || t(0,1) )) O++; // propagate\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(i,j) texelFetch(iChannel0, ivec2(U+vec2(i,j)), 0)\n","name":"Common","description":"","type":"common"}]}