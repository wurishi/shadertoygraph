{"ver":"0.1","info":{"id":"4s2yRy","date":"1492600633","viewed":92,"name":"Britney Warp","username":"defcon8","description":"My first fragment shader..","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["britneywarp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = ( fragCoord.xy / iResolution.xy ) - vec2(0.5,0.5);\t\n    vec2 normalpos = ( fragCoord.xy / iResolution.xy );\n    float horizon = cos(iTime)*0.1; \n    float fov = 0.7; \n\tfloat scaling = abs((sin(iTime)+0.5)) * 0.02 + 0.05;\n\tfloat t = sin(iTime) * 0.1;\n\t\n\tmat2 rot = mat2(cos(t),sin(t),sin(t),cos(t));\n\t\n\tpos  *=rot;\n\t\n\tvec3 p = vec3(pos.x, fov, pos.y - horizon);      \n\tvec2 s = vec2(p.x/p.z, p.y/p.z) * scaling;\n\t\n\ts.xy *=rot;\n\t\n\tfloat dupa = 5.0;\n\tfloat color =1.0;\n    if(pos.y < 1.1)\n    \tcolor = sign((mod(s.x, 0.1) - 0.05) * (mod(s.y + dupa * mod(-iTime * 0.05, 1.0), 0.1) - 0.05));\n\t\t \n\tcolor *= p.z*p.z*14.0;\n\t\n\tfragColor = vec4( 0.9-p.y,0.9,0.9, 1.0 );\n    \n    normalpos *=rot;\n    \n    fragColor = texture(iChannel0, vec2(normalpos.x, normalpos.y+0.2));\n    \n    float mean = (fragColor.r + fragColor.g + fragColor.b) / 3.0;\n    if(fragColor.g - 0.15 > mean) {\n     \tfragColor.a = 0.0; \n        fragColor.r = 0.0;\n        fragColor.g = 0.0;\n        fragColor.b = 0.0;\n    }\n\t\n\tfragColor += vec4( vec3(sin(iTime)*color,cos(iTime)*color,color), 0.5 );\n}","name":"Image","description":"","type":"image"}]}