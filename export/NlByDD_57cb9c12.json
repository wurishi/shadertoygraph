{"ver":"0.1","info":{"id":"NlByDD","date":"1649835127","viewed":110,"name":"Sonic Chess","username":"tomansion","description":"PAPAPAPAPALA, papapappa la","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["squares","oui","sanic","schess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n    \n    vec4 bufACol = texture(iChannel0, uv);\n    if (bufACol.a > 0.0) fragColor = mix(fragColor, bufACol, abs(sin(iTime)) + 0.2 + uv.x / 10.0);\n    \n    vec4 bufBCol = texture(iChannel1, uv);\n    if (bufBCol.a > 0.0) fragColor = bufBCol;\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * vec2(-1, 1) + vec2(cos(iTime * 1.2) + iTime * 0.4, iTime * 1.3) * vec2(0.2, 0.3) ;\n\n    // Time varying pixel color\n    fragColor = vec4(1.0, 1.0, 1.0, 0.0);\n\n    if (sin(uv.x * 17.0 * 3.1415) > .0) fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    if (sin(uv.y * 10.0 * 3.1415) > 0.0) fragColor = 1.0 - fragColor;   \n   }","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,0.0);\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 mx = iMouse / iResolution.x;\n    vec4 my = iMouse / iResolution.y;\n    \n    vec2 squareSize = vec2(0.1, 0.17) * 0.6;\n\n    if (uv.x - squareSize.x < mx.x && uv.x + squareSize.x > mx.x &&\n    uv.y - squareSize.y < my.y && uv.y + squareSize.y > my.y) fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}