{"ver":"0.1","info":{"id":"tlGXzc","date":"1583242640","viewed":120,"name":"lambda rasterizer","username":"JentGent","description":"This is just a rasterizer.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","rasterizer","rendering","renderer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n// PI\nconst float PI = 3.14159265358979323;\n\n// Distance\nfloat dist(float x, float y, float x2, float y2) {\n    return sqrt((x2-x)*(x2-x) + (y2-y)*(y2-y));\n}\n\n// Output color\nvec3 c = vec3(0.0);\n\n// Depth Buffer\nfloat db = 10000.0;\n\n// Traditional Rasterizer approach\nvoid triRaster(float x, float y, float z, float x2, float y2, float z2, float x3, float y3, float z3, vec3 color) {\n    float xPix = gl_FragCoord.x;\n    float yPix = gl_FragCoord.y;\n\n    x -= iResolution.x / 2.0;\n    y -= iResolution.y / 2.0;\n    x2 -= iResolution.x / 2.0;\n    y2 -= iResolution.y / 2.0;\n    x3 -= iResolution.x / 2.0;\n    y3 -= iResolution.y / 2.0;\n    x /= z / 100.0;\n    y /= z / 100.0;\n    x2 /= z2 / 100.0;\n    y2 /= z2 / 100.0;\n    x3 /= z3 / 100.0;\n    y3 /= z3 / 100.0;\n    x += iResolution.x / 2.0;\n    y += iResolution.y / 2.0;\n    x2 += iResolution.x / 2.0;\n    y2 += iResolution.y / 2.0;\n    x3 += iResolution.x / 2.0;\n    y3 += iResolution.y / 2.0;\n\n    if(xPix < min(x, min(x2, x3)) || xPix > max(x, max(x2, x3)) || yPix < min(y, min(y2, y3)) || yPix > max(y, max(y2, y3))) {\n        return;\n    }\n\n    float lambda = (xPix - x2) * (y3 - y2) - (yPix - y2) * (x3 - x2);\n    float lambda2 = (xPix - x3) * (y - y3) - (yPix - y3) * (x - x3);\n    float lambda3 = (xPix - x) * (y2 - y) - (yPix - y) * (x2 - x);\n    if(!(lambda > 0.0 && lambda2 > 0.0 && lambda3 > 0.0) && !(lambda < 0.0 && lambda2 < 0.0 && lambda3 < 0.0)) {\n        return;\n    }\n    float area = (x3 - x) * (y2 - y) - (y3 - y) * (x2 - x);\n    float zPix = (lambda * z + lambda2 * z2 + lambda3 * z3) / area;\n    if(zPix <= 0.0 || zPix > db) {\n        return;\n    }\n    db = zPix;\n    vec3 normal = normalize(cross(vec3(x3, y3, z3) - vec3(x2, y2, z2), vec3(x, y, z) - vec3(x2, y2, z2)));\n    if(normal.z < 0.0) {\n        normal = -normal;\n    }\n    float shade = max(dot(normal, vec3(1.0, -1.0, 1.0)), 0.0);\n    c = color * clamp(shade, 0.1, 1.0);\n}\n\n// Rotate\nvec3 yRotate(float theta, float x, float y, float z, float x2, float z2) {\n    x -= x2;\n    z -= z2;\n    float rotation = atan(z / x) + theta;\n    float distance = dist(x, z, 0.0, 0.0);\n    return vec3(x2 + cos(rotation) * distance, y, z2 + sin(rotation) * distance);\n}\nvec3 xRotate(float theta, float x, float y, float z, float y2, float z2) {\n    y -= y2;\n    z -= z2;\n    float rotation = atan(z / y) + theta;\n    float distance = dist(y, z, 0.0, 0.0);\n    return vec3(x, y2 + cos(rotation) * distance, z2 + sin(rotation) * distance);\n}\nvec3 zRotate(float theta, float x, float y, float z, float y2, float x2) {\n    y -= y2;\n    x -= x2;\n    float rotation = atan(x / y) + theta;\n    float distance = dist(x, y, 0.0, 0.0);\n    return vec3(x2 + cos(rotation) * distance, y2 + sin(rotation) * distance, z);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec3 backRight = yRotate(iTime, 100.0, 0.0, 50.0, 0.0, 0.0);\n    vec3 backLeft = yRotate(iTime, -100.0, 0.0, 50.0, 0.0, 0.0);\n    vec3 frontRight = yRotate(iTime + PI, 100.0, 0.0, 50.0, 0.0, 0.0);\n    vec3 frontLeft = yRotate(iTime + PI, -100.0, 0.0, 50.0, 0.0, 0.0);\n    triRaster(\n        150.0 + backRight.x, 100.0, 200.0 + backRight.z,\n        150.0 + backLeft.x, 100.0, 200.0 + backLeft.z,\n        150.0 + backLeft.x, 300.0, 200.0 + backLeft.z,\n        vec3(1.0, 0.0, 0.0)\n    );\n    triRaster(\n        150.0 + backLeft.x, 300.0, 200.0 + backLeft.z,\n        150.0 + backRight.x, 100.0, 200.0 + backRight.z,\n        150.0 + backRight.x, 300.0, 200.0 + backRight.z,\n        vec3(0.0, 0.0, 1.0)\n    );\n    triRaster(\n        150.0 + frontRight.x, 100.0, 200.0 + frontRight.z,\n        150.0 + frontLeft.x, 100.0, 200.0 + frontLeft.z,\n        150.0 + frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        vec3(1.0, 1.0, 0.0)\n    );\n    triRaster(\n        150.0 + frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        150.0 + frontRight.x, 100.0, 200.0 + frontRight.z,\n        150.0 + frontRight.x, 300.0, 200.0 + frontRight.z,\n        vec3(1.0, 0.0, 1.0)\n    );\n    triRaster(\n        150.0 + backRight.x, 100.0, 200.0 + backRight.z,\n        150.0 + frontLeft.x, 100.0, 200.0 + frontLeft.z,\n        150.0 + frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        vec3(1.0, 1.0, 1.0)\n    );\n    triRaster(\n        150.0 + frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        150.0 + backRight.x, 100.0, 200.0 + backRight.z,\n        150.0 + backRight.x, 300.0, 200.0 + backRight.z,\n        vec3(0.0, 1.0, 0.0)\n    );\n    triRaster(\n        150.0 + frontRight.x, 100.0, 200.0 + frontRight.z,\n        150.0 + backLeft.x, 100.0, 200.0 + backLeft.z,\n        150.0 + backLeft.x, 300.0, 200.0 + backLeft.z,\n        vec3(0.0, 1.0, 1.0)\n    );\n    triRaster(\n        150.0 + backLeft.x, 300.0, 200.0 + backLeft.z,\n        150.0 + frontRight.x, 100.0, 200.0 + frontRight.z,\n        150.0 + frontRight.x, 300.0, 200.0 + frontRight.z,\n        vec3(1.0, 0.6, 0.6)\n    );\n\n    triRaster(\n        250.0 - backRight.x, 100.0, 200.0 + backRight.z,\n        250.0 - backLeft.x, 100.0, 200.0 + backLeft.z,\n        250.0 - backLeft.x, 300.0, 200.0 + backLeft.z,\n        vec3(1.0, 0.0, 0.0)\n    );\n    triRaster(\n        250.0 - backLeft.x, 300.0, 200.0 + backLeft.z,\n        250.0 - backRight.x, 100.0, 200.0 + backRight.z,\n        250.0 - backRight.x, 300.0, 200.0 + backRight.z,\n        vec3(0.0, 0.0, 1.0)\n    );\n    triRaster(\n        250.0 - frontRight.x, 100.0, 200.0 + frontRight.z,\n        250.0 - frontLeft.x, 100.0, 200.0 + frontLeft.z,\n        250.0 - frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        vec3(1.0, 1.0, 0.0)\n    );\n    triRaster(\n        250.0 - frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        250.0 - frontRight.x, 100.0, 200.0 + frontRight.z,\n        250.0 - frontRight.x, 300.0, 200.0 + frontRight.z,\n        vec3(1.0, 0.0, 1.0)\n    );\n    triRaster(\n        250.0 - backRight.x, 100.0, 200.0 + backRight.z,\n        250.0 - frontLeft.x, 100.0, 200.0 + frontLeft.z,\n        250.0 - frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        vec3(1.0, 1.0, 1.0)\n    );\n    triRaster(\n        250.0 - frontLeft.x, 300.0, 200.0 + frontLeft.z,\n        250.0 - backRight.x, 100.0, 200.0 + backRight.z,\n        250.0 - backRight.x, 300.0, 200.0 + backRight.z,\n        vec3(0.0, 1.0, 0.0)\n    );\n    triRaster(\n        250.0 - frontRight.x, 100.0, 200.0 + frontRight.z,\n        250.0 - backLeft.x, 100.0, 200.0 + backLeft.z,\n        250.0 - backLeft.x, 300.0, 200.0 + backLeft.z,\n        vec3(0.0, 1.0, 1.0)\n    );\n    triRaster(\n        250.0 - backLeft.x, 300.0, 200.0 + backLeft.z,\n        250.0 - frontRight.x, 100.0, 200.0 + frontRight.z,\n        250.0 - frontRight.x, 300.0, 200.0 + frontRight.z,\n        vec3(1.0, 0.6, 0.6)\n    );\n\n    triRaster(\n        135.0, 256.0, 150.0,\n        37.0, 153.0, 100.0,\n        375.0, 100.0, 150.0,\n        vec3(0.5, 0.5, 1.0)\n    );\n\n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}