{"ver":"0.1","info":{"id":"4Xc3RB","date":"1716631192","viewed":72,"name":"Inside Sexy Torus","username":"omansounds","description":"The Art of Coding Ray Marching Tutorial","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarchingtorus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord- 0.5 * iResolution.xy)/iResolution.y;\n    float t = iTime * 0.2;\n    \n    vec3 ro = vec3(0, 0, -1);\n    vec3 lookat = vec3(0);\n    // field of view. smaller number makes FOV wider\n    float zoom = .5;\n    \n    vec3 f = normalize(lookat-ro),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f, r), \n        c = ro + f * zoom,\n        i = c + uv.x * r + uv.y * u,\n        rd = normalize(i-ro);\n        \n    \n    float dS, dO;\n    vec3 p;\n    \n    //loop is the ray marcher\n    for(int i=0; i<100; i++) {\n        p = ro + rd * dO;\n        //torus function\n        dS = -(length(vec2(length(p.xz) - 1., p.y)) - 0.75);\n        if(dS < 0.001) break;\n        dO += dS;\n    }\n    \n    vec3 col = vec3(0.);\n\n    if(dS < 0.001) {\n        float x = atan(p.x, p.z) + t * 0.5;              // -pi to pi\n        float y = atan(length(p.xz) - 1., p.y);\n        \n        // the whole number being multiplied adds the stripes and twists them more\n        // as long as you use whole  numbers it fits perfectly\n        // adding x twists the stripes\n        float bands = sin(y * 10. + x * 30.);\n        float ripples = sin((x * 10. - y * 30.) * 3.) * 0.5 + 0.5;\n        float waves = sin(x * 2. - y * 6. + t * 20.);\n        \n        // makes the bands harder and not smooth shading\n        float b1 = smoothstep(-0.2, 0.2, bands);\n        float b2 = smoothstep(-0.2, 0.2, bands - 0.5);\n        \n        float m = b1 * (1. - b2);\n        m = max(m, ripples * b2 * max(0., waves));\n        m += max(0., waves * 0.3 * b2);\n        \n        col += mix(m, 1.0 - m, smoothstep(-0.3, 0.3, sin(x + t)));\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}