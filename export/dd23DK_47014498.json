{"ver":"0.1","info":{"id":"dd23DK","date":"1668167125","viewed":68,"name":"BinarySplitLine","username":"Mario8664","description":"Split the area to 4 parts, and then the child area","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LAYER  6.0\n#define MAX_LAYER 6\n#define LINE_FACTOR 1.0\n\nfloat getLine(vec2 uv, vec4 range, float factor)\n{\n    vec2 realUV = (uv - range.xy) / range.zw;\n    //float d = abs(realUV.x - 0.5);\n    //d -= factor / iResolution.x;\n    //d = clamp(ceil(d), 0.0, 1.0);\n    vec2 d = abs(realUV - 0.5);\n    d -= factor / iResolution.xy;\n    d = clamp(ceil(d), 0.0, 1.0);\n    return min(d.x, d.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    int layer = min(int(floor((sin(iTime * 3.0) + 1.0) * LAYER)), MAX_LAYER);\n    \n    vec4 ranges[int(pow(2.0, float(MAX_LAYER + 1)))];\n    ranges[0] = vec4(0.0, 0.0, 1.0, 1.0);\n    int head = 0, end = 1;\n    \n    float line = 1.0;\n    vec3 c = vec3(1.0);\n\n    //recursive\n    for(int ll = 0; ll < layer; ll++)\n    {\n        int nextIndex = end;\n        for(int i = head; i < end; i++)\n        {\n            vec4 range = ranges[i];\n            float l = getLine(uv, range, pow(2.0, float(ll)) * LINE_FACTOR);\n            line = min(line, clamp(l, float(ll) / float(layer + 1), 1.0));\n            ranges[nextIndex++] = vec4(range.x, range.y, range.zw * 0.5);\n            ranges[nextIndex++] = vec4(range.x + range.z * 0.5, range.y + range.z * 0.5, range.zw * 0.5);\n        }\n        head = end;\n        end = nextIndex;\n    }\n    \n    //line = getLine(vec4(0, 0, uv), 1.0);\n    vec3 col = vec3(line);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}