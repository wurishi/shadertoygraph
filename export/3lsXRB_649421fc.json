{"ver":"0.1","info":{"id":"3lsXRB","date":"1563402842","viewed":180,"name":"bonzomatic test run #1","username":"Exca","description":"Testing bonzomatic for asm19 shader showdown.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sphere( vec3 p, vec3 pos, float d)\n{\n  return vec2(length(pos - p) - d,0.);\n}\n\nvec2 distfunc(vec3 p)\n{\n  return sphere(p, vec3( 0.,0.,20.), 1.);\n}\nconst float e = 0.0001;\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  vec2 ouv = uv;\n  \n  float t = iTime * 0.2f;\n\n  float d = length(uv);\n  \n  uv*= sin(t+uv.x*uv.y)*d;\n  \n  vec2 off1 = vec2(t,t);\n  vec2 off2 = vec2(t*0.3,t*0.5);\n  vec2 off3 = vec2(t*1.1,-t*0.9);\n  vec2 off4 = vec2(t*-0.2,t*0.1);\n  vec2 off5 = vec2(t*-1.1,t*0.9);\n  vec2 off6 = vec2(t*0.5,t*-0.45);\n  \n  \n  float n1 = texture(iChannel0,uv+off1).r;\n  float n2 = texture(iChannel0,uv+off2).r*0.9;\n  float n3 = texture(iChannel0,uv+off3).r*0.8;\n  float n4 = texture(iChannel0,uv+off4).r*0.7;\n  float n5 = texture(iChannel0,uv+off5).r*0.7;\n  float n6 = texture(iChannel0,uv+off6).r*0.5;\n  \n  float n = smoothstep(0., 1.5, (n1+n2+n3+n4+n5+n6)/5.);\n  float r = smoothstep(0.1, 0.2, n) ;\n  float g = smoothstep(-n,0.1,0.);\n  \n  vec4 c = vec4(n) + vec4(5.,0.4,0.3, 1.)*r + g*vec4(0.,1.,0.,1.);\n  \n  vec3 forward = vec3(0.,0,1.);\n  vec3 up = normalize( cross(forward, vec3(0.,1.0,0.)));\n  vec3 right = normalize(cross(up, forward));\n  float fov = 2.2;\n  vec3 dir = normalize( ouv.x * up + ouv.y*right + fov*forward);\n  \n  float base = texture(iChannel1, vec2(0.0,0.)).r;\n  \n  float ts = 0.;\n  vec3 color = vec3(0.);\n  for( int i = 0; i < 100; i++)\n  {\n    vec3 p = dir * ts;\n    p*=(1.+base);\n    p*=sin(ouv.x+n+ouv.y);\n    vec2 dist = distfunc(p);\n    ts += dist.x;\n    if(dist.x < e)\n    {\n      color = vec3(1., 1.,0.);\n      break;\n    }\n     if(t> 2000.)\n     {\n       \n       break;\n     }\n  }\n  \n  \n  fragColor = c + vec4(color,1.);\n  \n\n}","name":"Image","description":"","type":"image"}]}