{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = vec2(1.0, iResolution.y / iResolution.x) * fragCoord.xy / iResolution.xy;\n    float r = 0.025;\n    float pxSize = 1.0/iResolution.x;\n    float t = iTime;\n    float floorBounceCount = 0.0;\n    //float t = mod(iTime, 4.0*3.14159);\n    //float floorBounceCount = floor(t/3.14159);\n    vec2 p = vec2(abs(mod(t, 2.0)-1.0)*(1.0-2.0*r)+r, pow(0.5, floorBounceCount)*abs(sin(iTime))*0.45+r);\n\tfragColor = vec4(vec3(mix(0.0, 1.0, smoothstep(r, r+pxSize, length(p-uv)) )),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lt2GRR","date":"1426675574","viewed":264,"name":"Bouncing particle - shadeADay","username":"kig","description":"Figuring out how to integrate position as function of time (or rather, how to use mod and sin to fake it.)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","hack","particle"],"hasliked":0,"parentid":"","parentname":""}}