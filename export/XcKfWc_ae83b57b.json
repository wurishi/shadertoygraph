{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\n// Shader Advent Calendar 2024, #22\n// Read article here:\n// https://github.com/mrange/shader-advent-2024/blob/main/day-22/README.md\n//\n// Basic halftone example (applied to video) - https://www.shadertoy.com/view/lfKBWV\n// Halftone dot shapes illustration          - https://www.shadertoy.com/view/lfyfRc\n// Halftone - 3 kinds                        - (this one!)\n\n\n#define ANTIALIAS 20\n#define GAMMA 2.2\n\n#define pi 3.1415926\n\nfloat hatchHalftone(vec2 uv) {\n   return 1.0 - 2. * abs(uv.y - 0.5);\n}\n\nfloat squareHalftone(vec2 uv) {\n   return 1.0 - pow(2. * max(abs(uv.x - 0.5), abs(uv.y - 0.5)), 2.0);\n}\n\nfloat warpRoundHalftone(float x) {\n    // not exact\n    float m = 3.1383226;\n    float bl = clamp(x / 0.293, 0., 1.);\n    x = (m * x - m * x * x / 2.) * mix(0.619 - x * 0.28 - x * x * 1.1 - pow(max(0., x - 0.09), 5.) * 300., 1., bl) - 0.5692 * bl;\n    return x;\n}\n        \nfloat roundHalftone(vec2 uv) {\n   // just take the distance to center and divide by diagonal\n   float x = 1.0 - length(uv - 0.5) / length(vec2(0.5, 0.5));\n   // warp for more uniform histogram\n   x = warpRoundHalftone(x); \n   return x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = (4. + 3. * cos(iTime * pi / 8.)) * 8.;\n    bool useGradient = true;\n    \n    if(iMouse.z > 0.) {\n        zoom = 120. * iMouse.x/iResolution.x;\n        useGradient = iMouse.y > iResolution.y / 2.;\n    }\n\n    float sum = 0.;\n    \n    for(int x = 0; x < ANTIALIAS; x++) {\n        for(int y = 0; y < ANTIALIAS; y++) {    \n            vec2 frag = fragCoord + vec2(x,y) / float(ANTIALIAS);\n\n            float lum = 0.;\n            if(useGradient)\n                lum = frag.x / iResolution.x; // test gradient\n            else\n                lum = texture(iChannel0, fragCoord/iResolution.xy).g;\n                \n            lum = pow(lum, GAMMA);\n            \n            vec2 gridUv = frag/iResolution.yy;\n            gridUv *= zoom;\n            float a = pi/4.;\n            gridUv = gridUv * mat2(cos(a),sin(a),-sin(a),cos(a));\n            gridUv = mod(gridUv, 1.0);\n\n            float halftone = 0.;\n            float c = lum;\n\n            \n            if(mod(5. * frag.y / iResolution.y, 1.) > 0.3)\n            {\n            \n                // additional tweak to boost lower end\n                const float ShapeLowBoost = 0.06;\n                const float ShapeLowBoostGamma = 0.45;            \n                lum += pow(lum, ShapeLowBoostGamma) * (1. - lum) * ShapeLowBoost;            \n            \n                if     (frag.y > iResolution.y * 4./5.) halftone = hatchHalftone(gridUv);\n                else if(frag.y > iResolution.y * 3./5.) halftone = squareHalftone(gridUv);\n                else if(frag.y > iResolution.y * 2./5.) halftone = 1.0 - squareHalftone(gridUv);\n                else if(frag.y > iResolution.y * 1./5.) halftone = roundHalftone(gridUv);\n                else                                    halftone = 1.0 - roundHalftone(gridUv);\n                    \n                halftone = 1.0 - halftone;\n\n                c = halftone < lum ? 1.0 : 0.0;\n            }\n            sum += c;\n         }\n     }\n     \n    sum /= float(ANTIALIAS * ANTIALIAS);\n    sum = pow(sum, 1.0 / GAMMA); // gamma correction\n          \n    fragColor = vec4(sum, sum, sum, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XcKfWc","date":"1734545587","viewed":57,"name":"Halftone - 3 kinds","username":"teadrinker","description":"when mouse button is down:\n  mouse x = halftone size\n  mouse y = image vs gradient","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["halftone"],"hasliked":0,"parentid":"lfyfRc","parentname":"Halftone dot shapes illustration"}}