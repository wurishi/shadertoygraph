{"ver":"0.1","info":{"id":"lftyzM","date":"1730420168","viewed":67,"name":"8 to 36(27) colour dither.","username":"Cotterzz","description":"Chequered dither that swaps each frame for almost imperceptible dithering.\nThere's only 27 distinct colours here though, red/white produces the same RGB as yellow/magenta, for example.\nBlack/white, red/cyan, green/magenta and blue/yellow - same gray!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["dithering","timedithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 txc = fragCoord;\n    bool yodd = false;\n    bool xodd = false;\n    bool fodd = false;\n    vec3 colours[8];\n    colours[0] = vec3(1.0, 0.0, 0.0);\n    colours[1] = vec3(0.0, 1.0, 0.0);\n    colours[2] = vec3(0.0, 0.0, 1.0);\n    colours[3] = vec3(1.0, 0.0, 1.0);\n    colours[4] = vec3(1.0, 1.0, 0.0);\n    colours[5] = vec3(0.0, 1.0, 1.0);\n    colours[6] = vec3(0.0, 0.0, 0.0);\n    colours[7] = vec3(1.0, 1.0, 1.0);\n    if (mod(txc.x, 2.) < 1.){xodd = false;}else{xodd = true;}\n    if (mod(txc.y, 2.) < 1.){yodd = false;}else{yodd = true;}\n    if (mod(float(iFrame), 2.) < 1.){fodd = false;}else{fodd = true;}\n    \n    int ca = int(floor(uv.x*7.));\n    int cb = int(floor(uv.y*8.));\n    \n    vec3 colA = colours[ca];\n    vec3 colB = colours[cb];\n    \n    vec3 col = colA;\n    //if(yodd){ col =colours[4];};\n    if(!(((yodd!=xodd)&&!fodd)||(yodd==xodd&&fodd))){\n        col=colB;\n        //if(yodd){ col =colours[1];}\n    }\n    if(ca>cb){ col = colours[7];}\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}