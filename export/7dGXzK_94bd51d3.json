{"ver":"0.1","info":{"id":"7dGXzK","date":"1634906213","viewed":266,"name":"RGB-Tunnel I (122 chars)","username":"hnh","description":"Finite code - endless joy :) \n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["simple","tunnel","short","tweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 o, vec2 u){\n//*\n// FabriceNeyret2: 122 chars\n//  o+= length(u= u/iResolution.x-.4);  // works for me -> -2 (see comments)\n    o+= length(u= u/iResolution.x-.4) - o;\n    o= 1.-3.*o*fract(atan(u.xyxx, u.yxxx)/.785-.8/o-iTime);\n//  o= 1.-o*mod(atan(u.xyxx, u.yxxx)/.262-2.4/o-iTime,3.);  // -> -1 by Xor, slower\n\n// my first attempt: 123 chars\n//    o= 1.-3.*length(u= u/iResolution.x-.4)\n//            *fract(atan(u.xyxx, u.yxxx)/.785-.8/length(u)-iTime);\n            \n/*/\n// base variant, looks slightly nicer\n    u= (u - vec2(.5,.7)*iResolution.xy)/iResolution.y;\n    float lu= length(u);\n    o= 1. - 2.*lu*fract(atan(u.xyxx, u.yxxx)*4./3.1415 - 1.6/lu - iTime);\n//*/\n}\n\n","name":"Image","description":"","type":"image"}]}