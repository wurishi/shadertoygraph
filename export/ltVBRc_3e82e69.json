{"ver":"0.1","info":{"id":"ltVBRc","date":"1543498766","viewed":577,"name":"rotation of mandelbrot","username":"CynicRus","description":"Just experiment","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","rotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define maxiter 250\n#define m1 1.0\n#define m2 0.9\n#define r1 0.5\n#define r2 0.5\n#define v1 0.5\n#define v2 0.95\n\nvoid rotate (inout vec2 vertex, float rads)\n{\n  mat2 tmat = mat2(cos(rads), -sin(rads),\n                   sin(rads), cos(rads));\n \n  vertex.xy = vertex.xy * tmat;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    rotate(uv,0.35 * iTime);\n    vec2 z = vec2(0.0, 0.0);\n\tfloat p = 0.0;\n\tfloat dist = 0.0;\n\tfloat x1 = tan(iTime*v1)*r1;\n\tfloat y1 = sin(iTime*v1)*r1;\n\tfloat x2 = tan(iTime*v2)*r2;\n\tfloat y2 = sin(iTime*v2)*r2;\n\tfor (int i=0; i<maxiter; ++i)\n\t{\n\t\tz *= 2.0;\n\t\tz = mat2(z,-z.y,z.x) * z + uv;\n\t\tp = m1/sqrt((z.x-x1)*(z.x-x1)+(z.y-y1)*(z.y-y1))+m2/sqrt((z.x-x2)*(z.x-x2)+(z.y-y2)*(z.y-y2));\n\t\tdist = max(dist,p);\n\n\t}\n\tdist *= 0.0099;\n\tfragColor = vec4(dist/0.3, dist*dist/0.03, dist/0.112, 1.0);\n}","name":"Image","description":"","type":"image"}]}