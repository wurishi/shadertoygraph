{"ver":"0.1","info":{"id":"Mcs3W8","date":"1703029104","viewed":14,"name":"Logarithmische Spirale 2","username":"Krypta_Offiziell","description":"Raumzeitlich nach innen gerichtet","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["deutschland"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(vec2 v, float a) {\n    float s = sin(a);\n    float c = cos(a);\n    mat2 m = mat2(c, s, -s, c);\n    return m * v;\n}\n\nfloat distToLine(vec2 point, vec2 lineOffs, vec2 lineVec) {\n    float mina = (-lineVec.x * (lineOffs.x - point.x) - lineVec.y * (lineOffs.y - point.y))\n                / (lineVec.x * lineVec.x + lineVec.y * lineVec.y);\n                    \n    return sqrt(pow(lineVec.x * mina + lineOffs.x - point.x, 2.0) +\n                pow(lineVec.y * mina + lineOffs.y - point.y, 2.0));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 lineOffs = vec2(0.0, 0.0);\n    vec2 lineVec = rotate(vec2(2.0, 1.0), iTime);\n\n    vec2 uv = 2.0 * (fragCoord / iResolution.xy - 0.5);\n    uv.x /= iResolution.y / iResolution.x;\n\n    float len = 0.5 * abs(cos(iTime)) * ((sin(14.0 * abs(sin(iTime) * 10.0) * length(uv))) + 1.0);\n    len = round(len);\n    \n    if (distToLine(uv, lineOffs, lineVec) <= 0.01)\n        fragColor = vec4(1.0, 0.0, 0.0, 1.0); \n    else\n        fragColor = vec4(len, len, len, 1.0); \n}\n","name":"Image","description":"","type":"image"}]}