{"ver":"0.1","info":{"id":"Mly3Wy","date":"1476744481","viewed":809,"name":"Visualizer","username":"blankensmith","description":"First shader","likes":5,"published":1,"flags":2,"usePreview":0,"tags":["raymarching","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime+100.0;\n\tfloat amp = texture(iChannel0, vec2(0.1, 0.0)).x ;\n    \n    vec2 uv = -0.5 + fragCoord.xy / iResolution.xy ;\n    uv.x *= iResolution.x / iResolution.y ;\n    \n    vec3 lightDirection = normalize(vec3(sin(amp * 10.0), cos(amp * 10.0), sin(amp*10.0)));\n    vec3 color = vec3(0.0, 0.0, 0.0);\n    float sphereRadius = 1.0;\n    vec3 spherePosition = vec3(0.0, 0.0, 0.0);\n    \n    vec3 ro = vec3(0.0, 0.0, -5.0);\n    vec3 rd = normalize(vec3(uv, -2.0) - ro);\n    float dist;\n    for (int i = 0; i < 200; i++) {\n        float index = float(i) / 200.0;\n        float amp = texture(iChannel0, vec2(index, 0.0)).x ;    \n        dist = distance(ro, spherePosition) - sphereRadius * amp;\n        //ro += mix(cos(105.0*rd+t), sin(40.0*amp*rd+t), sin(t));\n        ro += mix(cos(rd*t), sin(rd), sin(t + 100.0) * amp);\n        if ( dist <  0.001 ) {\n            vec3 normal = normalize(spherePosition - ro);\n            rd = reflect(rd, normal);\n            color = vec3(uv * 4.0, 0.1) * dot(lightDirection, rd);\n            break;   \n        }\n        ro += rd * dist * 0.95;   \n    }\n    if (dist > 0.001) {\n        //Change background\n        //color = texture(iChannel2, uv).rgb;\n    }\n    fragColor = vec4(color, 1.0);\n/*    \n    if (distance(uv, vec2(0.0, 0.0)) > 0.5 / amp) {\n        fragColor = vec4(sin(amp * 10.0) * 0.5, 1.0, sin(amp * 10.0) * 0.5, 1.0);\n    } else {\n        fragColor = vec4(uv,0.5+0.5*sin(amp),1.0);    \n    }\n*/\n}\n\n","name":"Image","description":"","type":"image"}]}