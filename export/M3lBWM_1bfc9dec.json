{"ver":"0.1","info":{"id":"M3lBWM","date":"1728567066","viewed":20,"name":"Flickering fire","username":"barjin","description":"Uses old-school fire simulation technique as described at https://web.archive.org/web/20160418004150/http://freespace.virgin.net/hugo.elias/models/m_fire.htm","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["basic","fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Define (temperature -> color) mapping with gradient \"keypoints\"\n    mat4x4 gradient;\n    \n    gradient[0] = vec4(0.0);\n    gradient[1] = vec4(0.0);\n    gradient[2] = vec4(1.0, 0.0, 0.0, 1.0);\n    gradient[3] = vec4(1.0, 1.0, 0.0, 1.0);\n\n    // Take the pixel temperature\n    fragColor = texture(iChannel0, uv);\n    \n    // Pick the right color based on the pixel temperature\n    if(fragColor.x < 0.25) {\n        fragColor = mix(gradient[0], gradient[1], fragColor.x);\n    } else if (fragColor.x < 0.50) {\n        fragColor = mix(gradient[1], gradient[2], fragColor.x);\n    } else {\n        fragColor = mix(gradient[2], gradient[3], fragColor.x);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // by default, all pixels have 0 temperature\n    fragColor = vec4(0.0);\n    \n    float diff = 0.005;\n    \n    // convection (spreading heat) based on convolution mask \n    // (heat rises, so each pixel's temperature is calculated as average of the pixels below)\n    fragColor = (\n        texture(iChannel0, vec2(uv.x, uv.y-diff)) + \n        texture(iChannel0, vec2(uv.x, uv.y)) + \n        texture(iChannel0, vec2(uv.x-diff, uv.y-diff)) + \n        texture(iChannel0, vec2(uv.x+diff, uv.y-diff))\n    ) / 4.0;\n  \n   // each pixel cools down based on the moving pebble texture, creating uneven pulses of flame\n    fragColor *= 1.0 - (0.08 * texture(iChannel1, vec2(uv.x, uv.y + iTime)).x);\n   \n   // moving source of heat\n    if(uv.y < 0.04 && uv.y > 0.01) {\n        if(distance(((sin(iTime) + 1.0) / 5.0) + 0.25, uv.x) < 0.01) {\n            fragColor = vec4(1.0);\n        }\n    }    \n}","name":"Buffer A","description":"","type":"buffer"}]}