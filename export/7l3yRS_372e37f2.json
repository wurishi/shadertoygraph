{"ver":"0.1","info":{"id":"7l3yRS","date":"1660011553","viewed":80,"name":"autogen 68","username":"asynth","description":"Generated by a program written in Rust.\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = repeat_3(uv, 0.7357);\n\tvec3 a1 = noise(uv, vec2(1.328333, 3.358945), 0.827556);\n\treturn a1;\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.9998, 0.9154), bi(vec3(length(uv))).xy);\n\treturn node_1(uv);\n}\n\nvec3 node_3(vec2 uv) {\n\tuv = (mat2(1.2763,-1.0608,1.1354,1.2319)*(uv-vec2(0.3963,-0.9256)+vec2(0.3963,-0.9256)));\n\tvec3 a1 = vec3(0.5470, 0.0700, 0.1619);\n\tvec3 a2 = vec3(0.1582, 0.4203, 0.7142);\n\tvec3 a3 = mix2(uv, vec3(0.7466, 0.2111, 0.8296), vec3(0.6109, 0.2556, 0.2477), vec3(0.0458, 0.9781, 0.2291), vec3(0.1217, 0.7603, 0.3709));\n\treturn sigmoid(bi(pthresh(0.7193, mod(vec3(uv.y), quant(vec3(atan(uv.y, uv.x)), vec3(atan(uv.y, uv.x)))), pthresh(0.1053, a1, vec3(uv.y), a2), max(a3, vec3(uv.y)))));\n}\n\nvec3 node_4(vec2 uv) {\n\tuv = repeat_4(uv, 0.1148);\n\treturn abs(node_3(uv));\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = (mat2(-0.9054,-1.3190,0.9450,-1.3251)*(uv-vec2(0.5713,0.8217)+vec2(0.5713,0.8217)));\n\tvec3 a1 = vec3(0.9151, 0.9392, 0.7796);\n\tvec3 a2 = vec3(0.2972, 0.3073, 0.7616);\n\treturn max(mod(uni(mix(a1, bi(node_2(uv)), vec3(length(uv)))), (a2 * vec3(uv.y))), sigmoid(node_4(uv)));\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = reflect_0(uv);\n\treturn (-vec3(atan(uv.y, uv.x)));\n}\n\nvec3 node_7(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.3091, 0.7007), bi((vec3(length(uv)) + vec3(length(uv)))).xy);\n\treturn vec3(uv.y);\n}\n\nvec3 node_8(vec2 uv) {\n\tvec3 a1 = noise(uv, vec2(1.79552, 0.4521211), 0.949272);\n\tuv = xywarp(uv, vec2(0.3704, 0.0974), mod(vec3(uv.y), quant(a1, node_6(uv))).xy);\n\tvec3 b1 = tri(quant(node_7(uv), vec3(uv.x))*4.9599 + 0.5159 + iTime*0.0990);\n\treturn mod(sq(min(abs(b1), vec3(atan(uv.y, uv.x)))), sq(vec3(length(uv))));\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = (mat2(-0.9867,-1.3994,-0.7201,-1.2203)*(uv-vec2(-0.7201,-0.3666)+vec2(-0.7201,-0.3666)));\n\treturn vec3(length(uv));\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = repeat_1(uv, 0.7413);\n\tvec3 a1 = noise(uv, vec2(0.7793458, 0.39154807), 0.833178);\n\treturn quant(bi(vec3(uv.y)), a1);\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = (mat2(-0.8049,-1.3029,-1.3132,-1.3885)*(uv-vec2(0.1621,-0.5970)+vec2(0.1621,-0.5970)));\n\treturn node_10(uv);\n}\n\nvec3 node_12(vec2 uv) {\n\tuv = repeat_1(uv, 0.6384);\n\treturn node_11(uv);\n}\n\nvec3 node_13(vec2 uv) {\n\tuv = repeat_1(uv, 0.5279);\n\treturn vec3(uv.x);\n}\n\nvec3 node_14(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn node_13(uv);\n}\n\nvec3 node_15(vec2 uv) {\n\tvec3 a1 = vec3(0.0724, 0.2113, 0.2028);\n\tuv = xywarp(uv, vec2(-0.1145, 0.3631), a1.xy);\n\tvec3 b1 = vec3(0.3266, 0.2770, 0.7631);\n\treturn b1;\n}\n\nvec3 node_16(vec2 uv) {\n\tuv = (mat2(-1.1836,-1.3005,-1.3966,0.9423)*(uv-vec2(0.0368,-0.2129)+vec2(0.0368,-0.2129)));\n\tvec3 a1 = sin(uni(node_14(uv))*5.4390 + 0.7845 + iTime*0.2777);\n\tvec3 a2 = tri(node_15(uv)*2.5529 + 0.5653 + iTime*0.0652);\n\treturn mix(node_12(uv), sigmoid(sq(a1)), sigmoid(a2));\n}\n\nvec3 node_17(vec2 uv) {\n\tuv = (mat2(1.0871,-1.3107,1.0758,-0.8495)*(uv-vec2(0.3995,0.3753)+vec2(0.3995,0.3753)));\n\treturn vec3(length(uv));\n}\n\nvec3 node_18(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(atan(uv.y, uv.x));\n}\n\nvec3 node_19(vec2 uv) {\n\tuv = (mat2(0.8722,-1.0181,1.4053,1.1488)*(uv-vec2(0.4224,0.0746)+vec2(0.4224,0.0746)));\n\tvec3 a1 = mix2(uv, vec3(0.1956, 0.1143, 0.4239), vec3(0.2671, 0.7505, 0.3550), vec3(0.5416, 0.5926, 0.7113), vec3(0.2216, 0.8990, 0.3586));\n\tvec3 a2 = tri(pthresh(0.6049, uni(mod(vec3(uv.y), node_17(uv))), mod(a1, vec3(uv.x)), vec3(atan(uv.y, uv.x)))*3.3698 + 0.5262 + iTime*0.1102);\n\treturn mix(vec3(uv.x), abs(a2), node_18(uv));\n}\n\nvec3 node_20(vec2 uv) {\n\tvec3 a1 = vec3(0.5946, 0.7044, 0.3743);\n\tvec3 a2 = mix2(uv, vec3(0.5571, 0.1818, 0.5229), vec3(0.9529, 0.1982, 0.4334), vec3(0.1948, 0.3806, 0.6179), vec3(0.6987, 0.0464, 0.7615));\n\tvec3 a3 = tri(node_19(uv)*4.5113 + 0.1124 + iTime*0.3842);\n\tvec3 a4 = sin(a3*4.7983 + 0.8559 + iTime*0.3023);\n\tvec3 a5 = noise(uv, vec2(0.13699792, 0.36215165), 0.533429);\n\tuv = xywarp(uv, vec2(-0.9388, -0.2311), mix(mix(node_9(uv), a1, vec3(length(uv))), quant(a2, (-mod(node_16(uv), vec3(uv.y)))), mix(vec3(length(uv)), a4, (-a5))).xy);\n\tvec3 b1 = noise(uv, vec2(1.9322507, 0.2332861), 0.195553);\n\tvec3 b2 = vec3(0.5653, 0.4973, 0.0353);\n\tvec3 b3 = sin((-(-max(vec3(length(uv)), b2)))*5.1826 + 0.5873 + iTime*0.1334);\n\treturn min(b1, b3);\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = sin(max(min(max(vec3(uv.y), vec3(atan(uv.y, uv.x))), vec3(atan(uv.y, uv.x))), vec3(length(uv)))*3.0087 + 0.5990 + iTime*0.2946);\n\tvec3 a2 = mix2(uv, vec3(0.4906, 0.9940, 0.2446), vec3(0.8123, 0.7913, 0.6535), vec3(0.6480, 0.9631, 0.3078), vec3(0.1144, 0.2368, 0.6024));\n\tvec3 a3 = mix2(uv, vec3(0.0078, 0.8194, 0.9903), vec3(0.4518, 0.0970, 0.8348), vec3(0.5306, 0.4775, 0.9129), vec3(0.1366, 0.6131, 0.2574));\n\treturn max(mod(mix(a1, sigmoid(node_5(uv)), bi(vec3(uv.x))), mix((-a2), mod(vec3(atan(uv.y, uv.x)), a3), vec3(uv.y))), mod(uni(node_8(uv)), node_20(uv)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}