{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//Noise and hash function from Clouds by iq, https://www.shadertoy.com/view/XslGRr\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat threshold = 0.5;\n\tfloat lag = 0.2;\n\tfloat s = 1.0;\n\t\n\t//Some offsets make the screen flicker?!?!?!\n\tfloat time = iTime+1.1;\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec3 point;\n\tpoint.r = noise(vec3(uv*s, time));\n\tpoint.g = noise(vec3(uv*s, time-lag));\n\tpoint.b = noise(vec3(uv*s, time-2.0*lag));\n\t\n\tfragColor = vec4(0.0,0.0,0.0,1.0);\n\t\n\t//Threshold\n\tif(point.r >= threshold){\n\t\tfragColor.r = 1.0;\n\t}\n\tif(point.g >= threshold){\n\t\tfragColor.g = 1.0;\n\t}\n\tif(point.b >= threshold){\n\t\tfragColor.b = 1.0;\n\t}\n\t\n\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldfGWr","date":"1367217824","viewed":279,"name":"Technicolor Swirl","username":"roboprez","description":"Puting a threshold on shifting noise.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","threshold","color"],"hasliked":0,"parentid":"","parentname":""}}