{"ver":"0.1","info":{"id":"ft2fD3","date":"1652843283","viewed":87,"name":"Camembert","username":"Jelly","description":"Camembert","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float x) { return clamp(x, 0.0f, 1.0f); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 uvCenter = uv * 2.0f - 1.0f;\n    uvCenter.x *= iResolution.x / iResolution.y;\n    uvCenter = vec2(uvCenter.x, -uvCenter.y);\n        \n    float angle = atan(uvCenter.x, uvCenter.y);\n    angle /= 3.1415926535897f;\n    angle = angle * 0.5f + 0.5f;\n\n    // Animate the angle\n    float circleAnim = -angle + fract(-iTime * 0.5f /*speed */);\n    //circleAnim *= length(uvCenter);\n    \n    // Distance to center of circle\n    float circleDistance = length(uvCenter);\n\n    vec3 screenCol = vec3(0, 0, 0);//texture(iChannel0, uv).rgb;\n    vec3 innerCol = vec3(1, 1, 0);\n    vec3 bordelCol = vec3(1, 0, 0);\n    vec3 bgCol = vec3(0.2, 0.2, 0.2);\n    \n    float borderSize = 0.99;\n    \n    vec3 final = mix(screenCol, bgCol, step(circleDistance, 1.0));\n    final = mix(final, innerCol, (circleAnim <= 0.0f ? 1.0 : 0.0) * step(circleDistance, 1.0));\n\n    final = mix(bgCol, innerCol, circleAnim <= 0.0f ? 1.0 : 0.0);//step(circleDistance, borderSize));\n    final = mix(bordelCol, final, step(circleDistance, borderSize));\n    final = mix(screenCol, final, step(circleDistance, 1.0));\n\n#if 0\n    // Compositing\n    vec3 innerColor1 = vec3(0.8, 0.8, 0);\n    vec3 innerColor2 = vec3(0, 0, 0.8);\n    vec3 innerColor = vec3(1, 1, 0);// mix(innerColor1, innerColor2, cos(circleDistance * 40.0 - iTime * 5.0) * 0.5 + 0.5);\n\n    vec3 borderColor = vec3(0.8, 0, 0);\n    \n    float circleFactor = saturate(saturate(circleDistance) - 0.98) / (1.0 - 0.98);\n    //circleFactor += circleAnim <= 0.0f ? 0.0f : 1.0f;\n    circleFactor = saturate(100.0f * circleFactor);\n    \n    vec3 circleColor = mix(innerColor, borderColor, circleFactor);\n    circleColor = mix(circleColor, vec3(0), saturate(circleAnim <= 0.0f ? 0.0f : circleAnim * 5000.0f));\n\n    vec3 bgColor = vec3(0.15, 0.15, 0.15);\n    bgColor = texture(iChannel0, uv).rgb;\n\n    float bgFactor = saturate(1000.0 * (circleDistance - 1.0));\n    //bgFactor += circleAnim <= 0.0f ? 0.0f : saturate(circleAnim * 10.0f);\n    //bgFactor = saturate(bgFactor);\n\n    vec3 final = mix(circleColor, bgColor, bgFactor);\n#endif\n\n    // Output to screen\n    fragColor = vec4(final, 1);\n}","name":"Image","description":"","type":"image"}]}