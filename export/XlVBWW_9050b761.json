{"ver":"0.1","info":{"id":"XlVBWW","date":"1542565628","viewed":172,"name":"Cross of Light","username":"GabrieleGiuseppini","description":"This shader simulates the flash of light that typically accompanies spaceships exploding in space. It is centered with the mouse.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["explosionflash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float progress = mod(iTime, 1.0) - 0.5; // (-0.5, 0.5]\n\n    // Calculate fragment's coordinates in the NDC space\n    vec2 centeredFragCoord = fragCoord.xy - iResolution.xy / 2.0;\n    vec2 ndc = vec2(\n        centeredFragCoord.x / iResolution.x,\n        centeredFragCoord.y / iResolution.y) * 2.0;\n\n    vec2 centerPosition = iMouse.xy - iResolution.xy / 2.0;\n    vec2 centerNdc = vec2(\n        centerPosition.x / iResolution.x,\n        centerPosition.y / iResolution.y) * 2.0;\n    \n    // Center\n    ndc = vec2(ndc.x - centerNdc.x, centerNdc.y - ndc.y);\n\n    // ------------------    \n    \n    vec2 rotNdc = ndc;\n    \n    progress = pow(abs(progress), 3.0);\n        \n    // Calculate tapering along each arm\n    float taperX = pow(100000.0 * abs(rotNdc.x), 1.6) * progress;\n    float taperY = pow(100000.0 * abs(rotNdc.y), 1.6) * progress;\n    \n    // Calculate width along arm\n    float sx = max(0.0, (1.0-rotNdc.x * rotNdc.x * taperY));\n    float sy = max(0.0, (1.0-rotNdc.y * rotNdc.y * taperX));\n    float alpha = (sx + sy) / 2.0;\n\n    fragColor = vec4(alpha, alpha, alpha, 1.0);\n}","name":"Image","description":"","type":"image"}]}