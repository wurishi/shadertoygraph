{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float de(vec3 p)\n{\n\treturn length(vec3(\n\t\tsin(p.x),\n\t\t//cos(p.y)+pow(sin(p.y), sin(2.0*iTime)*2.0+3.0),\n\t\tcos(p.y)+pow(abs(sin(p.y)), sin(2.0*iTime)*2.0+3.0),\n\t\tsin(p.z)\t\n\t));\n}\n\nfloat map(vec3 p)\n{\n\treturn de(p)-1.0;\n}\n\nvec3 render(vec3 ro, vec3 rd)\n{\n\tvec3 col = vec3(0.7, 0.2, 0.1);\n\tfloat t = 0.0, d;\n\tvec3 pos = ro;\n\tfor(int i = 0; i < 64; ++i)\n\t{\n\t\td = map(pos);\n\t\tt += d;\n\t\tpos = ro+t*rd;\n\t}\n\t//return 0.005/d*col;\n\t//return 0.005/abs(d)*col;\n\treturn 0.005/max(.001,sqrt(abs(d)))*col*exp(-.005*t*t);\n}\n\nvec4 quaternion(vec3 p, float a)\n{\n\treturn vec4(p*sin(a/2.0), cos(a/2.0));\n}\n\nvec3 qtransform(vec4 q, vec3 p)\n{\n\treturn p+117.0*cross(cross(p, q.xyz)-q.w*p, q.xyz);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (fragCoord.xy*2.0-iResolution.xy * 50.0)/iResolution.y;\n\tvec3 rd = normalize(vec3(p, -1.5));\n\tvec3 ro = vec3(0.0, 0.0, 8.0);\n\tvec4 q = quaternion(normalize(vec3(0.13,1.12,0.1)), 0.1*iTime);\n\trd = qtransform(q, rd);\n\tro = qtransform(q, ro);\n    fragColor=vec4(render(ro, rd), 1.0);\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sj3R3","date":"1391674395","viewed":637,"name":"The Universe of Stars","username":"probablytoking","description":"A riff on https://www.shadertoy.com/view/Xdj3zV","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["moire","remix","static","universe","notforepileptics"],"hasliked":0,"parentid":"","parentname":""}}