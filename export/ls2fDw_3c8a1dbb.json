{"ver":"0.1","info":{"id":"ls2fDw","date":"1500752236","viewed":2700,"name":"Quick color picker","username":"dcbrwn","description":"Radial picker for quick color access. At the momet markers drawing is too naive.\n\nClick and drag mouse to change saturation and brightness.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 HUEToRGB(float H) {\n  float R = abs(H * 6.0 - 3.0) - 1.0;\n  float G = 2.0 - abs(H * 6.0 - 2.0);\n  float B = 2.0 - abs(H * 6.0 - 4.0);\n  return clamp(vec3(R,G,B),0.0,1.0);\n}\n\nvec3 HSVToRGB(vec3 HSV) {\n  vec3 RGB = HUEToRGB(HSV.x);\n  return ((RGB - 1.0) * HSV.y + 1.0) * HSV.z;\n}\n\nvec2 toPolar(vec2 cartesian) {\n    return vec2(length(cartesian), atan(cartesian.x, cartesian.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime / 3.0;\n    vec3 color = vec3(mod(t, 1.0), iMouse.x / iResolution.x, iMouse.y / iResolution.y);\n    float epsilon = 0.01;\n    vec3 markerColor = vec3(1.0);\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    uv.x -= 0.40;\n    vec2 p = toPolar(uv - 0.5);\n    float angle = 1.0 - abs(p.y / 3.14);\n    if (p.x < 0.2) {\n        // Draw color\n        fragColor.rgb = HSVToRGB(color);\n    } else if (p.x < 0.3) {\n        // Draw value/brightness ring\n        fragColor.rgb = p.y > 0. && color.z > angle - epsilon && color.z < angle + epsilon \n            ? markerColor\n            : HSVToRGB(vec3(color.x, color.y, abs(angle)));\n    } else if (p.x < 0.4) {\n        // Draw saturation ring\n        fragColor.rgb = p.y > 0. && color.y > angle - epsilon && color.y < angle + epsilon \n            ? markerColor\n            : HSVToRGB(vec3(color.x, abs(angle), 1.0));\n    } else if (p.x < 0.5) {\n        // Draw hue ring\n        float hue = (3.14 + p.y) / 6.28;\n        fragColor.rgb = color.x > hue - epsilon / 3.14 && color.x < hue + epsilon / 3.14\n            ? markerColor\n            : HSVToRGB(vec3(hue, 1.0, 1.0));\n    } else {\n        // Draw background\n\t\tfragColor = vec4(0.0);\n    }\n}","name":"Image","description":"","type":"image"}]}