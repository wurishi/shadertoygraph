{"ver":"0.1","info":{"id":"wtBfRm","date":"1598545718","viewed":355,"name":"Polar Weave Pattern - simple","username":"FabriceNeyret2","description":"reproducing another way the base pattern of [url]https://www.shadertoy.com/view/3ljfR1[/url]\n\nchange s = 2Pi / N by any N you like\n\n( golfed here: [url]https://www.shadertoy.com/view/3l2fzw [/url] )","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["2d","repetition","pattern","polar","short","weave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// reproducing another way the base pattern of https://www.shadertoy.com/view/3ljfR1\n\n#define D U = l *cos(a + vec2(0,11)) ;                                         \\\n          d = abs( length(U-vec2(r,0)) - r*sin(s/2.)); /* dist in ribbon    */ \\\n          m = clamp(1.- R.y/4.* (d-.1),0.,1.);         /* antialiased mask  */ \\\n          O += T * m * min( 1.+.5*cos(2e2*d), 1.);     /* pattern in ribbon */ \\\n       /*        *( .7 + .3* cos(atan(U.y,U.x-r)) );    */                     \\\n          T *=   1.-m                                  /* for blending      */\n              \nvoid mainImage( out vec4 O,  vec2 u )\n{\n    O -= O;\n    vec2  R = iResolution.xy,\n          U = 2.*u - R;\n    float s = 6.28/8., r=.5, d, m, T = 1.,\n          a = mod( atan(U.y,U.x) + iTime/2. , s ), // wrap all to main 1/8 pie slice\n          l = length(U) / R.y,                     // \n          L = l * cos(a-s/2.) / cos(s/2.);         // line between 2 disks center\n                \n    a -= L > r ? s : 0.;               // at crossing, decide which pie win (i.e. is on top)\n    D;                                 // draw ribbon \n\n    a += L > r ? s : -s;               // same for background slice\n    D;\n // O.b += float(L<r);  O.r -= M;      // for debug\n\n}","name":"Image","description":"","type":"image"}]}