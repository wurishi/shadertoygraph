{"ver":"0.1","info":{"id":"3tsyW7","date":"1592230445","viewed":399,"name":"[4k] Golden Path  FP 2020 invtro","username":"LIA","description":"4kb intro \"Golden Path\" by LIA, awarded 1st place at @Party online 2020\ncode by Kali - music by Uctumi\nInvitation to Flashparty Online 2020 - http://flashparty.dx.am/\nBest viewed full screen because of aliasing","likes":19,"published":1,"flags":96,"usePreview":0,"tags":["intro","4k","demoscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*        ___.                       ___            .___ ___________\n,___ _\\(   |._____________ __. __\\(__/___. ______\\|_  \\\\          )_. ________,\n|%%% |     ||            //  |/          |/        /                | %%%%%%%%|\n|%%% |    _||                |           |        _                 | %%%%%%%%|\n|'_ _|    \\                 _|          _|        |                 |_ _ `%%%%|\n .\\)\\_______________________)|__________)|________|__________________/(/.\n<------------------------------------------------------------------------diP->>\n         l a t i t u d e  i n d e p e n d e n t  a s s o c i a t i o n\n<<---------------------------------------------------------------------------->\n\n                                     L.I.A.\n\n                                    presents\n\n                            a 4KB PC (Windows) intro\n\n                                     titled\n\n                                  \"Golden Path\"\n\n                            (Flashparty 2020 invtro)\n\n--------------------------------- Release Info --------------------------------\n\n\n                                 code by: Kali\n                                 music by: Uctumi\n\n\n   We made this intro for @Party demoparty to be released on june 13, 2020.\n   We wanted to create a cool piece but also to make an invitation for\n   Flashparty  2020 oline that will take place july 17-18 and will be the\n   first Latin American online demoparty ever.\n   For more info check http://flashparty.dx.am\n\n   Uctumi says music for this intro was inspired on the argentine tracker\n   musician (G)eorge's track 'ZiKiT'. Be sure to check his awesome tracks\n   and the FEDCON group modules from the 90's.\n\n   Kali wishes to specially thank his daughter Melina for emotional support\n   during the covid-19 isolation.\n\n----------------------------------- News --------------------------------------\n\n\n   We're happy to welcome our new members: Foco and Pixel Syndrome!\n\n   Foco is a musician who worked on the soundtrack for accelerated demo\n   'Sacrificio' awarded 2nd place at Flashparty 2019 accelerated demo compo\n   and the soundtrack for the Gameboy demo 'Merk√©n' that was\n   awarded 2nd place at Revision 2020 online oldschool demo compo.\n   He also created music for videogames such as\n   Jamestown, Gunpoint, Witchmarsh, Save The Date!, Omen of Sorrow,\n   Protocorgi, After Death, Frog Fractions 2\n   More info: http://www.cerdamusic.com/\n\n   Pixel Syndrome is a graphic artist who has been creating magnificent\n   illustrations for the chiptune scene Retro Modding game publisher\n   and the game Slime Battles as well as dabbling as a journalist\n   interviewing music artists for renowed chiptune blogs and being\n   awarded for pixel art and animation in Flashparty 2019.\n   More info: https://www.instagram.com/pixel.syndrome/\n\n   We want to specially thank Dipswitch for creating awesome ascii logos\n   for our info file and file_id.diz!\n\n\n----------------------------------- Members -----------------------------------\n\n\n            Bitnenfer - Foco - Kali - Pixel Syndrome - Riq - Uctumi\n\n\n----------------------------------- Contact -----------------------------------\n\n\n                         http://liagroup.is-great.org\n\n\n---------------------------------- Greetings ----------------------------------\n\n\n                     To all fellow demosceners of the world!\n            Specially: PVM - Hokuto Force - Azop - Christian Kleinhus\n                          Dipswitch - QOP - JPupper\n\n\n-------------------------------------------------------------------------------\n\n\n\n                        Signing off... The LIA crusaders\n\n*/\n\n#define o iChannel0\nvoid mainPost(out vec4 i)\n{\n   vec2 uv=gl_FragCoord.xy/iResolution.xy,d=vec2(0.,1.5/iResolution.xy);\n   i=.2*(texture(o,uv)+texture(o,uv+d.xy)+texture(o,uv+d.yx)+texture(o,uv-d.xy)+texture(o,uv-d.yx));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainPost(fragColor);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"MtB3zc","filepath":"https://soundcloud.com/uctumi/golden-path","previewfilepath":"https://soundcloud.com/uctumi/golden-path","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define iT iChannelTime[0]\n//#define iT iTime\n\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat t, scene, ss=10.,c=0.,fo=5.,ro=0.;\n\nvec3 col, e=vec3(0,.01,0);\n\n\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat fold(vec3 p) {\n    for (int i=0; i<4; i++) p=abs(p*1.3)-1.;\n    return p.x*.05;\n}\n\nfloat is(float sce){\n\treturn step(abs(sce-scene),0.);\n}\n\nvec4 text() {\n\tvec2 U = gl_FragCoord.xy, R = iResolution.xy;\n    U /= R.y;\n    U.x-=.1; \n    U.y-=.44; \n    vec2 p = U*15., A, D;p.y-=.5;\n\tvec4 c = vec4(0), C=c, S = vec4(.5,-.5,1,0), V;\n    C.xy = normalize( .5 + abs( cos( 5.*(U.x+U.y)+t*3.+vec2(0,11) )));\n    p.x += max(0.,2.-t);\n    for (int l, k=22*int(step(131.,iT)+step(133.5,iT)), i=0; i<22 && k<64; i++,k++) {\n        {\n\n\t\tint A = 831,  B = 9199, D = 524519, E = 463, F = 271, H =819,  I = 3276, \n            L = 195,  M = 24627, N = 49203,  O = 255,  P = 799,  R =33567, S = 1006, T = 3084,\n            U = 243,  Y = 25600, X = 61440, l0 = 3207, l2 = 2437;\n            l = int[] ( F,L,A,S,H,P,A,R,T,Y,0,O,N,L,I,N,E,0,l2,l0,l2,l0,0,S,U,B,M,I,T,0,Y,O,U,R,0,E,N,T,R,I,E,S,0,0,0,0,0,F,L,A,S,H,P,A,R,T,Y,0,D,X,0,A,M,0,0,0)[k];}\n\n\n        float v = 1.;\n        for( int i=0; i<20; i++, l/=2 )\n            if (l%2 > 0)\n                V = vec4[](S.wwwx,S.wxwx,S.wzxw,S.xzxw,S.zxwx,S.zwwx,S.xwxw,S.wwxw,S.wxxw,S.xxxw,S.xwwx,S.xxwx,S.wwxx,S.xxxx,S.wzxy,S.xxxy,S.wxxy,S.xwxx,S.wxxx,S.xzxy)[i],\n                A = 1.3*p - V.xy, D = V.zw,\n                v = min(v,length(A-D*clamp(dot(A,D)/dot(D,D),.3,.8)));\n        c += C * pow(1.-v,10.) + pow(1.-v,15.);\n        p.x -= 1.1;\n     }\n     return c+vec4(1,1,.5,0)*(2.-smoothstep(0.,.015,length(U-vec2(.97,.04)))-smoothstep(0.,.015,length(U-vec2(1.2,.04))))*step(133.5,iT);\n}\n\n\nfloat de(vec3 p)\n{\n    p.z*=2.;\n    vec3 pp = p, ot = vec3(100);\n    float m = 100., sc = 1.;\n    p.xy*=rot((pp.z*.03+sin(p.z*.05+t/4.)*2.)*is(0.));\n    p.z+=t*is(2.),p.xy*=rot(t*is(2.)/2.);\n    p.z+=sin(p.x*.3+t*2.+p.y/2.)*2.*is(3.)+tan(t)*is(4.);\n    ro=(-t/2.+p.z*.05)*is(4.);\n    p.xy*=rot(((pp.z*.1)+t/2.)*is(5.));\n    p.xy = abs(2. - mod(p.xy, 4.));\n\tp.z=abs(fract(p.z*.25)-.5)-.5;\n    vec3 cp=p;\n    for (int i = 0; i < 4; i++) \n    {\n        p.xy = abs(p.xy + fo)-abs(p.xy - fo) - p.xy;\n        float s=ss/clamp(dot(p,p),.1,1.);\n        p = p * s - c;\n        p.xy *= rot(ro);\n        p.yz *= rot(-.5);\n        sc =sc * s;\n        ot = min(ot, abs(p.xxy)*vec3(.3,1.,1.));\n        m = min(m, abs(length(p)));\n    }\n    float f=length(p.xy)/sc-.05,o=length(cp.yz)-.1-fold(cp);\n    o=min(o,length(cp*vec3(1.,1.,1.5))-.3)+is(5.);\n    float l=length(pp.xy)+1.,d=min(l,min(f,o));\n    col = exp(-1. * ot);\n    col *= pow(2.*abs(fract(t/2.+pp.z*.05+m*.03)-.5),3.);\n    col += .3*step(o,d)+vec3(.5,.2,0)*step(l,d);\n    return d*.8;\n}\n\nvec3 normal(vec3 p) {\n\treturn normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\n\nvec3 march(vec3 from, vec3 dir) \n{\n\tfloat d=0., td = 0., ref=0., i;\n    vec3 p=from, sc = vec3(0.), g=sc, odir=dir;\n    for (i = 0.; i < 80.; i++) \n    {\n        p += dir * d;\n        d = de(p);\n        g+=col*(1.-ref*.5);\n        td += d*step(ref,0.);\n        if((d<.002 && ref>.9) || td > 20.) break;\n        if(d<.002 && ref<.1){\n            ref+=.5;\n            sc=col;\n            vec3 n=normal(p);\n\t        p+=n*.2;\n        \tdir*=reflect(dir,n);\n            //p+=dir*.1;\n        }\n    }\n    vec3 back=vec3(.8,.6,1.5)*pow(abs(dot(odir,vec3(0,0,1))),50.)*(1.-is(6.));\n    return mix(back+back*back,(col+sc+pow(g*.09,vec3(1.5))),exp(-.15*td));\n}\n\n\n\nvoid mainIntro(out vec4 o)\n{\n    vec2 uv = gl_FragCoord.xy / iResolution.xy-.5;\n    uv.x*=iResolution.x / iResolution.y;\n    t=iT;\n    scene = float[](1.,0.,1.,2.,1.,3.,4.,5.,2.,5.,6.)[int(step(7.,t)+step(25.5,t)+step(28.5,t)+step(47.,t)+step(49.5,t)+step(78.,t)+step(92.,t)+step(106.,t)+step(120.,t)+step(127.,t))];\n    t=iT*1.5;\n    vec3 dir = normalize(vec3(uv, .8)),from;\n    if (scene==0.) from = vec3(.5, .8, t*3.);\n    if (scene==1.) from = vec3(1.5, 1, t/2.),dir.xz*=rot(.3-sin(t/2.)*.3),dir.yz*=rot(.4);\n    if (scene==2.) from = vec3(1.,0.,t),dir.yz*=rot(3.),dir.xz*=rot(.5+sin(t*10.)*.02),ss=7.,c=6.,fo=1.;\n    if (scene==3.) from = vec3(2.+t, 0., 0.),dir.yz*=rot(floor(t/5.39+.25)*.45),dir.yx*=rot(t/4.),ss=50.,c=50.,fo=10.;\n    if (scene==4.) from = vec3(0., .0, t),ss=4., c=0., fo=15.;\n    if (scene==5.) from = vec3(.0, .5, t*2.), dir.yz*=rot(t/5.), ss=5., c=1., fo=6.;\n    from.x+=is(6.)*2.;\n\tvec3 col = march(from,dir);\n    col=mix(length(col)*vec3(.5),col,.6)*.6;\n    o = vec4(col,1.0)*min(1.,t)+text()*is(6.)+hash12(gl_FragCoord.xy+iT)*.15;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mainIntro(fragColor);\n}","name":"Buffer A","description":"","type":"buffer"}]}