{"ver":"0.1","info":{"id":"4fjfDw","date":"1725040953","viewed":6,"name":"3 segments... in the multiverse","username":"Elsio","description":"Distance to the Cool S shape. Inspired by [url]https://www.shadertoy.com/view/ctVSDV[/url], with 3 line segments","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","distance","s","cools"],"hasliked":0,"parentid":"clVXWc","parentname":"CoolS - distance"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define round(a) floor(a + .5)          // n√£o tem round no meu app android\n#define line(a) smoothstep(.01, .0, length(a) + cos(t * 5.) * .01 - .005) + length(a) * .5\n#define t iTime\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 p, r = iResolution.xy;\n         u = (2. * u - r) / r.y;\n         p = 1.25 * u;\n         o *= 0.;\n    \n    vec2 L1, L2, L3;    \n    float s, rex, aby, six;\n    \n    // divide x by signal y\n    six = sign(p.y) * p.x; // before abs(p)\n    \n    // others dr strange folding space\n    p = abs(p) - vec2(0,.2);\n\n    rex = p.x - min(round(p.x / .4), .4);\n    \n    aby = abs(p.y - .2) - .6;\n\n    // exterior / interior of shape\n    s = 2. * p.x + aby + abs(aby + .4) - .4;\n\n\n    L1 = vec2(six, - p.y)\n           - clamp(.5 * (six - p.y), .0, .2);\n    \n    L2 = vec2(p.x, - aby)\n           - clamp(.5 * (p.x - aby), .0, .4);\n    \n    L3 = vec2(\n           rex, p.y - clamp(p.y, .0, .4));\n    \n    //o += line(s);\n    \n    //o += line(min(length(L1), length(L3)));\n    //o += line(min(length(L2), length(L1)));\n    //o += line(min(length(L1), min(length(L3), length(L2))));\n    \n    #define trans(x, y, a, b, c) else if(T < a) o += line(mix(x, y, smoothstep(b, c, T)))\n    \n    float T = mod(t * .4, 5.5);\n    float union1 = min(length(L1), length(L2));\n    float union2 = min(union1, length(L3));\n    \n    \n    if(T < 0.5) o = vec4(0);\n    \n    trans(0., six,        1.0, 0.5, 0.6);\n    trans(vec2(six), p,   1.5, 1.0, 1.1);\n    trans(p, vec2(rex),   2.0, 1.5, 1.6);\n    trans(rex, aby,       2.5, 2.0, 2.1);\n    trans(vec2(aby), L1,  3.0, 2.5, 2.6);\n    trans(L1, L2,         3.5, 3.0, 3.1);\n    trans(L2, L3,         4.0, 3.5, 3.6);\n    trans(L3, vec2(s),    4.5, 4.0, 4.1);\n    trans(s, union1,     5.0, 4.5, 4.6);\n    trans(union1, union2, 5.5, 5.0, 5.1);\n    \n    /*\n    trans(rex, aby, 6.0, 5.5, 5.6);\n    trans(rex, aby, 6.5, 6.0, 6.1);\n    */\n    \n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}