{"ver":"0.1","info":{"id":"DsVfz1","date":"1697924501","viewed":26,"name":"Mandelbrot set simplest test","username":"dima20155","description":"Mandelbrot set visualisation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot","mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 1000\n\nvec2 complexMultiply(vec2 a, vec2 b) { return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x); }\n\n\nvec2 mandelbrot(vec2 c, float max_x, float max_y, out int iterStop, out bool outMax) {\n    outMax = false;\n    vec2 z = vec2(0.0, 0.0);\n    int iterNum = MAX_ITER;\n    for (iterStop = 0; iterStop < iterNum; iterStop++) {\n    z = complexMultiply(z, z) + c;\n        if (abs(z.x) > max_x || abs(z.y) > max_y) {\n            outMax = true;\n            break;\n        }\n    }\n    return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float plotScale = 4.;\n    uv -= 0.5;\n    uv.x -= 0.1;\n    uv *= plotScale;\n    vec2 uv_max = vec2(0.5 * plotScale);\n    \n    int lastIter = 0;\n    bool finishedOutMax = false;\n    vec2 mandelbrot = mandelbrot(uv, uv_max.x + 1., uv_max.y, lastIter, finishedOutMax);\n    \n    int colorMode = 2; // TRY ME (<> 0 - 1)\n    switch (colorMode) {\n    case 0:\n        if (finishedOutMax) {\n            fragColor = vec4(vec3(float(lastIter) / float(MAX_ITER)) * 8.0 + 0.02*abs(sin(iTime)), 1.);\n        } else {\n            fragColor = vec4(0., 0., length(mandelbrot)*(abs(sin(iTime))+1.), 1.);\n        }\n        break;\n    case 1:\n        if (finishedOutMax) {\n            fragColor = vec4(0., 0., float(lastIter) / float(MAX_ITER) * 18.0 + 0.02*abs(sin(iTime)), 1.);\n        } else {\n            fragColor = vec4(0., 0., length(mandelbrot)*0.1*(abs(sin(iTime))+1.), 1.);\n        }\n        break;\n    case 2:\n        if (finishedOutMax) {\n            fragColor = vec4(0., 0., float(lastIter) / float(MAX_ITER) * 100., 1.);\n        } else {\n            fragColor = vec4(0., 0., length(mandelbrot)*0.8, 1.);\n        }\n        break;\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}