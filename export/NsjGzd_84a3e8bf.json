{"ver":"0.1","info":{"id":"NsjGzd","date":"1653949694","viewed":96,"name":"q_interference_gradient23","username":"edwardbraed","description":"Simple gradient demo of 2D quantum interference, on 2 wave sources.\nHold mouse btn for edit wave sources position.\nRaymarch version: https://www.shadertoy.com/view/7t3GzB","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","radial","gradient","physics","interferens"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define norm(a) (a + 1.0) * 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float time = iTime * 2.0;\n    vec2 uv = fragCoord/iResolution.xy;\n    float a = iResolution.x / iResolution.y;\n    vec2 auv = vec2(uv.x * a, uv.y);\n    vec2 mid = vec2(a * 0.5, 0.5);\n    \n    vec2 coof = 1.0 / vec2(40.0);\n    vec2 p = round(auv / coof) * coof;\n    float lCoof = length(coof) * 0.25;\n    \n    vec2 mDir = mid - vec2(iMouse.x / iResolution.x * a,\n                           iMouse.y / iResolution.y);\n    \n    float r1 = lCoof * norm(sin(length(p + mDir - mid) / 0.02 - time));\n    float r2 = lCoof * norm(sin(length(p - mDir - mid) / 0.02 - time));\n    \n    // Output to screen\n    fragColor = vec4((1.0 - distance(auv, p) / (r1 + r2)) * 2.0);\n}","name":"Image","description":"","type":"image"}]}