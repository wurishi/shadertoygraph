{"ver":"0.1","info":{"id":"XclyDn","date":"1721014166","viewed":28,"name":"HW5_Koch Pattern","username":"EurekaChen","description":"Koch Pattern","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Koch Snowflake by nimitz\n//ref: https://www.shadertoy.com/view/Mlf3RX\nfloat koch(vec2 p)\n{\n    p = abs(fract(p)-0.5);\n    \n    for(int i=0;i<12;++i)\n        p = -vec2(-p.y + p.x*1.735, abs(p.x + p.y*1.735) - 0.58)*.865;\n        \n    return p.x*16.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy) / iResolution.y * 2.;\n    uv *= mat2(cos(iTime / 2.),-sin(iTime / 2.),sin(iTime / 2.),cos(iTime / 2.)) ;\n    uv /= ( 3. * sin(iTime) + 10.);\n    uv = abs(uv);\n    uv = clamp(uv, -.55, .55);\n\n    \n    vec3 col = vec3(1.);\n    vec2 p = uv;\n    float scale = 1.;\n    for(int i=1; i<=6; i++)\n    {\n        float rz = koch(p.xy + vec2(0.5, 0));\n        col *= (step(0.0, rz) * 2. - 1.);\n        p = p.yx;\n        //p.y -= 1.732 * scale;\n        p *= 1.732; scale *= 1.732;\n        col -= (.5 * cos(iTime) + .7) * vec3(.2,.15,.1);\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}