{"ver":"0.1","info":{"id":"Ml2SW3","date":"1447009045","viewed":165,"name":"BinaryTree2","username":"jt","description":"A simple binary tree with potentially infinite height,\nbased on [url]https://www.shadertoy.com/view/ll2SW3[/url]\n(see [url]https://www.shadertoy.com/view/4ljXDc[/url] for fixed-height version).\nFixed size[url]https://www.shadertoy.com/view/lljXW3[/url]","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["binarytree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Binary Sub-Division 2 - written 2015 by Jakob Thomsen\n\nvec2 BinaryTreeSubDiv2(vec2 v)\n{\n    v *= exp2(ceil(-log2(v.y)));\n    v.x *= .5;\n    return fract(v);\n}\n\nvoid mainImage( out vec4 o, in vec2 U )\n//void mainImage( inout vec4 o, vec2 U ) // ERROR: overloaded functions must have the same parameter qualifiers\n{\n    U = BinaryTreeSubDiv2(U / iResolution.xy);\n    o -= o;\n    o += 1. - smoothstep(0., .1 * (1. + U.y), abs(4. * abs(U.x -.5) - (1. - U.y)));\n}\n","name":"","description":"","type":"image"}]}