{"ver":"0.1","info":{"id":"tdtfDS","date":"1605989774","viewed":365,"name":"bitwise integer patterns","username":"frhun","description":"effect of bitwise operators XOR, AND, OR\nand.. doing stuff with those numbers\n\nYou can control the movement direction with your mouse.\nAlso try the different output patterns that are currently commented out!","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["xor","pattern","hash","bitwise","circuits"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"fract ( XOR / n )\" by FabriceNeyret2. https://shadertoy.com/view/wllcRN\n// 2020-11-21 00:03:31\n\n// inspired from python273 https://shadertoy.com/view/4ldyW8\n// See also https://www.shadertoy.com/view/ttscRN\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    ivec2 I = ivec2(U+300.*iTime*normalize(iMouse.xy+vec2(1.)));\n    \n    int r = I.x ^ I.y,\n        s = I.x & I.y,\n        t = I.x | I.y;\n    \n    /*\n    O = vec4(\n        fract(float(r*r) / floor(mod(iTime+6., 50.))),\n        fract(float(s*s) / floor(mod(iTime+6., 50.))),\n    \tfract(float(t*t) / floor(mod(iTime+6., 50.))),\n        1.0\n    );\n\t*/\n    \n    O = vec4(\n        fract(float(r*r*r) / floor(mod(iTime+6., 50.))),\n        fract(float(s*s*s) / floor(mod(iTime+6., 50.))),\n    \tfract(float(t*t*t) / floor(mod(iTime+6., 50.))),\n        1.0\n    );\n\t\n    //O = vec4(fract( float(r*s*t) / floor(mod(iTime+6., 50.)) ));\n}","name":"Image","description":"","type":"image"}]}