{"ver":"0.1","info":{"id":"Mf3Xzr","date":"1713493292","viewed":150,"name":"NotSoGreeeen - Python turtle","username":"NotSoGreeeen","description":"A simple drawing program, PLEASE feel free to use this, as well as messing around with the sample code\nCommands:\nforwards(float);\nrotate(float);","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["turtle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_LENGTH 1000\n\nvec2 lines[MAX_LENGTH];\n\nfloat line_segment(in vec2 p, in vec2 a, in vec2 b) {\n\tvec2 ba = b - a;\n\tvec2 pa = p - a;\n\tfloat h = clamp(dot(pa, ba) / dot(ba, ba), 0., 1.);\n\tfloat c = length(pa - h * ba);\n    return (1. - smoothstep(.0, .035, abs(c)));\n} //create the line segments\n\nint index = 1;\nfloat rotation = 0.;\n\nvoid forwards(float dist) {\n    vec2 coords;\n    vec2 prevCoords = lines[index - 1];\n    float rad = radians(rotation);\n    float vecX = dist * cos(rad);\n    float vecY = dist * sin(rad);\n    coords = prevCoords + vec2(vecX, vecY);\n    lines[index] = coords;\n    index++;\n}\n\nvoid rotate(float dist) {\n    rotation -= dist;\n    rotation = mod(rotation, 360.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // \"Libraries\": top centers coordinate grid, bottom creates a blank canvas on that grid\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 color = vec3(0.);\n    uv *= 4.;\n    \n    \n    //example code:\n    for (int i = 1; i <= 2; i++) {\n        rotate(-30. * sin(iTime));\n        forwards(2.);\n        rotate(135. * sin(iTime));\n        forwards(4.);\n        rotate(135. * sin(iTime));\n        forwards(2.);\n        rotate(-30. * sin(iTime));\n        forwards(1.);\n        rotate(-30. * sin(iTime));\n        forwards(1.);\n    }\n    \n    \n    for (int i = 1; i < index; i++) {\n        float line = line_segment(uv, lines[i], lines[i - 1]) - 0.;\n        color += line;\n    } //draw each point as a line\n\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}