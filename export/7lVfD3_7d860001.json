{"ver":"0.1","info":{"id":"7lVfD3","date":"1665423676","viewed":195,"name":"Macat","username":"minghir","description":"Playing with sin and cos functions.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["textile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float light(vec2 uv){\n    uv.x -= 1.;\n    uv.y =sin(iTime/2.)*cos(iTime/2.)/2.;\n    float l1= length(uv)-0.130;\n    return l1/1.9;\n}\n\nconst float PI = 3.14159265359;\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv += vec2(0.5,0.5);\n    float r = iResolution.x/iResolution.y;\n    uv.x *= r;\n    float pixel = 1.5/iResolution.y;\n   \n    uv *= rotationMatrix(30.);\n    float l= light(uv);\n    uv *= 1.1*r*(((sin(iTime/4.)*cos(iTime/4.))/6.+1.8)-(sin(1.-uv.x*4.7))/9.5);\n    uv.x -= iTime/3.+sin(iTime/1.9)*cos(iTime/1.9)/.6;\n   \n   float g1 = smoothstep(0.,0.+25.*pixel,cos(69.*uv.x)*cos(69.*uv.y));\n   float g2 = smoothstep(0.,0.+50.*pixel,cos(89.*uv.x)/cos(89.*uv.y));\n   float g3 = smoothstep(1.,0.+3.*pixel,cos(79.*uv.x)*cos(79.*uv.y));\n    \n    vec3 col =vec3(g1+g2+g3);\n    col *=vec3(g1-g2-g3);\n    col = mix(vec3(1., 0.19, 0.19),col,1.-g1*g2*g3);\n    fragColor = vec4(col-l,1.0);\n}","name":"Image","description":"","type":"image"}]}