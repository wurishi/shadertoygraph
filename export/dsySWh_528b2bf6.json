{"ver":"0.1","info":{"id":"dsySWh","date":"1681011140","viewed":71,"name":"flare ring","username":"schzna","description":"flare and ring","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["ring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI  = 3.141592653589793;\n \nfloat atan2(vec2 p){\n    float x = p.x;\n    float y = p.y;\n    return x == 0.0 ? sign(y) * PI / 2.0 : atan(y, x);\n}\n\nmat2 rot2d(float angle){\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(\n        c, -s,\n        s, c\n    );\n}\n\nfloat peek(in float x, in float spr, in float target){\n    return min(\n        spr/((x-target)*(x-target)+0.0000001),\n        1.0\n    );\n}\n\nfloat convert_angle(float p, float x){\n    return x-p + sign(p)*2.0*PI*step(-abs(p)+PI,-sign(p)*x);\n}\n\nvec3 ring(float time, float ang, float d, float spr, float p1, float p2){\n    vec3 rgb;\n    rgb.x = sin(time*p2+ang*1.0);\n    rgb.y = cos(time*p2+ang*1.0);\n    rgb.z = sqrt(abs(1.5 - abs(rgb.x) - abs(rgb.y)));\n    \n    float b = 0.05*cos(cos(time));\n    float r = 0.15;\n    \n    float ringeff = peek(d, spr, r);\n    return ringeff*rgb;\n}\n\nfloat elp_arc(float lack, float rot, float ang, float rx, float ry, float spr, vec2 pp){\n    vec2 p = rot2d(ang)*pp;\n    float d = sqrt(rx*rx*p.x*p.x + ry*ry*p.y*p.y);\n    float a = atan2(p);\n    float k = 13.0;\n    return peek(d, spr*max(abs(convert_angle(rot,a))-lack, 0.0)*k, 10000.0);\n}\n\nfloat remain(float x, float r){\n    return (x/r - floor(x/r)) * r;\n}\n\nfloat flare(float ang, float b, float lx, float ly, vec2 pos, vec2 pp){\n    vec2 p = rot2d(ang)*pp;\n    float spr = 1.0*b;\n    float fx = smoothstep(b+spr, b, abs(p.y)+ (b+spr)*abs(p.x)*2.0/lx);\n    float fy = smoothstep(b+spr, b, abs(p.x)+ (b+spr)*abs(p.y)*2.0/ly);\n    return min(b*(fy + fx), 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = fragCoord - iResolution.xy/2.0;\n    float ang = atan2(p);\n    vec3 col;\n    vec2 c = iResolution.xy/2.0;\n    \n    float time=iTime*2.0;\n    float interval = 3.0;\n    float phase = cos(time)*interval;\n    float offset=17.0;\n    \n    float spr = 5000.0;\n    \n    col = elp_arc(2.0, remain(time*2.0, 2.0*PI), 2.6, 30.0, 100.0, spr, p) * vec3(0.0, 0.5, 0.9);\n    float fl = flare(0.8+time, peek(phase, 0.04, 0.3)*4.0, 400.0, 800.0, c, p);\n    col += fl * vec3(0.0, 0.5, 0.9) - fl * vec3(0.3);\n    col += vec3(1.0) * (sqrt(1.0) - length(col));\n\n    // Output to screen\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}