{"ver":"0.1","info":{"id":"7lS3Ww","date":"1623997426","viewed":263,"name":"Spherical distortion","username":"Envy24","description":"spherical, transformation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spherical","transformation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 sphericalTransformation(\n    float u,\n    float v,\n    float uCenter,\n    float vCenter,\n    float lensRadius,\n    float tau)         // distortion amount, curvature\n{\n    u -= uCenter;\n    v -= vCenter;\n    \n    float l = sqrt(u * u + v * v);\n    float z = sqrt(lensRadius * lensRadius - l * l);\n    \n    float sphereRadius = sqrt(u * u + v * v + z * z);\n\n    float uAlpha = (1.0 - (1.0 / tau)) * sin(u / sphereRadius);\n    float vAlpha = (1.0 - (1.0 / tau)) * sin(v / sphereRadius); // try cos\n    \n    u = \n        l <= lensRadius ?\n        u + uCenter - z * tan(uAlpha) :\n        u + uCenter;\n        \n    v = \n        l <= lensRadius ?\n        v + vCenter - z * tan(vAlpha) :\n        v + vCenter;\n    \n    return vec2(u, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    float xCenter = iMouse.z > 0.0 ? (iMouse.x / iResolution.y) : 0.55;\n    float yCenter = iMouse.z > 0.0 ? (iMouse.y / iResolution.y) : 0.65;\n\n    uv = sphericalTransformation(\n        uv.x,\n        uv.y,\n        xCenter,\n        yCenter,\n        0.4,\n        9.5);\n\n    // Output to screen\n    fragColor = texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"}]}