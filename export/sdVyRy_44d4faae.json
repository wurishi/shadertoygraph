{"ver":"0.1","info":{"id":"sdVyRy","date":"1655120754","viewed":83,"name":"compass_20220613","username":"heloliz","description":"campass demo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n*@param uv      uv\n*@param col     color\n*@param probe_l 探针长度\n*@param probe_w 探针宽度\n*@param center  center\n*/\nvec4 campass(vec2 uv,vec4 col,float probe_l,float probe_w,vec2 center){\n    float half_l=probe_l/2.;\n    float half_w=probe_w/2.;\n    float si=sin(iTime*.7);\n    float cs=cos(iTime*.7);\n    // 变换矩阵\n    mat2 transform=mat2(cs,si,-si,cs);\n    // 探针4顶点\n    vec2 dot1=vec2(center.x-half_l,0.);\n    vec2 dot2=vec2(0,center.y+half_w);\n    vec2 dot3=vec2(center.x+half_l,0.);\n    vec2 dot4=vec2(0.,center.y-half_w);\n    \n    // 对4顶点做矩阵变换\n    dot1=dot1*transform;\n    dot2=dot2*transform;\n    dot3=dot3*transform;\n    dot4=dot4*transform;\n    \n    // 向量叉乘，uv同各顶点连线对应向量，叉乘多边形各边，叉乘结果 z 值同正\\同负，可判断 uv 坐标在对应多边形内\n    vec3 inner12=cross(vec3(uv-dot1,.0),vec3(dot2-dot1,0.));\n    vec3 inner23=cross(vec3(uv-dot2,0.),vec3(dot3-dot2,0.));\n    vec3 inner34=cross(vec3(uv-dot3,0.),vec3(dot4-dot3,0.));\n    vec3 inner41=cross(vec3(uv-dot4,0.),vec3(dot1-dot4,0.));\n    vec3 inner24=cross(vec3(uv-dot4,0.),vec3(dot4-dot2,0.));\n    \n    //判断探针两头，填充不同颜色\n\n    vec4 ret_col = vec4(0.);\n    vec4 half_probe1_col=(step(inner12.z,0.)*step(inner24.z,0.)*step(inner41.z,0.)+step(0.,inner12.z)*step(0.,inner24.z)*step(0.,inner41.z))*col;\n    ret_col += half_probe1_col;\n\n    vec4 half_probe2_col=(step(0.,inner23.z)*step(0.,inner34.z)*step(inner24.z,.0)+step(inner23.z,0.)*step(inner34.z,0.)*step(.0,inner24.z))*col*2.;\n    ret_col += half_probe2_col;\n    // 画圈\n    float panel_r=length(uv-center);\n    vec4 col_circle=step(panel_r,half_l+.001)*step(half_l-.001,panel_r)*vec4(vec3(0.),1.);\n\n    ret_col += col_circle;\n    return ret_col==vec4(.0)?vec4(1.):ret_col;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    // uv范围（-0.5~0.5）\n    vec2 uv=(fragCoord-.5*iResolution.xy)/iResolution.x;\n    \n    float cs=cos(iTime*.047),si=sin(iTime*.79);\n    \n    vec4 col=vec4(cs,si,.0,.5);\n    \n    col=campass(uv,col,.4,.05,vec2(.0,.0));\n    fragColor=col;\n}","name":"Image","description":"","type":"image"}]}