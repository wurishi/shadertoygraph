{"ver":"0.1","info":{"id":"MsjfDK","date":"1502313594","viewed":1050,"name":"Sponges 106 chars one tweet","username":"benoitM","description":"First attempt to make a short shader. Can you help to reduce?","likes":30,"published":3,"flags":0,"usePreview":0,"tags":["2d","fractal","short","tweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Benoit Marini - 2017\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// not resolution independant but 11 chars less\nvoid mainImage(out vec4 o, vec2 u){\n    o = vec4(u, iTime*4e1,0)/7.;\n    for (int i=0 ; i++ < 99;)\n        o.xzyw = abs( o/dot(o,o)- vec4(1,.9,.1,0) );}\n\n\n// Thanks Fabrice!\n// 117 chars\n/*\n#define mainImage( o, u )                   \\\n    o = vec4(u/iResolution.x, iTime*.02,0); \\\n    for (int i=0 ; i++ < 99;)               \\\n        o.xzyw = abs( o/dot(o,o)- vec4(1,.9,.1,0) )\n*/\n\n// Thanks Coyote!\n// 130 chars\n/*void mainImage( out vec4 o, vec2 u )\n{\n    o = vec4(u/iResolution.x,iTime*.02,0);\n    for (int i=0 ; i++ < 99;) o.xzyw = abs( o/dot(o,o)- vec4(1,.9,.1,0) );\n}*/\n\n// 139 chars, browser compatible\n/*\nvoid mainImage( out vec4 o, vec2 u )\n{\n    vec3 p = vec3(u/iResolution.x,iTime*.02);\n \tfor (int i=0 ; i < 99;i++) p.xzy = abs( p/dot(p,p)- vec3(1,.9,.1) );\n\to = p.xyzx;    \n}\n*/\n\n// 137 chars, not compatible with all browser and shadertoy app because i is not initialized\n/*void mainImage( out vec4 o, vec2 u )\n{\n    vec3 p = vec3(u/iResolution.x,iTime*.1);\n \tfor (int i ; i < 99;i++) p.xzy = abs( p/dot(p,p)- vec3(1,.9,.1) );\n\to = p.xyzx;    \n}*/","name":"Image","description":"","type":"image"}]}