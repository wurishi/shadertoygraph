{"ver":"0.1","info":{"id":"M3KXDc","date":"1720594270","viewed":36,"name":"ARTS1308 HW6 Random Filter","username":"lyhokia","description":"ARTS1308 HW6 Random Filter","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://jameshfisher.com/2017/08/30/how-do-i-make-a-full-width-iframe/\n\n// This set suits the coords of of 0-1.0 ranges..\n#define MOD3 vec3(443.8975,397.2973, 491.1871)\n//#define MOD4 vec4(443.8975,397.2973, 491.1871, 470.7827)\n\n// Algorithm employed by photoshop to desaturate the input\n// http://stackoverflow.com/questions/9320953/what-algorithm-does-photoshop-use-to-desaturate-an-image\n// https://www.shadertoy.com/view/lsdXDH\nvec3 photoshop_desaturate(vec3 color)\n{\n    float bw = (min(color.r, min(color.g, color.b)) + max(color.r, max(color.g, color.b))) * 0.5;\n    return vec3(bw, bw, bw);\n}\n\n//  1 out, 1 in...\nfloat hash11(float p)\n{\n\tvec3 p3  = fract(vec3(p) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract(p3.x * p3.y * p3.z);\n}\n//----------------------------------------------------------------------------------------\n//  1 out, 2 in...\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * MOD3);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract(p3.x * p3.z * p3.y);\n}\n\n//----------------------------------------------------------------------------------------\n\nconst float NUM_LEVELS_F = 20.0;\n\n//----------------------------------------------------------------------------------------\nfloat quantize_round( float v, float num_levels )\n{\n    return floor(v * num_levels ) / num_levels;\n}\n\n//----------------------------------------------------------------------------------------\n\nconst float T_GRAN = 10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 ssuv = fragCoord.xy / iResolution.xy; // normalized position\n\n    vec2 fc = fragCoord.xy;\n    fc = floor( fc.xy / 4.0 ) * 4.0; // quantized position\n    \n    vec2 uv = fc/iResolution.xy; // quantizied position normalized\n    \n    vec3 c;\n    \n    float rnd = hash12( fc / 1000.0 + quantize_round(iTime, T_GRAN)) * 0.9;\n    float pixel = photoshop_desaturate(texture(iChannel0,uv).xyx).x; // we actually drop the green channel\n    //if(pixel <= 0.4) rnd *= 0.3;\n    //else if (pixel >= 0.6) rnd = 1.0;\n    rnd = smoothstep(0.2, 0.5, rnd * pixel);\n    c = vec3(rnd);\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}