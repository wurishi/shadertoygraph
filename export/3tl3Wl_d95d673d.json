{"ver":"0.1","info":{"id":"3tl3Wl","date":"1558058544","viewed":156,"name":"Quasicrystal Experiment","username":"tpfto","description":"An experiment with quasicrystal-like patterns.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","quasicrystal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        vec2 aspect = iResolution.xy / iResolution.y;\n        vec2 p = ( 20.0 * fragCoord.xy / iResolution.y ) - 10.0 * aspect;\n        \n        float s = 0.0, t = 0.1 * iTime;\n    \n        for( int k = 1; k < 9; k++)\n        {\n            // adapted from Fabrice Neyret's \"smoothfloor\", https://www.shadertoy.com/view/4t3SD7\n            float q = abs(mod(0.5 * t + 5.5, 12.0) - 6.0) - 3.5;\n            float mm = floor(q);\n            \n            mm += smoothstep(0.0, 1.0, 10.0 * (q - mm) - 9.0) + 7.0;\n            \n            float th = PI * float(k)/mm;\n            s += cos((2.5 + 1.5 * cos(2.0 * t)) * dot(p, vec2(cos(th), -sin(th))) + 4.5 * t) * smoothstep(-0.05, 0.0, mm - float(k));\n        }\n    \n        s = ((int(floor(s)) & 1) == 1) ? 1.0 - fract(s): fract(s);\n        vec3 col = 0.5 + 0.5 * tanh(1.0 - cos(PI * (2.0 * s + vec3(3, 1, -1)/3.0)));\n\n        fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}