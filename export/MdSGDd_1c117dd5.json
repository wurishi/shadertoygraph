{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define TAU 6.283185307179586\n\nfloat scale(float l0, float r0, float l1, float r1, float x) {\n\treturn (x - l0) / (r0 - l0) * (r1 - l1) + l1;\n}\n\nvec2 polar(vec2 p) {\n\treturn vec2(atan(p.y, p.x), length(p));\n}\n\nvec2 cartesian(vec2 p) {\n\treturn vec2(p.y * cos(p.x), p.y * sin(p.x))\t;\n}\n\nvec2 rotate(float theta, vec2 p) {\n\tvec2 p_polar = polar(p);\n\tp_polar.x += theta;\n\treturn cartesian(p_polar);\n}\n\nvec2 shear(float theta, vec2 p) {\n\treturn vec2(p.x - p.y / tan(theta), p.y / sin(theta));\n}\n\nvec2 unshear(float theta, vec2 p) {\n\tfloat y = p.y * sin(theta);\n\tfloat x = p.x + y / tan(theta);\n\treturn vec2(x, y);\t\n}\n\nvec2 target(float theta, float delta, vec2 p) {\n\treturn unshear(theta, floor(shear(theta, p) + delta) - delta + 0.5);\n}\n\nfloat perforations(float theta, float rot, float scale, float r, vec2 p0) {\n\tvec2 p1 = scale * rotate(rot, p0);\n\treturn distance(p1, target(theta, 0.5, p1)) - r;\n}\n\nvec3 blend(float k, vec3 c0, vec3 c1) {\n\tfloat k_clamp = clamp(k, 0.0, 1.0);\n\treturn (1.0 - k) * c0 + k * c1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p0 = 2.0*(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.xx;\n\tvec2 p0_1 = vec2(p0.x, p0.y);\n\tvec2 p0_2 = vec2(p0.x, p0.y);\n\t\n\tvec2 p1_polar = polar(p0);\n\tp1_polar.y = p1_polar.y * pow(cos(0.6 * length(p0)), 1.5);\n\tvec2 p1 = cartesian(p1_polar);\n\t\n\t// mess with this for all sorts of fun patterns\n\tfloat theta = TAU / 6.0;\n\t\n\tfloat rot1 = 0.004 * TAU * iTime;\n\tfloat rot2 = rot1 + TAU / 12.0 + TAU / 13.0 * sin(0.2 * iTime);\n\t\n\tfloat scale1 = 16.0;\n\tfloat scale2 = 16.0;\n\t\n\tfloat r1 = 0.25;\n\tfloat r2 = 0.25;\n\t\n\tfloat i1 = perforations(theta, rot1, scale1, r1, p1);\n\tfloat i2 = perforations(theta, rot2, scale2, r2, p1);\n\t\n\tvec3 bg = blend(length(p0), vec3(0.0, 0.2, 0.6), vec3(0.0, 0.0, 0.3));\n\tvec3 fg = blend(length(p0), vec3(1.0, 0.0, 0.5), vec3(0.5, 0.0, 1.0));\n\t\n\tfloat satan = 0.03;\n\tfloat k = scale(-satan, satan, 0.0, 1.0, max(i1, i2));\n\t\n\tvec3 color = bg;\n\tif(k < 0.0) {\n\t\tcolor = fg;\n\t} else if(k < 1.0) {\n\t\tcolor = blend(0.5, fg, bg);\t\n\t}\n\t\n\t\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdSGDd","date":"1395100249","viewed":599,"name":"Perforations 2","username":"ahihi","description":"now with less r","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}