{"ver":"0.1","info":{"id":"wlVcWD","date":"1611142240","viewed":98,"name":"The last of us...","username":"kw","description":"Experimenting with colors and shapes.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//the last of us...\n\n//distance functions: https://iquilezles.org/articles/distfunctions2d\n\nfloat sdCircle(in vec2 pos,in float size)\n{\n    return length(pos) - size;\n}\n\nfloat sdLine(in vec2 pos,in vec2 a,in vec2 b)\n{\n    vec2 pa = pos - a;\n    vec2 ba = b - a;\n    float h = clamp(dot(pa,ba) / dot(ba,ba), 0.0, 1.0);\n    return length(pa - ba * h);\n}\n\nfloat sdPolygon(in vec2 pos,in vec2[5] v)\n{\n    const int num = v.length();\n    float d = dot(pos - v[0],pos - v[0]);\n    float s = 1.0;\n    for(int i = 0,j = num-1;i < num;j = i,i ++)\n    {\n        vec2 e = v[j] - v[i];\n        vec2 w = pos - v[i];\n        vec2 b = w - e * clamp(dot(w,e) / dot(e,e),0.0,1.0);\n        d = min(d,dot(b,b));\n        bvec3 cond = bvec3(pos.y >= v[i].y,pos.y < v[j].y,e.x * w.y > e.y * w.x);\n        if( all(cond) || all(not(cond)) ) s=-s;  \n    }\n    return s * sqrt(d);\n}\n\nfloat pShapeAdd(in float a,in float b)\n{\n    return min(a,b);\n}\n\nfloat pShapeSubtract(in float a,in float b)\n{\n    return max(a,-b);\n}\n\nfloat pShapeOverlap(in float a,in float b)\n{\n    return max(a,b); \n}\n\nfloat pShapeAddSmooth(in float a,in float b,in float k) \n{\n    float h = clamp(0.5 + 0.5 * (b - a) / k,0.0,1.0);\n    return mix(b,a,h) - k * h * (1.0 - h); \n}\n\n/*float pShapeSubtractSmooth(in float a,in float b,in float k) \n{\n    float h = clamp(0.5 - 0.5 * (b + a) / k,0.0,1.0);\n    return mix(b,-a,h) + k * h * (1.0 - h); \n}*/\n\n/*float pShapeOverlapSmooth(in float a,in float b,in float k) \n{\n    float h = clamp(0.5 - 0.5 * (b - a) / k,0.0,1.0);\n    return mix(b,a,h) + k * h * (1.0 - h);\n}*/\n\nfloat pSmooth(in float val,in float factor)\n{\n    return smoothstep(factor,-(3.0 / iResolution.y),val);\n}\n\nvec3 cSky(in vec2 pos)\n{\n    //vec3(mix(vec3(0.8,0.8,2.0),vec3(0.7,0.8,1.0),pos.y - 0.5))\n    return vec3(mix(vec3(0.8,0.8 + (pos.y + pos.x) / 10.0,2.0),vec3(0.7,0.8,1.0),pos.y - 0.5));\n}\n\nvec3 cDebug(in vec2 pos)\n{\n    return vec3(0.8,0.5,0.6);\n}\n\nvec3 cWater(in vec2 pos,in float height,in float move)\n{\n    vec3 color = vec3(0.1,0.5,1.0);\n    color.r += height + sin(move) * abs(pos.x);\n    color.g += height + (move * 1.2);\n    color.b += (pos.y / 4.0);\n    return color;\n}\n\nvec3 cIce(in vec2 pos)\n{\n   vec3 color;\n   float move = abs(sin(((-pos.x + (iTime / 6.0)) / 50.0) * 400.0) / 20.0);\n   move += (sin(abs(pos.x) + iTime * 10.0) / 100.0);\n   move = pos.y + move + 0.4 + 0.2;\n   color = cWater(pos,0.6,move);\n   color.r /= abs(move - 0.16);\n   color.g /= abs(move + 0.1);\n   color.b /= pos.y * move;\n   return color * (color * 0.4);\n}\n\nvec3 cBear(in vec2 pos)\n{\n    pos.y += 0.2;\n    vec3 color = vec3(2.0 - (1.0 - (pos.x - 0.5) - (pos.y / 1.2)),1.0 - (0.1 - pos.y),0.9);\n    return color;\n}\n\nvec3 cRing(in vec2 pos)\n{\n    vec3 color = vec3(4.0,0.4,1.5);\n    float a = atan(pos.x,pos.y);\n    a = sin((a + 0.2) * 4.0);\n    a = pSmooth(a,0.02);\n    color.r += pos.y * 0.4;\n    color.g += a - (pos.y * 2.0);\n    color.b *= a * a;\n    return color * (color * 0.4);\n}\n\nvec4 sWater(in vec2 pos,in float height,in float factor)\n{\n   float move = abs(sin(((-pos.x + (iTime / 6.0)) / 50.0) * 400.0) / 20.0);\n   move += (sin(abs(pos.x) + iTime * 8.0) / 100.0);\n   move = pos.y + move + height + 0.1;\n   float sd = pSmooth(move,factor);\n   return vec4(cWater(pos,height,move),sd);\n   return vec4(0.0);\n}\n\nfloat sIcePoly(in vec2 pos)\n{\n   float sd;\n   pos.y += abs(sin(iTime) / 30.0);\n   vec2 v1 = vec2(-0.4,-0.1);\n   vec2 v2 = vec2(0.0,-0.4);\n   vec2 v3 = vec2(0.4,-0.1);\n   vec2 v4 = vec2(0.2,0.1);\n   vec2 v5 = vec2(-0.01,0.1);\n   vec2[] v = vec2[](v1,v2,v3,v4,v5);  \n   sd = sdPolygon(pos,v);\n   v1 -= vec2(0.2,0.0);\n   v2 -= vec2(0.2,0.0);\n   v3 -= vec2(0.2,0.0);\n   v4 -= vec2(0.2,0.0);\n   v5 -= vec2(0.2,-0.2);\n   v = vec2[](v1,v2,v3,v4,v5); \n   sd = pShapeAdd(sd,sdPolygon(pos,v));\n   v1 -= vec2(-0.4,-0.2);\n   v2 -= vec2(-0.6,-0.1);\n   v3 -= vec2(-0.6,-0.1);\n   v4 -= vec2(-0.4,-0.1);\n   v5 -= vec2(-0.4,0.1);\n   v = vec2[](v1,v2,v3,v4,v5);\n   sd = pShapeAdd(sd,sdPolygon(pos,v));\n   return sd;\n}\n\nvec4 sIce(in vec2 pos,in float factor)\n{\n   float sd = sIcePoly(pos);\n   sd = pSmooth(sd,factor);\n   return vec4(cIce(pos),sd);     \n}\n\nvec4 sIceWater(in vec2 pos,in float factor)\n{\n    float sd = sIcePoly(pos);\n    float move = abs(sin(((-pos.x + (iTime / 6.0)) / 50.0) * 400.0) / 20.0);\n    move += (sin(abs(pos.x) + iTime * 4.0) / 100.0);\n    move = pos.y + move + 0.1; \n    sd = pShapeOverlap(sd,move);\n    sd = pSmooth(sd,factor);\n    return vec4(cWater(pos,0.3,0.004),sd);\n}\n\nvec4 sBear(in vec2 pos,in float factor)\n{\n    pos.y += abs(sin(iTime) / 30.0);\n    float m = (abs(sin(iTime)) / 100.0);\n    float dm;\n    float sd = sdCircle(pos,0.1 - m / 4.0);\n    float dd = sdCircle(pos - vec2(0.1,0.08 - m),0.04);\n    sd = pShapeAddSmooth(sd,dd,0.1);\n    dd = sdCircle(pos - vec2(0.1,-0.08),0.03);\n    sd = pShapeAddSmooth(sd,dd,0.05);\n    dd = sdCircle(pos - vec2(0.12,-0.09),0.026);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(0.15,0.01 - m / 4.0),0.02);\n    sd = pShapeAddSmooth(sd,dd,0.05);\n    dd = sdCircle(pos - vec2(0.17,0.0),0.02);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(0.08,0.1),0.05);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(0.10,0.1),0.02);\n    sd = pShapeAddSmooth(sd,dd,0.1);\n    dd = sdCircle(pos - vec2(0.12,0.11),0.06);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(0.12,0.17),0.02);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(0.18,0.13),0.02);\n    sd = pShapeAdd(sd,dd);\n    sd = pSmooth(sd,factor);\n    return vec4(cBear(pos - vec2(0.0,-0.25)),sd);\n}\n\nvec4 sBear2(in vec2 pos,in float factor)\n{\n    pos.y += abs(sin(iTime) / 30.0);\n    float m = (abs(sin(iTime + 20.0)) / 60.0);\n    float dm;\n    float sd = sdCircle(pos - vec2(0.0,0.01),0.11 - m / 2.0);\n    float dd = sdCircle(pos - vec2(-0.12,0.06),0.035);\n    sd = pShapeAddSmooth(sd,dd,0.1);\n    dd = sdCircle(pos - vec2(0.07,-0.01),0.03);\n    sd = pShapeAddSmooth(sd,dd,0.1);\n    dd = sdCircle(pos - vec2(-0.1,0.06),0.07);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(-0.1,0.13),0.02);\n    sd = pShapeAdd(sd,dd);\n    dd = sdCircle(pos - vec2(-0.166,0.07),0.02);\n    sd = pShapeAdd(sd,dd);\n    sd = pSmooth(sd,factor);\n    return vec4(cBear(pos - vec2(0.0,-0.2)),sd);\n}\n\nvec4 sBearTail(in vec2 pos,in float factor)\n{\n    pos.y += abs(sin(iTime) / 30.0);\n    float sd = sdCircle(pos - vec2(-0.08,-0.05),0.02);\n    sd = pSmooth(sd,factor);\n    return vec4(cBear(pos - vec2(0.0,-0.20)),sd);\n}\n\nvec4 sBearTail2(in vec2 pos,in float factor)\n{\n    pos.y += abs(sin(iTime) / 30.0);\n    float sd = sdCircle(pos - vec2(-0.08,-0.05),0.02);\n    sd = pSmooth(sd,factor);\n    return vec4(cBear(pos - vec2(-0.08,-0.30)),sd);\n}\n\nvec4 sRing(in vec2 pos,in float factor)\n{\n    pos.y += abs(sin(iTime) / 30.0);\n    pos -= vec2(0.1,-0.23);\n    float sd = sdCircle(pos,0.1);\n    float dd = sdCircle(pos,0.05);\n    sd = pShapeSubtract(sd,dd);\n    sd = pSmooth(sd,factor);\n    return vec4(cRing(pos),sd);  \n}\n\nvec4 sVignette(in vec2 pos,in float factor)\n{\n    float sd = sdLine(pos,vec2(-2.0,0.0),vec2(2.0,0.0));\n    sd = pSmooth(sd,factor);\n    return vec4(vec3(0.1,0.1,0.3),sd);\n}\n\nvec3 pDraw(in vec3 color,in vec4 obj)\n{\n    return mix(color,obj.rgb,obj.a);\n}\n\nvec3 pDrawEx(in vec3 color,in vec4 obj,in float factor)\n{\n    return mix(color,obj.rgb * factor,obj.a);\n}\n\nvec2 pScreen(in vec2 pix,in vec3 res)\n{\n    return vec2((2.0 * pix - res.xy) / res.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = pScreen(fragCoord,iResolution);\n    vec3 color = cSky(uv);\n    vec4 water = sWater(uv - vec2(-0.7,0.0),0.3,0.004); \n    color = pDraw(color,water);\n    water = sWater(uv - vec2(-0.5,0.0),0.3,0.004); \n    color = pDraw(color,water);\n    water = sWater(uv - vec2(-0.2,0.0),0.35,0.004); \n    color = pDraw(color,water);\n    vec4 ice = sIce(uv - vec2(-0.5,-0.44),0.001);\n    color = pDrawEx(color,ice,0.4);\n    water = sWater(uv,0.4,0.004); \n    color = pDraw(color,water);\n    vec4 icewater = sIceWater(uv - vec2(-0.5,-0.5),0.01);\n    color = pDraw(color,icewater);\n    vec4 ring = sRing(uv,0.001);\n    color = pDraw(color,ring); \n    vec4 bear = sBear(uv -  vec2(-0.1,-0.2),0.001);\n    color = pDraw(color,bear);\n    vec4 beartail = sBearTail(uv -  vec2(-0.1,-0.2),0.001);\n    color = pDraw(color,beartail);\n    vec4 bear2 = sBear2(uv -  vec2(-0.5,-0.22),0.001);\n    color = pDraw(color,bear2);\n    vec4 beartail2 = sBearTail2(uv -  vec2(-0.32,-0.22),0.001);\n    color = pDraw(color,beartail2);\n    vec4 vignette = sVignette(uv - vec2(0.0,-1.0),0.5);\n    color = pDraw(color,vignette);\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}