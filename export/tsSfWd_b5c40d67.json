{"ver":"0.1","info":{"id":"tsSfWd","date":"1591111612","viewed":238,"name":"Infinite XOR tunnel","username":"StaticSaga","description":"Classic 90's demoscene effect, with RGB shifting.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","xor","dispersion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323846\n\n// unfiltered xor by iq\nfloat xorTexture( in vec2 pos )\n{\n    float xor = 0.0;\n    for( int i=0; i<8; i++ )\n    {\n        xor += mod( floor(pos.x)+floor(pos.y), 2.0 );\n\n        pos *= 0.5;\n        xor *= 0.5;\n    }\n    return xor;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord/iResolution.xy - vec2(0.5);\n\txy.x *= iResolution.x/iResolution.y;\n    \n    float theta = atan(xy.y, xy.x)+PI;\n    float r = length(xy);\n    float timeoff = iTime*2.5;\n    vec2 uv = vec2(theta, 1.0/r + timeoff);\n    \n    //vec3 col = vec3(texture(iChannel0, uv)); if you want a texture\n    \n    float delta1 = 123.512;\n    float delta2 = -5.12;\n    vec3 col;\n    col.r = xorTexture(uv * 180.0 - delta1);\n    col.g = xorTexture(uv * 180.0);\n    col.b = xorTexture(uv * 180.0 + delta2);\n    col *= pow(r, 1.4);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}