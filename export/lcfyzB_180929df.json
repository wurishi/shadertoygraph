{"ver":"0.1","info":{"id":"lcfyzB","date":"1721247342","viewed":50,"name":"[steve] ripple","username":"import_shader_steve","description":"Soothing......","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float remap01(float x, float low, float high) {\n    return clamp((x - low) / (high - low), 0., 1.);\n}\n\nfloat remap(float x, float lowIn, float highIn, float lowOut, float highOut) {\n    return mix(lowOut, highOut, remap01(x, lowIn, highIn));\n}\n\nfloat sdSphere(vec2 uv, float r) {\n    return length(uv) - r;\n}\n\nvoid clearColor(inout vec3 col) {\n    col = vec3(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    float d = sdSphere(uv, 0.5 + iTime * 0.1);\n    //d = smoothstep(fwidth(d), -fwidth(d), d);\n    d = mod(d, 0.2);\n    col = vec3(d);\n    \n    float offsetX = cos(uv.y + iTime * 1.);\n    float offsetY = sin(uv.x + iTime * 1.);\n    vec2 uv2 = uv + vec2(offsetX * 0.2, offsetY * 0.2);\n    \n    clearColor(col);\n    d = sdSphere(uv2, 0.5 + iTime * 0.1);\n    d = mod(d, 0.2);\n    col = vec3(d);\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}