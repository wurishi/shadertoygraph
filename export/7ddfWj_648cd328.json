{"ver":"0.1","info":{"id":"7ddfWj","date":"1657242840","viewed":134,"name":"\"egg\"","username":"tono","description":"egg","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = acos(-1.);\nmat2 rot(float a){return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvec2 map(vec3 p)\n{\n    float o = 10.;\n    float id = 0.;\n    float sh = floor(p.y/pi);\n    vec3 op = p;\n    p.xz *= rot(sin(length(p.xz) * 2.)/16.);\n    p.x += sin(p.z + iTime/2. + sh);\n    p.z += sin(p.x + iTime/2. + sh);\n    float s = .85;\n    \n    p.xz = sin(p.xz);\n    p.xz *= rot(length(p.xz) * 1.3 + iTime/5. + length(cos(op.xz))/2. + sh * 10.);\n    p -= clamp(p,-vec3(s),vec3(s));\n    \n    o = length(p) - 0.18;\n    o = min(o,0.5);\n    return vec2(o,id);\n}\n\nvec2 march(vec3 cp , vec3 rd){\n\tfloat depth = 0.;\n    for(int i = 0; i < 99; i++)\n    {\n        vec3 rp = cp + rd * depth;\n        vec2 d = map(rp);\n        if(abs(d.x) < 0.01)\n        {\n            return vec2(depth , d.y);\n        }\n        if(depth > 30.)break;\n        depth += d.x;\n    }\n    return vec2(-depth);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tvec3 cp = vec3(0.,-15.,-3.);\n    vec3 target = vec3(0.);\n    \n    vec3 col = vec3(0.);\n    vec3 cd = normalize(target - cp);\n    vec3 cs = normalize(cross(cd,vec3(0.,1.,0.)));\n    vec3 cu = normalize(cross(cd , cs));\n    \n    float fov = 1.5 - dot(p,p);\n    vec3 rd = normalize(p.x * cs + p.y * cu + cd * fov);\n    vec3 bg = col;\n    vec2 d = march(cp , rd);\n    if(d.x > 0.)\n    {\n        vec2 e = vec2(-1.,1.) * .001;\n        vec3 pos = cp + rd * d.x;\n        vec3 N = normalize(\n                  e.xyy * map(pos + e.xyy).x +\n                  e.yyx * map(pos + e.yyx).x +\n                  e.yxy * map(pos + e.yxy).x +\n                  e.xxx * map(pos + e.xxx).x);\n        col = N;\n        col = vec3(.0,.5,.6);\n        vec3 sun = normalize(vec3(0.,8.,4.));\n        float diff = max(0.,dot(-sun,N));\n        diff = mix(diff , 1.,.1);\n        float sp = max(0.,dot(rd,reflect(N,sun)));\n        sp = pow(sp,15.) * 10.;\n        float rim = pow(clamp(1. - dot(N, -rd), 0., 1.), 3.);\n        col = col * diff + sp - rim;\n        float t = 1. - exp(-.003 * d.x * d.x );\n        col = mix(col,bg,t);\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}