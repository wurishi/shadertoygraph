{"ver":"0.1","info":{"id":"3tlfR7","date":"1596350103","viewed":894,"name":"Caustics Noise","username":"myxy","description":"A modification of David Hoskins's caustics shader\nhttps://www.shadertoy.com/view/MdKXDm\nLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["2d","water","caustics","watercaustics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A modification of David Hoskins's caustics shader\n// https://www.shadertoy.com/view/MdKXDm\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat h12(vec2 p)\n{\n    return fract(sin(dot(p,vec2(32.52554,45.5634)))*12432.2355);\n}\n\nfloat n12(vec2 p)\n{\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    f *= f * (3.-2.*f);\n    return mix(\n        mix(h12(i+vec2(0.,0.)),h12(i+vec2(1.,0.)),f.x),\n        mix(h12(i+vec2(0.,1.)),h12(i+vec2(1.,1.)),f.x),\n        f.y\n    );\n}\n\nfloat caustics(vec2 p, float t)\n{\n    vec3 k = vec3(p,t);\n    float l;\n    mat3 m = mat3(-2,-1,2,3,-2,1,1,2,2);\n    float n = n12(p);\n    k = k*m*.5;\n    l = length(.5 - fract(k+n));\n    k = k*m*.4;\n    l = min(l, length(.5-fract(k+n)));\n    k = k*m*.3;\n    l = min(l, length(.5-fract(k+n)));\n    return pow(l,7.)*25.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.*fragCoord-iResolution.xy)/min(iResolution.x,iResolution.y);\n    vec3 col = vec3(0.);\n    col = vec3(caustics(4.*p,iTime*.5));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}