{"ver":"0.1","info":{"id":"NsyGzW","date":"1631135218","viewed":47,"name":"Tiling and 2 Circle Functions","username":"xXx_T0SHIII_xXx","description":"My first attempt in making patterns and playing with sine and iTime :) \n\nIf anyone has any tips or feedback to give then please drop it in the comments! I'm so eager to learn as much as I can!!!! :) Thank you for checking my stuff out!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circles","simple","grid","circle","moon","tiling","tiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Variation 1 of Circle Function\nfloat Circle(vec2 uv, float r)\n{   \n    vec2 pos = uv - vec2(.5);\n   float l = length(pos);\n    return smoothstep(r,r+1.5/iResolution.y, l);\n}\n//Variation 2 of Circle Function\nfloat Circle2(in vec2 uv, in float r)\n{\n\n    vec2 l = uv - vec2(.37,.5);\n    return 1.-smoothstep(r-(r*.01),r+(r*.01),dot(l,l)*4.0);\n\n}\n//Creates the tiling\nvec2 Tiling(vec2 uv, float tiles)\n{\n    uv*=tiles;\n    return fract(uv);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Movement\n    float t = sin(3.*iTime/10.)*10.;\n    \n    //Calling Tiling function on the UV\n    uv = Tiling(uv,t);\n    \n    //Call circle functions to create circles\n    float c1 = Circle(uv, .2);\n    float c2 = Circle2(uv, .2);\n    \n   //mix the two circles to create moon shape\n   float m = (c1+c2);\n   \n    // Output to screen\n    fragColor = vec4(vec3(m),1.0);\n}","name":"Image","description":"","type":"image"}]}