{"ver":"0.1","info":{"id":"XdXfWB","date":"1499022686","viewed":133,"name":"NewtonThingy0","username":"balkhan","description":"Original Newton fractal code taken from maldicion069 : https://www.shadertoy.com/view/4tcSRN","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","newton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\n#define I_MAX 12\n\nfloat\tt;\n\n/* \n  Newton fractal code taken from maldicion069 : https://www.shadertoy.com/view/4tcSRN\n*/\n\nvec2 g(vec2 n) {\n    return vec2(\n        n.x*n.x*n.x - 3.*n.x*n.y*n.y - 100.,\n        -n.y*n.y*n.y + 3.*n.x*n.x*n.y\n    );\n}\n\nvec2 dg(vec2 n) {\n    return 2. * vec2(\n        n.x*n.x - n.y*n.y,\n        2. * n.x * n.y\n    );\n}\n\nvec2 cdiv(vec2 a, vec2 b) {\n    float d = dot(b, b);\n    if(d == 0.) return a;\n    else return vec2(\n        (a.x*b.x + a.y*b.y),\n        (a.y*b.x - a.x*b.y)) / d;;\n}\n\n/*\n\n*/\n\nvoid\tmainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    t = iTime*.25;\n\tvec2\tuv = fragCoord.xy / iResolution.xy;\n    vec4\tz = vec4(0.0, 0.0, 0.0, 0.0);\n    vec2\tof = 2.*vec2((uv.x -.5)/0.125, (uv.y -.5)/0.125);\n    vec3\tcol = vec3(0.0);\n    float\tdist = 0.0;\n    z.xy = of;\n    int ii = -1;\n    float\tparam_i = 1.0; // 0. or 1.\n    for (int i = -1; i < I_MAX; ++i)\n    {\n        ++ii;\n\n        z.xy = z.xy-cdiv(g(z.xy+of-2.*vec2(cos(t/5.0+float(ii)*param_i ),sin(t/3.0+float(ii)*param_i ))),\n                         dg(z.xy+of-2.*vec2(cos(t/2.0+float(ii)*param_i ),sin(t/1.0+float(ii)*param_i ))) );\n        \n        dist = dot(z.xy,z.xy);\n        if (\n            sqrt(z.x*z.x/(z.y*z.y) ) < .051\n            ||\n            sqrt(z.y*z.y/(z.x*z.x) ) < .051\n           )\n        {\n\t       \tcol.xyz += vec3(100.);\n            break;\n        }\n\n     \tcol.x += 1.-exp(-abs(-z.x/float(ii)+float(ii)/z.x))*2.;\n    \tcol.y += 1.-exp(-abs(-z.y/float(ii)+float(ii)/z.y))*2.;\n    \tcol.z += 1.-exp(-abs((-z.x-z.y)/float(ii)+float(ii)/(z.x+z.y)))*2.;\n        if (dist > 1000000000000.0)\n            break;\n    }\n    fragColor = 1.-.1*vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}