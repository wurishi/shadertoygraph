{"ver":"0.1","info":{"id":"Mt2Xzd","date":"1446195289","viewed":379,"name":"galaxy / black hole","username":"jigoa","description":"let's twist again!","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // get the distance between current pixel and the center\n    vec2 dist = uv-vec2(.5);\n    float radius = .9;\n    // uncomment the line 41 to see the val variable values\n    // we will manipulate the white area\n    float val = 1.-smoothstep(radius-(radius*2.),\n                         radius+(radius*0.8),\n                         dot(dist,dist)*4.0);\n    \n    // get the angle between the current pixel and the center\n    float angle = atan(dist.y, dist.x);\n    \n    // some movement to see the effect based on iTime\n    float s = sin(iTime);\n    \n    // get a new angle based on the original to get a near pixel value\n    // multiplied by distance to only manipulate the pixels inside the radius\n    float theta = angle + (s*val*val*10.);\n    uv.x -= cos(theta)*val*s;\n    uv.y -= sin(theta)*val*s;\n    \n    // get texture color values\n    vec4 col = texture(iChannel0, uv);\n    \n    // add the multiplication of val and s to the final color\n    // to get the center of the image brighter or darker.\n    // Comment the line below to get the result without the bright/dark effect\n    col += vec4(val*s*1.5);\n    // uncommnet the lines below to change the image color\n\t//fragColor = vec4(col.xyz, 1.);\n\t//fragColor = vec4(col.xzy, 1.);\n\t//fragColor = vec4(col.yzx, 1.);\n\t//fragColor = vec4(col.yxz, 1.);\n\tfragColor = vec4(col.zyx, 1.);\n\t//fragColor = vec4(col.zxy, 1.);\n    \n    // fragColor = vec4(val);\n}","name":"Image","description":"","type":"image"}]}