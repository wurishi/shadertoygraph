{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"mat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    float t = iTime;\n    vec2 q = p;\n    //q = pow(q, vec2(3.0));\n    if (mod(t, 10.0) - 5.0 > 0.0)\n    {\n    \tp.x += 1.5 * sin(q.y *  5.0+ t) + 0.6 * cos(q.y *  2.0+ t * 3.0);\n    \tp.y += 2.0 * sin(q.x * 30.0+ t) + 0.8 * cos(p.x * 15.0+ t * 2.0);    \n    } else {\n    \tp.x += 1.5 * cos(q.y * 20.0 + t)+ 0.5 * cos(q.y * 4.0 + t * 3.0);\n    \tp.y += 1.5 * sin(q.x * 15.0 + t)+ 0.5 * sin(q.x * 5.0 + t * 2.0);\n    }    \n    p *= rotate(atan(-p.x, p.y));\n    fragColor = vec4(clamp(p.y * 0.2, 0.0, 1.0));\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lXGWl","date":"1425951317","viewed":157,"name":"Sin Rotate Pattern","username":"gaz","description":"2d","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}