{"ver":"0.1","info":{"id":"ftcSR8","date":"1638734693","viewed":40,"name":"Wavyy","username":"TestCoder","description":"wavy","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wavy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float waveLine(vec2 uv, float waveThickness, float waveFrequency) {\n    return waveThickness / distance(\n        .5,\n        uv.y + sin(uv.x * waveFrequency) / waveFrequency\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec2 color = vec2(waveLine(uv, .05, 50.) * sin(iTime));\n\n    // Output to screen\n    fragColor = vec4(color, sin(color.x),1.);\n}","name":"Image","description":"","type":"image"}]}