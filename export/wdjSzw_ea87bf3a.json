{"ver":"0.1","info":{"id":"wdjSzw","date":"1553341149","viewed":125,"name":"Drunk_pyramid","username":"japoneris","description":"Test to manipulate","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["squaresmatrixtesting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\nvec2 rotate_pt(vec2 uv, vec2 pos, float _angle) {\n    return rotate2d(_angle) * (uv.xy - pos.xy) + pos.xy;    \n}\n\nfloat rectangle(vec2 uv, vec2 pos, vec2 dims) {\n    \n    if ((uv.x < pos.x) || (uv.x > dims.x + pos.x) || (uv.y < pos.y) || (uv.y > dims.y + pos.y)) \n    {return 0.;} else { return 1.;}\n    \n}\n\nfloat rectangle_v2(vec2 uv, vec2 pos, vec2 dims) {\n    \n    if ((uv.x < pos.x - dims.x) || (uv.x > dims.x + pos.x) || (uv.y < pos.y - dims.y) || (uv.y > dims.y + pos.y)) \n    {return 0.;} else { return 1.;}\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv1 = rotate_pt(uv, vec2(0.5), 3.14 * cos(0.1*iTime));\n    \n    int k = 20;\n    float ki = 1. / float(k);\n    //float d = distance(uv, vec2(0.5));\n    \n    float r2 = 0.;\n    float f = 0.4;\n    for (int i=0; i < k; i++) {\n    \tvec2 posi = vec2(0.5 + 0.1 * cos(iTime + f*float(i)), 0.5 - 0.1 * sin(iTime + f*float(i)));\n        r2 = r2 + ki*rectangle_v2(rotate2d(0.)*uv1, posi, vec2(0.05 * (1. + float(i))));\n    }\n    \n    \n    \n    // Time varying pixel color\n    vec3 col = vec3(r2 * 0.5 * (1. + cos(iTime)), r2 * 0.5 * (1.+ sin(iTime)), r2 * 0.5 * (1. - sin(iTime))) + 0.2*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}