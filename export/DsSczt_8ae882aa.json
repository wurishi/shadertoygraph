{"ver":"0.1","info":{"id":"DsSczt","date":"1688019295","viewed":52,"name":"round rect part2","username":"hasen","description":"playing around with round rectangles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ui","rect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 color_blend(vec4 dst, vec4 src) {\n    return dst * (1.0 - src.a) + src * src.a;\n}\n\nfloat sdf_rect(vec2 topleft, vec2 size, vec4 radii, vec2 pos) {\n    pos -= topleft; // normalize as if rect starts at 0,0\n    pos -= size;    // not sure why but it's needed ..\n    // from https://iquilezles.org/articles/distfunctions2d/\n    radii.xy = (pos.x>0.0)?radii.xy : radii.zw;\n    radii.x  = (pos.y>0.0)?radii.x  : radii.y;\n    vec2 q = abs(pos)-size+radii.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - radii.x;\n}\n\nfloat sdf_border(in float d, in float thickness) {\n    return d <= 0.0 ? 1.0 - smoothstep(thickness - 0.4, thickness + 0.4, abs(d)) : 0.0;\n}\n\nfloat sdf_fill(float d, float softness) {\n    d = 1.0 - d;\n    return smoothstep(1.0 - softness, 1.0 + softness, d);\n}\n\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n\n    // default fancy stuff\n    vec2 uv = coord/iResolution.xy;\n    color.rgb = 0.5 + 0.5*cos(240.0+uv.xyx+vec3(0,2,4));\n    color.a = 1.0;\n    \n    coord.y = iResolution.y - coord.y; // y starts at the top!\n    coord /= 2.0;\n    \n    vec2 origin = vec2(100.0);\n    vec2 size = vec2(100.0, 50.0);\n    vec4 radii = vec4(10.0);\n    \n    float dist = sdf_rect(origin, size, radii, coord);\n    float dist_shadow = sdf_rect(origin, size, radii, coord - vec2(2.0));\n    \n    float f_border = sdf_border(dist, 4.0);\n    float f_fill   = sdf_fill(dist, 0.5);\n    \n    float f_shadow = sdf_fill(dist_shadow, 10.0);\n    \n    vec4 border = vec4(0.0, 1.0, 0.0, 1.0); // green\n    vec4 fill   = vec4(1.0, 0.0, 0.0, 1.0); // red\n    \n    vec4 shadow = vec4(0.0, 0.0, 0.0, 0.5); // dark\n    \n    color = color_blend(color, vec4(shadow * f_shadow));\n    color = color_blend(color, vec4(fill   * f_fill));\n    color = color_blend(color, vec4(border * f_border));\n\n}","name":"Image","description":"","type":"image"}]}