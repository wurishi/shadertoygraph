{"ver":"0.1","info":{"id":"4s3yDr","date":"1518387052","viewed":204,"name":"Pattern #1: Black & White","username":"lsdlive","description":"Trying to practice 2d shaders.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141592\n#define TAU 2.*PI\n\nvoid amod(inout vec2 p, float c) {\n    float m = TAU / c;\n    float a = mod(atan(p.x, p.y)-m*.5, m) - m*.5;\n    p = vec2(cos(a), sin(a)) * length(p);\n}\n\nvoid mo(inout vec2 p, vec2 d) {\n    p.x = abs(p.x) - d.x;\n    p.y = abs(p.y) - d.y;\n    if(p.y>p.x)p=p.yx;\n}\n\nmat2 r2d(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n \n    uv *= r2d(-iTime*.5);\n    \n    uv *= 1.1;\n    amod(uv, 5.);\n    mo(uv, vec2(.5, .13));\n    mo(uv, vec2(.2, .4));\n    \n    uv *= 10.;\n    float d = sin(uv.x * uv.x + uv.y * uv.y) - .3;\n    \n    //d = smoothstep(.3, .5, d);// previous aa method\n    d = smoothstep(0., fwidth(d), d);\n\tfragColor = vec4(sqrt(max(d, 0.)));\n}","name":"Image","description":"","type":"image"}]}