{"ver":"0.1","info":{"id":"cs23DW","date":"1667608774","viewed":89,"name":"Teach shader","username":"reatured","description":"hi","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["teach"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float screenRatio = iResolution.x/iResolution.y;\n    uv.x *= screenRatio;\n    \n    vec2 circlePos = vec2(0.5 + sin(iTime), 0.5);\n    float r = 0.2;\n    \n    float dist = (uv.x-circlePos.x) * (uv.x-circlePos.x) + (uv.y-circlePos.y) * (uv.y-circlePos.y) ;\n    \n    vec3 col = vec3(0.,0.,0.);\n    \n    if(dist > r*r){\n        col = vec3(0.,0.,0.);\n    \n    }else{\n         col = vec3(uv.x,uv.y,1.);\n    }\n    // Time varying pixel color\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}