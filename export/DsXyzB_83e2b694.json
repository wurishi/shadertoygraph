{"ver":"0.1","info":{"id":"DsXyzB","date":"1686903597","viewed":53,"name":"staggered","username":"Hriz","description":"staggered map","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["isomap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 gridSize = vec2(1., 2.5);\nconst vec2 plotSize = vec2(204., 102.);\nconst vec2 tileSize = vec2(204., 102.);\nconst vec2 tileHalfSize = vec2(102., 51.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    float worldX = uv.x * (tileSize.x * gridSize.x + plotSize.x * 0.5) + plotSize.x * 0.5;\n    float worldY = uv.y * (tileSize.y * (gridSize.y / 2.) + plotSize.y * 0.5);\n\n    float pX = worldX - tileHalfSize.x;\n    float pY = worldY - tileHalfSize.y;\n\n    float x = floor((pX + (pY - tileHalfSize.y) * 2.) / tileSize.x);\n    float y = floor((pY - (pX - tileHalfSize.x) * 0.5) / tileSize.y);\n\n    float staggeredY = y + x + 1.;\n    float xOffset = 0.;\n\n    float uvX = 0.;\n    float uvY = 0.;\n\n    if (mod(staggeredY, 2.) > 0.) {\n      xOffset = -1.;\n\n      uvX = pX / tileSize.x;\n      uvY = pY / tileSize.y;\n    } else {\n      uvX = worldX / tileSize.x;\n      uvY = worldY / tileSize.y;\n    }\n\n    uvX = fract(uvX);\n    uvY = (uvY * 2. - floor(uvY) * 2.) * .5;\n\n    vec2 vUV = vec2(uvX, uvY);\n    vec4 tex = texture(iChannel0, vec2(uvX, uvY), 0.);\n\n    // Output to screen\n    fragColor = tex;\n}","name":"Image","description":"","type":"image"}]}