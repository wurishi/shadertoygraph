{"ver":"0.1","info":{"id":"lsyyDK","date":"1523355544","viewed":130,"name":"Moving dotted pattern","username":"Sunpy","description":"Scalable dotted pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLOR1 vec4(0.0, 0.0, 0.8, 1.0)\n#define COLOR2 vec4(0.8, 0.0, 0.7, 1.0)\n\n// Feel free to change these ;)\nconst float HEIGHT = 6.0,\n\t\t\tRADIUS = 0.5;\n\n// Author's note:\n// I added comment blocks where I can see the old code vs\n// the new code donated by FabriceNeyret2 ;)\n// This is useful for me as a beginner as I can go back and\n// easily re-read this and recheck my code for simular things.\nvec4 getCol(vec2 uv){\n    /*/\n    bool c = true;\n    \n    if (floor(fract(uv.x * 0.5) * 2.0) == 0.0)\n        c = false;\n    \n    if (floor(fract(uv.y * 0.5) * 2.0) == 0.0)\n        c = !c;    \n    \n    if (c)\n        return COLOR1;\n    return COLOR2;\n\t/*/\n    uv = floor(uv);\n    return mod(uv.x + uv.y, 2.0) == 0.0 ? COLOR1 : COLOR2;\n    /**/\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv_r = fragCoord / iResolution.y * HEIGHT;\n    \n    /*/\n    bool direction = mod(iTime, 2.0) > 1.0;\n    float shift = floor(direction ? uv_r.x : uv_r.y);\n    shift = 2.0 * mod(shift,2.) - 1.0;\n\n\tif (direction)\n    \tuv_r.y += shift * iTime;\n    else\n        uv_r.x += shift * iTime;\n\t/*/\n    int direction = int(iTime) % 2;\n    float shift = floor(uv_r)[1 - direction];\n    shift = 2.0 * mod(shift,2.) - 1.0;\n    uv_r[direction] += shift * iTime;\n    /**/\n    \n    float dist = 1.0 - length(fract(uv_r) - 0.5) / RADIUS;\n    //float dist = 1.0 - distance(uv_r - 0.5, floor(uv_r)) / RADIUS;\n    \n    fragColor = dist * getCol(uv_r);\n}","name":"Image","description":"","type":"image"}]}