{"ver":"0.1","info":{"id":"XtfyDn","date":"1504228084","viewed":191,"name":"meow","username":"alephr","description":"round","likes":3,"published":1,"flags":2,"usePreview":0,"tags":["round"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fgrad(float x){\n    return vec2(dFdx(x), dFdy(x));\n}\n\nfloat fgradlen(float x){\n    return length(fgrad(x));\n}\n\nfloat linestep(float edge0, float edge1, float x){\n    float w = edge1 - edge0;\n    return clamp(0., 1., (x - edge0)/w);\n}\n\nfloat PI = 3.141292;\nfloat root2inv = .7071;\n\nvec2 nangle2vec(float nangle){\n    return vec2(cos(PI*2.*nangle), sin(PI*2.*nangle));\n}\n\nfloat ncos(float nangle){\n    return cos(2.*PI*nangle);\n}\n\nfloat tri(float nangle){\n    float phase = mod(nangle, 1.);\n    return 2.*abs(phase - .5);\n}\nvec3 huecolor(float h){\n    \n    float hue_scale = mod(h, 1.)*6.;\n    if(hue_scale < 1.){\n        return vec3(1., (hue_scale - 0.), 0);\n    }else if(hue_scale < 2.){\n        return vec3(1. - (hue_scale - 1.), 1, 0);\n    }else if(hue_scale < 3.){\n        return vec3(0, 1, (hue_scale - 2.));\n    }else if(hue_scale < 4.){\n        return vec3(0, 1. - (hue_scale - 3.), 1.);\n    }else if(hue_scale < 5.){\n        return vec3((hue_scale - 4.), 0, 1.);\n    }else{\n        return vec3(1., 0, 1. - (hue_scale - 5.));\n    }\n    \n}\n\nfloat atan3(vec2 uv){\n    float at2 = atan(uv.y, uv.x)/(2.*PI);\n    if(at2 < 0.){\n        at2 += 1.0;\n    }\n    return at2;\n}\n\nfloat moveyring(vec2 uv, float thickness){\n    vec2 dir = normalize(uv);\n    float nangle = atan3(dir);\n    float center_off = abs(length(uv) - 1.0);\n    float line_dist = center_off - thickness;\n    vec2 grad = fgrad(line_dist);\n    \n    float cutoff_nangle = .5*ncos(iTime/32.);\n    float cos_cutoff = cos(2.*PI*cutoff_nangle);\n    float c = dir.x;\n    vec2 cutoff_point = nangle2vec(cutoff_nangle); \n    \n    if(c > cos_cutoff){\n        line_dist = \n            min(length(uv - cutoff_point),\n                length(uv - vec2(cutoff_point.x, -cutoff_point.y))) - thickness;\n    }\n    return line_dist;\n}\n\nvec2 uv_transform(vec2 uv, float thickness){\n    vec2 a = uv;\n    vec2 x_axis = nangle2vec(iTime/4.);\n    uv.x = x_axis.x*a.x - x_axis.y*a.y;\n    uv.y = x_axis.x*a.y + x_axis.y*a.x;\n    uv *= (1. + 2.*thickness);\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0 * fragCoord.xy / iResolution.xy - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 t_uv = fragCoord.xy/iResolution.xy;\n    float thickness = .125;\n    uv = uv_transform(uv, thickness);\n    \n    vec2 dir = normalize(uv);\n    float nangle = atan3(dir);\n   \n   \tfloat local_distort = texture(iChannel1, t_uv).x;\n    \n    float line_dist = moveyring(uv, thickness);\n    vec2 off = normalize(fgrad(line_dist));\n    vec2 real_off = uv_transform(off, thickness)*thickness*.5*local_distort;\n    line_dist = moveyring(uv + real_off, thickness);\n    \n    float g = fgradlen(line_dist);\n    float hk_width = .5;\n    float s = linestep(g*hk_width, -g*hk_width, line_dist);\n    float tt = smoothstep(g*200., -g*200., line_dist);\n    \n    \n    vec4 lineColor = vec4(huecolor(nangle), 1.);\n    vec4 bgColor   = vec4(0.0, 0.0, 0.0, 0.0);\n    \n    fragColor = bgColor;\n\tfragColor = mix(fragColor, lineColor, s);\n    //fragColor = vec4((off + 1.)*.5, 0, 1);\n    //fragColor = vec4(((uv + real_off) + 1.)*.5, 0, 1);\n    //fragColor = vec4(local_distort, 0, 0, 1);\n}","name":"Image","description":"","type":"image"}]}