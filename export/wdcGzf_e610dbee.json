{"ver":"0.1","info":{"id":"wdcGzf","date":"1568974387","viewed":250,"name":"Truchet Rainbow Tiling Floor","username":"MeDope","description":"Just found that old shader and decided to update it quickly.\nRemoved raymarching to render rotated plane.\nPlane intersection much more optimized in that case.\nAlso changed a way how truchet rendered a bit, old version also available if you want to check.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["intersection","truchet","rainbow","plane"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define OLD_VERSION\n\nmat2x2 rot(float a) \n{\n\treturn mat2x2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat hash11(vec2 p)\n{\n    return fract(sin(dot(p, vec2(27.754, 78.4476))) * 47125.3567);\n}\n\nfloat truchet(vec2 p)\n{\n    p.x += sin(iTime * 3.0 + p.y * 0.3) * 0.5;\n    vec2 fp = fract(p) - 0.5;\n    float truchet = fp.y + fp.x * (float(hash11(floor(p)) > 0.5) * 2.0 - 1.0);\n    return -abs(abs(truchet) - 0.5) + 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 \n        uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y, \n        ms = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.x;\n\tvec3 \n        rd = normalize(vec3(uv, 1.0)), \n        ro = vec3(0.0, 5.0, iTime * 3.5), \n        c;\n    \n    rd.zy *= rot(0.5);\n    if (iMouse.z > 0.0)\n    {\n        rd.zy *= rot(-ms.y*2.0);\n        rd.xz *= rot(ms.x*6.2831853);\n    }\n\n    float md = 100.0;\n\tfloat planeIntersection = -ro.y / rd.y;\n    \n    if (planeIntersection < md && planeIntersection > 0.0)\n    {\n        md = planeIntersection;\n        vec3 \n            p = ro + rd * md, \n            lightdir = normalize(ro - vec3(0.0, 0.0, 0.1) - p), \n            normal = vec3(0, 1, 0);\n\n        c += vec3(dot(normal, lightdir));\n        c *= c;\n        float t = truchet(p.xz);\n#ifdef OLD_VERSION\n        c += smoothstep(0.1, 0.0, t);\n#else\n        c += clamp(0.02 / t, 0.0, 1.0);\n#endif\n        c *= 0.5 + 0.5 * cos(-iTime * 2.0 + length(p-ro) * 0.25 + vec3(0,2,4)); //rainbow colors\n        c *= clamp(100.0 / pow(md, 2.2), 0.0, 1.0); //black fog\n    }\n\n    fragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}