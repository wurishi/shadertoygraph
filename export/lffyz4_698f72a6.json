{"ver":"0.1","info":{"id":"lffyz4","date":"1720830501","viewed":35,"name":"Rectangle With Rounded Corners","username":"SNAKFRIEN","description":"A rectangle with rounded corners","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["roundedcorners"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 RECT_SIZE = vec2(0.8, 0.4);\nconst float ROUNDING = 0.1;\n#define USE_ANTI_ALIASING 1\n\nbool InRect(in vec2 uv)\n{\n    return abs(uv.x) < RECT_SIZE.x * 0.5\n        && abs(uv.y) < RECT_SIZE.y * 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Y axis ranges from -1 to 1\n    //X axis ranges from -aspect ratio to aspect ratio\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv /= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    //Check if pixel lies within rectangle (as defined by RECT_SIZE)\n    //This step may not be necessary depending on your use case\n    if(InRect(uv))\n    {\n        //By getting the absolute position, the calculation only needs to be\n        // done once for the whole rectangle, rather than once for each corner\n        vec2 absPos = abs(uv);\n        \n        //Check if the pixel lies within the bounding box of the rounded corner\n        if(absPos.x > RECT_SIZE.x * 0.5 - ROUNDING\n            && absPos.y > RECT_SIZE.y * 0.5 - ROUNDING)\n        {\n            //Anti-aliasing is achieved by using a smoothstep\n            #if USE_ANTI_ALIASING\n                float pixelScale = 1.0 / iResolution.y;\n                fragColor = vec4(smoothstep(-pixelScale, pixelScale, ROUNDING - distance(absPos, RECT_SIZE * 0.5 - ROUNDING)));\n            #else\n                fragColor = vec4(1);\n                if(distance(absPos, RECT_SIZE * 0.5 - ROUNDING) > ROUNDING)\n                {\n                    fragColor = vec4(0);\n                }\n            #endif\n        }\n    }\n    else\n    {\n        fragColor = vec4(0);\n    }\n}","name":"Image","description":"","type":"image"}]}