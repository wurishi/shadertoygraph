{"ver":"0.1","info":{"id":"WljyDw","date":"1594549394","viewed":89,"name":"Mandlebrot Set","username":"Ben1152000","description":"mandlebrot set\n\npossible improvements: https://stackoverflow.com/questions/6769881/emulate-double-using-2-floats/6770329#6770329","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318\n\n#define NUM_COLOR 50.0\n#define MAX_ITER 500\n\nint mandlebrot( vec2 c ) {\n    \n    int i = 0;\n \tvec2 z = vec2(0);\n    \n    for (int i = 0; i < MAX_ITER; i++) {\n        z = vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y) + c;\n        if (length(z) >= 2.0) { return i; }\n    }\n    \n    return -1;\n    \n}\n\n#define RAINBOW 0\n#define COVFEFE 1\n#define ZEBRA 2\n\nvec3 color( int scheme, float x ) {\n    \n    if (scheme == RAINBOW) {\n        return sqrt((sin(TAU*(x+vec3(0,1,2)/3.))+1.0)/2.0);\n    }\n    \n    if (scheme == COVFEFE) {\n        return 0.5 + 0.5*cos(2.7+x*TAU + vec3(0.0,.6,1.0));\n    }\n    \n    if (scheme == ZEBRA) {\n\t\treturn 0.5 + 0.5*cos(vec3(x*TAU*NUM_COLOR*0.5));\n    }\n    \n}\n\nvec3 simulate( vec2 coord ) {\n    \n\tint iterations = mandlebrot(coord);\n    \n    if (iterations < 0) {\n        return vec3(0);\n    } else {\n        return color(ZEBRA, mod(float(iterations), NUM_COLOR) / NUM_COLOR);\n    }\n    \n}\n\n// Frame Coordinates: (zoom, lowerLeft, upperRight, origin)\n#define ZR 1.5\n#define LL vec2(-2.0, -1.0)\n#define UR vec2(1.0, 1.0)\n#define OR vec2(0.001643721971153, 0.822467633298876)\n\nvec2 map( vec2 fragCoord, vec2 resolution, float time ) {\n    \n    vec2 lowerLeft = (LL-OR)*pow(ZR,-time)+OR;\n    vec2 upperRight = (UR-OR)*pow(ZR,-time)+OR;\n    \n    return lowerLeft + (upperRight - lowerLeft) * fragCoord/resolution;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 avgColor = (\n        simulate(map(fragCoord, iResolution.xy, iTime))\n        + simulate(map(fragCoord + vec2(0, 0.5), iResolution.xy, iTime))\n        + simulate(map(fragCoord + vec2(0.5, 0), iResolution.xy, iTime))\n        + simulate(map(fragCoord + vec2(0.5, 0.5), iResolution.xy, iTime))\n    ) / 4.0;\n        \n    fragColor = vec4(avgColor, 1.0);\n    \n}\n","name":"Image","description":"","type":"image"}]}