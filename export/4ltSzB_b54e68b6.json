{"ver":"0.1","info":{"id":"4ltSzB","date":"1480330629","viewed":314,"name":"Shader Optimization","username":"yours3lf","description":"shader optimization","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader","optimization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//8 cycles\nfloat alphaThreshold1(float alpha, float threshold, float blendRange)\n{\n\tfloat halfBlendRange = 0.5 * blendRange;\n\tthreshold = threshold * (1.0 + blendRange) - halfBlendRange;\n\tfloat opacity = clamp( (alpha - threshold + halfBlendRange) / blendRange, 0.0, 1.0 );\n\treturn opacity;\n}\n\n//7 cycles\nfloat alphaThreshold2(float alpha, float threshold, float blendRange)\n{\n\tfloat scale = 1.0 / blendRange;\n\tfloat offset = 1.0 - (threshold * scale + threshold);\n\treturn clamp(alpha * scale + offset, 0.0, 1.0);\n}\n\n//6 cycles\nfloat alphaThreshold3(float alpha, float threshold, float blendRange)\n{\n\tfloat scale = 1.0 / blendRange;\n\treturn clamp( (alpha * scale + 1.0) - (threshold * scale + threshold), 0.0, 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 texcolor = texture(iChannel0, uv);\n    \n\t//fragColor = vec4(alphaThreshold1(texcolor.z, texcolor.y, texcolor.x));\n    //fragColor = vec4(alphaThreshold2(texcolor.z, texcolor.y, texcolor.x));\n    fragColor = vec4(alphaThreshold3(texcolor.z, texcolor.y, texcolor.x));\n}","name":"Image","description":"","type":"image"}]}