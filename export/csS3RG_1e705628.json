{"ver":"0.1","info":{"id":"csS3RG","date":"1668270239","viewed":47,"name":"Yet another ball bounce","username":"aszepeshazi","description":"Just playing around","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["step"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float gridSize = 30.0; // background grid size and ball radius\n    const float bounceCount = 6.0; // number of times the ball should touch the ground\n    const float canvasMultiplier = 1.2; // virtual canves size (extends visible area to the rigt)\n    const float amp = 0.8; // initial bounce amplitude\n    const float pi = 3.14159265; // hmm\n    const float speed = 150.; // ball speed\n    \n        // Grid\n    float gridX = mod(fragCoord.x + iTime * speed / 3., gridSize);\n    float gridY = mod(fragCoord.y, gridSize);\n    vec2 V = vec2(gridX, gridY);\n    vec4 grid = vec4( V.x > 1.0 && V.y > 1.0);\n\n    // Ball\n    float canvasWidth = iResolution.x * canvasMultiplier;\n    float d = canvasWidth /  bounceCount;\n    float ox = mod(iTime * speed, canvasWidth) ;\n    \n    float currentGrid = floor((ox + (d / 2.)) / d);\n    float oy = gridSize * 0.8 + (abs(cos(ox / d * pi))) * iResolution.y * (amp * pow(0.7, currentGrid * 1.2));\n    float mx = 10. * pow(ox, .65);\n    vec2 center = vec2(mx, oy);\n\n    float dist = distance(fragCoord, center);\n    float r = smoothstep(gridSize, gridSize*.7, dist);\n    vec4 ball = vec4(1.0, 1. -r, 1. -r, 0.);\n        \n    float ballr = step(gridSize, dist);\n    vec4 mixed = ballr * (grid) + (1. - ballr)* ball;\n\n    fragColor = mixed;\n}","name":"Image","description":"","type":"image"}]}