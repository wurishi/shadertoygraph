{"ver":"0.1","info":{"id":"lX2fDK","date":"1730054993","viewed":29,"name":"Gradient Shader hsv","username":"DimasMakbet","description":"Gradient","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Pi 3.1415926535897932384626433832795\n\nfloat Gradient(float x, float a, float b){\n    if(x > min(a, b) && x < max(a, b)) {return sin((x-a)*(Pi/(2.*(b-a))));}\n    return 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col;\n    col.x = Gradient(uv.x, 0.25, 0.)+Gradient(uv.x, 0.75, 1.);\n    col.y = Gradient(uv.x, 0., 0.25)+Gradient(uv.x, 0.75, 0.25);\n    col.z = Gradient(uv.x, 0.25, 0.75)+Gradient(uv.x, 1., 0.75);\n    col *= uv.y;\n    float x = (sin((iTime/2.-1.5)*Pi)+1.)/2.;\n    col = (col-length(col))*x+length(col);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}