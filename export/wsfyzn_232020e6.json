{"ver":"0.1","info":{"id":"wsfyzn","date":"1583971761","viewed":70,"name":"Colorful trampoline #3","username":"Koztar","description":"Colorful trampoline #3","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorbounce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\nfloat box(vec3 p, vec3 s)\n{\n\n    return length(max(abs(p)-s,0.25));\n}\n\nfloat sphere(vec3 p, float t)\n{   \n\treturn length(p)/t;\n}\n\nfloat trace (vec3 o,vec3 r)\n{\n\tfloat t = 10.0;\n    for(int i=0;i<100;i++)\n    {\n    \tvec3 p = o+r*t;\n        float d0 = box(p-vec3(0,0,0),vec3(2.0,2.0,2.0));\n        float d1 = sphere(p-vec3(0,0,0),3.0);\n        float d = d1-d0;\n        \n        t+=d;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n    uv-= 0.5;\n    uv/= vec2(iResolution.y/iResolution.x,1.0);\n\n    float t0 = time;\n    float t1 = time*0.5;\n    float t2 = time*0.25;\n    vec3 r = normalize(vec3(uv*sin(t0),1.0));\n    vec3 o = vec3(0,0,-10);\n\n    float t = trace(o,r);\n\n    float fog = 1.0/(1.0+t*t*0.01); \n    fragColor = vec4(vec3(fog+vec3(mix(0.0,0.5,sin(t0)),mix(0.0,0.5,sin(t1)),mix(0.0,0.5,sin(t2)))),1.0);\n}","name":"Image","description":"","type":"image"}]}