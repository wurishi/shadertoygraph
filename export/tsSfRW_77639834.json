{"ver":"0.1","info":{"id":"tsSfRW","date":"1589572144","viewed":165,"name":"ShATI - Soleil","username":"Flopine","description":"My former school named ATI decided to launch an everyday challenge from 4th may to 24th may, here is the 12th subject: sun :)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","animation","mlp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Shader made for Everyday ATI challenge\n\n\n#define TAU 6.2831853071\n#define dt fract(iTime*0.5)\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(.05,fwidth(val-thre)))\n#define circle(d, s) AAstep(s, length(d))\n#define anim easeInOutBack(abs(-1.+2.*dt))\n\n//https://easings.net/#\nfloat easeInOutBack(float x)\n{\n    float c1 = 1.70158;\n    float c2 = c1 * 1.525;\n\n    return x < 0.5\n      ? (pow(2. * x, 2.) * ((c2 + 1.) * 2. * x - c2)) / 2.\n      : (pow(2. * x - 2., 2.) * ((c2 + 1.) * (x * 2. - 2.) + c2) + 2.) / 2.;\n}\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvoid moda (inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.y,p.x),per)-per*0.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\nfloat tri (vec2 uv, float size, vec2 ratio)\n{return AAstep(size, max(-uv.x,dot(vec2(uv.x,abs(uv.y)),normalize(ratio))));}\n\nvec4 sun (vec2 uv)\n{\n    uv.y -= anim*0.1;\n    float size = 0.3;\n    float center = clamp(1.-circle(uv,size),0.,1.);\n    float outer = clamp(1.-(circle(uv, size*1.35)+(center)),0.,1.);\n    vec2 uu = uv;\n    moda(uu,6.);\n    uu.x -= size;\n    uu.y += sin(uu.x*8.)*0.08;\n    float pales = clamp(1.-(tri(uu,0.2, vec2(0.25,1.))+outer+center),0.,1.);\n    vec3 col = vec3(1.,8.,0.)*outer + vec3(0.7,0.4,0.3)*pales + vec3(0.95,0.75,0.2)*center;\n\treturn vec4(col, clamp(pales+center+outer,0.,1.));\n}\n\nvec4 wings (vec2 uv)\n{\n    uv.y -= 0.4;\n    uv.x = abs(uv.x)-0.7;\n    uv *= rot(-anim*0.5);\n    vec2 uu = uv;\n    uu *= rot(TAU/8.);\n    uu.y += sin(uu.x*1.5)*0.3;\n    float w1 = tri(uu, 0.14,vec2(0.12,1.));\n    uu.y += sin(uu.x*2.)*0.2;\n    uu.y += 0.1;\n    float w2 = tri(uu, 0.12,vec2(0.15,1.));\n    uu *= rot(-TAU/15.);\n    uu.y += 0.1;\n    float w3 = tri(uu, 0.1,vec2(0.2,1.));\n    float win = clamp(1.-w1*w2*w3*circle(uv+vec2(0.12,0.1), 0.2),0.,1.);\n    return vec4(vec3(1.)*win, win);\n}\n\nvec3 background (vec2 uv)\n{\n    uv.y += sin(uv.x*5.+iTime)*0.1;\n    vec3 col;\n    float mask = floor((abs(uv.x + uv.y)*0.7-0.2)*3.)/3.;\n    if (mask<0.2) col = vec3(0.4,0.7,0.7);\n    else if (mask>=0.2 && mask<0.5) col = vec3(0.6,0.9,0.5);\n    else if (mask>=0.5 && mask<0.7) col = vec3(0.5,0.6,0.7);\n    else if (mask>=0.7) col = vec3(0.9,0.6,0.9);\n    return col;\n}\n\nvec3 image (vec2 uv) \n{\n    vec3 back = background(uv);\n    uv *= 1.3;\n    vec4 su = sun(uv);\n    vec4 wi = wings(uv);\n    float wmask = clamp(wi.w-su.w,0.,1.);\n    float allmask = clamp(1.-(wi.w+su.w),0.,1.);\n    return (wings(uv).xyz*wmask) + su.xyz + back*allmask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = image(uv);\n    fragColor = vec4(pow(col,vec3(0.4545)),1.0);\n}","name":"Image","description":"","type":"image"}]}