{"ver":"0.1","info":{"id":"wtBXRd","date":"1566792228","viewed":127,"name":"tela de lsd","username":"lucastakejame","description":"pra bruna fica feliz","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","lsd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n#define SIN(t) (.5*sin(t)+.5)\n#define COS(t) (.5*cos(t)+.5)\n#define ss(a,b,c) smoothstep(a,b,c)\n\n\nfloat spiral(vec2 puv, int iter, float thick)\n{\n    float sp = length( puv.x - puv.y);\n    float movableRef = puv.y;\n    \n    \n\t// after 2.*pi\n    for(int i = 0; i < iter; i++)\n    {\n        movableRef = movableRef + 2.*PI;\n    \tsp = min(sp, length(puv.x - movableRef ));    \n    }\n    \n    // before 0\n\tsp = min(sp, length(puv.x - puv.y + 2.*PI ));  \n\tsp = min(sp, length(puv.x - puv.y + 4.*PI ));  \n    \n    return ss(thick, 0., sp);\n}\n\nvec3 spiralRGB(vec2 puv, float thick, float offset)\n{\n    int iter = 15;\n    vec2 scale = vec2(30.,1.);\n    vec2 offs = vec2(offset,0.);\n\t\n    puv *= scale;\n    \n\tfloat r = spiral(puv, iter, thick);\n    puv = puv + offs;\n\tfloat g = spiral(puv, iter, thick);\n    puv = puv + offs;    \n\tfloat b = spiral(puv, iter, thick);\n    \n    return vec3(r,g,b);\n}\n\nfloat radials(vec2 puv, float segments, float intensity,\n              float width, float power)\n{\n    // last value in interval\n    float end = 2.*PI/segments;\n    // angle mod\n    float puvM = mod(puv.y, end);\n    //normalize\n    puvM /= end;\n    // inverse\n    float puvMInv = 1.-puvM; \n    puvM = \t  pow(puvM, power);\n    puvMInv = pow(puvMInv, power);\n    float res =  intensity*ss(1. - width/2., 1., puvM);\n    res = (res + intensity*ss(1. - width/2., 1.,puvMInv));\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy)/iResolution.y;\n    vec2 muv = iMouse.xy/iResolution.y;\n\n    if(true)\n    {\n    \tvec2 save = uv;\n        float grid = 7.;\n    \tuv.x += (.0851*length(save))*sin(uv.y*grid + iTime);\n    \tuv.y += (.0851*length(save))*sin(uv.x*grid + iTime);\n    }\n    \n    vec2 puv = vec2(length(uv), atan(uv.y, uv.x));\n    \n    puv.x += radials(puv, 14., -0.21 + .05*sin(puv.y*(12.) + iTime),\n                     1., .5);\n    \n    // Rotation\n    puv.y += mod(iTime, 2.*PI) - PI;\n    \n    vec3 col = spiralRGB(puv,\n                         4.5 - .9*COS(1.5*iTime),\n                         .2 + SIN(iTime*2.) + 0.5*SIN(puv.x*10.));\n\n    // DEBUG Radials\n    //col = vec3(radials(puv, 10., 0.1, .9, .6));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}