{"ver":"0.1","info":{"id":"ld2yRR","date":"1490685155","viewed":259,"name":"Tricky Shit","username":"JavasCrypt20","description":"Added a  light mousecontrol for the pattern color and uvs.\nJust a little playing around with the first things i learned now about shader coding.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","mouse","math","imouse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime / 2.2 \nfloat poSin ( float toCalc){\n    return 0.5 + 0.5 * sin( toCalc);\n}\nfloat poCos ( float toCalc){\n    return 0.5 + 0.5 * cos( toCalc);\n}\nfloat pillows ( vec2 uv){\n\treturn distance( sin( uv.x), sin( uv.y));\n}\nfloat ringsHard ( vec2 uv, float repeat){\n\treturn poSin( distance( uv , vec2( 0.0) ) * repeat);\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord){\n    vec2 ctrl \t= vec2(1.0, 2.0);\n    float ctrl2 = 1.0;\n    if( iMouse.x != 0.0 && iMouse.y != 0.0){\n    \tctrl \t= vec2(iMouse.x/iResolution.x*1.5, (iMouse.y/iResolution.y+0.82)*1.8);\n        ctrl2\t= 0.01 + pow ( iMouse.x * iMouse.y, 0.75);   \n    }\n\tvec2 uv \t= \t(fragCoord.xy / iResolution.xy) - 0.5;\n    uv.x \t\t*= \t(iResolution.x / iResolution.y);\n    vec2 tempUv = \tuv;\n    float grey \t= \tringsHard(uv, (1.0 - cos(time / 2.5)) * 7.0);\n    float pil \t= \tpillows((uv * sin(time / 6.0) * ( 1.0 + ctrl.x * 90.0)) - (grey * (0.6 + ctrl.x + poSin(time))));\n    vec2 distort= \tvec2(grey, 1.6- grey) * ctrl.y * pil;\n    distort\t\t+= \tctrl2 * distort / 3000.0;\n    float grey2 = \t1.0 - ringsHard(uv / 3.0 * sin(time / 3.0) + abs(distort / ctrl.y) , poCos(time * 1.5)* 2.0);\n    grey2 \t\t*= \t((pil + grey2) * grey) * grey;\n    uv \t\t\t= \ttempUv;\n    float damp \t= \tclamp(pow((1.0 - distance(uv, vec2(0.0))) / 2.0, ctrl.y) * ctrl.y * 0.6, 0.0, 1.0);\n    float r \t= \t(grey2 + distort.y) * (distort.x * grey) / ctrl.y * damp;\n    float g \t= \tabs((grey2 - distort.x) * (distort.y - grey2)) / 4.5 * damp;\n    float b \t= \tpow(grey2, 0.9 + poCos(time / 2.7)) * 4.0 * damp;\n    fragColor \t= \tvec4(r,g,b ,1.0);//r,g,b   vec3(soundS)\n}","name":"Image","description":"","type":"image"}]}