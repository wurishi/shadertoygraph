{"ver":"0.1","info":{"id":"Mfscz8","date":"1720798112","viewed":84,"name":"flower_yellow","username":"horus_2024","description":"简单的黄色花","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tree(vec2 p) {\n    // p.y -= 0.;  // Move tree down\n    float d = length(p);  // Distance to origin\n    float angle = atan(p.y, p.x);  // Angle of point from origin\n    float radius = 0.2 + 0.3 * pow(abs(cos(5.0 * angle)), 0.2);  // Radius of tree branches\n    return d - radius;  // Return distance from point to tree shape\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;  // Normalize pixel coordinates (from 0 to 1)\n    uv = uv * 2.0 - 1.0;  // Remap coordinates to the range -1 to 1\n    uv.x *= iResolution.x / iResolution.y;  // Correct aspect ratio\n\n    // Sample the tree function\n    float dist = tree(uv);\n    \n    // Create the tree shape\n    float treeShape = smoothstep(0.02, 0.04, -dist);\n\n    // Background color\n    vec3 bgColor = vec3(0.2, 0.7, 1.0);  // Sky blue\n    vec3 treeColor = vec3(1.0, 0.84, 0.1);  // Dark green\n\n    // Mix tree color and background color\n    vec3 color = mix(bgColor, treeColor, treeShape);\n\n    if (uv.x * uv.x + uv.y * uv.y < 0.04) {\n      fragColor = vec4(vec3(0.296, 0.157, 0.08), 1.0);\n    } else {\n      fragColor = vec4(color, 1.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}