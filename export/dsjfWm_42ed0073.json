{"ver":"0.1","info":{"id":"dsjfWm","date":"1691832421","viewed":24,"name":"Vibrating modes of rectangle","username":"ricvolpe","description":"Vibrating modes of rectangle","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rectangle","modes","vibrations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mode(in vec2 p, in float n, in float m)\n// mode behaviour inspired by https://falstad.com/membrane/\n// mode eq source: https://www.acs.psu.edu/drussell/Demos/rect-membrane/rect-mem.html\n{\n    float pi = 3.14159265359;\n    return smoothstep(-0.9, 0.9, \n       sin(m * p.x) * sin(n * p.y) \n       * sin(iTime * sqrt((m * m) + (n * n))));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    // Create white background\n    vec3 col = vec3(1.0);\n    \n    // Render eigemodes of rectangle\n    col -= mode(uv, 2.0, 2.0);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}