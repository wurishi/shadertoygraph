{"ver":"0.1","info":{"id":"ttK3Dm","date":"1579127781","viewed":268,"name":"Germany Flag by Skuxxnosch","username":"Skuxxnosch","description":"Saw another flag shader and tried to do one for germany as an easy exercise. :D yey","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["flag","germany","myfirstshadertoy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float rgb = 1./255.; //used to set actual german flag gold color in RGB space 0 <> 255 not 0 <> 1\n    float up =0.33*2.; //upper flag line\n    float down =0.33; //lower flag line\n\tfloat t=iTime; //passing time\n    float pi = 3.1415; //mathematical Pi\n    float damp = 0.05; //dampening sin in y direction\n    float tScale = 1.0; //Waving speed\n    float waveScale = 6.; //Scale of waves inside flag\n    \n    //sin wave function for y-offset\n    float sinVal = sin(uv.x * waveScale + t * tScale * pi) * damp;\n    up+=sinVal;\n    down+=sinVal;\n    \n    //devide flag into different colored segments\n    if(uv.y>up){\n    \tfragColor = vec4(0,0,0,1);\n    }\n    else if(uv.y>down && uv.y<up){\n    \tfragColor = vec4(1,0,0,1);\n    }\n    else if(uv.y<down){\n    \tfragColor = vec4(1,rgb*204.,0,1);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}