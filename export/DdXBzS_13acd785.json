{"ver":"0.1","info":{"id":"DdXBzS","date":"1688848012","viewed":45,"name":"zjor-sandbox","username":"zjor","description":"https://www.youtube.com/watch?v=f4s1h2YETNY&list=WL&index=8","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["101"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\t\t\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(2.0, 1.0, 0.0);\n    vec3 d = vec3(0.50, 0.20, 0.25);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float delta = (iResolution.x - iResolution.y) / 2.0;\n    \n    vec2 uv = (fragCoord - vec2(delta, .0)) / iResolution.y;\n    uv = uv * 2.0 - 1.0;\n    if (uv.x < -1.0 || uv.x > 1.0) {\n        return;\n    }\n    \n    vec2 uv0 = uv;\n    float D = length(uv0);\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = .0; i < 4.0; i++) {\n        uv = fract(uv * 1.25) * 2.0 - 1.0;\n    \n        float d = length(uv) * exp(-D);\n\n        vec3 color = palette(D + 0.4 * iTime + 0.3 * i);\n\n        d = sin(d * 8. + iTime) / 8.;\n        d = abs(d);\n        d = pow(0.02 / d, 1.1);\n\n        finalColor += color * d;    \n    }\n    \n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}