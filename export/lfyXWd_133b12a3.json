{"ver":"0.1","info":{"id":"lfyXWd","date":"1715917484","viewed":93,"name":"Hofmann's Wallpaper","username":"ShadeWhizz","description":"Hofmann's favourite wallpaper","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["recursive","trippy","intricate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nfloat base(vec2 uv, float t) {\n    vec2 ndc = (uv - 0.5) * 2.0;\n    float h = 1.0 - dot(ndc,ndc);\n    float gray = sin(t + h * 10.0);\n    return gray;\n}\n\nfloat chan(vec2 uv, float t) {\n    float themin = 1.0;\n    for (int i = 1; i < 4; i++) {\n        vec2 uv2 = fract(float(i)*float(i)*uv*(float(i)+1.0)); // pow2?\n        float h = base(uv2, t);\n        themin = min(themin, h);\n    }\n    return themin;\n}\n\nvec3 image(vec2 uv, float t) {\n    return vec3(\n        chan(uv, t),\n        chan(uv, t + 0.25),\n        chan(uv, t + 0.5)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(image(uv, iTime * 1.0),1.0);\n}\n\n// uv needs also shifting as well as the chromatic colour smearing\n// yea i reckon the channels separating spatially would be good from a really hard hit in the music or whatever\n\n// this is actually a NSA encryption breaker","name":"Image","description":"","type":"image"}]}