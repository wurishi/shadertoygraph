{"ver":"0.1","info":{"id":"WtG3Dw","date":"1579040025","viewed":74,"name":"circular_chrm_abr","username":"Babaganosch","description":"Circular chromatic aberration","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chroma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float aberration = 0.1;\n\nvec4 desaturate(vec3 color, float factor)\n{\n\tvec3 lum = vec3(0.299, 0.587, 0.114);\n\tvec3 gray = vec3(dot(lum, color));\n\treturn vec4(mix(color, gray, factor), 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Change aberration with mouse x\n    float aberration = (iMouse.x/iResolution.x) -.5;\n    if( iMouse.z<=0.0001 ) aberration = 0.2;\n    \n    // Get the colors\n\tvec4 base_col   \t= \ttexture( iChannel0, uv);\n    vec2 dist \t\t\t= \t(uv - 0.5) * 2.0;\n\tvec2 abr_dist\t\t= \tlength(uv - 0.5) * length(uv - 0.5) * clamp(aberration * dist, -0.1, 0.1);\n\t\t base_col.rgb\t= \ttexture( iChannel0, uv - abr_dist).rgb\t* vec3(1.0, 0.0, 0.5) +\n\t\t\t\t\t  \t\ttexture( iChannel0, uv + abr_dist).rgb\t* vec3(0.0, 1.0, 0.5);\n \n    base_col = desaturate(base_col.rgb, 0.0);\n    \n    // Output to screen\n    fragColor = base_col;\n}","name":"Image","description":"","type":"image"}]}