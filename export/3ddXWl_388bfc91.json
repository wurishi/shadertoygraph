{"ver":"0.1","info":{"id":"3ddXWl","date":"1573342488","viewed":262,"name":"fractalskew","username":"ArthurSango","description":"derp","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 skew (vec2 st) {\n    vec2 r = vec2(0.0);\n    r.x = 1.1547*st.x;\n    r.y = st.y+0.5*r.x;\n    return r;\n}\n#define t iTime\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \t\n    \n  \n    vec3 col = vec3( 1.);\n    \n    uv = abs( uv * 2. - 1. );\n   uv = skew(uv);\n    vec2 iuv = uv;\n    \n   // uv = fract( 5.* abs(sin(iTime+1.) + 1.) * uv );\n     uv = fract( 5. * uv );\n     uv = skew(uv);\n    iuv *= mat2( sin(iTime), 0.,0., sin(iTime) );\n    \n     uv *= mat2( cos(t), sin(t), -sin(t), cos(t) );\n    \n    float d = distance( uv, iuv);\n    \n    float dt = dot( uv, iuv) * length(uv);\n\n    col.x = uv.y;\n    col.y = d;\n    \n\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}