{"ver":"0.1","info":{"id":"ft2fDz","date":"1652053163","viewed":59,"name":"hello world!","username":"ag","description":"Built following along with Inigo Quilez's heart tutorial: https://www.youtube.com/watch?v=aNR4n0i2ZlM ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["heart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float heartColorSpeed = 0.7;\nconst float baseHeartSize = 12.0;\n\nfloat inCircle(vec2 fragCoord, vec2 center, float radius) {\n    float distFromCircle = radius - length(fragCoord - center);\n    return smoothstep(-1.0, 1.0, distFromCircle);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 center = iResolution.xy * 0.5;\n    vec2 xy = fragCoord - center;\n    float normUnit = length(iResolution.xy) * 0.01;\n    \n    float heartRate = 2.0;\n\n    // note that I'm rescaling to 12 because I don't want to go back and figure out the constants\n    float heartSize = baseHeartSize / 12.0 * (\n        12.0 \n        + 1.0*pow(sin(iTime*heartRate + xy.y/normUnit/100.0), 8.0) // heart pumping \n        + 1.0*pow(sin(2.0*iTime + 2.0*xy.y), 8.0)  // frills\n    );\n    \n    // We transform xy to represent a heart shape\n    vec2 p = xy / normUnit / heartSize * 15.0;\n    p.y = 1.2*p.y - abs(p.x) * sqrt((20.0 - abs(p.x)) / 15.0) + 4.0;\n   \n    xy = p * normUnit / 15.0 * heartSize;\n    float mask = inCircle(xy, vec2(0, 0), heartSize*normUnit);\n    \n    \n    // Time varying pixel color\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 colSpace1 = 0.5 + 0.5*cos(iTime*heartColorSpeed+uv.xyx+vec3(0,2,4));\n    vec3 colSpace2 = 0.5 + 0.5*sin(iTime+uv.xyx+vec3(0,2,4));\n\n    vec3 col = mask*colSpace1 + (1.0 - mask)*colSpace2;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}