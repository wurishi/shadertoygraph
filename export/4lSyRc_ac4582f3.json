{"ver":"0.1","info":{"id":"4lSyRc","date":"1509436245","viewed":119,"name":"Mandelheart Fade","username":"sCooZy","description":"90Â° turned mandelbrot set using z = z^2 + z + c animated as a fading heart.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","fade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int iterationLimit = 50;\nconst float pi = 3.141592653;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float x = fragCoord.x / iResolution.y * 2.0 - iResolution.x/iResolution.y;\n\tfloat y = fragCoord.y / iResolution.y * 2.0 - 1.0;\n    float offset = (sin(iTime) + 1.0) / 2.0;\n    float zoom = 1.0 + offset;\n\n    vec2 point = vec2(x,y - 0.21*offset);\n    point = point * 5.0 / zoom;\n    \n    mat3 rotMatrix;\n\trotMatrix[0] = vec3(cos(pi/2.0),-sin(pi/2.0),0);\n    rotMatrix[1] = vec3(sin(pi/2.0),cos(pi/2.0),0);\n    rotMatrix[2] = vec3(0,0,1);\n    \n    point = vec2(rotMatrix * vec3(point,1.0));\n    \n    vec2 z = vec2(0.0,0.0);\n    vec2 z2 = vec2(0.0,0.0);\n    float z2Scale = offset;\n    float zScale = sin(iTime+pi/2.0);\n    for (int i = 0; i<iterationLimit; i++)\n    {\n        if (length(z) > 4.0)\n        {\n            float greyscale = float(i) / float(iterationLimit);\n            fragColor = vec4(greyscale,0,0,1.0);\n            return;\n        }\n        z2.x = z.x * z.x - z.y * z.y;\n        z2.y = 2.0 * z.y * z.x;\n        z = z2Scale*z2 +  zScale*z + point;\n    }\n    fragColor = vec4(1.0,0.0,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}