{"ver":"0.1","info":{"id":"lftfzN","date":"1732806795","viewed":135,"name":"fractalic combinator","username":"nayk","description":"source fractal 62 by gaz","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n#define pi 3.14159\n\nconst float num = 32.;\n#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n     vec2 uv = (C-0.5*iResolution.xy)/iResolution.y;\n\n    float r = 0.35 + 0.13 * thc(3.5, 8. * length(uv) - 1.5 * iTime);\n    //float r = 0.35 + 0.13 * thc(3.5, iTime + 10. * h21(uv));\n    vec2 p2;\n    float s = 0.;\n    for (float i = 0.; i < num; i++) {\n        p2 = vec2(r * sin(pi * i / num) * cos(i + iTime), -r + 2. * r * i / num);\n        vec2 uv2 = uv;\n\n        float d = 4. * length(uv2 - p2);\n        float R = r * sin(pi * i / num);\n        float k = 0.1 + 0. * cos(10. * i + iTime) + 0.2 * R;\n        s += smoothstep(-k, k, 0.5 * R * (1. + sin(i + iTime))-d);\n        s += step(d, 0.4 * R * (1. + sin(i + iTime))) - step(d, 0.35 * R * (1. + sin(i + iTime)));\n        s *= 0.99 * (1. - 0.22 * length(uv));\n       // s += 0.28 * max(s,smoothstep(-0.2,0.5, 0.5 * R * (1. + sin(i + iTime))-d));\n    }\n   \n    vec3 col = vec3(s);\n    col = s * pal(s, vec3(1.), vec3(1.), vec3(1.), length(uv) + 0.35 * vec3(0.,0.33,0.66));\n    col += vec3(0.025,0.,0.05);\n   \n   \n   \n    \n    uv *= 1.1 + 0.15 * cos(uv.y - 0.6 * iTime);\n    uv.y += 0.02 * cos(iTime);\n   \n    // points\n    vec2 p = 0.1 * vec2(cos(0.913 * iTime), sin(iTime));\n    vec2 q = 0.2 * vec2(cos(0.81 * iTime), sin(0.73 * iTime));\n\n    // should look bad if time gets too high\n    float t = 10. * iTime + 8. * h21(uv) + 15. *exp(-0.01 * length(uv)) * (650. + iTime);\n    int f = int(floor(t));\n   \n    float d = 10.;\n    float s4 = 0.;\n    vec2 pp = vec2(0.);\n   \n    vec3 e = vec3(1);\n    vec3 col5 = vec3(0);\n    col += 0.03;\n    col += 0.35 * exp(-3. *length(uv));\n    float t3 = iTime*0.;\n    vec3 col3 = vec3(0);  \n    for(float i=0.; i<1.; i+=1./100.){\n        float depth = fract(i+t3);\n        float scale = mix(CanvasView, .5, depth);\n        float fade = depth*smoothstep(1.,.9,depth);\n        col5 += StarLayer(uv*scale+i*453.2)*fade;}  \n   \n    float n = 20.;\n    for (float i = 0.; i <= n; i++) {\n        float f2 = 0.0001 * float(f);\n        float f3 = 0.0001 * float(f + 1);\n\n        vec2 qp = pp;\n             \n        pp = vec2( h21(vec2(f2)), h21(vec2(0.01 + f2)) );\n        pp = pow(4. * pp * (1.-pp), vec2(4));\n\n        vec2 pp2 = vec2( h21(vec2(f3)), h21(vec2(0.01 + f3)) );\n        float fr = fract(t);\n        fr = smoothstep(0., 1., fr); //idk if this changes anything\n        pp = mix(pp, pp2, fr); // looks cool if you remove this too\n        pp = 0.3 * (pp - 0.5);\n        f++;\n        //if(i>0.) d = length(uv-pp);sdSegment(uv, pp, qp);\n        //s += exp(-40. * d);\n        float s2;\n        if (i > 0.) s2 = ellipse(uv, pp, qp, 0.);//mod(i, 2.));\n        s = clamp(s + s2, 0., 1.);\n        vec3 col2 = pal(i/n, e, e, e, (i/n) * vec3(0,1,2)/3.);\n        col = mix(col, col2+col3, s2);\n    }\n   \n       float sc = 64.; // change me\n    vec2 ipos = floor(sc * uv) + 0.5;\n    vec2 fpos = fract(sc * uv) - 0.5;\n   \n    float h = h21(ipos);\n    float time = 0.2 * h + 0.3 * mlength(fpos) + iTime;\n   \n    vec2 p3 = 0.5 * vec2(thc(3., 0.111* mlength(fpos)), ths(3., 0.111* mlength(fpos)));\n    p3*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n    float e3 = 0.4;\n    float d3 = length(uv / p3 - e3);\n   \n\n \n       \n       \n    vec3 n1,p,q,r2=iResolution,\n    d=normalize(vec3((C*2.-r2.xy)/r2.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(0.5,1.2,1.),H(g*.1),.8)*40./e/8e3\n    )\n    {\n        p=g*d;\n         \n        p.xz+= p3;;\n     p.xy+= p3;\n       p.z-=iTime*1.;\n        a=30.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n       p.xz*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n         p.yz*=mat2(cos(iTime),sin(iTime),-sin(iTime), cos(iTime));\n        for(int i=0;i++<8;){\n       \n            p=.13-abs(p);\n                   \n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p.xzy;\n              p.x<p.z?p=p.yzy:p.xzz;\n                p.x<p.z?p=p.zxy:p;\n            s*=e=1.5+sin(iTime*.001)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.*3.,\n                    120,\n                    8.*5.\n                 )+mlength(fpos);\n         }\n         g+=e=length(p.yzzz)/s;\n    }\n}\n","name":"Image","description":"","type":"image"}]}