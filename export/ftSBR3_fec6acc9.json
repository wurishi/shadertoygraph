{"ver":"0.1","info":{"id":"ftSBR3","date":"1653512963","viewed":85,"name":"Gradient wave","username":"020406","description":"Test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float t = 1.;\n    float sinA = 0.45 + 0.2 * 0.5 * (1.0 + sin(iTime + uv.x * 2. * PI * t));\n    float sinB = 0.15 + 0.2 * 0.5 * (1.0 + sin(iTime * 2.3 + 2.2 * uv.x * 2. * PI));\n    \n    float c = 0.0;\n    float maxD = sinA - sinB;\n    float glow = 0.025;\n    if (uv.y < sinA) {\n        if (uv.y > sinB) {    \n            float d = uv.y - sinB;\n            c = pow(d / maxD, 1. + 5. * iMouse.y / iResolution.y);\n        }\n    } else {\n        float d = uv.y - sinA;\n        c = d < glow ? 1. - pow(d / glow, 5.) : 0.0;\n    }\n    //float d = pow(uv.y - sinA, 1. / 1.5) / maxD;\n\n    vec3 col = vec3(c, uv.x * c, 0.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}