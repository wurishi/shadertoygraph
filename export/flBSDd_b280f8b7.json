{"ver":"0.1","info":{"id":"flBSDd","date":"1628842344","viewed":62,"name":"shader of diffusion ","username":"zyc","description":"diffusion","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define gray(rgb) (rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114)\n#define m_p 3.1415926538\n\n/**\n    display: 11 display 1-1\n    display: 13 display 1-3\n**/\n#define display 13\n\nvec3 smoothing(sampler2D tex, vec2 uv, vec2 k, float ss)\n{\n    vec2 s = 1.0 / vec2(textureSize(tex, 0));\n    vec3 avg = vec3(0.0);\n    vec2 hk = k * 0.5;\n    for(float x = 0.0 - hk.x; x < hk.x; x += 1.0)\n    {\n        for(float y = 0.0 - hk.y; y < hk.y; y += 1.0)\n            avg += texture(tex, uv + s * vec2(x,y) * ss).rgb;\n    }\n    return max(texture(tex, uv).rgb, avg / (k.x * k.y));\n}\n\nvec3 radialBokeh(sampler2D tex, vec2 uv, float k, float ss, float p)\n{\n    vec2 s = 1.0 / vec2(textureSize(tex, 0));\n    float hk = k * 0.5;\n    vec3 mcol = vec3(0.0);\n    vec3 avg  = vec3(0.0);\n    for(float x = 0.0 - hk; x < hk; x += 1.0)\n    {\n        for(float y = 0.0 - hk; y < hk; y += 1.0)\n        {\n            float l = length(vec2(x,y));\n            if(l <= hk)\n            {\n                vec3 col = texture(tex, uv + s * vec2(x,y) * ss).rgb;\n                mcol = max(mcol, col);\n                avg += col;\n            }\n        }\n    }\n    return mix(avg / pow(m_p * hk, 2.0), mcol, p);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = abs(sin(iTime * 1.5));\n    vec3 col = texture(iChannel0, uv).xyz;\n\n    /*1-1*/\n    #if display == 11\n        vec2  k  = vec2(25.0); // kernel\n        float ss = 1.0;        // sample strength\n        \n        k = floor(mix(vec2(1.0), k, t));\n        col = smoothing(iChannel0, uv, k, ss);\n    /*1-3*/\n    #elif display == 13\n        float k  = 3.6; // kernel\n        float ss = 2.0;  // sample strength\n        float p  = 0.8;  // bokeh power\n        \n        k = floor(mix(2.0, k, t));\n        col = radialBokeh(iChannel0, uv, k, ss, p);\n    #endif\n    \n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}