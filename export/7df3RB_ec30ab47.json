{"ver":"0.1","info":{"id":"7df3RB","date":"1616151090","viewed":816,"name":"UV Twirl","username":"nebbul","description":"Twirl the UVs around the center of the screen\n\nImplemented using the Unity Shader Graph Twirl node maths\n\nproblem: scrolling the UVs in one direction to create a vortex, it will scroll backwards on the other side","likes":8,"published":1,"flags":0,"usePreview":1,"tags":["uv","effect","twirl","offset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// source\n// https://docs.unity3d.com/Packages/com.unity.shadergraph@6.9/manual/Twirl-Node.html\n\n// centered UVs from:\n// https://www.shadertoy.com/view/tt3cz8\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/min(iResolution.x,iResolution.y))\n              -vec2(fract(max(iResolution.x,iResolution.y)/min(iResolution.x,iResolution.y))/2.0,0.0);\n              \n    vec2 center = vec2(0.5, 0.5);\n    vec2 delta = uv - center;\n    float strength = mix(0., 5., (sin(iTime) + 1.) / 2.);\n    float angle = strength * length(delta);\n    \n    \n    float x = cos(angle) * delta.x - sin(angle) * delta.y;\n    float y = sin(angle) * delta.x + cos(angle) * delta.y;\n    \n    // if movement is wanted\n    vec2 offset = vec2(0., 0.) * iTime;\n    uv = vec2(x + center.x + offset.x, y + center.y + offset.y);\n    \n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}