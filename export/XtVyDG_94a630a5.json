{"ver":"0.1","info":{"id":"XtVyDG","date":"1537520582","viewed":170,"name":"distort4","username":"ryohey","description":"d","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// 特定の方向にだけふくらませる distort\nmediump vec2 distortV(highp vec2 delta, mediump float radius, mediump float depth, mediump float aspectRatio, mediump vec2 distDir) {\n    delta.y /= aspectRatio;\n\n    // ベクトル distDir から点 delta までの距離\n    highp float dist = dot(distDir, delta) / length(distDir);\n    highp float s = dist / radius; // radius の割合にしたもの\n\n    if (s >= 1.0 || s < 0.0) {\n        return vec2(0.0, 0.0);\n    }\n    highp float dx = s * (s - 1.0); // s が 0 -> 1 に変化する時 0 -> -depth -> 0 となる下弦の放物線\n    \n    highp vec2 vdir = vec2(distDir.y, distDir.x);\n    highp float dist2 = dot(vdir, delta) / length(vdir);\n    highp float s2 = clamp(dist2 / radius, 0.0, 1.0);\n    \n    return radius * dx * distDir / dist2;\n}\n\nvec2 magnifyV(vec2 delta, float radius, float strength, vec2 vec) {\n  float len = length(delta);\n  float s = len / radius;\n  float d = exp(-strength * s * s) * radius;\n  vec2 dir = normalize(vec);\n  return dir * (d * strength);\n}\n\n// === main loop ===\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 center = iMouse.xy/iResolution.xy;\n    float aspectRatio =  iResolution.x / iResolution.y;\n    //uv += distortV(uv - center, 0.2, 0.9, aspectRatio, vec2(0, 1));\n    \n    if (false) {\n    \tvec2 fmuv = uv * 1.2 + center * -1.5 + 0.5;\n        vec4 flowmap = texture(iChannel1, fmuv);\n        vec2 uvdelta = vec2(0, flowmap.g * flowmap.a) * -0.1;\n        uv += uvdelta;\n    }\n    \n    if (false) {\n    \tvec2 fmuv = uv * 1.2 + center * -1.5 + 0.5;\n        vec4 flowmap = texture(iChannel2, fmuv);\n        vec2 uvdelta = vec2(flowmap.r * flowmap.a, 0) * -0.03;\n        uv += uvdelta;\n    }\n    \n    {\n        uv += magnifyV(uv - vec2(0.5, 0.45), 0.2, 0.6, vec2(0, -1));\n        uv += magnifyV(uv - vec2(0.6, 0.3), 0.1, 0.4, vec2(-1, 0));\n        uv += magnifyV(uv - vec2(0.4, 0.3), 0.1, 0.4, vec2(1, 0));\n    }\n    \n    vec4 tex = texture( iChannel0, clamp(uv, vec2(0.0, 0.0), vec2(1.0, 1.0)));  \n    //tex.g = tex.g + flowmap.g * flowmap.a;\n    fragColor = tex;\n}","name":"Image","description":"","type":"image"}]}