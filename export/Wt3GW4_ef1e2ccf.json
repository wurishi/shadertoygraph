{"ver":"0.1","info":{"id":"Wt3GW4","date":"1576250761","viewed":205,"name":"grid noises","username":"aodnawg","description":"noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat N11(float i) {\n\treturn fract(sin(i + 93741.369) * 31934.123);\n}\n\nfloat N21(vec2 i) {\n\treturn N11(N11(i.x) + i.y);\n}\n\nfloat smoothNoise(vec2 uv, float z) {\n    vec2 id = floor(uv * z);\n    vec2 gv = fract(uv * z);\n\n    float tl = N21(id);\n    float tr = N21(id + vec2(1., 0.));\n    float bl = N21(id + vec2(0., 1.));\n    float br = N21(id + vec2(1., 1.));\n\n    float t = mix(tl, tr, smoothstep(0., 1., gv.x));\n    float b = mix(bl, br, smoothstep(0., 1., gv.x));\n    return  mix(t, b, smoothstep(0., 1., gv.y));\n}\n\nfloat graph(vec2 uv, float n) {\n    float t = iTime * .01;\n    uv -= vec2(.5);\n    float a = atan(uv.y, uv.x) / PI * .5 + .5;\n    float r = distance(uv, vec2(0.));\n    float noise = smoothNoise(vec2(a, r + t) + vec2(N11(n), N11(N11(n))), 10.) * 10. * PI;\n    return smoothstep(.9, .8, sin(r * 128. + noise + n) *.5 + .5);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5);\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 1.5;\n\n    // Time varying pixel color\n\tvec3 col = vec3(uv.rg, 0.);\n    float m = 0.;\n    \n    float z = 2.;\n    vec2 id = floor(uv * z);\n    vec2 gv = fract(uv * z);\n  \n    m = graph(gv, N21(id));\n    if (gv.x >= 0.98 || gv.y >=.98) m = 0.;\n   \n    \n    // m = smoothNoise(uv, z);\n    \n\tcol = vec3(m);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}