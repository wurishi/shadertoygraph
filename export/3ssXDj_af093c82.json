{"ver":"0.1","info":{"id":"3ssXDj","date":"1552244527","viewed":962,"name":"Emissive Square","username":"Xor","description":"Today I was experimenting with simple light attenuation and here's what I came up with.","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["square","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\t\"Emissive Square\" by Xor (@XorDev)\n\n\tLicense Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\t\n\tToday I was experimenting with simple light attenuation and here's what I came up with.\n*/\nvoid mainImage(out vec4 Color, in vec2 Coord)\n{\n    float Time = iTime*.75;\n\t\n    float Angle = (pow(fract(Time),6.)+floor(Time))*3.14159265/2.;\n    vec2 Trig = vec2(cos(Angle),sin(Angle));\n    \n    vec2 Pos = (Coord-.5*iResolution.xy)/iResolution.y*mat2(Trig.x,Trig.y,-Trig.y,Trig.x);\n    float Size = .2+.03*pow(1.-abs(fract(Time+.45)-.5),8.);\n    \n    float Dist = length(max(abs(Pos)-Size,0.));\n    float Glow = 1./(Dist*25.+.5);\n    \n    Color = vec4(Glow*vec3(.4,1,.1),1);\n}","name":"Image","description":"","type":"image"}]}