{"ver":"0.1","info":{"id":"ddfGDB","date":"1666727513","viewed":135,"name":"Circle spin","username":"minghir","description":"Playing with smoothstep.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","spin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1416;\n\nmat2 rotationMatrix(float angle){\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col =  0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col *=  vec3(0.59);\n\n    float d = length(sin(uv*2.)*cos(uv)*2.)-.99;\n    float d2  = length(uv*3.)-0.003;\n    \n    col -= smoothstep(0.,14.*1.5/iResolution.y,d);\n    col += smoothstep(0.,60.*1.5/iResolution.y,d);\n    col *= smoothstep(0.0,14.*1.5/iResolution.y,d+d2);\n    uv *=rotationMatrix(90.*max(sin(iTime/4.+1.),cos(iTime/4.+1.)));\n    col -= smoothstep(-0.1,0.1,d*sin(uv.x)*sin(uv.y));\n    col += smoothstep(-0.1,0.1,d*(sin(uv.x*3.)*sin(uv.y*3.)));\n\n// Output to screen\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}