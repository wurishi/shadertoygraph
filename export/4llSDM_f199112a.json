{"ver":"0.1","info":{"id":"4llSDM","date":"1437123545","viewed":167,"name":"CravoCircles","username":"cravo","description":"Recreating an old effect I saw once... (see https://www.youtube.com/watch?v=lM9Pk-jAhmw)\nIt boggles my eyes :-)","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // default background colour\n    fragColor = vec4(0.0,0.0,0.7,1.0);\n    \n    // start with a circle in the middle of the screen\n    vec2 circleCentre = vec2(iResolution.xy) * 0.5;\n    float angle = iTime * 2.0;   \n    float radius = iResolution.y * 0.5;\n    float angleSign = 1.0; // which way round the circle is going\n    float width = 4.0; // how thick the lines are\n    \n    for(float i = 0.0; i < 5.0; ++i)\n    {\n        float dist = length(fragCoord.xy - circleCentre);\n\n        if ( dist < radius && dist > radius - width)\n        {     \n            fragColor = vec4(1.0);\n        }\n        \n        // Halve the radius and compute next circle's centre point\n        radius *= 0.5;\n        circleCentre.x += radius * sin((angle*angleSign) * (i + 1.0));\n        circleCentre.y += radius * cos((angle*angleSign) * (i + 1.0));\n        \n        // Flip the direction of travel\n        angleSign = -angleSign;\n    }\n}","name":"","description":"","type":"image"}]}