{"ver":"0.1","info":{"id":"styBDw","date":"1664598579","viewed":160,"name":"Sierpinski triangle one pass","username":"hypnothalamus","description":"Sierpinski function returns 0 if inside a black domain of a Sierpinski triangle with 'steps' iterations.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["triangle","sierpinski"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Lucian Stanculescu in CLAVICULA : https://clavicula.link\n// use freely\n\n#define ANIMATED\n#define STEPS 7\n\nfloat Sierpinski(vec2 p, int steps)\n{\n\tfor (int i = 0; i < steps; ++i)\n\t{\n\t\tp *= 2.0;\n\n\t\tbool a = p.x + p.y < 1.0;\n\t\tbool b = p.x > 1.0;\n\t\tbool c = p.y > 1.0;\n\n\t\tif (!a && !b && !c) return 0.0;\n\n\t\tp.x -= float(b);\n\t\tp.y -= float(c);\n\t}\n\treturn 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    p.x -= 0.5 * p.y; // sqew transform\n\n#ifdef ANIMATED\n    int steps = int(iTime)%STEPS;\n#else\n    int steps = STEPS;\n#endif\n\n    steps++; // start from 1 iteration\n\n    fragColor = vec4( p.x>0.0 && p.y>0.0 && p.x+p.y<1.0 ? Sierpinski(p, steps) : 0.0);\n}","name":"Image","description":"","type":"image"}]}