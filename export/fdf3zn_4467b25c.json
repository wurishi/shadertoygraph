{"ver":"0.1","info":{"id":"fdf3zn","date":"1615523787","viewed":412,"name":"Pretty Noisy Fireworks","username":"kstyler","description":"Oh my, these fireworks sure are noisy!","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["noise","explosion","fireworks","boom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat circle(vec2 p, float r){\n    return smoothstep(.0,.04,length(p) - r);\n}\n\n//https://www.shadertoy.com/view/4djSRW\nfloat random(vec2 p){\n\tvec3 p3  = fract(vec3(p.xyx) * 20.1001);\n    p3 += dot(p3, p3.yzx + 300.3);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat explosion(vec2 p, float time){\n    vec2 dir = normalize(p);\n    float acc = -random(dir)/2.;\n    float friction = 0.8;\n    float timeRamping =  1.-pow(1.-time*1.5,5.);\n    vec2 pos = p+dir*acc*timeRamping*friction;\n    return circle(pos,.001)+time;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv*=2.5;\n    \n    float minium_value = 1.;\n    for(int i = 0; i < 10; i++){\n        minium_value = min(minium_value,\n        explosion(uv+vec2(cos(float(i))*1.,sin(float(i))*.5),\n        mod((iTime*.9)+float(i),1.6)));\n    }\n    vec3 col = vec3(minium_value);\n    col = 1.-col;\n    col*=vec3(sin(iTime*2.)+1.,cos(iTime*1.5)+1.,cos(iTime*4.)+1.)+1.5;\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}