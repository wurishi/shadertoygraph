{"ver":"0.1","info":{"id":"tlscW4","date":"1592133891","viewed":46,"name":"1st 3d","username":"bipinoli","description":"Following tutorial from \"The Art of code\"","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["learningshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float point2rayDist(vec3 ro, vec3 rd, vec3 p) {\n \treturn length(cross(p-ro, rd))/length(rd);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // view plane at z = 0\n    // camera at (x,y,z) = (0,0,-2)\n    \n    // ray\n    vec3 ro = vec3(0., 0., -2.);\n    vec3 rd = vec3(uv.x, uv.y, 0.) - ro;\n    \n    float t = iTime;\n    \n    // point in 3d\n    vec3 p = vec3(cos(t), 0., 2. + sin(t));\n    \n    float d = point2rayDist(ro, rd, p);\n    d = smoothstep(.3, .31, d);\n    \n    vec3 col = vec3(d);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}