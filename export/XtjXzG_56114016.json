{"ver":"0.1","info":{"id":"XtjXzG","date":"1444640204","viewed":123,"name":"08","username":"anilord","description":"08","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["08"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float distanceTo(float x, float y, float centerX, float centerY) {\n\tfloat deltaX = x - centerX;\n    float deltaY = y - centerY;\n    return sqrt(deltaX * deltaX + deltaY * deltaY);\n}\n\nvoid mainImage( out vec4 color, in vec2 pixCoords )\n{\n    float zoom = (iResolution.x / 20.0);\n    float cameraX = 5.0 + iTime;\n    float cameraY = 2.0;\n    \n    float x = (pixCoords.x / zoom) - cameraX;\n    float y = (pixCoords.y / zoom) - cameraY;\n\n    float lineSemiWidth = 0.05;\n    \n    if (abs(x) < lineSemiWidth || abs(y)<lineSemiWidth) {\n\t\tcolor = vec4(1.0, 0.0, 0.0, cos(1.0));\n        return;\n    }\n    else if ((mod(abs(x),1.0) < lineSemiWidth) || (mod(abs(y),1.0)<lineSemiWidth)) {\n\t\tcolor = vec4(0.5,0.5,0.5,0.1);\n        return;\n    }   \n\t    vec2 uv = pixCoords.xy / iResolution.xy;\n    float radius = 0.3 + 0.1 * cos(3.0 * iTime + x + y);\n    if (distanceTo(mod(x, 1.0), mod(y, 1.0), 0.5, 0.5) < radius) {\n       color = vec4(uv,0.5+0.5*sin(iTime),1.0);\n        return;\n    }\n    \n    color = vec4(1.0, 1.0, 1.0, 1.0);\n}","name":"","description":"","type":"image"}]}