{"ver":"0.1","info":{"id":"wldfDM","date":"1612899108","viewed":62,"name":"Pulses [HurleybirdJr]","username":"HurleybirdJr","description":" Pulse and combine merge.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shape Functions\nfloat circle(vec2 uv) {\n    float r = 0.3; // Radius\n    float er = 1.5/iResolution.y; // Edge Radius with scaleable AA\n    float d = length(uv); // Distance calcuation\n    float c = smoothstep(r, r-er, d); // Set colours to distance values\n    \n    return c;\n}\n\nfloat square(vec2 uv) {\n    uv += .5;\n    \n    vec2 bl = step(vec2(0.2),uv);\n    vec2 tr = step(vec2(0.2),1.-uv);\n    float pct = bl.x * bl.y * tr.x * tr.y;\n    \n    float c = pct;\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize pixel coordinates\n    vec2 uv = (fragCoord-0. * iResolution.xy) / iResolution.xy; // 0 <> 1\n    \n    uv -= 0.5; // Remap UV // -0.5 <> 0.5\n    uv.x *= iResolution.x / iResolution.y; // Fix Aspect Ratio\n\n    //float combine = smoothstep(-square(uv), -circle(uv), sin(iTime));\n    float combine = circle(uv*sin(iTime))+square(uv*cos(iTime));\n    \n    float pulse = circle(uv*fract(length(uv)+iTime));\n\n    fragColor = vec4(vec3(combine, pulse, 0.5), 1.0);   \n}\n\n","name":"Image","description":"","type":"image"}]}