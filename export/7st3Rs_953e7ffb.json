{"ver":"0.1","info":{"id":"7st3Rs","date":"1630694512","viewed":58,"name":"Shader Assignment 1","username":"Th3FenrisWolf","description":"Simple shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["schoolproject"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col;\n    // Time varying pixel color\n    if(uv.x > 0.25 && uv.x < 0.75 && uv.y > 0.25 && uv.y < 0.75){\n        col = vec3(sin(iTime + vec3(0,2,4)) * cos(uv.x * iResolution.x / 10.0) / cos(uv.y * iResolution.y / 10.0));\n    }\n    else{\n        if(mod(iTime, 10.0) < 5.0){\n            col = vec3(sin(uv.x) * cos(uv.y) * mod(-iTime, 5.0), 0.5, cos(uv.x) * sin(uv.y) * mod(iTime, 5.0));\n        }\n        else{\n            col = vec3(sin(uv.x) * cos(uv.y) * mod(iTime, 5.0), 0.5, cos(uv.x) * sin(uv.y) * mod(-iTime, 5.0));\n        }\n    }\n    \n    vec4 pic = texture(iChannel0, col.xy);\n    \n    vec3 pic3 = vec3(pic.xyz);\n    \n    // Output to screen\n    fragColor = vec4(mix(col.rgb,pic3.rgb, cos(iTime*0.7)),1.0);\n}","name":"Image","description":"","type":"image"}]}