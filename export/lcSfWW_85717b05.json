{"ver":"0.1","info":{"id":"lcSfWW","date":"1725070013","viewed":11,"name":"sines and signs","username":"vandis","description":"lol","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sativa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 pos){\n    return fract(sin(dot(pos, vec2(64.25375463, 23.27536534))) * 59482.7542);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    \n    float h = 0.;\n    float maxj = 5.;\n    \n    for(float j = 0.; j < maxj; j++) {\n        \n        vec2 p = vec2(-0.8 + j / maxj,-0.4 + j / maxj);\n        vec2 p2 = vec2(0.8 + j / maxj,-0.4 + j / maxj);\n        vec2 p3 = vec2(0.0 + j / maxj,0.6 + j / maxj);\n\n        float d = length(22. * (uv - p));\n        float d2 = length(20. * (uv - p2));\n        float d3 = length(19. * (uv - p3));\n\n        float f = sin(d - iTime * 3.);\n        float g = sin(d2 - iTime * 4.);\n        float i = sin(d3 - iTime * 5.);\n\n        float t = (f + g + i)/sqrt(pow(f,2.) + pow(g,2.) + pow(i,2.));\n        h += t;\n    }\n    \n    float r = sqrt(pow(1.5 * uv.x,2.) + pow( 2.5 * uv.y,2.)) + 0.1 * random(vec2(uv.x, uv.y));\n    \n    h += 15. * r;\n    \n    // Output to screen\n    fragColor = vec4(0.25 * sin(h) + 0.75,-0.25 * (sin(h) * iTime) + 0.75,0.25 * cos(h) + 0.75,1.0);\n}","name":"Image","description":"","type":"image"}]}