{"ver":"0.1","info":{"id":"wlS3Dh","date":"1559315050","viewed":178,"name":"REBOP","username":"Radical_Ed","description":"Realtime Exploration Beyond Ordinary Possibilities\n\nhttp://re-bop.blogspot.com/2019/05/openglsl-supercollider-rebop.html","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["music","text","rebop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4tXGR2","filepath":"https://soundcloud.com/bz-akira-santjago/realtime-exploration-beyond-ordinary-possibilities-radical-ed","previewfilepath":"https://soundcloud.com/bz-akira-santjago/realtime-exploration-beyond-ordinary-possibilities-radical-ed","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This is a rework of https://www.shadertoy.com/view/3lSGz1, \n// created by sschmidtix, with sound, by Radical Ed \n// aka Bz Akira Santjago aka Akira Basho\n// License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License\n\n\n#define PERIOD 2.\n#define REPETITIONS 2\n\nconst float PI = 3.1415926535;\n\n\nfloat box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat cross2(in vec2 _st, float _size){\n    return  box(_st, vec2(_size,_size/4.)) +\n            box(_st, vec2(_size/4.,_size));\n}\n\nvec3 shadeBlob(vec2 p, float index, float value, float scale)\n{\n    float screenRatio = iResolution.x / iResolution.y;\n    vec2 pc = vec2(0.1 + (screenRatio - 0.2) * value, index);\n    \n    float d = length(pc - p) / 0.015*scale/(1.37+abs(sin(iTime)));\n    \n    return vec3(3. * vec3(0.5, 0.5, 0.7) / (max(d * d, 1.)));\n}\n\nfloat step_interp(float x) {\n    return step(0.5, x);\n}\n\nfloat linear_interp(float x) {\n    float c = clamp(x, 0., 1.);\n    \n    return c;\n}\n\nfloat cosine_interp(float x) {\n    float c = clamp(x, 0., 1.);\n    \n    return 0.5 * (1. - cos(PI * c));\n}\n\nfloat smoothstep_interp(float x) {\n//    return smoothstep(0., 1., x);\n\n    float c = clamp(x, 0., 1.);\n    \n    return c * c * (3. - 2. * c);\n}\n\nfloat quintic_interp(float x) {\n    float c = clamp(x, 0., 1.);\n    \n    return c * c * c * ((6. * c - 15.) * c + 10.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.yy;\n    vec2 q = fragCoord.xy / iResolution.xy;\n    \n    int tx = int(p.x*128.0);\n    int ty = int(p.y*128.0);\n    \n    // per lo Spectrum Audio\n    float wave = texelFetch( iChannel0, ivec2(ty,1), 0 ).x;\n    vec3 spec = vec3(wave/0.5);\n    \n    \n    // per lo Spectrum Audio\n    //vec4 spec = vec4(0.1,0.1,0.1,0.1);\n    \n    vec2 translate = vec2(cos(iTime),sin(iTime));\n    vec2 translate2 = vec2(sin(iTime),cos(iTime));\n    //p += translate*0.35*sin(iTime);\n    q += translate2*1.35*sin(iTime);\n    \n    float t = abs(2. * fract(iTime / PERIOD) - 1.);\n    \n    \n    // Background pattern\n    \n    \n    \n    vec3 col = vec3(0.0);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1, spec.x/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1, spec.x/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1, spec.x/0.4 );\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1, spec.x/0.4);\n    \n    //col += shadeBlob(p, 0.3, smoothstep_interp(t)*spec.x+0.2, 0.1/0.1);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.05, spec.x/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.05, spec.x/0.4);\n    //col += shadeBlob(p, 0.6, smoothstep_interp(t)*spec.z+0.2, 0.1/0.1);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.05, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.1, spec.x/0.4);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.1, 0.1/0.1);\n    //col += shadeBlob(p, 0.5, cosine_interp(t)*spec.z+0.1, 0.1/0.1);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.1, spec.x/0.4);\n    //col += shadeBlob(p, 0.7, quintic_interp(t)*spec.z+0.1, 0.1/0.1);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.2, spec.y/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.2, spec.y/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.2, spec.y/0.4);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.2, spec.y/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.2, spec.y/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.25, spec.x/0.4);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.25, 0.1/0.1);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.25, spec.x/0.4);\n    //col += shadeBlob(p, 0.6, smoothstep_interp(t)*spec.z+0.25, 0.1/0.1);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.25, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.3, spec.x/0.4);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.25, 0.1/0.1);\n    //col += shadeBlob(p, 0.5, cosine_interp(t)*spec.z+0.25, 0.1/0.1);\n    //col += shadeBlob(p, 0.6, smoothstep_interp(t)*spec.z+0.25, 0.1/0.1);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.3, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.4, spec.x/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.4, spec.x/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.4, spec.x/0.4);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.4, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.4, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.45, spec.x/0.4);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.45, 0.1/0.1);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.45, spec.x/0.4);\n    //col += shadeBlob(p, 0.6, smoothstep_interp(t)*spec.z+0.45, 0.1/0.1);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.45, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.5, spec.x/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.5, spec.x/0.4);\n    //col += shadeBlob(p, 0.5, cosine_interp(t)*spec.z+0.5, 0.1/0.1);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.5, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.5, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.6, spec.x/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.6, spec.x/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.6, spec.x/0.4);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.6, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.6, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.65, spec.x/0.4);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.65, 0.1/0.1);\n    //col += shadeBlob(p, 0.5, cosine_interp(t)*spec.z+0.65, 0.1/0.1);\n    //col += shadeBlob(p, 0.6, smoothstep_interp(t)*spec.z+0.65, 0.1/0.1);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.65, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.7, spec.x/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.7, spec.x/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.7, spec.x/0.4);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.7, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.7, spec.x/0.4);\n    \n    col += shadeBlob(p, 0.3, smoothstep_interp(t)*0.1+0.8, spec.x/0.4);\n    col += shadeBlob(p, 0.4, smoothstep_interp(t)*0.1+0.8, spec.x/0.4);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.8, spec.x/0.4);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.8, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.8, spec.x/0.4);\n    \n    //col += shadeBlob(p, 0.3, smoothstep_interp(t)*spec.x+0.8, 0.1/0.1);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.8, 0.1/0.1);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.85, spec.x/0.4);\n    //col += shadeBlob(p, 0.6, smoothstep_interp(t)*spec.z+0.8, 0.1/0.1);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.85, spec.x/0.4);\n    \n    //col += shadeBlob(p, 0.3, smoothstep_interp(t)*spec.x+0.8, 0.1/0.1);\n    //col += shadeBlob(p, 0.4, linear_interp(t)*spec.y+0.8, 0.1/0.1);\n    col += shadeBlob(p, 0.5, cosine_interp(t)*0.1+0.9, spec.x/0.4);\n    col += shadeBlob(p, 0.6, smoothstep_interp(t)*0.1+0.9, spec.x/0.4);\n    col += shadeBlob(p, 0.7, quintic_interp(t)*0.1+0.9, spec.x/0.4);\n    \n    \n    \n    col += 1.0 -  smoothstep( 0.0, 0.15, abs(wave - q.x) );\n    \n    col = pow(col, vec3(1.37));\n    //col2 = pow(col2, vec3(0.45));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}