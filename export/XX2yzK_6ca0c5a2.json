{"ver":"0.1","info":{"id":"XX2yzK","date":"1727918571","viewed":22,"name":"Perpetual Water Ripple","username":"TOAG21","description":"for a class","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["myheadhurts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//code primarily by haquxx called 001-DrawCircle\n//@ https://www.shadertoy.com/view/3tdSRn\n\nconst float initialCalmWaterWidth = 1.0;\nconst float rippleBrightness = 0.5;\nconst float originX = 0.0;\nconst float originY = 1.4;\n\nvec3 drawCircle(vec2 pos, float initialCalmWaterWidth, float rippleBrightness, vec3 color)\n{\n    //defines origin of circle\n    float dist1 = distance(pos, vec2(originX, originY));\n    //defines ripple circles. mod or fract are used to get the repeated scaling wave effect\n    dist1 = mod(dist1 - iTime, dist1 + initialCalmWaterWidth);\n    //second location because waves dont scale linearly so its necessary to blur some edges. clamp forces edge brightness\n    float dist2 = clamp(dist1 - 0.5 * iTime / 30.0, 0.2, 1.0);\n    //intensifies ripple color\n    float intensity = distance(dist2, 0.0) * distance(dist1, 0.5) * 30.0;\n    //determines output color based on input color, intensity, and the wave positions.\n    vec3 col = color.rgb * intensity * rippleBrightness * max((0.8- abs(dist2)), 0.0);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // uv range from -1 to 1\n    vec2 pos = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n    // colors to mix\n    vec3 deepBlue = vec3(0.4, 0.5, 0.8);\n    vec3 lightBlue = vec3(0.65, 0.85, 1.0);\n    \n    //get circle colors\n    vec3 circle = drawCircle(pos, initialCalmWaterWidth, rippleBrightness, lightBlue);\n\n    pos = abs(pos);\n\n    //mix wave colors\n    fragColor = vec4(mix(deepBlue, lightBlue, circle), 1.0);\n}","name":"Image","description":"","type":"image"}]}