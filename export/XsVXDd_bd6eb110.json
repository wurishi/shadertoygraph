{"ver":"0.1","info":{"id":"XsVXDd","date":"1467657745","viewed":234,"name":"buffered voronoi","username":"dello32","description":"buffered voronoid","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["voronoibuffered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// sources: inigo quilez - iq - https://www.shadertoy.com/view/ldl3W8\n\n#define fb iChannel0\nvec3 hash3D( vec2 p )\n{\n\t// texture based white noise\n\treturn texture( iChannel1, p*0.14 ).xyz;\n}\n\nfloat voronoi( vec2 x )\n{\n    vec2 cellFlo = floor(x);\n    vec2 cellFra = fract(x);\n\n    float md = 100.0; // minimum distance find\n    for( int j=-1; j<=1; j++ )\n    for( int i=-1; i<=1; i++ )\n    {\n\t\t// current cell coordinate\n        vec2 celPos = cellFlo + vec2(float(i),float(j));\n        vec3 rnd = hash3D(celPos);\n\t\t// ptPos: random point location in local cell coordinate\n        vec2 ptPos = vec2(.5) + vec2(sin(iTime*rnd.z*1.45), cos(iTime*rnd.z*1.174))*.5 ; //point in local cell axis\n\t\tptPos += celPos;  // ptPos: now in global position\n        \n        vec2 v = ptPos-x;\n        float d = dot(v,v);\n\n        if( d<md )\n        {\n            md = d;\n        }\n    }\n    return md ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 posnorm = fragCoord.xy / iResolution.xy - 0.5;\n\tvec4 old = texture(fb, posnorm+0.5);\n    vec2 p = fragCoord.xy/iResolution.xx;\n    float c = voronoi( 8.0*p );\n    vec4 cur = vec4(c, c*c, c*c*c, 1.);\n    //\n    //fragColor = cur;\n\t//fragColor = old * vec4(0.5,0.6,0.65,1.0)*0.75 + cur ; \n    fragColor = max(old*vec4(0.96,0.985,0.995,1.), cur );\n    \n}","name":"Buf A","description":"","type":"buffer"}]}