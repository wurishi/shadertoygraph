{"ver":"0.1","info":{"id":"4d3XDj","date":"1461414571","viewed":1096,"name":"Hydrokinetics (webgl)","username":"noby","description":"WebGL version of Hydrokinetics (assembly 2015 4k intro winner). Doesn't compile on Chrome, probably due to amount of instructions and/or compile time.\n\nhttps://www.pouet.net/prod.php?which=66059\nhttps://www.youtube.com/watch?v=7wLA0IVj7sA","likes":43,"published":1,"flags":64,"usePreview":1,"tags":["raymarching","distancefields","intro","4k","water","volumetric","demo","csg","spheretracing","assembly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3zs","filepath":"https://soundcloud.com/noby/hydrokinetics","previewfilepath":"https://soundcloud.com/noby/hydrokinetics","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// NOTE: This source is minified and hard to read\n// there are also some minute changes to accomodate the ES 2.0 spec.\n\n// Works on AMD, might not show or bug out on other vendors\n#define BUBBLES\n\nfloat x=.001,v=0.,y=0.,f=0.,z=0.,d=0.,r=0.,e=0.,g=0.,o=0.,t=0.,a=0.,l=0.,i=0.,u=0.,h=0.,b=0.,C=0.;\nvec3 Y;\nfloat p(float v,float g)\n{\n\treturn v*g*exp(1.-v*g);\n}\n\n// global initializations in webgl must be constants\n// this hack circumvents that\nvoid updateglobals()\n{\n    v=iTime*2.7;\n    y=p(9.,mod(clamp(v,19.,99.),2.5223));\n    f=p(3.,mod(clamp(v,19.,99.),2.5223));\n    z=1.5-smoothstep(151.,199.,v);\n    d=pow(smoothstep(151.,199.,v),2.);\n    r=1.+9.*smoothstep(-100.,100.,-v);\n    e=smoothstep(208.,228.,v);\n    g=smoothstep(254.,260.,v);\n    o=smoothstep(331.,340.,v);\n    t=smoothstep(40.,80.,v);\n    a=pow(smoothstep(101.,105.,v),.5);\n    l=1.-smoothstep(204.,205.,v);\n    i=smoothstep(214.,225.,v);\n    u=smoothstep(222.,240.,v);\n    h=smoothstep(242.,244.,v);\n    b=1.+8.*p(3.,clamp(v-204.,0.,99.));\n    C=v+.6*max(0.,f);\n    Y=9.*vec3(sin(v*.8),1,cos(.63*v));\n}\n\nmat3 p(float v)\n{\n\treturn mat3(1.,0.,0.,0.,cos(v),-sin(v),0,sin(v),cos(v));\n}\n\nmat3 n(float v)\n{\n\treturn mat3(cos(v),0.,sin(v),0.,1.,0.,-sin(v),0.,cos(v));\n}\n\nmat3 s(float v)\n{\n\treturn mat3(cos(v),-sin(v),0.,sin(v),cos(v),0.,0.,0.,1.);\n}\n\nfloat w(float v)\n{\n\treturn fract(sin(dot(v,12.9898))*43758.5);\n}\n\nfloat n(float v,float m,float x)\n{\n    float s=clamp(.5+.5*(m-v)/x,0.,1.);\n    return mix(m,v,s)-x*s*(1.-s);\n}\n\nfloat n(vec3 v,float x)\n{\n    return length(v)-x;\n}\n\nfloat s(vec3 v,vec3 x)\n{\n    return length(max(abs(v)-x,0.));\n}\n\nfloat p(float v,float m,float x)\n{\n    return min(min(v,m),v-(x+min(v,m))+m);\n}\n\nfloat c(vec3 v)\n{\n    vec3 s=floor(v),f=fract(v);\n    f=f*f*(3.-2.*f);\n    float x=s.x+s.y*57.+113.*s.z;\n    return mix(mix(mix(w(x),w(x+1.),f.x),mix(w(x+57.),w(x+58.),f.x),f.y),mix(mix(w(x+113.),w(x+114.),f.x),mix(w(x+170.),w(x+171.),f.x),f.y),f.z);\n}\n\nfloat c(vec3 v,float x)\n{\n    v.y-=x/2.;\n    vec3 m=abs(v);\n    return max(v.y,(m.x+m.y/1.2+m.z-x)/3.);\n}\n\nfloat k(vec3 x)\n{\n\treturn x.y+=20.-20.*t-.53*u,x=(x+vec3(.7,1.,.8))*p((v-101.)*.34*a*l)*n((v-101.)*.41*a*l)*s((v-101.)*.23*a*l),mix(max(c(x*n(v*.13),1.5+2.*h),-c(vec3(x.x,-x.y+.4,x.z)*n(v*.13)*p((v-260.)*.24*g)*s((v-260.)*.23*g),1.5*(1.-l)*(1.-h)+3.*g)),min(min(min(n(x+r*vec3(0.,.4883,0.),.6),n(x+r*vec3(-.3554,-.4883,-.6),.6)),n(x+r*vec3(.6838,-.4883,0.),.6)),n(x+r*vec3(-.3554,-.4883,.6),.6)),a-(1.-l)+o);\n}\n\nfloat F(vec3 x)\n{\n    float m=c(vec3(x.x,x.y,x.z)*(12.-3.*d)),f=s(vec3(x.x,x.y-.5-.2*(sin(x.z*.6)+cos(x.x*.6))-.004*m,x.z),vec3(9.,0.,9.)),y=k(x);\n    vec3 w=mod(x,z+g)-.5*(z+g);\n    float i=s(vec3(w.x+g*.1*sin(2.*x.y+2.*x.z+v),x.y,w.z+g*.1*cos(2.*x.y+2.*x.x+v)),vec3(.25,.81,.25)),l=s(vec3(w.x+g*.1*sin(2.*x.y+2.*x.z+v),x.y+.25,w.z+g*.1*cos(2.*x.y+2.*x.x+v)),vec3(.29,.04,.29)),r=max(-y+.3-.3*e+.6*h+.6*g,min(i,l)+(.00114+.0001*d-.0001*g)*m);\n    return min(n(f,r,.3),y);\n}\n\nfloat q(vec3 v)\n{\n\treturn v.zx+=.1*vec2(c(v.yzx+C*.78),c(v.zxy+C*.91)),pow(c(7.*vec3(v.x,220.+v.y+mod(C*.1,10.),v.z)),1.2);\n}\n\nvec3 Z(vec3 v)\n{\n    float x=.01;\n    return normalize(vec3(F(v+vec3(x,0.,0.))-F(v-vec3(x,0.,0.)),F(v+vec3(0.,x,0.))-F(v-vec3(0.,x,0.)),F(v+vec3(0.,0.,x))-F(v-vec3(0.,0.,x))));\n}\n\nfloat F(vec3 v,vec3 x,float m,float y,float f)\n{\n    // WebGL version of soft shadows, courtesy of iq\n    float res = 1.0;\n    float t = m;\n    for( int i=0; i<16; i++ )\n    {\n\t\tfloat h = F( v + x*t );\n        res = min( res, f*h/t );\n        t += clamp( h, 0.02, 0.10 );\n        if( h<0.001 || t>y ) break;\n    }\n    return clamp( res, 0.0, 1.0 );\n    // original shadows\n    /*\n    float i=1.;\n    for(float s=m;s<y;)\n    {\n        float c=F(v+x*s);\n        if(c<.001)\n        return 0.;\n        i=min(i,f*c/s);\n        s+=c;\n    }\n    return i;\n\t*/\n}\n\nfloat Z(vec3 v,vec3 x,float m,float y,float f)\n{\n    float res = 1.0;\n    float t = m;\n    for( int i=0; i<16; i++ )\n    {\n\t\tfloat h = k( v + x*t );\n        res = min( res, f*h/t );\n        t += clamp( h, 0.02, 0.10 );\n        if( h<0.001 || t>y ) break;\n    }\n    return clamp( res, 0.0, 1.0 );\n    /*\n    float i=1.;\n    for(float s=m;s<y;)\n    {\n        float c=k(v+x*s);\n        if(c<.001)\n        return 0.;\n        i=min(i,f*c/s);\n        s+=c;\n    }\n    return i;\n\t*/\n}\n\nvec3 F(vec3 x,float s)\n{\n    vec3 m=normalize(x-Y);\n    float g=max(0.,dot(m,Z(x)));\n    vec3 f=x*5.,r=mix(vec3(.7,.55,.47),vec3(.75,.61,.41),clamp(9.*x.y-1.,0.,2.))+2.*y*.2*c(vec3(f.x+v,1.,f.z+v))-.1*c(vec3(1.75*f.x-v,v,1.75*f.z-v));\n    return vec3(.4,.65,.7)/clamp(vec3(.3*s),.7,32.)*r*1.25*vec3(.85,.7,.55)*(.2+.8*g)*(.2+.8*F(x,m,.06,80.,2.));\n}\n\nvec3 Z(vec3 v,vec3 s)\n{\n    vec3 m=vec3(0.);\n    float f,i;\n    f=i=0.;\n    for(int g=0;g<30;++g)\n    {\n        m=v+f*s;\n        i=F(m);\n        f+=i;\n        if(20.<f||abs(i)<x)\n        break;\n    }\n    return F(m,f);\n}\n\nvec3 k(vec3 v,vec3 m)\n{\n    vec3 f=vec3(0.);\n    float s,i;\n    s=i=0.;\n    for(int g=0;g<30;++g)\n    {\n        f=v+s*m;\n        i=F(f);\n        s+=i;\n        if(20.<s||abs(i)<x)\n        break;\n    }\n    if(k(f)<x)\n    {\n        vec3 g=Z(f);\n        return(.45+.75*max(0.,min(1.,.8+.5*(1.+dot(s*m,g)))))*(.6*Z(f+.1*g,m-2.*dot(m,g)*g)+.4*pow(F(f,s),vec3(.4))+.4*pow(max(dot(normalize(m-Y),g),0.),80.));\n    }\n    return F(f,s);\n}\n\nvec3 q(vec3 v,vec3 m)\n{\n    vec3 f=vec3(0.);\n    float s,i,c,y,g,r=1.;\n    s=i=c=y=g=0.;\n    for(int l=0;l<90;++l)\n    {\n        f=v+s*m;\n#ifdef BUBBLES\n        // only works properly on AMD\n        i=min(F(f),q(f));\n#else\n        i=F(f);\n#endif\n        s+=i;\n        y+=b*.01*pow(i,1.6)/k(f);\n        vec3 w=normalize(f-Y);\n        r+=.015*sqrt(i)/(.005+Z(f,w,.06,6.,1.)/k(f));\n        if(20.<s||abs(i)<x)\n        break;\n\t}\n#ifndef BUBBLES\n    s=min(s,20.0);\n#endif\n    if(20.<s)\n\t\treturn vec3(min(2.*smoothstep(0.,12.,-f.y*.3),.3))/r+y+g;\n    if(k(f)<x)\n    {\n    \tvec3 l=Z(f);\n    \treturn(.45+.75*max(0.,min(1.,.8+.5*(1.+dot(s*m,l)))))*(.6*k(f+.1*l,m-2.*dot(m,l)*l)+.4*pow(F(f,s),vec3(.4))+.4*pow(max(dot(normalize(m-Y),l),0.),80.))/r+y+g;\n    }\n    return F(f,s)/r+y+g;\n}\n\nvec3 X(vec3 v)\n{\n\treturn v=pow(.1+v,vec3(2.5)),v.y=pow(v.y,.56),v.z+=pow(v.z,.8)+.1,v.yz*=.8,v.y=smoothstep(-.1,1.2,v.y*.9)+.05,v*5.-.05;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    updateglobals();\n    vec2 x=iResolution.xy,f=1.-2.*fragCoord.xy/x.xy;\n    f.y*=x.y/x.x;\n    mat3 m=p(-.22)*n(2.)*s(.06),r=p(.03*c(vec3(v*1.1578)))*n(.02*c(vec3(v*1.2462+x.x)))*s(.03*c(vec3(v*1.3102+x.y))),i=p(.008*c(17.*vec3(f.x,f.y,.22*v)))*n(.008*c(17.*vec3(f.x*.91,f.y*.73,.41*v)))*s(.008*c(17.*vec3(f.x*1.13,f.y*.91,.33*v)));\n    vec3 l=vec3(-4.-2.*g,-12.8+9.*smoothstep(0.,28.,v)+2.*smoothstep(24.,45.,v),1.),z=vec3(f,.8+.04*y);\n    float d=.2*smoothstep(50.,80.,v)-.3*p(3.,.3*clamp(v-20.,0.,20.));\n    if(v>44.&&v<61.||v>202.&&v<209.||v>105.&&v<119.||v>342.)\n    \tl=vec3(-5.,-6.-6.*clamp((v-342.)/50.,0.,9.),2.),m=p(-.6-clamp((v-342.)/105.,0.,9.))*n(2.)*s(.06),d-=.25;\n    if(v>230.&&v<240.)\n    \tl=vec3(-2.,-1.5,.5),m=p(-.12)*n(2.4)*s(0.);\n    z=normalize(z)*m*r*i;\n    vec3 C=X(pow(q(l,z),vec3(.8+d)));\n    float a=.6/(.8+(.25+1./(smoothstep(0.,28.,v)-smoothstep(383.,399.,v)))*dot(f,f));\n    fragColor=vec4(1.7*pow(.03*vec3(w(length(f)*v))+C*a,vec3(1.6)),1.);\n}\n","name":"Image","description":"","type":"image"}]}