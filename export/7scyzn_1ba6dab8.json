{"ver":"0.1","info":{"id":"7scyzn","date":"1652946439","viewed":75,"name":"pulse 81172594847582â‰¥839","username":"HaleyHalcyon","description":"rrrr","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TURN (6.283185307)\n\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n\n\nvec3 getColor(float r, float aa) {\n    r = fract(r);\n    float mix0 = smoothstep(0., aa, r);\n    float mix1 = smoothstep(0., aa, r - 0.25);\n    float mix2 = smoothstep(0., aa, r - 0.5);\n    float mix3 = smoothstep(0., aa, r - 0.75);\n    \n    vec3 color0 = HEX(0x009BE8);\n    vec3 color1 = HEX(0xEB0072);\n    vec3 color2 = HEX(0xfff100);\n    vec3 color3 = HEX(0x000000);\n    \n    return (\n        color0 * (mix0 - mix1) +\n        color1 * (mix1 - mix2) +\n        color2 * (mix2 - mix3) +\n        color3 * (mix3 - mix0 + 1.)\n    );\n}\nfloat smoothbump(float t) {\n    return floor(t) +\n    smoothstep(\n      0.5,0.56,fract(t)\n    );\n}\n\nvec2 angleVec(float theta) {\n    return vec2(cos(theta), sin(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  float t = fract(iTime / 2.);\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 uv = (2. * fragCoord.xy - iResolution.xy) / length(iResolution.xy);\n  \n  float dist = length(uv);\n  float angle = atan(uv.y, uv.x) / TURN;\n  \n  float v = -0.125 - t - angle + dist * 16. + 1. * smoothbump(dist * 1.3 - t * 1.);\n  \n  // Output to screen\n  fragColor = vec4(\n      getColor(v, fwidth(dist) * 32.), 1.0\n  );\n}","name":"Image","description":"","type":"image"}]}