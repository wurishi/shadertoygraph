{"ver":"0.1","info":{"id":"tldXWS","date":"1581640213","viewed":97,"name":"hsbrotate","username":"NY","description":"a","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\nvec3 hsb2rgb(vec3 c)\n{\n    vec3 rgb = clamp(abs(mod(c.x * 6. + vec3(0. , 4., 2.), 6.) - 3.) - 1., 0., 1. );\n    rgb = rgb * rgb * (3. - 2. * rgb);\n    return c.z * mix(vec3(1.), rgb, c.y);\n}\n\n\nmat2 zrotate(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // 0.0を原点に -0.5〜0.5にする\n    vec2 toCenter = vec2(0.5) - uv;\n    // 回転\n    toCenter *= zrotate(iTime);\n    \n    // 原点からの距離 \n    float radius = length(toCenter);\n    // 0〜1.0にする\n    radius *= 2.;\n    \n     // 原点のX軸とUVのラジアンを算出\n    float angle = atan(toCenter.y,toCenter.x);\n    // ラジアン(-π〜π)をπ * 2で割ることで-0.5〜0.5にする\n    angle /= TWO_PI;\n    // 0.0〜1.0に\n    angle += 0.5;\n    \n    // 極座標系作成\n    vec3 hsb = vec3(angle, radius, 1.);   \n    // hsbからrgbに変換\n    vec3 color = hsb2rgb(hsb);\n\n    // Output to screen\n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}