{"ver":"0.1","info":{"id":"msfczH","date":"1686574411","viewed":73,"name":"Zooming Hexagons","username":"ApeSander","description":"My second shader","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["animated","hexagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.4, 0.6, 0.4);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    float d = sdHexagon(uv, 10.0);\n    \n    vec3 col = palette(d + iTime);\n    \n    d = sin(d*12.0 - iTime * 10.0) / 12.0;\n    d = abs(d);\n    \n    d = 0.02 / d;\n    \n    col *= d;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}