{"ver":"0.1","info":{"id":"fllSD4","date":"1625712490","viewed":55,"name":"Flag - Marshall Islands","username":"Eggy42","description":"Flag of The Marshall Islands. Based on BigWIngs tutorial. Note I'm also not from The Marshall Islands. Neat flag! ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["flag","marshallislands"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n\n// Flag of Marshall Islands\n// Based on BigWIngs flag tutorial\n// https://www.shadertoy.com/view/flsXRM\n//\n// https://flagcolor.com/marshall-islands-flag-colors/\n\nfloat PI = 3.14159;\nvec3 GOLD = vec3(229, 114, 0)/255.; // PANTONE PMS 152 C \nvec3 BLUE = vec3(0, 48, 135)/255.; // PANTONE PMS 287 C\nvec3 WHITE = vec3(1.);\n\n// signed distance to a n-star polygon with external angle en\n// From iq: https://www.shadertoy.com/view/3tSGDy\nfloat sdStar_24(in vec2 p, in int n, in float m)\n{\n    float r = 0.7;\n    \n    // these 4 lines can be precomputed for a given shape\n    float an = 3.141593/float(n);\n    float en = 3.141593/m;\n    vec2  acs = vec2(cos(an),sin(an));\n    vec2  ecs = vec2(cos(en),sin(en)); // ecs=vec2(0,1) and simplify, for regular polygon,\n\n    // reduce to first sector\n    float bn = mod(atan(p.x,p.y),2.0*an) - an;\n    p = length(p)*vec2(cos(bn),abs(sin(bn)));\n\n    // line sdf\n    p -= r*acs;\n    p += ecs*clamp( -dot(p,ecs), 0.0, r*acs.y/ecs.y);\n    return length(p)*sign(p.x);\n}\n\nvec2 Remap(vec2 p, float b, float l, float t, float r) {\n    return vec2( (p.x-l) / (r-l), (p.y-b) / (t-b));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    // Wavy uv\n    float t = uv.x*2.-2.*iTime+uv.y*3.;\n    uv.y += sin(t)*.05;\n  \n    // Default color\n    vec3 col = BLUE;\n \n    // Pixel width\n    float w = fwidth(uv.x);\n     \n    // Rays\n    vec2 sv = uv+vec2(1.1, .55);\n    float ray = dot(sv, vec2(-.51, 1.0));\n    ray = S(-w, w, ray);\n    col = mix(GOLD, BLUE, ray);\n    \n    ray = dot(sv, vec2(-.42, 1.));\n    ray = S(-w, w, ray);\n    col = mix(WHITE, col, ray); \n    \n    ray = dot(sv, vec2(-.33, 1.));\n    ray = S(-w, w, ray);\n    col = mix(BLUE, col, ray); \n  \n    // Star\n    sv = Remap(uv, 0.15, -.5, 0.45, -.2);\n    float sw = fwidth(sv.x);\n    float star = sdStar_24(sv, 24, 14.);\n    star = S(-sw, sw, star);\n    col = mix(WHITE, col, star); \n    \n    sv = Remap(uv, 0.15, -.5, 0.6, -.1);\n    star = sdStar_24(sv, 4, 3.8);\n    star = S(-sw, sw, star);\n    col = mix(WHITE, col, star); \n\n    // Shading \n    col *= .7+cos(t)*.3;\n\n    // Clip top and bottom\n    col *= S(w, .0, abs(uv.y)-.5);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}