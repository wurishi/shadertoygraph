{"ver":"0.1","info":{"id":"4dsyz2","date":"1488978107","viewed":193,"name":"GLRow","username":"Unix","description":"Rows.glsl\" by keijiro, fast porting for shadertoy's community ;-)\n\nkeijiro great works can be found here : \"https://github.com/keijiro\"\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["rowkeijiroblackwhite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// \"Rows.glsl\" by keijiro \n// Ported on ShaderToy by Unix\n// https://github.com/keijiro/ShaderSketches/blob/master/Rows.glsl\n// \n\nconst float PI = 3.141592;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 coord = fragCoord.xy;\n    vec2 size = iResolution.xx / vec2(60, 15);\n\n    float y = coord.y / size.y;\n    float scr = 3.;// + 3 * fract(floor(y) * 12433.34);\n    float x = coord.x / size.x + scr * iTime;\n \n    float t = iTime * 1.1;\n    float t01 = fract(t);\n    float phase = floor(x) * 2353.48272 + floor(y) * 2745.32782 + floor(t);\n\n    float h = mix(\n    fract(sin(phase    ) * 1423.84),\n    fract(sin(phase + 1.) * 1423.84),\n    smoothstep(0.8, 1., t01) * 1.3 - smoothstep(0.5, 0.8, t01) * 0.3);\n\n    float c1 = (0.4 - abs(0.4 - fract(x))) / 0.8 * size.x;\n    float c2 = (h - fract(y)) * size.y;\n    float c = clamp(c1, 0., 1.) * clamp(c2, 0., 1.);\n\n    fragColor = vec4(c, c, c, 1.);\n}","name":"Image","description":"","type":"image"}]}