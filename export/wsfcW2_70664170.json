{"ver":"0.1","info":{"id":"wsfcW2","date":"1585598848","viewed":167,"name":"Glitchdream","username":"Leria","description":"Here is my first Shadertroy shader. The effect on the screen looks like a glitch in the matrix. Colors remind a dream but also old days (80's).  It's an evolutive cyberpunk texture adapted for holograms.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner","random","glitch","green","purple","dream"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright Erwan LERIA\n//Free for any use, just cite my name.\n\n//Modifying theta change the speed\n\n#define PI 3.1410 \n#define theta 5.8 \n\nvec3 r1(vec3 v)\n{\n\treturn 0.3*cos(v);\n}\n\nvec3 r2(vec3 v)\n{\n\treturn iTime*v.xyz;\n}\n\nfloat morphx(float x)\n{\n\treturn x;\n}\n\n\nfloat morphy(float y)\n{\n\tif(0. > cos(y) && cos(y) < PI/2.0)\n    {\n    \treturn tan(y);\n    }\n    \n    return -y;\n}\n\nfloat morphz(float z)\n{\n    if(0. > sin(z) && sin(z) < PI/2.0)\n    {\n    \treturn -z;\n    }\n    \n    return tan(z);\n}\n\nvec3 morph_coord(vec3 v)\n{\n\tvec3 outv = v;\n    outv.x = morphx(v.x);\n    outv.y = morphy(v.y);\n    outv.z = morphz(v.z);\n    \n    return outv;\n}\n\nvec3 r3(vec3 v)\n{\n   morph_coord(v);\n   return v;\n}\n\nvec3 noise(vec3 coord)\n{\n    coord = r1(coord);\n    coord = r2(coord);\n    coord = r3(coord);\n    return coord;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col;\n\tif(fragCoord.x < iResolution.x/4.)\n    {\n        col = 0.2+sin(theta)*sin(iTime+noise(fragCoord.xyx));\n    }\n    \n    else if(fragCoord.x > iResolution.x/4. && (fragCoord.x < iResolution.x/2.))\n    {\n        col = 0.25+sin(theta)*sin(iTime+noise(fragCoord.xyx));\n    }\n    \n        else\n    {\n        col = 0.3+sin(theta)*sin(iTime+noise(fragCoord.xyx));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}