{"ver":"0.1","info":{"id":"MlKfDR","date":"1542265531","viewed":102,"name":"waved advected texture","username":"imagire","description":"A sample of an advected texture with two planes.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 sample_advected_texture(\n    sampler2D tex, // テクスチャ\n    vec2 uv, // テクスチャ座標\n    float normalized_time, // 0-1で繰り返されている時間\n    vec2 displacement, // 流れの強さ\n    vec2 d0, vec2 d1 // 個別にかける摂動 \n){\n    const float PI2 = 2.0 * 3.14159265;\n\n    float t0 = normalized_time;\n    float t1 = fract(normalized_time - 0.5);\n    \n    vec3 tex0 = texture(iChannel0, uv + displacement * t0 + d0).rgb;\n    vec3 tex1 = texture(iChannel0, uv + displacement * t1 + d1).rgb;\n    \n    float w0 = 0.5-0.5*cos(PI2 * t0);\n    float w1 = 1.0 - w0;\n\n    return w0 * tex0 + w1 * tex1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 画素の位置からテクスチャ座標を生成 (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // 横方向に小刻みに揺れる\n\tfloat dx0 = 0.02 * sin(iTime * 20.0);\n\tfloat dx1 = 0.02 * sin(iTime * 20.0 + 0.5);// 少しずらす\n    dx0 = mix(0.0, dx0, pow(uv.y, 5.0));// 上の方ほど揺らしてみる\n    dx1 = mix(0.0, dx1, pow(uv.y, 5.0));\n    vec2 d0 = vec2(dx0, 0.0);// 1枚目の揺れ\n    vec2 d1 = vec2(dx1, 0.0);// 2枚目の揺れ\n    \n    float t0 = fract(1.0 * iTime);// 定数は時間の流れる速さ\n    const vec2 displacement = vec2(0.0, -1.0);// 一定速度で上に上る\n    vec3 col = sample_advected_texture(iChannel0, uv, t0, displacement, d0, d1);\n    \n    // 上の方をなんとなく暗く\n    float transparency = 1.0 - pow(uv.y, 3.0) + 0.1*sin(uv.x*20.0 -3.0* iTime);\n    col = mix(vec3(0,0,0), col, transparency);\n    \n    // 画面に出力\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}