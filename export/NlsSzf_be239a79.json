{"ver":"0.1","info":{"id":"NlsSzf","date":"1626202061","viewed":201,"name":"AntiPod - Schala Theme","username":"Flopine","description":"A shader made as a loop for a track from ThronoCrigger, check out his albums!!! \nhttps://thronocrigger.bandcamp.com/","likes":6,"published":1,"flags":64,"usePreview":0,"tags":["2d","palette","animation","pattern","hexagons","mograph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4tlXDS","filepath":"https://soundcloud.com/thronocrigger/schalas-theme-chrono-trigger-thronocrigger-remix","previewfilepath":"https://soundcloud.com/thronocrigger/schalas-theme-chrono-trigger-thronocrigger-remix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings and FabriceNeyret for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU 6.283185\n#define hr vec2(1.,sqrt(3.))\n\n#define BPM (164./60.)\n#define dt(speed,off) fract(iTime*speed+off)\n#define animCirc(speed,off) easeInOutCirc(dt(speed,off))\n#define bouncy(sp,off) sqrt(sin(dt(sp,off)*PI))\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(0.07,fwidth(val-thre)))\n#define hdist(puv, s) (max(abs(puv.x),dot(abs(puv),normalize(hr)))-s)\n#define circle(puv,s) (length(puv)-s)\n\n#define mo(puv,d) puv=abs(puv)-d;if(puv.y>puv.x)puv=puv.yx;\n\n\nfloat easeInOutCirc (float x)\n{\n    return x < 0.5\n        ? (1. - sqrt(1. - (2.*x)*(2.*x))) / 2.\n        : (sqrt(1. - (-2.*x+2.)*(-2.*x+2.) + 1.)) / 2.;\n}\n\nvoid moda(inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.y,p.x),per)-per*0.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\nfloat line (vec2 uv, vec2 a, vec2 b, float r)\n{\n    vec2 pa = uv - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r*h;\n}\n\nfloat shooting_star (vec2 uv, float toff, vec2 uoff)\n{\n    vec2 a = vec2(2.)+uoff,\n        b = vec2(-6.)+uoff,\n        anima = mix(a,b,animCirc(BPM/2.,toff-0.2)),\n        animb = mix(anima,b,animCirc(BPM/2.,toff));\n    return AAstep(0.015,abs(line(uv, anima,animb, 0.1)));\n}\n\nfloat frame (vec2 uv)\n{\n    vec2 uu = uv;\n    mo(uv, vec2(2., 2.1));\n\t\n    moda(uv,6.);\n    uv.x -= 1.4;\n    float size = 0.15, thick=0.01, d = 1.; \n    float iter = floor(abs(sin(dt(BPM/6.,0.)*PI))*5.9);\n    for (float i=0.; i<iter; i++)\n    {\n        d *= AAstep(thick,abs(hdist(uv,size)));\n    \tsize += 0.12; thick += 0.007;\n    }\n    \n   \td *= shooting_star(uu,0.,vec2(1.,0.));\n    d *= shooting_star(uu,0.3,vec2(-1.5,0.5));\n    d *= shooting_star(uu,0.4,vec2(2.5,0.));\n    d *= shooting_star(uu,0.6,vec2(-3.5,0.1));\n    \n    uv = uu;\n    uv.y -= -.3+bouncy(BPM/6.,0.)*0.5;\n    d *= AAstep(0.02,abs(circle(uv,0.6)));\n    \n    return 1.-d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(frame(uv*2.));\n    col.r -= frame(uv*2.02)*0.5;\n    col.g -= frame(uv);\n    col.b += frame(uv*2.08);\n    \n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}