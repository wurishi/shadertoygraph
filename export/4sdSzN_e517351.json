{"ver":"0.1","info":{"id":"4sdSzN","date":"1458043591","viewed":920,"name":"Custom Noise","username":"pixartist","description":"A combination of two widely used noise algorithms, with a custom seed algorithm. No idea about the mathematical value of this, but I have used it for quite long path-tracing implementations and it proved to produce nearly zero randomization artefacts.","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["noise","random","gaussian","artefacts","randomize"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat seed = 0.0;\nvoid init(vec2 uv)\n{\n    seed = (uv.y + iTime * 0.523413187) * sqrt(uv.x * 0.77777777 * iTime);\n}\n\nfloat rand(vec2 s) \n{ \n    float n = fract(sin(seed+=1.0)*43758.5453123);\n    return fract(n + fract(sin(dot(vec2(n * s.y, s.x)*0.123,vec2(12.9898,78.233))) * 43758.5453));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    init(uv);\n    \n\tfragColor = vec4(rand(uv));\n}","name":"Image","description":"","type":"image"}]}