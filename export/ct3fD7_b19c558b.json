{"ver":"0.1","info":{"id":"ct3fD7","date":"1701282899","viewed":111,"name":"Simple black hole","username":"Confession","description":"A simple black hole shader I made in 10 minutes. Use mouse to move it around.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blackhole"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define radius (0.5)\n#define radius2 (1.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    vec2 m = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n    \n    uv.x *= iResolution.x / iResolution.y;\n    m.x *= iResolution.x / iResolution.y;\n    \n    float l = distance(uv, m) * 1.0/radius;\n    float ol = l;\n    \n    l -= radius;\n    l = 1.0 - 1.0 / (1.0 - radius2 + l);\n    uv = m * max(1.0 - l, 0.0) + uv * min(l, 1.0);\n\n    vec4 col = texture(iChannel0, uv / iResolution.x * iResolution.y * 0.5 + 0.5);\n    vec4 holecol = vec4(0.0f);//vec4(2.0f, 1.4f, 2.0f, 0.0) * smoothstep(0.1, 1.0, ol);\n    float interp = smoothstep(1.0, 1.4, ol/radius);\n    \n    col =  interp * col + (1.0 - interp) * holecol;\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}