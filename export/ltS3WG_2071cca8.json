{"ver":"0.1","info":{"id":"ltS3WG","date":"1431816720","viewed":481,"name":"Fire rose","username":"Lallis","description":"Creating fire with some simplex fbm. Maybe try out some different colors ? ;)","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fbm","fire","simplex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.14159265359\n\nfloat noise3D(vec3 p)\n{\n\treturn fract(sin(dot(p ,vec3(12.9898,78.233,128.852))) * 43758.5453)*2.0-1.0;\n}\n\nfloat simplex3D(vec3 p)\n{\n\t\n\tfloat f3 = 1.0/3.0;\n\tfloat s = (p.x+p.y+p.z)*f3;\n\tint i = int(floor(p.x+s));\n\tint j = int(floor(p.y+s));\n\tint k = int(floor(p.z+s));\n\t\n\tfloat g3 = 1.0/6.0;\n\tfloat t = float((i+j+k))*g3;\n\tfloat x0 = float(i)-t;\n\tfloat y0 = float(j)-t;\n\tfloat z0 = float(k)-t;\n\tx0 = p.x-x0;\n\ty0 = p.y-y0;\n\tz0 = p.z-z0;\n\t\n\tint i1,j1,k1;\n\tint i2,j2,k2;\n\t\n\tif(x0>=y0)\n\t{\n\t\tif(y0>=z0){ i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; } // X Y Z order\n\t\telse if(x0>=z0){ i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; } // X Z Y order\n\t\telse { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }  // Z X Z order\n\t}\n\telse \n\t{ \n\t\tif(y0<z0) { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; } // Z Y X order\n\t\telse if(x0<z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; } // Y Z X order\n\t\telse { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; } // Y X Z order\n\t}\n\t\n\tfloat x1 = x0 - float(i1) + g3; \n\tfloat y1 = y0 - float(j1) + g3;\n\tfloat z1 = z0 - float(k1) + g3;\n\tfloat x2 = x0 - float(i2) + 2.0*g3; \n\tfloat y2 = y0 - float(j2) + 2.0*g3;\n\tfloat z2 = z0 - float(k2) + 2.0*g3;\n\tfloat x3 = x0 - 1.0 + 3.0*g3; \n\tfloat y3 = y0 - 1.0 + 3.0*g3;\n\tfloat z3 = z0 - 1.0 + 3.0*g3;\t\n\t\t\t\t \n\tvec3 ijk0 = vec3(i,j,k);\n\tvec3 ijk1 = vec3(i+i1,j+j1,k+k1);\t\n\tvec3 ijk2 = vec3(i+i2,j+j2,k+k2);\n\tvec3 ijk3 = vec3(i+1,j+1,k+1);\t\n            \n\tvec3 gr0 = normalize(vec3(noise3D(ijk0),noise3D(ijk0*2.01),noise3D(ijk0*2.02)));\n\tvec3 gr1 = normalize(vec3(noise3D(ijk1),noise3D(ijk1*2.01),noise3D(ijk1*2.02)));\n\tvec3 gr2 = normalize(vec3(noise3D(ijk2),noise3D(ijk2*2.01),noise3D(ijk2*2.02)));\n\tvec3 gr3 = normalize(vec3(noise3D(ijk3),noise3D(ijk3*2.01),noise3D(ijk3*2.02)));\n\t\n\tfloat n0 = 0.0;\n\tfloat n1 = 0.0;\n\tfloat n2 = 0.0;\n\tfloat n3 = 0.0;\n\n\tfloat t0 = 0.5 - x0*x0 - y0*y0 - z0*z0;\n\tif(t0>=0.0)\n\t{\n\t\tt0*=t0;\n\t\tn0 = t0 * t0 * dot(gr0, vec3(x0, y0, z0));\n\t}\n\tfloat t1 = 0.5 - x1*x1 - y1*y1 - z1*z1;\n\tif(t1>=0.0)\n\t{\n\t\tt1*=t1;\n\t\tn1 = t1 * t1 * dot(gr1, vec3(x1, y1, z1));\n\t}\n\tfloat t2 = 0.5 - x2*x2 - y2*y2 - z2*z2;\n\tif(t2>=0.0)\n\t{\n\t\tt2 *= t2;\n\t\tn2 = t2 * t2 * dot(gr2, vec3(x2, y2, z2));\n\t}\n\tfloat t3 = 0.5 - x3*x3 - y3*y3 - z3*z3;\n\tif(t3>=0.0)\n\t{\n\t\tt3 *= t3;\n\t\tn3 = t3 * t3 * dot(gr3, vec3(x3, y3, z3));\n\t}\n\treturn 96.0*(n0+n1+n2+n3);\n\t\n}\n\nfloat fbm(vec3 p)\n{\n\tfloat f;\n    f  = 0.50000*simplex3D( p ); p = p*2.01;\n    f += 0.25000*simplex3D( p ); p = p*2.02; //from iq\n    f += 0.12500*simplex3D( p ); p = p*2.03;\n    f += 0.06250*simplex3D( p ); p = p*2.04;\n    f += 0.03125*simplex3D( p );\n\treturn f;\n}\n\nmat3 rot(vec3 ang)\n{\n\tmat3 x = mat3(1.0,0.0,0.0,0.0,cos(ang.x),-sin(ang.x),0.0,sin(ang.x),cos(ang.x));\n\tmat3 y = mat3(cos(ang.y),0.0,sin(ang.y),0.0,1.0,0.0,-sin(ang.y),0.0,cos(ang.y));\n\tmat3 z = mat3(cos(ang.z),-sin(ang.z),0.0,sin(ang.z),cos(ang.z),0.0,0.0,0.0,1.0);\n\treturn x*y*z;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n\tvec2 p = uv*2.0-1.0;\n\tp.x*=1.78;\n    p.x*=2.0;\n    p.x*=uv.y*uv.y+2.0;\n    p.x*=pow(uv.y,10.0*uv.y)+0.8;\n\tp.y-=1.0;\n\tuv.y-=0.2;\n\tfloat time = iTime*0.25;\n\tp.x+=fbm(vec3(time*0.1,uv)*0.5)*0.5;\n\tvec3 ro = vec3(0.0,-time*4.0,-2.0);\n\tvec3 rd = normalize(vec3(vec2(p.x,p.y-time*4.0),0.0)-ro);\n\tvec3 lp = vec3(0.0,-time*4.0-1.5,0.0);\n\tvec3 col = vec3(0.02, 0.005,0.001);\n\tif(length(p)<2.5) // don't waste resources on pixels that are behind the mask\n\t{\n\t\tfor(int i = 0; i<5; i++)\n\t\t{\t\n\t\t\tvec3 rp = ro+rd*float(i);\n\t\t\tfloat c = distance(rp,lp);\n\t\t\tfloat n = fbm(rp)*0.5+0.5;\n\t\t\tcol = col*(10.0*n/c)*(fbm(vec3(time*0.1))*0.5+1.0);\n\t\t\t\n\t\t}\n\t}\t\t//some color masks with fbm\n\tcol*=smoothstep(1.0,-1.0,uv.y-smoothstep(0.0,1.0,fbm(vec3(vec2(p.x,uv.y*1.0-time*2.0),time)*1.0)*2.0));\n\tcol*=smoothstep(1.0,-1.0,uv.y-smoothstep(0.0,1.0,fbm(vec3(vec2(p.x+100.0,uv.y*1.0-time*1.5),time)*2.0)*2.0));\n\tcol*=smoothstep(1.0,-1.0,uv.y-smoothstep(0.0,4.0,fbm(vec3(vec2(p.x+200.0,uv.y*1.0-time*1.0),time)*2.0)*2.0));\n\tcol*=smoothstep(2.5,0.0,length(p)); //mask the edges\n\tcol*=vec3(1.0,1.0,100.0*smoothstep(0.0,-1.0,uv.y-p.x*p.x*0.1)); //blue hue bottom\n\tcol = clamp(col, 0.0,1.0);\n\n    col*=1.0+smoothstep(0.5,0.2,length((uv*2.0-1.0)*vec2(.75,1.0)+vec2(0.0,1.2)))*2.0; //stronger base for the flame\n    \n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}