{"ver":"0.1","info":{"id":"XdGXzR","date":"1462381234","viewed":295,"name":"Cross Hatch Van Damme","username":"dcoombes","description":"Just messing about... ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["screenspace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//I stole the magic from here:\n//https://www.shadertoy.com/view/MsSGD1\n\n\n\nconst vec4 baseCol = vec4(1.0,1.0,1.0,1.0);\nfloat time;\n\n\n\nfloat rand(float x)  //returns a float between 0 and 1.0\n{\n    return fract(sin(x) * 43758.5453);\n}\n\n\nfloat triangle(float x)\n{\n\treturn abs(1.0 - mod(abs(x), 2.0)) * 2.0 - 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n\ttime = floor(iTime * 16.0) / 16.0;\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color =  texture(iChannel0,uv).xyz;\n    vec4 vtex =  texture(iChannel1,uv).xyzw;\n     \n    //attempt at chroma key.  Not relevant    \n    if ((vtex.x < (15.0/256.0)) && (vtex.y > 155.0/256.0) && (vtex.z < 50.0/256.0))\n    {\n        color = color;\n        \n    }\n    else\n    {\n        color = vtex.xyz;\n    \n    }\n   \n        \n    fragColor = vec4(color,1.0); //input color\n    \n    float lum = (fragColor.x +  fragColor.y + fragColor.z)/3.0 ;\n\tfloat diffuse = lum;\n    \n        \n    vec2 q = fragCoord.xy / iResolution.xy;\n\tvec2 p = -1.0+2.0*q;\n\tp.x *= -iResolution.x/iResolution.y;\n\n    \n    //creates the random fuzziness of the hatching\n    p += vec2(triangle(p.y * rand(time) * 4.0) * rand(time * 1.9) * 0.015,\n\t\t\ttriangle(p.x * rand(time * 3.4) * 4.0) * rand(time * 2.1) * 0.015);\n\tp += vec2(rand(p.x * 3.1 + p.y * 8.7) * 0.01,\n\t\t\t  rand(p.x * 1.1 + p.y * 6.7) * 0.01);\n    \n    \n    \n    \n    float xs = (rand(time * 6.6) * 0.1 + 0.9);  //random number between 0.9 and 1.0 \n\tfloat ys = (rand(time * 6.6) * 0.1 + 0.9);  //random number between 0.9 and 1.0 \n\n\n    float magic1 = 170.0;\n    float magic2 = 110.0;\n    \n       float hatching = max((clamp((sin(p.x * xs * (magic1 + rand(time) * 30.0) +\n\t\t\t\t\t\t\tp.y * ys * (magic2 + rand(time * 1.91) * 30.0)) * 0.5 + 0.5) -\n\t\t\t\t\t\t   \t\t(1.0 - diffuse), 0.0, 1.0)),\n                                                  \n\t\t\t\t\t\t (clamp((sin(p.x * xs * (-magic2 + rand(time * 4.74) * 30.0) +\n\t\t\t\t\t\t\tp.y * ys * (magic1 + rand(time * 3.91) * 30.0)) * 0.5 + 0.5) -\n\t\t\t\t\t\t   \t\t(1.0 - diffuse) - 0.2, \n                                \n                                0.0, 1.0)));\n    \n    \n    //vec4 mCol = mix(vec4(1,0.9,0.8,1), vec4(1,0.9,0.8,1) * 0.5, hatching);\n    vec4 mCol = mix(baseCol*0.2, baseCol , hatching);\n\n    \n    \n    fragColor = mCol;\n    \n   \n  \n    \n    \n    \n\t\n}\n\n\n","name":"Image","description":"","type":"image"}]}