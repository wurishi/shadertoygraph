{"ver":"0.1","info":{"id":"7tfcWj","date":"1648697491","viewed":50,"name":"plot coord study","username":"Lumos320","description":"Drawing a simple function in a coordinate system","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["coord"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\n//坐标变换\nvec2 fixUV(in vec2 fc)\n{\n    vec2 uv = 3.*(2. * fc - iResolution.xy)/ min(iResolution.x,iResolution.y);\n    return uv;\n}\n\n//画坐标\nvec3 Coord(vec2 uv)\n{\n    //UV是整个屏幕的坐标位置，原点0在屏幕中心\n    vec3 col = vec3(0.3);\n    //模2后向下取整(0,1)\n    //画交叉颜色\n    vec2 cell = floor(mod(uv,2.));\n    if(cell.x == cell.y){\n        col = vec3(0.6);\n    }\n    //画坐标线为黑色\n    col = mix(col, vec3(0.),smoothstep(1.1*fwidth(uv.x), 0.9*fwidth(uv.x), abs(uv.x)));\n    col = mix(col, vec3(0.),smoothstep(1.1*fwidth(uv.y), 0.9*fwidth(uv.y), abs(uv.y)));\n\n    return col;\n}\n\n//函数\nfloat func(in float x)\n{\n    float T =  3. + sin(iTime);\n    return sin(2. * PI / T *x);\n}\n\n//画函数\nfloat funcPlot(in vec2 uv)\n{\n    float f = func(uv.x);\n    return smoothstep(f-0.01,f+0.01,uv.y);\n}\n\n#define N 4\n//画线段\nfloat fliter(in vec2 fragCoord)\n{\n    float count = 0.;\n    for(int i=0; i<N; ++i){\n        for(int j=0; j<N; ++j){\n            //偏移（0,1）\n            vec2 offset = (vec2(float(i),float(j)) - 0.5*float(N)) / float(N);\n            //类似边缘检测，求权重\n            count += funcPlot(fixUV(fragCoord + offset));\n        }\n    }\n\n    //将count限制在(0,0.5N)\n    if(count > float(N*N)/2.){\n        count = float(N*N) - count;\n    }\n    //归一化(0,1)\n    //count越接近0.5N，归一化后越接近1（越边缘）\n    count = count * 2. / float(N*N);\n    return count;\n\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fixUV(fragCoord);\n    vec3 color = Coord(uv);\n    \n    color = mix(color,vec3(1.),fliter(fragCoord));\n    fragColor = vec4(color,1.);\n}","name":"Image","description":"","type":"image"}]}