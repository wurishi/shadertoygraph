{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\r\n#define pi 3.14159265\r\n#define R(p, a) p=cos(a)*p+sin(a)*vec2(p.y, -p.x)\r\n#define hsv(h,s,v) mix(vec3(1.), clamp((abs(fract(h+vec3(1., 1., 3.)/3.)*6.-3.)-1.), 0., 1.), s)*v\r\n\r\nfloat smallBeat, mediumBeat, bigBeat;\r\n\r\nfloat pn(vec3 p) { //noise @Las^Mercury\r\n\tvec3 i = floor(p);\r\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\r\n\tvec3 f = cos((p-i)*pi)*(-.5) + .5;\r\n\ta = mix(sin(cos(a)*a), sin(cos(1.+a)*(1.+a)), f.x);\r\n\ta.xy = mix(a.xz, a.yw, f.y);\r\n\treturn mix(a.x, a.y, f.z);\r\n}\r\n\r\nfloat fpn(vec3 p) {\r\n\treturn pn(p*.06125)*.5 + pn(p*.125)*.25 + pn(p*.25)*.125;\r\n}\r\n\r\nfloat field(vec3 hitpoint,float r,float R) {\r\n\r\n\tif ( sin(iChannelTime[0]) > .5 ) {\r\n\t\t \r\n\t\t return (cos( hitpoint.x ) + cos( hitpoint.y ) + cos( hitpoint.z )) + r*1.2;\r\n\t\r\n\t} else {\r\n\t\t \r\n\t\t return length(vec2(length(sin(hitpoint.yz + sin(hitpoint.xy))*cos(hitpoint.yz + cos(hitpoint.yx))+sin(hitpoint.xy)) - r, sin(hitpoint.x) - r)) - R;\t\t//} else if(mediumBeat>0.1) {\r\n\r\n\t}\r\n\t\r\n}\r\n\t\r\nfloat distfunc(vec3 pos) {\r\n\tfloat t = iTime * 0.01;\r\n\tvec3 rotpos=mat3(vec3(cos(t*1.63),0.0,-sin(t*1.63)),vec3(0.0,1.0,0.0),vec3(sin(t*1.63),0.0,cos(t*1.63)))*mat3(vec3(cos(t*1.2),-sin(t*1.2),0.0),vec3(sin(t*1.2),cos(t*1.2),0.0),vec3(0.0,0.0,1.0))*(pos-vec3(1.0,1.0,-4.0));\r\n\treturn field(rotpos,(0.6 * smallBeat)+0.4 + (0.6 * bigBeat),(0.5 * mediumBeat)+0.45 + (0.5 * bigBeat)) + fpn(rotpos*30.+ t*25.) * 0.15;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // create pixel coordinates\r\n\tvec2 uv = fragCoord.xy / iResolution.xy;\r\n\t\r\n\t\r\n\tfloat x = uv.x;\r\n\tfloat y = uv.y;\r\n\t\r\n\tvec3 ray_dir  = normalize( vec3( x, y, -1.0 ) );\r\n\tvec3 ray_orig = vec3( 10.0, 2.0, 0.0 );\r\n\t\r\n\tfloat j, w, ld, td= 0.,offs = 0.0;\r\n\tvec3 tc = vec3(0.);\r\n\t\t\t\t\r\n\t\r\n\tfloat fft = texture( iChannel0, vec2(uv.x,1.75) ).x;\r\n\tvec3 sync = vec3( fft, 4.0*fft*(1.0-fft), 1.0-fft ) * fft;\r\n\r\n\tsmallBeat  = sync.r * 0.1;\r\n\tmediumBeat = sync.g * 0.1;\r\n\tbigBeat    = sync.b * 0.1;\t\r\n    \r\n\tfor( float i = 0.0; i < 50.0;i += 1.0 ) {\r\n\t\t\r\n\t\tfloat dist = distfunc(ray_orig+ray_dir*offs);\r\n\t\toffs+=dist;\r\n\t\t\t\r\n\t\tif ( abs(dist) < .05 ) {\r\n\t\t\t \r\n\t\t\t ld = 0.05 - dist;\r\n\t\t\t w = (1. - td) * ld;   \r\n\t\t\t\r\n\t\t\t tc = tc + w * hsv(w*3.-0.5, 1.-w*20., 1.); \r\n\t\t\t td = td + w ;\t\r\n\t\t}\t\r\n\t\t\r\n\t\ttd += 1./200.;\t\t\t\r\n\t\t\r\n\t\tif(abs(dist)<0.0001) break;\r\n\t\telse if(offs>50.0) break;\r\n\t\t\t\r\n\t}\r\n\t\r\n\tfragColor = vec4(tc + mediumBeat * 0.1, 1.0);\r\n\t\r\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdsGzn","date":"1361867922","viewed":665,"name":"Nebelfeld","username":"_pwd_","description":"Sound-raymarching-noisy-thingy","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","noise"],"hasliked":0,"parentid":"","parentname":""}}