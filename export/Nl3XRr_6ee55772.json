{"ver":"0.1","info":{"id":"Nl3XRr","date":"1638568524","viewed":204,"name":"Green ball","username":"makipl","description":"Random playing","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ray(in vec3 ro, in vec3 rd)\n{\n//float e=0.0000001;\n//h=0.2-rd.y; //plane\n\nfloat t=0.0;\nfloat h=0.;\nfor(int i=0; i<32; i++)\n{\nh=length(ro+rd*t)-0.70;\nh=max(h, -h+cos((ro+rd*t).y*64.)*+sin((ro+rd*t).x*128.)*sin(iTime));\nif(abs(h)<(0.005))\n{ return t;}\nt+=h;\n}\nreturn 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = (16.0*fragCoord.xy +iResolution.xy)/iResolution.y;\n\n    \n    \n    float col =1.0;\n    \n    \n    //uv.v = 1.0-uv.v;\n    \n    uv = (2.0*fragCoord.xy -iResolution.xy)/iResolution.y;\n    vec3 ta = vec3(0.51,1.00,0.0);\n    vec3 ro = vec3(0.0,0,-1.3);\n    \n    vec3 rd = normalize(vec3(uv,2.));\n    \n    \n    \n    vec3 ot = vec3(0.0);\n    float h = ray(ro,rd);\n    ot=mix(vec3(sin(h)),vec3(cos(h),sin(h),cos(h)),h);\n\n    fragColor = vec4(ot.xyz,1.0);\n}","name":"Image","description":"","type":"image"}]}