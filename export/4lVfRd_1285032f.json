{"ver":"0.1","info":{"id":"4lVfRd","date":"1543637916","viewed":96,"name":"Abel's equation, Mandelbrot","username":"BanditCat","description":"This shows different iterations of f(x)=z^2+c, ranging from 3 iterates, to -3 iterates (the inverse function), and going through complex iterates as well. Click and drag the mouse to change the coordinates.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["complexdynamics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986;\nconst int iter = 32;\n\nvec2 cExp( in vec2 x ){\n\tvec2 unit = vec2( cos( x.y ), sin( x.y ) );\n    return unit * exp( x.x );\n}\nfloat cAbs( in vec2 x ){\n    return sqrt( dot( x, x ) );\n}\nvec2 cLog( in vec2 x ){\n    float abs = cAbs( x );\n\tvec2 ans = vec2( log( abs ), atan( x.y / abs, x.x / abs ) );\n    return ans;\n}\nvec2 funnyAdd( in vec2 x, in vec2 y ){\n\tvec2 nv = cLog( cExp( x ) + cExp( y ) );\n    vec2 ans = vec2( nv.x, mod(nv.y - x.y + pi, 2.0 * pi) + x.y - pi );\n    return ans;\n}\nvec2 abels( in vec2 c ){\n\tvec2 v = cLog( c );\n    vec2 x = v;\n    int i = 0;\n    for( ; i < iter; ++i ){\n        vec2 err = x;\n    \tx = funnyAdd( 2.0 * x, v );\n        err = x / exp2( float( i ) + 1.0 ) - err / exp2( float( i ) );\n        if( dot( err, err ) < 0.0000000001 )\n            break;\n    }\n    return cLog(x / exp2(float(i+1) )) / vec2( log( 2.0 ), pi / 2.0 );\n}\nvec2 rabels( in vec2 c, in vec2 z ){\n    vec2 v = cLog( -c );\n    vec2 x = vec2( 0.0, 0.0 );\n    vec2 nv = cExp( z * vec2( log( 2.0 ), pi / 2.0 ) );\n    if( nv.x< 0.0){\n        nv = -nv;\n    }\n    for( int j = 1; j < iter; ++j ){\n        vec2 oldval = x;\n\t    x = nv*exp2( float( j ) );\n    \tfor( int i = 0; i < j; ++i ){\n    \t\tx = funnyAdd( x, v ) / 2.0;\n    \t}\n        if( length( oldval - x )  < 0.0001 ){\n            break;\n        }\n    }\n    return cExp( x );\n}\n    \n    \n    \n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv = (uv - vec2(0.5,0.5)) * 8.0;\n    uv *= vec2( iResolution.x / iResolution.y, 1.0 );\n    //vec2 pt = vec2( cos( iTime * 1.0 ),sin( iTime * 0.25 ) );\n\tvec2 pt = iMouse.xy/iResolution.xy - vec2(0.5);\n        \n\tvec2 coord = uv;\n    vec2 t = abels( coord );\n    coord = rabels( coord, t+ 3.0 * pt * 2.0 );\n    //coord = vec2( coord.x * coord.x - coord.y * coord.y + coord.x, coord.y + 2.0 * coord.x * coord.y );\n    // Output to screen\n    fragColor = vec4(log(length(coord))/10.0,\n                     abs(fract(log(abs(coord.x*5.0)+1.0))-0.5)*2.0,\n                     abs(fract(log(abs(coord.y*5.0)+1.0))-0.5)*2.0,\n                    1.0);\n}","name":"Image","description":"","type":"image"}]}