{"ver":"0.1","info":{"id":"X3lfzX","date":"1728745709","viewed":85,"name":"my brane explaod","username":"DJDoomz","description":"asdfdsafdsa","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["2d","cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat tri(float x){\n    return abs(fract(x)-.5);\n}\n\nvec2 tri(vec2 x){\n    return vec2(tri(x.x), tri(x.y));\n}\n\nvec3 pal(float c)\n{\n    float r = .7 + .2 * cos(PI*5.*c);\n    float g = .7 + .5 * cos(PI*2.5*c+.9);\n    float b = .8 + .2 * cos(PI*2.*c+.7);\n    return vec3(r,g,b);\n}\n\nmat2 rot(float a)\n{\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    // AA\n    float AA = 2.;\n    vec4 O = vec4(0);\n    \n    for(float x = 0.; x < AA; x++)\n    {\n        for(float y = 0.; y < AA; y++)\n        {\n            O += texture(iChannel0, uv + (vec2(x, y)-.5)/fragCoord.xy);\n        }\n    }\n    O /= AA*AA;\n    fragColor = O;//texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.14159265\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat tri(float x){\n    return abs(fract(x)-.5);\n}\n\nvec2 tri(vec2 x){\n    return vec2(tri(x.x), tri(x.y));\n}\n\nvec3 pal(float c)\n{\n    float r = .5 + .5 * cos(PI*1.5*c);\n    float g = .5 + .5 * cos(PI*2.5*c+.9);\n    float b = 1.;//.8 + .2 * cos(PI*2.*c+.7);\n    return vec3(r,g,b);\n}\n\nmat2 rot(float a)\n{\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 tuv = fragCoord/iResolution.xy;\n    float tscale = 3. + 1.4*sin(.2*iTime);\n    tuv -= .5;\n    tuv *= rot(cos(.2*iTime));\n    tuv = tscale*tri(tuv-.5);\n    tuv = fract(tuv);\n    vec3 prev = vec3(0);\n    float AA = 4.;\n    for(float x = 0.; x < AA; x++)\n    {\n        for(float y = 0.; y < AA; y++)\n        {\n            prev += texture(iChannel0, tuv + (vec2(x, y)-.5)/fragCoord.xy).rgb;\n        }\n    }\n    prev /= AA*AA;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.x;\n    vec2 realuv = uv;\n    \n    uv = tri(uv);\n    \n    float scale = 1.6 + .4*sin(.3*iTime);\n    uv *= scale;\n    uv += .6*sin(.03*iTime*vec2(.2, .1));\n    \n    uv *= rot(.01*iTime);\n    \n    uv = tri(uv);\n    uv += .2*sin(3.*uv.yx + .1*iTime);\n    uv *= rot(-.04*iTime);\n    \n    float a = abs(fract(2.*atan(uv.x, uv.y)/PI)-.5);\n    uv *= rot(PI*a);\n    //uv = vec2(abs( fract(atan(uv.x, uv.y))-.5) , length(uv));\n    \n    vec2 buv = uv;\n    uv.y += -.3 + .2 * sin(4.*uv.x+ .2*iTime);\n    vec3 col = vec3(0);\n    for(float i = 0.; i< 5.; i++)\n    {\n        uv *= .99;\n        float rd = sdSegment(fract(uv), vec2(-99,0.3), vec2(99,0.3));\n        float rd2 = sdSegment(fract(uv+.5), vec2(i/9.,-99.), vec2(i/9.,99.));\n        float d = smoothstep(.01,0.,rd);\n        float d2 = smoothstep(.02,0.019,rd2);\n        float dots = .5 + .5 * sin(29.*uv.x - 12.*iTime + i);\n        //uv.y += .002*sin(uv.x*193.+iTime);\n        dots = pow(dots, 2.);\n        d *= dots;\n        col = mix(col, pal(d + 1.*uv.x), d);\n        float dots2 = .5 + .5 * sin(169.*uv.y - 22.*iTime + i);\n        dots2 = pow(dots2, 4.);\n        col = mix(col, pal(3.*uv.y), dots2 * d2);\n        uv.y += .01;// + .01*sin(.06*iTime);\n        float gm = .003/length(rd) * length(3.*uv);\n        //col += .1*clamp(5.*gm,0.,1.);\n    }\n    \n    //if(realuv.y < 0.)\n    //    col = pal(realuv.x);\n\n    // Output to screen\n    col = mix(.3*prev, col, clamp(4.*length(col), 0., 1.));\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}