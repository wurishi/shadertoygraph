{"ver":"0.1","info":{"id":"dd3XRN","date":"1679495679","viewed":366,"name":"Celestial Flame","username":"EDragon","description":"inspiration hit me\nI am finally back and made a shader for this year,,,,\nhell yeah","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["neon","celestial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//this shader was inspired by an image I saw and really like the style of it\n//https://twitter.com/manbou_ane/status/1630497901435846657?s=20\n//their art is amazing and I would appreciate it if you check their work for a bit ! !\n\n\n#define s smoothstep\n#define pi 3.1415\n#define res iResolution.xy\n#define t iTime\n#define rot(a) mat2( cos(a),-sin(a),sin(a),cos(a) )\nvec3 red = vec3(0.847, 0.133, 0.325);\nvec3 blue = vec3(0.16, 0.12, 0.32);\nvec3 crimson = vec3(0.714, 0.063, 0.243)*1.5;\nvec3 fire1 = vec3(0.886, 0.184, 0.400)*1.2;\nvec3 mist = vec3(0.416, 0.584, 1.51);\n\n\nvec3 star(vec2 uv, vec2 p, float r){\n\n    uv *= rot(pi*r);\n    uv -= p;\n    \n    \n    return vec3(s(0.0015, 0.0005, abs(uv.x*uv.y))\n    *s(0.15, 0.13, length(vec2(uv.x*1.25, uv.y))\n    ))\n    *(s(0.05, -0.05, uv.y)*red)+\n    //2 diamond shapes, one for the red side and the other for the blue side\n    //there is a better way to do this but I'm lazy\n    vec3(s(0.0015, 0.0, abs(uv.x*uv.y))\n    *s(0.15, 0.13, length(vec2(uv.x*1.25, uv.y))\n    ))\n    *(s(-0.05, 0.05, uv.y)*blue)\n    ;\n}\n\nvec3 star2(vec2 uv, vec2 p, float r){\n\n    uv *= rot(pi*r);\n    uv -= p;\n    \n    \n    return vec3(s(0.0015, 0.0005, abs(uv.x*uv.y))\n    *s(0.15, 0.13, length(vec2(uv.x*1.25, uv.y))\n    ));\n    //second one is used for layering as I can not use the previous one\n    //because it's pre-colored\n}\nfloat circ(vec2 uv, float size){\n    uv /= size;\n    \n    return s(1.0, 0.99, length(uv))- s(0.98, 0.96, length(uv));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*res)/res.y;\n    vec2 uv2 = uv*5.0;\n    vec2 uv3 = uv;\n    vec2 uv4 = uv;\n    \n    uv4 *= rot(1.2);\n\n\n\n    \n    uv = fract(0.5+uv*0.1)-0.5;\n    \n    uv2 *= rot(t*0.1);\n\n    vec3 st;\n    vec3 st2;\n\n    \n    for (float i; i <= 20.0+1.0; i++){\n    \n        st += star(uv2, vec2(0.0, 2.0+sin(t+cos(i*3.0))*0.1), i/(10.0+1.0));\n        st2 += star(uv2, vec2(0.0, 2.0+sin(t+cos(i*3.0))*0.1), i/(10.0+1.0));\n    \n    }\n    \n    \n    //uv3.x += mod(floor(uv3.x*2.+t),2.)*uv3.x;\n    uv3.x -= uv3.y;\n    //uv3.x += abs(floor(sin(uv3.x*sin(uv3.x)*50.0+t)*sin(uv3.x*10.0+t)*cos(sin(uv3.x+t)*1.5)));\n    \n    //uv3.x += floor(sin(1.*uv2.x+cos(s(0.2, uv3.x, tan(10.*uv3.x-t*1.))+1.))*sin(uv3.x*20.+t)*sin(uv3.x*10.-t)*cos((uv3.x)*1.-t*.5)*.1)+1.;\n    uv3.x += floor(sin(uv3.x*5.-tan(cos(tan(sin(t*0.15))*uv3.x*3.))*10.)*sin(uv3.x*10.-t)*cos((uv3.x)*10.-t*.5)*2.)*.5+1.;\n\n    \n    //uv3.x = min(uv3.x, 1.);\n\n    uv4.x += sin(uv4.y+t)*cos(uv4.x+t*2.)*tan(cos(uv.x*50.)*.2)*0.5;\n    vec3 f1 = vec3(min(0.02/s(0.6, 0.0, abs(uv4.x)), 1.));\n    vec3 f2 = vec3(min(0.02/s(0.7, 0.0, abs(uv4.x)), 1.));\n\n    \n    \n    vec3 bg = vec3(0.082, 0.024, 0.153);\n    \n    bg += f1*fire1;\n    bg += f2*fire1;\n    \n    vec3 fancy = vec3(s(0.025, 0.0245, length(uv))*uv3.x);\n    \n    \n    \n    bg += st+circ(uv, 0.03)/2.0;\n    vec3 circ2 = vec3(s(.03, .0297, length(uv)));\n    \n    bg += fancy*crimson;\n    \n    uv4 *= rot(pi*.25);\n    \n    uv4.x -= sin(uv4.y+t*1.5)*tan(sin(uv4.y+t*2.)+.2)*tan(cos(uv4.x*50.)*.1+.1)*0.75;\n    \n    bg += clamp(vec3(s(0.31, 0.3, abs(uv4.x))), vec3(0.0), 1.-min(f1+st*8.0+circ2, 1.0))*mist;\n    \n    \n    fragColor = vec4(bg, 1.0);\n}","name":"Image","description":"","type":"image"}]}