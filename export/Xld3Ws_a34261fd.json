{"ver":"0.1","info":{"id":"Xld3Ws","date":"1472478165","viewed":646,"name":"The Unsketched Sketch","username":"Imsure1200q_1UWE130","description":"The View-Story Of An Unsketched Sketch \"Realm Sketch\"","likes":1,"published":3,"flags":40,"usePreview":0,"tags":["raymarching","viewstory"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float s( float time, vec4 col )\n{\n    vec2 p;\n    if(time > 0.0 && time < 1.0)\n    p = vec2( sin(6.4351*440.0*time - 1.0)*exp(-3.0*time - time));\n    p = vec2( sin(7.2145*145.0*time - 1.0)*cos(-3.0*time - time));\n    return p.x - dot(dot(col.x, col.y),dot(col.z, col.w));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"vec2 mainSound( in int samp, float time )\n{\n    vec2 p;\n    if(sin(time) > 0.0 && cos(time) < 1.0)\n    p = vec2( sin(6.4351*440.0*time - 1.0)*exp(-3.0*sin(time) - sin(time)));\n    p = vec2( sin(7.2145*145.0*time - 1.0)*cos(-3.0*cos(time) - cos(time)));\n    return p + sin(time)/11.;\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float map( vec3 p )\n{\n    return length(max(vec3(dot(sin(p), cos(p))), vec3(dot(sin(p),cos(p))))*2.0-1.0) - 3.0;\n}\nfloat trace( vec3 ro, vec3 rd )\n{\n    float t = 0.0;\n    for(int i = 0; i < 64; i++)\n    {\n        vec3 p = ro+t*rd;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 rd = normalize(vec3(uv, 1.0));\n    vec3 ro = vec3(cos(iTime), sqrt(sin(iTime/4.0)), -5.0);\n    float t = trace(ro, rd);\n    vec3 fog = vec3(1.0/(1.0+t*t*0.1));\n    fragColor = vec4(cos(uv.y)) + vec4(-0.025, 0.025, 0.6, 1.0) - vec4(fog,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}