{"ver":"0.1","info":{"id":"cs3cRs","date":"1695331938","viewed":39,"name":"Fractal study","username":"vlahovivan","description":"Playing with iterative functions, infinite fractal zoom","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","sierpinski"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    \n    float aspect_ratio = iResolution.x / iResolution.y;\n    st.x *= aspect_ratio;\n    \n    st.x -= (aspect_ratio - 1.) / 2.;\n    \n    float zoom = 2.;\n    float zoom_position = iTime * .5;\n    \n    st /= pow(zoom, step(1.0, zoom_position) + fract(zoom_position));\n    \n    for(float i=0.0; i<10.; i+=1.0) {\n        // Make a 4-square grid\n        st *= 2.0;\n\n        // Move the upper row 0.5 to the right\n        float upper_row_offset = .5;\n        // upper_row_offset = (sin(iTime) * .5 + .5);\n        \n        st.x -= upper_row_offset * step(1.0, st.y);\n        \n        // Paint everything but three squares black\n        st *= step(0.0, st.x) * step(st.x, 2.0 - floor(st.y));\n        \n        st = fract(st);\n    }\n    \n    float pct = step(0.00001, st.x + st.y);\n    vec3 color = vec3(0.95, 0.5, 0.4);\n    fragColor = vec4(pct * color,1.0);\n}","name":"Image","description":"","type":"image"}]}