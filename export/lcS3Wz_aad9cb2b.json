{"ver":"0.1","info":{"id":"lcS3Wz","date":"1704055774","viewed":92,"name":"sincing feeling","username":"dissident","description":"my first","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["bookofshaders","sinc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat sinc(float x, float k) {\n    float a = PI * (x * k - 1.0);\n    return sin(a) / a;\n}\n\nfloat cubicPulse(float c, float w, float x) {\n    x = abs(x - c);\n    if (x > w) return 0.0;\n    x = x / w;\n    return 1.0 - x * x * (3.0 - 2.0 * x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float x = uv.x + tan(iTime);\n    float y = sinc(x, 7.0) / 1.5 + 0.25;\n    \n    vec3 color = vec3(0.1);\n    float pct = cubicPulse(y, 0.02, uv.y);\n    color = color + pct * vec3(1.0, 0.0, 0.0);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}