{"ver":"0.1","info":{"id":"3ssBDs","date":"1589286451","viewed":197,"name":"The Matrix style terminal flow","username":"linkwwj","description":"The Matrix style terminal flow","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in float x) {\n    return fract(sin(x)*1e4);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat drawRect(in vec2 st, in vec2 bottomleft, in float xl, in float yl){\n    \t//draw shape\n        vec2 leftBottom = step(vec2(0.0), st-bottomleft);\n        vec2 rightTop = step(vec2(0.0),bottomleft+vec2(xl,yl)-st);\n        float rec = leftBottom.x*leftBottom.y*rightTop.x*rightTop.y;\n        return rec;\n    }\n\nfloat pattern(vec2 st, vec2 v, float t) {\n    vec2 fractUv = fract(st+v);\n    vec2 p = floor(st+v);\n    \n    float pct = smoothstep(t-0.2,t+0.2, random(100.+p*.000001)+random(p.y)*0.5 );\n    if(mod(floor(sin(p.y+iTime)),2.0)==1.0){\n        pct += drawRect(fractUv, vec2(0.0,0.0),1.0,0.1);\n        pct += drawRect(fractUv, vec2(0.0),0.2,1.0);\n        pct += drawRect(fractUv, vec2(0.7,0.0),0.3,1.0);\n        pct += drawRect(fractUv, vec2(0.35,0.20),0.15,0.7);\n    }else{\n        pct += drawRect(fractUv, vec2(0.0),0.3,1.0);\n        pct += drawRect(fractUv, vec2(0.6,0.0),0.4,1.0);\n        pct += drawRect(fractUv, vec2(0.0,0.0),1.0,0.1);\n    }\n    \n       \n    return pct;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv = uv*2.0-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //grid\n    vec2 grid = vec2(15.0,15.0);\n    uv *= grid;\n    \n    \n    vec2 intUv = floor(uv);\n    vec2 velocity = vec2(0.0,20.0)*random(intUv.x)+vec2(0.0,1.0);\n    \n    vec3 col = vec3(0.0);\n\tcol = 1.0- vec3( pattern(uv,velocity*iTime, 0.33));\n    \n    \n    // Output to screen\n    fragColor = vec4(0.0,col.g,0.0 ,1.0);\n}","name":"Image","description":"","type":"image"}]}