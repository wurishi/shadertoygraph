{"ver":"0.1","info":{"id":"MXt3RM","date":"1716283179","viewed":31,"name":"bookOfShader05-valueNoise","username":"doolhong","description":"A random value is created at the vertex of each cell and interpolated using the real number part.\nhttps://thebookofshaders.com/11/?lan=kr","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    \n    return -1.0 + 2.0 * fract( sin( dot( st.xy, vec2(12.9898,78.233) ) ) * 43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/lsf3WH\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\tfloat a = random2(i);\n    float b = random2(i + vec2(1.0, 0.0));\n    float c = random2(i + vec2(0.0, 1.0));\n    float d = random2(i + vec2(1.0, 1.0));\n\t\n    float mixA = mix( a,b, u.x);\n    float mixB = mix( c, d, u.x);\n    float mixAlpha = u.y; // this is decimal point st(coordi).y\n    mixAlpha *=(sin(iTime*5.0)*0.5+0.5); \n    return mix( mixA, mixB, mixAlpha); //interpolate using decimal point st(coordi).y\n    \n    //return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) +(d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n\n    vec2 pos = vec2(st*10.0);\n    col = vec3( noise(pos)*.5+.5 );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}