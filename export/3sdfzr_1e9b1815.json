{"ver":"0.1","info":{"id":"3sdfzr","date":"1605181273","viewed":199,"name":"learn(8)","username":"saltlemon","description":"star\nlearn from https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg The Art of Code","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float disToLine(vec2 p,vec2 a,vec2 b){\n \tvec2 pa=p-a;\n    vec2 ba=b-a;\n    float t= clamp(dot(pa,ba)/dot(ba,ba),0.,1.);\n    return length(pa-ba*t);\n}\nfloat drawLine(vec2 p,vec2 a,vec2 b){\n \tfloat d=disToLine(p,a,b);\n    float c=smoothstep(.03,.01,d);\n    float d2=length(a-b);\n    c*=smoothstep(1.2,.8,d2)*.5+smoothstep(.05,.03,abs(d2-.75));\n    return c;\n}\nvec2 N22(vec2 p){\n \tfloat x=fract(sin(p.x*120.2+p.y*168.7)*2368.4);\n    float y=fract(sin(p.x*156.4+p.y*196.2)*2586.3);\n    return vec2(x,y);\n}\n\nvec2 getPos(vec2 id){\n \tvec2 n=N22(id)*iTime;\n    return sin(n)*.4;\n}\nfloat layer(vec2 uv){\n    vec2 suv=fract(uv)-.5;\n    vec2 id=floor(uv);\n    float m=0.;\n    \n    vec2 p[9];\n    int i=0;\n    for(float x=-1.;x<=1.;x++){\n    \tfor(float y=-1.;y<=1.;y++){\n            vec2 offs=vec2(x,y);\n            p[i++]=(offs+getPos(id+offs));\n        }\n    }\n    \n    for(int a=0;a<9;a++){\n      \tm += drawLine(suv,p[4],p[a]);\n        vec2 j=(suv-p[a])*15.;\n        float sparkle=1. / dot(j,j);\n        m += sparkle*(sin(iTime*5.+p[a].x*20.)*.4+.6);\n        \n    }\n    m +=  drawLine(suv,p[1],p[3]);\n    m +=  drawLine(suv,p[1],p[5]);\n    m +=  drawLine(suv,p[7],p[3]);\n    m +=  drawLine(suv,p[7],p[5]);\n    return m;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse=(iMouse.xy/iResolution.xy)-.5;\n    uv.x*=iResolution.x/iResolution.y;\n    uv-=.5;\n    \n    float bground=uv.y;\n    float m=0.;\n    float t=iTime*.1;\n    mat2 rot=mat2(cos(t),sin(t),-sin(t),cos(t));\n    uv*=rot;\n    mouse*=rot;\n    for(float i=0.;i<1.;i+=.25){\n        float it=fract(i+t);\n     \tfloat size=mix(10.,.5,it);\n        float fade=smoothstep(0.,.5,it)*smoothstep(1.,.8,it);\n        m+=layer(uv*size+i*20.-mouse)*fade;\n    }\n\tvec3 base=sin(5.*t+vec3(.954,.456,.657))*.4 +.6;\n    vec3 col = vec3(m)*base;\n    float fft=texelFetch(iChannel0,ivec2(.1,0),0).x;\n    col-=bground*base*fft;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}