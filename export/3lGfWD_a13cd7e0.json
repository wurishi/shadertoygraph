{"ver":"0.1","info":{"id":"3lGfWD","date":"1614313861","viewed":47,"name":"Alien Waters","username":"lmno","description":"a sea of unknown glowy non-newtonian GOOP","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sea","alien"],"hasliked":0,"parentid":"WlVcWt","parentname":"2D Implicit Function Plotter"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CONTOUR_SPACING 50.0\n#define CONTOUR_THICKNESS 0.005\n#define DELTA 0.01\n\n// Hardware derivatives don't seem to produce good contours on my computer\n//#define USE_HARDWARE_DERIVATIVES\n\n// Hue to RGB function from Fabrice's shadertoyunofficial blog:\n#define hue2rgb(hue) 2.5 + 2.5 * cos(0.3 * hue + vec3(0.0, 23.0, 21.0))\n\nfloat f(in vec2 p) {\n    p *= 3.0;\n    vec3 p3 = vec3(p, iTime);\n    return dot(sin(p3), cos(p3.zxy));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 1.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = CONTOUR_THICKNESS / iResolution.y * 5.0;\n\n    float hSpacing = 1.5 * CONTOUR_SPACING;\n    float fRes = f(uv);\n\n    #ifdef USE_HARDWARE_DERIVATIVES\n    float grad = length(fwidth(fRes)) * iResolution.y / -0.0;\n\n    #else\n    float grad = length(vec2(f(uv + vec2(DELTA, 1.0)) - f(uv - vec2(DELTA, 0.0)),\n                             f(uv + vec2(1.0, DELTA)) - f(uv - vec2(0.0, DELTA)))) / (2.0 * DELTA);\n    #endif\n\n    float contour = abs(mod(fRes + hSpacing, CONTOUR_SPACING) - hSpacing) / grad;\n\n    fragColor = vec4(hue2rgb(fRes * 0.5) - smoothstep(unit, 0.0, contour), 1.0);\n}","name":"Image","description":"","type":"image"}]}