{"ver":"0.1","info":{"id":"4t2cD3","date":"1510387547","viewed":113,"name":"Draw your own DFT input","username":"nate","description":"Draw an input to a DFT\nSpacebar to see drawing\nLeft Ctrl to clear drawing","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FFT_SIZE 50\n#define PI 3.14159265359\n\n#define average(v) ((v.r + v.g + v.b) / 3.0)\n\nvec4 lerp(vec4 a, vec4 b, float lerpFactor)\n{\n    return mix(a, b, lerpFactor);\n}\n\nvec2 fft(vec2 uv)\n{\n    vec2 complex= vec2(0, 0);\n    \n    uv*= float(FFT_SIZE);\n    \n    float sizeFloat= float(FFT_SIZE);\n    \n    for(int x = 0; x < FFT_SIZE; x++)\n    {\n    \tfor(int y = 0; y < 50; y++)\n    \t{\n            float a= 2.0 * PI * (uv.x * (float(x) / sizeFloat) + uv.y * (float(y) / sizeFloat));\n            vec3 tex1= texture(iChannel0, mod(vec2(x, y) / sizeFloat, 1.0)).rgb;\n            complex+= average(tex1) * vec2(cos(a), sin(a));\n        }\n    }\n    \n    return complex;\n}\n\nbool keyPress(int ascii)\n{\n\treturn (texture(iChannel2,vec2((.5+float(ascii))/256.,0.25)).x > 0.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec4 drawing= vec4(texture(iChannel0, fragCoord.xy / iResolution.xy));\n    \n    vec2 res= iResolution.xy / iResolution.y;\n\tvec2 uv= fragCoord.xy / iResolution.y;\n    uv.x+= (1.0 - res.x) / 2.0;\n    uv.y= 1.0 - uv.y;\n    \n    vec3 color= vec3(0.07);\n    \n    if(uv.x < 1.0 && uv.x > 0.0)\n    {\n    \tcolor= vec3(length(fft(uv - 0.5)) / float(FFT_SIZE));\n    }\n    \n    if (keyPress(32))\n    {\n        fragColor= drawing;\n    }\n    else\n    {\n        fragColor= vec4(color, 1.0);\n\n    }\n    \n    // X+ Y- grid lines\n    if ((uv.x > 0.498 && uv.x < 0.502) || (uv.y > 0.498 && uv.y < 0.502))\n    {\n        fragColor= lerp(fragColor, vec4(1.0), 0.2);\n    }\n}   ","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float saturate(float a)\n{\n\treturn clamp(a, 0.0, 1.0);   \n}\n\nvec3 saturate(vec3 a)\n{\n\treturn vec3(saturate(a.x), saturate(a.y), saturate(a.z));   \n}\n\nfloat circle(vec2 uv, vec2 pos, float r, float softness)\n{\n    float brushResult= r - length(pos - uv); \n    brushResult/= r * saturate(softness);\n    \n\treturn saturate(brushResult);\n}\n\nbool keyPress(int ascii)\n{\n\treturn (texture(iChannel2,vec2((.5+float(ascii))/256.,0.25)).x > 0.);\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float isClickingLeft= iMouse.z;\n    float isClickingRight= iMouse.w;\n    \n    float circleBrush= circle(fragCoord.xy, iMouse.xy, 35.0, 0.8);\n    vec4 previousColor= texture(iChannel0, uv);\n    \n    if(isClickingLeft > 0.0)\n    {\n        previousColor.rgb+= circleBrush;\n        fragColor=  vec4(saturate(previousColor.rgb), 1.0);\n    }\n    else\n    {\n        fragColor= previousColor;\n    }\n    \n    \n    \n    if (keyPress(17))\n    {\n     fragColor= vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}