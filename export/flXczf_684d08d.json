{"ver":"0.1","info":{"id":"flXczf","date":"1648570270","viewed":162,"name":"03 First","username":"ccc9527","description":"smiley，笑脸","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//绘制圆的函数，p是圆心相对于中心点的偏移，r是半径，blur是圆边缘模糊的宽度\nfloat Circle(vec2 uv,vec2 p,float r,float blur)\n{\n    uv -= p;\n    float d = length(uv);\n    float c = smoothstep(r,r-blur,d);\n    return c;\n}\n//绘制笑脸函数(由绘制圆函数组成)，p是笑脸的位移，size控制笑脸的大小\nfloat smiley(vec2 uv,vec2 p,float size)\n{\n    uv -= p;\n    uv /= size;\n    \n    float mask = Circle(uv,vec2(0.0),0.4,0.03);//最大圆\n    mask -= Circle(uv,vec2(0.13,0.2),0.07,0.01);//眼睛\n    mask -= Circle(uv,vec2(-0.13,0.2),0.07,0.01);\n    float mouse = Circle(uv,vec2(0.0),0.3,0.02) - Circle(uv,vec2(0.0,0.1),0.3,0.02);//嘴巴\n    mask -= mouse;\n    \n    return mask;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0.0);\n    vec2 offset = vec2(0.7*sin(iTime),0.3*cos(iTime));\n    float size = abs(sin(iTime))+0.2;\n    float mask = smiley(uv,offset,size);\n    \n    col = vec3(1.0,1.0,0.0)*mask;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}