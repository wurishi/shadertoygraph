{"ver":"0.1","info":{"id":"3tfyW2","date":"1593061921","viewed":100,"name":"gasoline discs","username":"surgery_waves","description":"hold down left mouse button and drag around the screen","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mystery"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = radians(180.);\nfloat twoPi = radians (360.);   \nfloat phasor(float frequency) { \t\n    return fract(frequency * iTime); \n} \n\nfloat oscSin(float phase, float xMult, float yMult) { \n    vec2 uv = gl_FragCoord.xy/ iResolution.xy;  \t\n    float x = uv.x * xMult * twoPi; \t\n    float y = uv.y * yMult * twoPi; \t\n    float phi = phase * twoPi; \t\n    return 0.5 + 0.5 * sin(x + y + phi); \t\n} \n\nfloat oscTri(float phase, float xMult, float yMult) {\n    vec2 uv = gl_FragCoord.xy/ iResolution.xy;  \t\n    float x = uv.x * xMult; \t\n    float y = uv.y * yMult; \t\n    float wave; \t\n    float twoPhase = mod(phase + x + y, 1.) * 2.; \t\n    if (twoPhase <= 1.)   { wave = twoPhase;   } \n       else     { wave = 1. - mod(twoPhase, 1.);    }   \n    return wave; \t\n}\n\nfloat oscSaw(float phase, float xMult, float yMult) {\n    vec2 uv = gl_FragCoord.xy/ iResolution.xy;\n    return fract(phase + xMult * uv.x + yMult * uv.y);\n}\nfloat oscSinRad (float phase, float xyMult, float offset) { \n    float mx = max(iResolution.x,iResolution.y); \t\n    vec2 center = vec2(iResolution.xy / 2. / mx); \t\n    vec2 uv = gl_FragCoord.xy / mx; \t\n    float dist = distance(uv, center + offset); \t\n    float phaseIn = phase * twoPi; \t\n    phaseIn = phaseIn + xyMult * dist * twoPi; \t\n    float ripple = 0.5 * cos(phaseIn) + 0.5; \t\n    return ripple; \t\n}\n\n float oscTriRad (float phase, float xyMult, float offset) { \n    float mx = max(iResolution.x,iResolution.y); \t\n    vec2 center = vec2(iResolution.xy / 2. / mx); \t\n    vec2 uv = gl_FragCoord.xy / mx; \t\n    float dist = distance(uv, center + offset); \t\n    float xy = xyMult * dist;\n    float ripple = oscTri(phase, xy, xy); \t\n    return ripple; \t\n}\n\nfloat oscSawRad (float phase, float xyMult, float offset) { \n    float mx = max(iResolution.x,iResolution.y); \t\n    vec2 center = vec2(iResolution.xy / 2. / mx); \t\n    vec2 uv = gl_FragCoord.xy / mx; \t\n    float dist = distance(uv, center + offset); \t\n    float xy = xyMult * dist;\n    float ripple = oscSaw(phase, xy, xy); \t\n    return ripple; \t\n}\n\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) { \t\n    vec2 uv = fragCoord.xy / iResolution.xy; \n    vec2 mousey = iMouse.xy / iResolution.xy;\n    float mult = 0.061213; //speed var \t\n    float rampA = phasor(0.2 * mult); \t\n    float rampB = phasor (0.5 * mult);\n    \n    float mouseParamVarSineX = -pi / 2. + pi * mousey.x;\n    float mouseParamVarSineY = -0.963 + mousey.y * 1.926;\n        \t\t\t\t\t  //0.963; //switch by uncommenting this line and commenting the prior line\n    \n    float mouseParamVarWave3X = 5. * (1. - pow(mousey.x, 0.16375)) + 0.73 ;\n    \t\t\t\t\t\t\t//0.73\n    float mouseParamVarWave3Y = 3. * (1. - pow(mousey.y, 0.16375)) + 3.;\n    \t\t\t\t\t\t\t//6.\n    \n    float sinewave = oscSin(rampB, mouseParamVarSineY, mouseParamVarSineX); //third param control point\n    float sinewaveVar = //sinewave;\n        1.; ///switch between 1 and commented out sinewave\n    float triangle = oscTri(rampA, 3., (1.25 + mousey.y * 7.5) * sinewave); \t\n    float sineB = oscSin(phasor(0.2 * mult + rampA * 0.1),0.2,50. * pow(triangle * sinewave, 3.)); \t\n    float rippler = oscSinRad(phasor(0.138 * sinewaveVar * 5. * mult),1.,1.) ; //44.7 + triangle * 2., sineB * triangle);\n\n    float wave1 = triangle * sinewave;\n    float wave2 = pow(sinewave + rippler * 0.2, triangle);\n    float wave3 = triangle * oscTri(rampB, mouseParamVarWave3X, mouseParamVarWave3Y) * sineB;\n    vec3 wavez = vec3(wave1, wave2, wave3);\n    float red = rippler * (wavez.x - wavez.z) * 1.5;\n    float green = 0.376 * pow(0.4,wavez.y) * pow(wavez.y,rippler);\n    float blue = 0.24 * (rippler - wavez.z)+ 0.13 * pow(wavez.z, 0.2 * wavez.x);\n\tfragColor = vec4(vec3(red,green,blue).zxy, 1.);\n    //switch around the order of the letters in \"zxy\" to experiment\n\n  //fragColor = vec4(vec3(oscSaw(phasor(-0.7), 25., 50. )), 1.0);\n\n} \n","name":"Image","description":"","type":"image"}]}