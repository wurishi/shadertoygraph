{"ver":"0.1","info":{"id":"dlKBzK","date":"1702302440","viewed":119,"name":"Voronoi Stars Tweet","username":"Mirza","description":"Goal: \n\n1. Demonstrate the star or (\"Astroid?\")-like property of Minkowski distance in Voronoi noise when p is between 0 and 1.\n2. Be short and look pretty for a Tweet: https://twitter.com/TheMirzaBeig/status/1734221833061228801","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","stars"],"hasliked":0,"parentid":"dtVfRK","parentname":"Voronoi Stars CG"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Feel free to do whatever you want with this :)\n// https://twitter.com/TheMirzaBeig/status/1734221833061228801\n\n// Help shorten code.\n\n#define v3 vec3\n#define R iResolution.xy\n\n// Hash (3D).\n\nvec3 H(v3 p)\n{\n    return fract(sin(v3(\n    \n    dot(p,v3(1.,57.,113.)),\n    dot(p,v3(57.,113.,1.)),\n    dot(p,v3(113.,1.,57.))))*43.);\n}\n\n// Distance (3D Minkowski).\n\nfloat D(v3 x,v3 y,float p) \n{\n    return clamp(pow(\n    pow(abs(x.x-y.x),p)+\n    pow(abs(x.y-y.y),p)+\n    pow(abs(x.z-y.z),p),1./p),0.,1.);\n}\n\n// Noise (3D Voronoi).\n\nfloat N(vec3 p) \n{\n    float d=1e9,m;v3 i,v;\n    for(i.z=-1.;i.z<=1.;i.z++)\n    {for(i.y=-1.;i.y<=1.;i.y++)\n        {for(i.x=-1.;i.x<=1.;i.x++) \n            {           \n                v=i-fract(p)+H(floor(p)+i);                \n                m=D(v,v3(0.),.4);d=min(d,m);\n            }\n        }\n    } return d;\n}\n\n// Render.\n\nvoid mainImage(out vec4 c,vec2 u) \n{\n    float t=iTime*.02,n;\n    u*=vec2(R.x/R.y,1.)/R.xy;\n    v3 u3=v3(u.x+t,u.y,t)*12.;    \n    n=1.-N(u3);c=vec4(n);\n}","name":"Image","description":"","type":"image"}]}