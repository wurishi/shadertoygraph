{"ver":"0.1","info":{"id":"XlBBDW","date":"1515786067","viewed":926,"name":"StaRRRs","username":"duvengar","description":"A layered star field based on screen tiling, colored upon a RGB fbm cloud.","likes":31,"published":1,"flags":0,"usePreview":0,"tags":["2d","stars","tiling","layers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(x, y, z) smoothstep(x, y, z)\n#define M(t, d) mat2(cos(t * d), sin(t * d), -sin(t * d), cos(t * d))\n#define SEED .2831\n#define PI acos(-1.)\n\n// fbm code by @iq // https://www.shadertoy.com/view/lsfGRr\n\nfloat hash(float n)\n{\n    return fract(sin(n) * 91438.55123);   \n}\n\nfloat hash2(vec2 p)\n{\n    // hash2 taken from Dave Hoskins \n    // https://www.shadertoy.com/view/4djSRW\n\tvec3 p3  = fract(vec3(p.xyx) * SEED);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise( in vec2 x ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n + 0.0), hash(n + 1.0), f.x), mix(hash(n + 57.0), hash(n + 58.0), f.x), f.y);\n}\n\nmat2 m = mat2( 0.6, 0.6, -0.6, 0.8);\nfloat fbm(vec2 p){\n \n    float f = 0.0;\n    f += 0.5000 * noise(p); p *= m * 2.02;\n    f += 0.2500 * noise(p); p *= m * 2.03;\n    f += 0.1250 * noise(p); p *= m * 2.01;\n    f += 0.0625 * noise(p); p *= m * 2.04;\n    f /= 0.9375;\n    return f;\n}\n\nfloat star(vec2 uv, vec2 scale, float density){\n\n    \n    vec2 grid = uv * scale;\n    vec2 id = floor(grid);  \n    grid = fract(grid) - .5;\n\n    float d = length(grid);  \n    float r = pow(hash2(id), density);\n    float star = S(-.01, clamp(r,.0,.5), d);\n\n    return 1. - star ;\n}\n\nfloat halo(vec2 uv, vec2 scale, float density){\n\n    \n    vec2 grid = uv * scale;\n    vec2 id = floor(grid);  \n    grid = fract(grid) - .5;\n\n    float d = length(grid);  \n    float r = pow(hash2(id), density);\n    float a = S(-.4, clamp(r,.0,.5), d);\n\n    return 1. - a ;\n}\n\nfloat bigstar(vec2 uv, vec2 scale, float density, float angle, float speed){\n\n    //angle *= PI*.5;\n    vec2 grid = uv * scale;\n    vec2 id = floor(grid);  \n    grid = fract(grid) - .5;\n\n    float d = length(grid);  \n    float dx = length(M(-angle,speed)*grid*vec2(5.0,.1)); \n    float dy = length(M(-angle,speed)*grid*vec2(.1,5.)); \n    float r = pow(hash2(id), density);\n    float star = S(-.01, clamp(r,.0,.3), d);\n    \n    float l = S(.0, 1.,length(grid-1.));\n \n\n    return   1. - S(-.1,r*l*l, 2.*sqrt(dot(dx,dy)));\n}\n\n\nvec2 dist(vec2 uv){\n    \n    vec2 d = vec2(.0);\n    d += .2*dot(uv,uv)-.5;\n    \n return d;   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    \n    vec2 st = uv * 1.35;\n   \n    \n    st += dist(st);\n    float t = iTime * .01;\n    \n    uv-= vec2(.8,.5);\n    st += sign(dot(uv,uv));\n    uv += sign(dot(uv,uv));\n\n\n    float mw = S(-.5, 1.5, length(uv));\n    \n    \n    float a0 = halo(M( t, 2.5) * uv, vec2(15.), mw * 50.0);\n    float l0 = a0+bigstar(M( t, 2.5) * uv, vec2(15.), mw * 50.0,  t , 2.5);\n    \n    \n    \n    float l1 = star(M(10.+t, 2.0) * uv * .8, vec2(120.0), mw * 80.0);\n    float l2 = star(M(20.+t, 1.5) * uv * .6, vec2(150.), mw * 100.0);\n    float l3 = star(M(t*1.4, 1.0) * uv, vec2(200.), mw * 120.0);\n    \n    float a4 = halo(M(PI+t*1.4, 3.0) * uv, vec2(15.), mw * 90.0);\n    float l4 = a4+bigstar(M(PI+t*1.4, 3.) * uv, vec2(15.), mw * 90.0, t * 1.4  , 3.);\n    \n    uv -= sign(dot(uv,uv));\n    \n    vec2 n1 = vec2(.2 * t, .2 * t);\n    vec2 n2 = vec2(.3 * t, .3 * t);\n    vec2 n3 = vec2(.4 * t, .4 * t);\n    \n    float r = .23 * fbm(M(t, 2.5) * (1.5*st + n1));\n    float g = .24 * fbm(M(t, 2.0) * ( 2. * st + n2));\n    float b = .26 * fbm(M(t, 1.5) * (1. * st + n3));\n    \n    vec4 cl = pow(vec4(r, g, b, 1.), vec4(1.3));\n    cl = cl + cl;\n    \n    vec4 s = vec4(vec3(l0 + l1 + l2 + l3 + l4), 1.0);\n    cl = pow(cl  + cl , vec4(1.5));\n    cl = pow(cl + cl + cl , vec4(1.5))*.7;\n \n   \n    cl = mix( cl + cl,  cl * s , .85);\n \t\n    cl += cl * 2.;\n    cl.xyz += .5 * pow(1.-length(uv/2.), 2.5);\n\n    cl = .9 * clamp(cl, vec4(.0), vec4(1.));\n\n    cl += S(.0,1.,S(.7, 1.,s));\n    float cl1 = fbm((fbm(st*.4) - vec2(t, t )) * 15.) * dist(uv).x;\n\n    \n    cl = mix(cl,   cl + cl1+cl1+cl1, .8);\n\tcl += .33 * fbm( vec2(-iTime*.3,iTime*.3) + (uv * 20.)) ;\n    cl -= min(cl, vec4(-.3, .0, -.5, 1.));\n    cl -= .8*dot(uv,uv);\n    \n\tfragColor = cl ;\n    \n\n    \n}","name":"Image","description":"","type":"image"}]}