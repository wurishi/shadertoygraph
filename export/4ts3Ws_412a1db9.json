{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// A simplified version of: https://www.shadertoy.com/view/4sfGRn\n\nconst float amount = 80.0;\nconst vec2 start_pos = vec2(-0.25, -0.25); // -1.0 to 1.0 for x, y\n\nvec3 deform( in vec2 p )\n{\n    vec2 uv;\n    uv.x = sin( 0.0 + 1.0 ) + p.x;\n    uv.y = sin( 0.0 + 1.0 ) + p.y;\n    return texture( iChannel0, uv * 0.5 ).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 position = -1.0 + 2.0 * fragCoord.xy / iResolution.xy;\n    vec2 current_step = position;\n    \n    vec2 direction = ( start_pos - position ) / amount; \n    \n    vec3 total = vec3( 0.0 );\n    for( int i = 0; i < int( amount ); i++ )\n    {\n        vec3 result = deform( current_step );\n        result = smoothstep( 0.0, 1.0, result );\n        total += result;\n        current_step += direction;\n    }\n    \n    total /= amount;\n\tfragColor = vec4( total, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ts3Ws","date":"1426212055","viewed":2992,"name":"Radial Blur (simplified)","username":"hunter","description":"A GLSL version of the old school radial blur effect ","likes":31,"published":3,"flags":0,"usePreview":0,"tags":["2d","oldschool","blur","effect","fx"],"hasliked":0,"parentid":"","parentname":""}}