{"ver":"0.1","info":{"id":"3dcXWl","date":"1581631300","viewed":98,"name":"[phreax] kifs waves ","username":"phreax","description":"Experimenting with grid offsets","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","grid","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"[phreax] cube waves\" by phreax. https://shadertoy.com/view/Wd3SWl\n// 2019-11-06 22:43:34\n\nfloat tt, mat = 0., cy;\nvec2 id;\nmat2 rot(float a) {\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n\nfloat box(vec3 p, vec3 r) {\n\tp = abs(p) - r;\n    return length(max(p, 0.)) + min(max(p.x, max(p.y, p.z)), 0.);\n}\n\nvec2 repeat(inout vec2 p, vec2 s) {\n    vec2 id = floor(p/s-.5);\n   // p = (fract(p/s-.5)-.5)*s;\n    p = mod(p+.5*s, s)-.5*s;\n    return id;\n}\n\nfloat N(float x) {\n\treturn fract(sin(x*92856.957)*64556.549);\n}\n\nfloat N21(vec2 p) {\n\treturn fract(dot(p, vec2(N(p.x), N(p.y)))*8847.523);\n}\n\nvec3 kifs(vec3 p, float a) {\n    for(int i=0; i<3; i++) {\n    \tp.xz *= rot(sin(float(i)*.4+tt*a+a));\n        p.xz -= vec2(0.2, 0.4);\n        p.xz = abs(p.xz);\n    }\n    return p;\n}\n\nfloat map(vec3 p) {\n    id = repeat(p.xz, vec2(5.2));\n    float h = N21(id);\n    p.xz *= rot(tt*h);\n   \n    p = kifs(p, h);\n    //mat = id.x;\n    vec3 s = vec3(.6);\n\n    p.y += sin(length(id+vec2(1, -5.))*0.7+tt*2.)*1.5;\n    cy = p.y;\n    p.xy *= rot(h);\n  \n    return (box(p, s)-.1);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    tt = iTime;\n\tvec3 ro = vec3(0, -10., -20),\n         rd = normalize(vec3(-uv, .7)),\n         l = normalize(vec3(0, -1, -4.));\n    rd.yz *=rot(.6);\n    \n    vec3 col,\n         bg = mix(vec3(.74, .91, .99), vec3(.1), -(uv.y-0.4));\n    \n    \n    \n    float i, t = 0.1, d=.01;\n    \n    vec3 p;\n    for(i=0.; i<100.; i++) {\n     \tp = ro + t*rd;\n    \td = map(p);\n        if(t < 0.001 || t > 90.) break;       \n\t\tt += d;\n    }\n    \n    vec2 e = vec2(.0005, -.0005);\n    if(d < 0.0001) {\n        \n        vec3 n = normalize(e.xyy*map(p+e.xyy) + e.yyx*map(p+e.yyx) +\n                           e.yxy*map(p+e.yxy) + e.xxx*map(p+e.xxx));\n        float dif= max(dot(n, l), .0);\n        \n        \n        float sss = smoothstep(0., 1., map(p+l*.4));\n        vec3 al = mix(vec3(0.1, 0.6, 0.8)*.9, vec3(.1, 0, 1), p.y-cy);\n        col += al*.4 + 0.8*al*(dif+sss);\n        col = mix(col, bg, 0.5*(1.-exp(-.00002*t*t*t)));\n     \n    } else {\n         col = bg;\n    }\n   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}