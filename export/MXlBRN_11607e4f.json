{"ver":"0.1","info":{"id":"MXlBRN","date":"1728131663","viewed":22,"name":"Toon Diffuse LUT Atlas Generator","username":"Pancar","description":"Toon Diffuse LUT generator","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["toon","stylized","npr","lut"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float bandCount = 5.0;\n    \n    float positiveSin = sin(iTime) * 0.5 + 0.5;\n    bandCount = mix(3.0, 12.0, positiveSin);\n      \n    float result = 0.0;\n    float lambert = uv.x;\n    float mask = 0.0;\n      \n    float maskOffset = 1.0 /float(bandCount);\n    float currentOffset = 0.0;\n    uv.y *= 0.8;\n    uv.y +=  maskOffset * 2.0;\n     \n\n        for (float x =  0.0; x <= bandCount; x++){\n\n           \n            currentOffset = x * maskOffset;\n            mask = step (uv.y, currentOffset + maskOffset) - step(uv.y, currentOffset);\n            mask = max(mask, 0.0);\n\n            lambert = x * lambert;\n            lambert = floor(lambert);\n            lambert = lambert * (1.0 / (bandCount));\n            float newLine  = (lambert * mask);\n            result += newLine ;\n            lambert = uv.x;\n\n        }\n\n\n    // Output to screen\n    fragColor = vec4(vec3(result).xxx,1.0);\n}","name":"Image","description":"","type":"image"}]}