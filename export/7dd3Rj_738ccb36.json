{"ver":"0.1","info":{"id":"7dd3Rj","date":"1630252354","viewed":133,"name":"metaball wejfkhdhrio","username":"jy483752","description":"i eat meatball, meatball delicious","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["w"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simplex 2D noise\n//https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n\nfloat metaball(in float radius, in vec2 st){\n    return (radius-length(st))/length(st);;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float px = 1.5/iResolution.x;\n    \n    vec2 uv = fragCoord/iResolution.y;\n    uv -= 0.5*vec2(iResolution.x/iResolution.y, 1.0);\n    \n    float t = iTime/12.;\n    float t2 = t+0.005;\n    float t3 = t+0.01;\n\n    float rsum = 0.; \n    float num = 12.;\n    for(float i=0.; i<num; i++){\n        float r = snoise(vec2(t, i*300.))*0.4+0.6;\n        vec2 pos = vec2(\n            snoise(vec2(i+200., t)), \n            snoise(vec2(i*20., t+200.))\n            );\n        rsum += metaball(r, uv-pos);\n    }\n    rsum = smoothstep(fwidth(rsum),0.,rsum);\n    \n    float gsum = 0.; \n    for(float i=0.; i<num; i++){\n        float r = snoise(vec2(t2, i*300.))*0.4+0.6;\n        vec2 pos = vec2(\n            snoise(vec2(i+200., t2)), \n            snoise(vec2(i*20., t2+200.))\n            );\n        gsum += metaball(r, uv-pos);\n    }\n    gsum = smoothstep(fwidth(gsum),0.,gsum);\n    \n    float bsum = 0.; \n    for(float i=0.; i<num; i++){\n        float r = snoise(vec2(t3, i*300.))*0.4+0.6;\n        vec2 pos = vec2(\n            snoise(vec2(i+200., t3)), \n            snoise(vec2(i*20., t3+200.))\n            );\n        bsum += metaball(r, uv-pos);\n    }\n    bsum = smoothstep(fwidth(bsum),0.,bsum);\n\n    vec3 col = rsum*vec3(1,0,0) + bsum*vec3(0,0,1) + gsum*vec3(0,1,0);\n    col = 1. - col;\n    //vec3 col = smoothstep(1., 1.-px, \n    //    vec3(rsum, gsum, bsum)\n    //    );\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}