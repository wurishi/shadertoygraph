{"ver":"0.1","info":{"id":"mdVSz3","date":"1681405696","viewed":110,"name":"demented cells","username":"104","description":"more cell divisions, i hope you don't like efficiency","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 ouv = uv-.5;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= vec2(7.);\n\n    vec2 t2 = iTime  * vec2(.9,.8) * 1.;\n    vec2 pan = sin(t2)+t2;\n    uv += pan;\n\n    vec2 id = floor(uv);\n    o = vec4(0.);\n    for (float i = 0.; i < 1.0; i += 0.01)\n    {\n        vec2 id = floor(uv+iTime); // + iTime\n        vec2 uv2 = uv-i;\n        id = floor(uv2); // uv-i\n        vec2 p = (uv2) - id;\n        vec4 h = hash42(id);\n\n        vec2 d = .5-abs(p-.5);\n        float sh2 = smoothstep(-.4,.5,min(d.x,d.y));\n        float sh = step(.05,min(d.x,d.y));\n        o = sh * h * sh2;\n\n        vec2 par = fract(id/2.);\n        uv += p.yx * par.yx * sin(iTime+h.y*3.14) * sign(h.w-.5) * 0.05;\n        //uv += p.yx * par * -abs(sin(iTime*h.y));\n        if (i > h.x) break;\n    }\n\n    o *= 1.-dot(ouv,2.*ouv);\n    o = pow(o, vec4(.4));\n}\n","name":"Image","description":"","type":"image"}]}