{"ver":"0.1","info":{"id":"DdyBWz","date":"1698096741","viewed":43,"name":"sunset of the wild","username":"chenxianming","description":"sad","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["asd"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define PI 3.1415926\n#define T( s ) fract( iTime * s ) * PI * 4.\n#define v( a ) clamp( a, 0., 1. )\n#define rot( a ) mat2( cos( a ), sin( a ), -sin( a ), cos( a ) )\n\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float k) {\n    return -smin(-a, -b, k);\n}\n\nfloat wing( vec2 u ){\n    \n    u *= rot( PI * -.4 );\n    \n    float px = u.x;\n    \n    px *= u.x > 0. ? 5. : 4.;\n    \n    px = clamp( px, -1. , 1. );\n\n    px = abs( pow( px, 5. ) ) - 1.;\n    px = abs( px ) - .1;\n    \n    return min(\n        max(\n            abs( u.x ) - .5,\n            abs( u.y ) - .1 * px\n        ),\n        length( u + vec2( -.13, .0 ) ) - .05\n    );\n}\n\nfloat wings( vec3 p ){\n    // p.xy *= 1.7;\n    \n    p.x -= .1;\n    p.y -= .1;\n    \n    p.z -= pow( p.x, 3. ) * cos( T( .25 ) ) / 1.4;\n    \n    float d = .5;\n    \n    for( float i = 0.; i < 5.; i++ ){\n        vec2 u = p.xy;\n        u *= rot( PI * .06 * i );\n        d = min(\n            d,\n            wing( u * ( 1. + i * -.025 ) - vec2( i * .05, i * -.05 ) )\n        );\n    }\n    \n    return v(\n        max(\n            d,\n            abs( p.z ) - .01\n        )\n    );\n}\n\nfloat body( vec3 p ){\n    \n    float py = p.y;\n    \n    py *= p.y > 0. ? 2. : 4.;\n    \n    py = clamp( py, -1., 1. );\n    py = pow( py, 2. );\n    \n    py = abs( py );\n    py = abs( py - 1. );\n    \n    py = abs( py ) - .1;\n    \n    return smax(\n        smax( \n            abs( p.x ) - .1 * py,\n            abs( p.y ) - .3 * py,\n            .05\n        ),\n        abs( p.z ) - .1,\n        .1\n    );\n    \n}\n\nfloat tail( vec3 p ){\n    \n    p.yz *= rot( PI * -.15 + cos( T( .25 ) ) * .05 );\n    \n    p.xy *= 3.;\n    \n    float py = 1. - ( p.y / 2. + .5 );\n    \n    return max(\n        max(\n            abs( p.x ) - .5 * py,\n            abs( p.y ) - .45\n        ),\n        abs( p.z ) - .01\n    );\n}\n\nfloat beak( vec3 p ){\n\n    float py = 1. - ( p.y / 2. + .5 );\n    \n    py -= .45;\n    py *= 2.;\n    py = clamp( py, 0., 1. );\n    \n    return max(\n        length( p.xz ) - .1 * py,\n        abs( p.y ) - .1\n    );\n}\n\nfloat paw( vec3 p ){\n    \n    p.x = abs( p.x ) - .1;\n    \n    p.xz *= rot( PI * .25 );\n    p.yz *= rot( PI * .5 );\n    \n    \n    \n    for( float i = 0.; i < 2.; i++ ){\n        p.xz = abs( p.xz );\n        p.xz *= rot( i / 3. * PI );\n    }\n    \n\n    float a = max(\n        length( p.xy ) - .09,\n        -( length( p.xy + vec2( .0, .02 ) ) - .09 )\n    );\n    \n    return max(\n        a,\n        abs( p.z ) - .001\n    );\n}\n\nfloat head( vec3 p ){\n    return length( p ) - .08;\n}\n\n\nfloat df(vec3 p)\n{\n\n    p.x += cos( T( .025 ) ) * 3.;\n    p.z += sin( T( .025 ) ) * 2.;\n    p.y += cos( T( .25 ) ) * .1;\n    \n    p.xz *= rot( atan( sin( T( .025 ) ), cos( T( .025 ) ) ) );\n    p.yz *= rot( PI * -.45 );\n    \n    float d = .1;\n    \n    vec3 pwing = p;\n    \n    pwing.xz *= rot( cos( T( .25 ) ) * .3 );\n    \n    if( pwing.x < 0. ){\n        pwing.x *= -1.;\n        pwing.xz *= rot( cos( T( .25 ) ) * .3 );\n        pwing.xz *= rot( cos( T( .25 ) ) * .3 );\n    }\n    \n    d = smin(\n        body( p ),\n        wings( pwing + vec3( -.05, .2, 0. ) ),\n        .05\n    );\n    \n    d = smin( d, tail( p + vec3( 0., .28, 0. ) ), .02 );\n    \n    d = smin( d, head( p - vec3( 0.0, 0.25, .05 ) ), .02 );\n    \n    d = min( d, beak( p - vec3( .0, .35, .06 ) ) );\n    \n    d = min( d, paw( p - vec3( 0., .0, -.15 ) ) );\n    \n    return v(d);\n}\n\nfloat brach( vec2 u, float l, float c ){\n    float k = .3,\n        tr = .1;\n    \n    u.y += .8;\n    u *= rot( cos( T( .25 ) ) * .1 / l );\n    u.y -= .8;\n    \n    for( float j = 0.; j < l; j++ ){ // for glsl you need prepear gra than 200. iteration and break the loop.\n    \n        u.y -= .17;\n        \n        for( float i = 1.; i < c; i++ ){\n            u.x = abs( u.x ) - .01 - k * .01;\n            u *= rot( -.2 + i * .001 );\n            k /= 1.1;\n        }\n        \n        \n        tr = min(\n            tr,\n            max( abs( u.x ) - .003, abs( u.y ) - .1 )\n        );\n        \n        \n    }\n    \n    return tr;\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n    \n    vec3 c, p, o = vec3( 0., 0., -20. ), r = vec3( u * .1, 1. );\n    c += .3;\n    \n    c +=  vec3( 4, 2, 1 ) * .15 * ( 1. - smoothstep( 0.3, .5, length( u + vec2( 0., -.3 ) ) - .001 ) );\n    \n    float t, d, i;\n    for( ; i < 128.; i++ )\n        p = o + r * t,\n        d = df( p ),\n        t += d * .55556;\n    \n    if( d < 1e-3 )\n        c -= vec3( .1 );\n        \n    c = v( c );\n    c -= step( brach( u + vec2( 1., 1.2 ), 4., 3. ), 0. ) * .1;\n    c -= step( brach( u + vec2( -.8, 1.2 ), 6., 3. ), 0. ) * .1;\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}