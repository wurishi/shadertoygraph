{"ver":"0.1","info":{"id":"ldjfDd","date":"1502926979","viewed":127,"name":"Digital fish tank","username":"marcthenarc","description":"Played with samples in The Book of Shaders.  ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n    vec2(12.9898,78.233)))*\n    43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    uv *= 30.;\n\n    vec2 floor1 = floor(uv);\n    float neg = (floor(floor1.y / 2.) * 2. == floor1.y) ? 1. : -1.;\n    uv.x += neg * iTime * 20. * fract(random(vec2(floor1.y, 64.)));\n\n    float rnd = random(floor(uv)) * 100.; // Saturate it so that random single bits stick out.\n    \n    fragColor = vec4(vec3(rnd, sin(iTime * 0.1), cos(iTime * 0.2)), 1.);\n}","name":"Image","description":"","type":"image"}]}