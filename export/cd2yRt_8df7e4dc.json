{"ver":"0.1","info":{"id":"cd2yRt","date":"1688046922","viewed":94,"name":"glowing shaders ","username":"nayk","description":"color rotating","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color","shader","glow","dots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, s, -s, c );\n}\n\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 r = iResolution.xy; u += u - r;\n    float i = 0.;\n     r *= rotationMatrix( 100.0 * -iTime );\n     vec2 trs = vec2(cos(iTime*1.1),sin(iTime*1.3));\n r+=trs;\n\n    for (O *= i; i < 100.; i += 0.25) \n      u *= mat2(sin(0.+vec4(5,33,11,0))),\n     \n      O += pow(\n         .005/length(u/r.x/0.70+cos(i-vec2(iTime*2.0,iTime*0.5)))\n         *(cos(i*10.+vec4(trs,2,0))+1.), O+0.85);\n}","name":"Image","description":"","type":"image"}]}