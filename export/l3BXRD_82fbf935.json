{"ver":"0.1","info":{"id":"l3BXRD","date":"1710318335","viewed":99,"name":"Edge detection(?)","username":"nathanli1211","description":"Computing edge by using gradient","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["edge","dfdx","dfdy","ddx","ddy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec4 color = texture(iChannel0, uv);\n    float lum = color.r * 0.299 + color.g * 0.587 + color.b * 0.114;\n\n    float delta_x = dFdx(texture(iChannel0, uv).r * 0.299 + texture(iChannel0, uv).g * 0.587 + texture(iChannel0, uv).b * 0.114);\n    float delta_y = dFdy(texture(iChannel0, uv).r * 0.299 + texture(iChannel0, uv).g * 0.587 + texture(iChannel0, uv).b * 0.114);\n    vec2 delta = vec2(delta_x, delta_y);\n    float l = clamp(length(delta) * 10., 0., 1.);\n    fragColor = vec4(l, l, l, 1);\n}","name":"Image","description":"","type":"image"}]}