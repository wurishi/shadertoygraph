{"ver":"0.1","info":{"id":"wllyD4","date":"1592137035","viewed":47,"name":"1st camera","username":"bipinoli","description":"Following tutorial from \"The art of code\"","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["learningshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float point2rayDist(vec3 ro, vec3 rd, vec3 p) {\n \treturn length(cross(p-ro, rd))/length(rd);   \n}\n\nfloat drawPoint(vec3 ro, vec3 rd, vec3 p) {\n \tfloat d = point2rayDist(ro, rd, p);\n    d = smoothstep(.04, .041, d); \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float t = iTime;\n      \n    // ray\n    float zoom = 3.;\n    vec3 ro = vec3(cos(t) + 2., sin(t) + 2., -zoom -4. - 2.*sin(t));\n    \n    vec3 lookat = vec3(.5);\n    vec3 f = normalize(lookat - ro);\n    vec3 r = normalize(cross(f, vec3(0., 1., 0.)));\n    vec3 u = cross(r, f);\n    \n    vec3 c = ro + zoom * f;\n    vec3 i = c - uv.x * r + uv.y * u;\n    vec3 rd = i - ro;\n    //vec3 i = vec3(uv.x, uv.y, -4);  \n    //vec3 rd = uv.x * r + uv.y * u - 4.*f;\n    \n    // cube points in 3d\n    float d = 1.;\n    d *= drawPoint(ro, rd, vec3(0., 0., 0.)); \n    d *= drawPoint(ro, rd, vec3(0., 0., 1.));\n    d *= drawPoint(ro, rd, vec3(0., 1., 0.));\n    d *= drawPoint(ro, rd, vec3(0., 1., 1.));\n    d *= drawPoint(ro, rd, vec3(1., 0., 0.));\n    d *= drawPoint(ro, rd, vec3(1., 0., 1.));\n    d *= drawPoint(ro, rd, vec3(1., 1., 0.));\n    d *= drawPoint(ro, rd, vec3(1., 1., 1.));\n    \n    d *= drawPoint(ro, rd, vec3(0.5, 0., 0.));\n    d *= drawPoint(ro, rd, vec3(0.5, 0., 1.));\n    d *= drawPoint(ro, rd, vec3(0., 0., .5));\n    d *= drawPoint(ro, rd, vec3(1., 0., .5));\n    d *= drawPoint(ro, rd, vec3(.5, 0., .5));\n    \n    d *= drawPoint(ro, rd, vec3(0.5, 1., 0.));\n    d *= drawPoint(ro, rd, vec3(0.5, 1., 1.));\n    d *= drawPoint(ro, rd, vec3(0., 1., .5));\n    d *= drawPoint(ro, rd, vec3(1., 1., .5));\n    d *= drawPoint(ro, rd, vec3(.5, 1., .5));\n    \n    \n    vec3 col = vec3(d);\n\tcol *= vec3(1.0, .5, .5);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}