{"ver":"0.1","info":{"id":"ssGBRd","date":"1658684247","viewed":129,"name":"5D Raymarcher","username":"gcgac","description":"A 5-dimensional raymarcher.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","raymarcher","5d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb;\nfloat sde;\nvec4 pos;\nfloat pos_5;\nfloat maxl = 10000.0;\nfloat t;\n\n\nfloat len(vec4 ve, float ve_5){\n    return sqrt(ve.x*ve.x+ve.y*ve.y+ve.z*ve.z+ve.w*ve.w+ve_5*ve_5);\n}\n\n\nfloat sphere_sde(vec4 ray, float ray_5, vec4 position, float position_5, float radius, vec3 col){\n    if (len(position-ray,position_5-ray_5)-radius < sde){\n        rgb = col;\n        sde = length(position-ray)-radius;\n    }\n    return length(position-ray)-radius;\n}\n\n \nfloat calc_sdf(vec4 ray, float ray_5){\n    sde = maxl;\n    float d1 = sphere_sde(ray,ray_5,vec4 (-20.0,0.0,80.0,10.0),9.2,20.0, vec3 (1,0,0));\n    float d2 = sphere_sde(ray,ray_5,vec4 (0.0,0.0,80.0,-20.0),0.0,20.0, vec3 (0,0,1));\n    float d3 = sphere_sde(ray,ray_5,vec4 (-10.0,15.0,85.0,30.0),1.0,30.0, vec3(0,1.0,0.5));\n    return sde;\n}\n\n\nvec4 raycol(vec4 orig, float orig_5, vec4 dir, float dir_5, float ml){\n    float len = 0.0;\n    float sde = ml;\n    float steps = 0.0;\n    pos = orig;\n    pos_5 = orig_5;\n\n    while (len < ml && sde > 0.1){\n        sde = calc_sdf(pos,pos_5);\n        pos += dir*sde;\n        pos_5 += dir_5*sde;\n        len += sde;\n        steps += 1.0;\n    }\n    return vec4(rgb,steps);\n}\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec4 pos = vec4(0.0,0.0,-1.0,cos(iTime*0.8)*20.0);\n    float pos_5 = cos(iTime*0.5)*50.0;\n    vec4 direction = normalize(vec4(uv.x,uv.y,1,0.1));\n    float dir_5 = 0.11;\n    vec4 o;\n    float steps;\n    o = raycol(pos,pos_5,direction,dir_5,1000.0);\n    if (sde <= 0.1){\n        steps = o.w;\n        rgb = o.xyz;\n        rgb /= steps/2.0;\n        fragColor = vec4(rgb,1.0);\n    }else{\n        fragColor = vec4(0,0,0,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}