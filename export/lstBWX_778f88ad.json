{"ver":"0.1","info":{"id":"lstBWX","date":"1556545430","viewed":70,"name":"Them Periodical Shapes","username":"igorbc","description":"I tried to replicate something I did once on Scratch: https://scratch.mit.edu/projects/36402954/\nDrag the mouse cursor over different parts of the screen to see different patterns.\nWork in progress.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["periodic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \tfloat tau = 6.2832;\n    vec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n   \n    float col, d;\n    \n    fragColor = vec4(vec3(0.), 1.);\n\n    float lineThickness = .039;\n    \n    int upper = int(iMouse.x/iResolution.x*25.);\n    int lower = int(iMouse.y/iResolution.y*15.);\n    \n    float a = atan(p.x, p.y);\n    float l = length(p);\n    float freq = float(upper)/float(lower);\n    \n    float rotationSpeed = 2.;\n    float rotation = rotationSpeed*iTime*0.2;\n    \n    float effectSpeed = 1.;\n    float effect = .5 + sin(effectSpeed*iTime*1.)*1.;\n    vec2 n = p / l;\n    int repetitions = int(lower);\n    float repSteps = 1.;\n    \n    float rVarSpeed = 0.;\n    float r = .02 + (.5+sin(iTime*rVarSpeed*.3)/2.) * .5;\n       \n    float thing = iMouse.y / iResolution.y * 20.;\n\n    for(int i = 1; i++<=repetitions;){\n        float normSin = (.0 +\n            sin((a*freq+\n                 tau*rotation +\n                 tau*repSteps*float(i)*freq\n                 )\n               \t))/2.;\n        \n        float shiftSpeed = 0.0;\n        vec2 shift = shiftSpeed == 0. ? vec2(0.) : vec2(sin(iTime*shiftSpeed),cos(iTime*shiftSpeed))*.1;\n        \n        d = abs((r) - length(p + n * effect * normSin + shift));\n\n        col = smoothstep(0.01 + lineThickness, .01, d);\n        vec2 vc = n*col*col;\n\t\tfragColor.rgb += vec3(vc,col*col);\n        col = smoothstep(0.01 + lineThickness*lineThickness, .01, d);\n        fragColor.rgb += vec3(col);\n        col = smoothstep(0.01 + lineThickness*5., .01, d);\n        fragColor.rgb += vec3(col)*.05;\n    }\n}\n","name":"Image","description":"","type":"image"}]}