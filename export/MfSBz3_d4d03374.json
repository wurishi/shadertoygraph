{"ver":"0.1","info":{"id":"MfSBz3","date":"1725258494","viewed":25,"name":"Pentagon tiling 07","username":"shadertoyjiang","description":"Animations are displayed when the mouse is on the left side of the canvas.\n\n[url=https://www.shadertoy.com/view/lcSfW1]Pentagonal radial tiling[/url]","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tiling","pentagonal"],"hasliked":0,"parentid":"lfBBR3","parentname":"Pentagon tiling 06"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2024年9月2日\n// 第7个\n\nfloat dln(in vec2 a, in vec2 b, in vec2 p) {\n        b -= a;\n        p -= a;\n        float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n        return length(p - b * h);\n}\nvec2 frctE(vec2 po, vec2 px, vec2 py, vec2 p) {\n        float e = po.x, f = po.y,\n                a = px.x - e, b = px.y - f,\n                c = py.x - e, d = py.y - f,\n                g = a * d - b * c;\n        mat3 Mrst = mat3(px - po, 0, py - po, 0, po, 1);\n        mat3 Mdef = mat3(d, -b, 0, -c, a, 0, c * f - d * e, -(a * f - b * e), g) / g;\n        p = (Mdef * vec3(p, 1)).xy;\n        p = fract(p);\n        p = (Mrst * vec3(p, 1)).xy;\n        return p;\n}\nvoid mainImage(out vec4 O, vec2 U) {\n        O = vec4(.0);\n        vec2 R = iResolution.xy,\n                u = 3. * (U + U - R) / R.y,\n                ms = 2. * (2. * iMouse.xy - R) / R.y;\n        vec2 a = vec2(0), b = .7 + vec2(.2*sin(iTime), 1), d = vec2(.6, 0),\n                e = (a + b) * .5, c = (b + d) * .5, f = (a + d) * .5,\n                g = vec2((f + d).x * .5, .6), h = f + (g - f) * .3;\n        vec2 p = frctE(a, b, d, u);\n        if (dot(p - c, c - g) > 0.) p = c + c - p;\n        float dist = 1e8;\n        dist = min(dist, dln(g, e + e - g, p));\n        dist = min(dist, dln(g, c + c - g, p));\n        dist = min(dist, dln(g, f + f - g, p));\n        dist = min(dist, dln(h, d + d - h, p));\n        dist = min(dist, dln(g + d, e + e - g + d, p));\n        dist = min(dist, dln(g + d, f + f - g + d, p));\n        dist = min(dist, dln(f + f - h, f + f - (d + d - h), p));\n        dist = min(dist, dln(g+b-d, f + f - g+b-d, p)); // 保险的做法是直接画九宫格\n        \n        O += vec4(.8 - .01 / dist);\n}\n","name":"Image","description":"","type":"image"}]}