{"ver":"0.1","info":{"id":"MtfyDS","date":"1506263061","viewed":88,"name":"Flower Balls","username":"thejasno","description":"Based on the following:\nhttp://theimaginaryinstitute.tumblr.com/post/122174899365/ag0040-get-the-source-code\nhttps://gist.github.com/blueberrymusic/77e7ac254cd87f806f2f\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 yellow = vec3(0.945, 0.768, 0.0588);\n\nvec3 red = vec3(.823, .302, .341);\nvec3 red2 = vec3(.905, .298, .2352);\n\nvec3 skyBlue = vec3(.419, .725, .941);\nvec3 green = vec3(.149, .76, .5058);\n\n#define TWO_PI (3.14159265359 * 2.0)\n\nfloat circle(vec2 p, vec2 o, float r)\n{\n    return length(p - o) - r;\n}\n\nfloat map(float value, float start1, float stop1, float start2, float stop2)\n{\n    return start2 + (stop2 - start2) * ((value - start1) / (stop1 - start1));\n}\n\nconst float radius = 0.0375;\n\nvec3 drawBalls(vec2 p, float time)\n{\n    float width = 2.0;\n    float rScale = width * 0.5;\n    \n\tconst int numCircles = 24;\n    \n    // Draw the petals\n    for (int i = 0; i < numCircles; ++i)\n    {\n        float theta = (TWO_PI * time) + float(i) * 0.2;\n        float r = (3.0 + (2.0 * cos(3.0 * theta))) / 5.0;\n        float px = rScale * r * cos(theta);\n        float py = rScale * r * sin(theta);\n        float beta = map(sin((TWO_PI * 4.0 * time) + (float(i) * 0.4)), 1.0, -1.0, 0.5, 1.0);\n        vec2 cp = vec2(px, py);\n        cp = mix(vec2(0.0, 0.0), cp, beta);\n\n        if (circle(p, cp, radius) < 0.0)\n        {\n            float t = map(float(i), 0.0, float(numCircles), 0.0, 1.0);\n            return mix(red, red2, t);\n        }\n    }\n    \n    // Draw the inner seeds\n    for (int i = 0; i < 16; ++i)\n    {\n        float theta = (TWO_PI * time) + float(i) * 0.4;\n        float r = 0.0825;\n        vec2 cp = vec2(r * cos(theta), r * sin(theta));\n        if (circle(p, cp, 0.0175) < 0.0)\n        {\n            return yellow;              \n        }                 \n    }\n    \n    // Draw the inner seeds\n    for (int i = 0; i < 16; ++i)\n    {\n        float theta = (TWO_PI * time) + float(i) * 0.4;\n        float r = 0.0525;\n        vec2 cp = vec2(r * cos(theta), r * sin(theta));\n        if (circle(p, cp, 0.0175) < 0.0)\n        {\n            return yellow;              \n        }                 \n    }\n    \n    if (circle(p, vec2(0.0, 0.0), 0.035) < 0.0) return yellow;\n    \n    return mix(green, skyBlue, pow(0.5 * p.y + 0.5, 1.0 / 1.9));\n}\n   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // [0,0]\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    // [-1, 1]\n\tvec2 clip = 2.0 * uv - 1.0;\n    // correct for aspect ratio\n    clip.x *= iResolution.x / iResolution.y;\n      \n\tvec3 color = drawBalls(clip, iTime * 0.3);\n    \n    // vignette\n    color *= 0.5 + 0.5 * pow(16.0 * uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y), .25);\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}