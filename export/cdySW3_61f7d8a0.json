{"ver":"0.1","info":{"id":"cdySW3","date":"1681722405","viewed":402,"name":"Sprial Clock","username":"Kolaa","description":"Sazheruishen","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["2d","clock","spiral","recursive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Thanks FabriceNeyret2 for the advice on needles: https://www.shadertoy.com/view/MtGSRm\n\n#define SP 0.5\n#define CLK_TX_R 0.7\n#define CLK_TX_SIZE 0.27\n#define REV\n#define NEEDLE\n\nfloat clockRim(in vec2 p){\n    return 1. - length(p);\n}\n\nfloat tickBlocks(in vec2 p){\n    float d = FLT_MAX;\n    for (int i = 0; i < 60; i++){\n        bool m5 = i % 5 == 0;\n        d = min (d, \n            box (\n                translate(\n                    rotate(p,\n                        PI * 2. * float(i) / 60.\n                    ),\n                    vec2(0.0, m5? 0.87 : 0.9)\n                ),\n                m5? vec2(0.008,0.05) : vec2(0.005,0.02)\n            )\n        );\n    \n    }\n    \n    return d;\n}\n\nvec4 sampleText(in vec2 p, int id, vec2 scale){\n\n    vec2 np = p/scale;    \n    if (abs(np.x)> .5|| abs(np.y)>.5) return vec4(0.,0.,0.,FLT_MAX);\n    np+= 0.5;\n    np = translate( np, -vec2(float(id %16), float(16 - id / 16))); \n    np/=16.;\n    vec4 val = textureGrad(iChannel3, np, dFdx(np/16.),dFdy(np/16.));\n    return val;\n}\n\nfloat clockText(in vec2 p){\n\n    float d = FLT_MAX;\n    for (int i = 1; i <= 12; i++){\n        \n        vec2 trC = rotate(vec2(0., CLK_TX_R), - PI * 2. *  ( float (i)/ 12.));\n        \n        if (i >= 10){\n        \n            d = min(d,\n                1.- sampleText(translate(p,trC + vec2(-0.05,0.)) , 65, vec2(CLK_TX_SIZE)).x );\n                \n            d = min(d,\n                1.- sampleText(translate(p,trC + vec2(0.05,0.)) , 54+i, vec2(CLK_TX_SIZE)).x );\n        }\n        else if (i == 12){\n        \n        }\n        else{\n            d = min(d,\n                1.- sampleText(translate(p,trC) , 64+i, vec2(CLK_TX_SIZE)).x );\n        }\n    }\n\n    return d;\n}\n\nfloat needleTip(vec2 p, float r, float h )\n{\n    p.x = abs(p.x);\n    float b = r/h;\n    float a = sqrt(1.-b*b);\n    float k = dot(p,vec2(-b,a));\n    if(k<0.) return length(p) - r;\n    return dot(p,vec2(a,b)) - r;\n}\n\nfloat needle(in vec2 p, float la, float wa, float lb, float wb, float a){\n    \n    float d = box(translate(rotate(p,a), vec2(0., la)), vec2(wa, la));\n    d = min(d, needleTip(translate(rotate(p,a), vec2(0.,la*2.)), wb, lb));\n    return d;\n}\n\n// Tween it\nfloat smoothTick(float v){\n    const float c4 = PI/1.5;\n    float vf = fract(v);\n    return floor(v)+ exp2(-40. * vf) * sin((vf * 28. - 0.75) * c4) ;\n}\n\nvec3 renderClock(in vec2 p){\n    \n    vec3 col =vec3(1.0);\n    \n    //rim\n    float ld, la;\n    polar(p, vec2(0.), ld, la);\n    float dRim = clockRim(p);\n    col = mix (col,  vec3(0.),     smoothstep(0.04, 0.01 , dRim)); \n    \n    //block\n    float dBlocks = tickBlocks(p);\n    col = mix (col,  vec3(0.),     smoothstep(0.004, 0.0 , dBlocks)); \n    \n    // text\n    float dText = clockText(p);\n    col = mix (col , vec3(0.0,0.,0. ), smoothstep(0.69, 0.0 , dText));\n    \n    // needle\n#ifdef NEEDLE\n    float ndh = iDate.w / 3600.; // 2PI for a circle, no need to mod\n    float ndm = mod( iDate.w / 60., 60.);\n    float nds =   smoothTick(mod(iDate.w , 60.));\n    col = mix(col , vec3(0.0,0.0,0.0) ,  smoothstep(.002,0., needle(p, .24,0.012,.2,.028, PI*2. * (ndh / 12.)) ) );\n    col = mix(col , vec3(0.15,0.15,0.15) ,  smoothstep(.002,0., needle(p, .27,0.01,.24,.021, PI*2. * (ndm / 60.)) ) );\n    col = mix(col , vec3(0.4,0.,0.) ,  smoothstep(.002,0., needle(p, .285,0.008,.27,.018, PI*2. * (nds / 60.)) ) );\n#endif\n    // final tone\n    col = mix (col , vec3(0.12,0.07,0.02) ,  0.28 * smoothstep(0.9, 0., dRim));\n    \n    return col;\n    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - vec2(0.5*(iResolution.x - iResolution.y),0.))/iResolution.y;\n    float d, a;vec2 uvOr = uv;\n    polar (uv,vec2(0.5),d,a);\n    a = mod (a, PI*2.);\n    float lt = exp (-iTime*0.1);\n    d *= lt;\n    \n    uv = scale(uv, vec2(lt), vec2(0.5)); \n    \n    #ifdef REV\n    float aa = a/(PI*2.);\n    #else \n    float aa = -a/(PI*2.);\n    #endif\n    float la = exp2( aa* log2(SP));\n    float lg = exp2(ceil(-log2(d*2.0 * la) / log2(SP))  * log2(SP) );\n    uv = scale(uv, vec2(lg*la), vec2(0.5));    \n    \n    fragColor = vec4( renderClock(2.0*uv - vec2(1.)), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI 3.1415926\n#define FLT_MAX 3.402823466e+38\nvec2 rotate(vec2 p, float r){\n    return p*mat2( cos(r),-sin(r),sin(r),cos(r));\n}\n\nvec2 translate( vec2 p, vec2 ofs){\n    return p-ofs;\n}\n\nvec2 scale (vec2 v, vec2 s, vec2 center){\n    //v = v - 0.5;\n    vec2 r = v - center;\n    r *= s;\n    return r + center;\n}\n\nvoid polar (vec2 v, vec2 c, out float d, out float a){\n    d = distance(v,c);\n    vec2 t = v - c;\n    a = atan(t.x,t.y);\n}\n\nfloat box(vec2 p, vec2 size){\n    return max( abs(p.x) - size.x, abs(p.y)-size.y);\n}","name":"Common","description":"","type":"common"}]}