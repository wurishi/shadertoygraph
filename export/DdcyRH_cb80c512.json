{"ver":"0.1","info":{"id":"DdcyRH","date":"1694700252","viewed":25,"name":"Ever rotating ring","username":"sandi899","description":"It is a magic rotating ring.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colorful","rotate","ring"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define  TAU 6.28318530717958647 // pi * 2\n\nvec3 hsv2rgb(vec3 c) {\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(1.,5.,2.),7.)-3.)-1.,0.,1.);\n  rgb = rgb * rgb * (3. - 2. * rgb);\n  return c.z * mix(vec3(1.), rgb, c.y);\n}\nfloat circle(vec2 uv, vec2 pq, float radius, float noiseishness) {\n  float s = 3. / iResolution.y;\n  return smoothstep(radius + s, radius - s, pq.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (2. * fragCoord.xy - iResolution.xy ) / iResolution.y;\n  vec2 pq = vec2(atan(uv.x, uv.y) / TAU + .5, length(uv));  \n  float n = .07;\n  float c0 = circle(uv, pq, 0.69, n);\n  float c1 = circle(uv, pq, 0.66, n);\n  float c3 = circle(uv, pq, 0.76, n);\n  float c4 = circle(uv, pq, 0.71, n);\n  float h = pq.x + iTime * 0.3;\n  float h1 = pq.x - iTime * 0.6;\n  vec3 col = hsv2rgb(vec3(h, 0.6, 1.));\n  vec3 col1 = hsv2rgb(vec3(h1, 1., 1.));\n  fragColor = vec4(col, 1.) * (c0 - c1)+vec4(col1, 1.) * (c3-c4)+\n  vec4(0.2 + 0.4*sin(iTime*0.8+(fragCoord/iResolution.xy).xxx+vec3(0,1,2)),1.0);\n}\n","name":"Image","description":"","type":"image"}]}