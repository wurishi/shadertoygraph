{"ver":"0.1","info":{"id":"fsSBWG","date":"1646919114","viewed":64,"name":"forestwithcolors","username":"Gravechest","description":":)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["epic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}\nuint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\nuint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\nuint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\nfloat floatConstruct( uint m ) {\n    const uint ieeeMantissa = 0x007FFFFFu;\n    const uint ieeeOne      = 0x3F800000u;\n\n    m &= ieeeMantissa;                 \n    m |= ieeeOne;                    \n\n    float  f = uintBitsToFloat( m );  \n    return f - 1.0;                       \n}\nfloat random( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\nfloat random( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat random( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat random( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 angle = vec2(0.5,-0.5);\n    vec3 pos   = vec3(iTime*9.0,iTime*4.5,5.5);\n    vec4 dir = vec4(cos(angle.x),sin(angle.x),sin(angle.y),cos(angle.y));\n    vec2 pixelOffset = fragCoord.xy/iResolution.xy*2.0-1.0;\n    pixelOffset.x *= 1.69;\n    vec3 vec;\n    vec.x = (dir.x * dir.w - dir.x * dir.z * pixelOffset.y) - dir.y * pixelOffset.x;\n    vec.y = (dir.y * dir.w - dir.y * dir.z * pixelOffset.y) + dir.x * pixelOffset.x;\n    vec.z = dir.z + dir.w * pixelOffset.y;\n    vec3 ang = normalize(vec);\n    vec3 delta = abs(1.0/ang);\n    vec3 st,si,bp;\n    if(ang.x < 0.0){\n\t\tst.x = -1.0;\n\t\tsi.x = fract(pos.x) * delta.x;\n\t}\n\telse{\n\t\tst.x = 1.0;\n\t\tsi.x = (floor(pos.x) + 1.0 - pos.x) * delta.x;\n\t}\n\tif(ang.y < 0.0){\n\t\tst.y = -1.0;\n\t\tsi.y = fract(pos.y) * delta.y;\n\t}\n\telse{\n\t\tst.y = 1.0;\n\t\tsi.y = (floor(pos.y) + 1.0 - pos.y) * delta.y;\n\t}\n\tif(ang.z < 0.0){\n\t\tst.z = -1.0;\n\t\tsi.z = fract(pos.z) * delta.z;\n\t}\n\telse{\n\t\tst.z = 1.0;\n\t\tsi.z = (floor(pos.z) + 1.0 - pos.z) * delta.z;\n\t}\n    bp = floor(pos);\n    int side;\n    for(int i = 0;i < 200;i++){\n        if(si.x < si.y){\n            if(si.x < si.z){\n\t\t\t\tbp.x += st.x;\n\t\t\t\tsi.x += delta.x;\n\t\t\t\tside = 0;\n            }\n            else{\n\t\t\t\tbp.z += st.z;\n\t\t\t\tsi.z += delta.z;\n\t\t\t\tside = 2;\n            }\n        }\n        else if(si.y < si.z){\n\t\t\tbp.y += st.y;\n\t\t\tsi.y += delta.y;\n\t\t\tside = 1;\n        }\n        else{\n\t\t\tbp.z += st.z;\n\t\t\tsi.z += delta.z;\n\t\t\tside = 2;\n        }\n        float s = random(floor(bp.xy/9.0)+0.3)*8.0-7.2;\n        if(s>bp.z/8.0){\n            vec3 sc;\n            switch(side){\n            case 0:\n                sc.y = fract(pos.y + (si.x - delta.x) * ang.y);\n\t\t\t\tsc.z = fract(pos.z + (si.x - delta.x) * ang.z);\n                if(ang.x > 0.0){\n                    sc.x = 0.0;\n                }\n                else{\n                    sc.x = 1.0;\n                }\n                break;\n            case 1:\n                sc.x = fract(pos.x + (si.y - delta.y) * ang.x);\n\t\t\t\tsc.z = fract(pos.z + (si.y - delta.y) * ang.z);\n                if(ang.y > 0.0){\n                    sc.y = 0.0;\n                }\n                else{\n                    sc.y = 1.0;\n                }\n                break;\n            case 2:\n                sc.y = fract(pos.y + (si.z - delta.z) * ang.y);\n\t\t\t\tsc.x = fract(pos.x + (si.z - delta.z) * ang.x);\n                if(ang.z > 0.0){\n                    sc.z = 0.0;\n                }\n                else{\n                    sc.z = 1.0;\n                }\n                break;\n            }\n            while(sc.x>=0.0&&sc.y>=0.0&&sc.z>=0.0&&sc.x<=1.0&&sc.y<=1.0&&sc.z<=1.0){\n                float dst = distance(sc.xy,vec2(0.5,0.5)) + bp.z/8.0 - s + sc.z/8.0;\n                if(dst < 0.01){\n                    fragColor.rgb = vec3(random(bp.xy)*0.6,random(bp.xy+0.1),random(bp.xy+0.2)*0.3) * clamp(vec3(bp.z/4.0+sc.z/4.0-s*2.0+1.0),0.1,1.0);\n                    return;\n                }\n                sc+=dst*ang;\n            }\n        }\n    }\n    fragColor.rgb += vec3(0.0,0.4,0.8) * ang.z*2.0;\n    fragColor.rgb += vec3(0.8,0.4,0.0) * (0.5-ang.z-ang.y/3.0);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}