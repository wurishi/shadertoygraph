{"ver":"0.1","info":{"id":"XlBSD1","date":"1443125730","viewed":193,"name":"Everyone Dance","username":"owendeery","description":"Everyone Dance immediately.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define MAX_RADIUS 0.85\n#define DIVISIONS 12\n#define SPEED 10.0\n#define MAGNITUDE 0.25\n#define OFFSET 0.25\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float distance = length(fragCoord.xy - iResolution.xy*0.5) / iResolution.x;\n    \n\tfragColor = texture(iChannel0, uv);\n    \n    for(int i = 1; i < DIVISIONS+1; i++)\n    {\n        float iteration = float(i);\n        float radius = MAX_RADIUS + (-MAX_RADIUS) * iteration/float(DIVISIONS);\n        if(distance < radius / iteration)\n        {\n            float len = length(uv - vec2(0.5));\n            float angle = atan(uv.y - 0.5, uv.x - 0.5) + sin(iTime*SPEED+(iteration*OFFSET)) * (iteration * MAGNITUDE);\n            vec2 modUV = (vec2(0.5)) + vec2(cos(angle), sin(angle)) * len;\n            \n            fragColor = texture(iChannel0, modUV) / (iteration*0.25);\n        }\n    }\n}","name":"","description":"","type":"image"}]}