{"ver":"0.1","info":{"id":"tljXWV","date":"1567189574","viewed":505,"name":"BV Pixel Noise","username":"vlams1","description":"Complex noise with G L O W...","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["noisebloom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//BV Noise by bela333: https://www.shadertoy.com/view/tt2SWV\n\n//Hash function by David Hoskins: https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n#define CYCLE 1.\n#define RESOLUTION 32.\n#define THRESHOLD .4\n\nfloat complicatedNoise(float t, vec2 uv){\n    float f1 = float(hash12(uv+floor(t)*10.) < THRESHOLD);\n    float f2 = float(hash12(uv+floor(t+1.)*10.) < THRESHOLD);\n    float f3 = float(hash12(uv+floor(t+2.)*10.) < THRESHOLD);\n    return ((f1+f2)*.5+f3)*.5;\n}\n\nfloat ease(float t){\n    return t<.5 ? 8.*t*t*t*t : 1.-8.*(--t)*t*t*t;\n}\n\nvec4 getColor(vec2 uv, float spd){\n    float tP = iTime/CYCLE*spd+hash12(uv*10.);\n    float tN = (iTime/CYCLE*spd+1.)+hash12(uv*10.);\n    \n    float prev = complicatedNoise(tP, uv);\n    float next = complicatedNoise(tN, uv);\n    float o = mix(prev, next, ease(fract(tP)));\n    return vec4(o,o,o,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= RESOLUTION;\n    vec4 background = getColor(floor(uv),1.);\n    vec4 foreground = getColor(floor(uv/4.),0.25);\n    fragColor = ((background + 0.2) * (foreground + 0.1)) * vec4(0.4,0.1,0.8,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//GLOW by Vlams\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 main = texture(iChannel0, uv).rgb;\n    vec3 glow1 = textureLod(iChannel0, uv, 5.0).rgb * 0.5;\n    vec3 glow2 = pow(textureLod(iChannel0, uv, 2.0).rgb, vec3(2.0) );\n    vec3 glow3 = pow(textureLod(iChannel0, uv, 4.0).rgb, vec3(4.0) );\n    vec3 glow4 = textureLod(iChannel0, uv, 6.0).rgb * 0.5;\n    \n    fragColor = vec4(main + glow1 + glow2 + glow3 + glow4,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}