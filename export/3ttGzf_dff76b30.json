{"ver":"0.1","info":{"id":"3ttGzf","date":"1577228249","viewed":180,"name":"Vol. Light in 2d (attempt #1)","username":"yp3y5akh0v","description":"Kind of volumetric lighting","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2d","attempt","vollight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define screen(uv) (uv / iResolution.xy)\n#define unwrap(uv) (iResolution.y * uv + 0.5 * iResolution.xy)\n#define tex0(uv) texture(iChannel0, uv)\n#define N 100.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec4 t0 = tex0(screen(unwrap(uv)));    \n    vec2 c = t0.yz;\n    vec2 stepRd = (c - uv) / N;\n    float decay = 1.;\n    float ex = 3.1;\n    float s = 0.;\n    for (float i = 0.; i < N; i++) {\t\n        s += decay * tex0(screen(unwrap(uv))).x;\n        uv += stepRd;\n        decay *= 0.98;\n    }\n    \n    s /= N;\n    s *= ex;\n    \n    vec3 col = vec3(s);    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(1.); \n    vec2 c = vec2(0.5, 0.4);\n    \n    vec2 r = step(c, abs(uv));\n    col -= vec3(1. - max(r.x, r.y));\n    float d = step(length(abs(uv) - 0.25), 0.1);\n    \n    col += vec3(d);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define screen(uv) (uv / iResolution.xy)\n#define tex0(uv) texture(iChannel0, uv)\n#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    float t0 = tex0(fragCoord / iResolution.xy).x;  \n    vec2 c = -0.3 * vec2(cos(t), sin(t));\n    float r = 0.04;\n    float d = step(length(uv - c), r);\n    \n    if (d > 0. && t0 <= 0.) {\n    \tfragColor = vec4(0., c, r);\n        return;\n    }\n    \n    fragColor = vec4(clamp((d + t0) / 2., 0., 1.), c, r);\n}","name":"Buffer B","description":"","type":"buffer"}]}