{"ver":"0.1","info":{"id":"ttSBDw","date":"1706892983","viewed":67,"name":"Multi Color Rings","username":"mathieu_h","description":"Using local coordinates and global ID (calculated with MOD and DIV) to render different multi colored circles.\nThere are some colored pixels on the edge of each tile, when displayed in lower resolution. They disappear in fullscreen.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rings","color","multi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define epsilon 0.000001\n#define pi2 6.283\n\nvec2 radial (float n,vec2 id, vec2 local , out vec3 color)\n{\n    float f = iTime;\n    \n    float r = 1.,\n        l = length(local),                             \n        a = atan(-local.y,local.x),\n        u = r * ( fract( a*n/pi2 ) - .5 ) / (n/pi2),\n        v = l - r;\n    \n    \n    float k = floor(fract((a/pi2)) * n) + 6.*id.y + 64.*id.x;\n    \t\n    \tcolor = vec3(1.0);\n    \n    if (mod(k,3.)  == 0.0 || mod(k,5.) == 1.) color = vec3(.282,.7158,.248);\n    if (mod(k,4.)  == 1.0 || mod(k,6.) == 5.) color = vec3(.527,.187,.248);\n    if (mod(k,10.)  == 5.0 || mod(k,64.) == 7.) color = vec3(1.527,1.187,0.248);\n    if (mod(k,64.)  == 0.0)  color = vec3(0.,0.,0.);\n    return vec2(u,v);        \n}\n\n\nvoid mainImage( out vec4 col, in vec2 uv )\n{\n    \n    float x,y;;\n    vec3 c;\n    vec2 res = iResolution.xy;\n    float scale = .05;\n    float d = 1.;\n    float div = 5.*d;\n    \n    uv = ( 2.*uv - res ) / res.y;\n    \n    uv /= scale;\n    x = mod(-uv.x, div) - mod(uv.x, div);\n    y = mod(-uv.y, div) - mod(uv.y, div);\n    \n    int kx = int(uv.x/ div);\n    int ky = int(uv.y/ div);   \n    uv = -vec2(x,y)*d;\n    \n    if (length(uv) < 5.0) c = vec3(0.);\n    \n    vec2 id = vec2(kx,ky);   \n    float n = 7.0 + 7.*(sin(10.*iTime/pi2 + length(id))*.5 + .5);\n    \n    uv = radial(n,id,uv*.25, c);\n    x = uv.x;\n    y = uv.y;\n    \n        \n    c += vec3(float(kx)*4.,float(ky)*3.8,1.0) * vec3(.1,.1,.35) * 1.; \n    \n    \n    \n    float low = .001;\n    float high = .01;\n    float width = (1./n) * pi2;\n    float mask = smoothstep(1.- abs(y * (8.1) - .1),0.0,1.0);\n    c *= 1.-mask;\n    \n    //c = vec3(distance(c,mod(vec3(0.1,.7,.0), vec3(iMouse.xy/iResolution.xy,.3))));\n    \n    col = vec4(c,1.0);\n}  ","name":"Image","description":"","type":"image"}]}