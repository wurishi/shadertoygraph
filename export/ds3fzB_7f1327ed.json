{"ver":"0.1","info":{"id":"ds3fzB","date":"1697304746","viewed":13,"name":"mochimochiRect","username":"amenone","description":"mochimochiRect","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mochimochirect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\nfloat circle(vec2 p )\n{\n    return length(p);\n}\n\nfloat square(vec2 p )\n{\n    return abs(p.x) + abs(p.y);\n}\nfloat hexagon(vec2 p )\n{\n    p = abs(p);\n    return max(p.x + p.y * 0.57735, p.y * 1.1547) - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float u_time = iTime;\n    vec2 u_resolution = iResolution.xy;\n\n    vec2 p = fragCoord.xy / u_resolution.xy;\n    p = (gl_FragCoord.xy * 2.0 - u_resolution.xy) / min(u_resolution.x, u_resolution.y);\n    \n    float a = sin(u_time * 6.0)*0.5+0.5;\n    float angleCosa = cos(u_time );\n    float angleSina = sin(u_time );\n    float angleCosb = cos(u_time - PI * 0.5);\n    float angleSinb = sin(u_time - PI * 0.5 );\n\n    mat2 rotationA = mat2(angleCosa, -angleSina, angleSina, angleCosa);\n    mat2 rotationB = mat2(-angleCosb, angleSinb, -angleSinb, angleCosb);\n    float sq = square(p );\n    vec3 colorSq = vec3(0.19f, 0.86f, 0.4f) * sq;;\n\n    float rotateSq = square(p * rotationA);\n    vec3 colorRotateSq = vec3(0.66f, 0.16f, 0.74f) * rotateSq;\n\n    float d = mix(sq,rotateSq,a);\n    vec3 colD = mix(colorSq,colorRotateSq,a);\n    d = 1.0 - smoothstep(0.5, 0.51, d);\n\n    fragColor = vec4(vec3(colD)*d, 1.0);\n}","name":"Image","description":"","type":"image"}]}