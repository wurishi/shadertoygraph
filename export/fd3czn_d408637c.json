{"ver":"0.1","info":{"id":"fd3czn","date":"1652927497","viewed":124,"name":"Meta_Screen","username":"Novocain","description":"idk","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["pixels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DIV 2.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragCoord /= DIV;\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv, 1.0);\n    \n    // Output to screen\n    fragColor = col;\n} ","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DIV 2.0\n#define PHOS_HEIGHT 4\n#define XSTAG 0\n#define YSTAG 0\n#define BRIGHT_CORRECT 0.2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragCoord *= DIV;\n    \n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 qRes = vec2(iResolution.xy / (DIV * float(PHOS_HEIGHT)));\n    \n    vec2 lqUV = vec2(ivec2(uv * qRes)) / qRes;\n    \n    vec4 col = texture(iChannel0, lqUV);\n    \n    ivec2 pix = ivec2(uv * iResolution.xy / DIV);\n    \n    int stagX = XSTAG != 0 ? pix.y + XSTAG : 0;\n    int stagY = YSTAG != 0 ? pix.x + YSTAG : 0;\n    \n    float m_r = (pix.x + 3 + stagX) % 4 > 0 ? 0.0 : 1.0;\n    float m_g = (pix.x + 2 + stagX) % 4 > 0 ? 0.0 : 1.0;\n    float m_b = (pix.x + 1 + stagX) % 4 > 0 ? 0.0 : 1.0;\n    \n    vec3 mask = vec3(m_r, m_g, m_b);\n    \n    mask *= (pix.y + stagY) % PHOS_HEIGHT > 0 ? 1.0 : 0.0;\n    \n    if (BRIGHT_CORRECT > 0.0)\n    {\n        col.rgb += BRIGHT_CORRECT;\n    }\n    \n    col.rgb *= mask;\n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}