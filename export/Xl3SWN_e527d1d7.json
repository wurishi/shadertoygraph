{"ver":"0.1","info":{"id":"Xl3SWN","date":"1479512727","viewed":728,"name":"Dornia Straight v0.5 (WIP)","username":"ttoinou","description":"Done optimizing ! Working on pretty text effects like in Photoshop, Transfer/step & color mixing functions avalaible with macros (click to see bump transfer func).\nTry to turn shadow on line31 !\n\nBased on https://www.shadertoy.com/view/ll3SD8 ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["text","shadow","effect","stroke","glow","edge","font"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * Dornia Straight\n *\n *      - Shader porportional font with\n *               accents, ponctuations,\n *               maths and others symbols\n *      - Segment based characters\n *      - All char fit in at a most a vec3,\n *          currently ~80 chars in 56 vec4\n *      - => Chars can be \"written\" from a texture fetch !\n *         Otherwise, chars are computed & optimized\n *         at compilation...\n *      - Using 23 bits of float precision (mantissa)\n *      - Easy creation of new characters\n *      - Easy geometry & text effects\n *         (stroke, edge, glow, shadow, bevel...)\n * \n *              sodorny\n *\n *   v0.5     18-11-2016\n */\n\n// Previous version\n// https://www.shadertoy.com/view/ll3SD8\n\n// Original from\n// https://www.shadertoy.com/view/XdXGRB\n\n// issue with box corners on complicated chars\n#define CORNERS_ROUND\n//#define ENABLE_SHADOW\n\n\n#define SUBX  5.\n#define SUBY  9.\n#define SUBGRID  SUBX * SUBY\n\n#define SUBPLUS  3.\n#define SUBM   49.\n#define SUBM2  2401.\n#define SUBM3  117649.\n\n// could be const\n// but doesn't change\n// compilation time\nvec4 c_ab =vec4(4932900,1746,4932900,2010);\nvec4 c_ic =vec4(-7859403,2706577,43,5393700);\nvec4 c_de =vec4(5393700,5,2993700,1554);\nvec3 c_q =vec3(-15624999,591700,45);\nvec4 c_fg =vec4(103395,1246,-15562557,2054);\nvec4 c_hk =vec4(109291,90,62035,2238);\nvec3 c_jn =vec3(-15578057,100571,5355300);\nvec4 c_ls =vec4(-7874894,90,4193200,2054);\nvec4 c_mo =vec4(5355300,57330,5355300,41);\nvec4 c_pz =vec4(-15624999,130900,41,5393892);\nvec4 c_tr =vec4(-7874951,105253,1148,61095);\nvec4 c_Bu =vec4(2377187,5274090,2874087,3051300);\nvec4 c_yv =vec4(-15624999,61055,100651,62153);\nvec4 c_wx =vec4(3051300,57330,2943451,41);\nvec4 c_AD =vec4(5306300,61054,4730167,4454);\nvec4 c_EF =vec4(5392700,51646,98495,1148);\nvec4 c_GH =vec4(5392700,1152,2472639,5306235);\nvec4 c_IJ =vec4(353193,5392689,353193,5157391);\nvec4 c_KCL =vec4(109079,2010,5392700,110055);\nvec4 c_MO =vec4(643558,45,698300,1);\nvec4 c_PQ =vec4(130900,41,698300,5373439);\nvec4 c_RS =vec4(2953320,5347048,1308648,4931248);\nvec4 c_Tic =vec4(353193,43,36173,2130);\nvec4 c_WX =vec4(5351438,5,4825815,5);\nvec4 c_YZ =vec4(104371,268,5392892,58702);\nvec4 c_01 =vec4(4931900,2761151,103401,2246);\nvec4 c_34 =vec4(4931900,61054,61055,2215);\nvec4 c_78 =vec4(98687,1246,4931900,2991647);\nvec4 c_25 =vec4(2530900,2246,2991700,2054);\nvec4 c_69 =vec4(5392700,1054,591700,2054);\nvec4 c_exclV =vec4(-7874894,4825129,41,14113);\nvec4 c_codo =vec4(-11731134,1846,-11731134,1650);\nvec4 c_qubk =vec4(475703,3938385,105350,2206);\nvec4 c_ddap =vec4(-7856144,3295072,28,590);\nvec4 c_dcosl =vec4(-7856144,3295072,32,2014);\nvec4 c_bos8 =vec4(3648845,3913645,61054,5397600);\nvec4 c_asst6 =vec4(1883370,2713140,2354466,3913656);\nvec4 c_udor =vec4(-9801169,2246,472656,44);\nvec4 c_htbc =vec4(3059870,4254602,91728,4927000);\nvec4 c_aoeN =vec4(-7849922,2993700,1554,696380);\nvec4 c_ccdU =vec4(-11749999,4192700,4928469,698300);\nvec4 c_andm =vec4(850783,3693432,3634807,1246);\nvec4 c_frq =vec4(85177,80275,75569,80471);\nvec4 c_qu =vec4(31558,36460,26756,31658);\nvec4 c_par =vec4(3217737,2243,3457833,2047);\nvec4 c_cur =vec4(2631893,109935,2867187,100331);\nvec4 c_equ =vec4(590,690,3059870,30);\nvec4 c_dipl =vec4(3059870,4374652,2472259,25);\nvec4 c_dicr =vec4(3648845,15,1295913,4201761);\nvec4 c_prgt =vec4(119663,144700,85652,75667);\nvec4 c_ceci =vec4(-7832557,3987700,-7812557,36173);\nvec4 c_thlt =vec4(-7832621,3987700,105483,85079);\nvec4 c_gtlt =vec4(75667,2044,85079,2236);\nvec3 ch_dia =vec3(-7812557,1647686,14);\nvec3 ch_idia =vec3(-7859403,2706527,1680743);\nvec4 c_acc =vec4(-7812557,688,-7812557,592);\n\n\n/*\n * Dornia Straight Font Properties \n */\n\n#define PI 3.14159265359\n\n//#define UNPACK1(A) floor(mod(A,SUBM))\n#define UNPACK1(A) (mod(A,SUBM))\n#define UNPACK2(A) floor(mod(A/SUBM,SUBM))\n#define UNPACK3(A) floor(mod(A/SUBM2,SUBM))\n#define UNPACK4(A) floor(A/SUBM3)\n\n#define FONT_SIZE 0.05\n#define FONT_SPACING 1.\n#define FONT_LENGTH 0. // iTime > 2. ? (cos(iTime/2.*PI)*.5+.5)*1. : 0.\n\n#define STROKEW_REGULAR 0.7 // (vec2(.5,0.).xy).x\n#define STROKEW_BOLD (STROKEW_REGULAR+1.)\n\nfloat font_size = FONT_SIZE;\nfloat font_spacing = FONT_SPACING;\nfloat font_weight = STROKEW_REGULAR;\nfloat font_length = FONT_LENGTH;\nfloat font_aspect = 1.;//(cos(iTime/2.*PI)*.5+.5)*2.;\nfloat font_line_height = 1.;\n\nvec4  font_coord; // current pixel coord in relative space, zw for shadow coord\nvec3  font_cursor;\n// cursor for current char, includes super & sub script\n// cursor.z is current font_size\nvec3  font_cursorChar;\nvec3  font_cursorOrigin; // beginning of a new line\nvec4  font_draw;\n\n\n\n/*\n * DorniFont23 Drawing FSM \n */\n\n#define PROPMAX         250.\n#define UNPACKPROP(x,n,m)  (mod(floor(x),PROPMAX)/PROPMAX*(m - n)+n)\n#define UNPACKCHARSPACE(x)  UNPACKPROP(-x,-.3,1.)\n#define UNPACKCURSORZ(x)    UNPACKPROP(-x/PROPMAX,-1.,0.)\n#define UNPACKVSHIFT(x)     UNPACKPROP(-x/(PROPMAX*PROPMAX),-2.,2.)\n\nfloat char_space = 1.;\nfloat vertical_shift = 0.;\n\nfloat space_width(){\n    return font_aspect*font_cursorChar.z*3./7.*font_spacing*mix(1.,font_weight,0.2);\n    //return font_aspect*font_cursorChar.z*3./5.*font_spacing;\n}\n\nvoid setScript(int i){\n    if( i == 0 ){\n        // real font space taking into account baseline\n        // and a margin\n        font_cursorChar.z = font_size*9./7. * 6.5/7.;//  *5./7.*1.6  * 6.5/7.;\n    }\n}\n\nfloat count = 0.;\nvoid setCursorChar(){\n\t//font_cursorChar.xy = font_coord.xy;\n\t//font_cursorChar.y -= font_cursor.y;\n    //font_cursorChar.xy = font_coord - vec2( (count++)/3.,0.3) - font_cursor.xy;\n    \n    \n\tfont_cursorChar.xy = font_cursor.xy;\n    \n    // add baseline\n    font_cursorChar.y += font_cursorChar.z*2./5.;\n    \n    // add margin space\n    font_cursorChar.x += font_cursorChar.z/9.;// /28. + font_weight*font_size/8.;\n    //\n    font_cursorChar.x += space_width()*font_cursor.z;\n    \n    //font_cursorChar.xy = font_coord - font_cursorChar.xy;\n    \n    //font_cursorChar.z  = font_size*5./7.;\n\t//pos.x = pos.x - font_cursor.x + font_spacing*font_aspect*font_cursor.z;\n\t//pos.x -= max(font_spacing*font_aspect*font_cursor.x - font_cursor.z,0.5);\n\n}\n\nvoid resetFont(vec2 line_beginning){\n\tfont_cursor.xy = line_beginning;\n    font_cursor.z = 0.;\n    font_cursorOrigin = font_cursor;\n    font_draw = vec4(0.);\n    setScript(0);\n    setCursorChar();\n}\n\nvec2 nearestVec(vec2 v,vec2 w,vec2 p){\n    w -= v;\n    //w *= 0.666; // for animation\n    v -= p;\n    return v + clamp( -dot(v, w) / (dot(w,w) + font_length*font_size*.06) , 0. , 1. ) * w;\n}\n\nfloat segmentDistance(vec2 v)\n{\n    #ifdef CORNERS_ROUND\n   \t\treturn length(v);\n    #else\n   \t\treturn max(abs(v.x),abs(v.y));\n    #endif\n    \n\t//float power = mix(0.1,5.,iMouse.x/iResolution.x);\n    \n   \t//return pow(pow(abs(v.x),power)+pow(abs(v.y),power),1./power);\n    \n    //float angle = 0.2*PI;\n    //v *= mat2(cos(angle),sin(angle),-sin(angle),cos(angle));\n    /*\n    float q = length(w);\n    if( q > 0. ){\n        float k = dot(v,w);\n        v.y = dot(v,vec2(-w.y,w.x))/q;\n        v.x = k/q;\n    }\n    */\n   \t//return abs(v.x)+abs(v.y);\n    //v = abs(v);\n   \t//return v.x+v.y + 2.*sqrt( v.x*v.y );\n    \n   \t//return length(v) + font_length*font_size*0.06;\n}\n\n\nfloat distance2ToSegment(vec2 v, vec2 w, vec2 p)\n{\n    w -= v;\n    v -= p;\n    v += clamp( -dot(v, w) / (dot(w,w) + font_length*font_size*.06) , 0. , 1. ) * w;\n    #ifdef CORNERS_ROUND\n   \t\treturn dot(v,v);\n    #else\n   \t\treturn max(abs(v.x),abs(v.y));\n    #endif\n    \n}\n\nfloat vertexCount; // 0, 1 or 2\nvec4 vertexAB;\nvec2 vertexC;\n\nfloat currentDist = -1.;\nfloat currentDistTmp = -1.;\nfloat currentDist2 = -1.;\nfloat currentDistTmp2 = -1.;\nfloat nearestThickness;\nfloat nearestThickness2;\nfloat distSum;\nvec4 nearestAB;\nvec4 nearestCD;\n\n\nvoid resetSegments(){\n    currentDist = -1.;\n    currentDist2 = -1.;\n    distSum = 0.;\n    font_cursor.z = 0.;\n    char_space = 1.;\n    vertical_shift = 0.;\n}\n\nvoid pushSegment(){\n    // everything here is slowing compilation\n    \n    currentDistTmp = distance2ToSegment(\n        vertexAB.xy,\n        vertexAB.zw,\n        font_coord.xy\n   \t);\n    if( currentDistTmp < currentDist || currentDist == -1. ){\n        currentDist = currentDistTmp;\n        nearestAB = vertexAB;\n        nearestThickness = font_cursorChar.z;\n    }\n    \n    #ifdef ENABLE_SHADOW\n        currentDistTmp2 = distance2ToSegment(\n            vertexAB.xy,\n            vertexAB.zw,\n            font_coord.zw\n        );\n        if( currentDistTmp2 < currentDist2 || currentDist2 == -1. ){\n            currentDist2 = currentDistTmp2;\n            nearestCD = vertexAB;\n            nearestThickness2 = font_cursorChar.z;\n        }\n    #endif\n    \n    distSum += exp(-80.*currentDistTmp/(font_size*font_size));\n}\n\nvoid resetVertex(){\n    vertexCount = 0.;\n}\n\nvoid pushVertex(float v){\n    if( v == 0. ){\n        // restart\n        vertexCount = 0.;\n    } else {\n        // old grid function\n        vertexC = vec2(\n            mod(v-1.,SUBX)/4. * .228 * font_aspect ,\n            0.350877 - (floor((v-1.)/SUBX)+2.*vertical_shift)/12.\n        ) * font_cursorChar.z + font_cursorChar.xy;\n        \n        if( mod(vertexCount,2.) < 1. ){\n            vertexAB.xy = vertexC;\n        } else {\n            vertexAB.zw = vertexC;\n        }\n        \n        // draw segment if available\n        if( vertexCount > 0. ){\n            pushSegment();\n        }\n        \n        vertexCount++;\n    }\n}\n\nvoid _o4(in float A) \n{\n    pushVertex(UNPACK1(A));\n    pushVertex(UNPACK2(A));\n    pushVertex(UNPACK3(A));\n    pushVertex(UNPACK4(A));\n}\n\nvoid space()\n{\n\tfont_cursor.x += space_width();\n}\n\nvoid newline()\n{\n\tfont_cursor.x = font_cursorOrigin.x;\n\tfont_cursor.y -= font_size*font_line_height*8./5.*.9;\n}\n\nvec2 polar(float radius,float angle){\n    return radius*vec2(cos(angle),sin(angle));\n}\n\n// xy is for char segment\n// zw for char's shadow segment\nvec4 nearest;\nvec2 nearestDist;\n\nvoid textOutput()\n{\n    nearest.xy = nearestVec(nearestAB.xy,\n                        nearestAB.zw,\n                        font_coord.xy)/nearestThickness;\n    nearestDist.x = segmentDistance(nearest.xy);\n    \n    nearest.zw = nearestVec(nearestCD.xy,nearestCD.zw,font_coord.zw)/nearestThickness2;\n    nearestDist.y = segmentDistance(nearest.zw);\n    \n}\n\nfloat firstChar;\n\nvoid _ch_begin(in float c){\n    firstChar = c;\n    \n    if( c < 0. ){\n        char_space = UNPACKCHARSPACE(c);\n        font_cursor.z = UNPACKCURSORZ(c);\n    \tvertical_shift = UNPACKVSHIFT(c);\n    }\n    \n    // compute here font_coord.zw\n    // if the shadow direction\n    // depends on the coord\n    \n    setCursorChar();\n    resetVertex();\n    \n    if( c >= 0. ){\n    \t_o4(c);\n    }\n}\n\nvoid _ch_end(){\n\tfont_cursor.x += char_space*space_width();\n    \n    if( firstChar < 0. ){\n        font_cursor.z = 0.;\n        char_space = 1.;\n        vertical_shift = 0.;\n    }\n}\n\nvoid _ch4(in float c){\n    _ch_begin(c);\n    _ch_end();\n}\n\nvoid _ch8(in vec2 a){\n    _ch_begin(a.x);\n    _o4(a.y);\n    _ch_end();\n}\n\nvoid _ch16(in vec3 a){\n    _ch_begin(a.x);\n    _o4(a.y);\n    _o4(a.z);\n    _ch_end();\n}\n\n#define _bold     font_weight = STROKEW_BOLD;\n#define _reg      font_weight = STROKEW_REGULAR;\n#define textBegin resetSegments();\n#define textEnd   textOutput();\n\n#define _sp space();\n#define _nl newline();\n\n/*\n * Color mix functions\n */\n\n// built in\n// vec4 mix(vec4 a,vec4 b,float t)\n\nvec4 add(vec4 a,vec4 b,float t){\n    return a + b*t;\n}\n\n/*\n * Prebuilt style functions\n */\n\nfloat Stroke(float width, float border){\n    return clamp( 1. -\n      max( nearestDist.x-font_weight/24.*width , 0. )\n         / (1e-8+border) * nearestThickness\n    , 0. , 1. );\n}\n\nvec3 StrokeAndEdge(float width, float edge, float border){\n    float x = Stroke(width,border);\n    float y = (1.-x)*clamp( 1. -\n      max( nearestDist.x - font_weight/24.*width - edge*font_weight , 0. )\n          / (1e-8+border) * nearestThickness\n     ,0. ,1. );\n    \n    return vec3( x,\n      y,\n      x+y\n    );\n}\n\nfloat Glow(float spread){\n    //return pow(mix(distSum,exp(-20.*nearestDist.x),.3)/2.,.3) *(1. - font_length);\n    \n    //return pow( smoothstep( 0. , 1. , 1. - nearestDist.x*6. ) , .5 );\n    return 1. / ( .5 + nearestDist.x/spread );\n    //return exp( -64.*nearestDist.x*nearestDist.x*nearestDist.x );\n}\n\nfloat Shadow(float spread,float size){\n    float k = max(nearestDist.y-size,0.);\n    return exp(-10.*k*k/(1e-8 + spread));\n}\n\n/*\n * Transfer functions [0,1]->[0,1]\n */\n\n#define linear(x) (x)\n#define smooth(x) (smoothstep(0.,1., (x) ))\n#define fast(x)   (sqrt(x))\nfloat slow(float x){\n    return x*x;\n}\nfloat bump(float x){\n    return 4.*x*(1. - x);\n}\n#define fast_bump(x) fast(bump(x))\n#define slow_bump(x) slow(bump(x))\n\n\n#define textStyle(thing,func,transfer,color) font_draw = func(font_draw,color,transfer(thing)*color.a);\n// mix with 2 colors for stroke & edge for example\n#define textStyle2(thing,func,transfer,colorA,colorB) { vec3 _mix_ = thing; vec4 _col_ = mix(colorA,colorB,_mix_.y+(1. - _mix_.z)); font_draw = func(font_draw,_col_,transfer(_mix_.z)*_col_.a*_mix_.z); }\n\n\n    //r.y = pow((distSum+4.*exp(-40.*nearestDist.x*nearestDist.x))/4.,1.5) *(1. - font_length);\n    \n    //r.y = exp(-40.*dot(a,a) );\n    \n    //r.y = (distSum*exp(-80.*r.z*r.z))*(1. - font_length);\n    \n    //r.y = exp(-80.*(currentDist)/(thickness*thickness));\n    //r.y = 1. - abs(r.x);\n    //r.y = exp(-1000000.*r.x);\n    \n    //vec4 col = mix(font_glow_color*r.y,font_stroke_color,clamp(r.x,0.,1.));\n    \n        \n    //previous += font_glow_color*font_glow_color.a*r.y;\n    \n    //float shadow = clamp( 1. - distance(a,vec2(.08))*8. , 0. , 1.);\n    //float shadow = clamp( 1. - abs( dot( a ,  ) )*4. , 0. , 1.);\n    //vec2 w = nearestA - nearestB;\n    //w = vec2(-w.y,w.x);\n    \n    //vec2 w = a - nearestCursorChar.xy;\n    //float shadow = clamp( 1. - abs( dot(w,w)/dot(w,font_shadow_dir) - .1 )*8. , 0. , 1. );\n   \n\n//-----------------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 coord )\n{\n    vec2 uv = coord.xy/iResolution.xy;\n    fragColor = vec4(.8 - uv.x*.5,.7 - uv.y*.6,0.75 - sqrt(uv.x*uv.y)*.6,1.);\n\n\n    font_line_height = 0.9;\n    font_size = .1;\n    resetFont(vec2(.05, .8));\n    font_draw = fragColor;\n    \n    font_coord.xy = coord.xy/iResolution.y;\n    //font_coord.zw = font_coord.xy + polar( .2 , -.4 )*font_size;\n    font_coord.zw = font_coord.xy - (iMouse.xy/iResolution.xy-vec2(.5,.5))*font_size;\n\n    textBegin\n\n\t_ch8( c_AD.zw ); _ch8( c_de.zw ); _ch8( c_acc.xy ); _ch8( c_ls.zw );  _sp _ch4( c_aoeN.w ); _ch8( c_mo.zw ); _ch8( c_de.zw ); _ch16( ch_dia ); _ch8( c_ls.xy );  _sp _ch8( c_mo.zw ); _ch4( c_Bu.w ); _ch8( c_acc.xy );  _sp _ch4( c_Bu.w ); _ch4( c_jn.z );\n    _sp _ch4( c_pz.w ); _ch8( c_de.zw ); _ch8( c_acc.zw ); _ch16( c_pz.xyz ); _ch8( c_hk.xy ); _ch16( c_yv.xyz ); _ch4( c_tr.w );  _sp _ch8( c_hk.xy ); _ch8( c_ab.xy ); _ch16( ch_idia );  _nl _ch8( c_mo.xy ); _ch8( c_de.zw );  _sp _ch4( c_yv.w );\n    _ch8( c_de.zw ); _ch8( c_ceci.zw ); _ch16( c_tr.xyz );  _sp _ch8( c_de.xy ); _ch8( c_de.zw );  _sp _ch16( c_q.xyz ); _ch8( c_fg.zw ); _ch8( c_ls.xy ); _ch8( c_ab.xy ); _ch16( c_ccdU.xyz ); _ch8( c_mo.zw ); _ch4( c_jn.z ); _ch8( c_ls.zw ); \n    _sp _ch8( c_wx.xy ); _ch4( c_Bu.w ); _ch16( ch_dia ); _ch4( c_tr.w ); _ch8( c_mo.xy ); _ch16( c_ic.xyz ); _ch8( c_de.zw ); _ch4( c_jn.z ); _ch8( c_ls.zw );  _nl  _ch16( c_ic.xyz ); _ch8( c_jn.xy ); _ch8( c_de.zw );  _sp _ch8( c_de.xy );\n    _ch8( c_Tic.zw ); _ch4( c_jn.z ); _ch8( c_de.zw );  _sp _ch8( c_de.xy ); _ch4( c_ddap.w ); _ch8( c_de.zw ); _ch8( c_wx.zw ); _ch16( c_q.xyz );  _ch4( c_Bu.w ); _ch16( c_ic.xyz ); _ch8( c_ls.zw );  _sp _ch4( c_tr.w ); _ch8( c_mo.zw ); _ch8( c_ceci.zw );\n    _ch16( c_tr.xyz ); _ch16( c_ic.xyz ); _ch8( c_ls.zw );  _sp _ch8( c_de.xy ); _ch8( c_de.zw );  _sp _ch8( c_ab.zw ); _ch8( c_mo.zw ); _ch16( c_aoeN.xyz ); _ch4( c_Bu.w ); _ch8( c_fg.xy );  _nl _ch8( c_ab.xy ); _ch4( c_Bu.w );  _sp _ch8( c_hk.zw );\n    _ch16( c_ic.xyz ); _ch4( c_tr.w );  _sp _ch8( c_ab.xy ); _ch8( c_acc.xy );  _sp _ch8( c_ls.xy ); _ch4( c_ddap.w ); _ch8( c_ab.xy ); _ch16( c_yv.xyz ); _ch16( ch_dia );  _sp _ch8( c_de.xy ); _ch4( c_ddap.w ); _ch8( c_ab.xy ); _ch8( c_ceci.zw ); _ch16( c_q.xyz );\n    _ch8( c_fg.zw ); _ch8( c_de.zw );  _sp _ch8( c_mo.xy ); _ch4( c_Bu.w ); _ch8( c_ceci.zw ); _ch4( c_tr.w );  _sp _ch8( c_de.zw ); _ch16( c_tr.xyz );  _sp _ch4( c_ic.w ); _ch8( c_ab.xy ); _ch16( c_aoeN.xyz ); _ch16( c_tr.xyz ); _ch8( c_de.zw ); _ch4( c_tr.w ); _ch8( c_ab.xy );\n    _sp _ch16( c_qubk.xyz ); _ch16( c_exclV.xyz ); \n    _nl _nl _sp _sp _sp _ch8( c_AD.zw ); _ch8( c_mo.zw ); _ch4( c_tr.w ); _ch4( c_jn.z ); _ch16( c_ic.xyz ); _ch8( c_ab.xy );  _sp _ch8( c_RS.zw ); _ch16( c_tr.xyz ); _ch4( c_tr.w ); _ch8( c_ab.xy ); _ch16( c_ic.xyz ); _ch16( c_q.xyz ); _ch8( c_fg.zw );\n    _ch8( c_hk.xy ); _ch16( c_tr.xyz ); \n \n    textEnd\n        \n    float glowCoeff = mix(.1,1.5,cos(iTime/2.)*.5+.5);\n    textStyle(Glow(glowCoeff),mix,smooth,vec4(.9,.6-(1.-uv.y)*.4,.0,.7))\n        \n    if( iMouse.z > .5 ){\n    \ttextStyle(Shadow(.5,.05),mix,bump,vec4(0.,0.,0.,.8))\n    } else {\n    \ttextStyle(Shadow(.5,.05),mix,smooth,vec4(0.,0.,0.,.8))\n    }\n        \n    textStyle2(StrokeAndEdge( 1. , .1 , .05*font_size ),mix,slow,vec4(1.-uv.x,0.,uv.x*.6,1.),vec4(0.,0.,0.,1.))\n    textStyle(Stroke( .3 , .05*font_size ),mix,slow,vec4(1.))\n        \n    \n    // limiter\n    fragColor = font_draw*4.;\n    fragColor = (1.-exp(-fragColor))/(1. + exp(-fragColor));\n\n    // no limiter\n    //fragColor = font_draw;\n}\n\n\n\n/*\n * Character design\n */\n\n/*\n\n#define SUBX  5.\n#define SUBY  9.\n#define SUBGRID  SUBX * SUBY\n#define SUBPLUS  3.\n#define SUBM   49.\n#define SUBM2  2401.\n#define SUBM3  117649.\n\n#define SUB2(x,y) (1. + 2.*x + 2.*y*SUBX)\n\n#define PACK4(A,B,C,D) (A+SUBM*(B+SUBM*(C+SUBM*D)))\n#define p1(a,b,c,d)  PACK4(a,b,c,d)\n#define p2(a,b,c,d,e,f,g,h)  vec2(PACK4(a,b,c,d),PACK4(e,f,g,h))\n#define p3(a,b,c,d,e,f,g,h,i,j,k,l)  vec3(PACK4(a,b,c,d),PACK4(e,f,g,h),PACK4(i,j,k,l))\n#define p4(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p)  vec4(PACK4(a,b,c,d),PACK4(e,f,g,h),PACK4(i,j,k,l),PACK4(m,n,o,p))\n\n// Main points\n\n#define A_   SUB2(0.,0.)\n#define B_   SUB2(1.,0.)\n#define C_   SUB2(2.,0.)\n#define D_   SUB2(0.,1.)\n#define E_   SUB2(1.,1.)\n#define F_   SUB2(2.,1.)\n#define G_   SUB2(0.,2.)\n#define H_   SUB2(1.,2.)\n#define I_   SUB2(2.,2.)\n#define J_   SUB2(0.,3.)\n#define K_   SUB2(1.,3.)\n#define L_   SUB2(2.,3.)\n#define M_   SUB2(0.,4.)\n#define N_   SUB2(1.,4.)\n#define O_   SUB2(2.,4.)\n\n// Middle points for complicated characters\n\n#define AB_  SUB2(0.5,0.) // for S\n#define AD_  SUB2(0.,0.5) // for S\n#define DH_  SUB2(0.5,1.5) // for (\n#define HJ_  SUB2(0.5,2.5) // for (\n#define FH_  SUB2(1.5,1.5) // for (\n#define HL_  SUB2(1.5,2.5) // for (\n#define BE_  SUB2(1.,0.5) // for ()\n#define KN_  SUB2(1.,3.5) // for ()\n#define EH_  SUB2(1.,1.5) // for {}\n#define EI_  SUB2(1.5,1.5) // for &\n#define HK_  SUB2(1.,2.5) // for {}\n#define KM_  SUB2(.5,3.5) // for comma\n#define GH_  SUB2(0.5,2.) // for Z and {\n#define HI_  SUB2(1.5,2.) // for Z and B and }\n#define BC_  SUB2(1.5,0.) // for B and D\n#define NO_  SUB2(1.5,4.) // for B and D\n#define CF_  SUB2(2.,0.5) // for 4, D\n#define FI_  SUB2(2.,1.5) // for B\n#define DG_  SUB2(0.,1.5) // for S\n#define IL_  SUB2(2.,2.5) // for S, B\n#define LO_  SUB2(2.,3.5) // for S, B, D\n#define JK_  SUB2(0.5,3.)// for ;\n#define GJ_  SUB2(0.,2.5) // for =\n#define HI_  SUB2(1.5,2.) // for *\n#define DE_  SUB2(0.5,1.) // for *\n#define EF_  SUB2(1.5,1.) // for *\n#define MN_  SUB2(0.5,4.) // for !=\n#define BF_  SUB2(1.5,0.5) // for !=\n#define AE_  SUB2(.5,.5) // for %\n#define KO_  SUB2(1.5,3.5) // for %\n#define JM_  SUB2(0.,3.5) // for #\n\n// Char special Properties\n#define PROPMAX         250.\n#define PROPPACK(a,n,m) (floor( (a - n)/(m - n)*(PROPMAX - 1.) ) )\n#define PROPPACK3(x,y,z) (-(x+PROPMAX*y+PROPMAX*PROPMAX*z))\n#define CHARSPACE(x)     (PROPPACK(x,-.3,1.))\n#define CURSORZ(x)       (PROPPACK(x,-1.,0.))\n#define VSHIFT(x)        (PROPPACK(x,-2.,2.))\n//#define SPECIALPROP(a,b,c)  PROPPACK3(CHARSPACE(a),CURSORZ(b),VSHIFT(c))\n#define SPECIALPROP(a,b,c)  (-(CHARSPACE(a)+PROPMAX*CURSORZ(b)+PROPMAX*PROPMAX*VSHIFT(c)))\n\n\n\n// Small letters\n\n//const vec2 ch_a =vec2(4932900,1746);\n//const vec2 ch_b =vec2(4932900,2010);\nconst vec4 c_ab = p4( G_,I_,O_,M_, J_,L_,0.,0.,G_,I_,O_,M_, A_,M_,0.,0. );\n#define _a _ch8(c_ab.xy);\n#define _b _ch8(c_ab.zw);\n\n//const vec3 ch_i = vec3( -1. , p2( D_,D_,0.,M_, G_,0.,0.,0. ) );\n//const vec4 c_ic = vec4( -1. , p2( E_,E_,0.,H_, N_,0.,0.,0. ) , p1( I_,G_,M_,O_ ) );\nconst vec4 c_ic = vec4( SPECIALPROP(.5,-.25,.0) , p3( E_,E_,0.,H_, N_,0.,0.,0. , I_,G_,M_,O_ ) );\n#define _c _ch4(c_ic.w);\n#define _i _ch16(c_ic.xyz);\n\nconst vec4 c_de = p4( I_,G_,M_,O_, C_,0.,0.,0., O_,M_,G_,I_, L_,J_,0.,0.  );\n#define _d _ch8(c_de.xy);\n#define _e _ch8(c_de.zw);\n\n// a recaser // O_,M_,G_,I_, U_,0.,0.,0\nconst vec3 c_q = vec3(  SPECIALPROP(1.,0.,2.) , p2(I_,G_,A_,C_, O_,0.,0.,0.) );\n#define _q _ch16(c_q.xyz); \n\n//const vec4 c_fg = p4( C_,B_,N_,0., G_,I_,0.,0.,O_,M_,G_,I_, U_,S_,0.,0. );\n//#define _f _ch8(c_fg.xy);\n//#define _g _ch8(c_fg.zw);\n\nconst vec4 c_fg = vec4( p2( C_,B_,N_,0., G_,I_,0.,0. ) , SPECIALPROP(0.,-1.,2.) , p1(O_,M_,0.,0.) );\n#define _f _ch8(c_fg.xy);\n#define _g _ch16(c_q.xyz); _ch8(c_fg.zw);\n\nconst vec4 c_hk = p4( G_,I_,O_,0., M_,A_,0.,0.,A_,M_,I_,0., K_,O_,0.,0. );\n#define _h _ch8(c_hk.xy);\n#define _k _ch8(c_hk.zw);\n\n//const vec4 c_jn = vec4( SPECIALPROP(.45,-.3,1.) , p3( E_,E_,0.,H_, T_,S_,0.,0., M_,G_,I_,O_ ) );\n//const vec4 c_jn = vec4( SPECIALPROP(.45,-.3,1.) , p3( B_,B_,0.,E_, N_,M_,0.,0., M_,G_,I_,O_ ) );\nconst vec3 c_jn = vec3( SPECIALPROP(.0,-.75,2.) , p2( H_,N_,M_,0., M_,G_,I_,O_ ) );\n//#define _j _ch16(c_jn.xyz);\n#define _j  _ch16(c_ic.xyz); _ch8(c_jn.xy);\n#define _n _ch4(c_jn.z);\n// 1 float avalaible\n\nconst vec4 c_ls = vec4( SPECIALPROP(.45,0.,.0) , p3( M_,A_,0.,0., I_,G_,J_,L_, O_,M_,0.,0. ) );\n#define _l _ch8(c_ls.xy);\n#define _s _ch8(c_ls.zw);\n\nconst vec4 c_mo = p4( M_,G_,I_,O_, 0.,N_,H_,0.,M_,G_,I_,O_, M_,0.,0.,0. );\n#define _m _ch8(c_mo.xy);\n#define _o _ch8(c_mo.zw);\n\n//const vec4 c_pq = p4( M_,O_,I_,G_, S_,0.,0.,0.,O_,M_,G_,I_, U_,0.,0.,0. );\n//#define _p _ch8(c_pq.xy);\n//#define _q _ch8(c_pq.zw);\n\nconst vec4 c_pz = vec4( SPECIALPROP(1.,0.,2.), p3( G_,I_,C_,A_, M_,0.,0.,0., G_,I_,M_,O_) );\n#define _p _ch16(c_pz.xyz);\n#define _z _ch4(c_pz.w);\n\n\nconst vec4 c_tr = vec4( SPECIALPROP(.75,0.,.0) , p3( A_,M_,N_,0., G_,H_,0.,0. , M_,G_,I_,0. ) );\n#define _t _ch16(c_tr.xyz);\n#define _r _ch4(c_tr.w);\n\nconst vec4 c_Bu = p4( A_,BC_,CF_,FI_, HI_,IL_,LO_,NO_,  M_,A_,G_,HI_ , G_,M_,O_,I_ );\n#define _B _ch16(c_Bu.xyz);\n#define _u _ch4(c_Bu.w);\n\n//const vec2 ch_v = p2( G_,J_,N_,L_, I_,0.,0.,0. );\n//#define _v _ch8(ch_v);\n//const vec4 c_yvz = p4( G_,M_,O_,0., I_,U_,S_,0.,G_,N_,I_,0.,G_,I_,M_,O_ );\n//#define _z _ch4(c_yvz.w);\n\nconst vec4 c_yv = vec4( SPECIALPROP(1.,0.,2.), p3( A_,G_,I_,0., C_,O_,M_,0.,G_,N_,I_,0.) );\n#define _y _ch16(c_yv.xyz);\n#define _v _ch4(c_yv.w);\n\n\nconst vec4 c_wx = p4( G_,M_,O_,I_, 0.,N_,H_,0.,G_,O_,0.,I_, M_,0.,0.,0. );\n#define _w _ch8(c_wx.xy);\n#define _x _ch8(c_wx.zw);\n\n// Capitals letters\n\n//const vec2 ch_D = p2( A_,B_,F_,L_,  N_,M_,A_,0. );\nconst vec4 c_AD = p4( M_,A_,C_,O_, 0.,G_,I_,0.,A_,BC_,CF_,LO_,  NO_,M_,A_,0. );\n#define _A _ch8(c_AD.xy);\n#define _D _ch8(c_AD.zw);\n\n\n\nconst vec4 c_EF = p4( C_,A_,M_,O_ , 0.,I_,G_,0. , C_,A_,M_,0. , G_,H_,0.,0. );\n#define _E _ch8(c_EF.xy);\n#define _F _ch8(c_EF.zw);\n\nconst vec4 c_GH = p4( C_,A_,M_,O_ , I_,H_,0.,0.,A_,M_,0.,G_ , I_,0.,C_,O_  );\n#define _G _ch8(c_GH.xy);\n#define _H _ch8(c_GH.zw);\n\nconst vec4 c_IJ = p4( A_,C_,0.,B_ , N_,0.,M_,O_,A_,C_,0.,B_ , N_,0.,M_,N_  );\n#define _I _ch8(c_IJ.xy);\n#define _J _ch8(c_IJ.zw);\n\nconst vec4 c_KCL = p4( C_,G_,O_,0. , A_,M_,0.,0. , C_,A_,M_,O_ , A_,M_,O_,0. );\n#define _K _ch8(c_KCL.xy);\n#define _C _ch4(c_KCL.z);\n#define _L _ch4(c_KCL.w);\n\nconst vec4 c_MO = p4( M_,A_,H_,C_ , O_,0.,0.,0.,A_,M_,O_,C_, A_,0.,0.,0. );\n#define _M _ch8(c_MO.xy);\n#define _O _ch8(c_MO.zw);\n\n//const vec2 ch_Q = p2( A_,M_,O_,C_, A_,0.,O_,U_ );\n//const vec2 ch_Q = p2( A_,M_,O_,C_, A_,0.,U_,N_ );\nconst vec4 c_PQ = p4( G_,I_,C_,A_, M_,0.,0.,0.,A_,M_,O_,C_, A_,0.,K_,O_ );\n#define _P _ch8(c_PQ.xy);\n#define _Q _ch8(c_PQ.zw);\n\n//const vec2 ch_R = p2( M_,A_,C_,I_, G_,O_,0.,0. );\n//const vec2 ch_S = p2( C_,A_,DG_,IL_, IL_,O_,M_,0. );\n//const vec2 ch_S = p2( C_,AB_,AD_,DG_, IL_,LO_,NO_,M_ );\nconst vec4 c_RS = p4( M_,A_,C_,I_, G_,0.,GH_,O_,C_,AB_,AD_,D_, L_,LO_,NO_,M_ );\n#define _R _ch8(c_RS.xy);\n#define _S _ch8(c_RS.zw);\n\nconst vec4 c_Tic = p4( A_,C_,0.,B_, N_,0.,0.,0.,D_,B_,F_,0., H_,N_,0.,0. );\n#define _T _ch8(c_Tic.xy);\n#define _icirc _ch8(c_Tic.zw);\n\nconst vec4 c_WX = p4( A_,M_,H_,O_, C_,0.,0.,0. , A_,O_,0.,M_, C_,0.,0.,0. );\n#define _W _ch8(c_WX.xy);\n#define _X _ch8(c_WX.zw);\n\nconst vec4 c_YZ = p4( A_,H_,N_,0., H_,C_,0.,0.,A_,C_,M_,O_, 0.,GH_,HI_,0. );\n#define _Y _ch8(c_YZ.xy);\n#define _Z _ch8(c_YZ.zw);\n\n// Digits\n\nconst vec4 c_01 = p4( A_,C_,O_,M_ , A_, 0. , H_ , H_,D_,B_,N_,0.,M_,O_,0.,0. );\n#define _0 _ch8(c_01.xy);\n#define _1 _ch8(c_01.zw);\n\nconst vec4 c_34 = p4( A_,C_,O_,M_,0.,G_,I_,0.,A_,G_,I_,0.,CF_,O_,0.,0. );\n#define _3 _ch8(c_34.xy);\n#define _4 _ch8(c_34.zw);\n\nconst vec4 c_78 = p4( A_,C_,M_,0.,G_,I_,0.,0.,A_,C_,O_,M_,A_,0.,G_,I_ );\n#define _7 _ch8(c_78.xy);\n#define _8 _ch8(c_78.zw);\n\nconst vec4 c_25 = p4( A_,C_,I_,G_,M_,O_,0.,0.,C_,A_,G_,I_,O_,M_,0.,0. );\n#define _2 _ch8(c_25.xy);\n#define _5 _ch8(c_25.zw);\n\nconst vec4 c_69 = p4( C_,A_,M_,O_,I_,G_,0.,0.,I_,G_,A_,C_,O_,M_,0.,0. );\n#define _6 _ch8(c_69.xy);\n#define _9 _ch8(c_69.zw);\n\n// Misc & Ponctuations & Letter V\n\nconst vec4 c_exclV = vec4( SPECIALPROP(.45,0.,.0) , p3( A_,J_,0.,M_, M_,0.,0.,0.,A_,N_,C_,0.) );\n#define _excl _ch16(c_exclV.xyz);\n#define _V _ch4(c_exclV.w);\n// {{ ! }}{{excl}}\n\nconst vec4 c_codo = vec4( SPECIALPROP(.4,-.3,1.) , p1(K_,KM_,0.,0.), SPECIALPROP(.4,-.3,1.) , p1(K_,K_,0.,0.));\n#define _com _ch8(c_codo.xy);\n#define _dot _ch8(c_codo.zw);\n\nconst vec4 c_qubk = p4( D_,AD_,AB_,BC_, CF_,F_,H_,K_, 0.,N_,N_,0.,A_, O_,0.,0. );\n#define _quest _ch16(c_qubk.xyz);\n#define _back _ch4(c_qubk.w);\n// {{ ? }}{{quest}}\n\n//const vec3 ch_ddot = vec3(-2. , p2(KN_,KN_,0.,HK_, HK_,0.,0.,0.));\n//const float ch_apo = p1(AB_, AE_,D_,0.);\nconst vec4 c_ddap = vec4( SPECIALPROP(.45,-.3,.0) , p3(EH_,EH_,0.,HK_, HK_,0.,0.,0., AB_, DE_,0.,0.));\n#define _ddot _ch16(c_ddap.xyz);\n#define _apo _ch4(c_ddap.w);\n// {{ ' }}{{apo}}\n\nconst vec4 c_dcosl = vec4( SPECIALPROP(.45,-.3,.0) , p3(EH_,EH_,0.,HK_, JK_,0.,0.,0.,C_, M_,0.,0.));\n#define _dcom _ch16(c_dcosl.xyz);\n#define _sla _ch4(c_dcosl.w);\n\nconst vec4 c_bos8 = p4(D_,L_,0.,J_, F_,0.,E_,K_, 0.,G_,I_,0.,C_,B_,N_,O_);\n#define _star8 _ch16(c_bos8.xyz);\n#define _brao _ch4(c_bos8.w);\n\n//const vec3 ch_aster = p3(B_,E_,HI_,0., A_,E_,C_,0., GH_,E_,0.,0.);\n//const vec3 ch_aster = p3(AB_,HI_,0.,BC_, GH_,0.,DE_,EF_, 0.,0.,0.,0.);\nconst vec4 c_asst6 = p4(AD_,FI_,0.,DG_, CF_,0.,B_,H_,DG_,IL_,0.,FI_, GJ_,0.,E_,K_);\n#define _star6 _ch8(c_asst6.xy);\n#define _aster _ch8(c_asst6.zw);\n\nconst vec4 c_udor = vec4( SPECIALPROP(.58,-.18,.5) , p3(M_,O_,0.,0.,AB_,MN_,0.,BC_, NO_,0.,0.,0.));\n#define _und _ch8(c_udor.xy);\n#define _or _ch8(c_udor.zw);\n\n\n\nconst vec4 c_htbc = p4(DG_,FI_,0.,GJ_, IL_,0.,BE_,JM_, 0.,CF_,KN_,0.,A_,B_,N_,M_);\n#define _hash _ch16(c_htbc.xyz);\n#define _brac _ch4(c_htbc.w);\n\n\nconst vec4 c_aoeN = vec4( SPECIALPROP(.6,-.4,.0) , p3( O_,M_,G_,I_, L_,J_,0.,0., M_,A_,O_,C_)  );\n#define _aoe _ch16(c_aoeN.xyz);\n#define _N _ch4(c_aoeN.w);\n// {{ œ }}{{o}}{{aoe}}\n// {{ æ }}{{a}}{{aoe}}\n\nconst vec4 c_ccdU = vec4( SPECIALPROP(1.,.0,1.) , p3( F_,D_,J_,L_, 0.,K_,N_,M_,A_,M_,O_,C_) );\n#define _ccd _ch16(c_ccdU.xyz);\n#define _U _ch4(c_ccdU.w);\n// {{ ç }}{{ccd}}\n\n\n//const vec3 ch_and = p3(O_,D_,AD_,AB_, BC_,CF_,F_,J_, JM_,MN_,N_,IL_);\n//const vec3 ch_and = p3(O_,DG_,D_,AE_, BF_,F_,FI_,J_, JM_,MN_,N_,IL_);\nconst vec4 c_andm = p4(O_,DG_,D_,AE_, BE_,EF_,EI_,J_, JM_,MN_,N_,IL_,G_, I_,0.,0.);\n#define _and _ch16(c_andm.xyz);\n#define _minus _ch4(c_andm.w);\n\n// Quotes & Brackets\n\nconst vec4 c_frq = p4(F_, H_,L_,0., E_,G_,K_,0.,D_, H_,J_,0., E_,I_,K_,0.);\n#define _frqo _ch8(c_frq.xy);\n#define _frqc _ch8(c_frq.zw);\n\nconst vec4 c_qu = p4(AB_, AE_,E_,0., BC_,BF_,F_,0.,AB_, AE_,D_,0., BC_,BF_,E_,0.);\n#define _qo _ch8(c_qu.xy);\n#define _qc _ch8(c_qu.zw);\n\nconst vec4 c_par = p4(C_,BE_,DH_,HJ_, KN_,O_,0.,0.,A_,BE_,FH_,HL_, KN_,M_,0.,0.);\n#define _paro _ch8(c_par.xy);\n#define _parc _ch8(c_par.zw);\n\nconst vec4 c_cur = p4(C_,BE_,EH_,GH_, HK_,KN_,O_,0.,A_,BE_,EH_,HI_, HK_,KN_,M_,0.);\n#define _curo _ch8(c_cur.xy);\n#define _curc _ch8(c_cur.zw);\n\n// Maths\n\nconst vec4 c_equ = p4(AB_, DE_,0.,0., BC_,EF_,0.,0.,DG_,FI_,0.,GJ_, IL_,0.,0.,0.);\n#define _quo _ch8(c_equ.xy);\n#define _eq _ch8(c_equ.zw);\n\n//const vec2 ch_diff = p2(DG_,FI_,0.,GJ_, IL_,0.,F_,J_);\n//const vec2 ch_diff = p2(DG_,FI_,0.,GJ_, IL_,0.,EF_,JK_);\n//const vec2 ch_diff = p2(DG_,FI_,0.,GJ_, IL_,0.,BC_,MN_);\n//const vec2 ch_plus = p2(EH_,HK_,0.,G_, I_,0.,0.,0.);\nconst vec4 c_dipl = p4(DG_,FI_,0.,GJ_, IL_,0.,BF_,KM_,E_,K_,0.,G_, I_,0.,0.,0.);\n#define _diff _ch8(c_dipl.xy);\n#define _plus _ch8(c_dipl.zw);\n\n//const vec2 ch_div = p2(C_,M_,0.,AE_, AE_,0.,KO_,KO_);\n//const vec2 ch_div = p2(CF_,JM_,0.,AD_, AD_,0.,LO_,LO_);\nconst vec4 c_dicr = p4(D_,L_,0.,J_, F_,0.,0.,0.,CF_,JM_,0.,D_, D_,0.,L_,L_);\n#define _cross _ch8(c_dicr.xy);\n#define _div _ch8(c_dicr.zw);\n\nconst vec4 c_prgt = p4(C_,M_,0.,A_, B_,E_,D_,A_, 0.,K_,L_,0.,D_,I_,J_,0.);\n#define _gt _ch4(c_prgt.w);\n\nconst vec4 c_ceci = vec4( SPECIALPROP(0.,-.68,.0) , p1(J_,M_,N_,K_) , SPECIALPROP(0.,-1.,.0) , p1(D_,B_,F_,0.) );\n#define _pcent _ch16(c_prgt.xyz);_ch8(c_ceci.xy);\n#define _circ _ch8(c_ceci.zw);\n// {{ â }}{{a}}{{circ}}\n// {{ ô }}{{o}}{{circ}}\n// {{ û }}{{u}}{{circ}}\n// {{ ê }}{{e}}{{circ}}\n// {{ î }}{{icirc}}\n\nconst vec4 c_thlt = vec4( SPECIALPROP(.333333,-.68,.0) , p3(J_,M_,N_,K_, L_,O_,N_,0.,F_,G_,L_,0.) );\n#define _pthou _ch16(c_prgt.xyz);_ch16(c_thlt.xyz);\n#define _lt _ch4(c_thlt.w);\n\nconst vec4 c_gtlt = p4( D_,I_,J_,0., L_,M_,0.,0. , F_,G_,L_,0., J_,O_,0.,0. );\n#define _gte _ch8(c_gtlt.xy);\n#define _lte _ch8(c_gtlt.zw);\n\n// Accents\n\nconst vec3 ch_dia = vec3( SPECIALPROP(.0,-1.,.0), p2(DE_,DE_,0.,EF_, EF_,0.,0.,0.));\n#define _dia _ch16(ch_dia);\n\nconst vec3 ch_idia = vec3( SPECIALPROP(.5,-.25,.0) , p2( DE_,DE_,0.,H_, N_,0.,EF_,EF_ ) );\n#define _idia _ch16(ch_idia);\n// {{ ä }}{{a}}{{dia}}\n// {{ ü }}{{u}}{{dia}}\n// {{ ë }}{{e}}{{dia}}\n// {{ ÿ }}{{y}}{{dia}}\n// {{ ï }}{{idia}}\n\n\nconst vec4 c_acc = vec4( SPECIALPROP(0.,-1.,.0) , p1( AB_,EF_,0.,0. ) , SPECIALPROP(0.,-1.,.0) , p1( BC_,DE_,0.,0. ) );\n#define _agr _ch8(c_acc.xy);\n// {{ à }}{{a}}{{agr}}\n// {{ è }}{{e}}{{agr}}\n// {{ ù }}{{u}}{{agr}}\n#define _acu _ch8(c_acc.zw);\n// {{ é }}{{e}}{{acu}}\n\n// {{   }}{{sp}}\n// {{ \\n }}{{nl}}\n\n\n*/","name":"Image","description":"","type":"image"}]}