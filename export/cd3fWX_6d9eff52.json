{"ver":"0.1","info":{"id":"cd3fWX","date":"1697672600","viewed":71,"name":"Flag of Palestine","username":"MouadAbdelghafourAITALI","description":"The flag of Palestine country.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["flag","palestine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float calculateTriangleArea(vec2 vertexA, vec2 vertexB, vec2 vertexC) {\n   return abs((vertexA.x * (vertexB.y - vertexC.y) + vertexB.x * \n   (vertexC.y - vertexA.y) + vertexC.x * \n   (vertexA.y - vertexB.y)) / 2.0);\n}\n\nbool isPointInsideTriangle(vec2 vertexA, vec2 vertexB, vec2 vertexC, vec2 point) {    \n   float triangleAreaABC = calculateTriangleArea(vertexA, vertexB, vertexC);\n   float subArea1 = calculateTriangleArea(point, vertexB, vertexC);\n   float subArea2 = calculateTriangleArea(vertexA, point, vertexC);\n   float subArea3 = calculateTriangleArea(vertexA, vertexB, point);\n   return abs(triangleAreaABC - (subArea1 + subArea2 + subArea3)) < 0.0001;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 black = vec3(0.,0.,0.);\n    vec3 white = vec3(1.,1.,1.);\n    vec3 green = vec3(0.157,0.498,0.141);\n    vec3 red = vec3(0.898,0.196,0.173);\n    if (uv.y < 0.333)\n        fragColor = vec4(green, 1.);\n    else if (uv.y < 0.666)\n        fragColor = vec4(white, 1.);\n    else\n        fragColor = vec4(black, 1.);\n   if(isPointInsideTriangle(vec2(0, 0), \n   vec2(0, 1), \n   vec2(0.4, 0.5), uv))\n        fragColor = vec4(red,1.);\n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}