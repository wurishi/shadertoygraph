{"ver":"0.1","info":{"id":"7scXRf","date":"1633616171","viewed":63,"name":"Shucks first tree","username":"shuckity","description":"This is my first ever shader that turned out to be something. Nothing much and the code is in shambles but hey at least it looks sorta like a stree. Also i took the colors at the very begining from someone elses shader props to that guy.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["treefirstshaderever"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getColor(int index) {\n    if (index == 0) return vec3(0.000, 0.000, 0.000); //Black\n    if (index == 1) return vec3(0.333, 0.333, 0.333); //Gray33\n    if (index == 2) return vec3(0.667, 0.667, 0.667); //Gray67\n    if (index == 3) return vec3(1.000, 1.000, 1.000); //White\n    if (index == 4) return vec3(1.000, 0.000, 0.000); //Red\n    if (index == 5) return vec3(0.894, 0.447, 0.000); //Orange\n    if (index == 6) return vec3(0.894, 0.894, 0.000); //Yellow\n    if (index == 7) return vec3(0.000, 1.000, 0.000); //Green\n    if (index == 8) return vec3(0.000, 0.707, 0.707); //Cyan\n    if (index == 9) return vec3(0.000, 0.447, 0.894); //Azure\n    if (index == 10) return vec3(0.000, 0.000, 1.000); //Blue\n    if (index == 11) return vec3(0.447, 0.000, 0.894); //Violet\n    if (index == 12) return vec3(0.894, 0.000, 0.447); //Rose\n    if (index == 13) return vec3(0.500, 0.250, 0.000); //Brown\n    if (index == 14) return vec3(0.830, 0.670, 0.220); //Gold\n    if (index == 15) return vec3(0.250, 0.500, 0.250); //ForestGreen\n    return vec3(0.0);\n}\n\nfloat circle(vec2 uv, vec2 p, float r, float blur){\n     float d = length(uv-p);\n     float c = smoothstep(r, r-blur, d);\n     \n     return c;\n     \n}float Band(float t, float start, float end, float blur) {\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*step2;\n    \n    }\n    \nfloat rectangle(vec2 uv, float up, float down, float left, float right, float blur){\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, up, down, blur);\n    \n    return band1*band2;\n    \n    }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float d = 0.;\n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    float bg = rectangle(vec2(x, y), -1., 1., -1., 1., 0.0001);\n   \n    float c = circle(vec2(x, y), vec2(0., -0.05), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(0., 0.3), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(.2, 0.15), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(.2, 0.4), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(.5, 0.2), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(-.5, 0.2), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(-0.2, 0.15), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(-0.3, 0.3), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(-0.3, -0.05), 0.2, 0.001);\n    c += circle(vec2(x, y), vec2(0.25, 0.00), 0.2, 0.001);\n    \n    float a = 0.;\n    \n    a = circle(vec2(x, y), vec2(0., 0.), .1, 0.0001);\n    \n    d = rectangle(vec2(x, y), -0.5, 0.1, -0.15, 0.15, 0.0001);\n    \n    float result = c+d;\n    \n    float b = 0.;\n    \n    float bg2 = bg-c-d;\n    \n    // 1.*d-c, 1.*c, bg2\n   \n    //vec2 color = vec2(0.500, 0.250, 0.000);\n    \n    float col = 0.;\n    fragColor = vec4(vec3(.5*d-c, .25+c, 0.),1.0);\n}\n","name":"Image","description":"","type":"image"}]}