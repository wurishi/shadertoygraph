{"ver":"0.1","info":{"id":"ldscz2","date":"1489021474","viewed":186,"name":"Rows in Shadertoy","username":"Ippokratis","description":"Adapted from Keijiro's repository\nhttps://github.com/keijiro/ShaderSketches/blob/master/Rows.glsl","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["keijiro","rows","adapted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Adapted from\n//https://github.com/keijiro/ShaderSketches/blob/master/Rows.glsl\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tconst float PI = 3.141592;\n\tfloat time = iTime;\n\n    \n    vec2 coord = gl_FragCoord.xy;\n    vec2 size = iResolution.xx / vec2(60, 15);\n    float y = coord.y / size.y;\n    float scr = 3.0 + 3.0 * fract(floor(y) * 12433.34);\n    float x = coord.x / size.x + scr * time;\n \n    float t = time * 1.1;\n    float t01 = fract(t);\n    float phase = floor(x) * 2353.48272 + floor(y) * 2745.32782 + floor(t);\n\n    float h = mix(\n        fract(sin(phase    ) * 1423.84),\n        fract(sin(phase + 1.0) * 1423.84),\n        smoothstep(0.8, 1.0, t01) * 1.3 - smoothstep(0.5, 0.8, t01) * 0.3\n    );\n\n    float c1 = (0.4 - abs(0.4 - fract(x))) / 0.8 * size.x;\n    float c2 = (h - fract(y)) * size.y;\n    float c = clamp(c1, 0.0, 1.0) * clamp(c2, 0.0, 1.0);\n\n    fragColor = vec4(c, c, c, 1);\n\t\t\n}","name":"Image","description":"","type":"image"}]}