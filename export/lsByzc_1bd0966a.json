{"ver":"0.1","info":{"id":"lsByzc","date":"1493173338","viewed":169,"name":"Dot Matrix","username":"ohjxc","description":"Generate matrix","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["matrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float factorSinFunction(float smoothstepA, float smoothstepB, float floatSinX, float SinFactor, float MovingFactor)\n{\n    float sinfactor = sin(floatSinX * SinFactor * 3.0 + MovingFactor * 10.0);\n    float smoothstepfactor = smoothstep(smoothstepA, smoothstepB, sinfactor);\n    return smoothstepfactor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (iResolution.xy + 2.0*fragCoord)/iResolution.y;\n    \n    vec4 color = vec4(0.06, 0.96, 1.0, 0.6 );\n    \n    float A = factorSinFunction(0.7, 1.0, uv.x, uv.x * uv.y, iTime);\n    float B = factorSinFunction(0.7, 1.0, uv.y, uv.x * uv.y, iTime);\n    \n    float C = factorSinFunction(0.7, 1.0, uv.x, uv.x * uv.y + 2.0, iTime * 1.1);\n    float D = factorSinFunction(0.7, 1.0, uv.y, uv.x * uv.y + 2.0, iTime * 1.1);\n    \n    float E = factorSinFunction(0.7, 1.0, uv.x, uv.x * uv.y + 5.0, iTime * 1.3);\n    float F = factorSinFunction(0.7, 1.0, uv.y, uv.x * uv.y + 5.0, iTime * 1.3);\n    \n    float G = factorSinFunction(0.7, 1.0, uv.x, uv.x * uv.y + 8.0, iTime * 1.5);\n    float H = factorSinFunction(0.7, 1.0, uv.y, uv.x * uv.y + 8.0, iTime * 1.5);\n    \n    vec4 layer1 = color * A * B;\n    vec4 layer2 = color * C * D * 0.5;\n    vec4 layer3 = color * E * F * 0.3;\n    vec4 layer4 = color * G * H * 0.1;\n    \n\tfragColor = layer1 + layer2 + layer3 + layer4;\n}","name":"Image","description":"","type":"image"}]}