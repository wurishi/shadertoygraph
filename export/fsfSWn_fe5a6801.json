{"ver":"0.1","info":{"id":"fsfSWn","date":"1618435393","viewed":231,"name":"2D Light Coverage - Disc","username":"oneshade","description":"Lighting based on the probablity that a light ray hits a pixel.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","light","coverage"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    vec3 color = vec3(0.0);\n\n    vec2 lightPos = vec2(0.0);\n    float lightRadius = 1.0;\n\n    vec2 ray = uv - lightPos;\n    float dd = dot(ray, ray);\n    if (dd < lightRadius * lightRadius) color += 1.0;\n    else color += 1.0 - acos(lightRadius / sqrt(dd)) / 1.57;\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}