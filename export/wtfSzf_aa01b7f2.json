{"ver":"0.1","info":{"id":"wtfSzf","date":"1563719918","viewed":262,"name":"RayMarchingBand012:VoxelPerfect","username":"Hirai_worthless","description":"Voxel-Perfect Torus and\nNon-Voxel-Perfect Sphere.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","voxel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI = 3.14159265;\nfloat map(vec3 p){\n    vec3 q = p;\n        vec2 t = vec2(1.25,0.25);\n    q.xz *= mat2(cos(-iTime),-sin(-iTime),sin(-iTime),cos(-iTime));\n\t p = floor(p * 10.0) / 10.0;\n    q = floor(q * 10.0) / 10.0;\n        p.xz *= mat2(cos((iTime - 1.0/2.0) * PI),-sin((iTime - 1.0/2.0) * PI)\n                 ,sin((iTime - 1.0/2.0) * PI),cos((iTime - 1.0/2.0) * PI));\n    vec2 r1 = vec2(length(p.xy) - t.x, p.z);\n    float torus = length(r1) - t.y;\n    return min(torus,length(q) - 0.75);\n\n}\n\nfloat trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 96; ++i){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0));\n    \n    vec3 o = vec3(0,0,-2.0);\n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}