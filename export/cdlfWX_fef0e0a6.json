{"ver":"0.1","info":{"id":"cdlfWX","date":"1689362447","viewed":130,"name":"Simplex Blur","username":"mastandunoh_bd","description":"Simplex noise adapted for a cheap blur effect","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAGIC 43758.5453123\n\nfloat scale = 40.;\n\nvec2 skew(vec2 pos)\n{\n    const float n = 2.0;\n    float sum = pos.x + pos.y;\n    const float F = (sqrt(n + 1.0) - 1.0) / n;\n    return pos + F * sum;\n}\n\nvec2 unskew(vec2 pos)\n{\n    const float n = 2.0;\n    float sum = pos.x + pos.y;\n    float G = (1.0 - 1.0 / sqrt(n + 1.0)) / n;\n    return pos - G * sum;\n}\n\nvec4 get_color(vec2 st) {\n    vec2 uv = fract(st / scale);\n    vec4 color = texelFetch(iChannel0, ivec2(uv * iChannelResolution[0].xy), 0);\n    return 2.0 * color - 1.0;\n}\n\nconst float falloff = 1.8;\nconst float r = sqrt(0.5);\n\nvec4 simplex_blur(vec2 st)\n{\n    // (1) Skew Coordinates\n    vec2 skewed = skew(st);\n    \n    // (2) Simplicial Subdivision\n\tvec2 v0 = floor(skewed);\n    vec2 v1 = ceil(skewed);\n    vec2 v2 = fract(skewed.x) < fract(skewed.y) ? vec2(v0.x, v1.y) : vec2(v1.x, v0.y);\n    \n    // (3) Color Selection\n    vec4 c0 = get_color(unskew(v0));\n    vec4 c1 = get_color(unskew(v1));\n    vec4 c2 = get_color(unskew(v2));\n    \n    // Kernel Summation\n    vec4 value = vec4(0.0);\n    vec2 r0 = st - unskew(v0);\n    vec2 r1 = st - unskew(v1);\n    vec2 r2 = st - unskew(v2);\n    \n    value += c0 * pow(max(0.0, r * r - dot(r0, r0)), falloff);\n    value += c1 * pow(max(0.0, r * r - dot(r1, r1)), falloff);\n    value += c2 * pow(max(0.0, r * r - dot(r2, r2)), falloff);\n    \n    return 0.5 * (5.0 * value + 1.0);\n}\n\nconst float freq = 0.5;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 st = scale * fragCoord.xy / iResolution.xy;\n    // st.x *= iResolution.x / iResolution.y;\n    \n    fragColor = simplex_blur(st) * 1.0;\n}\n","name":"Image","description":"","type":"image"}]}