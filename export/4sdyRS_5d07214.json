{"ver":"0.1","info":{"id":"4sdyRS","date":"1519354210","viewed":191,"name":"single-pass blur","username":"trusktr","description":"Forked from https://www.shadertoy.com/view/XdfGDH\n\nSingle-pass blur, turned into a function.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nfloat normpdf(in float x, in float sigma) {\n\treturn 0.39894*exp(-0.5*x*x/(sigma*sigma))/sigma;\n}\n\nvec4 blur(sampler2D image, vec2 resolution, vec2 fragCoord ) {\n    vec3 c = texture( image, fragCoord / resolution ).rgb;\n    \t\t\n    const int mSize = 21;\n    const int kSize = (mSize-1)/2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\t\t\n    //create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int j = 0; j <= kSize; ++j)\n    {\n        kernel[kSize+j] = kernel[kSize-j] = normpdf(float(j), sigma);\n    }\n\n    //get the normalization factor (as the gaussian has been clamped)\n    for (int j = 0; j < mSize; ++j)\n    {\n        Z += kernel[j];\n    }\n\n    //read out the texels\n    for (int i=-kSize; i <= kSize; ++i) {\n        for (int j=-kSize; j <= kSize; ++j) {\n            final_colour +=\n                kernel[kSize+j]\n                *kernel[kSize+i]\n                *texture(\n                    image, (fragCoord+vec2(float(i),float(j))) / resolution\n                ).rgb;\n        }\n    }\n    \n    return vec4(final_colour/(Z*Z), 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    fragColor = blur(iChannel0, iResolution.xy, fragCoord.xy);\n    //fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy);\n\n}","name":"Image","description":"","type":"image"}]}