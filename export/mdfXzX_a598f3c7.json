{"ver":"0.1","info":{"id":"mdfXzX","date":"1669290775","viewed":373,"name":"Sample Magnifier","username":"valdis","description":"use your mouse","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["magnifier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float SqrSize = 0.01;\nconst float SqrBorderSize = 0.002;\nconst float Zoom = 1.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mUv = iMouse.xy / iResolution.xy;\n    \n    if(mUv == vec2(0.0))\n    {\n        mUv = vec2(0.45) + vec2(sin(iTime),cos(iTime)) * 0.05;\n    }\n    \n    vec2 dis = mUv - uv; // vector about distantion from uv to mousePoint\n    vec2 dist = dis; // save vector without change aspect ratio\n    dis.y *= iResolution.y / iResolution.x; // to be circle, not ellipse\n\n    float sqrMagitude = dot(dis,dis);\n    \n    //flag is uv inside the magnifier\n    float magnifierFlag = step(sqrMagitude, SqrSize);\n    \n    uv += (1. - 1./Zoom) * dist * magnifierFlag; //the main magic ;)\n    \n    \n    //flag of white border\n    float border = smoothstep(SqrBorderSize, 0., abs(sqrMagitude - SqrSize));\n    \n    \n    fragColor = max(texture(iChannel0, uv), border); // drow border;\n}","name":"Image","description":"","type":"image"}]}