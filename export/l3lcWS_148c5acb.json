{"ver":"0.1","info":{"id":"l3lcWS","date":"1726848653","viewed":9,"name":"radial mix color for ninja zen","username":"nahuel36","description":"color background in Ninja Zen game\nhttps://nahuel36.itch.io/ninja-zen\n\nLicense\nThis work is marked with CC0 1.0. To view a copy of this license, visit https://creativecommons.org/publicdomain/zero/1.0/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["huerainbowradial"],"hasliked":0,"parentid":"XXlcRr","parentname":"radial colors"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TWO_PI 6.28318530718\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\n\nvec2 Unity_Rotate_Radians_float(vec2 UV, vec2 Center, float Rotation)\n{\n    UV -= Center;\n    float s = sin(Rotation);\n    float c = cos(Rotation);\n    mat2x2 rMatrix = mat2x2(c, -s, s, c);\n    rMatrix *= 0.5;\n    rMatrix += 0.5;\n    rMatrix = rMatrix * 2. - 1.;\n    UV.xy = UV.xy * rMatrix;\n    UV += Center;\n    return UV;\n}\n\n\n\nvoid mainImage(out vec4 fragColour, in vec2 fragCoord){\n    vec2 st = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    // Use polar coordinates instead of cartesian\n    vec2 toCenter = vec2(0.5)-st;\n\n    //st = Unity_Rotate_Radians_float(st,vec2(0.5,0.5),iTime);\n\n    vec2 toCenter2 = vec2(0.5)-st;\n\n    float angle = atan(toCenter2.y,toCenter2.x)*3.;\n    //float radius = length(toCenter);\n    \n    float angle2 = atan(toCenter2.y,-toCenter2.x)*3.;\n   // angle = angle + iTime;\n    \n    vec3 colorA = vec3(0.149,0.141,0.912);\n    vec3 colorB = vec3(1.000,0.146,0.881);\n    \n    if(toCenter2.x > 0.)\n        color = mix(colorA, colorB, (angle/TWO_PI)+0.7);\n    else\n        color = mix(colorA, colorB, (angle2/TWO_PI)+0.7);\n\n\n    fragColour = vec4(color.rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}