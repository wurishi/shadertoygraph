{"ver":"0.1","info":{"id":"7t2Sz3","date":"1628268627","viewed":90,"name":"discrete convolution","username":"yunhai","description":"a visulization of convolution of the  Signals and Systems\nthe third function is the product of the first two functions","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SS(a,b,t) smoothstep(a,b,t)\n#define SL(d) smoothstep(HLW,HLW-.005,d)\nconst float PI=3.14159265;\n//---------------------Lines-------------------\nconst float HLW=.05;//half line width\nconst float MSI=1.;//mesh space interval\nfloat lineSeg(vec2 uv,vec2 start,vec2 end)\n{\n    vec2 sp=uv-start;\n    vec2 se=end-start;\n    vec2 closp=clamp(dot(sp,se)/dot(se,se),0.,1.)*se+start;\n    return SL(length(uv-closp));\n}\nfloat line(vec2 uv,vec2 ori,vec2 dir)\n{\n    vec2 sp=uv-ori;\n    vec2 closp=dot(sp,dir)*dir+ori;\n    return SL(length(uv-closp));\n}\n//----------------------------------------------\nfloat myRound(float x)\n{\n    //return round(x);\n    return floor(x+0.5);\n}\nvec3 cartesian(vec2 uv)\n{\n    vec3 col=vec3(0.);\n    float msp=MSI;\n    float lhlw=HLW/2.;//local HLW\n    vec3 mesh=vec3(SS(lhlw,lhlw-.005,abs(uv.x-myRound(uv.x/msp)*msp)));\n    mesh+=vec3(SS(lhlw,lhlw-.005,abs(uv.y-myRound(uv.y/msp)*msp)));\n    col+=mesh*.5;\n    col=mix(col,vec3(0.,1.,0.),line(uv,vec2(6.),vec2(1.,0.)));\n    col=mix(col,vec3(0.,1.,0.),line(uv,vec2(2.),vec2(1.,0.)));\n    col=mix(col,vec3(0.,1.,1.),line(uv,vec2(-2.),vec2(1.,0.)));\n    col=mix(col,vec3(1.,1.,0.),line(uv,vec2(-9.),vec2(1.,0.)));\n    col=mix(col,vec3(0.,1.,0.),line(uv,vec2(0.),vec2(0.,1.)));\n    return col;\n}\nvec3 palette(float t)//Color Palette\n{\n    t*=1.732;\n    return vec3(.7)+vec3(.3)*cos(2.*PI*(vec3(.71,.31,.21)*t+vec3(.2,.4,.6)));\n}\n//-------------------experiment-----------------\nfloat f1(float x)\n{\n    return step(0.,x)*step(x,10.);   \n}\nfloat f2(float x)\n{\n    x+=10.;\n    return exp(x*.2)*.13*step(x,10.);\n}\nfloat convolution(float x)\n{\n    const float inf=20.;\n    float conv=0.,n=x;\n    for(float i=-inf;i<inf;i++)\n        conv+=f2(i-n)*f1(i);\n    return conv;\n}\n\nfloat df(vec2 uv,float x,float y)\n{\n    return mix(lineSeg(uv,vec2(x,0),vec2(x,y)),1.,SS(.2,.15,length(uv-vec2(x,y))));\n}\nvoid mainImage( out vec4 O, in vec2 C )\n{\n    vec2 uv= (C-.5*iResolution.xy)/iResolution.y;uv*=20.;uv.x+=5.;\n    float x=uv.x,y=uv.y,t=iTime;\n    O.rgb=cartesian(uv);    \n    t=mod(t,16.);\n    float n=floor(t*2.)-5.;\n    x=round(x);\n    float y1=f1(x),y2=f2(x-n);\n    O.rgb=mix(O.rgb,vec3(1),df(uv-vec2(0,6),x,y1));\n    O.rgb=mix(O.rgb,vec3(1),df(uv-vec2(0,2),x,y2));\n    O.rgb=mix(O.rgb,palette(n),df(uv-vec2(0,-2),x,y1*y2));\n    float cov=convolution(x);\n    //O.rgb=mix(O.rgb,vec3(1,1,0),df(uv-vec2(0,-9),x,cov));\n    O.rgb=mix(O.rgb,palette(x),df(uv-vec2(0,-9),x,cov*step(x,n))*step(x,n+.1));\n    \n}","name":"Image","description":"","type":"image"}]}