{"ver":"0.1","info":{"id":"wd3GD4","date":"1568519150","viewed":148,"name":"GridRandomAndBlur","username":"Hirai_worthless","description":"test","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st,float t) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123 + t);\n}\nmat2 genRot(float v){\n\treturn mat2(cos(v),-sin(v),sin(v),cos(v));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0,uv).xyz;\n    vec3 bc = vec3(0.);\n    float dlt = 0.01;\n    for(float xi = -2.0; xi < 3.0; xi += 1.0){\n        for(float yi = -2.0; yi < 3.0; yi += 1.0){\n        \tbc += texture(iChannel0,uv + vec2(xi,yi) * dlt).xyz * 0.02;\n        }\n    }\n    for(float xi = -1.0; xi < 2.0; xi += 1.0){\n        for(float yi = -1.0; yi < 2.0; yi += 1.0){\n        \tbc += texture(iChannel0,uv + vec2(xi,yi) * dlt).xyz * 0.02;\n        }\n    }\n    bc += col * 0.36;\n    float bv = abs((fragCoord * 2. - iResolution.xy)/iResolution.y).y;\n    col = mix(col,bc,sqrt(bv));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float random (vec2 st,float t) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))* 43758.5453123 + t);\n}\nmat2 genRot(float v){\n\treturn mat2(cos(v),-sin(v),sin(v),cos(v));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/iResolution.y;\n    float vig = 1. - length(uv.y) /4.;\n\n    uv += iTime/8.;\n    uv  *= genRot(3.1415/4.);\n    vec2 grid = floor(uv * 6.) / 6.;\n    vec2 fr = fract(uv * 6.);\n\tfloat v = random(grid , iTime/16.);\n    v *= 8.;\n    // Time varying pixel color\n    vec3 c1 = vec3(67,196,199)/255.;\n    vec3 c2 = vec3(237,85,101)/255.;\n    vec3 cd = vec3(223,223,223)/255.;\n    float dist = max(abs(fr.x - 0.5), abs(fr.y - 0.5));\n    float inner = smoothstep(0.,1.,dist-0.1);\n    float outer = smoothstep(0.,1.,dist);\n    vec3 pc = v < 4. ? c1 : c2;\n    v = mod(v,4.);\n    pc = mix(cd,pc,dist*2.0);\n    vec3 col = v > inner && v < outer ? pc : cd;\n    col *= vig;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}