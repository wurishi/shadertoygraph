{"ver":"0.1","info":{"id":"WsVcWz","date":"1603336624","viewed":148,"name":"Art of Code","username":"EvenZHAng","description":"Created by EvenZHAng","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(vec2 p){\n\tp = abs(p);\n    float c = dot(p, normalize(vec2(1,1.73)));\n    c = max(c, p.x);\n    return c;\n}\n\n\nvec4 HexCoords(vec2 uv) {\n    \n\tvec2 r = vec2(1, 1.73);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 gv;\n    if (length(a)<length(b))\n        gv = a;\n    else\n        gv = b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .5 - HexDist(gv);\n    vec2 id = uv - gv;\n    \n    return vec4(x, y, id.x, id.y);\n} \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    // vec2 uv = fragCoord/iResolution.y;\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy) / iResolution.y;\n    \n\n    vec3 col = vec3(0.0);\n    uv *= 10.0;\n    \n    \n    vec4 hc = HexCoords(uv);\n\n    float c = smoothstep(sin(iTime), sin(iTime)+3., length(hc.zw));\n    \n    c = smoothstep(c, c+0.04, hc.y);\n    \n    float t = sin(iTime)*5.+5.;\n    \n    float sl = smoothstep(t+1.,t,length(hc.zw));\n    \n    c = smoothstep(0.02+sl, 0.01+sl, hc.y);\n    \n    col += c*smoothstep(t+3.,t+2.,length(uv));\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}