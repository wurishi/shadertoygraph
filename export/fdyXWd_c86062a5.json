{"ver":"0.1","info":{"id":"fdyXWd","date":"1635486696","viewed":122,"name":"cp","username":"kaiserschmarrn_","description":"color picker","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hsv","colorpicker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float sqrt3 = 1.73205080757;\nconst float pi = 3.14159265;\nconst float sqrt3o2 = sqrt3/2.;\nconst vec2 br = vec2(sqrt3o2,.5);\nconst vec2 t = vec2(0.,-1.);\nconst vec2 bl = vec2(-sqrt3o2,.5);\nconst mat2 rot2 = mat2(sqrt3o2,-.5,.5,sqrt3o2);\nconst mat2 rot3 = mat2(sqrt3o2,.5,-.5,sqrt3o2);\n\n// iq.. i dont understand yet..\nvec3 hsv2rgb(in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nconst float eps = 0.0000001;\nvec3 rgb2hsv(in vec3 c)\n{\n    vec4 k = vec4(0.0, -1.0/3.0, 2.0/3.0, -1.0);\n    vec4 p = mix(vec4(c.zy, k.wz), vec4(c.yz, k.xy), (c.z<c.y) ? 1.0 : 0.0);\n    vec4 q = mix(vec4(p.xyw, c.x), vec4(c.x, p.yzx), (p.x<c.x) ? 1.0 : 0.0);\n    float d = q.x - min(q.w, q.y);\n    return vec3(abs(q.z + (q.w - q.y) / (6.0*d+eps)), d / (q.x+eps), q.x);\n}\n\nvec3 t2b(vec2 a, vec2 b, vec2 c, vec2 p) {\n    vec2 v0 = b - a, v1 = c - a, v2 = p - a;\n    float d = 1./(v0.x * v1.y - v1.x * v0.y);\n    float v = (v2.x * v1.y - v1.x * v2.y)*d;\n    float w = (v0.x * v2.y - v2.x * v0.y)*d;\n    float u = 1. - v - w;\n    return abs(vec3(u,v,w));\n}\n\nvec2 b2t(vec2 a, vec2 b, vec2 c, vec3 p) {\n    return a*p.x+b*p.y+c*p.z;\n}\n\nvec4 drawPoint(in vec2 uv,in vec2 p)\n{\n    float alpha=smoothstep(0.008,0.002,abs(length(uv-p)-0.02));\n    return vec4(vec3(1.0),alpha);\n}\n\nfloat tri(vec2 p, vec2 c, float r) {\n    p-=c;\n    p/=r;\n    \n    p.x = abs(p.x);\n    vec2 rot = rot2 * p.xy;\n    rot.y = abs(rot.y);\n    rot = rot3 * rot;\n    rot.x = abs(rot.x);\n\n    float d = 0.;\n    if (rot.x <= sqrt3o2) {\n        d = rot.y-.5;\n    } else {\n        d = length(rot - br);\n    }\n    \n    return d*r;\n}\n\nfloat ring(vec2 p, vec2 c, float ir) {\n    p-=c;\n    \n    return length(p) - ir;\n}\n\nvec4 ln(in vec2 p, in vec2 a, in vec2 b) {\n    const float t = 1.;\n\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return vec4(1.,1.,1.,smoothstep(1.,-1.,abs(length( pa - ba*h )-5.)-2.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord.y = iResolution.y - fragCoord.y;\n    \n    vec2 center = iResolution.xy/2.;\n    float rad = min(iResolution.y,iResolution.x)*.33;\n    float thickness = rad*.1;\n    \n    float trid = tri(fragCoord, center, rad);\n    float rd = abs(ring(fragCoord, center,rad+thickness)) - thickness;\n    float ud = 1.f-smoothstep(-1., 1., min(trid,rd));\n    \n    vec2 at = fragCoord - center;\n    vec3 rgb = hsv2rgb(vec3(-atan(at.x, at.y) / (2.*pi) - .25, 1., 1.));\n    vec3 colt = vec3(ud*rgb.x,ud*rgb.y,ud*rgb.z);\n    \n    vec3 b = t2b(t, bl, br, (fragCoord-center) / rad);\n    vec3 c = vec3(0.,0.,0.)*b.x + vec3(1.,1.,1.)*b.y+vec3(1.,0.,0.)*b.z;\n    vec3 colr = vec3(ud*c.x,ud*c.y,ud*c.z);\n    \n    float weight = smoothstep(-1., 1., rad-length(fragCoord-center));\n    vec3 col = weight*colr+(1.f-weight)*colt;\n   \n    vec4 ptcl = vec4(1.,1.,1.,smoothstep(1.,-1.,abs(length(fragCoord-center)-5.)-1.));\n\n    vec3 bcol=vec3(0.9,.1,.6);\n    vec3 cur=rgb2hsv(bcol);\n    \n    float r=pi/180.;\n    float hr=cur.x*2.*pi;\n    vec2 lp = vec2(cos(hr)*rad,sin(hr)*rad);\n    \n    vec4 lcl = ln(fragCoord, center+lp, center+lp+normalize(lp)*thickness * 2.);\n   \n    fragColor = vec4(col,1.f);\n    fragColor=fragColor*(1.0-ptcl.a)+ptcl*ptcl.a;\n    fragColor=fragColor*(1.0-lcl.a)+lcl*lcl.a;\n}","name":"Image","description":"","type":"image"}]}