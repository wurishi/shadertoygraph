{"ver":"0.1","info":{"id":"mtGczV","date":"1700422371","viewed":48,"name":"pixel_grapher","username":"MadMath123","description":"one pixel wide grapher","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["graphbet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(float x){\n    return sin(x*10.+iTime)/10.+sin(iTime)*sin(x*20.)/10.;\n}\nfloat diff(vec2 p){\n    return (p.y > f(p.x) ? 1. : 0.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    vec3 stepuv = vec3(1. / iResolution.y, -1. / iResolution.y, 0.);\n    float score = diff(uv + stepuv.xx) +\n                  diff(uv + stepuv.xz) +\n                  diff(uv + stepuv.xy) +\n                  diff(uv + stepuv.zy) +\n                  diff(uv + stepuv.yy) +\n                  diff(uv + stepuv.yz) +\n                  diff(uv + stepuv.yx) +\n                  diff(uv + stepuv.zx);\n              \n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    if(score < 4. || score > 5.){col = vec3(1.);}\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}