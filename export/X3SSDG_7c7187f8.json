{"ver":"0.1","info":{"id":"X3SSDG","date":"1710976967","viewed":34,"name":"Eyeballs","username":"SaadTheGlad","description":"eyeballs","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["eyeballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 eyef(vec2 uv) {\n    vec3 irisCol = vec3(0.27450980392156865, 0.5098039215686274, 0.7058823529411765);\n    vec3 pupilCol = vec3(0.,0.,0.);\n    \n    float speed = 2.;\n    \n    // Iris\n    float iris_d = length(uv);\n    vec3 iris = vec3(iris_d); \n    //iris = smoothstep(0.2 + (sin(iTime * speed) / 10.), 0.21 + (sin(iTime * speed) / 10.), iris);\n    iris = step(0.2, iris);\n    iris += irisCol;\n    \n    //Pupil\n    float pupil_d = 2.0 * length(uv);\n    vec3 pupil = vec3(pupil_d);\n    pupil = smoothstep(0.2 + (sin(iTime * speed) / 10.), 0.21 + (sin(iTime * speed) / 10.), pupil);\n    //pupil = step(0.2, pupil);\n    pupil += pupilCol;\n    \n    //Eye\n    vec3 eye = pupil * iris;\n    return eye;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 skinCol = vec3(1.0,0.8627,0.698);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv.x += sin(6. * iTime)/6. + 0.5;\n    \n\n    vec3 eye = eyef(uv);\n    uv.x -= 1.0;\n    vec3 eye2 = eyef(uv);\n    // Output to screen\n    vec3 eyes = eye * eye2;\n    vec3 s = step(vec3(1.0, 1.0, 1.0), eyes);\n    \n    fragColor = vec4(mix(eyes, skinCol, s), 1.0);\n}","name":"Image","description":"","type":"image"}]}