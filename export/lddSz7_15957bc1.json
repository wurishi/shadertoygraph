{"ver":"0.1","info":{"id":"lddSz7","date":"1458532800","viewed":194,"name":"ripple audio test","username":"pentaphobe","description":"first shadertoy, getting back into the swing of shader land","likes":5,"published":1,"flags":64,"usePreview":0,"tags":["audio","grainy","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldl3Rj","filepath":"https://soundcloud.com/pentaphobe/back-in-the-slow-realm-arrangement-fiddle-1-layering","previewfilepath":"https://soundcloud.com/pentaphobe/back-in-the-slow-realm-arrangement-fiddle-1-layering","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate = mat2( 0.8, 0.6, -0.6, 0.8 );\n\n/**\n * hash thanks to Dave_Hoskins: https://www.shadertoy.com/view/4djSRW\n */\n#define HASHSCALE1 .1031\n\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\n/* end of hash */\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pos = uv;\n    //pos += sin(iChannelTime[0] * 0.25);\n    pos -= 0.5;\n    pos = vec2(cos(pos.x), sin(pos.y)) * 0.25;\n    pos.x += cos(iTime * 0.125) * 0.125;\n    float angle = texture(iChannel0, vec2(0, 0)).z;\n    pos *= cos(pos.y) + (texture(iChannel0, pos).x * 0.25) - 0.5;\n    rotate = mat2( cos(angle), -sin(angle), sin(angle), cos(angle) );\n    pos *= rotate;\n    pos *= 2.1;\n    pos = clamp(pos, 0.0, 1.0);\n    vec4 v = texture(iChannel0, pos) + (vec4(vec3(uv, 1.0), 1.0) * 0.125);\n    pos *= pos;\n    v += texture(iChannel0, vec2(pos.y, pos.x));\n    v += texture(iChannel1, uv * pos / 10.0);\n    v /= 5.0;\n    v *= v * 2.0;\n    v += (vec4(vec3(pos.y, pos.x * pos.y, pos.x), 1.0) * 0.7);\n    v *= 1.1 * vec4(1.0, 1.0, 1.0, 1.0 - smoothstep(0.65, 1.1, abs(uv.x-0.5) * 2.0));\n\tv *= 1.1 * vec4(1.0, 1.0, 1.0, 1.0 - smoothstep(0.65, 1.1, abs(uv.y-0.5) * 2.0));    \n    v += (hash13(vec3(rotate * uv * (sin(iTime / 10.0) * 100.0), iTime)) -0.5) * 0.0725;\n    v = smoothstep(0.15, 0.7, v);\n    vec4 background = vec4(0.0, 0.0, 0.0, 1.0);\n\tfragColor = background + (v * v.a); // * vec4(pos,0.5+0.5*sin(iTime),1.0);\n}","name":"Image","description":"","type":"image"}]}