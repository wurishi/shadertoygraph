{"ver":"0.1","info":{"id":"XfjcWw","date":"1722420577","viewed":30,"name":"旋转的线","username":"langzai","description":"实验","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 CenterUV(vec2 fragCoord )//uv的居中与反拉伸https://www.shadertoy.com/view/M3cSDS\n{\n    return (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n}\nvec2 RotatePoint(vec2 center,float angle,float distance)//绕一个点旋转，得到一个二维坐标\n{\n    return vec2(cos(angle),sin(angle))*distance + center;\n}\nfloat sdLine(vec2 uv,vec2 start,vec2 end)\n{\n    vec2 uv2S = uv - start;\n    vec2 e2s = end - start;\n    float h = clamp(dot(uv2S,e2s)/dot(e2s,e2s), 0.0, 1.0 );\n    return length( uv2S - e2s * h );\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = CenterUV(fragCoord);\n    vec2 start1 = vec2(0.);\n    vec2 end1 = RotatePoint(start1,iTime,.3);\n    float sd = step(sdLine(uv,start1,end1),.02)*.5;\n    float ring = step(length(uv-start1),.3)*0.2;\n    \n    vec2 start2 = end1;\n    vec2 end2 = RotatePoint(start2,iTime*2.,.4);\n    sd += step(sdLine(uv,start2,end2),.02)*.5;\n    ring += step(length(uv-start2),.4)*0.2;\n    \n    vec2 start3 = end2;\n    vec2 end3 = RotatePoint(start3,-iTime*2.,.5);\n    sd += step(sdLine(uv,start3,end3),.02)*.5;\n    ring += step(length(uv-start3),.5)*0.2;\n    \n    vec2 start4 = end3;\n    vec2 end4 = RotatePoint(start4,iTime,.5);\n    sd += step(sdLine(uv,start4,end4),.02)*.5;\n    ring += step(length(uv-start4),.5)*0.2;\n    \n\n    fragColor = vec4(sd + ring);\n}","name":"Image","description":"","type":"image"}]}