{"ver":"0.1","info":{"id":"clccDH","date":"1699115843","viewed":62,"name":"capsule typeface slogan rendered","username":"chenxianming","description":"it's slogan capsule typeface scene designed for a slogan.","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["raymarching","text"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I iResolution\n#define rot( r ) mat2(cos(r), sin(r), -sin(r), cos(r) )\n#define PI 3.1415926\n#define T( s ) fract( iTime * s ) * PI * 4.\n#define z( s ) clamp( s, .0, 1. ) \n#define Zoom 1\n\nfloat smin (float a, float b, float r)\n{\n    float h = clamp(.5+.5*(b-a)/r,0.,1.);\n    return mix(b, a, h) - r*h*(1.-h);\n}\n\nfloat smax(float a, float b, float k) {\n    return -smin(-a, -b, k);\n}\n\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n  vec3 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h ) - r;\n}\n\n\nvec4 sdBezierExtrude(vec3 pos, vec3 A, vec3 B, vec3 C)\n{    \n    // check for colinear\n    //if (abs(dot(normalize(B - A), normalize(C - B)) - 1.0) < 0.0001)\n    //    return sdLinearSegment(pos, A, C);\n\n\t// first, calc curve T value\n    vec3 a = B - A;\n    vec3 b = A - 2.0*B + C;\n    vec3 c = a * 2.0;\n    vec3 d = A - pos;\n\n    float kk = 1.0 / dot(b,b);\n    float kx = kk * dot(a,b);\n    float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n    float kz = kk * dot(d,a);      \n\n    float p = ky - kx*kx;\n    float p3 = p*p*p;\n    float q = kx*(2.0*kx*kx - 3.0*ky) + kz;\n    float h = q*q + 4.0*p3;\n\tfloat t;\n\n    if(h >= 0.0) \n    { \n        h = sqrt(h);\n        vec2 x = (vec2(h, -h) - q) / 2.0;\n        vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n        t = clamp(uv.x+uv.y-kx, 0.0, 1.0);\n        // 1 root\n    }\n    else\n    {\n        float z = sqrt(-p);\n        float v = acos( q/(p*z*2.0) ) / 3.0;\n        float m = cos(v);\n        float n = sin(v)*1.732050808;\n        vec3 _t = clamp( vec3(m+m,-n-m,n-m)*z-kx, 0.0, 1.0);\n\t\t// 3 roots, but only need two\n\t\tvec3 r1 = d + (c + b * _t.x) * _t.x;\n\t\tvec3 r2 = d + (c + b * _t.y) * _t.y;\n\t\t//t = length(r2.xyz) < length(r1.xyz) ? _t.y : _t.x;\n        t = dot(r2,r2) < dot(r1,r1) ? _t.y : _t.x; // quicker\n        \n    }\n    \n    vec3 _tan = normalize((2.0 - 2.0 * t) * (B - A) + 2.0 * t * (C - B));  // spline tangent\n    vec3 up = vec3(0.0, 1.0, 0.0);\n    vec3 binormal = normalize(cross(up, _tan));\n    vec3 _normal = cross(_tan, binormal);\n\n\tvec3 t1 = cross(_normal, _tan); // no need to normalize this?\n\tmat3 mm = mat3(t1, cross(_tan, t1), _tan);\n    pos.xyz = mix(mix(A, B, t), mix(B, C, t), t) - pos; // spline position\n    return vec4(pos.xyz*mm, t);\n}\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat B( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n    \n    a = vec3( vec2( -0.04, 0.13 ), Zoom );\n    b = vec3( vec2( 0.15, 0.1 ), Zoom );\n    c = vec3( vec2( -0.04, -0.07 ), Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .01 );\n    \n    a = vec3( vec2( -0.04, -0.27 ), Zoom );\n    b = vec3( vec2( 0.18, -0.25 ), Zoom );\n    c = vec3( vec2( -0.04, -0.07 ), Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .01 );\n    \n    a = vec3( vec2( -0.08, 0.13 ), Zoom );\n    b = vec3( vec2( -0.08, -0.27 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .02\n    );\n    \n    return d;\n}\n\nfloat E( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n    a = vec3( vec2( -0.11, -0.03 ), Zoom );\n    b = vec3( vec2( -0.01, 0.22 ), Zoom );\n    c = vec3( vec2( 0.13, -0.01 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .01 );\n    \n    \n    a = vec3( vec2( -0.11, -0.03 ), Zoom );\n    b = vec3( vec2( -0.16, -0.24 ), Zoom );\n    c = vec3( vec2( 0.11, -0.22 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .00 );\n    \n    a = vec3( vec2( -0.07, -0.05 ), Zoom );\n    b = vec3( vec2( 0.12, -0.05 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .03\n    );\n    \n    return d;\n}\n\nfloat N( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n\n    \n    a = vec3( vec2( -0.07, 0.1 ), Zoom );\n    b = vec3( vec2( -0.07, -0.21 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .03\n    );\n    \n    a = vec3( vec2( -0.05, 0.03 ), Zoom );\n    b = vec3( vec2( 0.07, 0.1 ), Zoom );\n    c = vec3( vec2( 0.10, 0.0 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .02 );\n    \n    a = vec3( vec2( 0.101, -0.05 ), Zoom );\n    b = vec3( vec2(0.102, -0.21 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .024\n    );\n    \n    \n    return d;\n}\n\nfloat C( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n    a = vec3( vec2( -0.10, -0.05 ), Zoom );\n    b = vec3( vec2( -0.06, 0.14 ), Zoom );\n    c = vec3( vec2( 0.11, 0.03 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .0 );\n    \n    a = vec3( vec2( -0.10, -0.05 ), Zoom );\n    b = vec3( vec2( -0.12, -0.25 ), Zoom );\n    c = vec3( vec2( 0.11, -0.19 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .001 );\n    \n    return d;\n}\n\nfloat H( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n\n    \n    a = vec3( vec2( -0.07, 0.13 ), Zoom );\n    b = vec3( vec2( -0.07, -0.23 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .03\n    );\n    \n    a = vec3( vec2( -0.05, -0.05 ), Zoom );\n    b = vec3( vec2( 0.07, 0.05 ), Zoom );\n    c = vec3( vec2( 0.10, -0.1 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .02 );\n    \n    a = vec3( vec2( 0.101, -0.154 ), Zoom );\n    b = vec3( vec2(0.102, -0.23 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .025\n    );\n    \n    \n    return d;\n}\n\nfloat A( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b;\n    \n    a = vec3( vec2( -.1, -.25 ), Zoom );\n    b = vec3( vec2( .05, .15 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .0\n    );\n    \n    a = vec3( vec2( .2, -.25 ), Zoom );\n    b = vec3( vec2( .05, .15 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .0\n    );\n    \n    a = vec3( vec2( .0, -.15 ), Zoom );\n    b = vec3( vec2( .12, -.15 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .02\n    );\n    \n    return d;\n}\n\nfloat R( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n    \n    a = vec3( vec2( -0.07, 0.13 ), Zoom );\n    b = vec3( vec2( -0.07, -0.23 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .03\n    );\n    \n    a = vec3( vec2( -0.04, 0.00 ), Zoom );\n    b = vec3( vec2( 0.08, 0.12 ), Zoom );\n    c = vec3( vec2( 0.15, 0.04 ) , Zoom );\n\t\t\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .02 );\n    \n    return d;\n}\n\nfloat Tt( vec3 p ){\n    float d = .1;\n    \n    vec3 a, b, c, bz;\n\n\n    a = vec3( vec2( 0.07, 0.12 ), Zoom );\n    b = vec3( vec2(0.05, -0.15 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .0\n    );\n    \n    a = vec3( vec2( 0.17, 0.03 ), Zoom );\n    b = vec3( vec2( -0.05, 0.015 ), Zoom );\n    \n    d = smin(\n        d,\n        sdCapsule( p, a, b, .05 ),\n        .01\n    );\n    \n    a = vec3( vec2( 0.055, -0.2 ), Zoom );\n    b = vec3( vec2( 0.056, -0.27 ), Zoom );\n    c = vec3( vec2( 0.20, -0.21 ) , Zoom );\n    \n    bz = sdBezierExtrude(p, a, b, c).xyz;\n    \n    d = smin( d, sdTorus(bz, vec2( .0, .05 ) ), .02 );\n    \n    return d;\n}\n\n\nfloat slogan(vec3 p)\n{\n    \n    float d = .1;\n    \n    p.x += 1.25;\n    \n    // p += texture( iChannel0, abs( p.xy ) ).rgb * .02;\n    \n    d = min( d, B( p ) );\n    \n    p.x -= .3;\n    d = min( d, E( p ) );\n    \n    p.x -= .35;\n    d = min( d, N( p ) );\n    \n    p.x -= .35;\n    d = min( d, C( p ) );\n\n    p.x -= .35;\n    d = min( d, H( p ) );\n    \n    p.x -= .35;\n    d = min( d, A( p ) );\n    \n    p.x -= .43;\n    d = min( d, R( p ) );\n    \n    p.x -= .35;\n    d = min( d, Tt( p ) );\n    \n    return d;\n}\n\nfloat df( vec3 p ){\n    // return slogan( p );\n    return smin(\n        max( p.z - .94, -slogan( p ) ),\n        slogan( p ),\n        .2\n    );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(1, -1) * .5773;\n  return normalize(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nfloat S( vec3 p, vec3 ca, vec3 r, float q ){\n    return z( pow( dot( l( p ), normalize( normalize( ca ) - r ) ), q ) );\n}\n\nvoid mainImage( out vec4 U, in vec2 V )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 u = ( V * 2. - I.xy ) / I.y;\n    \n    vec3 c = vec3( 0.17, 0.78, 0.98 ), p, r = vec3( 0., 0., -1. ), o = vec3( u, 1. );\n    float t, d, i;\n    for( ; i < 5.; i++ )\n        p = o + r * t,\n        p.y += .3,\n        p.zy *= rot( PI * .15 ),\n        p.yx *= rot( PI * .02 ),\n        p.y += .2,\n        p.xy *= rot( cos( iTime * .2 ) * .05 ),\n        p.y -= .2,\n        d = df( p ),\n        t += d;\n    \n    c += clamp( 1. - z( slogan(p) * 5. ), .6, 1. ) * .1;\n    \n    if( d < 1e-3 ){\n    \n        vec3 n = l( p );\n        c += S( n, vec3( 0., 1., 0. ), o, 5. ) * .6 * z(dot(n, vec3(.4, 1., -.5)) );\n        c += dot( n, vec3(0.0, 1.0, 0.0)) * .1;\n        c += max( \n            ( texture( iChannel0, reflect( n, o ) ).rgb * .15 ),\n            -slogan( p * .1 )\n        ) * ( ( u.y / 2. + .5 ) );\n    \n    }\n    \n\n\n    // Output to screen\n    U = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}