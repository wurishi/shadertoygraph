{"ver":"0.1","info":{"id":"DtGSWK","date":"1687474427","viewed":44,"name":"primitive_fractal","username":"numpyhard","description":"Toying with primitive signed distance functions and recursion to make sort of fractals. Click around to change the appearance of the 'fractal'","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate(float angle){\n    return mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\n\nvec4 recur(vec2 fragCoord){\n    \n    float theta = 2.*sin(.8*iTime);\n    vec3 mult = vec3(-0.02,.02,.01);\n    vec3 color = vec3(1.,0.,0.);\n    \n    vec2 scaledMouse = .05*vec2((iMouse.x/iResolution.y)-.5, (iMouse.y/iResolution.y)-.5);\n    \n    for(int i=0; i<100; i++){\n        float sDis = length(max(vec2(0.), abs(fragCoord)-vec2(0.85,0.45)));\n        if(sDis != 0.){\n            return vec4((1.-sDis)*color,1.0); \n        }\n        \n        color += mult;\n        //fragCoord = rotate(theta)*1.1*fragCoord;\n        fragCoord = vec2(abs(fragCoord.x), abs(fragCoord.y));\n        fragCoord = rotate(theta+fragCoord.x*0.3-fragCoord.y*0.5)*1.05*(fragCoord+scaledMouse);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 center = 0.5*(iResolution.xy/iResolution.y);\n    vec2 coord = uv-center;\n\n    fragColor = recur(coord);\n}\n\n","name":"Image","description":"","type":"image"}]}