{"ver":"0.1","info":{"id":"sl2SRt","date":"1628433175","viewed":161,"name":"2d tree branching SDF ","username":"TLC123","description":"2d, sdf, distance, primitive, tree, branch.\n","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","tree","distance","primitive","branch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float PI=acos(-1.);\nfloat TAU=acos(-1.)*2.;\n\nfloat  smin( float a, float b,float k ){\n    float h =  clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 ) ;\n    return mix( b, a, h ) - k*h*(1.0-h);  }\n    \nfloat  smax( float a, float b,float k )\n{ return -smin(-a,-b,k);}\n\nfloat Tree(vec2 uv, int branches){\n// to polar\nvec2 p=vec2((atan(uv.x,uv.y)/TAU)*float(branches),length(uv));\n\n//f\nfloat Y,y,X;\n // the magic number hoha\n  Y= exp2( floor(p.y));\n  y=  .5+( pow(fract(p.y),.85 ))*.5+.5;\n  X=abs(p.x* Y);\n  p.x=        abs(fract(X-y*.5)-.5)*2.;\n  p.x= max(p.x,abs(fract(X+ y*.5)-.5)*2. );\n // \n  float branchwidth=.1/(.25+p.y);\n  float outerlimit =p.y-4.6;\n  float scaleAdjusted= 1.5*(((1.-p.x)/Y)*p.y);\n  return  smax(outerlimit, scaleAdjusted-branchwidth ,.2)* .5 ;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (sin(iTime*1.73)*3.+ 9.1)*(fragCoord/max(iResolution.y,iResolution.x) -vec2(.4)- .1*vec2(sin(iTime*.37),cos(iTime*.4)));\n//\n int branches=3;\n float d=Tree(uv,branches) ;\n   // coloring\n    vec3 col = vec3(1.0) - sign(d) * vec3(0.1, 0.4, 0.7);\n    col *= 1.0 - exp(-2.0 * abs(d));\n    col *= 0.8 + 0.2 * cos(128.0 * abs(d));\n    col = mix(col, vec3(1.0), 1.0 - smoothstep(0.0, 0.015, abs(d)));\n\n\n     fragColor = vec4(col, 1.0);\n \n}","name":"Image","description":"","type":"image"}]}