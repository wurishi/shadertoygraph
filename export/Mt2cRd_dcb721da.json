{"ver":"0.1","info":{"id":"Mt2cRd","date":"1509889885","viewed":508,"name":"texture tunnel","username":"unnick","description":"simple tunnel shader.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tau = 6.283;\n\n//no longer used because the same thing can be done with atan(y,x)\n//thanks to DrLuke for mentioning it\n/*\nfloat atan2(vec2 xy){\n    if(xy.x > 0.0){\n        return atan(xy.y/xy.x);\n    }else{\n        return tau/4.0*(xy.y>0.0?1.0:-1.0) - atan(xy.x/xy.y);\n    }\n    return 0.0;\n}\n*/\n\nvec2 c2p(vec2 xy){\n    //newer code:\n    //thanks to DrLuke and FabriceNeyret2 for mentioning length(xy) and atan(y, x)\n    return vec2(length(xy), atan(xy.y, xy.x)/tau+0.5);\n    \n    //old code:\n    //return vec2(sqrt(xy.x*xy.x+xy.y*xy.y), atan2(xy)/tau+0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mul = vec2(1.0, 6.0);  //the amount to multiply the final position\n    //kind of hard to explain\n    vec2 add = vec2(-iTime, sin(iTime)/6.0); //the amount to add to the final position\n    //first argument controls the scale and the second controls rotation\n    \n    //cartesian cords\n\tvec2 cpos = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x, iResolution.y) * 2.0;\n    \n    //polar cords\n    vec2 ppos = c2p(cpos);\n    \n    //position to be used to get a pixel of the texture\n    //note: the -srqt(1.0/ppos.x) was originally log(ppos.x)\n    //i changed it because a guy suggested to use that instead of the original log funcion\n    vec2 fpos = (vec2(-sqrt(1.0/ppos.x),ppos.y) + add) * mul;\n    \n    //take the mod 1 of both of those cords\n    //(not required for textures because they can be set to repeat automatically)\n    //fpos = mod(fpos, 1.0);\n    \n\tfragColor = texture(iChannel0, fpos);\n}","name":"Image","description":"","type":"image"}]}