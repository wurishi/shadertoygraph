{"ver":"0.1","info":{"id":"slXfDs","date":"1651651240","viewed":162,"name":"My try at the Mandelbrot set","username":"JustBoredYo","description":"Never got it to work, turns out I always had a logic problem!","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractalmandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float zoom = 1.0;\n\nfloat scaleX = 4.0;\nfloat scaleY = 2.5;\n\nfloat itterations = 2500.;\n\nvec2 center = vec2(0., 0.);\n\nfloat zVal = 0.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    scaleX *= zoom;\n    scaleY *= zoom;\n    \n    // Normalized pixel coordinates\n    float a = (fragCoord.x/iResolution.x)*scaleX-(scaleX/2.)+center.x;\n    float b = (fragCoord.y/iResolution.y)*scaleY-(scaleY/2.)+center.y;\n    \n    float ca = a;\n    float cb = b;\n    \n    vec3 col = vec3(1, 1, 1);\n    float i = 0.;\n    \n    for(i = 0.; i < itterations; i++)\n    {\n        \n        \n        float aa = a*a-b*b;\n        float bb = 2.*a*b;\n        \n        a = aa+ca;\n        b = bb+cb;\n        \n        if(a+b > 4.)\n            break;\n        \n    }\n    \n    if(i == itterations)\n        col = vec3(0, 0, 0);\n    else\n    {\n        float brightness = sqrt(i/itterations);\n        col = vec3(brightness);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}