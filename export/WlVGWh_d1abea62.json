{"ver":"0.1","info":{"id":"WlVGWh","date":"1578809710","viewed":104,"name":"BigWings Smiley Tutorial","username":"sbrown2","description":"following big wings tutorials to learn shader karate","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["smiley","still"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define s(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t){\n\treturn sat((t-a)/(b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n\n\treturn sat(((t-a)/(b-a)))*(d-c)+c;\n}\n\nvec2 within(vec2 uv, vec4 rect){\n\t//remaps 2d uv coordinate to be normalized within rect\n    return(uv-rect.xy)/(rect.zw-rect.xy);\n}\nvec4 Brow(vec2 uv){\n\tuv-=.5;\n    vec4 background = vec4(0.);\n    \n    float d1 = length(uv);\n    float s1 = s(.45,.35,d1);\n    float d2 = length(uv-vec2(.1,-.2)*.7);\n    float s2 = s(.5,.4,d2);\n    \n    float browMask = sat(s1-s2);\n    float colMask = remap01(.7,.8,uv.y)*.75;\n    colMask+= s(.6,.9,browMask);\n    \n   // background = browCol;\n    return background;\n}\nvec4 Eye(vec2 uv){\n    uv-=.5;\n    \n    vec4 irisColor = vec4(.3,.5,1.,1.);\n\tvec4 background = vec4(1.);\n    //remaps from 0 to 1 bound box to -.5 to .5\n    float d = length(uv);\n    background *= 1.-s(.42,.5,d)*.5*sat(-uv.y-uv.x);\n    background = mix(background,irisColor,s(.1,.7,d)*.75);\n    background.rgb = mix(background.rgb,vec3(0.),s(.3,.28,d));\n    \n    irisColor.rgb*=1.+s(.3,.05,d);\n\n    background.rgb = mix(background.rgb,irisColor.rgb,s(.28,.25,d));\n    background.rgb = mix(background.rgb,vec3(0.),s(.16,.14,d));\n    \n    float highlight = s(.1,.09,length(uv-vec2(-.15,.15)));\n    background.rgb = mix(background.rgb,vec3(1.),highlight);\n    highlight += s(.07,.05,length(uv-vec2(.08,-.12)));\n    background.rgb = mix(background.rgb,vec3(1.),highlight);\n\n    background.a = s(.5,.48,d);\n    \n    \n    \n    return background;\n}\nvec4 Mouth(vec2 uv){\n\tuv-=.5;\n    vec4 background = vec4(.5,.18,.05,1.);\n    \n    uv.y*=1.5;\n    uv.y -= 3.*pow(uv.x,2.);\n    float d = length(uv);\n    background.a = s(.5,.48,d);\n    \n    float td = length(uv-vec2(.0,.6));\n    vec3 toothCol = vec3(1.)*s(.6,.35,d);\n    \n    background.rgb = mix(background.rgb,toothCol,s(.4,.37,td));\n    \n    td = length(uv+vec2(0.,.5));\n    background.rgb = mix(background.rgb,vec3(1.,.5,.5),s(.35,.25,td));\n    return background;\n}\nvec4 Head(vec2 uv){\n\tvec4 background = vec4(.9,.65,.1,1.\t); \n    \n    //0,0 is in center, head fills canvas thus r = .5;\n    float d = length(uv);\n    \n    //less than b = 1, more than a = 0; in between interpolates\n    background.a = s(.50,.49,d);\n    vec3 edgeColor = vec3(.6,.3,.1);\n    \n    //add shadow\n    float edgeShade = remap01(.35,.5,d);\n    edgeShade*=edgeShade;\n    background.rgb *= 1.-edgeShade*.5;\n    background.rgb = mix(background.rgb,edgeColor,vec3(edgeShade));\n    \n    //add highlilght\n    float highlight = s(.41,.405,d);\n    highlight*=remap(-.1,.41,.0,.74,uv.y);\n    highlight*=1.-s(.19,.18,length(uv-vec2(.21,.08)));\n    background.rgb = mix(background.rgb,vec3(1.),highlight);\n    \n    d = length(uv-vec2(.25,-.2));\n    float cheek = s(.2,.01,d)*.4;\n    \n    background.rgb = mix(background.rgb,vec3(1.,.1,.1),cheek);\n    \n    \n    return background;\n\n}\n\nvec4 Smiley(vec2 uv){\n\tvec4 background = vec4(0.);\n\tuv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye  = Eye(within(uv,vec4(.03,-.1,.37,.25))); \n    vec4 mouth = Mouth(within(uv,vec4(-.3,-.4,.3,-.1)));\n    //vec4 brow = Brown(within(uv,vec4(.03,.2,.37,.35)));\n    \n    background = mix(background, head, head.a);\n    background = mix(background,  eye,  eye.a);\n    background = mix(background, mouth, mouth.a);\n   // background = mix(background, brow, brow.a);\n    \n    return background;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n\t\n    uv-=.5; \n    uv.x*=iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}