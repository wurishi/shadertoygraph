{"ver":"0.1","info":{"id":"ltKBDD","date":"1542650675","viewed":164,"name":"Cool shader","username":"paulo69","description":"Because I didn't have anything else to do :D\nPS : it is inspired by a tutorial from The Art of Code !\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["procedural","flower","shader","polarcoordinates","equation","maths"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\nvoid mainImage( out vec4 col, in vec2 p )\n{\n    vec2 uv = (p.xy-0.5*iResolution.xy)/iResolution.y;\n    vec2 coord = uv;\n    vec2 cp = vec2 (atan(uv.x,uv.y),length(uv));\n    uv = vec2(cp.x/(2.0*PI)+0.5+iTime*0.1+cp.y*cos(iTime)*0.15,cp.y);\n    col = vec4(abs(vec4(smoothstep(0.45,0.45+sin(iTime),length(coord)))*vec4(1.0,2.0,0.9,1.0))+smoothstep(0.0,max(-iTime+5.0,0.21),min(fract(uv.x*8.0),fract(1.0-uv.x*8.0))*0.5+0.2-uv.y)*vec4(5.0,normalize(length(cp*PI))*.8,normalize(length(cp*5.0*PI))*0.4,1.0));\n}","name":"Image","description":"","type":"image"}]}