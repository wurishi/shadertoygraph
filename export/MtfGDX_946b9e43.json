{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S.Guillitte\n\n\nint windows = 0;\nvec2 m = vec2(.7,.8);\n\nconst mat2 m2 = mat2(.8,.6,-.6,.8);\n\n\nfloat noise(in vec2 p){\n\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 3; i++ ) \n\t{\t\t\n        p=m2*p*f+.6;     \n        f*=1.2;\n        res+=sin(p.x+sin(2.*p.y));\n\t}        \t\n\treturn res/3.;\n}\n\nfloat noise1(in vec2 p){\n\n    vec2 res=vec2(0.);\n    float f=1.;\n\tfor( int i=0; i< 2; i++ ) \n\t{\t\t\n        p=m2*p*f+.6;     \n        f*=1.2;\n        res+=sin(p+sin(2.*p.yx));\n\t}        \t\n\treturn .35*dot(res,res)-1.;\n}\n\nfloat fbm(in vec2 p){\n\t\n    float res=0.;\n    float f=1.;\n\tfor( int i=0; i< 7; i++ ) \n\t{\n        f*=2.;\n        res+=noise(f*p)/f;\n\t}        \t\n\treturn res;\n}\n\nfloat fbmabs( vec2 p ) {\n\t\n\tfloat f=1.;   \n\tfloat r = 0.0;\t\n    for(int i = 0;i<8;i++){\t\n\t\tr += abs(noise( p*f ))/f;       \n\t    f *=2.;\n        p-=vec2(-.01,.08)*r;\n\t}\n\treturn r;\n}\n\nfloat map(vec2 p){\n\n    //return noise(p*10.);\n    //return 2.*abs( noise(p*10.));\n\t//return fbm(p)+1.;\n    return 1.7*fbmabs(p);\n}\n\nvec3 nor(in vec2 p)\n{\n\tconst vec2 e = vec2(0.002, 0.0);\n\treturn normalize(vec3(\n\t\tmap(p + e.xy) - map(p - e.xy),\n\t\tmap(p + e.yx) - map(p - e.yx),\n\t\t-.2));\n}\n\n\t\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n\tvec2 p = 2.*fragCoord.xy /iResolution.xy-1.;\n    \n\tif(p.y>0.){\n    \tif(p.x>0.)windows =1;\n    \telse    windows =0;}\n    else{\n    \tif(p.x>0.)windows =3;\n        else windows =2;}\n    \n    \n    p += .5*iTime;\n    \n    if(iMouse.z>0.)m = iMouse.xy/iResolution.xy;\n    \n    \n\tfloat r;\n    vec3 light = normalize(vec3(4., 2., -1.));\n\n    r = max(dot(nor(p), light),0.1);\n    float k=map(p);\n    //fragColor = clamp(vec4(r, r, r, 1.0),0.,1.);\n\tfragColor = clamp(vec4(r*k*k, r*k, r*.8, 1.0),0.,1.);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MtfGDX","date":"1425594342","viewed":556,"name":"Cheap sine noise","username":"guil","description":"Cheap noise using sine waves","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","sine"],"hasliked":0,"parentid":"","parentname":""}}