{"ver":"0.1","info":{"id":"XljfR1","date":"1514609873","viewed":120,"name":"Juliax","username":"saidwho12","description":"just a simple julia set shader.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITERATIONS 64\n\n/*\n\tclick on the image and move mouse to change the coordinate \n\tof the fractal on the complex plane.\n*/\n\n#define SPEED .2\n#define TIME SPEED*iTime\n#define ZOOM 1.\n\n#define STATIC false\n#define MOUSE true\n\n#define CR -0.4\n#define CI 0.6\n\nint julia (vec2 uv, vec2 c, float n, int maxIter)\n{   \n    int i = 0;\n    float a = uv.x, b = uv.y;\n    while(i<maxIter && a*a+b*b<4.)\n    {   \n        float tmpa = pow((a*a+b*b),(n/2.))*cos(n*atan(b, a)) + c.x;\n        b = pow((a*a+b*b),(n/2.))*sin(n*atan(b, a)) + c.y;\n        a = tmpa;\n        i++;\n    }\n    return i;\n}\n\nvec2 c;\nvec3 color = vec3(.55, 0.93, 1.);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 ts = 1./iResolution.xy;\n    float aspect = iResolution.y / iResolution.x;\n    \n    vec2 point = (uv-.5)*2.;\n    point = vec2(point.x, point.y*aspect);\n    \n    if (STATIC)\n    {\n    \tc = vec2(CR, CI);\n    }\n    else\n    {\n    \tif (MOUSE)\n        {\n        \tc = (iMouse.xy*ts -.5) *2.;\n        }\n        else\n        {\n        \tc = vec2(sin(TIME), cos(TIME));\n        }   \n    }\n   \t\n    int i = julia(point*1./(ZOOM*0.5), c, 2., MAX_ITERATIONS);\n    vec3 lum = vec3(((float(i)/float(MAX_ITERATIONS))*color + 0.15));\n\tfragColor = vec4(lum*color, 1.);\n}","name":"Image","description":"","type":"image"}]}