{"ver":"0.1","info":{"id":"Mclcz8","date":"1720798380","viewed":273,"name":"Ice Breaking","username":"leon","description":"the original intention of [url=https://www.shadertoy.com/view/XcsyRH]Mecharganic[url]","likes":36,"published":3,"flags":32,"usePreview":0,"tags":["abstract","glass","ice","break"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Ice Breaking\n// 2024/07/12 Leon Denise\n// the original intention of Mecharganic: https://www.shadertoy.com/view/XcsyRH\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // coordinates distance\n    #define T(u) texture(iChannel0, uv+u/iResolution.xy).z\n    float z = T(0.);\n    \n    float edge = 0.;\n    float ao = 0.;\n    \n    const float count = 9.;\n    for (float a = 0.; a < count; ++a)\n    {\n        // blue noise scroll https://www.shadertoy.com/view/tlySzR\n        ivec2 pp = ivec2(fragCoord);\n        pp = (pp+(int(a))*ivec2(113,127)) & 1023;\n        vec3 blu = texelFetch(iChannel1,pp,0).xyz;\n        \n        // edge detection\n        float f = a/count;\n        float aa = 6.283*f;\n        vec2 xy = vec2(cos(aa),sin(aa));\n        edge += abs(z-T(xy));\n        \n        // sort of ambient occlusion\n        float r = (1.+blu.z) * 4.;\n        xy = normalize(vec2(blu.xy-.5))*r;\n        ao += abs(z-T(xy))/r;\n    }\n    \n    // I'm using 1200x675 frame so this is to keep it look similar at different resolution\n    float thin = .2*(675./iResolution.y); \n    vec3 color = vec3(smoothstep(thin,.01,edge)*(1.-ao));\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect = vec2(iResolution.x/iResolution.y,1);\n    vec4 frame = texture(iChannel0, uv);\n    \n    // timeline\n    float tick = mod(float(iFrame), 200.);\n    \n    // init\n    if (tick < 1.)\n    {\n        vec2 p = (2.*fragCoord-iResolution.xy)/iResolution.y;\n        frame = vec4(p, max(abs(p.x),abs(p.y)), 0);\n    }\n    // iterate\n    else if (tick < 20.)\n    {\n        // previous coordinates\n        vec2 p = frame.xy;\n        \n        // seed\n        vec4 rng = hash41(tick+iDate.w+iDate.z+iDate.y+iDate.x);\n        \n        // rotate\n        p.xy *= rot(rng.z*6.283);\n        \n        // translate\n        p.xy += (rng.xy-.5)*5./tick*max(0.1,rng.w);\n        \n        // keep result if closer\n        float dist = max(abs(p.x),abs(p.y));\n        if (dist < frame.z)\n        {\n            frame.xy = p.xy;\n            frame.z = dist;\n            frame.w = tick;\n        }\n    }\n    \n    fragColor = frame;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"\nmat2 rot (float a) { float c=cos(a),s=sin(a);return mat2(c,-s,s,c); }\n\n// Dave Hoskins https://www.shadertoy.com/view/4djSRW\nvec4 hash41(float p)\n{\n\tvec4 p4 = fract(vec4(p) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}","name":"Common","description":"","type":"common"}]}