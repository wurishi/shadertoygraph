{"ver":"0.1","info":{"id":"llB3W3","date":"1500429101","viewed":130,"name":"aadeon - Voronoi Diagram ","username":"aadeon","description":"asdfas","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define NUM_POINTS 11\n#define PI 3.14159\n\nstruct point\n{\n \tvec2 pos;\n    vec3 color;\n};\n\npoint newPoint(vec2 pos, vec3 color)\n{\n    point p;\n    p.pos = pos;\n    p.color = color;\n    return p;\n}\n\n//euclidean distance\nfloat eDist(vec2 p, vec2 q)\n{\n \treturn length(p - q);   \n}\n\n//manhattan distance\nfloat mDist(vec2 p, vec2 q)\n{\n \treturn abs(p.x-q.x)+abs(p.y-q.y);   \n}\n\n//chebyshev distance\nfloat chDist(vec2 p, vec2 q)\n{\n  \treturn max(abs(p.x-q.x), abs(p.y-q.y));   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float zoom = 50.0+iMouse.y/2.0;\n    vec2 uv = (((fragCoord.xy / iResolution.xy)*2.0-1.0)*(vec2(1.0, iResolution.y/iResolution.x))*zoom/iResolution.y/.1);\n    \n    \n    float t = iTime / 2.0;\n    \n    point points[NUM_POINTS];\n    points[0] = newPoint(vec2( 0.5+tan(.1*t),  0.0+.29*sin(2.0*t)), vec3(1.0, 0.0, 0.0));\n    points[1] = newPoint(vec2( 0.3+sin(t)+.1*cos(5.0*t),  0.0), vec3(0.0, 1.0, 0.0));\n    points[2] = newPoint(vec2( 0.5+.1*sin(7.0*t), -0.5+.1*cos(7.0*t)), vec3(0.0, 0.0, 1.0));\n    points[3] = newPoint(vec2( 0.0-tan(.44*t), 0.3), vec3(1.0, 1.0, 0.0));\n    points[4] = newPoint(vec2( 0.1+sin(t),  0.0+.05*sin(15.0*t)), vec3(0.0, 1.0, 1.0));\n    points[5] = newPoint(vec2( 0.0, -0.505), vec3(1.0, 0.0, 1.0));\n    points[6] = newPoint(vec2(-0.5+tan(t),  0.5), vec3(1.0, 0.5, 0.0));\n    points[7] = newPoint(vec2(-0.5+.3*cos(.33*t),  0.1+.18*cos(.23*t)), vec3(0.0, 0.6, 0.4));\n    points[8] = newPoint(vec2(-0.5+.002*t, -0.5+.002*t), vec3(0.5, 0.3, 1.0));\n    points[9] = newPoint(vec2( pow(sin(t), 2.0), .1/cos(.42*t) ), vec3(.65, 0.6, 0.55));\n    points[10]= newPoint(vec2(sin(t), cos(t)), vec3(1.0, 1.0, 1.0));\n    \n    point closest = points[0];\n    float distClosest;\n    \n    for(int i=0; i<=NUM_POINTS; i++)\n    {\n        float distThis = eDist(uv, points[i].pos);\n        distClosest = eDist(uv, closest.pos);\n        \n\t\tif(distThis < distClosest)\n        {\n            closest = points[i];\n        }\n    }\n    \n    if (iMouse.x <iResolution.x/2.0)\n    {\n    \n        if (distClosest < .01)\n        {\n            fragColor = vec4(0.0, 0.0, 0.0, 0.0);   \n        }\n        else\n        {\n            fragColor = vec4(closest.color, 0.0);\n        }\n    \t\n    }\n    else\n    {\n        fragColor = (vec4(0.0, 0.0, 0.0, 0.0)+distClosest* vec4(1.0, 1.0, 1.0, 1.0));\n        \n        \n    }\n    \n}","name":"Image","description":"","type":"image"}]}