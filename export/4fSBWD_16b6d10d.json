{"ver":"0.1","info":{"id":"4fSBWD","date":"1724903995","viewed":35,"name":"Infinite Saturn's","username":"DecCatBurner","description":"Infinite Saturn's","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdTorus( vec3 p, vec2 t )\n{\n  vec2 q = vec2(length(p.xz)-t.x,p.y);\n  return length(q)-t.y;\n}\n\nfloat sdSphere(vec3 p, float radius){\n    return length(p) - radius;\n}\n\n\nfloat opSmoothUnion( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat map(vec3 p) {\n    float a = sdSphere(fract(p/4.) - vec3(0.5, 0.5, 0.5), .15);\n    float b = sdTorus(fract(p/4.) - vec3(0.5), vec2(0.325, 0.005));\n    return opSmoothUnion(a, b, 0.25);\n}\n\nfloat rayMarch(vec3 p, vec3 cam){\n    float d = 0., t = 0.;\n    for (int i = 0; i<100; i++){\n        d = map(p * t + cam);\n        t += d;\n        if (t > 1000. || d < 0.001) {\n            return t;\n        }\n    }\n    return t;\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n\n    vec3 cam1 = vec3(0.,sin(iTime*2.)*2. - sin(iTime*4.)*1.5,iTime);\n    vec3 cam2 = vec3(3., 4., 2.);\n    \n    vec3 p = normalize(vec3(uv, 1.));\n    float d = rayMarch(p, cam1);\n    \n    float val = d;\n    \n    \n    vec3 col = vec3(val * 0.02);\n\n    // Output to screen\n    fragColor = vec4(pal( d*0.2, vec3(0.,0.,0.5),vec3(0.25,0.75,0.5),vec3(1.0,1.0,1.0),vec3(0.5,0.2,0.3)), 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}