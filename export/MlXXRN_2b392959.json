{"ver":"0.1","info":{"id":"MlXXRN","date":"1434827288","viewed":552,"name":"Bumpy Background","username":"tholzer","description":"Animate pseudo 3d bump background generated with a 2d texture.\nPress mouse button to see difference. ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["background","bump","pseudo3d","parallaxocclusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n//---------------------------------------------------------\n// Shader:   BumpyBackground.glsl    2015-06-20, 2015-08-17\n//           show pseudo 3d bump background with 2d texture\n//           https://www.shadertoy.com/view/MlXXRN\n//           v2.0 added two texture usage\n// original: https://www.shadertoy.com/view/llXSR8\n// Tags:     pseudo 3d, bump, background, parallax occlusion\n//---------------------------------------------------------\n\n#define ANIMATE_TEXTURE true\n#define USE_2_TEXTURES  true\n\n//---------------------------------------------------------\n// get pseudo 3d bump background color\n//---------------------------------------------------------\nvec4 BumpyBackground (vec2 pos, float time)\n{\n  #define LINEAR_STEPS 20.0\n  #define DISTANCE 0.16\n  #define FEATURES 0.5\n\n  vec4 color = vec4(0.0);\n  vec4 pixel1 = vec4(0.0);\n  vec2 dir = vec2(pos - vec2(0.5, 0.5)) * (DISTANCE / LINEAR_STEPS);\n  if (ANIMATE_TEXTURE)\n    pos += time * vec2(0.1, 5e-5* sin(time));\n    \n  for (float i = 0.0; i < LINEAR_STEPS; i++) \n  {\n    pixel1 = texture(iChannel0, pos - i * dir);\n      \n    if (USE_2_TEXTURES)\n      pixel1 = 0.5* (pixel1+texture(iChannel1, pos - i * dir));\n      \n    if (pow(length(pixel1.rgb) / 1.4, 0.20) * (1.0 - FEATURES)\n       +pow(length(texture(iChannel0, (pos - i * dir) * 2.0).rgb) / 1.4, 0.90) * FEATURES\n       > i / LINEAR_STEPS) \n    //color = pixel1 * i / LINEAR_STEPS;\n    color += 0.16 * pixel1 * i / LINEAR_STEPS;\n  }\n  return color;\n}\n//---------------------------------------------------------\n// get simple background color\n//---------------------------------------------------------\nvec4 SimpleBackground (vec2 pos, float time)\n{\n  vec2 dir = vec2(pos - vec2(0.5, 0.5)) * (DISTANCE / LINEAR_STEPS);\n  if (ANIMATE_TEXTURE)\n    pos += time * vec2(0.1, 5e-5* sin(time));\n    \n  vec4 color = texture(iChannel0, pos - dir);\n  if (USE_2_TEXTURES)\n    color = 0.5 * (color + texture(iChannel1, pos - dir));\n  return color;\n}\n//---------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    if (iMouse.z > 0.0)\n         fragColor = SimpleBackground (uv, iTime);\n    else fragColor = BumpyBackground (uv, iTime);    \n}\n","name":"","description":"","type":"image"}]}