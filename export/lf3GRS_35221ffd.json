{"ver":"0.1","info":{"id":"lf3GRS","date":"1711882266","viewed":36,"name":"MutantIntroV1","username":"berke","description":"I was experimenting with high energy fields and I must have accidentally opened what I assume was a wormhole to 1993, from which a floppy containing this rotozooming intro fell onto the floor.  I converted it to modern a shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bitmap","stars","rotozoom","copperbars","saucer","sinescroller"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.14159265358979323846\n\nfloat f(float t) {\n    t /= 0.2;\n    return exp(-t*t);\n}\n\nvec3 rainbow(float t) {\n    return vec3(f(t-0.3),f(t-0.5),f(t-0.7));\n}\n\n#define NS 8.0\n\nfloat ayy_pat(float theta,float gamma,vec2 p)\n{\n    vec2 u = vec2(cos(theta),sin(theta));\n    vec2 v = vec2(-u.y,u.x);\n    p = gamma*(p.x*u + p.y*v);\n    vec2 q = floor(p / NS) + vec2(AYY_NX,AYY_NY)/2.0;\n    int i = int(q.y) % AYY_NY;\n    int j = int(q.x) % AYY_NX;\n    return ayy(i,j);\n}\n\nbool star_test(vec2 p) {\n  return abs(p.x) + abs(p.y) < 1.0;\n}\n\nfloat stars0(vec2 fc,float t,float tau,uint nstar) {\n    uint k = uint(floor(t / tau));\n    float phi = mod(t,tau)/tau;\n    for (uint l = 0U; l < nstar; l ++) {\n       float x0 = 2.0*(rnd(k,l,uint(fc.y)) + (2.0*phi - 1.0)) * iResolution.x;\n       float y0 = fc.y;\n       vec2 q = vec2(x0,y0);\n       if (star_test(fc - q)) {\n           return 1.0;\n       }\n    }\n    return 0.0;\n}\n\nfloat stars(vec2 fc,float t,float tau,uint nstar) {\n   return stars0(fc,t,tau,nstar) + stars0(fc,t + tau/2.0,tau,nstar);\n}\n\nvec4 copper_bar(vec2 fc,vec3 c,float t,vec3 iResolution0) {\n  float y0 = iResolution0.y*(0.2 + 0.1*cos(3.0*t));\n  float w = 10.0;\n  float d = (fc.y - y0)/w;\n  if (abs(d) < 1.0) {\n    return vec4((1.0-abs(d))*c,1);\n  } else {\n    return vec4(0,0,0,0);\n  }\n}\n\nvec3 mix_col(vec3 c1,vec4 c2) {\n  return mix(c1,c2.rgb,c2.a);\n}\n\nvec4 logo(vec2 p)\n{\n    const float scale = 2.0;\n    vec2 q = floor(p / scale) + vec2(MUTANT_NX,MUTANT_NY)/2.0;\n    int i = int(q.y);\n    int j = int(q.x);\n    uint c = mutant(i,j);\n    return vec4(MUTANT_PALETTE[c]);\n}\n\nfloat glyph(vec2 fc,int c,vec2 p0,float sz) {\n    vec2 p = floor((fc - p0)/sz);\n    int i = int(p.y);\n    int j = int(p.x);\n    if (0 <= i && i < 8 && 0 <= j && j < 8) {\n        return font_glyph(c,i,j) ? 1.0:0.0;\n    } else {\n        return 0.0;\n    }\n}\n\nint message(int k) {\n  return int(msg_char(k % MSG_LEN));\n}\n\nvec4 scroller(vec2 fc,vec3 iResolution0) {\n    vec3 col = vec3(0,0,0);\n    float f = 0.0;\n    const float sz = 8.0;\n    const float cps = 1.0;\n    int k0 = int(floor(iTime*cps));\n    float phi = mod(iTime,cps)/cps;\n    const int ncol = 20;\n    for (int j = 0; j < ncol; j ++) {\n      int c = message(k0 + j);\n      if (c != 0) {\n          c --;\n          float dy = 50.0*cos(iTime + fc.x/100.0) + iResolution0.y*exp(-iTime/3.0);\n          f += glyph(\n              fc + vec2(0.0,dy),\n              c,\n              iResolution0.xy*vec2(0.0,0.075) + (float(j) - phi)*vec2(8.0*sz,0.0),\n              sz);\n      }\n    }\n    \n    return vec4(rainbow((cos(fc.y/40.0)+1.0)/2.0),f);\n}\n\n#define MAX_ITER 400\n#define MAX_D 20.0\n#define EPS 1e-3\n#define MAX_HEIGHT 1.0\n#define B 2.0\n\nfloat g(vec2 x,float t,float k,float w) {\n  x *= 2.0;\n  float r = length(x);\n  float a1 = 200.0;\n  float a2 = 50.0;\n  return 2.0*(1.0+cos(r/a1))/2.0 * (0.5+0.5*(1.0+cos(r/a2))/2.0);\n}\n\nfloat f(vec2 x,float t) {\n  return g(x,iTime,0.1,5.0);\n}\n\nconst float focal = 80.0;\nconst float delta = 0.025;\n\nvec4 vehicle(vec2 fragCoord,vec3 iResolution0) {\n  vec3 vv = normalize(vec3(delta*(fragCoord - iResolution0.xy/2.0),focal));\n  float theta = 0.25*(1.0+cos(0.5*iTime));\n  float phi = -0.5-0.35*(1.0+cos(1.5*iTime));\n  if (iMouse.z > 0.0) {\n    theta = -2.0*M_PI * iMouse.x / iResolution.x;\n    phi = 2.0*M_PI * iMouse.y / iResolution.y;\n  }\n  mat3 M1 = transpose(mat3(cos(theta),0.0,sin(theta),\n                    0,1,0,\n                    -sin(theta),0.0,cos(theta)));\n  mat3 M2 = transpose(mat3(1.0,0.0,0.0,\n                           0.0,cos(phi),sin(phi),\n                           0.0,-sin(phi),cos(phi)));\n  mat3 M = M1*M2;\n  vec3 u = M*vec3(1,0,0);\n  vec3 v = M*vec3(0,1,0);\n  vec3 w = M*vec3(0,0,1);\n  float c = 3.0;\n  vec3 p0 = vec3(0,0,-(15.0));\n  vec4 col = vec4(0,0,0,0);\n  float lambda = 1.0;\n  bool cont = true;\n  for (int i = 0; cont && i < MAX_ITER; i ++) {\n    if (abs(lambda) > MAX_D) {\n        break;\n    }\n    vec3 p = lambda*vv;\n    vec2 x = vec2(dot(p - p0,u),dot(p - p0,v));\n    float z = 0.2*f(250.0*x,iTime);\n    float s = dot(p - p0,w) - z;\n    if (s < EPS) {\n        if (length(x) < 1.0) {\n            col = vec4( 5.0*z*vec3(0.5,0.5,0.6) + vec3(0.2,0.2,0.2), 1.0);\n        }\n        break;\n    }\n    if (abs(s) < MAX_HEIGHT) {\n      lambda -= s/B;\n    } else {\n      lambda -= s;\n    }\n  }\n  return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 iResolution0 = vec3(1200,675,0);\n    vec2 fragCoord0 = iResolution0.x*fragCoord/iResolution.x;\n    \n    vec3 col = vec3(0,0,0);\n    vec2 p0 = fragCoord0 - iResolution0.xy/2.0;\n\n    float theta = 1.234*iTime;\n    float gamma = 3.0*(cos(iTime)+1.0)/2.0;\n    \n    float l = length(p0)/1000.0;\n    vec2 p = p0 / 1.0/(1.0+l*l);\n    float a1 = ayy_pat(1.2*iTime,gamma,p + 100.0*vec2(cos(iTime),sin(iTime)));\n    float a2 = ayy_pat(2.3*iTime,1.01*gamma,p + 150.0*vec2(cos(1.3*iTime),sin(1.3*iTime)));\n    float a3 = ayy_pat(3.4*iTime,1.02*gamma,p + 75.0*vec2(cos(0.5*iTime),sin(0.5*iTime)));\n    col = (a1*vec3(0.9,1.0,0.4) + a2*vec3(0.2,0.2,0.8) + a3*vec3(1.0,0.3,0.1))/3.0;\n    \n    col = mix_col(col,copper_bar(fragCoord0.xy,vec3(1,1,0),iTime,iResolution0));\n    col = mix_col(col,copper_bar(fragCoord0.xy,vec3(0,1,1),iTime + 1.0,iResolution0));\n    col = mix_col(col,copper_bar(fragCoord0.xy,vec3(1,0,1),iTime + 2.0,iResolution0));\n\n    float s = 0.25*stars(fragCoord0.xy,iTime,30.0,5U)\n              + 0.5*stars(fragCoord0.xy,iTime,20.0,3U)\n                + stars(fragCoord0.xy,iTime,10.0,1U);\n    col = mix_col(col,vec4(1,1,1,s));\n    \n    vec4 lcol = logo(0.75*(p0 - vec2(0,0.35)*iResolution0.xy));\n    lcol.a *= 1.0-exp(-iTime/10.0);\n    float uu = (mod(max(iTime - 5.0,0.0)/10.0,1.0) - 0.5)/0.02;\n    uu = exp(-uu*uu);\n    lcol.rgb += 2.0*uu*vec3(1,1,1);\n    \n    col = mix_col(col,\n        vehicle(\n            fragCoord0 - iResolution0.xy*vec2(-0.3 + (exp(-iTime/3.0)),-0.1),\n            iResolution0)\n        );\n    col = mix_col(col,scroller(fragCoord0,iResolution0));\n    col = mix_col(col,lcol);\n\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const int AYY_NX = 64;\nconst int AYY_NY = 64;\nconst uint AYY_DATA[512] = uint[512] (\n  0xeeeeeeeeU,0xeeefeeeeU,0xffeeeeeeU,0xeefeeeefU,0xeeeefeeeU,0xeeeeeeeeU,0xeeeeeeddU,0xdeddcdccU,\n  0xeeeeeeeeU,0xeefeefefU,0xffffeeeeU,0xeeeeefefU,0xefeefeeeU,0xeeeeeeeeU,0xeeeeddeeU,0xeedddddcU,\n  0xeeeeeeefU,0xeeeeeeeeU,0xeffeeeeeU,0xeefeefeeU,0xffeeeeeeU,0xeeeeeeeeU,0xeeeeeeeeU,0xdedddddcU,\n  0xeeffffeeU,0xeffefeefU,0xeeeeeeeeU,0xedddddddU,0xeeeeeeeeU,0xeeeeeeeeU,0xeeeeeeeeU,0xdeedddddU,\n  0xfeefffefU,0xeefeeeffU,0xfefeedddU,0xdcccddddU,0xcccdeeeeU,0xeeeeeeeeU,0xeeeeeeeeU,0xdeededddU,\n  0xffeffeffU,0xfffffefeU,0xeeedddddU,0xdddccdccU,0xcbbbcdeeU,0xeeefeeeeU,0xfeeeffeeU,0xeeeeedddU,\n  0xffeeefffU,0xfffffeeeU,0xedddcdcdU,0xdcdccdccU,0xcbcbbbcdU,0xeeeeeeeeU,0xeeeeeeeeU,0xeeeeedddU,\n  0xffffffffU,0xfffffffeU,0xddcccdcdU,0xdddcdcccU,0xcccccbccU,0xcdeeefeeU,0xeeefeeeeU,0xeeeeeeeeU,\n  0xffffffffU,0xffffffedU,0xddbcdcddU,0xddddddddU,0xdddddcccU,0xccdeeeeeU,0xeeefeefeU,0xeeeeeeedU,\n  0xffffffffU,0xfffffeddU,0xddccccddU,0xddddddddU,0xddddddccU,0xcdcddeeeU,0xeeeeeeeeU,0xeeeeeeedU,\n  0xffffffffU,0xffffedddU,0xccdddcddU,0xddddddddU,0xdddddeddU,0xddddccdeU,0xeeeeeeefU,0xfeeeeeeeU,\n  0xffffffffU,0xfffeeedcU,0xcbcccccdU,0xddddeeeeU,0xddeeedddU,0xddccaaacU,0xeeeeeeeeU,0xeeeeeeeeU,\n  0xffffffffU,0xffeeddccU,0xbbbcccccU,0xddeeeeeeU,0xddeeddedU,0xdccba99aU,0xdeeeeeeeU,0xeeeeeeeeU,\n  0xffffffffU,0xffeddccbU,0xaabbbccdU,0xdeeeddccU,0xbbcccdddU,0xccca8768U,0x9deedeeeU,0xeeeeeeeeU,\n  0xffffffffU,0xfedddccbU,0xaaaabbccU,0xddedcb98U,0x88789accU,0xccb85444U,0x6aeddeeeU,0xeeeeeeeeU,\n  0xffffffffU,0xfedddccaU,0x9a9aabccU,0xcdddb854U,0x5445579bU,0xcca63443U,0x37dddeeeU,0xeeeeeeedU,\n  0xffffffffU,0xeddddcbaU,0x999aabbcU,0xccdc9556U,0x6443346aU,0xbba56632U,0x35beddeeU,0xeeeeeeeeU,\n  0xffffffffU,0xddddddbaU,0x9999aaccU,0xccca6687U,0x54432347U,0xbca67622U,0x339ddeeeU,0xeeeeeeeeU,\n  0xffffffffU,0xddddddcaU,0xa9999accU,0xbba76774U,0x22223336U,0x8aba9952U,0x226dddeeU,0xeeeeeeeeU,\n  0xfffffffeU,0xdddeedcbU,0xba999abbU,0xba756534U,0x75122345U,0x7aabcca6U,0x337deeeeU,0xeeeeeeeeU,\n  0xfffffffdU,0xddeeeddcU,0xbbaa99aaU,0xa8656314U,0xc7111366U,0x7abbcbbbU,0x989befefU,0xeefeeeeeU,\n  0xfffffffdU,0xdddeddccU,0xcbaa99aaU,0x98674334U,0xa6234577U,0x8bcdbbcaU,0x8998beeeU,0xeeeeeeeeU,\n  0xffffffddU,0xdddeeddcU,0xcbba9999U,0x88999999U,0xba899889U,0xbdddbc94U,0x458abcdeU,0xeeeeeeeeU,\n  0xffffffddU,0xdddeedddU,0xdcbb9998U,0x9abbbccdU,0xcdcbaaabU,0xceddba62U,0x359bccbdU,0xeedcdeeeU,\n  0xfffffeddU,0xddddeedcU,0xccbba9abU,0xbccdddddU,0xddddddddU,0xeeedb876U,0x78abbdcbU,0xcbaaaceeU,\n  0xfffffeddU,0xdddeeedcU,0xcbccbacdU,0xdeeeeeeeU,0xeefeeeeeU,0xfeeec9aaU,0x99bbbccbU,0xababaabcU,\n  0xfffffdddU,0xddeeedddU,0xccccbbddU,0xdeeeeeeeU,0xeeefefffU,0xffeedccdU,0xddca9bcbU,0xabbbbaa9U,\n  0xffffedddU,0xdddeddddU,0xcddcbcddU,0xdddeeeeeU,0xeeeeeeffU,0xfffedeffU,0xfea5359bU,0xaabbbbaaU,\n  0xffffecddU,0xddddddddU,0xcddcbbcdU,0xdddeeeeeU,0xdeeeeeefU,0xfffedeeeU,0xec61113aU,0xb9aaaaaaU,\n  0xffffdcddU,0xddddddcdU,0xccccbbccU,0xcdddddddU,0xdddddeeeU,0xeeeeddedU,0xd8211005U,0xbaaaaaaaU,\n  0xffffdccdU,0xdeddddcdU,0xccdbbbccU,0xddccdcdcU,0xcccdddeeU,0xeeeeddddU,0xb5111002U,0x9aaaaaaaU,\n  0xffffdccdU,0xddddddddU,0xddcbbabbU,0xcbbccbbaU,0xbbbcdcddU,0xdddedcccU,0x82111224U,0x8abaaaaaU,\n  0xffffcbcdU,0xddddddddU,0xccbbbbaaU,0xbaaabaaaU,0xaabbbbccU,0xccdddddcU,0x71136768U,0x9aaabbbbU,\n  0xffffcbcdU,0xddddddddU,0xcbaaaaabU,0xbaa99999U,0x9aabbbccU,0xbbcdddddU,0xa669aa9aU,0xbaabccbbU,\n  0xffffcbccU,0xddddddccU,0xbaaaaaabU,0xba999a99U,0x9abbbbbcU,0xcccdddddU,0xedddcdccU,0xcbcccbbbU,\n  0xffffcbccU,0xdddcccccU,0xbaaaabaaU,0xba99a9aaU,0xaabbbbbbU,0xbcbbcdddU,0xdeeeeeedU,0xddddcccbU,\n  0xffffdabcU,0xccdcbccbU,0xabcbaaaaU,0x999999abU,0xaabaaba9U,0xabbabcddU,0xddeeeeeeU,0xedccccccU,\n  0xffffd9abU,0xbccccccbU,0xbcdcaaa9U,0x8888889aU,0xa9a9a9aaU,0xa9abbccdU,0xdeeeeeeeU,0xeccbbcbcU,\n  0xfffec89aU,0xbccbbbcbU,0x989bbba9U,0x88888998U,0x99988899U,0x989bababU,0xceeeeedeU,0xecccabccU,\n  0xededc99aU,0xbbbbbab9U,0x6446abcaU,0x999aaa98U,0x89898898U,0x7789898aU,0xbcddddcdU,0xdcbb9bccU,\n  0xddddca8aU,0xbbbbba98U,0x9863589aU,0xa99aa989U,0x88999998U,0x77898988U,0xaaabcbbbU,0xbb997bbbU,\n  0xddddda79U,0xabbbba88U,0xaba52344U,0x68899888U,0x88999988U,0x88889988U,0x98999999U,0x87766acaU,\n  0xddddca77U,0x9abbba87U,0x89a61134U,0x79998887U,0x78989877U,0x77888888U,0x88887767U,0x65546abbU,\n  0xddddca87U,0x78aaba86U,0x88863489U,0x98877766U,0x78877766U,0x66777788U,0x88876665U,0x54566abcU,\n  0xddddb987U,0x6789a997U,0x67877788U,0x77655655U,0x56556655U,0x56566666U,0x67766766U,0x55655bbbU,\n  0xddddb998U,0x76688986U,0x66766655U,0x45445554U,0x44444444U,0x44444444U,0x45545565U,0x45445abbU,\n  0xddddb998U,0x77677877U,0x65665443U,0x34456665U,0x55444322U,0x33333333U,0x33433344U,0x33357bbbU,\n  0xddddb998U,0x76566776U,0x65665554U,0x55677778U,0x88654333U,0x22333332U,0x22223333U,0x4579bccbU,\n  0xddedb998U,0x77666666U,0x66666555U,0x67877788U,0x89888754U,0x33332222U,0x22223457U,0x8aabbcddU,\n  0xdeeec987U,0x76665566U,0x66657555U,0x67777778U,0x8889a987U,0x76655333U,0x333578abU,0xcbabbcddU,\n  0xeeeed988U,0x76665555U,0x55556555U,0x66777777U,0x77899aa9U,0xa99aa986U,0x7789abbcU,0xdccbbbdeU,\n  0xdeeeeb78U,0x66555565U,0x55555555U,0x55667777U,0x788899baU,0xbabcccbaU,0xbbbaabbbU,0xcccdcbceU,\n  0xdeeddc87U,0x65444555U,0x55555555U,0x55666778U,0x88889999U,0xaaaabcccU,0xbccbbbaaU,0xbdddddddU,\n  0xddddddb7U,0x65433456U,0x55554445U,0x55566678U,0x88889999U,0x99aabbbbU,0xbcbcbbbaU,0xbdedddeeU,\n  0xdddddddaU,0x75543234U,0x55555454U,0x45455566U,0x78889999U,0x999abbbbU,0xbbbabbbbU,0xbddddeeeU,\n  0xdddddddcU,0x96543212U,0x34555454U,0x54455555U,0x67779989U,0xaa99aabbU,0xbba9aaabU,0xbbcdddeeU,\n  0xedddddddU,0xb9544221U,0x12344455U,0x54454555U,0x66778878U,0xaaaaababU,0xbbaaa9abU,0xcbbdddefU,\n  0xeeddddcdU,0xbb854322U,0x11112235U,0x55544545U,0x56777877U,0x9abbbbbbU,0xabbcbbbaU,0xbbbccddeU,\n  0xeedddddcU,0xccb85322U,0x11100011U,0x22233234U,0x45666777U,0x89abaaabU,0xbbcddddcU,0xbbbccccdU,\n  0xeeddddddU,0xddcca753U,0x22110000U,0x00111001U,0x24555678U,0x8899aaaaU,0xbcdddeeeU,0xdcccccbcU,\n  0xeededdcdU,0xcccccb95U,0x42111100U,0x00000000U,0x01356688U,0x888899abU,0xcddeeeeeU,0xeeddedccU,\n  0xeeedddddU,0xcddcbcb9U,0x74321110U,0x00000000U,0x00157788U,0x9999abbcU,0xdddeeeeeU,0xeeeefeedU,\n  0xeddeddddU,0xcddccccbU,0xa7543211U,0x11000000U,0x00037889U,0xabaaabcdU,0xdddeeeeeU,0xdeeefefeU,\n  0xedddddddU,0xdcddccccU,0xba986542U,0x11110000U,0x0002899aU,0xbcbcbccdU,0xddeeeeeeU,0xeeefffeeU\n);\n\nfloat ayy(int i,int j) {\n    if (0 <= i && i < AYY_NY && 0 <= j && j < AYY_NY) {\n      uint b = (AYY_DATA[((63 ^ i)<<3) + (j>>3)] >> (((7 ^ j) & 7) << 2)) & 15U;\n      return float(b)/15.0;\n    }\n    return 0.0;\n}\n\nconst int MUTANT_NX = 272;\nconst int MUTANT_NY = 60;\nconst vec4 MUTANT_PALETTE[16] = vec4[16] (\n  vec4(0.000000,0.000000,0.000000,0.000000),vec4(0.992157,0.023529,0.027451,1.000000),\n  vec4(0.713726,0.039216,0.023529,1.000000),vec4(0.678431,0.188235,0.184314,1.000000),\n  vec4(0.509804,0.211765,0.192157,1.000000),vec4(0.874510,0.439216,0.431373,1.000000),\n  vec4(0.427451,0.407843,0.384314,1.000000),vec4(0.215686,0.298039,0.192157,1.000000),\n  vec4(0.062745,0.345098,0.121569,1.000000),vec4(0.772549,0.537255,0.533333,1.000000),\n  vec4(0.294118,0.270588,0.243137,1.000000),vec4(1.000000,1.000000,1.000000,1.000000),\n  vec4(0.596078,0.596078,0.584314,1.000000),vec4(0.196078,0.192157,0.176471,1.000000),\n  vec4(0.000000,0.000000,0.000000,1.000000),vec4(0.470588,0.533333,0.278431,1.000000));\nconst uint MUTANT_DATA[2040] = uint[2040] (\n  0x00000000U,0x00001111U,0x11111111U,0x11112000U,0x00000000U,0x00011111U,0x11111110U,0x00111111U,\n  0x11111111U,0x11111100U,0x00001111U,0x11111111U,0x11111100U,0x11111111U,0x11111111U,0x11111111U,\n  0x11111111U,0x11112001U,0x12121212U,0x12221222U,0x22222222U,0x22222220U,0x00002323U,0x23232323U,\n  0x32334000U,0x00000000U,0x03333333U,0x33333353U,0x00353535U,0x53555555U,0x55555555U,0x55555560U,\n  0x00000000U,0x00000000U,0x00000000U,0x00001155U,0x55555555U,0x55551780U,0x00000000U,0x00115555U,\n  0x55555517U,0x80155555U,0x55555555U,0x55552188U,0x00002155U,0x55555555U,0x55555178U,0x21555555U,\n  0x55555555U,0x55555555U,0x55555555U,0x59522842U,0x55555559U,0x55549555U,0x45954549U,0x44944338U,\n  0x8000244aU,0x44a44a44U,0x44443880U,0x00000000U,0x43444444U,0x44444454U,0x84544444U,0x44444444U,\n  0x44444444U,0x44444598U,0x00000000U,0x00000000U,0x00000000U,0x000012bbU,0xbbbbbbbbU,0xbbbb1288U,\n  0x80000000U,0x0015bbbbU,0xbbbbb914U,0x8719bbbbU,0xbbbbbbbbU,0xbbbb5178U,0x880011bbU,0xbbbbbbbbU,\n  0xbbbb9148U,0x25bbbbbbU,0xbbbbbbbbU,0xbbbbbbbbU,0xbbbcbcbcU,0xbcc52782U,0x3cccccccU,0xccccc6ccU,\n  0xc66c6c66U,0xc6666347U,0x788034aaU,0xaaaaaaddU,0xdddd3388U,0x80000000U,0x34dededeU,0xeeeeee5fU,\n  0xf54eeeeeU,0xeeeeeeeeU,0xeeeeeeeeU,0xdeede958U,0x88000000U,0x00000000U,0x00000000U,0x000001bbU,\n  0xbbbbbbbbU,0xbbbb5147U,0x88800000U,0x011bbbbbU,0xbbbbb914U,0xa419bbbbU,0xbbbbbbbbU,0xbbbb5177U,\n  0x788821bbU,0xbbbbbbbbU,0xbbbb914aU,0x11cbcbcbU,0xcbcbccbcU,0xccccccccU,0xccccccccU,0xccc22aa3U,\n  0x2c6c6666U,0x666666a6U,0x6a6aa6aaU,0xaaadd24dU,0x7d8843ddU,0xdddededeU,0xdeeee347U,0x88800000U,\n  0x53eeeeeeU,0xdedee43fU,0xf5deeeeeU,0xeeeeeedeU,0xededededU,0xedede45aU,0xa7880000U,0x00000000U,\n  0x00000000U,0x0000015bU,0xbbbbbbbbU,0xbbbbb12aU,0xa7880000U,0x015bbbbbU,0xbbbbb914U,0x7419bbbbU,\n  0xbbbbbbbbU,0xbbbb517fU,0xfff831bcU,0xbccbccccU,0xcccc91a7U,0x25ccccccU,0xcccccc6cU,0xcccc6c66U,\n  0x66666666U,0x6a632d73U,0x2aaaaaddU,0xddddddddU,0xddddededU,0xedee42d7U,0x4dd772eeU,0xeeeeeeeeU,\n  0xeeeee33dU,0xa7880000U,0x45eedeedU,0xeeede55fU,0x55edddddU,0xdddddeddU,0xeddeddddU,0xdddddd34U,\n  0x7ad78800U,0x00000000U,0x00000000U,0x0000011bU,0xbbbbbbbbU,0xbbbbb514U,0xada78000U,0x11bbbbbbU,\n  0xbbbbb914U,0x7419bcbbU,0xcbcbccbcU,0xcccc517fU,0xffff22ccU,0xccccccccU,0xcccc91a7U,0x126c6666U,\n  0x66a6a66aU,0x6aaaaaaaU,0xaaadddddU,0xdde22dddU,0x24edededU,0xeeeeeeeeU,0xeeeeeeeeU,0xeeee24ddU,\n  0x774dd34eU,0xeeeedeeeU,0xdedeed34U,0xada78000U,0x45ededdeU,0xddedd56fU,0x54dededeU,0xdeddddddU,\n  0xddddddddU,0xdddddd54U,0x47aaa800U,0x00000000U,0x00000000U,0x0000001bU,0xbbbbbbbbU,0xbbbbbb12U,\n  0x47da8800U,0x13bcbcbcU,0xbccbc91aU,0xd419ccccU,0xccccccccU,0xcccc517fU,0xffff21c6U,0x66666666U,\n  0x6a6a41a7U,0x226daaddU,0xddddddddU,0xddedededU,0xeeeeeeeeU,0xeee42d47U,0x23eeeeeeU,0xeeeeeeeeU,\n  0xeeeeedeeU,0xeded27d4U,0x747d743eU,0xddededdeU,0xdeddde43U,0xa7478800U,0x55ddddddU,0xdddd45ffU,\n  0x59ddddddU,0xddddddddU,0xddddddddU,0xddddad43U,0x7d47d880U,0x00000000U,0x00000000U,0x00000015U,\n  0xcbbcbbcbU,0xcbcbcc51U,0x474d7801U,0x19ccccccU,0xccccc414U,0xd415cc6cU,0x6c666666U,0x6666317fU,\n  0xffff22aaU,0xadadddddU,0xddde41a7U,0x22edeeeeU,0xeeeeeeeeU,0xeeeeeeeeU,0xeedeeeeeU,0xeee427ddU,\n  0x42deeeedU,0xededededU,0xeddededeU,0xdee427ddU,0x7d74d834U,0xddddddddU,0xdddddda3U,0x3d7a7800U,\n  0x45ddddddU,0xdddd59f9U,0x5addaaaaU,0xaadaadaaU,0xaaaaaaaaU,0xa6aaaaa2U,0x4d7ad780U,0x00000000U,\n  0x00000000U,0x00000011U,0xccccccccU,0xccccccc1U,0x27777871U,0x3c6c6666U,0x66666417U,0xde14aaaaU,\n  0xaaaaadddU,0xdddd317fU,0xffff21eeU,0xeeeeeeeeU,0xeeee41a7U,0x22eeeedeU,0xeeeeeeeeU,0xeedeeedeU,\n  0xdeedededU,0xede32d7dU,0xd24edddeU,0xddedddddU,0xdeddddddU,0xddd34d47U,0x47478834U,0xddddddddU,\n  0xdddddda4U,0x5a477880U,0x55dddadaU,0xaaa65ff5U,0x9aaaaaaaU,0xaaa6aa6aU,0xa6a6a6a6U,0xaa6a6aa3U,\n  0x47777780U,0x00000000U,0x00000000U,0x00000001U,0x9cccc6c6U,0x666666a3U,0x147d7831U,0xaaaaaadaU,\n  0xddddd414U,0xe414dedeU,0xdeeeeeeeU,0xeeee4177U,0xffff22deU,0xedeeeeeeU,0xeeee41a7U,0x22eedeeeU,\n  0xdedededdU,0xededededU,0xeddeddedU,0xdee42747U,0xd43dedddU,0xdddddeddU,0xddddddddU,0xddd277d7U,\n  0xd7dd8043U,0xdddddddaU,0xdadaaaa7U,0x5374af80U,0x596aa6aaU,0x6aa95ff5U,0x96a6a6a6U,0xa6aa6aa6U,\n  0xaaaaa7aaU,0x7aaaa6d4U,0x27777788U,0x00000000U,0x00000000U,0x00000001U,0x3aadaaaaU,0xadadddddU,\n  0x12777d12U,0xedeedeeeU,0xeeeee41eU,0xee14eeeeU,0xeeedeedeU,0xeeee3177U,0xffff22deU,0xeedededeU,\n  0xdede42a7U,0x23ededddU,0xdedddeddU,0xddddddddU,0xddddddddU,0xddd44d74U,0x742dddddU,0xdddddaddU,\n  0xddddddddU,0xad43d474U,0x74748005U,0x6aaa6aaaU,0xa6aaaaaaU,0x6547a778U,0x55aa6aaaU,0xa6a59f65U,\n  0xaaaaaaaaU,0xaaaaaaaaU,0xa67a6aa6U,0xaaaaa7aaU,0x2d777778U,0x00000000U,0x00000000U,0x00000002U,\n  0x2444ddeeU,0xdeeeeeeeU,0x4147721eU,0xeeeeeee4U,0x44444214U,0xde13444eU,0xdeedeeedU,0xe4442177U,\n  0xffff2244U,0x4dddedddU,0xe4444177U,0x23ddddedU,0xd4d44dddU,0xddddddddU,0xd4d4ddddU,0xddd42dddU,\n  0xdd34a4aaU,0xdaaaaaaaU,0xaaaaaa64U,0x6434d747U,0xdd778003U,0x9466a6a6U,0xaa6a6a6aU,0xa9574a78U,\n  0x996ad6a6U,0x4663ff55U,0xaaaaaa6aU,0x6a6aaaa7U,0xaaaaaad4U,0xaaaaaaddU,0x34777778U,0x00000000U,\n  0x00000000U,0x00000000U,0x11111eeeU,0xeeeeeeeeU,0xe22f712eU,0xedeeded1U,0x1111111eU,0xe4111114U,\n  0xededddedU,0x41111277U,0x7fff3112U,0x13edddddU,0xd2222277U,0x23dddda4U,0x222224ddU,0xddddddd4U,\n  0x323234daU,0xaad43eeeU,0xde333334U,0xaaaa6a6aU,0x6a6a6a33U,0x535747d4U,0x74780005U,0x55555aaaU,\n  0xaaaaaaaaU,0xaa55777fU,0x49aaaa65U,0x5535ff34U,0xaaaaaa33U,0x3334aaaaU,0xaadaaa33U,0x3334daadU,\n  0x44777778U,0x00000000U,0x00000000U,0x00000000U,0x07712deeU,0xdedededeU,0xe31f21deU,0xdedede41U,\n  0x4ad4ddddU,0xeddd4e13U,0xddddddddU,0xe13aa777U,0x8ffff877U,0x14ddddddU,0x32474d77U,0x33dadd42U,\n  0x3ddd34aaU,0xaaa6aaddU,0x2ddd43aaU,0xaaa43edeU,0xeee77a3aU,0x6a6aaaaaU,0xa6aaaa53U,0xaa47dd7dU,\n  0x7d780000U,0x07795aaaU,0xaaaaaaaaU,0xaa45ffffU,0x65aaaa43U,0x9f6fff5aU,0xaaaa4334U,0xf734daadU,\n  0xaadadd34U,0xff43aadaU,0x44777777U,0x80000000U,0x00000000U,0x00000000U,0x00014eddU,0xeddeddedU,\n  0xde1212ddU,0xddddde41U,0xa7777777U,0x7777dd22U,0xddddddddU,0xd2277777U,0xcfff8804U,0x24daaaadU,\n  0x23877777U,0x24daa434U,0x77772daaU,0x6aaa6aa4U,0x377dd334U,0xaaa44edeU,0xdee7843aU,0xaaaaa6aaU,\n  0xaaaa6a45U,0xa7747474U,0x74880000U,0x00065aaaU,0xaa7aaaaaU,0xaaa55fffU,0x55dada63U,0xfffff43aU,\n  0xadaa33ffU,0xff43dadaU,0xdadada44U,0xfff936daU,0xa5677dd7U,0x80000000U,0x00000000U,0x00000000U,\n  0x0012deddU,0xddddddddU,0xdd311dddU,0xdddddd41U,0x47777777U,0x77777841U,0xddadadaaU,0xa227778fU,\n  0xfffff802U,0x2aa6aaadU,0x24777777U,0x33444237U,0x777d34aaU,0xa6aa6ad4U,0x27777d43U,0x4a433deeU,\n  0xdee8834aU,0xaaaaad6aU,0xaaaaad63U,0x4fffffffU,0xff800000U,0x00059aaaU,0xaaaadaaaU,0xaaaa3fffU,\n  0x45daad43U,0xffffe334U,0x4a424fffU,0xff43adddU,0xaddadd44U,0xffff959aU,0x6967eeeeU,0x80000000U,\n  0x00000000U,0x00000000U,0x0013ddddU,0xddddddddU,0xddd13dddU,0xdadadd41U,0x77777778U,0x88888871U,\n  0x4aaa6aaaU,0xa42a77ffU,0xf8888802U,0x3aaa6a64U,0x27ff8777U,0x42333477U,0x77772daaU,0xaaaaaaaaU,\n  0x37777774U,0x33334edeU,0xded7a36aU,0xaaaaaa54U,0xaaadaaa9U,0x5fffff88U,0x88800000U,0x00055adaU,\n  0xdadaa6adU,0xddaa33ffU,0xf3ddad43U,0xfffde333U,0x3233ffffU,0xfff3aaddU,0xdddddd65U,0xfffff659U,\n  0x599dededU,0x78000000U,0x00000000U,0x00000000U,0x001adadaU,0xdadaaaaaU,0xaadaaaaaU,0xaaaaad41U,\n  0xd7777778U,0x00000002U,0x3a6aa6a6U,0xaa247778U,0xf8000002U,0x4aaaaad4U,0x2ffffff7U,0x88888777U,\n  0x777d34aaU,0xaaaaaad4U,0x27777777U,0x8887deedU,0xeee745daU,0xaadaaa59U,0xadaaadd4U,0x5fffff88U,\n  0x00000000U,0x00095addU,0xaddd454dU,0xaddda34fU,0x43dddd43U,0xffaeeee8U,0x88ffffffU,0xfff44dddU,\n  0xddddddd9U,0x6fffff88U,0x88ddedeeU,0xd8000000U,0x00000000U,0x00000000U,0x012aaaa6U,0xaa6aaa6aU,\n  0xa6aa6a6aU,0x6a6a6a41U,0x777d7778U,0x00000002U,0x2aaaaaaaU,0xaa237777U,0x78000002U,0xaaaaaaa3U,\n  0x4fffffffU,0x88008887U,0x77773aaaU,0xaadaaadaU,0x377777fdU,0x800887edU,0xede734adU,0xadada455U,\n  0xaddddaddU,0x59ffff88U,0x00000000U,0x00055dddU,0xdadda35aU,0xdddad43fU,0x43ddddd2U,0x6fdedd88U,\n  0x0888ffffU,0xfff94addU,0xddddddd9U,0x6fffff88U,0x0888eedeU,0xe8000000U,0x00000000U,0x00000000U,\n  0x0146a6aaU,0x6aaa6aa4U,0xa6aaaaa4U,0xaaaaaa41U,0xd7d77778U,0x00000000U,0x2aaaaaaaU,0xaa327777U,\n  0x78800023U,0xaaaaadd2U,0x4fffffffU,0x80000088U,0x877734ddU,0xaadadad4U,0x377777f7U,0x80000887U,\n  0xd7765adaU,0xddada555U,0x6adaddddU,0x45fffff8U,0x00000000U,0x00045dddU,0xdddd4333U,0xdddddd33U,\n  0x43ddde42U,0xfff77ff8U,0x00088f8fU,0xfff79dddU,0xddddddd9U,0x9ffffff8U,0x000888edU,0xd8800000U,\n  0x00000000U,0x00000000U,0x11aaaaaaU,0xaa6aaaa1U,0x1aaa6a41U,0x3aaaaa41U,0xdee77778U,0x00000000U,\n  0x24aaaaaaU,0xad427777U,0xa7800034U,0xdaadaa43U,0xffffffffU,0x80000000U,0x88883adaU,0xddaddad4U,\n  0x37d77ff7U,0x80000008U,0x88854addU,0xaddda5f5U,0x5ddddddaU,0xa5fffff8U,0x80000000U,0x00003addU,\n  0xddddd343U,0x4ddddd43U,0x33ddddd3U,0x7ffffff8U,0x00000888U,0x888896ddU,0xddddddd6U,0x9ffffff8U,\n  0x00000888U,0x88800000U,0x00000000U,0x00000000U,0x13aa6aaaU,0xaaaaaa41U,0x14aaaa31U,0x4aaaaa42U,\n  0xddee7778U,0x00000000U,0x23aaaaaaU,0xadd2a777U,0x77800024U,0xddaddd44U,0xfffffff8U,0x80000000U,\n  0x000034ddU,0xaddadddaU,0x3777fff8U,0x80000000U,0x00056dddU,0xdddd95f9U,0x5addddddU,0xd59fffffU,\n  0x80000000U,0x00003dddU,0xdddd43f4U,0x2dddede4U,0x34ddde43U,0xfffffff8U,0x00000000U,0x000099ddU,\n  0xdddddaa6U,0xbffffff8U,0x00000000U,0x00000000U,0x00000000U,0x00000000U,0x14aadaa7U,0xaaaaaa31U,\n  0x21daaa11U,0x4aadad32U,0xeedd7778U,0x00000000U,0x32dddddaU,0xdad34777U,0x7780003dU,0xdaddad34U,\n  0xfffffff8U,0x80000000U,0x00003addU,0xddddddd4U,0x577fffffU,0x80000000U,0x0055ddddU,0xdddd597aU,\n  0x56ddddddU,0xd45fffffU,0x80000000U,0x00003dddU,0xdeded27fU,0x33edddddU,0x33dddda5U,0xfffffff8U,\n  0x00000000U,0x00009c6aU,0x66666666U,0x9cfffff8U,0x00000000U,0x00000000U,0x00000000U,0x00000002U,\n  0x1daaaaadU,0xaadada23U,0xf14ad222U,0x4daadd32U,0xdeed7778U,0x00000000U,0x02adadadU,0xddd43777U,\n  0x7788033dU,0xdddddd2fU,0xfffffff8U,0x00000000U,0x000054ddU,0xddddddd4U,0x577fffffU,0x80000000U,\n  0x0059ddddU,0xdddd5677U,0x54dddddeU,0xdd36ffffU,0x88000000U,0x00003dddU,0xdadad2ffU,0xa34aaaaaU,\n  0x44aa6a65U,0xfffffff8U,0x00000000U,0x0000b966U,0x66666666U,0x9cfffff8U,0x80000000U,0x00000000U,\n  0x00000000U,0x00000001U,0x3dadadaaU,0x7dada414U,0xf22a4222U,0x4ddadd42U,0xedd77778U,0x00000000U,\n  0x024dddddU,0xddd437ffU,0xfff8034dU,0xddddd43fU,0xfffffff8U,0x00000000U,0x00003addU,0xdddddddaU,\n  0x577fffffU,0x80000000U,0x005adeddU,0xded45777U,0x45ddddddU,0xdd33ffffU,0xf8000000U,0x00002da6U,\n  0xa6aa437dU,0xe4466666U,0x66666695U,0xffffff88U,0x00000000U,0x000009ccU,0x6cccccccU,0x95ffffffU,\n  0x80000000U,0x00000000U,0x00000000U,0x00000001U,0xadadadddU,0xdaddd32fU,0xf42422f2U,0x4adddd32U,\n  0xed777778U,0x00000000U,0x034dddddU,0xddde2affU,0xfff8034dU,0xdddde34fU,0xffffff88U,0x00000000U,\n  0x000054ddU,0xddddddd4U,0x57778fffU,0x80000000U,0x055dddddU,0xadd45777U,0xa5adaaaaU,0xaa63ffffU,\n  0xf8800000U,0x00003666U,0x666663aeU,0xdd49666cU,0x66c666c9U,0xfffffff8U,0x00000000U,0x0000099cU,\n  0xccccccccU,0xc9ffffffU,0x80000000U,0x00000000U,0x00000000U,0x00000012U,0xdadddadaU,0xddddd238U,\n  0xff2223f2U,0x4ddddd42U,0xd7777788U,0x00000000U,0x032dddddU,0xdddd34ffU,0xfff8a2ddU,0xddddd34fU,\n  0xffffff80U,0x00000000U,0x00005addU,0xddddddd4U,0x57777778U,0x80000000U,0x059aa6aaU,0x6a654777U,\n  0xa3466666U,0x66634fffU,0xf7800000U,0x00003666U,0xc6c6c3deU,0xedd59cccU,0xccccccc9U,0xfffffff8U,\n  0x00000000U,0x0000099cU,0xcccccbccU,0xc56fffffU,0x80000000U,0x00000000U,0x00000000U,0x00000014U,\n  0xddddddddU,0xdddd42a7U,0x77622f42U,0xddddde43U,0xe7d77778U,0x00000000U,0x003dddddU,0xedde44ffU,\n  0xfff843edU,0xdedda3ffU,0xffffff80U,0x00000000U,0x000054aaU,0xdaaaaaa9U,0x5a777777U,0x80000000U,\n  0x55666666U,0x66635443U,0x434c666cU,0x6c6437ffU,0xfd800000U,0x00003cccU,0xccccc5ddU,0xede69cccU,\n  0xccccccb9U,0xa7fffff8U,0x00000000U,0x0000095bU,0xcbbcbcbbU,0xc54778ffU,0x88000000U,0x00000000U,\n  0x00000000U,0x0000022dU,0xddddddddU,0xdddd4277U,0x77734ff2U,0xdddddd42U,0xeee77778U,0x00000000U,\n  0x0034edddU,0xdddd43ffU,0xffff44adU,0xdadd45ffU,0xffffff80U,0x00000000U,0x000059a6U,0x66666666U,\n  0x56777777U,0x80000000U,0x546c6c6cU,0x6c654545U,0x454cccccU,0xccc63a77U,0x7e780000U,0x00005cccU,\n  0xccccc5aeU,0xdd7a99cbU,0xcbcbcb9bU,0xdd7fff88U,0x00000000U,0x0000005cU,0xbbcbbbbbU,0xb537777fU,\n  0x88000000U,0x00000000U,0x00000000U,0x0000013dU,0xddddddddU,0xddde2477U,0x77787772U,0xddedde43U,\n  0xedee7778U,0x00000000U,0x0033dddaU,0xddddd37fU,0xffff54aaU,0x6a6639ffU,0xfffff880U,0x00000000U,\n  0x00005c66U,0x666666c9U,0x57777777U,0x80000000U,0x39ccccccU,0xccccccccU,0xccccccccU,0xcccc34edU,\n  0xdee80000U,0x00005ccbU,0xcbcbc9adU,0x777769bcU,0xbcbcbcb9U,0xdedffff8U,0x00000000U,0x00000059U,\n  0xbbbbbbbbU,0xb93a7777U,0x78000000U,0x00000000U,0x00000000U,0x0000024eU,0xddddddddU,0xddd42777U,\n  0x77777842U,0xdddddd43U,0xeeded788U,0x00000000U,0x0003a6a6U,0xa6666347U,0xffff3666U,0x66665fffU,\n  0xfffff800U,0x00000000U,0x000059ccU,0xccccccccU,0x57777777U,0x80000003U,0x3cccccccU,0xccccccbcU,\n  0xcbccbccbU,0xcbcb93d7U,0xede80000U,0x00009bbcU,0xbbbcb977U,0x7777dc9bU,0xbbbbbb99U,0xaee7fff8U,\n  0x00000000U,0x00000035U,0xbbbbbbbbU,0xbb247777U,0x78000000U,0x00000000U,0x00000000U,0x000022ddU,\n  0xddddddddU,0xddd42777U,0x77777802U,0xaa6aad43U,0xedee7778U,0x00000000U,0x00034666U,0x6666c457U,\n  0x7ff45c6cU,0x6c693fffU,0xfffff800U,0x00000000U,0x00005cccU,0xccccccc9U,0x57777777U,0x80000003U,\n  0x9cbcbcbcU,0xbc333334U,0x3454bbcbU,0xcbcbc5aeU,0xdee78000U,0x000099bbU,0xbbbbbb67U,0x77ded899U,\n  0xbbbbbbb9U,0xddedfff8U,0x00000000U,0x00000033U,0xbbcbcbcbU,0xcb247777U,0x78800000U,0x00000000U,\n  0x00000000U,0x000024daU,0xadaaaaaaU,0xaaa24fffU,0x77778803U,0xa6666644U,0xeeddd788U,0x00000000U,\n  0x000396ccU,0x6cc6c937U,0xfff596ccU,0xccc95fffU,0xffff8800U,0x00000000U,0x000059ccU,0xbccbcbc9U,\n  0x57777777U,0x80000003U,0x9bcbcbbcU,0xb5344444U,0x4444bbbbU,0xbbbbb99eU,0xedee8000U,0x00009bbbU,\n  0xbbbb9977U,0x7dded899U,0xbbbbbb95U,0xaede7ff8U,0x00000000U,0x00000002U,0xcbcbcbcbU,0xcb327777U,\n  0x78800000U,0x00000000U,0x00000000U,0x00002a66U,0x66666666U,0x66a27fffU,0xfff78803U,0x666c6634U,\n  0xdeeeee78U,0x00000000U,0x00043cccU,0xcccccc56U,0xfff59cccU,0xccc59fffU,0xffff8800U,0x00000000U,\n  0x000059bcU,0xbbcbcbb9U,0x37777777U,0x80000033U,0xbbbbbbbbU,0xb3a77777U,0x77739bbbU,0xbbbbbb9aU,\n  0xdede8800U,0x0000bcbbU,0xcbbbb977U,0x7ede7805U,0x5ccbcb95U,0x7ded7ff8U,0x00000000U,0x00000002U,\n  0x9bcbcbcbU,0xcc52fff7U,0x77800000U,0x00000000U,0x00000000U,0x00023666U,0x666c6c6cU,0x6c43ffffU,\n  0xffff8033U,0xcccccc43U,0xdedede78U,0x00000000U,0x00005cccU,0xcccccc54U,0xfff59bcbU,0xcbc5ffffU,\n  0xffff8000U,0x00000000U,0x000059bbU,0xcbbbbbb9U,0x37777778U,0x80000039U,0xbbbbbbbbU,0xc3777777U,\n  0x77799bbbU,0xbbbcbb56U,0xedeed800U,0x00009bbcU,0xbcbcb967U,0xdedd7800U,0x59bcbc95U,0xdede7f88U,\n  0x00000000U,0x00000002U,0x3cccccccU,0xcc927fffU,0xf7800000U,0x00000000U,0x00000000U,0x00026cccU,\n  0xccccccccU,0xc624ffffU,0xfff88033U,0xcccccc44U,0x7ddeee78U,0x00000000U,0x000059bbU,0xcbbbbb95U,\n  0xff95cbbcU,0xbb95ffffU,0xfff78000U,0x00000000U,0x000059bbU,0xbbbbbbb9U,0x377d7ed7U,0x8000033cU,\n  0xbbbbbbbbU,0x95777d7dU,0xa77a9bcbU,0xcbbcbcb9U,0xddede800U,0x000099cbU,0xcbcb9977U,0x7ed77800U,\n  0x53bccb93U,0xdded7ff8U,0x00000000U,0x00000002U,0x3cccccccU,0xccc24fffU,0xff800000U,0x00000000U,\n  0x00000000U,0x00326cccU,0xccccccccU,0xcc38ffffU,0xfff88033U,0xcbcbcb34U,0x77eded78U,0x00000000U,\n  0x000055cbU,0xbcbcbcb5U,0xff59bbbbU,0xbb95ffffU,0xf8788000U,0x00000000U,0x000039bbU,0xbbbbbbb9U,\n  0x3deeede7U,0x8000034bU,0xbcbcbcbcU,0x94adaaaaU,0xa78f9cbcU,0xbccbcbc9U,0x6edee780U,0x000099bcU,\n  0xccccc567U,0xdd777800U,0x35cccc92U,0xdedefff8U,0x00000000U,0x00000002U,0x2cccccccU,0xcc623ff7U,\n  0x7d880000U,0x00000000U,0x00000000U,0x0034ccbcU,0xccbccbcbU,0xc427ffffU,0xfff80043U,0xcbcbcb54U,\n  0x777dee78U,0x00000000U,0x000055bbU,0xbbbbbbb5U,0xff59bbbbU,0xbb5cffffU,0xf7780000U,0x00000000U,\n  0x000039bcU,0xbcbcbcb9U,0x3dddede7U,0x800003cbU,0xcbcbcbcbU,0x5747d74aU,0xd88099ccU,0xcbcccbcbU,\n  0x9eeded80U,0x000059ccU,0xcccc957dU,0x7dddd800U,0x33cccc92U,0xdeddfff8U,0x00000000U,0x00000000U,\n  0x296c6666U,0x66632ffdU,0xded80000U,0x00000000U,0x00000000U,0x002cbcbcU,0xbbcbbcbcU,0xb34ed8ffU,\n  0xff880035U,0xbbbbbb44U,0x77777788U,0x00000000U,0x0000059bU,0xbbbbbbb5U,0x9f5bbbbcU,0xb95fffffU,\n  0x77780000U,0x00000000U,0x000039bcU,0xbcbcbcb6U,0x3eeeede7U,0x800045ccU,0xccccccccU,0x9a747477U,\n  0x4800cbccU,0xccccccc9U,0x9aedee80U,0x000059ccU,0xcccc93aaU,0xaa7a7800U,0x32cc6642U,0xdedfff88U,\n  0x00000000U,0x00000000U,0x24666666U,0x66642fdeU,0xede80000U,0x00000000U,0x33000000U,0x033bbbbbU,\n  0xbbcbbbbbU,0xc3dded7fU,0xff880043U,0xbbbbbb54U,0x77777d88U,0x00000000U,0x0000059cU,0xbbcbcbb9U,\n  0x595cbcbbU,0xb95ffff7U,0x77780000U,0x00000000U,0x000039bcU,0xbccbccc9U,0x37dedee7U,0x800059cbU,\n  0xccbcccc9U,0x57dd7dddU,0x780009ccU,0xccccccccU,0x56eede78U,0x000059ccU,0xccc6c247U,0x4d4d7800U,\n  0x32666c41U,0xed7ffff8U,0x00000000U,0x00000000U,0x23aaa6aaU,0xaaaa24deU,0xdee82200U,0x00000000U,\n  0x42340000U,0x039bbbbbU,0xbbbbbbbbU,0x93eededdU,0x77800055U,0xbbbbbb54U,0x77777788U,0x00000000U,\n  0x0000095bU,0xcbbcbcb9U,0x559bcbccU,0xb59ffff7U,0x77880000U,0x00000000U,0x000034ccU,0xccccccc9U,\n  0x577dde77U,0x80009cccU,0xccccccc9U,0xca474747U,0x8800099cU,0xccc6c6ccU,0x95deeee8U,0x00003466U,\n  0x6666437dU,0x77d47800U,0x22666a42U,0xeafffff8U,0x00000000U,0x00000000U,0x22aaddaaU,0xaaaa23edU,\n  0xed322288U,0x00000000U,0x02333300U,0x03cbbbbbU,0xbbbbbbbbU,0x34dedeedU,0xe7800049U,0xcbcbcb94U,\n  0xdd7d7788U,0x00000000U,0x0000005bU,0xcccbcbcbU,0x559ccbccU,0xc3fffff7U,0x77800000U,0x00000000U,\n  0x000039ccU,0xccccccc6U,0x57777777U,0x80099cc6U,0xcc6cccc9U,0xfd7dd7ddU,0x80000996U,0x66666666U,\n  0x65aedde8U,0x8000546aU,0x6a66424dU,0x47d7d800U,0x22aaad41U,0xd7fffff8U,0x00000000U,0x00000000U,\n  0x02aa6a6aU,0x6a6732eeU,0x222224e7U,0x88000000U,0x042c9333U,0x34bbcbcbU,0xcbcbcbccU,0x5aadedeeU,\n  0xd8800055U,0xcbcbcc54U,0xdddddd78U,0x00000000U,0x00000059U,0xcbccccccU,0x539cccccU,0x93fffff7U,\n  0x77800000U,0x00000000U,0x000036ccU,0xcccccc69U,0x97a77777U,0x80099666U,0x666666c9U,0x64a47477U,\n  0x80000956U,0x6666a6a6U,0xa54ddeddU,0x800024aaU,0xaaaaa247U,0x74774800U,0x22daaa42U,0x4fffff88U,\n  0x00000000U,0x00000000U,0x02466666U,0x66664232U,0x23622eeeU,0xe7880000U,0x0033bc93U,0x39bcbcbcU,\n  0xbcbcbcb5U,0x33354edeU,0xe8455559U,0xbcccbc55U,0x55555557U,0x00000000U,0x00000059U,0xccccccccU,\n  0x55ccccccU,0x53fffff7U,0x77800000U,0x00000000U,0x33545966U,0x66666666U,0x999997c9U,0x99b96666U,\n  0x66666699U,0x9594d747U,0x80555556U,0xdaaaaaaaU,0xd5232224U,0x842224aaU,0xaaaa4222U,0x777d2222U,\n  0x23666642U,0x2222fff8U,0x00000000U,0x00002222U,0x124cccccU,0xcccc6124U,0xcc924dedU,0xeee78800U,\n  0x00039cbcU,0xccbcbcbcU,0xcbccbcccU,0x99954dedU,0x7855999cU,0xccccccc9U,0x9999c95fU,0x80000000U,\n  0x00000053U,0xccccccc6U,0xc6cccc66U,0x347fffffU,0xf8800000U,0x00000000U,0x45666666U,0x66666666U,\n  0x969997c9U,0xc9666aaaU,0xaaaaaa66U,0x69567478U,0x8055a4aaU,0xaaaaaaaaU,0xaa494324U,0x82344666U,\n  0x66666422U,0x77742344U,0x4666c664U,0x4532fff8U,0x00000000U,0x00022594U,0x99ccccccU,0xccccc9ccU,\n  0xcc23eedeU,0xdede8800U,0x00043ccbU,0xccccccccU,0xccccccccU,0xcc95aeeeU,0x8855ccccU,0xccccccccU,\n  0xcccccc5aU,0xd8800000U,0x00000003U,0x6c666666U,0x66666666U,0x3a7778ffU,0xf8000000U,0x00000000U,\n  0x05a6aaa6U,0xaaaaaaadU,0xaaac97c9U,0xaaaadaaaU,0xdadaaaaaU,0x79347dd8U,0x00536666U,0xa6666666U,\n  0x6666524dU,0x2266c66cU,0x666c6623U,0x77842cccU,0xccccccccU,0xcc42fff8U,0x00000000U,0x00022cbcU,\n  0xcccbcbcbU,0xbcbbbcbbU,0xb924edeeU,0xded78000U,0x000039ccU,0xccccccccU,0xccccccccU,0xcc95dedeU,\n  0x7849c6ccU,0xccccc6c6U,0xc6c6c954U,0xee788000U,0x00000003U,0x46666666U,0x66666664U,0x37777777U,\n  0xf8000000U,0x00000000U,0x099daaddU,0xaadadaaaU,0xaaac96c9U,0x6aa6a6a6U,0x66666666U,0x6547d478U,\n  0x88039666U,0xc666c6c6U,0xc6c623d3U,0x29ccccccU,0xcccccc32U,0x777d29ccU,0xcccccbccU,0xbc52fff8U,\n  0x88000000U,0x00022cbbU,0xbbbcbbbcU,0xbbcbbbbcU,0xb22eeedeU,0xdd788000U,0x0000439cU,0xccccccccU,\n  0xccccccccU,0xc656edeeU,0xd7996666U,0x66666666U,0x66666a5aU,0xeeeed880U,0x00000003U,0x3a6a6a6aU,\n  0xaaaaaad4U,0x47777777U,0x88000000U,0x00000000U,0x099aa66aU,0x6a666666U,0x66699799U,0x66666666U,\n  0x66666c66U,0xc3747dddU,0x78833cccU,0xccccccccU,0xccc22742U,0x3cccccccU,0xcccbcc33U,0x7d7429cbU,\n  0xbcbbcbcbU,0xcb92ffffU,0xf8880000U,0x00022bcbU,0xbbbbbbbbU,0xbbbbbbbbU,0x924ededeU,0x77780000U,\n  0x00000556U,0xc6c66666U,0x66666666U,0x695aed77U,0x77456666U,0x6a66666aU,0x6aaa6a3aU,0xdedeed80U,\n  0x00000004U,0x3adadadaU,0xadadaaa3U,0xa7777777U,0x80000000U,0x00000000U,0x009c6666U,0x66666666U,\n  0x6c6c9769U,0xccccccccU,0xccccccccU,0x93dededdU,0xed832cccU,0xcccccbccU,0xbc32a422U,0xcbcbbcbbU,\n  0xbbcbbc32U,0xdaa429bbU,0xcbbcbbbbU,0xbb52ffffU,0xfff80000U,0x00022bbbU,0xcbbcbcbcU,0xbcbcbcbcU,\n  0x23ededd7U,0x77880000U,0x00000056U,0x66666666U,0x666666a6U,0xa95ed777U,0x7799aaaaU,0xaaaaadaaU,\n  0xaaaaa43dU,0xdeded780U,0x00000000U,0x2a6a6a6aU,0x66a66663U,0x77777777U,0x80000000U,0x00000000U,\n  0x009cccccU,0xccccccccU,0xccc95a95U,0xccccccccU,0xccccccccU,0x33eedeeeU,0xed8029bcU,0xbbbbcbbcU,\n  0xb9247229U,0xbbbcbbbcU,0xbbbbbb32U,0x747429bbU,0xbbbbbbbbU,0xbb92ffffU,0xff780000U,0x00021ccbU,\n  0xccbccbccU,0xccccccc9U,0x24eed777U,0x77800000U,0x00000055U,0xa6a676aaU,0xaaaadaaaU,0xa56d7777U,\n  0x7745aadaU,0xadaaaaaaU,0xaaaa6a3aU,0xeddd7780U,0x00000000U,0x34666666U,0x66c66695U,0x7d777777U,\n  0x80000000U,0x00000000U,0x009bccccU,0xccccccccU,0xcbc95745U,0xcbcbcbcbU,0xbcbbbbb9U,0x2a777dddU,\n  0xd88023bbU,0xcbcbbbbbU,0x922d329bU,0xbbbbbbbbU,0xbbbbbb32U,0xd7d42bbcU,0xbcbcbcccU,0xcc52ffffU,\n  0xff780000U,0x00022cccU,0xccccc6ccU,0xcc6c6662U,0x2edd7777U,0x78800000U,0x00000005U,0x9dadadaaU,\n  0xdadaaaaaU,0x95dd7777U,0x7749a6a6U,0x66666666U,0x6666662dU,0xd7777780U,0x00000000U,0x44ccccccU,\n  0xcccccc96U,0x77777778U,0x80000000U,0x00000000U,0x0009ccbcU,0xbcbbcbbbU,0xcbb95a45U,0xbcbcbbbcU,\n  0xbbcbcbb5U,0x2ffffff7U,0xf80022bbU,0xbbbbbbbbU,0x227423bbU,0xcbcbcbcbU,0xcccccc32U,0x747429ccU,\n  0xccccccccU,0xcc42ffffU,0xff780000U,0x00022666U,0x6aa6a6aaU,0xaaaaaa42U,0xaed77777U,0x78000000U,\n  0x00000009U,0x56a6a676U,0x6666a666U,0x95e77777U,0x77656666U,0x6666c6c6U,0xcc6cc62aU,0x77777780U,\n  0x00000000U,0x05ccccccU,0xcccccc56U,0xd7777778U,0x00000000U,0x00000000U,0x00099bbcU,0xbbcbbbcbU,\n  0xbbb93733U,0xbbbbbbbbU,0xbbbbbbb2U,0x3fffffffU,0x8800025bU,0xcbccccb4U,0x24d22cccU,0xccccccccU,\n  0xcccccc32U,0xd7d426ccU,0xc6c6c6c6U,0x6642ffffU,0xf7880000U,0x00022dddU,0xdddddddaU,0xdadadd22U,\n  0xe7777777U,0x88000000U,0x00000000U,0x59666666U,0x666c6666U,0x5add7777U,0x7844ccccU,0xccccccccU,\n  0xccccc62dU,0x77777780U,0x00000000U,0x059cbcbcU,0xbcbcbc9dU,0xded77778U,0x00000000U,0x00000000U,\n  0x00099bbbU,0xbbbbbbbbU,0xbbb92a43U,0xbbbcbcbbU,0xcbcbcb92U,0x4fffffffU,0x8800023cU,0xcccccc92U,\n  0x37229cccU,0xccccc66cU,0x6c666722U,0x47d424aaU,0xaaaadadaU,0xda42ffffU,0xf7780000U,0x00022dadU,\n  0xdadadaddU,0xadadd42dU,0xe77777d7U,0x80000000U,0x00000000U,0x059c9c9cU,0x9c969c99U,0x3ae77777U,\n  0x78439696U,0x96969699U,0x99999937U,0x77d77780U,0x00000000U,0x099ccb9bU,0xcb9b9b9eU,0xeded7778U,\n  0x00000000U,0x00000000U,0x000059c9U,0xc99c9999U,0x99952a32U,0x99999949U,0x94954932U,0xffffffffU,\n  0x80000224U,0x45444422U,0x74224444U,0x44444444U,0x44444423U,0x7d442444U,0x44444444U,0x4432ffffU,\n  0xf7880000U,0x00022444U,0x44444444U,0x4444422eU,0xd7777778U,0x80000000U,0x00000000U,0x05555555U,\n  0x35535353U,0x4ded7777U,0x78433332U,0x32323233U,0x33333337U,0x77777780U,0x00000000U,0x09999999U,\n  0x999b99cdU,0xedeed788U,0x00000000U,0x00000000U,0x00005535U,0x52523323U,0x22222742U,0x22222222U,\n  0x22222223U,0xffffffffU,0x80000022U,0x2222222dU,0xd2222222U,0x22222222U,0x22222222U,0xd7742222U,\n  0x22222222U,0x2222ffffU,0xf7780000U,0x00002222U,0x22222222U,0x222222aeU,0xed777778U,0x00000000U,\n  0x00000000U,0x00088777U,0x7addddd7U,0xdedd7777U,0x7800888dU,0x77777777U,0xded77777U,0x77777780U,\n  0x00000000U,0x00088776U,0x6776787dU,0xeedee780U,0x00000000U,0x00000000U,0x0000088fU,0x7aa7767aU,\n  0xaaaaaadaU,0x77a77a77U,0x777777ffU,0xfffffff8U,0x80000008U,0x88a4a747U,0xd74d4d4dU,0x4d4dad74U,\n  0x7dad7d7dU,0x747d4d78U,0xd477ffffU,0xffffffffU,0xf7780000U,0x00000887U,0xedddede7U,0x7777e7ddU,\n  0xd7777788U,0x00000000U,0x00000000U,0x00000887U,0xddeeeed7U,0x7eeed777U,0x80000088U,0x87777777U,\n  0x7ed7777dU,0x77777780U,0x00000000U,0x00000888U,0x77777777U,0xdedeed80U,0x00000000U,0x00000000U,\n  0x00000000U,0x887aaaa4U,0x74a74747U,0x7777877aU,0x7777778fU,0xfffffff8U,0x00000000U,0x08887747U,\n  0x4d7d7d77U,0x7d7474ddU,0x74747474U,0xd7477d78U,0x887aa77fU,0xffffffffU,0x77780000U,0x00000008U,\n  0x8877ddedU,0x7777777eU,0xd7777780U,0x00000000U,0x00000000U,0x00000008U,0x87edd777U,0x77d7e877U,\n  0x80000000U,0x88877778U,0x77777777U,0x77777780U,0x00000000U,0x00000008U,0x88777777U,0x7eddd880U,\n  0x00000000U,0x00000000U,0x00000000U,0x00887777U,0x77777777U,0x77788887U,0x77777778U,0xf8ff8f88U,\n  0x00000000U,0x00088877U,0x77777788U,0x88777777U,0x77777777U,0x77777788U,0x08887787U,0x87888f87U,\n  0x78880000U,0x00000000U,0x08887edeU,0x7777777eU,0x87777880U,0x00000000U,0x00000000U,0x00000000U,\n  0x08888888U,0x88888888U,0x80000000U,0x00888888U,0x88888888U,0x88888880U,0x00000000U,0x00000000U,\n  0x08888888U,0x88888800U,0x00000000U,0x00000000U,0x00000000U,0x00008888U,0x88888888U,0x88888088U,\n  0x88888888U,0x88888888U,0x00000000U,0x00000888U,0x88888880U,0x08888888U,0x88888888U,0x88888888U,\n  0x00088888U,0x88888888U,0x88880000U,0x00000000U,0x00088888U,0x88888888U,0x88888800U,0x00000000U\n);\n\nuint mutant(int i,int j) {\n  if (0 <= i && i < MUTANT_NY && 0 <= j && j < MUTANT_NX) {\n    return (MUTANT_DATA[(((MUTANT_NY - 1 - i)*MUTANT_NX)>>3) + (j>>3)] >> (((7 ^ j) & 7) << 2)) & 15U;\n  }\n  return 0U;\n}\n\nconst uint FONT_DATA[53] = uint[53] (\n  0x001c2241U,0x7f414100U,0x003f413fU,0x41413f00U,0x003c4201U,0x01423c00U,0x001f2141U,0x41211f00U,\n  0x007f0101U,0x1f017f00U,0x007f0101U,0x1f010100U,0x003e4101U,0x79413e00U,0x00414141U,0x7f414100U,\n  0x003e0808U,0x08083e00U,0x00404040U,0x41221c00U,0x0041211fU,0x21418100U,0x00020202U,0x02023e00U,\n  0x00416355U,0x49494100U,0x00414345U,0x49516100U,0x001c2241U,0x41221c00U,0x003f4141U,0x3f010100U,\n  0x001c2241U,0x51225c80U,0x003f4141U,0x3f414100U,0x003e013eU,0x40413e00U,0x007f0808U,0x08080800U,\n  0x00414141U,0x41413e00U,0x00414141U,0x22140800U,0x00414949U,0x55634100U,0x00422418U,0x24428100U,\n  0x00412214U,0x08080800U,0x007f2010U,0x08047f00U,0x00000000U\n);\n\nbool font_glyph(int c,int i,int j) {\n  int k = c << 1;\n  k += i >> 2;\n  int s = i & 3;\n  s <<= 3;\n  s += j;\n  return ((FONT_DATA[k ^ 1] >> s) & 1U) != 0U;\n}\n\nconst uint MSG_DATA[46] = uint[46] (\n  0x00000000U,0x54000000U,0x04a07b18U,0x8e281149U,0x04ca9a26U,0x8a960400U,0x06be4603U,0x51c1a55aU,\n  0x84abe500U,0x99650065U,0x2809d1c5U,0x4724134aU,0xa00003e5U,0x12680b07U,0x49673aa0U,0x18c4dc0eU,\n  0xe4828f70U,0xac05206cU,0x00a2437aU,0x03e6c080U,0xc0568513U,0xc13e4073U,0x49e6061eU,0x3083e440U,\n  0x725803b9U,0x16000315U,0x910308a0U,0xc8e0000bU,0x67726852U,0x9080fa02U,0x51403921U,0xda865401U,\n  0x3425a002U,0x0d292450U,0x3c9e6024U,0xaafc828fU,0xc2382804U,0x9812200aU,0x8e0816e7U,0x19665680U,\n  0x619401cfU,0x083dec91U,0x0ea47ca0U,0x209b9e9aU,0x451e0238U,0x00000245U\n);\n\nconst int MSG_LEN = 290;\nuint msg_char(int k) {\n  k *= 5;\n  int i = k >> 5;\n  int j = k & 31;\n  uint w = MSG_DATA[i] >> j;\n  int n = min(5,32 - j);\n  if (n == 5) {\n    return w & 31U;\n  } else {\n    return ((MSG_DATA[i + 1] & ((1U << (5 - n)) - 1U)) << n) | (w & ((1U << n) - 1U));\n  }\n}\n\nfloat rnd(uint x,uint y,uint z) {\n    uint q = (x + 1664525U*y) ^ 1664525U*z;\n\tq = ((q*1664525U) % 1013904223U) ^ 0xdeadbeefU;\n    q = (q*1664525U) % 1013904223U;\n\treturn float(q) / 1013904223.0;\n}","name":"Common","description":"","type":"common"}]}