{"ver":"0.1","info":{"id":"7dcyDM","date":"1653522695","viewed":70,"name":"30 Minutes 5/25","username":"scry","description":"Timelapse: https://twitter.com/Scrygl/status/1529611318357110787","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","shadows","scrygl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////////////\n#define time iTime*1.\n#define pi 3.14159265\n#define deg pi/180.\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nfloat sdBox(vec3 p, vec3 s) {\n    return max(abs(p.z)-s.z,max(abs(p.x)-s.x,abs(p.y)-s.y));\n}\n\nvec3 cpos(vec3 p) {\n    //vec3 cp = vec3(0.);\n    p.z -= 3.;\n    //p.yz *= r2d(-0.2);\n    //p.xz *= r2d(time/7.);\n    return p;\n}\n\nvec3 lpos(vec3 cp) {\n    vec3 l = vec3(0.,0.6,0.);\n    \n    l -= cpos(vec3(0.));\n    \n    l.xz += vec2(sin(time*0.3),cos(time*0.3))*1.4;\n    l.yz *= r2d(0.2);\n    return l;\n}\n\nvec4 map(vec3 p) {\n    vec3 o = p;\n    //p.z -= 3.;\n    \n    p = cpos(p);\n    p.yz *= r2d(-0.2);\n    p.xz *= r2d(time/7.);\n    \n    float d = sdBox(p,vec3(0.3));\n    d = min(d,p.y+0.6);\n    d = min(d,length(p+vec3(0.,-1.8,0.))-1.);\n    vec3 sb = vec3(0.1);\n    for (int i=0;i<4;i++) {\n        p = abs(p)-sb*3.;\n        d = min(d,sdBox(p,vec3(sb)));\n        sb *= 0.5;\n        sb.x += 0.01+cos(time+o.y)*0.02;\n        sb.y += 0.01;\n        sb.z += 0.01+sin(time+o.y)*0.02;\n    }\n    \n    d = min(d,length(p+vec3(0.,-1.8,0.))-1.);\n    d = min(d,length(o-lpos(vec3(0.))+vec3(0.,0.2,0.))-0.04);\n    //d = min(d,o.y+1.);\n    return vec4(p,d);\n}\n\nvec2 RM(vec3 ro, vec3 rd, float side) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<90;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w*side;\n        dO += dS;\n        ii += 0.01;\n        if (dO > 100. || dS < 0.001 ) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001,0.);\n    return normalize(vec3(\n        map(p-h.xyy).w-map(p+h.xyy).w,\n        map(p-h.yxy).w-map(p+h.yxy).w,\n        map(p-h.yyx).w-map(p+h.yyx).w\n    ));\n}\n\nfloat shadow(vec3 p, vec3 n, vec2 d) {\n    vec3 l = lpos(vec3(0.));\n    vec3 rd = normalize(l-p);\n    float dx = RM(p-n*0.003,rd,1.).x;\n    float s = 1.;\n    if (length(dx) > length(l-p)) {\n        s = 0.;\n    }\n    return s;\n}\n\nvec3 colo(vec3 p, vec3 n, vec2 d) {\n    vec3 col = 1.-d.xxx/10.;\n    col -= n.yxz;\n    col -= shadow(p,n,d);\n    col = clamp(col,0.,1.);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv,0.8));\n    vec2 d = RM(ro,rd,1.);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    col += colo(p,n,d);\n    float rl = 0.99;\n    for (int i=0;i<3;i++) {\n        ro = p-n*0.003;\n        rd = reflect(rd,n);\n        d = RM(ro,rd,1.);\n        p = ro+rd*d.x;\n        n = calcNorm(p);\n        col += colo(p,n,d)*rl;\n        rl *= rl;\n    }\n    col *= 0.7;\n    //col += 1.-d.x/10.;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}