{"ver":"0.1","info":{"id":"NtBXDz","date":"1627400124","viewed":445,"name":"Highway to Proxima Centauri","username":"evvvvil","description":"Highway to Proxima Centauri - Result of an improvised live coding session on Twitch\nLIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 21:00 Uk time:\nhttps://www.twitch.tv/evvvvil_\n","likes":20,"published":1,"flags":0,"usePreview":1,"tags":["tunnel","demoscene","glow","material","art","highway","electricity","battery","building","monumental","techy","deco","nouveau"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Highway to Proxima Centauri - Result of an improvised live coding session on Twitch\n// LIVE SHADER CODING, SHADER SHOWDOWN STYLE, EVERY TUESDAYS 21:00 Uk time: \n// https://www.twitch.tv/evvvvil_\n\n// \"I can smell the pigs around the corner, on the shortness of your breath.\" - Johnny Hobbo and the freight trains\n\nvec2 z,v,e=vec2(.00035,-.00035);float t,tt,b,gg,bb,g,tn=0.,r=1.;vec3 np,bp,pp,op,po,no,al,ld,gr,vp;\nvec4 c=vec4(.85,-3,5,.0);\nfloat bo(vec3 p, vec3 r){ p=abs(p)-r;return max(max(p.x,p.y),p.z); }\nfloat smin(float a,float b,float k){ float h=max(0.,k-abs(a-b));return min(a,b)-0.25*h*h/k;}\nfloat smax(float a,float b,float k){ float h=max(0.,k-abs(-a-b));return max(-a,b)+0.25*h*h/k;}\nvec2 smin( vec2 a, vec2 b,float k ){ float h=clamp(.5+.5*(b.x-a.x)/k,.0,1.);return mix(b,a,h)-k*h*(1.0-h);}\nmat2 r2(float r){return mat2(cos(r),sin(r),-sin(r),cos(r));}\nvec4 texNoise(vec2 uv,sampler2D tex ){ float f = 0.; f+=texture(tex, uv*.125).r*.5; f+=texture(tex,uv*.25).r*.25; //Funciton simulating the perlin noise texture we have in Bonzomatic shader editor, written by yx\n                       f+=texture(tex,uv*.5).r*.125; f+=texture(tex,uv*1.).r*.125; f=pow(f,1.2);return vec4(f*.45+.05);}\nvec2 mp( vec3 p,float ga)\n{\n  p.xy*=r2(sin(p.z*.5)*.2);\n  vec2 h,t=vec2(bo(p,vec3(5,5,20)),1); //MAIN OUTTER BOX  \n  t.x=max(abs(t.x)-.2,abs(abs(p.x)-4.)-1.5); //CUT BOX INTO HOLLOW\n  t.x=max(t.x,-(abs(p.y)-2.)); //CUT MIDDLE OF BOX TO LEAVE JUST CORNERS\n  h=vec2(length(p.xy)-.05,0); //LONG INFINITE THIN CYLINDER ALONG Z AXIS\n  pp=p; //NEW POSTION PP FOR ROTATOR WHICH IS JUST THE CROSS BUILDING THING\n  pp.xy=abs(pp.xy); //SIMETRY CLONE TO GET X cross\n  pp.xy*=r2(-.785);   //GET X CROSS BY ROTATING 45 DEG\n  pp.z=mod(pp.z-tt,10.)-5.;  //INFINITE WHOLE SCENE ALONG Z\n  gr=clamp(cos(pp*15.),-.5,.5)*.01;//GREEBLE\n  float rotator=bo(pp,vec3(.4+gr.y,15,.4+gr.y));  //ROTATOR / CROSS \n  float cut=-(abs(abs(pp.y)-3.)-.5); //CROSS CUT MAIN\n  rotator=max(rotator,cut); //CUT CROSS \n  float cutter=length(pp.xz)-.2+gr.y*2.; \n  rotator=smax(cutter,rotator,.45); //CROSS / ROTATOR CUT CORE\n  vec3 rp=bp=pp;bp.y-=3.; //POSITON FOR LINES ALONG CROSS\n  rp.y=sin(pp.y*7.5)*.2;  //WEIRD SIN REPETITION INSTEAD OF MODULO\n  rp.x=abs(rp.x)-.25;   //REPAET POS ALONG X\n  h.x=min(h.x,.8*max(abs(length(bp)-.7)-.04,-(abs(abs(bp.y)-.15)-.05))); //BLACK SPHERE ENDS\n  rotator=smax(length(rp.xy)-.075,rotator,.05);  //holes in ROTATOR  \n  rp.z=abs(rp.z)-.35;  //REPEAT POS ALONG Z ONCE\n  h.x=smin(h.x,.8*(length(rp.xz-vec2(0,.12+gr.y*5.))-.03),.023); //BLACK GREEBLE LINES  \n  bp=pp;bp.x+=3.;  //BLACK SQUARES ON SIDES AND TOP BOTTOM POSITION\n  float blackSquares=bo(bp-vec3(0,5,0),vec3(1.-gr.z,20,10.)); \n  blackSquares=min(blackSquares,bo(bp-vec3(6.5,0,0),vec3(1.-gr.z,20,10.))); //BLACK SQUARES BOTTOM/TOP AND ON SIDES\n  bp.y=mod(bp.y,.5)-.35;  //CUTTERE POSITION FOR BLACK SQUARES\n  h.x=min(h.x,max(blackSquares,-(abs(bp.y)-.05)));  //CUT BLACK SQUARES OT REVEAL GLOWY CORE INSIDE\n  bp=pp;bp.x=abs(bp.x)-1.; //WHITE BITS OUTTER POSITION\n  bp.z=abs(bp.z)-1.; //REPEAT WHITE BITS ONCE ALONG Z\n  t.x=smin(t.x,.8*max(bo(bp,vec3(.2-gr.y*2.,10,.2+gr.x*3.)),-(abs(bp.x)-.05)),.5); //WHITE BITS OUTTER\n  t.x=smin(rotator,t.x,0.1);  //ADD CROSS / ROTATOR TO WHOLE SCENE\n  t=smin(t,h,.1); //MERGE BOTH MTERIAL IDS TOGETHER WITH SMOOTHMIN VEC2 so not only smin geom but material id too\n  if(length(pp.xz)<.2) tn=texNoise(pp.xy*.5-tt*.3,iChannel0).r*.3; //PERLIN TEXNOISE TO DO ELECTRICTY THING\n  b=sin(pp.y-tt*2.); //SOME DEFORMER\n  bp=pp;bp.xz=abs(bp.xz)-max(0.02,tn-b*.09); //ELECTRICITY POSITION\n  h=vec2(length(bp.xz),2); //GLOW BITS  \n  g+=0.1/(0.1+h.x*h.x*(100.-90.*b))*ga;\n  blackSquares+=.3;  //CHEAP WAY TO GET CORE REUSING THE BLACK SQUARES with distance field offset to push them back\n  g+=0.1/(0.1+blackSquares*blackSquares*30.)*ga; //BLACK SQAURE CORE\n  h.x=min(h.x,blackSquares);\n  vp=mix(vec3(-4.4,1.8,6),vec3(3,-1,6),bb)+cos(tt)*.2; //CAR MOVING POSITON\n  vec3 cap=(p-vp)*4.;//CAR MOVING POSITON\n  cap.z=mod(cap.z+tt*5.,30.)-15.;//CAR MOVING POSITON MADE REPEATED ALONG Z\n  cap.xy*=r2(mix(-.5,-6.5,bb)+cos(tt)); //ROTATE CAR ACCORDINGLY\n  cap.xz*=r2(-cos(tt*.5)*.2);//ROTATE CAR ACCORDINGLY    \n  h.x=min(h.x,max(.7*max(length(rp.xy)-.03+rp.z*.02,abs(pp.z)-max(0.55,0.55+b)),cut)); //WHITE LINES   \n  bp=cap+vec3(0,0,1.);bp.x=abs(bp.x)-.75;  //CAR PIECES POSITION\n  float car=bo(bp,vec3(.2+gr.z*3.,.1-gr.x*5.-gr.z,1.35)); /////////////////////////////CARRRRRR\n  gr=clamp(sin(cap*10.),-.5,.5)*.1; //CAR GREEBLE\n  car=smin(car,bo(cap,vec3(1.+gr.z,.1+gr.z,1)),.5); //CAR PIECE\n  car=smin(car,length(abs(cap)-vec3(0,0,.7))-.6,.5);//CAR PIECE\n  car=smax(length(abs(cap)-vec3(0,0,1.))-.4,car,.5);//CAR CUTTER  \n  float lightTubes=0.7*max(length(bp.xy)-(1.+sin(cap.z*1.5-tt*5.))*.2+(cap.z-1.)*.15,-cap.z+1.1); //CAR GLOW ROCKET ENGINE\n  car=min(car,lightTubes); //CAR GLOW ROCKET ENGINE\n  gg+=0.1/(0.1+lightTubes*lightTubes*(50.+cos(clamp(cap.z,1.,50.)*1.5-tt*5.)*49.))*ga;  //CAR GLOW ROCKET ENGINE ADD GLOW\n  float balls=length(abs(cap)-vec3(0,0,.9))-.4; //BALLS ON FRONT AND BACK OF CAR\n  g+=0.1/(0.1+balls*balls*(50.-sin(abs(cap.z)-tt*5.)*49.))*ga; //GLOW BALLS\n  car=min(car,balls); //GLOW BALLS\n  h.x=min(h.x,car/4.);//ADD CAR TO REST OF SCENE /4. AS IT'S BEEN SCALED DOWN A LOT\n  t=t.x<h.x?t:h;  \n  return t;\n}\nvec2 tr( vec3 ro,vec3 rd)\n{\n  vec2 h,t=vec2(.1);\n  for(int i=0;i<128;i++){\n    h=mp(ro+rd*t.x,1.);\n    if(h.x<.0001||t.x>30.) break;\n    t.x+=h.x;t.y=h.y;\n  }\n  if(t.x>30.) t.y=-1.;\n\treturn t;\n}\n#define a(d) clamp(mp(po+no*d,0.).x/d,0.,1.)\n#define s(d) smoothstep(0.,1.,mp(po+ld*d,0.).x/d)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv=(fragCoord.xy/iResolution.xy-0.5)/vec2(iResolution.y/iResolution.x,1);   \n  tt=26.21+mod(iTime,53.);\n  bb=smoothstep(0.,1.,clamp(cos(tt*.35+.3),-.25,.25)*2.+.5);  \n  vec3 ro=mix(vec3(1,-2,10),vec3(-1,1,10),bb),cw=normalize(vec3(cos(tt*.4)*4.,cos(tt*.4)*4.+3.,0)-ro),\n  cu=normalize(cross(cw,vec3(0,1,0))),cv=normalize(cross(cu,cw)),rd=mat3(cu,cv,cw)*normalize(vec3(uv,.5)),co,fo;\n  co=fo=vec3(.1,.12,.13)-length(uv)*.1-rd.y*.1;\n  ro.xy*=r2(cos(pp.z*.5)*.2);\n  vec3 lp=ro;\n  z=tr(ro,rd);t=z.x;\n  if(z.y>-1.){\n    po=ro+rd*t;\n    no=normalize(e.xyy*mp(po+e.xyy,0.).x+e.yyx*mp(po+e.yyx,0.).x+e.yxy*mp(po+e.yxy,0.).x+e.xxx*mp(po+e.xxx,0.).x);\n    ld=normalize(lp-po);   \n    v=pp.xz*.2;\n    for(int i=0;i<3;i++){\n      v=abs(v)-1.0;\n      v*=r2(ceil(sin(v.y)));\n      v*=2.;\n      r=min(r,ceil(abs(sin(v.x*5.23))-.3));\n    }    \n    al=mix(vec3(.0),vec3(.75)-r,min(1.,z.y));\n    if(z.y>1.) al=vec3(.5);\n    float dif=max(0.,dot(no,ld)),\n    fr=pow(1.+dot(no,rd),4.),\n    sp=pow(max(dot(reflect(-ld,no),-rd),0.),40.),\n    attn=1.-pow(min(1.,length(lp-po)/10.),4.0);\n    co=attn*mix(sp+al*(a(.1)+.2)*(dif*vec3(1,.86,.7)+s(1.)),fo,min(fr,.5));\n    co=mix(fo,co,exp(-.0003*t*t*t));\n  }\n\tfragColor = vec4(pow(co+g*vec3(1,.5,.1)*.2+gg*.2,vec3(.65)),1);\n}","name":"Image","description":"","type":"image"}]}