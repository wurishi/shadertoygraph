{"ver":"0.1","info":{"id":"lcjSzd","date":"1706723815","viewed":55,"name":"Perlin 2D steps","username":"Coedo","description":"step noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(float p) {\n    return fract(sin(p) * 100000.0) * 2. - 1.;\n}\n\nvec2 rand2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return normalize(-1.0 + 2.0 * fract(sin(st)*43758.5453123));\n}\n\nfloat smootherstep(float x) {\n    x = clamp(x, 0., 1.);\n    return x * x * x * (x * (x * 6. - 15.) + 10.);\n}\n\nfloat noise(vec2 point) {\n    vec2 p = floor(point);\n    vec2 f  = fract(point);\n    \n    vec2 p0 = p + vec2(0., 0.);\n    vec2 p1 = p + vec2(1., 0.);\n    vec2 p2 = p + vec2(0., 1.);\n    vec2 p3 = p + vec2(1., 1.);\n\n    float tx0 = f.x;\n    float ty0 = f.y;\n    \n    float tx1 = tx0 - 1.;\n    float ty1 = ty0 - 1.;\n    \n    vec2 g0 = rand2(p0);\n    vec2 g1 = rand2(p1); \n    vec2 g2 = rand2(p2); \n    vec2 g3 = rand2(p3); \n    \n    float v0 = dot(g0, vec2(tx0, ty0));\n    float v1 = dot(g1, vec2(tx1, ty0));\n    float v2 = dot(g2, vec2(tx0, ty1));\n    float v3 = dot(g3, vec2(tx1, ty1));\n   \n    float sx = smootherstep(f.x);\n    float sy = smootherstep(f.y);\n    \n    //return v0;\n    \n    return mix(\n        mix(v0, v1, sx),\n        mix(v2, v3, sx),\n        sy\n    ) * sqrt(2.);\n}\n\n#define scale 3.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\t\n    float noise = noise(uv * scale + iTime) * 0.5 + 0.5;\n    noise = floor(noise * 11.0);\n    noise = noise / 10.0;\n\n\n    vec3 col = vec3(noise);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}