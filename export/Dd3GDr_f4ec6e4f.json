{"ver":"0.1","info":{"id":"Dd3GDr","date":"1677135547","viewed":67,"name":"Fractal Blob","username":"jeffpeck","description":"a julia set with low iterations and cycling colors","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n// https://gist.github.com/983/e170a24ae8eba2cd174f\nvec3 rgb2hsv(vec3 c)\n{\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\nvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat cy = .1;\nfloat cx = .4;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv *= 4.;\n\n    vec2 c = .4+iMouse.xy / iResolution.xy;\n\n    c *= vec2(cos(iTime), sin(iTime));\n    c += sin(iTime) * .01;\n\n    const int maxIterations = 10;\n    int iteration = 0;\n\n    float xtemp = 0.0;\n    for (int i = 0; i < maxIterations; i++) {\n        if (uv.x + uv.y > 16.) {\n            break;\n        }\n\n        xtemp = (uv.x * uv.x) - (uv.y * uv.y);\n        uv.y = (2. * uv.x * uv.y) + c.y;\n        uv.x = xtemp + c.x;\n        iteration++;\n    }\n\n    float intensity = float(iteration) / float(maxIterations);\n\n    vec3 color = hsv2rgb(\n        vec3(float(intensity * sin(iTime * .2)),\n        1.,\n        intensity)\n    );\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}