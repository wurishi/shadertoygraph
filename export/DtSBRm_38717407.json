{"ver":"0.1","info":{"id":"DtSBRm","date":"1693862989","viewed":55,"name":"tvg_rotatingPentagram_neon","username":"troye","description":"testing some stuff","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float rotation) {\n\tfloat sine = sin(rotation);\n\tfloat cosine = cos(rotation);\n\tmat2 rotator = mat2(cosine, sine, -sine, cosine);\n\treturn rotator * v;\n}\n\n//thanks https://iquilezles.org/articles/distfunctions2d/\nfloat sdPentagon( in vec2 p, in float r )\n{\n    vec3 k = vec3(0.809016994,0.587785252,0.726542528);\n    p.x = abs(p.x);\n    p -= 2.0*min(dot(vec2(-k.x,k.y),p),0.0)*vec2(-k.x,k.y);\n    p -= 2.0*min(dot(vec2( k.x,k.y),p),0.0)*vec2( k.x,k.y);\n    p -= vec2(clamp(p.x,-r*k.z,r*k.z),r);    \n    return length(p)*sign(p.y);\n}\n\nvec3 drawRotPent(vec2 uv,vec2 pos, float size, float timeModulate){\n    uv=rotate(uv,iTime*timeModulate);\n    float sd=sdPentagon(uv,size);\n    sd=abs(sd);\n    sd=sin(sd*16.0 + iTime*8.0*timeModulate)/16.0;\n    //float result = smoothstep(0.01,0.02,sd);\n    float result =sd;\n    \n    result=0.1/result;\n    // Time varying pixel color\n    return vec3(result,result,result);\n}\n\nvec3 pallete(float t){\n    vec3 a=vec3(0.500,0.500,0.500);\n    vec3 b=vec3(0.500,0.500,0.500);\n    vec3 c=vec3(1.000,1.000,1.000);\n    vec3 d=vec3(0.000,0.333,0.667);\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec3 finalcol=vec3(0.,0.,0.);\n    for(float i=0.0;i<2.0;i++){\n        //uv=fract(uv*1.5)-0.5;\n        uv=rotate(uv,iTime);\n\n\n        vec3 pent1 = drawRotPent(uv,vec2(0.0,0.0),0.5,0.2);\n        vec3 pent2 = drawRotPent(uv,vec2(0.0,0.0),0.20,-0.1);\n        //vec3 pent2 = drawRotPent(uv,vec2(0.0,0.0),1.0,-1.0);\n\n        vec3 col=pallete(length(uv))*(pent1+pent2);\n        finalcol+=(col/(i+1.));\n    }\n    // Output to screen\n    fragColor = vec4(finalcol,1.0);\n}\n","name":"Image","description":"","type":"image"}]}