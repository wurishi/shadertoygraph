{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec2 fViewportDimensions;\n\nconst float eye_inner = 0.162;\nconst float eye_outer = 0.215;\n\nfloat calc_eye( vec2 pos, vec2 uv, vec2 mouse ) {\n   uv -= pos;\n   float dist1 =    length( uv ) - eye_outer;\n   float dist2 = -( length( uv ) - eye_inner );\n\t\n   vec2 look = ( mouse - pos ) * 0.15;\n   look *= min( 0.11, length( look ) ) / length( look );\n\t\n   float dist3 =    length( uv - look ) - 0.035;\n   return min( max( dist1, dist2 ), dist3 );\n}\n\nfloat calc_mouth( vec2 uv ) {\n   uv += vec2( 0.015, -0.3325 );\n   float w = 0.185;\n   return length( ( vec2( clamp( uv.x, -w, w ), clamp( uv.y, -0.01, 0.01 ) ) - uv ) ) - 0.0145;\n}\n\nfloat calc_eyebrow( vec2 pos, vec2 uv ) {\n   uv -= pos;\n   float w = 0.16;\n   vec2 dist = clamp( abs( uv + vec2(0,( eye_outer - eye_inner) / 2.0) ) - vec2( w, (eye_outer - eye_inner) / 2.0 ), 0.0, 1.0 );\n\n   float r = 0.061;\n   float r2 = eye_outer - eye_inner;\n   \n   vec2 arc_center = vec2( w, -r-r2 );\n   \n   float dist1 =    distance( uv, arc_center ) - r-r2;\n   float dist2 = -( distance( uv, arc_center ) - r );\n   \n   float angle = -3.0;\n   vec2 norm = vec2( cos(angle), sin(angle) );\n   float  pd = -dot( norm, arc_center + vec2(0,r*sin(angle)/norm.y) );\n\n   return min( max( dist.x, dist.y ), max( max( dist1, dist2 ), dot( uv, norm ) + pd ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord.xy / iResolution.xy;\n   vec2 mouse = iMouse.xy / iResolution.xy;\n\n   float aspect = iResolution.x / iResolution.y;\n\n   uv -= 0.5;\n   uv.x *= aspect;\n   uv.y *= -1.0;\n    \n   mouse -= 0.5;\n   mouse.x *= aspect;\n   mouse.y *= -1.0;\n\n   float eye1 = calc_eye( vec2( -0.465, 0 ), uv, mouse );\n   float eye2 = calc_eye( vec2( +0.437, 0 ), uv, mouse );\n   float mouth = calc_mouth( uv );\n   float brow1 = calc_eyebrow( vec2( -0.522, -eye_inner ), uv );\n   float brow2 = calc_eyebrow( vec2( 0.3805, -eye_inner ), uv );\n   float dist = min( min(min( eye1, eye2 ), min( mouth, brow1 ) ), brow2 );\n   \n   float sharpness = sqrt(2.0) / 2.0;\n   float res = clamp( 1.0 - dist * sharpness * iResolution.y, 0.0, 1.0 );\n\t\n   fragColor = vec4( res, res, res, 1.0 );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Msf3WN","date":"1370293654","viewed":470,"name":"Procedural Disapproval","username":"h3r2tic","description":"à² _à² ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","disapproval","missioncritical","production","soiherduliekmudkipz"],"hasliked":0,"parentid":"","parentname":""}}