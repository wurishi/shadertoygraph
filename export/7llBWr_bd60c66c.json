{"ver":"0.1","info":{"id":"7llBWr","date":"1650749245","viewed":47,"name":"candyland","username":"laurenpaige","description":"lauren's gen art","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["candy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (2.*fragCoord - R)/R.y;\n    \n    float c = length(uv) - 0.5;\n    float cs = smoothstep(0.,1.5*fwidth(c),c);\n   \n    \n    float c2 = length(uv) - 0.05;\n    float cs2 = 1.-smoothstep(0.,1.5*fwidth(c2),c2);\n    \n    float c3 = length(uv);\n    float cs3 = smoothstep(0.7,0.4,c3);\n\n\n    vec3 shadow = vec3(0.3);\n    vec3 background = vec3(247., 190., 245.)/255.;\n    //vec3 background2 = vec3()/255.;\n    vec3 candy = vec3(32., 148., 201.)/255.;\n    vec3 candy2 = vec3(168., 17., 163.)/255.;\n    \n    vec3 center = vec3(9., 103., 145.)/255.;\n    \n    vec3 col = vec3(cs);\n    \n    float trans = (smoothed_square(0.08,iTime)+1.)/2.;\n    float trans2 = (smoothed_square(0.3,iTime)+1.)/2.;\n    //trans = 1.;\n    \n    vec2 uvR = rot(uv,sin(length(uv)+iTime),vec2(0.));\n    float a = getAngle(uvR);\n    float lines = (sin(a*2.*PI*10.)+1.)/2.;\n    \n    \n    vec3 candyO = mix(candy,candy2,trans);\n\n\n    vec3 inner = mix(candyO,vec3(1.),lines);\n    //col = vec3();\n    col = mix(background,candy,1.-trans2);\n    col = mix(col,shadow,cs3);\n    \n    col = mix(inner,col,cs);\n    \n    col = mix(col,center,cs2);\n    \n    //col = vec3(trans);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n\n#define PI 3.1415926538\n\nfloat getAngle(vec2 v1)\n{\n    //return atan(v1.x,v1.y) -atan(v2.x,v2.y);\n    return mod( atan(v1.x,v1.y) -atan(1.,0.), PI*2.)/PI/2.; //0 ... TWOPI\n    //return mod( atan(v1.x,v1.y) -atan(v2.x,v2.y), TWOPI) - PI; //-pi to +pi \n}\n\nvec2 rot(vec2 uv,float a,vec2 origin){\n    \n    vec2 p = (uv - origin);\n    \n    float c = cos(a);\n    float s = sin(a);\n    \n\treturn mat2(c,-s,s,c)*p + origin;\n}\n\nfloat smoothed_square(float d, float x)\n{\n    return (1.0 - d) * 2.0 * atan(sin(x) / d) / PI;\n}","name":"Common","description":"","type":"common"}]}