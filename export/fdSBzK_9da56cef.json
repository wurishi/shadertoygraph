{"ver":"0.1","info":{"id":"fdSBzK","date":"1646638655","viewed":118,"name":"Isometric Transition","username":"choopwhoop","description":"isometric transition shader.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["isometricmatrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float PI = 3.14159;\n    float angle = PI/6.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //shortened iResolution\n    vec2 ir = iResolution.xy;\n\n    //isometric matrix\n    mat2 iso = mat2(\n    cos(angle),-sin(angle)*(ir.x/ir.y),\n    cos(angle),sin(angle)*(ir.x/ir.y)\n    );   \n    \n    //matrix multiplied by uv  \n    uv = iso*uv;  \n    \n    //scale the uv\n    vec2 newuv = mod(uv*3.0,1.0);\n    \n    //textures\n    vec4 imageA = texture(iChannel0, newuv); \n    vec4 imageB = texture(iChannel1, newuv);\n    vec4 imageC = texture(iChannel2, uv);\n    \n    //animated transition value (imageC is used to create grainy contour)\n    float c = smoothstep(-0.75+iTime*0.5,0.0+iTime*0.5,uv.x*imageC.x);\n    \n    //transition value as vec4\n    vec4 t = vec4(c,c,c,1.0);\n    \n    // Output to screen\n    fragColor = mix(imageA,imageB,t);\n    \n    //fragColor = mix(vec4(1.0,0.0,0.0,1.0),vec4(1.0,1.0,0.0,1.0),t);  \n\n}","name":"Image","description":"","type":"image"}]}