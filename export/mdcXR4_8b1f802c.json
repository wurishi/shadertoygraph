{"ver":"0.1","info":{"id":"mdcXR4","date":"1679438618","viewed":97,"name":"edg16 palette posterization","username":"zzox","description":"posterizing the video to the edg16 palette","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["posterization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 colors[16];\n\nfloat minDist = 3.;\nvec4 selected;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec4 color = texture( iChannel0, fragCoord.xy / iResolution.xy );\n\t\n    colors[0] = vec4(25. / 255., 61. / 255., 63. / 255., 1.);\n    colors[1] = vec4(63. / 255., 40. / 255., 50. / 255., 1.);\n    colors[2] = vec4(50. / 255., 115. / 255., 69. / 255., 1.);\n    colors[3] = vec4(116. / 255., 63. / 255., 57. / 255., 1.);\n    colors[4] = vec4(158. / 255., 40. / 255., 53. / 255., 1.);\n    colors[5] = vec4(79. / 255., 103. / 255., 129. / 255., 1.);\n    colors[6] = vec4(4. / 255., 132. / 255., 209. / 255., 1.);\n    colors[7] = vec4(229. / 255., 59. / 255., 68. / 255., 1.);\n    colors[8] = vec4(99. / 255., 198. / 255., 77. / 255., 1.);\n    colors[9] = vec4(184. / 255., 111. / 255., 80. / 255., 1.);\n    colors[10] = vec4(251. / 255., 146. / 255., 43. / 255., 1.);\n    colors[11] = vec4(228. / 255., 166. / 255., 114. / 255., 1.);\n    colors[12] = vec4(44. / 255., 232. / 255., 244. / 255., 1.);\n    colors[13] = vec4(175. / 255., 191. / 255., 210. / 255., 1.);\n    colors[14] = vec4(255. / 255., 231. / 255., 98. / 255., 1.);\n    colors[15] = vec4(255. / 255., 255. / 255., 255. / 255., 1.);\n\n    for (int i = 0; i < 16; i++) {\n        float dist = pow(abs(color.r - colors[i].r), 2.) + pow(abs(color.g - colors[i].g), 2.) + pow(abs(color.b - colors[i].b), 2.);\n        if (dist < minDist) {\n            minDist = dist;\n            selected = colors[i];\n        }\n    }\n\n\t\n\tfragColor = selected;\n}","name":"Image","description":"","type":"image"}]}