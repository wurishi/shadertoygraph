{"ver":"0.1","info":{"id":"4ftyWB","date":"1731085890","viewed":39,"name":"theguy888's 3d Julia set","username":"TheGuy888","description":"click and drag\nc_real varies on the z axis\nc_imaginary varies with time","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","crossproduct","raw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Mandelbrot cross product 3d\" by TheGuy888. https://shadertoy.com/view/4XBBDG\n// 2024-11-08 16:47:33\n\n// Fork of \"Mandelbrot cross product formula\" by IgorZdrowowicz. https://shadertoy.com/view/lXSBRt\n// 2024-10-25 12:57:00\n\nconst float pi=3.14159;\n\nvec2 tiltPt(vec2 p,float r){\n    float t=atan(p.y/p.x)+r;\n    if(p.x<0.){t+=pi;}\n    return length(p)*vec2(cos(t),sin(t));}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 1.2 -.4;\n    uv.x *= iResolution.x / iResolution.y; \n    \n    float sc = 3.;\n    vec2 os = vec2(-1.,0.0);\n    uv = uv * sc + os;\n    \n    float col=0.;\n    \n    vec2 angle= iMouse.z>0.\n        ? pi*((2.*iMouse.xy/iResolution.xy)-1.)\n        : iTime/vec2(1,3);\n    \n    for(float i=2.5;i>-2.5 && col==0.;i-=1./200.){\n        //tilt left/right\n        vec2 zr=tiltPt(vec2(uv.x,i),angle.x);\n        //tilt up/down\n        vec2 zr2=tiltPt(vec2(uv.y,zr.y),angle.y);\n        //initial xy coordinates\n        vec2 z = vec2(zr.x,zr2.x);\n        //complex constant; zr2.y = z axis\n        vec2 C = vec2(zr2.y,0.75*sin(iTime/5.));\n    \n    \n        for (int i = 0; i <250 && length(z)<10.; i++) {\n            z =vec2((z.x*z.x)-(z.y*z.y),2.*z.x*z.y)+C; \n        }\n        if (length(z)<10.){col=.2+(sin(i-.6)+1.)/2.5;}}\n        \n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}