{"ver":"0.1","info":{"id":"lctSzS","date":"1714092616","viewed":42,"name":"Hypno spiro circo","username":"b3n01t","description":"Hypnotic circles","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fft","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 60\n\nfloat Circle(vec2 uv, vec3 c) {\n    float d = length(uv-c.xy);\n    float w = .02;\n    return (4.-w) * (smoothstep(c.z, c.z - w, d-w/2.) *  smoothstep(c.z - w,c.z, d-w/2.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\nvec2 uv = ((gl_FragCoord.xy * 2.  - iResolution.xy)/iResolution.y) * 1.1;\n    vec3 bg = vec3(0);\n\n    vec2 p0 = vec2(0,0);\n    vec3 last =vec3(vec2(1,0),0);\n    for (int i = 0; i < N+1; i++) {\n        if(i>0){\n            bg += vec3(.8,.5,.3) *  vec3(Circle(uv,last));\n        }\n        float rNext = (1.-(float(i)/float(N)));\n        if (i%2 == 0) {\n            rNext *= -1.;\n        }\n\n        float f = .2*float(i);\n        vec2 c = last.xy  +  last.z * normalize(vec2(\n            cos(f * iTime ),\n            sin(f * iTime)\n        ));\n        \n        vec2 mC = c + rNext * normalize(vec2(\n            cos(f * iTime ),\n            sin(f * iTime)\n        ));\n\n        last = vec3(mC, rNext);\n    }\n\n    fragColor = vec4(bg, 1);\n}\n","name":"Image","description":"","type":"image"}]}