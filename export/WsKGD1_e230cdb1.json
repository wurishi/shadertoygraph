{"ver":"0.1","info":{"id":"WsKGD1","date":"1570178144","viewed":121,"name":"Palillos","username":"mago314","description":"A zooming fractal. I should improve the zooming motion to be more continuous, probably.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SIZE = 2.;\n\nvec2 foldUVs(vec2 uvs) {\n    if (uvs.x < 0.) uvs *= -1.;\n    uvs.x -= .5;\n    //mat2 m = mat2(0,1,-1,0);\n    //float ang = 6.28*iMouse.x/iResolution.x;\n    float ang = 3.141592*1./2.;\n    mat2 m = mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n    uvs *= m;\n    uvs *= SIZE;\n    return uvs;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    uv *= 1.;\n    float scale = 1.;\n    \n    float ang = 0.;\n    mat2 m = mat2(0.);\n    float s = 0.;\n    float t = 1.;\n\n    uv.y -= mix(.0, -1., t);//.5;\n    ang = mix(.0, -3.141592/2., t);//3.141592*1./2.;\n    m = mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n    uv *= m;\n    s = mix(1., 1./SIZE, t);\n    uv *= s; //SIZE;\n    scale *= s;\n    \n    //t = iMouse.x / iResolution.x;\n    t = fract(iTime);\n    //float t = 0.1;\n    \n    //uv.y -= mix(.0, -1., t);//.5;\n    //float a = mix(.5, -.5, t) * 3.141592;\n    //vec2 disp = vec2(cos(a),sin(a))*.5 - vec2(.0, .5);\n    vec2 disp = vec2(0., mix(.0, -1., t));\n    uv -= disp;\n    ang = mix(.0, -3.141592/2., t);//3.141592*1./2.;\n    m = mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n    uv *= m;\n    s = mix(1., 1./SIZE, t);\n    uv *= s; //SIZE;\n    scale *= s;\n    \n    vec3 col = vec3(0);    \n    float d = 1000.;\n    for (float i=0.; i<16.; i++) {\n        d = min(d, length(uv - vec2(clamp(uv.x,-.5,.5), 0.))/scale);\n        //if (abs(uv.y)<.002*scale && uv.x>0. && uv.x<.5) col = vec3(1,0,0);\n  \t    //if (abs(uv.x)<.002*scale && uv.y>0. && uv.y<.5) col = vec3(0,1,0);\n        uv = foldUVs(uv);\n        scale *= SIZE;\n    }\n    //col.x = d*10.;\n    col.x = smoothstep(2./iResolution.y,0.0,d);\n    //col.y = uv.y;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}