{"ver":"0.1","info":{"id":"WlcyW2","date":"1609885889","viewed":125,"name":"Cool Pseudotile Pattern","username":"oneshade","description":"Cool modification fo my shader \"[url=https://www.shadertoy.com/view/tsKfRc]Fractured Webcam[/url].\"","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["colorful","pattern","cool","pseudotile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Cool modification fo my shader \"Fractured Webcam\" (https://www.shadertoy.com/view/tsKfRc)\n\n// Hash from \"Hash without Sine\" by Dave_Hoskins (https://www.shadertoy.com/view/4djSRW)\nvec3 Hash23(in vec2 p) {\n    vec3 p3 = fract(vec3(p.xyx) * vec3(0.1031, 0.103, 0.0973));\n    p3 += dot(p3, p3.yxz + 33.33);\n    return fract((p3.xxy + p3.yzz) * p3.zyx);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = texture(iChannel0, uv).xy;\n    fragColor = vec4(Hash23(uv * 95.0), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 VectorField(in vec2 p) {\n    p *= 20.0;\n    return 0.001 * vec2(cos(p.x + p.y), sin(p.y - p.x));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = vec4(uv, 1.0, 1.0);\n    if (iFrame > 0) {\n        fragColor = texture(iChannel0, uv);\n        fragColor.xy += VectorField(fragColor.xy);\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}