{"ver":"0.1","info":{"id":"4tBBWw","date":"1515914184","viewed":1933,"name":"tuto 'think procedural'","username":"FabriceNeyret2","description":"Fragment program is evaluated at every pixel.\nSo, don't draw explicitly all objects, try to guess which can really cover the current pixel.\nIn particular, for regular structures use mod/fract rather than explicit loops.\n-> good resol-independent perfs.","likes":14,"published":3,"flags":0,"usePreview":0,"tags":["procedural","tuto","loopless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    O = vec4(0);\n    vec2 R = iResolution.xy; \n    \n#if 0\t// do not :\n    \n    for ( int j = 0; j< int(R.y); j+=20 )\n        for ( int i = 0; i< int(R.x); i+=20 ) {\n            if ( int(U.x)==i || int(U.y)==j ) O++;        // grid\n            if ( length(U-vec2(i,j)-10.) < 5. ) O.x++;    // disks\n        }\n\n#else    // do :\n    \n    vec2 V = mod(U, 20.);\n    O = vec4( V.x == .5 || V.y == .5 );                   // grid\n    if ( length(V-10.) < 5. ) O.x++;                      // disks\n\n#endif\n}","name":"Image","description":"","type":"image"}]}