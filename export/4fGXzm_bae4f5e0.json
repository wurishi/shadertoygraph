{"ver":"0.1","info":{"id":"4fGXzm","date":"1714933480","viewed":53,"name":"Modified-Kishimisu-Tutorial","username":"bigdwarf43","description":"A modified version of kishimisu's shader tutorial","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["flash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 pallete(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b *cos(6.28318 * (c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = (uv - 0.1) * 3.0;\n    uv.x *= iResolution.x / iResolution.y; \n    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for(float i=0.0; i< 4.0; i++){\n        \n        uv = fract(uv*1.5) - 0.5;\n        float d = length(uv) * exp(-length(uv0));\n        vec3 color = pallete(length(uv0) + i*.2 + iTime *.1);\n        \n        d = sin(d * 5. + iTime)/2.;\n        d = abs(d);\n        d = pow(0.01 /d, 1.2);\n        finalColor += color * d;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n\n\n}","name":"Image","description":"","type":"image"}]}