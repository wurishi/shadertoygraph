{"ver":"0.1","info":{"id":"MfjGWm","date":"1704311438","viewed":239,"name":"ex.06","username":"opqa","description":"looking out for a circle that moves depending on where you're looking for it : )","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n#define M_PI2 6.2831853071795864769252867675590\n\nvec3 getRamp(in float p) {\n    p = mod(p, 1.);\n    return vec3(.5)\n        + sin(\n            p * M_PI2 + M_PI2 * vec3(.1,.3,.5)\n        )\n        * .5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.x - vec2(.5) * vec2(1., iResolution.y / iResolution.x);\n    p /= 1.; // lazy zooming\n    vec3 col = vec3(0.);\n    float AT = atan(p.y, p.x);\n    float mm = cos(iTime*.05)/M_PI+3.;\n    for(int i = 0; i < 100; i++) {\n        float a = AT * abs(cos(iTime * .01)*.1) + sin(AT * .1 + iTime * 1.1);\n        vec2 np = (vec2(cos(a * 2.), sin(a * 3.01)) * .05) - p;\n        float n = mod(atan(np.x, np.y), M_PI2) / M_PI2;\n        float d = abs(length(np) - .25 + .025 * sin(AT * mm));\n        col += d > 0.001 ? vec3(0.001) : getRamp(n + AT * .0005)*(.005 * float(i) - d * 10.);\n        AT += M_PI2;\n    }\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}