{"ver":"0.1","info":{"id":"lcdXRM","date":"1713745869","viewed":52,"name":"Hard to factor","username":"Cotterzz","description":"Found this equation on quora and decided to turn it into a shader.\nCould be the foundation of a very interesting SDF.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["math","graph","equations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from https://www.quora.com/How-do-I-solve-the-following-equation-over-the-integers-x-3-y-2-left-2y-x-right-x-2-y-4-36\n\n#define x2 x*x\n#define x3 x*x*x\n#define x4 x*x*x*x\n#define x5 x*x*x*x*x\n#define x6 x*x*x*x*x*x\n#define x7 x*x*x*x*x*x*x\n\n#define y2 y*y\n#define y3 y*y*y\n#define y4 y*y*y*y\n#define y5 y*y*y*y*y\n#define y6 y*y*y*y*y*y\n#define y7 y*y*y*y*y*y*y\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 guv = (uv*20.0)-10.0;\n    float x = guv.x;\n    float y = guv.y;\n    \n    float result = (2.0 * x3 * y3)-(x4 * y2)-(x2 * y4) + 36.0;\n\n    // Output to screen\n    float blue = abs(min(result, 0.0))/1000.0;\n    float red = max(result, 0.0)/100.0;\n    float white = 1.0/(abs(result)+0.001);\n\n    fragColor = vec4(red+white, white, blue+white,1.0);\n}","name":"Image","description":"","type":"image"}]}