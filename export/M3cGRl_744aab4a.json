{"ver":"0.1","info":{"id":"M3cGRl","date":"1716877230","viewed":76,"name":"Hashes are Neat 02","username":"spenceryonce","description":"little pixel art animation with a simple hash function.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["math","pixel","hash","art","neat"],"hasliked":0,"parentid":"l3cGRl","parentname":"Hashes are Neat 01"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord -.5* iResolution.xy) / iResolution.y;\n    vec2 ouv = uv;\n    uv = uv+0.001;\n    uv = vec2(length(uv.x*uv.x+uv.y*uv.y));\n    uv *= 0.001+0.001*sin(abs(iTime))-0.005;\n    uv.y *= 0.007*cos(iTime*0.001);\n    uv.x += 0.0001*sin(iTime*0.001);\n\n    vec3 color = vec3(hash(uv), hash(uv + 0.1), hash(uv + 0.2));\n    \n    color = color * 1.0-vec3(smoothstep(0.3,0.3+0.01-2./iResolution.y,length(ouv)));\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}