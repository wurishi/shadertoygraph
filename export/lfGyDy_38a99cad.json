{"ver":"0.1","info":{"id":"lfGyDy","date":"1732311493","viewed":139,"name":"Magnify Glass Camera","username":"qalqi","description":"magnify camera, hold the glass and move","likes":0,"published":3,"flags":2,"usePreview":0,"tags":["magnify"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Center of the magnification\n    vec2 center = iMouse.xy/iResolution.xy;\n    if (iMouse.z <= 0.0) center = vec2(0.5, 0.5);  // Default center if mouse is not pressed\n    \n    // Magnification parameters\n    float radius = 0.15;  // Smaller radius for a more focused effect\n    float strength = 1.5;  // Adjusted for a subtle magnification\n    \n    vec2 d = uv - center;\n    float r = length(d);\n    \n    if (r < radius) {\n        // Improved magnification effect\n        float magnification = 1.0 - smoothstep(0.0, radius, r);\n        vec2 distortedUV = center + d / (1.0 + strength * magnification);\n        \n        // Sample the texture\n        vec4 color = texture(iChannel0, distortedUV);\n        \n        // Subtle glass effect\n        vec3 glassColor = vec3(0.98, 0.98, 1.0);  // Very slight blue tint\n        color.rgb = mix(color.rgb, color.rgb * glassColor, 0.1);\n        \n        // Add a subtle highlight\n        float highlight = smoothstep(radius, radius * 0.8, r) * 0.2;\n        color.rgb += highlight;\n        \n        fragColor = color;\n    } else {\n        // Add a subtle edge highlight\n        float edge = smoothstep(radius, radius + 0.003, r) - smoothstep(radius + 0.003, radius + 0.006, r);\n        vec4 color = texture(iChannel0, uv);\n        fragColor = mix(color, vec4(1.0), edge * 0.5);\n    }\n}","name":"Image","description":"","type":"image"}]}