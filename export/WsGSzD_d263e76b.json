{"ver":"0.1","info":{"id":"WsGSzD","date":"1574193708","viewed":119,"name":"Basic : Truchet","username":"Gijs","description":"Most basic truchet","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","tructet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash1( int n ) {\n    // integer hash copied from Hugo Elias\n\tn = (n << 13) ^ n;\n    n = n * (n * n * 15731 + 789221) + 1376312589;\n    return float( n & ivec3(0x7fffffff))/float(0x7fffffff);\n}\n\n//cross\nfloat tile1(vec2 uv){\n    float d = min(abs(uv.x),abs(uv.y));\n    return d;\n}\n\n//two circles\nfloat tile2(vec2 uv){\n    if(uv.y<-uv.x) uv.xy = -uv.xy;\n\tfloat d = abs(distance(uv,vec2(1,1))-1.);  \n    return d;\n}\n\n//rotation of tile2\nfloat tile3(vec2 uv){\n    return tile2(vec2(-uv.x,uv.y));\n}\n\nfloat truchet(vec2 p){\n    vec2  tile = floor(p);\n    float id   = tile.x*10000.+tile.y;\n\t      p   = (fract(p)-.5)*2.;\n   \n    float t = hash1(int(id));\n    float d = 1e20;\n    if(t<0.33){\n        d = tile1(p);\n    }else if(t<0.67){\n        d = tile2(p);\n    }else{\n        d = tile3(p);\n    }\n    \n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = cos(iTime*.5)*2.+3.;\n    vec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y*zoom;\n    \n    float e = zoom*2./min(iResolution.x,iResolution.y);\n   \tvec3 col = vec3(0);\n    \n  \tfloat d = truchet(uv);\n    \n    col = vec3(smoothstep(e*5.,e,d));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}