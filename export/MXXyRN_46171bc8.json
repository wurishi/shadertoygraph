{"ver":"0.1","info":{"id":"MXXyRN","date":"1725959893","viewed":36,"name":"Wave-motion","username":"emanuelfrost","description":"Waves","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave","motion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(float c, float w, float x){\n  return  smoothstep( c-w, c, x) - smoothstep( c, c+w, x);\n}\n\n//https://iquilezles.org/articles/functions/\nfloat cubicPulse( float c, float w, float x )\n{\n    x = abs(x - c);\n    if( x>w ) return 0.0;\n    x /= w;\n    return 1.0 - x*x*(3.0-2.0*x);\n}\n\nfloat line(float centerY, float thicknessTop, float thicknessBottom, float y){\n    return cubicPulse(centerY, y >= centerY ? thicknessTop : thicknessBottom, y);\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\n\n#define AMPLITUDE 1.0\nfloat wave(float x, float t, float frequency, float scale){\n    float time = 0.01*(-t*130.0);\n \n    float noi = AMPLITUDE * sin(x * frequency + time )*0.5;\n    \n    noi += sin(x*frequency*2.1 + t)*4.5;\n    noi += sin(x*frequency*1.72 + t*1.121)*4.0;\n    noi += sin(x*frequency*2.221 + t*0.437)*5.0;\n    noi += sin(x*frequency*3.1122+ t*4.269)*2.5;\n    \n    return map(noi, -16.5, 16.5, -scale, scale);\n}\n\nfloat waveLine(float centerY, float thicknessTop, float thicknessBottom, vec2 uv, float time, float waveFrequency, float modY, float fadeX){\n    float noise = wave(uv.x, time, waveFrequency, modY); \n    float waveLine = line(centerY, thicknessTop, thicknessBottom, uv.y+noise); \n    float fade = 1.0-cubicPulse(0.5, fadeX, uv.x);\n    return mix(waveLine, 0.0, fade);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 bgColor = vec3(1.0,1.0,1.0);\n    vec3 blackColor = vec3(0.0,0.0,0.0);\n    vec3 lineColor = vec3(1.0,1.0,1.0);\n    vec3 accentColor = vec3(0.17, 0.65, 0.71);\n    vec3 accentColorDark = mix(blackColor, accentColor, 0.9);\n    float accentAlpha = .70;\n    float lineAlpha = .60;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float centerY = 0.5;\n    float fade = 0.1;\n    \n    float line0 = waveLine(centerY, 0.02, 0.1, uv, iTime, 4.0, 0.05, 0.6);\n    float line1 = waveLine(centerY, 0.008, 0.035, uv, iTime+100.0, 8.0, 0.015, 0.7);\n    float line2 = waveLine(centerY, 0.008, 0.035, uv, iTime+300.0, 6.0, 0.045, 0.7);\n \n    vec3 col = mix(bgColor, accentColor, line0*accentAlpha);\n    vec3 col2 = mix(col, accentColorDark, line1*lineAlpha);\n    vec3 col3 = mix(col2, accentColorDark, line2*lineAlpha);\n    \n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col3, 1.0);\n}","name":"Image","description":"","type":"image"}]}