{"ver":"0.1","info":{"id":"wltcWn","date":"1608830266","viewed":83,"name":"Animated random colors grid","username":"Tarquin","description":"Random colors grid regenerated over time","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["grid","colors","random","randomcolors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Arthur Jacquin - 2020\n// https://www.linkedin.com/in/arthur-jacquin-631921153/\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = vec2(fragCoord.xy / iResolution.xy);\n    \n    float subdivisions = 10.0;\n    float xf = st.x * subdivisions;\n    float yf = st.y * subdivisions;\n\n    float rng = floor(sin(iTime * 0.3) * 5.0 + 6.0);\n\n    int x = int(xf) * int(rng);\n    int y = int(yf) * int(rng);\n\n    float r = random(vec2(x , x));\n    float g = random(vec2(x, y));\n    float b = random(vec2(y, y)); \n    \n    vec3 color = vec3(r, g, b);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}