{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float gRaymarchEpsilon = 0.001;\n//float gMusicSamplert\nvec2 GetUV();\nfloat plane(vec3 p, vec3 n)\n{\n\treturn dot(p,n);\n}\nfloat sphere(vec3 p, float radius)\n{\n\tfloat modval = 2. * radius + radius;\n\tp.xz = mod(p.xz, modval) - modval / 2.;\n\t\n\treturn length(p) - radius;\n}\n\n// distance estimator\nfloat DE(vec3 p)\n{\n\tfloat s0 = sphere(p, 0.25);\n\tfloat p0 = plane(p, normalize(vec3(0,1,0.1)));\n\treturn min(s0, p0);\n\treturn s0;\n}\n\nvoid raymarch( vec3 ray_start, vec3 ray_dir, out float depth, out float dist)\n{\n   vec3 point = ray_start;\n   \n\tdist = 1.0;\n\tdepth = 0.0;\n\tfor (int i = 0; i < 100; ++i)\n\t{\n\t\tif (dist < gRaymarchEpsilon) continue;\n\t\tvec3 point = ray_start + ray_dir * depth;\n\t\tdist = DE(point);\n\t\tdepth += dist;\n\t}\n}\n\nvec2 GetUV()\n{\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec2 uv = gl_FragCoord.xy;\n\tuv /= iResolution.xy;\n\tuv *= 2.0;\n\tuv -= 1.0;\n\tuv.x *= aspect;\n\t\n\treturn uv;\n}\n\nvec3 GetNormal(vec3 point)\n{\n\tfloat epsilon= 0.1;\n\tvec3 dx = vec3(epsilon,0,0);\n\tvec3 dy = vec3(0,epsilon,0);\n\tvec3 dz = vec3(0,0,epsilon);\n\treturn normalize(vec3(\n\t\tDE(point + dx)- DE(point - dx),\n\t\tDE(point + dy)- DE(point - dy),\n\t\tDE(point + dz)- DE(point - dz)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = GetUV();\n\t\t\n\tfloat camZ = 0.115 * sin(iTime) + 0.25 + 1. + 0.1;\n\tfloat camY = 0.115 * sin(iTime) + 0.45;\n\tvec3 camPos = vec3(0,camY, camZ);\n\tvec3 camDir = normalize(-camPos);\n\t\n    vec3 rayStart = camPos;\n    vec3 rayDir = normalize(vec3(uv,0) - rayStart);\n    \n    vec3 color = vec3(0);\n\tfloat depth;\n\tfloat dist;\n    raymarch(rayStart, rayDir, depth, dist);\n    if (dist < gRaymarchEpsilon)\n\t{\n\t\tvec3 n = GetNormal(rayStart + rayDir * depth);\n\t\tvec3 diffuseCol = vec3((uv + 1.) / 2., 0);\n\t\tvec3 specularCol = vec3(0.7,0.7,0.7);\n\t\tfloat shinyness = 128.;\n\t\t\n\t\tvec3 l = normalize(vec3(.5,1,1));\n\t\tvec3 dPara = n * dot(n, camDir);\n\t\tvec3 dPerp = camDir - dPara;\n\t\tvec3 r = normalize(-dPara + dPerp);\n\t\tcolor += diffuseCol * max(dot(n,l), 0.0);\n\t\tcolor += specularCol * pow(max(dot(n, r), 0.0), shinyness);\n\t\t\n\t}\n\telse\n\t{\n\t\t//color.xy += uv;\n\t}\n\tfragColor = vec4(color,1);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdXXzn","date":"1395554332","viewed":497,"name":"specular","username":"kaminate","description":"mod","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""}}