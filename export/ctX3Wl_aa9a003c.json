{"ver":"0.1","info":{"id":"ctX3Wl","date":"1672732889","viewed":193,"name":"solar_system23","username":"edwardbraed","description":"Just for fun","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["sun","orbits","system"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 1.0\n#define pix max(iResolution.x,iResolution.y)\n\nvec3 drwPlanet(vec2 uv, vec3 col, float off, float s, float t)\n{\n    vec2 rOff = vec2(sin(t), cos(t)) * off;\n    float p = max(1.0 - distance(uv , rOff) / s, 0.0);\n    if(off == 0.0)\n        return col * p;\n    \n    vec2 d1 = normalize(uv);\n    vec2 d2 = normalize(rOff);\n    float ca = dot(d1, d2);\n    float ng = (1.0 - pow(p, 0.01)) * 0.5;\n    float o = smoothstep(1.5 / pix, 0.0, abs(length(uv) - length(rOff))) * ng;\n    \n    return col * p + o * (d1.x * d2.y > d1.y * d2.x ? 0. : acos(-ca) * 0.15);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 auv = (fragCoord - 0.5 * iResolution.xy) / pix;\n    float t = iTime * SPEED;\n    \n    vec3 col = vec3(0.0);\n    col += drwPlanet(auv, vec3(1.0, 1.0, 0.0), 0.00, 0.015, 0.0) * 1.5; // sun\n    col += drwPlanet(auv, vec3(0.7, 0.7, 0.8), 0.04, 0.002, t * 4.14);  // mercury\n    col += drwPlanet(auv, vec3(0.8, 0.6, 0.0), 0.07, 0.004, t * 1.50);  // venus\n    col += drwPlanet(auv, vec3(0.0, 0.6, 0.9), 0.10, 0.004, t       );  // home <3\n    col += drwPlanet(auv, vec3(1.0, 0.5, 0.0), 0.13, 0.003, t * 0.53);  // mars\n    col += drwPlanet(auv, vec3(0.7, 0.5, 0.5), 0.16, 0.008, t * 0.08);  // jupiter\n    col += drwPlanet(auv, vec3(0.8, 0.7, 0.5), 0.19, 0.007, t * 0.03);  // saturn\n    col += drwPlanet(auv, vec3(0.3, 0.8, 0.7), 0.22, 0.005, t * 0.01);  // uranus\n    col += drwPlanet(auv, vec3(0.3, 0.5, 0.8), 0.25, 0.005, t * 0.006); // neptune\n    \n    fragColor = vec4(col * 2.0, 0.0);\n}","name":"Image","description":"","type":"image"}]}