{"ver":"0.1","info":{"id":"Dl33Dl","date":"1683292593","viewed":39,"name":"Hue to rgb in rgb and sRGB","username":"mackstern","description":"Difference between RGB and sRGB.\nLeft  Right\nrgb   sRGB\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["srgbrgbhue"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Basically a copy of https://www.shadertoy.com/view/lscSzl\n\nvec3 encodeSRGB(vec3 linearRGB)\n{\n    vec3 a = 12.92 * linearRGB;\n    vec3 b = 1.055 * pow(linearRGB, vec3(1.0 / 2.4)) - 0.055;\n    vec3 c = step(vec3(0.0031308), linearRGB);\n    return mix(a, b, c);\n}\n\nvec3 decodeSRGB(vec3 screenRGB)\n{\n    vec3 a = screenRGB / 12.92;\n    vec3 b = pow((screenRGB + 0.055) / 1.055, vec3(2.4));\n    vec3 c = step(vec3(0.04045), screenRGB);\n    return mix(a, b, c);\n}\n\n\n// From: https://www.shadertoy.com/view/wt2yWd\nvec3 HueToRGB(float hue)\n{\n    // Fractional part of each component with an added offset\n    vec3 fr = fract(vec3(hue) + vec3(0.0, -1.0/3.0, 1.0/3.0));\n    \n    // Change min/max from 0 and 1, to -1 and 2\n    vec3 s = 3.0*abs(1.0 - 2.0*fr) - 1.0;\n    \n\treturn s;\n}\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 rgb = HueToRGB(fragCoord.y / iResolution.y);    \n    vec3 color = vec3(0.0);    \n    \n    if (fragCoord.x > (iResolution.x * 0.5 + 2.0f)) {\n        color = encodeSRGB(rgb);\n    }\n    else if (fragCoord.x < (iResolution.x * 0.5 - 2.0f)) {\n        color = rgb;\n    }\n    \n        \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}