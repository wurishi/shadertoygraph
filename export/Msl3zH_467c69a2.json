{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// With tweaks by PauloFalcao\n// and khaaan\n\nfloat map( vec3 p ){\n    p.x+=sin(p.z*4.0+iTime*4.0)*0.1*cos(iTime*0.1);\n    p = mod(p,vec3(1.0, 1.0, 1.0))-0.5;\n    return length(p.xy)-.1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = (fragCoord.xy*2.0 - iResolution.xy) / iResolution.y;\n    vec3 camPos = vec3(cos(iTime*0.3), sin(iTime*0.3), 1.5);\n    vec3 camTarget = vec3(0.0, 0.0, 0.0);\n\n    vec3 camDir = normalize(camTarget-camPos);\n    vec3 camUp  = normalize(vec3(0.0, 1.0, 0.0));\n    vec3 camSide = cross(camDir, camUp);\n    float focus = 0.0-8.0*iMouse.y/iResolution.y+sin(iTime*0.75)*0.5;\n\n    vec3 rayDir = normalize(camSide*pos.x + camUp*pos.y + camDir*focus);\n    vec3 ray = camPos;\n    float d = 0.0, total_d = 0.0;\n    const int MAX_MARCH = 10;\n    const float MAX_DISTANCE = 5.0;\n    float c = 1.0;\n    for(int i=0; i<MAX_MARCH; ++i) {\n        d = map(ray);\n        total_d += d;\n        ray += rayDir * d;\n        if(abs(d)<0.001) { break; }\n        if(total_d>MAX_DISTANCE) { c = 0.; total_d=MAX_DISTANCE; break; }\n    }\n\t\n    float fog = 5.0;\n    vec4 result = vec4( vec3(c*.4 , c*.6, total_d+c) * (fog - total_d) / fog, 1.0 );\n\n    ray.z -= 5.+iTime*.5;\n    float r = 7.0;\n    fragColor = clamp(result*(step(r,.3)+r*.2+.1), 0.0, 1.0);\n    fragColor.a = (fog - total_d) / fog;\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Msl3zH","date":"1363045729","viewed":182,"name":"Blue serpents","username":"khaaan","description":"Modified from \"Binary Serpents\" on here","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["blueserpents"],"hasliked":0,"parentid":"","parentname":""}}