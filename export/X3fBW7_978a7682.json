{"ver":"0.1","info":{"id":"X3fBW7","date":"1728448957","viewed":20,"name":"Rotation Of Two Lights","username":"sockmit2007","description":"Circle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 offset_main = vec2(0.5, 0.5);\nconst float radius_main = 0.1;\nconst vec2 offset_secondary = vec2(0.35, 0.35);\nconst float radius_secondary = 0.05;\n\nfloat circle(vec2 pos, vec2 offset, float radius, float ratio, float fade_factor) {\n    vec2 posit = pos - offset;\n    posit.x /= ratio;\n    \n    float fad = radius * fade_factor;\n    \n    float distance = 1.0 - smoothstep(radius - fad, radius + fad, dot(posit, posit));\n    \n    return distance;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0, 0, 0);\n    \n    float ratio = iResolution.y / iResolution.x;\n    \n    float distance = circle(uv.xy, offset_main, radius_main, ratio, 1.0);\n    \n    vec2 other = offset_main + offset_secondary * vec2(cos(iTime) * ratio, sin(iTime));\n\n    float distance_other = circle(uv.xy, other, radius_secondary, ratio, 1.0);\n\n    col = (vec3(cosh(distance), sinh(distance), tanh(distance)) + vec3(cos(distance_other), sin(distance_other), tan(distance_other))) * 0.5;\n    \n    // Output to screen\n    fragColor = vec4(col * circle(uv.xy, offset_main, 0.15, ratio, 5.0) - 0.1 * (texture(iChannel1, uv.xy).xyz + texture(iChannel0, uv.xy).xyz), 1.0);\n}","name":"Image","description":"","type":"image"}]}