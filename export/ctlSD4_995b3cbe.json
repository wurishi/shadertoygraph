{"ver":"0.1","info":{"id":"ctlSD4","date":"1674774471","viewed":101,"name":"Playing with Mandelbrot set","username":"HanoRobelthon","description":"Mandelbrot","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 1000\n\nvec3 get_col(int iter, vec2 z) {\n    if(iter == MAX_ITER)\n        return vec3(0);\n\n    float i = float(iter) + 1.0 - log(log2(length(z)));\n    i = float(iter);\n    vec3 col;\n    float iter_percent = i / (3.0 * float(MAX_ITER));\n    \n    col.x = iter_percent + 0.01;\n    col.y = sin(iter_percent + 0.1);\n    col.z = sin(iter_percent + 0.01);\n    \n    return col;\n}\n\nvec3 mandelbrot(in vec2 coord) {\n    float x = 0.0;\n    float y = 0.0;\n    float xtemp;\n    int iteration = 0;\n    \n    \n    while (x*x + y*y <= 4.0 && iteration < MAX_ITER) {\n        xtemp = x*x - y*y + coord.x;\n        y = 2.0*x*y + coord.y;\n        x = xtemp;\n        iteration++;\n    }\n\n    return get_col(iteration, vec2(x, y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord / iResolution.xy) - vec2(0.5, 0.57)) / vec2(.3 , 0.5); \n    uv = uv / pow(2.0, iTime) + vec2(-0.743643887037151, 0.13182590420533);\n\n    fragColor = vec4(mandelbrot(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}