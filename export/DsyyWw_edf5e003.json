{"ver":"0.1","info":{"id":"DsyyWw","date":"1696171453","viewed":35,"name":"Interference pattern symmetry","username":"pthextract","description":"Work in progress","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["interference"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv-=.5;\n    uv*=iTime*10.;\n    \n\n    // Time varying pixel color\n    vec3 col=vec3(0);\n    col += .25*vec3(distance(1.,cos(3.14*length(uv.xy-vec2(33.+32.*cos(iTime),0)))));\n    col += .25*vec3(distance(1.,cos(3.14*length(uv.xy-vec2(-33.-32.*cos(iTime),0)))));\n    col += .5*vec3(distance(1.,.3*cos(iTime)+fract(length(uv.xy-vec2(7.+8.*cos(iTime),.0)))));\n    col += .5*vec3(distance(1.,.3*cos(iTime)+fract(length(uv.xy-vec2(-7.-8.*cos(iTime),.0)))));\n   \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}