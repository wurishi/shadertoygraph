{"ver":"0.1","info":{"id":"XlBczV","date":"1509152799","viewed":86,"name":"mandelbrot_t1","username":"kparga","description":"tarea1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractalmandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/llf3zj\n//https://www.shadertoy.com/view/lllGWH\n//Los shaders anteriores fueron tomados como gu√≠a \n\nvoid mainImage( out vec4 f, in vec2 pixel_coord ){\n    \n    float n = 0.;\n    float scale = 3.0;\n    vec2 center = vec2(-.745,.186);\n    int iterations = 250;//recursiones sobre el borde \n    \n    vec2 c = vec2(\n        (pixel_coord.x / iResolution.x) * 3.5 - 2.5,\n        (pixel_coord.y / iResolution.y) * 2.0 - 1.0\n    );\n\n    c *= (scale / exp(iTime * 0.3));\n    c += center;\n    \n    vec2 z = c*n;\n    \n    for( int i = 0; i<iterations; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.*z.x*z.y ) + c;\n\n        if( dot(z,z)>484. ) break;\n\n        n++;\n    }\n    vec4 tone = vec4(12,20,27,0);\n    \n    f = .5 + .5*cos( tone + .06*(n - log2(log2(dot(z,z)))) );//\n}\n\n","name":"Image","description":"","type":"image"}]}