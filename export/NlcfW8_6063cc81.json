{"ver":"0.1","info":{"id":"NlcfW8","date":"1675459480","viewed":42,"name":"Heat123","username":"SteelFlame","description":"0","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["0"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 test = texture(iChannel1,uv);\n    fragColor = test;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel1,uv);\nif (iFrame == 0) {\n        fragColor = vec4(0.);\n    }\n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float smoothh(float x) {\n    return x*x*x*(x*(x*6.0-15.0)+10.0);\n    return -2.0*x*x*x+3.0*x*x;\n}\nfloat lerp1d(float a, float b, float t) {\n    return a+(b-a)*t;\n}\nvec2 lerp(vec2 a, vec2 b, float t) {\n    return a+(b-a)*t;\n}\nfloat clamp01(float x) {\n    if (x>1.0) return 1.0;\n    if (x<0.0) return 0.0;\n    return x;\n}\nfloat frac(float x) {\n    return x-floor(x);\n}\nfloat random(vec3 uv) {\n    return frac(sin(dot(uv,vec3(12.9898,78.233,153.8465)))*43758.5453123);\n}\nvec3 getVector(vec3 x) {\n    return normalize(vec3(-1.0+random(x)*2.0, -1.0+random(x*100.0)*2.0, -1.0+random(x*100.0*100.0)*2.0));\n    \n}\nfloat noise(vec3 x) {\n    vec3 xInEdge = floor(x);\n    vec3 localX = vec3(frac(x.x),frac(x.y),frac(x.z));\n    \n    vec3 side000 = vec3(xInEdge+vec3(0,0,0));\n    vec3 side001 = vec3(xInEdge+vec3(0,0,1));\n    vec3 side010 = vec3(xInEdge+vec3(0,1,0));\n    vec3 side011 = vec3(xInEdge+vec3(0,1,1));\n    vec3 side100 = vec3(xInEdge+vec3(1,0,0));\n    vec3 side101 = vec3(xInEdge+vec3(1,0,1));\n    vec3 side110 = vec3(xInEdge+vec3(1,1,0));\n    vec3 side111 = vec3(xInEdge+vec3(1,1,1));\n    \n    vec3 vector000 = getVector(side000);\n    vec3 vector001 = getVector(side001);\n    vec3 vector010 = getVector(side010);\n    vec3 vector011 = getVector(side011);\n    vec3 vector100 = getVector(side100);\n    vec3 vector101 = getVector(side101);\n    vec3 vector110 = getVector(side110);\n    vec3 vector111 = getVector(side111);\n    \n    vec3 dir000 = x-side000;\n    vec3 dir001 = x-side001;\n    vec3 dir010 = x-side010;\n    vec3 dir011 = x-side011;\n    vec3 dir100 = x-side100;\n    vec3 dir101 = x-side101;\n    vec3 dir110 = x-side110;\n    vec3 dir111 = x-side111;\n    \n    float dot000 = dot(dir000,vector000);\n    float dot001 = dot(dir001,vector001);\n    float dot010 = dot(dir010,vector010);\n    float dot011 = dot(dir011,vector011);\n    float dot100 = dot(dir100,vector100);\n    float dot101 = dot(dir101,vector101);\n    float dot110 = dot(dir110,vector110);\n    float dot111 = dot(dir111,vector111);\n    \n    localX.x = smoothh(localX.x);\n    localX.y = smoothh(localX.y);\n    localX.z = smoothh(localX.z);\n    \n    float lerp1 = lerp1d(lerp1d(dot000,dot001,localX.z),lerp1d(dot010,dot011,localX.z),localX.y);\n    float lerp2 = lerp1d(lerp1d(dot100,dot101,localX.z),lerp1d(dot110,dot111,localX.z),localX.y);\n    \n    return lerp1d(lerp1,lerp2,localX.x);\n}\n\nfloat fbm(vec3 uv, float startFrequency, float startIntensity, int octavesCount, float persistance) {\n    float freq = startFrequency;\n    float intens = startIntensity;\n    float v = 0.;\n    for (int i = 0; i < octavesCount; i++) {\n        v += noise(uv*freq)*intens;\n        freq *= 2.;\n        intens *= persistance;\n    }\n    return v/float(octavesCount);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float a = 0.5;\nfloat dx = 0.005;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    vec4 pastPast = texture(iChannel1,uv);\n    \n    vec4 past = texture(iChannel0,uv);\n    vec4 pastL = texture(iChannel0,uv+vec2(dx,0.));\n    vec4 pastR = texture(iChannel0,uv-vec2(dx,0.));\n    vec4 pastU = texture(iChannel0,uv+vec2(0.,dx));\n    vec4 pastD = texture(iChannel0,uv-vec2(0.,dx));\n\n    fragColor = (pastL+pastR+pastU+pastD-past*4.)*a*a + 2.*past - pastPast;\n    //fragColor = pastPast;\n    //fragColor = past;\n    \n    if (iFrame == 0) {\n        float freq = 10.+fbm(vec3(uv,8.),5.,3.,1,.5);\n        float v = fbm(vec3(uv,0.),freq,300.,12,0.5);\n        fragColor += vec4(v,0.,-v,1.);\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}