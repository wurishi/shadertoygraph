{"ver":"0.1","info":{"id":"4tS3zy","date":"1429809599","viewed":228,"name":"Testing kuranes's normal deriv.","username":"luutifa","description":"Code from https://www.shadertoy.com/view/4lS3RG, just added a test light.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["lighting","normal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\nconst float heightScale = 0.0125;\nconst vec4 rgb2lum = vec4(0.2126, 0.7152, 0.0722, 0.0);\n\nfloat sampleHeight(in vec2 coord)\n{\n    \n    return heightScale * \n        dot(texture(iChannel0, coord), rgb2lum);\n} \n   \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n \n    float dHdU;\n    float dHdV;\n    \n    float h0 = sampleHeight(uv);\n    \n    float split = uv.x - iMouse.x/iResolution.x;\n    if (split > 0.0)   {\n      \n       dHdU = -dFdx(h0) / dFdx(uv.x);\n       dHdV = -dFdy(h0) / dFdy(uv.y);\n        \n    }\n    else{\n    \tvec2 du = vec2(1.0 / 1024.0, 0.0);\n    \tvec2 dv = vec2(0.0, 1.0 / 1024.0);\n    \tfloat hpx = sampleHeight(uv + du);\n    \tfloat hmx = sampleHeight(uv - du);\n    \tfloat hpy = sampleHeight(uv + dv);\n    \tfloat hmy = sampleHeight(uv - dv);\n    \n        dHdU = (hmx - hpx) / (2.0 * du.x);\n        dHdV = (hmy - hpy) / (2.0 * dv.y);\n    }\n    vec3 normal = normalize(vec3(dHdU, dHdV, 1.0));\n   \tvec3 light = vec3(sin(iTime)*3.0, 0.0, -1.0);\n    \n    float l = 1.0/length(vec3((uv-vec2(0.5)), 0.0) - light) * max(dot(normalize(vec3((uv-vec2(0.5)), 0.0)-light), normal), 0.0);\n    fragColor = vec4(vec3(l), 1.0);\n}","name":"","description":"","type":"image"}]}