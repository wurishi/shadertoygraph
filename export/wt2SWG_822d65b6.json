{"ver":"0.1","info":{"id":"wt2SWG","date":"1566996911","viewed":163,"name":"Pixelate greenify wobble","username":"tehsquidge","description":"Playing about with basic effects","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["wobble","pixelate","greenify"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 pixelate(vec2 uv, float dx, float dy, float pixels){\n    dx = dx * (1.0 / pixels);\n    dy = dy * (1.0 / pixels);\n    return vec2(dx * floor(uv.x / dx), dy * floor(uv.y / dy));\n}\n\nvec4 greenify(vec4 frag){\n    frag.r = 0.0;\n    frag.b = 0.0;\n    frag.g = frag.g - sin(iTime * 10.0)/20.0;\n    return frag;\n}\n\nvec2 wobble(vec2 uv){\n    float speed = 10.0;\n    float frequency = 30.0;\n    float intensity = 0.001;\n    float xoffset = intensity * sin(uv.y * frequency + iTime * speed);\n    float yoffset = intensity * sin(uv.x * frequency + iTime * speed);\n \treturn vec2(uv.x + xoffset, uv.y + yoffset);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = wobble(uv);\n    uv = pixelate(uv,4.0,4.0,1024.0);\n\tfragColor = texture(iChannel0,uv);\n    fragColor = greenify(fragColor);\n}","name":"Image","description":"","type":"image"}]}