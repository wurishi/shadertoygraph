{"ver":"0.1","info":{"id":"ws2GzD","date":"1548363380","viewed":68,"name":"oliwia","username":"oliwiajaworska","description":"Piłeczka poruszająca się po krawędzi","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pileczkanakrawedzi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Wyznaczam środek ekrani\n    vec2 zero = iResolution.xy/2.0;\n    vec3 col;\n    //defniniuję kolory, dla tła gradient zależny od czasu:\n    vec3 background = vec3(((sin(iTime/5.0)+1.0)/2.0), fragCoord.x/iResolution.x, fragCoord.y/iResolution.y);\n    //Ciemnoszary dla koloru linii\n    vec3 line = vec3(0.1, 0.1, 0.1);\n    //Zielony dla kuleczki\n    vec3 ball = vec3(0.2, 0.9, 0.0);\n    //Białawy dla drogi\n    vec3 road = vec3(0.9, 0.9, 0.9);\n    //Określam położenie piłeczki\n    vec2 ballvec = vec2(zero.x-(sin((sin(iTime/4.0)*50.0+100.0)/20.0+iTime*3.0)*110.0), sin(iTime/4.0)*50.0+110.0);\n    //Ustawiam domyślny kolor piksela jako kolor tła\n    col = background;\n    //Rysuję piłeczkę pierwszą (na ostatnim planie) kiedy jest po lewej stronie\n    if (length(fragCoord-ballvec)<10.0 && sin((sin(iTime/4.0)*50.0+100.0)/20.0+iTime*3.0) >= 0.0) {col = ball;}\n    //Tworzę drogę\n    if (fragCoord.y <= iResolution.y/2.0){\n        //Określam ruchy obydwu krawędzi drogi\n        float x1 = zero.x-fragCoord.x-(sin(fragCoord.y/20.0+iTime*3.0)*100.0);\n        float x2 = zero.x-fragCoord.x-(sin(fragCoord.y/20.0+iTime*3.0)*120.0);\n        //Warunkuję kolorowanie drogi przez znajdowanie się pomiędzy granicami\n        if (fragCoord.x-zero.x > x2*100.0 && fragCoord.x-zero.x < x1*110.0 || fragCoord.x-zero.x < x2*100.0 && fragCoord.x-zero.x > x1*110.0)col=road;\n        //Koloruję obrys drogi\n        if (abs(x1)<2.0 || abs(x2)<2.0){\n            col=line;\n        }\n    }\n    //Maluję piłeczkę ostatnią (na pierwszym planie) kiedy jest po prawej stronie\n    if (length(fragCoord-ballvec)<10.0 && sin((sin(iTime/4.0)*50.0+100.0)/20.0+iTime*3.0) <= 0.0) {col = ball;}\n    //Uzupełniam obraz\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}