{"ver":"0.1","info":{"id":"XtyXW3","date":"1486072031","viewed":140,"name":"Radio Mickeys","username":"shadowlion","description":"My first shader (Class assignment - VFS PG07)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// My frist Shadertoy Shader\n\n\nfloat MakeCircle(vec2 uv, vec2 pos, float rad, float edgeblur)\n {\n     float dist = length(uv-pos); // lenght from center\n     \n     // using smoothstep to make circles and nice edges\n     float c = smoothstep(rad,rad-edgeblur, dist); \n     \n     return c;\n }\n\nfloat mickey (vec2 uv, vec2 pos)\n {\n     float mask = MakeCircle(uv, vec2(pos.x, pos.y), .15, 0.01);   // Face\n     mask += MakeCircle(uv, vec2(.12 + pos.x, .15 + pos.y), .075, .01);  // Ears\n     mask += MakeCircle(uv, vec2(-.12 + pos.x,.15 + pos.y), .075, .01);  // Ears\n     \n     float mouth = .0;\n     mouth += MakeCircle(uv, vec2(pos.x, pos.y), .1, .01);\n     mouth -= MakeCircle(uv, vec2(pos.x, 0.03 + pos.y), .1, .01);\n     mouth -= MakeCircle(uv, vec2(-.095 + pos.x, -.005 + pos.y), .04, .01);\n     mouth -= MakeCircle(uv, vec2(.095 + pos.x, -.005 + pos.y), .04, .01);\n     mask -= mouth;\n     \n     float eyes = .0;\n     eyes += MakeCircle(uv, vec2(-.08 + pos.x, .05 + pos.y), .04, .01);\n     eyes += MakeCircle(uv, vec2(.08 + pos.x, .05 + pos.y), .04, .01);\n     mask -= eyes;\n     \n     return mask;\n }\n\nfloat mickeyGrid(vec2 uv, vec2 pos)\n {\n     // I think this could be done with a XOR loop...\n     float mask =0.0;\n     mask += mickey(uv, vec2(pos.x, pos.y));\n     mask += mickey(uv, vec2(pos.x, 0.5 + pos.y));\n     mask += mickey(uv, vec2(pos.x, 1.0 + pos.y));\n     mask += mickey(uv, vec2(pos.x, -0.5 + pos.y));\n     mask += mickey(uv, vec2(pos.x, -1.0 + pos.y));\n     mask += mickey(uv, vec2(pos.x + 0.5, pos.y));\n     mask += mickey(uv, vec2(pos.x + 1.0, pos.y));\n     mask += mickey(uv, vec2(pos.x + -0.5, pos.y));\n     mask += mickey(uv, vec2(pos.x + -1.0, pos.y));\n     mask += mickey(uv, vec2(pos.x + 0.5, pos.y + 0.5));\n     mask += mickey(uv, vec2(pos.x + 1.0, pos.y + 0.5));\n     mask += mickey(uv, vec2(pos.x + 0.5, pos.y + 1.0));\n     mask += mickey(uv, vec2(pos.x + 1.0, pos.y + 1.0));\n     mask += mickey(uv, vec2(pos.x + 0.5, pos.y + -0.5));\n     mask += mickey(uv, vec2(pos.x + 0.5, pos.y + -1.0));\n     mask += mickey(uv, vec2(pos.x + -0.5, pos.y + 0.5));\n     mask += mickey(uv, vec2(pos.x + -1.0, pos.y + 0.5));\n     mask += mickey(uv, vec2(pos.x + -1.0, pos.y + -0.5));\n     mask += mickey(uv, vec2(pos.x + -0.5, pos.y + -1.0));\n     mask += mickey(uv, vec2(pos.x + -0.5, pos.y + -0.5));\n     mask += mickey(uv, vec2(pos.x + -1.0, pos.y + -1.0));\n     \n     return mask;\n }\n\nfloat funkyColorCircles(vec2 uv, float rings, float ringThickness, float speed)\n {\n     vec2 r = uv * rings; // ++ == more rings\n     \n     float v1 = sin(r.x + iTime) * 2.0;   // Color fade Grid x\n     float v2 = cos(r.y + iTime);    // Color fade Grid y\n     float v3 = sin(r.x + r.y + iTime);  // Color fade Grid xy mod\n     \n     // makes reducing circles (over time)\n     float v4 = tan(sqrt(r.x * r.x + r.y * r.y) + iTime * speed) * ringThickness; \n     \n     return v1 + v2 + v3 + v4; \n }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n {\n  vec2 uv = fragCoord.xy / iResolution.xy; // Screen Coords\n     \n     uv -= 0.5; // Pos Middle of screen\n     uv.x *= iResolution.x/iResolution.y; // fix X Stretch\n\n    float rot = radians(iTime * 35.0); // Rotation Speed (using time)\n     float move = sin(iTime) * 0.4; // Simple move back and forth on sin wave (using time)\n     \n     uv = mat2(cos(rot), -sin(rot), sin(rot), cos(rot)) * uv; // uv rotation\n\n    // Background Color fade mix on sin wave (using time)\n     vec3 color = mix(vec3(1., 1., 1.), vec3(0., 1., 1.), uv.y ) * sin(iTime);\n\n    color += funkyColorCircles(uv, 12.0,  0.25, 4.0) * move; // Added move just because...\n     \n     color +=  vec3(1., 1., 1.) * mickeyGrid(uv, vec2(move,move)); // Add Mickey Color Mask\n     \n     fragColor = vec4(color, 1.0); // output to screen\n }","name":"Image","description":"","type":"image"}]}