{"ver":"0.1","info":{"id":"XdKcDz","date":"1521624917","viewed":440,"name":"Scale effect 2","username":"peko","description":"Generate strips effects","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["scale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n#define SPEED .5\n\nvec3 point(vec2 p) {\n\treturn length(p)<0.005 ? vec3(1.0) : vec3(0.0);\n}\n\n// closest point on line ax+by+c=0 to point p\nvec2 cl_p(vec2 p, float a, float b, float c) {\n    return vec2(b*( b*p.x-a*p.y)-a*c, a*(-b*p.x+a*p.y)-b*c)/(a*a+b*b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/512.0;\n    \n    // LINE ax+by+c = 0\n    // y = -(ax+c)/b\n    // through two points\n    // a = y2-y1 \n    // b = x1-x2\n    // c = x2y1-x1y2\n    \n    vec2 p1 = vec2(1.6 - fract(iTime*SPEED)*1.8, 0.4); \n    vec2 p2 = vec2(1.5 - fract(iTime*SPEED)*1.8, 0.6);\n    vec2 p3 = vec2(1.5 - fract(iTime*SPEED)*0.8, 0.4); \n    vec2 p4 = vec2(1.6 - fract(iTime*SPEED)*0.8, 0.6);\n    \n    \n    float a1 = p2.y-p1.y;\n    float b1 = p1.x-p2.x;\n    float c1 = p2.x*p1.y-p1.x*p2.y;\n  \n    float a2 = p4.y-p3.y;\n    float b2 = p3.x-p4.x;\n    float c2 = p4.x*p3.y-p3.x*p4.y;\n \n    float x = uv.x;\n    float y1 = -(a1*x+c1)/b1;\n    float y2 = -(a2*x+c2)/b2;\n\n   \n    vec3 col = texture(iChannel0, uv).rgb;\n    if (uv.y > y1) {\n        // closest point to line\n        // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n        vec2 cp = uv;\n        if(uv.y < y2)\n        \tcp = cl_p(cp, a2, b2, c2);\n        cp = cl_p(cp, a1, b1, c1);\n\n        vec3 str = texture(iChannel0, cp ).rgb;\n        \n        float k = fract(iTime*SPEED);\n        \n        col = mix(str, mix(col+str, col, 1.0-k), 1.0-k);\n        \n        \n    }\n    col+= point(uv-p1)+point(uv-p2)+point(uv-p3)+point(uv-p4);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}