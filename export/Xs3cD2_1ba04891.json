{"ver":"0.1","info":{"id":"Xs3cD2","date":"1520181523","viewed":451,"name":"Food...","username":"frutbunn","description":"...Fight!","likes":14,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define sat(x) clamp(x, 0., 1.)\n\nfloat remap01(float a, float b, float t) {\n    return sat( (t-a) / (b-a) );\n}\n\nfloat rnd(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(11.9898,78.233))) * 48.53);\n}\n\nvec4 getTilePix(float sprite, vec2 uv) {\n    const vec2 ssd = vec2(4., 3.); // sprite sheet dimensions: 4x3 sprites on source texture\n    vec2 nsd = vec2(1./ssd.x, 1./ssd.y); // normalized sprite sheet dimensions\n\n    // Calc normalized tile uv start position.\n    vec2 tile = vec2(mod(sprite, ssd.x), floor(sprite/ssd.x) );\n    tile = vec2(remap01(0., ssd.x, tile.x), remap01(0., ssd.y, tile.y) );\n\n    // Adjust position pixel.\n    vec2 tuv = vec2(tile.x + (uv.x*nsd.x), tile.y + (uv.y*nsd.y) );\n\n    return texture(iChannel0, tuv);\n}\n\nvec4 drawRandomSprites(vec2 uv, vec2 offset, float scale, float speed, float white_space) {\n    const float TILE_COUNT = 12.;\n   \n    // Scale position and offset it.\n    uv = (uv/scale);\n    uv += offset;\n\n    // Scroll horizontally.\n    float scrollOffset = float(iFrame)*speed;\n    uv.x -= scrollOffset;\n\n    // The screen is split into columns and rows of sprites, here fixed to 20x20 sprites fill the screen.\n    vec2 columns_and_rows = vec2(20., 20.);\n    vec2 n = vec2(1./columns_and_rows.x, 1./columns_and_rows.y);\n\n    // Pick a random spite for the current column and row.\n    vec2 uvTile = uv*iResolution.xy;\n    uvTile = floor(uv/n);\n    float tile = floor( (rnd(vec2(uvTile.x, uvTile.y))*(TILE_COUNT-1.)*white_space)+1. );\n\n    return getTilePix(tile, mod(uv, 1./columns_and_rows)*columns_and_rows);\n}\n\nvec4 drawFood(vec2 uv) {\n    vec2 offset = vec2(sin(iTime)*.35,cos(iTime)*.35);\n    vec4 col = vec4(0.);\n\n    vec4 tmpCol = drawRandomSprites(\n        uv, \n        offset, \n        .75,\n        .0015,\n        6.\n    );\n    tmpCol.rgb *= .25;\n    col = mix(col, tmpCol, tmpCol.a);\n\n    tmpCol = drawRandomSprites(\n        uv,\n        offset, \n        1.,\n        .002,\n        5.\n    );\n    tmpCol.rgb *= .5;\n    col = mix(col, tmpCol, tmpCol.a);\n\n    tmpCol = drawRandomSprites(\n        uv,\n       offset, \n        2.,\n        .003,\n        4.\n    );\n    tmpCol.rgb *= .75;\n    col = mix(col, tmpCol, tmpCol.a);\n\n    tmpCol = drawRandomSprites(\n        uv, \n        offset, \n        3.,\n        .004,\n        4.\n    );\n    col = mix(col, tmpCol, tmpCol.a);\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //fragColor = texture(iChannel0, uv);\n    fragColor = drawFood(uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// https://www.shadertoy.com/view/4dV3Rm\n\nvec4 getFoodPixel(vec2 uv)\n{\n    float x = floor(72.*uv.x);\n    float y = floor(54.*uv.y);\n\n    vec4 tile = vec4(0.);\n    vec4 color = vec4(0.);\n\n    // unpack the bitmap on a row-by-row basis\n    if (y==0.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==1.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x0dddd0) : vec4(0x000000, 0x000000, 0x009900, 0x000000);\n    if (y==2.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x444444, 0x000004, 0xd00000, 0xd1111d) : vec4(0x0000dd, 0x000000, 0x009900, 0x000000);\n    if (y==3.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x777777, 0x000004, 0x1d0000, 0x111111) : vec4(0x000d11, 0x000000, 0x009900, 0x000000);\n    if (y==4.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x555555, 0x000004, 0x11d000, 0x111111) : vec4(0x00d111, 0x000000, 0x009900, 0x000000);\n    if (y==5.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x515515, 0x000044, 0x111d00, 0x111111) : vec4(0x00d111, 0x000000, 0x111111, 0x000000);\n    if (y==6.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x557755, 0x004404, 0x111d00, 0x111111) : vec4(0x0d1111, 0xa00000, 0x1aa1a1, 0x00000a);\n    if (y==7.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x571771, 0x004004, 0x1111d0, 0x444441) : vec4(0x011111, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==8.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x5777d5, 0x004004, 0x1111d0, 0x444444) : vec4(0x011114, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==9.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x400000) : ( x < 48.0 ) ? vec4(0x5171d5, 0x004004, 0x4111d0, 0x555554) : vec4(0x011144, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==10.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x1d0000) : ( x < 48.0 ) ? vec4(0x7777d1, 0x00400d, 0x4111d0, 0x555555) : vec4(0x011145, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==11.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x4dd000) : ( x < 48.0 ) ? vec4(0xd717d4, 0x00400d, 0x4111d0, 0x555115) : vec4(0x011145, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==12.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0xddd000) : ( x < 48.0 ) ? vec4(0x1d7d1d, 0x00400d, 0x411100, 0x551115) : vec4(0x001145, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==13.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0xdd0000) : ( x < 48.0 ) ? vec4(0x11d1d1, 0x0004dd, 0x111100, 0x555554) : vec4(0x001114, 0xa00000, 0xaaaaa1, 0x00000a);\n    if (y==14.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0xdd0000) : ( x < 48.0 ) ? vec4(0x111111, 0x0000d1, 0x111000, 0x444441) : vec4(0x000111, 0xa00000, 0xaaaaa1, 0x00000a);\n    if (y==15.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0xd00000) : ( x < 48.0 ) ? vec4(0x1d11d1, 0x00000d, 0x110000, 0x111111) : vec4(0x000011, 0xa00000, 0xaaaaaa, 0x00000a);\n    if (y==16.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0xd0dd00, 0x000000, 0x000000, 0x111111) : vec4(0x000000, 0x000000, 0xaaaaaa, 0x000000);\n    if (y==17.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==18.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==19.) tile = (x<24.) ? vec4(0x400000, 0x004444, 0x000000, 0xa00000) : ( x < 48.0 ) ? vec4(0xabbbbb, 0x000000, 0x000000, 0xddd110) : vec4(0x00000d, 0x000000, 0x000000, 0x000000);\n    if (y==20.) tile = (x<24.) ? vec4(0x444000, 0x444444, 0x000000, 0xa00000) : ( x < 48.0 ) ? vec4(0xabbbbb, 0x000000, 0x000000, 0x0d1000) : vec4(0x000000, 0x000000, 0x033330, 0x000000);\n    if (y==21.) tile = (x<24.) ? vec4(0x222200, 0x445557, 0x000004, 0xb00000) : ( x < 48.0 ) ? vec4(0xbbbbbb, 0x000000, 0x000000, 0x0d1000) : vec4(0x000000, 0x300000, 0x322223, 0x000003);\n    if (y==22.) tile = (x<24.) ? vec4(0x222000, 0x555772, 0x000044, 0xb00000) : ( x < 48.0 ) ? vec4(0xbb7b7b, 0x000000, 0x000000, 0xd6111d) : vec4(0x0000dd, 0x230000, 0x2bbbb2, 0x000032);\n    if (y==23.) tile = (x<24.) ? vec4(0x444400, 0x577775, 0x000445, 0xba0000) : ( x < 48.0 ) ? vec4(0xb7b7b7, 0x00000a, 0xd00000, 0x666611) : vec4(0x000d66, 0xb23000, 0xbbbbbb, 0x00032b);\n    if (y==24.) tile = (x<24.) ? vec4(0x572240, 0x777445, 0x000455, 0xba0000) : ( x < 48.0 ) ? vec4(0xb7b7b7, 0x00000a, 0x1d0000, 0x616161) : vec4(0x00d611, 0xbb2300, 0xbcbbcb, 0x0032bb);\n    if (y==25.) tile = (x<24.) ? vec4(0x222220, 0x774577, 0x004557, 0xbb0000) : ( x < 48.0 ) ? vec4(0xb7b7b7, 0x00000b, 0x1d0000, 0x161661) : vec4(0x00d161, 0xbb2300, 0xbbbbbb, 0x0032bb);\n    if (y==26.) tile = (x<24.) ? vec4(0x550000, 0x747777, 0x004577, 0xbb0000) : ( x < 48.0 ) ? vec4(0xbbbbbb, 0x00000b, 0x1d0000, 0xddddd1) : vec4(0x00dddd, 0xcbb230, 0xbbbbbb, 0x032bbc);\n    if (y==27.) tile = (x<24.) ? vec4(0x555500, 0x477755, 0x004577, 0xbba000) : ( x < 48.0 ) ? vec4(0xbbbbbb, 0x0000ab, 0x100000, 0x111111) : vec4(0x000111, 0xbbb230, 0xbcbbcb, 0x032bbb);\n    if (y==28.) tile = (x<24.) ? vec4(0x777720, 0x775557, 0x004474, 0x540000) : ( x < 48.0 ) ? vec4(0x5bbbbb, 0x000054, 0x100000, 0x111111) : vec4(0x000111, 0xbbb230, 0xbbbbbb, 0x02bbbb);\n    if (y==29.) tile = (x<24.) ? vec4(0x222220, 0x757722, 0x004447, 0x550000) : ( x < 48.0 ) ? vec4(0x554544, 0x000500, 0x010000, 0x161116) : vec4(0x000611, 0xbcbb20, 0xbbbbbb, 0x02bbcb);\n    if (y==30.) tile = (x<24.) ? vec4(0x000000, 0x772200, 0x000447, 0x055000) : ( x < 48.0 ) ? vec4(0x050545, 0x000505, 0x001000, 0x111610) : vec4(0x000016, 0xbbbb20, 0xbbbbbb, 0x02bbbb);\n    if (y==31.) tile = (x<24.) ? vec4(0x000000, 0x720000, 0x044444, 0x050000) : ( x < 48.0 ) ? vec4(0x505445, 0x000005, 0x000110, 0x616160) : vec4(0x000061, 0xbbbb20, 0xcbbbbc, 0x02bbbb);\n    if (y==32.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x007444, 0x504000) : ( x < 48.0 ) ? vec4(0x505050, 0x000050, 0x000000, 0x161600) : vec4(0x000006, 0x999910, 0x999999, 0x019999);\n    if (y==33.) tile = (x<24.) ? vec4(0x000000, 0x400000, 0x000775, 0x500000) : ( x < 48.0 ) ? vec4(0x050550, 0x000005, 0x000000, 0x666600) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==34.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000077, 0x000000) : ( x < 48.0 ) ? vec4(0x050050, 0x000000, 0x000000, 0x066000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==35.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==36.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n    if (y==37.) tile = (x<24.) ? vec4(0x000000, 0x088998, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000030, 0x000000, 0x000000);\n    if (y==38.) tile = (x<24.) ? vec4(0x000000, 0x088989, 0x000000, 0x545000) : ( x < 48.0 ) ? vec4(0x545454, 0x000454, 0x000000, 0x444440) : vec4(0x000000, 0x333020, 0x000033, 0x000000);\n    if (y==39.) tile = (x<24.) ? vec4(0x000000, 0x099899, 0x000000, 0x111000) : ( x < 48.0 ) ? vec4(0x111111, 0x000111, 0x400000, 0x222224) : vec4(0x000044, 0x233320, 0x033322, 0x000000);\n    if (y==40.) tile = (x<24.) ? vec4(0x000000, 0x088888, 0x000000, 0x545000) : ( x < 48.0 ) ? vec4(0x545454, 0x000454, 0x240000, 0xaaaaa2) : vec4(0x000422, 0x522300, 0x332244, 0x000000);\n    if (y==41.) tile = (x<24.) ? vec4(0x800000, 0x988989, 0x000000, 0x454000) : ( x < 48.0 ) ? vec4(0x454545, 0x000545, 0xa20000, 0xaaaaaa) : vec4(0x0002aa, 0x542330, 0x325454, 0x000003);\n    if (y==42.) tile = (x<24.) ? vec4(0x800000, 0x899898, 0x000000, 0x666000) : ( x < 48.0 ) ? vec4(0x116611, 0x000666, 0xaa0000, 0x77777a) : vec4(0x000aaa, 0x554330, 0x254555, 0x000033);\n    if (y==43.) tile = (x<24.) ? vec4(0x800000, 0x888888, 0x000000, 0x111000) : ( x < 48.0 ) ? vec4(0x111111, 0x000111, 0x700000, 0x444447) : vec4(0x000077, 0x575320, 0x545457, 0x000322);\n    if (y==44.) tile = (x<24.) ? vec4(0x980000, 0x999999, 0x000008, 0x545000) : ( x < 48.0 ) ? vec4(0x545454, 0x000454, 0x470000, 0x555554) : vec4(0x000744, 0x151320, 0x455555, 0x022225);\n    if (y==45.) tile = (x<24.) ? vec4(0x100000, 0x111111, 0x000001, 0x454000) : ( x < 48.0 ) ? vec4(0x454545, 0x000545, 0x540000, 0x555555) : vec4(0x000455, 0x573200, 0x545757, 0x000054);\n    if (y==46.) tile = (x<24.) ? vec4(0x110000, 0x111111, 0x000001, 0x111000) : ( x < 48.0 ) ? vec4(0x111111, 0x000111, 0x540000, 0x755755) : vec4(0x000455, 0x153200, 0x555515, 0x000545);\n    if (y==47.) tile = (x<24.) ? vec4(0x100000, 0x111111, 0x000000, 0x100000) : ( x < 48.0 ) ? vec4(0x666111, 0x000116, 0x500000, 0x555551) : vec4(0x000075, 0x532000, 0x575757, 0x005454);\n    if (y==48.) tile = (x<24.) ? vec4(0x000000, 0x011111, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x766110, 0x000066, 0x500000, 0x755115) : vec4(0x000055, 0x320000, 0x551515, 0x004555);\n    if (y==49.) tile = (x<24.) ? vec4(0x100000, 0x111111, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x666000, 0x000066, 0x000000, 0x555557) : vec4(0x000005, 0x220000, 0x575753, 0x045457);\n    if (y==50.) tile = (x<24.) ? vec4(0x000000, 0x011111, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x676000, 0x000067, 0x000000, 0x055700) : vec4(0x000000, 0x200000, 0x151533, 0x055555);\n    if (y==51.) tile = (x<24.) ? vec4(0x000000, 0x001110, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x660000, 0x000226, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x575332, 0x045757);\n    if (y==52.) tile = (x<24.) ? vec4(0x000000, 0x011100, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000020, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x103220, 0x005514);\n    if (y==53.) tile = (x<24.) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : ( x < 48.0 ) ? vec4(0x000000, 0x000000, 0x000000, 0x000000) : vec4(0x000000, 0x000000, 0x000000, 0x000000);\n\n    float n = mod(x, 24.0); // quantize x coordinate to nearest 24 pixels and get float containing 6 pixels\n    float t = ( ( n < 6.0 ) ? tile.x : ( n < 12.0 ) ? tile.y : (n < 18.0 ) ? tile.z : tile.w );\n    float p = mod( x, 6.0 ) * 4.0; // quantize x coordinate to nearest 6 pixels to determine pixel bit index\n    int idx = int( mod( floor( t*exp2(-p) ), 16.0 ));\n    \n    // Look up color palette for the indexed pixel:\n    if (idx==0) color = vec4(0., 0., 0., 0.);\n    if (idx==1) color = vec4(1., 1., 1., 1.);\n    if (idx==2) color = vec4(0., 1., 0., 1.);\n    if (idx==3) color = vec4(0., 0.733333, 0., 1.);\n    if (idx==4) color = vec4(1., 0.533333, 0., 1.);\n    if (idx==5) color = vec4(1., 0.733333, 0., 1.);\n    if (idx==6) color = vec4(1., 0., 0.4, 1.);\n    if (idx==7) color = vec4(0.8, 1., 0., 1.);\n    if (idx==8) color = vec4(1., 0.6, 0., 1.);\n    if (idx==9) color = vec4(1., 0.466666, 0.466666, 1.);\n    if (idx==10) color = vec4(0.666666, 0., 0., 1.);\n    if (idx==11) color = vec4(1., 0., 0., 1.);\n    if (idx==12) color = vec4(0., 0., 0., 1.);\n    if (idx==13) color = vec4(0., 1., 1., 1.);\n    \n    return(color);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    int frame = iFrame;\n        \n    //fragColor=vec4(0.);\n    //return;\n       \n    float repaint = floor(mod(float(frame), float(iResolution.y/20.)));\n    \n    if (frame<5 || repaint==floor(fragCoord.y/20.) ) {\n    \tfragColor = getFoodPixel(uv);\n    } else {\n    \tfragColor = texture(iChannel0, uv);\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"}]}