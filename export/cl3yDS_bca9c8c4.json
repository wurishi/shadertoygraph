{"ver":"0.1","info":{"id":"cl3yDS","date":"1699564223","viewed":24,"name":"Daily Shader ","username":"SVWDesigner","description":"Noise test","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.2, 0.05, smoothstep(0.1,0.75,0.5+0.5*sin(length(uv)+iTime*3.5)));\n\n    col *= col;\n    \n    \n    if (length(col)>=1.0)\n    {\n    col *= 0.;\n    col.x = sin(iTime*uv.x*10001000.);\n    col.y = sin(iTime*uv.y*10100110.);\n    col.z = sin(iTime*uv.y*11110000.);\n    }\n    if (length(col)>=1.15)\n    {\n    col *= 0.;\n    col.x = sin(iTime*uv.y*11001101.);\n    col.y = sin(iTime*uv.x*11111110.);\n    col.z = sin(iTime*uv.x*11110101.);\n    }\n    if (length(col)>=1.4)\n    {\n    col.x = 1.0;\n    col = col.xxx;\n    }\n    \n    \n    col.z = sin(length(uv)*500.5 + iTime*3.14);\n    col *= smoothstep(1.3,0.7,length(uv));\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}