{"ver":"0.1","info":{"id":"7syyRR","date":"1657284948","viewed":75,"name":"Slinky Tunnel","username":"UwUCoder","description":"I was trying to display a z-buffer and got this instead","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_MARCHING_STEPS = 255;\n\nfloat Sphere(vec3 p, float r )\n{\n  vec3 offset = vec3(0, 0, sin(iTime)*3.0f-4.1f);\n  return length(p - offset) - r;\n}\n\nfloat rayMarch(vec3 rayDir) {\n  float depth = 0.;\n\n  for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\n    vec3 ray = depth * rayDir;\n    float dist = Sphere(ray, 1.0);\n    depth += dist;\n    if (dist < 0.001 || depth > 100.) break;\n  }\n\n  return depth;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy * 2. -1.0;\n  uv.x *= iResolution.x/iResolution.y;\n  vec3 col = (1.0f - max(sin(iTime) * 3.0f / -6.0f + 0.2f, 0.)) * vec3(1., 16./255., 240./255.) + max(sin(iTime) * 3.0f / -6.0f + 0.2f, 0.) * vec3(176./255., 38./255., 1.);\n  vec3 rayDir = normalize(vec3(uv, -0.1f));\n  float dist = rayMarch(rayDir);\n\n  fragColor = vec4(min((1./(dist))/(1./(100.)), 1.) * col, 1.0);\n}","name":"Image","description":"","type":"image"}]}