{"ver":"0.1","info":{"id":"4tKSz3","date":"1485462056","viewed":87,"name":"SB_CheckerBoard","username":"soneb27","description":"Makes a checkerboard pattern with GLSL","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Black = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 White = vec4(1.0, 1.0, 1.0, 1.0);\nfloat SizeBoard = 50.0; //the larger the number the larger the squares will be\nfloat Check = 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = floor(fragCoord.xy / SizeBoard); //lock the uv values to whole integers to get squares instead of gradients    \n    float checkerMask = mod(uv.x + uv.y, Check); //if the mod 2.0 == 0, make the square black otherwise leave it white \n    vec4 checkerBoard = (checkerMask * White) + Black; // checkerMask clears square shaped holes in the white texture, fill those holes\n    \t\t\t\t\t\t\t\t\t\t\t\t   // with the second texture\n    fragColor = checkerBoard;\n}","name":"Image","description":"","type":"image"}]}