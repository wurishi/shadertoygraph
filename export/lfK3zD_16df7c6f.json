{"ver":"0.1","info":{"id":"lfK3zD","date":"1712509947","viewed":54,"name":"SIRS Simulation","username":"numpyhard","description":"SIRS simulation","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["mask","infection","epidemic"],"hasliked":0,"parentid":"-1","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define inf_prob 0.115\n#define rec_prob 0.35\n#define vul_prob 0.019\n#define init_inf 0.000001\n\n\nconst float PI = 3.14159265359;\n\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat random(vec2 p){\n    return hash13(vec3(p, mod(1772.*iTime+19.*iDate.w,1337.)));\n}\n\nvec2 read(vec2 p) {\n\treturn texture(iChannel0, p/iResolution.xy).xy;\n}\n\nvec2 pool(vec2 p) {\n  vec2 acc = vec2(0.0);\n  for (int y=-1; y<=1; ++y)   \n  for (int x=-1; x<=1; ++x) {\n    acc += read(p + vec2(x, y));\n  }\n  return acc;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tprob;\n    if (iFrame == 0) {\n    \tfloat a = random(fragCoord+vec2(-56593.0));\n        fragColor = vec4(0.);\n        if(a < init_inf)fragColor.x = 1.;\n        return;\n    }\n    vec2 accum = pool(fragCoord);\n    vec2 cell = read(fragCoord);\n    \n    // If infected, recover\n    if(cell.x > 0.2){\n        if(random(fragCoord) < rec_prob){\n            fragColor=vec4(0.,1.,0.,0.);\n            return;\n        }\n    }// If recovered, become susceptible\n    else if(cell.y > 0.2){\n        if(random(fragCoord) < vul_prob){\n            fragColor=vec4(0.);\n            return;\n        }\n    }// if susceptible, become infected.\n    else if(accum.x > 0.){\n        tprob = 1.-pow(1.-inf_prob,accum.x);\n        if(random(fragCoord) < tprob){\n            fragColor=vec4(1.,0.,0.,0.);\n            return;\n        }\n    }\n    fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Buffer A","description":"","type":"buffer"}]}