{"ver":"0.1","info":{"id":"wtV3zW","date":"1578478695","viewed":102,"name":"TransferWise fastflag logo 2d","username":"kow","description":"A distance field for the TW logo. Points were generated from the SVG. ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","logo","transferwise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define SHOW_LINES // remove comment to show distance lines\n\nconst int N = 12;\n\nfloat sdPoly( in vec2[N] v, in vec2 p )\n{\n    const int num = v.length();\n    float d = dot(p-v[0],p-v[0]);\n    float s = 1.0;\n    for( int i=0, j=num-1; i<num; j=i, i++ )\n    {\n        // distance\n        vec2 e = v[j] - v[i];\n        vec2 w =    p - v[i];\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\n        d = min( d, dot(b,b) );\n\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\n        bvec3 cond = bvec3( p.y>=v[i].y, p.y<v[j].y, e.x*w.y>e.y*w.x );\n        if( all(cond) || all(not(cond)) ) s*=-1.0;  \n    }\n    \n    return s*sqrt(d);\n}\n\nfloat sdLogo(vec2 p) {\n    vec2 center = vec2(-.25,.25);\n    float scale = .5;\n    vec2 v0 = center - vec2(-0.127,0) * scale;\n    vec2 v1 = center - vec2(-0.295,0.262) * scale;\n    vec2 v2 = center - vec2(-0,0.524) * scale;\n    vec2 v3 = center - vec2(-0.51,0.524) * scale;\n    vec2 v4 = center - vec2(-0.558,0.419) * scale;\n    vec2 v5 = center - vec2(-0.277,0.419) * scale;\n    vec2 v6 = center - vec2(-0.447,0.261) * scale;\n    vec2 v7 = center - vec2(-0.348,0.105) * scale;\n    vec2 v8 = center - vec2(-0.812,0.105) * scale;\n    vec2 v9 = center - vec2(-0.404,1) * scale;\n    vec2 v10 = center - vec2(-0.544,1) * scale;\n    vec2 v11 = center - vec2(-1,0) * scale;\n\n    // add more points\n    vec2[] poly = vec2[](v0,v1,v2,v3,v4,v5,v6,v7,v8,v9,v10,v11);\n\n\treturn sdPoly(poly, p);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n\n\tfloat d = sdLogo(uv);\n\n#ifdef SHOW_LINES\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(140.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n#else\n    vec3 col = vec3(1.0 - smoothstep(0.0, 0.005, d));\n#endif\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}