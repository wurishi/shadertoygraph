{"ver":"0.1","info":{"id":"XtjGWm","date":"1429573558","viewed":1153,"name":"Fine fake bokeh","username":"brainfucker","description":"modification of Bokeh disc from Dave_Hoskins","likes":32,"published":1,"flags":0,"usePreview":1,"tags":["bokeh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Bokeh disc.\n// by David Hoskins.\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\n#define PI 3.141596\n\n// This is (3.-sqrt(5.0))*PI radians, which doesn't precompiled for some reason.\n// The compiler is a dunce I tells-ya!!\n#define GOLDEN_ANGLE 2.39996323\n\n#define NUMBER 150.0\n\n#define ITERATIONS (GOLDEN_ANGLE * NUMBER)\n\n//-------------------------------------------------------------------------------------------\n// This creates the 2D offset for the next point.\n// (r-1.0) is the equivalent to sqrt(0, 1, 2, 3...)\nvec2 Sample(in float theta, inout float r)\n{\n    r += 1.0 / r;\n\treturn (r-1.0) * vec2(cos(theta), sin(theta));\n}\n\n//-------------------------------------------------------------------------------------------\nvec3 Bokeh(sampler2D tex, vec2 uv, float radius, float amount)\n{\n\tvec3 acc = vec3(0.0);\n\tvec3 div = vec3(0.0);\n    vec2 pixel = vec2(iResolution.y/iResolution.x, 1.0) * radius * .006;\n    float r = 1.0;\n\tfor (float j = 0.0; j < ITERATIONS; j += GOLDEN_ANGLE)\n    {\n       \t\n\t\tvec3 col = texture(tex, uv + pixel * Sample(j, r), radius*1.5).xyz;\n\t\tvec3 bokeh = vec3(5.0) + pow(col, vec3(9.0)) * amount;\n\t\tacc += col * bokeh;\n\t\tdiv += bokeh;\n\t}\n\treturn acc / div;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime*.2 + .5;\n\tfloat r = .7 - .7*cos(time * PI * 2.0);\n    float a = 150.0;\n    \n    vec2 xy = vec2(uv.x,1.0-uv.y);\n    float dis = distance(fragCoord.xy, iResolution.xy/2.0);\n\t\n    fragColor = vec4(Bokeh(iChannel0, xy, r*dis*0.001, a), 1.0);\n}","name":"","description":"","type":"image"}]}