{"ver":"0.1","info":{"id":"4cl3zf","date":"1703308481","viewed":39,"name":"Star pattern (P5R)","username":"BuyMyBeard","description":"Saw the star pattern in Persona 5 Royal menus looked cool, decided to recreate it!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sdf","ui","repeating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\n// SDF function taken from https://www.shadertoy.com/view/4fs3zf\nfloat star(vec2 p, float radius, float inset, float n){\n    float teta = 2.0 * PI / n;\n    mat2x2 rot1 = mat2x2(cos(teta), sin(teta), -sin(teta), cos(teta));\n    \n    vec2 p1 = vec2(0.0, radius);\n    vec2 p2 = vec2(sin(teta*0.5), cos(teta*0.5))*radius*inset;\n    \n    float tetaP = PI + atan(-p.x, -p.y);\n    tetaP = mod(tetaP + PI / n, 2.0 * PI);\n    \n    for(float i = teta; i < tetaP; i+= teta)\n         p = rot1 *p;\n    \n    p.x = abs(p.x);\n    \n    // sdf segment\n    vec2 ba = p2-p1;\n    vec2 pa = p - p1;\n    float h =clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length(pa-h*ba);\n    d *= sign(dot(p - p1, -vec2(ba.y, -ba.x)));\n    return d;\n\n}\n\nfloat starPattern(vec2 p, int starCount, float speed)\n{\n    float colSum = 0.;\n    float outerShape = 1. - smoothstep(-.01, -.001, star(p, 1., .6, 5.));\n    for (int i = 0; i < starCount * 2; i += 1)\n    {\n        float delta = float(i) - (2. * fract(iTime * speed) - 1.);\n        float radius = 1. - delta / float(starCount * 2);\n        float star = 1. - smoothstep(-.01, -.001, star(p, radius, .6, 5.));\n        \n        colSum = i % 2 == 0 ? colSum + star: colSum - star;\n    }\n    float innerStarDelta = 2. * fract(iTime * speed) - 1.;\n    float innerStarRadius = innerStarDelta / float(starCount * 2);\n    if (innerStarRadius > 0.)\n    {\n        float innerStar = 1. - smoothstep(-.01, -.001, star(p, innerStarRadius, .6, 5.));\n        colSum += innerStar;\n    }\n    \n    colSum *= outerShape;\n    \n    return colSum;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    uv.y += .1;\n    \n    float starCol = starPattern(uv, 4, .25f);\n    fragColor = vec4(vec3(starCol) ,1.);\n}\n    ","name":"Image","description":"","type":"image"}]}