{"ver":"0.1","info":{"id":"cl3cW2","date":"1699636713","viewed":30,"name":"Mandelbrot2_me","username":"MathEnthusiast314","description":"mandelbrot","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"Dl3cWj","parentname":"Mandelbrot_me"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = 1.1*(2.0*fragCoord - iResolution.xy) / min(iResolution.y, iResolution.x);\n\n    uv=uv/(1.0+0.5*pow(sin(0.9*time),2.0))+vec2(-0.4,0);\n\n    vec2 c = uv;\n    float factor=2.3*atan(sin(0.9*time))*2.0/PI;\n    vec2 z = vec2(factor*cos(0.334*time), factor*sin(0.334*time));\n    \n    int iterations = 400;\n    int i;\n    \n    for (i = 0; i < iterations; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (length(z) > 4.0) break; // Escape condition\n    }\n    float colRatio=((float(i) )/ (float(iterations)));\n    fragColor = vec4(vec3(pow(colRatio,0.8)), 1.0); // Color based on iterations\n}\n","name":"Image","description":"","type":"image"}]}