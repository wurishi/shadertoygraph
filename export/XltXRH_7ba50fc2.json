{"ver":"0.1","info":{"id":"XltXRH","date":"1478137608","viewed":574,"name":"Simplex made of value noise","username":"afl_ext","description":"This is created by merging 2 3d noises calculated with different offset numbers, cool","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["noise","simplex","iq","perin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I want to mark that this is created by accident\n// afl_ext 2016\nfloat oct(vec3 p){\n    return fract(4768.1232345456 * sin((p.x+p.y*43.0+p.z*137.0)));\n}\nfloat achnoise(vec3 x){\n    vec3 p = floor(x);\n    vec3 fr = smoothstep(0.0, 1.0, fract(x));\n    vec3 LBZ = p + vec3(0.0, 0.0, 0.0);\n    vec3 LTZ = p + vec3(0.0, 1.0, 0.0);\n    vec3 RBZ = p + vec3(1.0, 0.0, 0.0);\n    vec3 RTZ = p + vec3(1.0, 1.0, 0.0);\n\n    vec3 LBF = p + vec3(0.0, 0.0, 1.0);\n    vec3 LTF = p + vec3(0.0, 1.0, 1.0);\n    vec3 RBF = p + vec3(1.0, 0.0, 1.0);\n    vec3 RTF = p + vec3(1.0, 1.0, 1.0);\n\n    float l0candidate1 = oct(LBZ);\n    float l0candidate2 = oct(RBZ);\n    float l0candidate3 = oct(LTZ);\n    float l0candidate4 = oct(RTZ);\n\n    float l0candidate5 = oct(LBF);\n    float l0candidate6 = oct(RBF);\n    float l0candidate7 = oct(LTF);\n    float l0candidate8 = oct(RTF);\n\n    float l1candidate1 = mix(l0candidate1, l0candidate2, fr[0]);\n    float l1candidate2 = mix(l0candidate3, l0candidate4, fr[0]);\n    float l1candidate3 = mix(l0candidate5, l0candidate6, fr[0]);\n    float l1candidate4 = mix(l0candidate7, l0candidate8, fr[0]);\n\n\n    float l2candidate1 = mix(l1candidate1, l1candidate2, fr[1]);\n    float l2candidate2 = mix(l1candidate3, l1candidate4, fr[1]);\n\n\n    float l3candidate1 = mix(l2candidate1, l2candidate2, fr[2]);\n\n    return l3candidate1;\n}\n\nfloat supernoise3d(vec3 p){\n\n\tfloat a =  achnoise(p);\n\tfloat b =  achnoise(p + 120.5);\n\treturn (a + b) * 0.5;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n\tfragColor = vec4(supernoise3d(vec3(iTime, uv.x * 20.0, uv.y * 20.0)));\n}","name":"Image","description":"","type":"image"}]}