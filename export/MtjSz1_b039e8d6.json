{"ver":"0.1","info":{"id":"MtjSz1","date":"1441746197","viewed":626,"name":"webcam effect #1 - public_int_i","username":"public_int_i","description":"webcam effect, mouse y controls number of iterations","likes":7,"published":1,"flags":2,"usePreview":0,"tags":["effect","webcam","1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    int iter = 1 + int((iMouse.y/iResolution.y)*10.);\n    \n    vec3 c = texture(iChannel0,uv).xyz;\n    for (int i = 0; i < 11; i++) {\n        c = c.yzx*( cos(cos(iTime + c.zyx*4.12)*3. + texture(iChannel0,cos(c.xy*3.14)).xyz)*.5 + 1. );\n    \tif (i > iter) break;\n    }\n    \n    const float BRIGHTNESS = 0.4;\n\tfragColor = vec4(c*BRIGHTNESS,1.);\n}","name":"","description":"","type":"image"}]}