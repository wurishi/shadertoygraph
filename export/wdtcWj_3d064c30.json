{"ver":"0.1","info":{"id":"wdtcWj","date":"1601788008","viewed":46,"name":"MM - My first ray marching","username":"MatMercer","description":"From this tutorial https://www.youtube.com/watch?v=PGtv-dBi2wE","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 1024\n#define MIN_DIST 0.01\n#define MAX_DIST 100.0\n\nfloat getDist(vec3 p) {\n    vec4 s = vec4(0, 1, 6, 1);\n    \n    float sphereDist = length(p - s.xyz) - s.w;\n    float planeDist = p.y;\n    \n    return min(sphereDist, planeDist);\n}\n\nfloat rayMarch(vec3 orig, vec3 dir) {\n   \tvec3 curPoint;\n    \n    float dist = 0.0;\n    \n    for(int i = 0; i < MAX_STEPS; i++) {\n        curPoint = orig + dir * dist;\n        \n        float minDist = getDist(curPoint);\n                \n        dist += minDist;\n        \n        if (minDist < MIN_DIST || minDist > MAX_DIST) break;\n    }\n    \n    return dist;\n}\n\nvec3 getNormal(vec3 p) {\n    float d = getDist(p);\n    vec2 e = vec2(.01, 0);\n    \n    vec3 n = d - vec3(\n        getDist(p - e.xyy),\n        getDist(p - e.yxy),\n        getDist(p - e.yyx));\n    \n    return normalize(n);\n}\n\nfloat getLight(vec3 p) {\n    vec3 lightPos = vec3(0, 4, 6);\n    lightPos.xz += vec2(sin(iTime), cos(iTime))*2.;\n    vec3 l = normalize(lightPos - p);\n    vec3 n = getNormal(p);\n    \n    float dif = clamp(dot(n, l), 0., 1.);\n    float d = rayMarch(p+n*MIN_DIST*2., l);\n    if (d < length(lightPos - p)) dif *= .5;\n    \n    return dif;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // center coords\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0);\n    \n    vec3 pos = vec3(0, 1, 0);\n    vec3 dir = normalize(vec3(uv.x, uv.y, 1));\n    float d = rayMarch(pos, dir);\n    //d /= 10.;\n\n    vec3 p = pos + dir * d;\n    \n    float dif = getLight(p);\n\tcol = vec3(dif);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}