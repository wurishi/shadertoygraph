{"ver":"0.1","info":{"id":"4fsSz8","date":"1704932775","viewed":170,"name":"Cartoon dress","username":"dd2d","description":" This is my second attempt to create clothes using SDF. And I have a little problem with lighting.","likes":27,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","sdf","clothes","dress"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#if HW_PERFORMANCE==0\n#define AA 1\n#else\n#define AA 2\n#endif\n\n#define backy vec3(0.33,0.53,0.95);\n#define scarlet vec3(0.65,0.61,0.5);\n\n\nvec2 hash2(vec2 p){\n\treturn fract(vec2(5978.23857, 2915.98275)*sin(vec2(p.x*832.2388 + p.y*234.9852, p.x*921.7381 + p.y*498.2348)))*2.-1.;}\nfloat perlin(vec2 p){\n\tvec2 f = fract(p), m = f*f*(3.-f-f); p -= f;\n\treturn 0.5 + 0.5*mix(mix(dot(hash2(p), f), \n\tdot(hash2(p + vec2(1.,0.)), f - vec2(1.,0.)), m.x),\n\tmix(dot(hash2(p + vec2(0.,1.)), f - vec2(0.,1.)), \n\tdot(hash2(p + 1.), f - 1.), m.x), m.y); }\n\nmat3 makeBase( in vec3 w ){\n\tfloat k = inversesqrt(1.-w.y*w.y);\n    return mat3(vec3(-w.z,0.,w.x)*k, vec3(-w.x*w.y,1.0-w.y*w.y,-w.y*w.z)*k, w);\n}\nmat2 rote(float k){\n\tfloat cs = cos(k), sn = sin(k);\n\treturn mat2(vec2(cs, -sn), vec2(sn, cs)); }\nfloat lenk(in vec3 p, float k){\n\tp = pow(abs(p), vec3(k));\n\treturn pow(p.x+p.y+p.z, 1./k); }\nfloat lenk2(in vec2 p, float k){\n\tp = pow(abs(p), vec2(k));\n\treturn pow(p.x+p.y, 1./k); }\n\nfloat sdmin(float a, float b, float k){\n\tfloat h = max(k-abs(a-b), 0.);\n\treturn min(a, b) - h*h*0.25/k; }\nfloat sdmax(float a, float b, float k){\n\tfloat h = max(k-abs(a-b), 0.);\n\treturn max(a, b) + h*h*0.25/k; }\nfloat sabs(float p, float k){\n\treturn sqrt(p*p + k*k) - k; }\nfloat stick(vec3 p, vec3 a, vec3 b, float r0, float r1) {\n\tvec3 d = b-a; float h = length(d);\n\td = normalize(d); float t = clamp(dot(p-a, d), 0., h);\n\treturn length(a + t*d - p) - mix(r0, r1, t/h); }\nfloat torus0(vec3 p, float h, float r, float k, float k2){\n\tvec2 q = vec2(lenk2(p.xz, k) - h, p.y);\n\treturn lenk2(q, k2) - r; }\nfloat cylinder(vec3 p, float h, float r){\n\tvec2 d = abs(vec2(length(p.xz), p.y)) - vec2(r, h);\n\treturn min(max(d.x,d.y), 0.) + length(max(d, 0.)); }\nfloat ellipsoid0(in vec3 p, vec3 r, float k){\n\tp /= r; float k0 = lenk(p, k);\n\treturn k0*(k0-1.)/length(p/r); }\nfloat cappedCone(vec3 p, float h, float r1, float r2){\n\tvec2 q = vec2(length(p.xz), p.y);\n\tvec2 k1 = vec2(r2,h), k2 = vec2(r2-r1,2.*h);\n\tvec2 ca = vec2(q.x-min(q.x,(q.y<0.)?r1:r2), abs(q.y)-h);\n\tvec2 cb = q - k1 + k2*clamp(dot(k1-q,k2)/dot(k2, k2), 0., 1.);\n\tfloat s = (cb.x<0. && ca.y<0.) ? -1. : 1.;\n\treturn s*sqrt(min(dot(ca, ca),dot(cb, cb))); }\n\n\nvec2 dress(vec3 p){\n\tfloat d0, d, res = 1.; vec3 q = vec3(p.xy, sabs(p.z, 0.1));\n\t\n\td = ellipsoid0(q, vec3(0.14+max(q.y*0.1, -0.1), 0.3, 0.15+max(q.y*0.2, -0.1)), 2.4);\n\td = sdmin(ellipsoid0(q-vec3(0.,0.2,0.), vec3(0.1,0.26,0.17), 2.2), d, 0.1);\n\td = sdmin(torus0(q.xzy-vec3(0.,0.05,0.302), 0.18-sabs(p.x, 0.2)*0.8, 0.001, 2.5, 4.), d, 0.01)*2.9;\n\tq.y += 0.9;\n\tfloat r = clamp(0.05*p.y*sin(12.4*atan(q.x, q.z)) - 0.63*q.y, -0.4, 1.2);\n\td = sdmin(ellipsoid0(q, vec3(0.6,1.,0.7) + r, 2.4), d, 0.2);\n\n\td = sdmax(length(p+abs(q.y)*0.5)-1.8, abs(d), 0.2) - 0.02;\n\tq.y += 0.2;\n\tr = clamp(0.01*p.y*sin(30.*atan(q.x, q.z)) - 0.8*q.y, -0.4, 1.);\n\td0 = sdmax(length(p)-2.3, ellipsoid0(q, max(vec3(0.4,0.6,0.55) + r, 0.01), 2.4), 0.01);\n\tif( d > d0 ){ d = d0; res = 3.; }\n\t\n\treturn vec2(d*0.25, res);\n}\nvec2 sweater(vec3 p){\n\tfloat d0, d, res = 3.; vec3 q = p;\n\t\n\td = ellipsoid0(q-vec3(0.,0.2,0.), vec3(0.14,0.1,0.28), 2.8);\n\td = sdmin(ellipsoid0(q-vec3(0.,0.29,0.), vec3(0.13,0.12,0.29), 2.), d, 0.05);\n\t\n\tfloat s = 0.05; q.y -= 0.29; q.x -= 0.1;\n\tq.z = q.z - s*clamp(round(q.z/s), -1., 1.); q.xy *= rote(-0.4);\n\td = sdmin(ellipsoid0(q, vec3(0.03,0.04,0.007), 3.), d, 0.05);\n\t\n\tq = vec3(p.x,p.y - 0.12,abs(p.z) - 0.31); vec3 o = q;\n\td = sdmin(length(q-vec3(0.05,0.04,0.))-0.05, d, 0.1);\n\td = sdmin(stick(q, vec3(0.), vec3(0.1,-0.1,0.07), 0.06, 0.08), d, 0.05);\n\tq.xz *= rote(0.9); q.yz *= rote(-0.8); q = q.xzy; q.y -= 0.2;\n\td = sdmin(torus0(q, 0.06, 0.04, 2., 2.), d, 0.02);\n\tq.y -= 0.05;\n    \n    d = sdmin(cappedCone(p-vec3(0.,0.42,0.), 0.065, 0.05, 0.1), d, 0.03);\n    \n    float r = 0.001*sin(20.*atan(q.x, q.z));\n\td = min(cappedCone(q, 0.065, 0.01, 0.06-r), d);\n    \n\t\n\t\n\tp.y -= 0.27;\n\td0 = cylinder(p.xzy+vec3(0.,0.,0.3*sabs(p.z, 0.5)), 0.22, 0.165 - p.y*0.2 - sabs(p.x, 0.1)*0.4);\n\tif( d > d0 ){ d = d0; res = -1.;\n}\n\t\n\treturn vec2(d, res); }\nvec2 map(in vec3 p){\n\tfloat d0, d, res = 0.; vec2 d2;\n\tp.y -= 0.4;\n\td = sdmin(abs(length(p) - 8.), abs(p.y + 3.9), 0.8) - 0.1;\n\t\n\td2 = dress(p + vec3(0.,-0.2,0.));\n\tif( d > d2.x ){ d = d2.x; res = d2.y; }\n\n\td2 = sweater(p + vec3(0.,-0.28,0.));\n\tif( d > d2.x ){ d = d2.x; res = d2.y; }\n\t\n\treturn vec2(d, res);\n}\n\n\nvec3 normal(vec3 p){\n\tvec2 e = vec2(5e-5, 0.);\n\treturn normalize(map(p).x - vec3(map(p-e.xyy).x, map(p-e.yxy).x, map(p-e.yyx).x));\n}\nfloat softshadow(vec3 ro, vec3 rd){\n\tfloat res = 1., t = 0.02;\n\tfor( int i=0; i<32; i++ ){\n\t\tfloat h = map(ro + rd*t).x;\n\t\tres = min(res, 4.*h/t );\n\t\tt += clamp(h, 0.02, 0.1);\n\t\tif( h<5e-3 || t>2. ) break; // 1e-3\n\t}\n\treturn clamp(res, 0., 1.);\n}\nvec2 castRay(vec3 ro, vec3 rd){\n\tvec2 res = vec2(-1.); float t = 0.1;\n\tfor( int i=0; i<140 && t<15.; i++ ){\n\t\tvec2 h = map(ro+rd*t); t += h.x;\n\t\tif( abs(h.x) < 1e-2 ){ res = vec2(t, h.y); break; }\n\t}\n\treturn res;\n}\nvec3 render(vec3 ro, vec3 rd){\n\tvec2 res = castRay(ro, rd);\n\tvec3 p = ro + rd*res.x;\n\tvec3 n = normal(p);\n\tvec3 lig = normalize(vec3(1.,0.7,0.));\n\t\n\tfloat dif = floor(8.*(dot(n, lig) + 0.2*perlin(10.*vec2(p.x,0.6*p.z)+20.*p.y)))*0.2;\n\tfloat spe = 0.2*pow(clamp(dot(reflect(rd, n), lig), 0., 1.), 16.);\n\t\n\tvec3 mate = 0.5*backy;\n\tif( abs(res.y-1.) < 1e-2 ){ mate = 0.75*scarlet; }\n\telse if( abs(res.y-3.) < 1e-2 ){ mate = vec3(0.9); spe = 0.5; }\n    \n\tvec3 brdf = dif*(spe + 1.)*vec3(1.,0.5,0.6); //1.2 1.08 0.8\n\treturn mate*mix(brdf, vec3(1.), 0.);\n}\n   \nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float an = iTime*0.1+8.; // 8.\n    vec3 ro = vec3(4.5*sin(an), 0.5, 4.5*cos(an) );\n    vec3 ta = vec3(0.), tot = vec3(0.);\n    mat3 ca = makeBase(normalize(ta-ro));\n    \n    #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ ){\n        vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\n        vec2 p = (-iResolution.xy + 2.*(fragCoord+o))/iResolution.y;\n        #else    \n        vec2 p = (-iResolution.xy + 2.*fragCoord)/iResolution.y;\n        #endif\n        \n        vec3 rd = ca * normalize(vec3(p.xy,2.2) );\n        vec3 col = render(ro, rd);\n    \n        tot += col;\n    #if AA>1\n    }\n    tot /= float(AA*AA);\n    #endif\n\n \tvec2 q = fragCoord/iResolution.xy;\n    tot *= pow(16.*q.x*q.y*(1.-q.x)*(1.-q.y), 0.2);\n    \n    fragColor = vec4(tot, 1.);\n}","name":"Image","description":"","type":"image"}]}