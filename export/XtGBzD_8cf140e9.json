{"ver":"0.1","info":{"id":"XtGBzD","date":"1541931945","viewed":113,"name":"Mandelbrot iteration","username":"nking","description":"Visualisation of the compex plane as it goes through the mandelbrot sequence linearly interpolated between values.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float scale = 3.0;\nconst float timeScale = 0.5;\nconst float PI = 3.1415926535;\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nfloat arctan(vec2 v) {\n\treturn atan(v.y, v.x);\n}\n\nvec3 col(vec2 complex) {\n\tfloat normAng = arctan(-complex) / PI / 2.0 + 0.5;\n\tfloat len = length(complex) + 1.0;\n\tlen = 1.0 / len;\n\n\treturn hsb2rgb(vec3(normAng, 1.0, len));\n}\n\nvec2 sq(vec2 c) {\n\treturn vec2(c.x*c.x - c.y*c.y, 2.0*c.x*c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 screenPos = fragCoord.xy - vec2(0.5, 0.5) * iResolution.xy;\n\tscreenPos /= min(iResolution.x, iResolution.y);\n\tscreenPos *= scale;\n    screenPos += vec2(-0.6,0.0);\n\n    vec2 z = vec2(0.0);\n\tvec2 pz = z;\n\tfloat ntime = mod(iTime * timeScale, 30.0);\n\tfloat dtime = ntime - floor(ntime);\n    \n\tfor (float i = 0.0; i < ntime + 1.0; i++) {\n        pz = z;\n        z = sq(pz) + screenPos;\n    }\n\n    z = mix(pz, z, dtime);\n\n    fragColor = vec4(col(z), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}