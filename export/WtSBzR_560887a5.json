{"ver":"0.1","info":{"id":"WtSBzR","date":"1598307624","viewed":48,"name":"Mandelbrot Testn","username":"dandov","description":"Simple mandelbrot shader","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 center = vec2(0.0, 0.0);\nfloat iter = 80.0;\n\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = (sin(iTime) + 1.0) / 2.0 * 3.0;\n    // scale = 0.9;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec3 uv = vec3(fragCoord/iResolution.xy, 1.0);\n    \n    mat3 offset = mat3(\n    \t1.0, 0.0, 0.0,\n        0.0, 1.0, 0.0,\n        -0.5, -0.5, 1.0\n    );\n    \n    float angle = iTime;\n    mat3 rotationMat = mat3(\n       cos(angle), sin(angle), 0.0,\n       -sin(angle), cos(angle), 0.0,\n       0.0, 0.0, 1.0\n    );\n    \n    float aspectRatio = iResolution.x / iResolution.y;  // 1.7777\n    \n    mat3 scaleMat = mat3(\n    \tscale * aspectRatio,  0.0, 0.0,\n        0.0, scale, 0.0,\n        0.0, 0.0, 1.0\n    );\n    \n    uv = rotationMat * scaleMat * offset * uv;\n    \n    vec2 z, c;\n    \n    if (texelFetch(iChannel1, ivec2(KEY_LEFT,0), 0 ).x > 0.0) {\n        center.x -= 0.01;\n    }\n\n    c.x = (uv.x) - center.x;\n    c.y = (uv.y) - center.y;\n    z = c;\n    float i = 0.0;\n    for(i=0.0; i<iter; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = 2.0 * (z.x * z.y) + c.y;\n\n        if((x * x + y * y) > 256.0) break;\n        z.x = x;\n        z.y = y;\n    }\n\n    // gl_FragColor = texture1D(tex, (i == iter ? 0.0 : float(i)) / 100.0);\n    float u = (i == iter ? 0.0 : float(i)) / iter;\n    fragColor = texture(iChannel0, vec2(u, 0));\n}","name":"Image","description":"","type":"image"}]}