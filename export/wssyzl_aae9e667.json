{"ver":"0.1","info":{"id":"wssyzl","date":"1585394171","viewed":192,"name":"C64 Simon's Basic Rings - Color","username":"ssdsa","description":"Draws concentric rings around 11 random points. \nInspired by https://www.forum64.de/index.php?thread/100980-basic-programme-wirbleibenzuhause/&postID=1501752#post1501752","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["rings","color","c64","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 randompoint( in float anim, in float n )\n{\n    vec2 ab = vec2(sin(anim*0.01+n*n)+sin(anim*0.039)+cos(anim*0.0071),\n                   cos(anim*0.011+n/17.0)+sin(anim*0.036+n*1.3)+cos(anim*0.0078));\n    return vec2(1.25*sin(n*1.7+ab.x), cos(n+ab.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - 0.5*iResolution.xy;\n    uv = 2.0*uv/iResolution.y;\n    \n    float r = 99.9;\n    for (float j = 0.0; j < 11.0; j++) {\n      r = min(r, length(uv - randompoint(iTime, j)));\n    }\n\n    float width = 6.0 / 200.0;\n    float c = 0.5*r/width + 3.0*sin(iTime*0.5)*clamp(length(uv)-0.5, 0.0, 0.5);\n\n    vec3 color = sin( c + vec3(0,1,2) );\n\n    r = fract(r/width);\n    r = 4.0 * abs(2.0*r - 1.0) - 1.5;\n\n    vec3 col = clamp(r, 0.0, 1.0) * color;  \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}