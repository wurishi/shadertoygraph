{"ver":"0.1","info":{"id":"tllBzr","date":"1595896791","viewed":78,"name":"Algebraic curves","username":"MagicDemon","description":"Experimenting with algebraic curves.\nThe black curve represents the zeros of the f0 function.\nUse the mouse to deform the curve.\nBased on https://iquilezles.org/articles/distance/distance.htm","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","curve","algebraic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 transform(in vec2 coord) {\n    return 10.*(coord-iResolution.xy/2.)/iResolution.y;\n}\n\nfloat f0(in float x , in float y) {\n    vec2 m = transform(iMouse.xy);\n    return x*x - y*y*y - 3.*m.x*x*y + 2.*m.y*x*y*y + m.x*m.y;\n}\n\nfloat f(in vec2 v) {\n    return f0(v.x,v.y);\n}\n\nfloat epsilon = .001;\n\nvec2 grad(in vec2 v) {\n    vec2 h = vec2(epsilon , 0);\n    return vec2(f(v+h) - f(v-h) , f(v+h.yx) - f(v-h.yx)) / (2. * h.x);\n}\n\nfloat dist(in vec2 v) {\n    return abs(f(v))/length(grad(v));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = transform(fragCoord);\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\tvec3 col = smoothstep(0.01,0.03, dist(uv)) * vec3(1.,1.,1.);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}