{"ver":"0.1","info":{"id":"WdscWH","date":"1584711605","viewed":251,"name":"Lyapunov Animated","username":"svyatozar","description":"Original code by Ingo Quilez 2013 https://www.shadertoy.com/view/Mds3R8\nNot sure where I found this animated shader years ago, when I needed a placeholder shader for my opengl init code...\n\nMy addition: ability to modify sequence up to 20","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","lyapunov"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Original code author: Inigo Quilez 2013 https://www.shadertoy.com/view/Mds3R8\n// Animation: author unknown :-(\n\nprecision highp float;\n#define ANIMSPEED 0.05\n#define ITERATIONS 20\n// Modify sequence here, for example: AABAB => SEQLEN=5 - (0, 0, 1, 0, 1)\n#define SEQLEN 9\nint seq[] = int[SEQLEN](0, 0, 1, 0, 0, 0, 1, 1, 1);\n\nvec3 calc(in vec2 p) {\n#if 0\n    float w[] = float[20](1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,1.);\n#else\n    float t = iTime * ANIMSPEED;\n    float w[] = float[20](\n\t\t0.97 + 0.04*sin(0.0 + 1.3*t),\n\t\t0.97 + 0.04*sin(1.0 + 1.7*t),\n\t\t0.97 + 0.04*sin(4.0 + 1.1*t),\n\t\t0.97 + 0.04*sin(2.0 + 1.5*t),\n\t\t0.97 + 0.04*sin(5.0 + 1.9*t),\n\t\t0.97 + 0.04*sin(6.0 + 1.8*t),\n\t\t0.97 + 0.04*sin(7.0 + 1.6*t),\n\t\t0.97 + 0.04*sin(8.0 + 1.3*t),\n\t\t0.97 + 0.04*sin(9.0 + 1.7*t),\n\t\t0.97 + 0.04*sin(10.0 + 1.1*t),\n\t\t0.97 + 0.04*sin(11.0 + 1.5*t),\n\t\t0.97 + 0.04*sin(12.0 + 1.9*t),\n\t\t0.97 + 0.04*sin(13.0 + 1.8*t),\n\t\t0.97 + 0.04*sin(14.0 + 1.6*t),\n\t\t0.97 + 0.04*sin(15.0 + 1.3*t),\n\t\t0.97 + 0.04*sin(16.0 + 1.7*t),\n\t\t0.97 + 0.04*sin(17.0 + 1.1*t),\n\t\t0.97 + 0.04*sin(18.0 + 1.5*t),\n\t\t0.97 + 0.04*sin(29.0 + 1.9*t),\n\t\t0.97 + 0.04*sin(20.0 + 1.8*t)\n\t);\n#endif\n\n\tfloat x = 0.5;\n\tfloat h = 0.0;\n\tfor(int i = 0; i < ITERATIONS; i++) {\n\t\tfor(int j = 0; j < SEQLEN; ++j) {\n\t\t\tx = w[j]*p[seq[j]]*x*(1.0-x); h += log2(abs(w[j]*p[seq[j]]*(1.0-2.0*x)));\n\t\t}\n\t}\n\th /= float(ITERATIONS) * float(SEQLEN);\n\n\tvec3 col = vec3(0.0);\n\tif (h < 0.0) {\n\t\th = abs(h);\n\t\tcol = vec3(0.5+0.5*sin(0.0+2.5*h),\n\t\t\t0.5+0.5*sin(0.4+2.5*h),\n\t\t\t0.5+0.5*sin(0.7+2.5*h));\n\t\tcol *= vec3(1.1)*pow(h,0.25);\n\t}\n\n\treturn col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec3 col;\n\tvec2 coord = gl_FragCoord.xy;\n    \n#if 1\n\tcol = calc(3.0 + (1.0 * coord / iResolution.xy));\n#else\n\tcol = calc(3.0 + 1.0*(gl_FragCoord.xy+vec2(0.0,0.0)) / iResolution.xy) +\n\t\tcalc(3.0 + 1.0*(gl_FragCoord.xy+vec2(0.0,0.5)) / iResolution.xy) +\n\t\tcalc(3.0 + 1.0*(gl_FragCoord.xy+vec2(0.5,0.0)) / iResolution.xy) +\n\t\tcalc(3.0 + 1.0*(gl_FragCoord.xy+vec2(0.5,0.5)) / iResolution.xy);\n\tcol /= 4.0;\n#endif\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}