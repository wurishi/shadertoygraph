{"ver":"0.1","info":{"id":"3dd3zN","date":"1567967327","viewed":275,"name":"Blue Scanner ","username":"AlexWalley","description":"Practicing mapping color between the radius and the width. Similar to the scanner in no man's sky.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 gv = fragCoord/iResolution.xy;\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    //You can add a texture to offset the ring, creating an\n    //outline of the image\n\tuv += texture(iChannel0, gv).rb; \n    vec3 col = vec3(0);\n    \n    float width = 0.2;\n    float radius = tan(iTime)*0.2+0.2; //Using tan to create a repeating scan\n    float c = length(uv);\n    \n    //Creating the circle based upon radius and width\n    col += smoothstep(radius+width, radius+width-0.001, c);\n    col -= smoothstep(radius, radius-0.02, c);\n\n    //Creating a linear gradient from inside to out of the ring\n    col *= vec3(0.3, 0.6, 0.8)*1.4*((c-radius+0.03)/(width-0.01));\n    \n    //Adding White ouline on the circle\n    col += smoothstep(radius+width, radius+width-0.01, c);\n    col -= smoothstep(radius+width-0.015, radius+width-0.02, c);\n    col += (sin(c*275.)*0.2)*col; //Holographic type waves\n    \n    col += vec3(0.1, 0.2, 0.33)*0.5;//Raising the background color\n    \n    \n    //col = vec3(c);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}