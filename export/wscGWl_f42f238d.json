{"ver":"0.1","info":{"id":"wscGWl","date":"1569507448","viewed":699,"name":"Pixelated RGB with shadows","username":"reyemxela","description":"I made this to use as a wallpaper for my Android phone, using Shader Editor on the play store.\nIt's evolved over time, starting as just a simple RGB wave, to being pixelated, then with varying brightness for each cell, and finally adding in the \"shadows\"","likes":34,"published":1,"flags":0,"usePreview":0,"tags":["pixel","rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); } // random noise\n\nfloat getCellBright(vec2 id) {\n    return sin((iTime+2.)*rand(id)*2.)*.5+.5; // returns 0. to 1.\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat mx = max(iResolution.x, iResolution.y);\n\tvec2 uv = fragCoord.xy / mx;\n    \n    float time = iTime*.5;\n    \n    uv *= 30.; // grid size\n\n\tvec2 id = floor(uv); // id numbers for each \"cell\"\n    vec2 gv = fract(uv)-.5; // uv within each cell, from -.5 to .5\n\n\tvec3 color = vec3(0.);\n    \n\tfloat randBright = getCellBright(id);\n    \n    vec3 colorShift = vec3(rand(id)*.1); // subtle random color offset per \"cell\"\n    \n    color = 0.6 + 0.5*cos(time + (id.xyx*.1) + vec3(4,2,1) + colorShift); // RGB with color offset\n    \n    float shadow = 0.;\n    shadow += smoothstep(.0, .7,  gv.x*min(0., (getCellBright(vec2(id.x-1., id.y)) - getCellBright(id)))); // left shadow\n    shadow += smoothstep(.0, .7, -gv.y*min(0., (getCellBright(vec2(id.x, id.y+1.)) - getCellBright(id)))); // top shadow\n    \n    color -= shadow*.4;\n    \n    color *= 1. - (randBright*.2);\n    \n\tfragColor = vec4(color, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}