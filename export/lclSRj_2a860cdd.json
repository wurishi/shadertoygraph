{"ver":"0.1","info":{"id":"lclSRj","date":"1705467399","viewed":33,"name":"Beginner Test_01","username":"juykim","description":"I joined shadertoy for the first time today. \nThere are a lot of interesting works. :D","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float d = length(uv);\n    float r = 0.6;\n    \n    float sphere = smoothstep( r, r-.3, d);\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n         \n    float sphereOutSide = 1.0 - sphere;\n    \n    uv = fragCoord.xy / iResolution.xy;\n    \n    \n    float move = sin(iTime);\n    //float moveOffset = min(min(uv.x, 1.0 - uv.x), min(uv.y, 1.0 - uv.y));\n    \n    float moveOffset = min(uv.x, 1.0 - uv.x);\n    moveOffset = smoothstep(move, move, moveOffset); \n    \n    \n    fragColor = vec4( moveOffset * vec3(sphere)*col +  vec3(sphereOutSide) * (1.0-col), 1.0);\n    \n   \n}","name":"Image","description":"","type":"image"}]}