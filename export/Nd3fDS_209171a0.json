{"ver":"0.1","info":{"id":"Nd3fDS","date":"1657067787","viewed":79,"name":"Rolling Square","username":"mikeeu","description":"A square constantly tipping over","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","cube","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159625\n#define TWO_PI 6.283183\n\n// https://www.shadertoy.com/view/sdX3zN\nfloat sdSquare(vec2 uv, float size, vec2 offset) {\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n\n    return max(abs(x), abs(y)) - size;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    uv.y += 0.05;\n    \n    float t = iTime;\n    \n    float ft = fract(t) * fract(t);\n    \n    \n    float a = ft * PI * 0.5;\n    a *= -1.;\n    \n    float bnc = sin(ft * PI);\n    // bnc = bnc * bnc;\n    uv.y -= bnc * 0.1;\n    \n    uv *= mat2(cos(a), sin(a), -sin(a), cos(a));\n    \n\n    float d = smoothstep(0.1, 0.105, sdSquare(uv, .1, vec2(0.)));\n    vec3 col = vec3(d);\n    \n    //brightness / color\n    col = (col - 1.0) * -1.;\n    col *= vec3(.9, 0.2, 0.2);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}