{"ver":"0.1","info":{"id":"DdjcDG","date":"1688114717","viewed":36,"name":"波浪线","username":"songyib","description":"波浪线","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 将像素坐标归一化（区间 [0.0, 1.0]）\n    // iResolution 是 Shadertoy 提供的视口分辨率全局变量（类型：vec3）\n    vec2 uv = fragCoord / iResolution.xy;\n\t\n    // 振幅（控制波浪顶端和底端的高度）\n    float amplitude = 0.05;\n    \n    // 角速度（控制波浪的周期）\n    float angularVelocity = 10.0;\n    \n    // 频率（控制波浪移动的速度）\n    float frequency = 10.0;\n    \n    // 偏距（设为 0.5 使得波浪垂直居中于屏幕）\n    float offset = 0.5;\n    \n    // 初相位（正值表现为向左移动，负值则表现为向右移动）\n    // iTime 是 Shadertoy 提供的运行时间全局变量（类型：float）\n    float initialPhase = frequency * iTime;\n    \n    // 代入正弦曲线公式计算 y 值\n    // y = Asin(ωx ± φt) + k\n    float y = amplitude * sin((angularVelocity * uv.x) + initialPhase) + offset;\n    \n    // 区分 y 值上下部分，设置不同颜色\n    vec4 color = uv.y > y ? vec4(0.0, 0.0, 0.0, 1.0) : vec4(0.0, 0.7, 0.9, 1.0);\n\t\n    // 输出到屏幕\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}