{"ver":"0.1","info":{"id":"7sffDf","date":"1645476807","viewed":92,"name":"2d hash function","username":"levkruglyak","description":" ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash(uint b) {\n    uint a = uint(b);\n    a = (a ^ uint(61)) ^ (a >> 16);\n    a = a + (a << 3);\n    a = a ^ (a >> 4);\n    a = a * uint(0x27d4eb2d);\n    a = a ^ (a >> 15);\n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = 1.0;\n    // Time varying pixel color\n    uint x = uint(fragCoord.x / zoom);\n    uint y = uint(fragCoord.y / zoom);\n    \n    uint a = x-uint(iMouse.x / zoom)+hash(y-uint(iMouse.y / zoom));\n     \n    vec3 col = vec3(float(hash(a)) / 4000000000.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}