{"ver":"0.1","info":{"id":"4sdBW8","date":"1524903016","viewed":458,"name":"helix 2","username":"FabriceNeyret2","description":".","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","spiral","helix","spring","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/XsdBW8\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,l,d;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),    // ray direction\n          p = 30./q;                          // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.015 )\n        q = p,\n        q.xz *= R, q.yz *= R,                 // rotation\n        l = length(q.xy), d = sin(atan(q.y,q.x)-q.z),           // sin: double\n                      //  d = mod(atan(q.y,q.x)-q.z,6.28)-3.14, // mod: single\n        t = length(vec2(l-4.,d)) - .5,        // double-spring\n        p += t*D;                             // step forward = dist to obj\n}\n","name":"Image","description":"","type":"image"}]}