{"ver":"0.1","info":{"id":"wlSBWK","date":"1599834311","viewed":150,"name":"1 - Loading","username":"Krabcode","description":"here we go again","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["loading","backbuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define iFrame float(iFrame)\n\nfloat sdCircle( vec2 p, float r ){\n    return length(p) - r;\n}\n\nvec3 blur(sampler2D tex, vec2 uv){\n    vec2 resolution = iResolution.xy;\n    vec2 cv = (gl_FragCoord.xy-.5*resolution) / resolution.y;\n    float offset = 2.*(1. / resolution.x);\n\n    vec2 tc0 = uv + vec2(-offset, -offset);\n    vec2 tc1 = uv + vec2(0.0, -offset);\n    vec2 tc2 = uv + vec2(+offset, -offset);\n    vec2 tc3 = uv + vec2(-offset, 0.0);\n    vec2 tc4 = uv + vec2(0.0, 0.0);\n    vec2 tc5 = uv + vec2(+offset, 0.0);\n    vec2 tc6 = uv + vec2(-offset, +offset);\n    vec2 tc7 = uv + vec2(0.0, +offset);\n    vec2 tc8 = uv + vec2(+offset, +offset);\n\n    vec4 col0 = texture(tex, tc0);\n    vec4 col1 = texture(tex, tc1);\n    vec4 col2 = texture(tex, tc2);\n    vec4 col3 = texture(tex, tc3);\n    vec4 col4 = texture(tex, tc4);\n    vec4 col5 = texture(tex, tc5);\n    vec4 col6 = texture(tex, tc6);\n    vec4 col7 = texture(tex, tc7);\n    vec4 col8 = texture(tex, tc8);\n\n    vec4 sum = (1.0 * col0 + 2.0 * col1 + 1.0 * col2 +\n    2.0 * col3 + 4.0 * col4 + 2.0 * col5 +\n    1.0 * col6 + 2.0 * col7 + 1.0 * col8) / 16.0;\n    return sum.rgb;\n}\n\nfloat hash12(vec2 p){\n    vec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = (gl_FragCoord.xy-.5 * iResolution.xy) / iResolution.y;\n    float t = iFrame*.01;\n    uv += vec2(sin(t), cos(t))*.3;\n    float r = 0.045;\n    float prism = .0035;\n    vec3 col = vec3(\n        sdCircle(uv-prism, r),\n        sdCircle(uv, r),\n        sdCircle(uv+prism, r));\n    col = smoothstep(dFdx(uv.x), 0., col);\n    col += .2*vec3(hash12(3000.*uv.xy));\n    \n    // vec3 old = texture(iChannel0, fragCoord.xy / iResolution.xy).rgb;\n    vec3 old = blur(iChannel0, fragCoord.xy / iResolution.xy);\n    old *= .995;\n    old -= .015;\n    col = col*.15 + old;\n    fragColor = vec4(col,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}