{"ver":"0.1","info":{"id":"XsdfRX","date":"1526161869","viewed":590,"name":"gyroid b","username":"FabriceNeyret2","description":".","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","sdf","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/4stfRX\n\n#define R(t) mat2( sin(t+vec4(0,33,11,0)) )\n\nvoid mainImage(out vec4 O, vec2 U) {\n    \n    float t = iTime,v,d=t;\n    vec3  q = iResolution,\n          D = vec3(.3*(U+U-q.xy)/q.y, -1),               // ray direction\n          p = 30./q, a;                                  // marching point along ray \n    O-=O; \n    for ( O++; O.x > 0. && d > .01 ; O-=.015 )\n        q = p,\n        a = p, a.xz*= R(1.), a.yz*= R(1.),\n        a = abs(a),\n        d = max(a.x,max(a.y,a.z))-6.,                    // clamped to cube before rot\n        q.xz *= R(t), q.yz *= R(t),                      // rotation\n        d = max(d, abs( v= dot(sin(q),cos(q.yzx)) ) -.1),// gyroid\n        a = abs(fract(q)-.5),\n        d = max(d, max(a.x,max(a.y,a.z))-.5+.05*sin(t) ),\n        p += .5*d*D;                                     // step forward = dist to obj\n    O *= sign(v)>0. ? vec4(1,.8,.8,1) : vec4(.8,.8,1,1);\n}\n","name":"Image","description":"","type":"image"}]}