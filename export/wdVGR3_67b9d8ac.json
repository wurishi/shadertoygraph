{"ver":"0.1","info":{"id":"wdVGR3","date":"1570675372","viewed":242,"name":"Compress color","username":"kam19_77","description":"compress rgb8 to rgb565","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["compress"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n#if ENABLE_COLOR_COMPRESS\n    col = floor(col * 255.0f) / 255.0f;\n    col = DecodeColor(col);\n#endif\n\n    // Output to screen\n    fragColor = vec4(col, 1.0f);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n#if ENABLE_COLOR_COMPRESS\n    col = EncodeColor(col);\n#endif\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0f);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define ENABLE_COLOR_COMPRESS\t(1)\n\n\nvec3 EncodeColor(in vec3 rgb8)\n{\n    float r = floor(rgb8.r * 31.0f + 0.5f);\n    float g = floor(rgb8.g * 63.0f + 0.5f);\n    float b = floor(rgb8.b * 31.0f + 0.5f);\n    \n    float gh = floor(g / 8.0f);\n    float gl = g - gh * 8.0f;\n    \n    vec2 rg8;\n    rg8.r = floor(r + gh * 32.0f);\n    rg8.g = floor(b + gl * 32.0f);\n    \n    return vec3(rg8 / 255.0f, 0.0f);\n}\n\nvec3 DecodeColor(in vec3 rgx8)\n{\n    rgx8 = floor(rgx8 * 255.0f);\n    \n    float gh = floor(rgx8.r / 32.0f);\n    float gl = floor(rgx8.g / 32.0f);\n    \n    vec3 rgb8;\n    rgb8.r = (rgx8.r - gh * 32.0f) / 31.0f;\n    rgb8.g = (gh * 8.0f + gl) / 63.0f;\n    rgb8.b = (rgx8.g - gl * 32.0f) / 31.0f;\n    \n    return rgb8;\n}\n\n","name":"Common","description":"","type":"common"}]}