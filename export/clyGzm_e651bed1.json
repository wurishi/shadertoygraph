{"ver":"0.1","info":{"id":"clyGzm","date":"1683708492","viewed":103,"name":"Flow Rect","username":"futuresigner","description":"Learn rect","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rectCenter(vec2 pos, float width, float height, vec2 uv, float blur){\n    return \n        smoothstep(-width-blur+pos.x,-width+blur+pos.x, uv.x) * (1.0-smoothstep(width-blur+pos.x, width+blur+pos.x, uv.x))*\n        smoothstep(-height-blur+pos.y, -height+blur+pos.y, uv.y) * (1.0-smoothstep(height-blur+pos.y, height+blur+pos.y, uv.y));\n}\n\nfloat remap01(float a, float b, float t){\n    return (t-a) / (b-a);\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n    return remap01(a, b, t) * (d-c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Time varying pixel color\n    float x = uv.x;\n    float y = uv.y + sin(uv.x * 5.0 - iTime) * .1;\n    float posX = 0.0;\n    float posY = 0.0;\n    float blur = remap(posX-.8, posX+.8, .03, .1, x);\n    blur *= pow(blur* 15.0, 2.);\n    vec3 col = vec3(\n        rectCenter(vec2(posX, 0.01), 0.8, 0.25, vec2(x, y + sin(x * 6. + iTime)*.01), blur),\n        rectCenter(vec2(posX, 0.0), 0.8, 0.25, vec2(x, y + sin(x * 3. + iTime + 1.5)*.01), blur),\n        rectCenter(vec2(posX, -0.01), 0.8, 0.25, vec2(x, y + sin(x + iTime + 3.0)*.01), blur));\n    blur = remap(posX-.8, posX+.8, .01, .2, x);\n    col -= vec3(\n        rectCenter(vec2(posX, 0.01), 0.8, 0.045, vec2(x, y + sin(x * 3. + iTime + 10.)*.01 ), blur),\n        rectCenter(vec2(posX, 0.0), 0.8, 0.045, vec2(x, y + sin(x * 6. + iTime + 3.5 + 10.)*.01), blur),\n        rectCenter(vec2(posX, -0.01), 0.8, 0.045, vec2(x, y + sin(x + iTime + 7.0 + 10.)*.01), blur));\n    blur = remap(posX-.8, posX+.8, .01, .11, x);\n    col -= vec3(\n        rectCenter(vec2(posX, 0.01 - .08), 0.8, 0.02, vec2(x, y + sin(x * 3. + iTime)*.01), blur),\n        rectCenter(vec2(posX, 0.0- .08), 0.8, 0.02, vec2(x, y + sin(x * 6. + iTime + 3.5)*.01), blur),\n        rectCenter(vec2(posX, -0.01- .08), 0.8, 0.02, vec2(x, y + sin(x + iTime + 7.0)*.01), blur));\n    col -= vec3(\n        rectCenter(vec2(posX, 0.01 + .08), 0.8, 0.02, vec2(x, y + sin(x * 3. + iTime)*.01), blur),\n        rectCenter(vec2(posX, 0.0 + .08), 0.8, 0.02, vec2(x, y + sin(x * 6. + iTime + 3.5)*.01), blur),\n        rectCenter(vec2(posX, -0.01 + .08), 0.8, 0.02, vec2(x, y + sin(x + iTime + 7.0)*.01), blur));\n    \n    blur = remap(posX-.8, posX+.8, .01, .09, x);\n    col -= vec3(\n        rectCenter(vec2(posX, 0.01 + .15), 0.8, 0.01, vec2(x, y + sin(x * 10. + iTime)*.01), blur),\n        rectCenter(vec2(posX, 0.0 + .15), 0.8, 0.01, vec2(x, y + sin(x * 10. + iTime + 3.5)*.01), blur),\n        rectCenter(vec2(posX, -0.01 + .15), 0.8, 0.01, vec2(x, y + sin(x * 10. + iTime + 7.0)*.01), blur));\n    col -= vec3(\n        rectCenter(vec2(posX, 0.01 - .15), 0.8, 0.01, vec2(x, y + sin(x * 10. + iTime)*.01), blur),\n        rectCenter(vec2(posX, 0.0 - .15), 0.8, 0.01, vec2(x, y + sin(x * 10. + iTime + 3.5)*.01), blur),\n        rectCenter(vec2(posX, -0.01 - .15), 0.8, 0.01, vec2(x, y + sin(x * 10. + iTime + 7.0)*.01), blur));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}