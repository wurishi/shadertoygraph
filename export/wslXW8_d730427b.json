{"ver":"0.1","info":{"id":"wslXW8","date":"1551318614","viewed":67,"name":"Layered House with steps","username":"TheMurrMan","description":"Creating a house with layers and steps","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["steps","layers"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Shape Colors\nvec3 houseColor = vec3(0.6,0.0,0.0); \nvec3 chimneyColor = vec3(1.0,1.0,0.0); \nvec3 windowColor = vec3(1.0,0.0,1.0); \nvec3 bacground = vec3(0.5,0.5,0.5);\nvec3 doorColor = vec3(0.7,0.5,0.0);\n// Locations\n\n// window1\nvec2 windowLocation= vec2(0.50,0.2);\nvec2 windowsDimension = vec2(0.2,0.2);\n\n// window2\nvec2 windowLocation2= vec2(1.1,0.2);\nvec2 windowsDimension2 = vec2(0.2,0.2);\n//house\nvec2 houseLocation = vec2 (0.4,0.0);\nvec2 houseDimension = vec2(1.0, 0.75);\n//chimney\nvec2 chimneyLocation= vec2(0.4, 0.65);\nvec2 chimneyDimension = vec2(0.25, 0.25);\n// door\nvec2 doorLocation = vec2 (0.78,0.0);\nvec2 doorDimension = vec2(0.25, 0.5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    // layers\n    vec4 layer1 = vec4(bacground, 1.0);\n    vec4 layer2 = vec4(houseColor, 0.0);\n    vec4 layer3 = vec4(chimneyColor, 0.0);\n    vec4 layer4 = vec4(windowColor, 0.0);\n    vec4 layer5 = vec4(windowColor, 0.0);\n    vec4 layer6 = vec4(doorColor, 0.0);\n    \n    // house\n    float opacity1P1 = (step(houseLocation.x, uv.x) - step(houseLocation.x + houseDimension.x, uv.x));\n    float opacity1P2 = (step(houseLocation.y, uv.y) - step(houseLocation.y + houseDimension.y, uv.y));\n    layer2.a = (opacity1P1 * opacity1P2);\n    \n    //chimney\n    float opacity2P1 = (step(chimneyLocation.x, uv.x) - step(chimneyLocation.x + chimneyDimension.x, uv.x));\n    float opacity2P2 = (step(chimneyLocation.y, uv.y) - step(chimneyLocation.y + chimneyDimension.y, uv.y));\n    layer3.a = (opacity2P1 * opacity2P2);\n    \n    // window 1\n    float opacity3P1 = (step(windowLocation.x, uv.x) - step(windowLocation.x + windowsDimension.y, uv.x));\n    float opacity3P2 = (step(windowLocation.y, uv.y) - step(windowLocation.y + windowsDimension.y, uv.y));\n    layer4.a = (opacity3P1 * opacity3P2);\n    \n    // window 2\n    float opacity4P1 = (step(windowLocation2.x, uv.x) - step(windowLocation2.x + windowsDimension2.y, uv.x));\n    float opacity4P2 = (step(windowLocation2.y, uv.y) - step(windowLocation2.y + windowsDimension2.y, uv.y));\n    layer5.a = (opacity4P1 * opacity4P2);\n    \n    // door\n    float opacity5P1 = (step(doorLocation.x, uv.x) - step(doorLocation.x + doorDimension.x, uv.x));\n    float opacity5P2 = (step(doorLocation.y, uv.y) - step(doorLocation.y + doorDimension.y, uv.y));\n    layer6.a = (opacity5P1 * opacity5P2);\n    \n    //mixes each layer\n    vec4 comp = mix(layer1, layer3, layer3.a);\n    comp = mix(comp, layer2, layer2.a);\n    comp = mix(comp, layer4, layer4.a);\n    comp = mix(comp, layer5, layer5.a);\n    comp = mix(comp, layer6, layer6.a);\n    \n    // Output to screen\n    fragColor = comp;\n}","name":"Image","description":"","type":"image"}]}