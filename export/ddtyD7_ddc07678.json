{"ver":"0.1","info":{"id":"ddtyD7","date":"1695149643","viewed":101,"name":"06 - squareish","username":"thomasfriday","description":"My sixth shader.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["square","squareish"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float square(in vec2 p, in float s) {\n    vec2 d = abs(p) - s;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n  vec2 uv0 = uv;\n  uv *= 0.75;\n  vec3 col = vec3(0);\n  \n  for (float i = 1.; i < 4.; i++) {\n    uv = fract(uv * 2.) - 0.5;\n    \n    float d = square(uv, 1.);\n    d *= length(uv0); // to see the squares, comment this line\n    d = cos(d * 8. - iTime * i * 0.3);\n    d = abs(d);\n\n    col += smoothstep(1. / iResolution.y, 0., d - 0.2);\n  }\n\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}