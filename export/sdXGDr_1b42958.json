{"ver":"0.1","info":{"id":"sdXGDr","date":"1615771756","viewed":72,"name":"p3 camera","username":"DEMERCY","description":"shaderToy3D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["camera","practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//click the the canvas please\nfloat distLine(vec3 ro,vec3 rd,vec3 p){\n    return length(cross(p-ro,rd))/length(rd);\n}\nfloat drawPoint(vec3 ro,vec3 rd,vec3 p){\n    float d = distLine(ro,rd,p);\n    d = smoothstep(.06,.05,d);\n    return d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord - .5*iResolution.xy ) /iResolution.y;\n    \n    vec3 ro = vec3(3.*sin(iTime),2,-3.*cos(iTime));  //ray orgin\n    vec3 lookat = vec3(.5);\n    float zoom = 1. + iMouse.y*2./iResolution.y;\n    \n    vec3 f = normalize(lookat-ro);\n    vec3 r = cross(vec3(0,1,0),f);\n    vec3 u = cross(f,r);\n    \n    vec3 c = ro + f*zoom;\n    vec3 i = c + uv.x*r+uv.y*u;\n    vec3 rd = i - ro;\n    \n    float d = 0.;             //data before view translate\n    d += drawPoint(ro,rd,vec3(0.,0.,0.));\n    d += drawPoint(ro,rd,vec3(0.,0.,1.));\n    d += drawPoint(ro,rd,vec3(0.,1.,0.));\n    d += drawPoint(ro,rd,vec3(0.,1.,1.));\n    d += drawPoint(ro,rd,vec3(1.,0.,0.));\n    d += drawPoint(ro,rd,vec3(1.,0.,1.));\n    d += drawPoint(ro,rd,vec3(1.,1.,0.));\n    d += drawPoint(ro,rd,vec3(1.,1.,1.));\n\n    fragColor = vec4(max(d,0.6),vec3(d));\n}","name":"Image","description":"","type":"image"}]}