{"ver":"0.1","info":{"id":"MlcyW7","date":"1532847659","viewed":169,"name":"unexcepted fractal","username":"archibate","description":"unexcepted fractal! pretty cool and intresting, I think.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","3d","fractal","ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdSphere(vec3 p, vec3 c, float rad)\n{\n    return distance(p, c) - rad;\n}\n\nfloat map(vec3 p)\n{\n    const float S = 2.;\n    p = mod(p + S*.5, S) - S*.5;\n\treturn sdSphere(p, vec3(0), 0.2);\n}\n\n#define MAXD 1e3\n\nfloat trace( in vec3 ro, in vec3 rd )\n{\n    float t = 0.01;\n    for( int i=0; i<200; i++ )\n    {\n\t    float precis = 0.001 * t;\n        \n\t    float h = map(ro + rd * t);\n        if( h<precis||t>MAXD ) break;\n        t += h;\n    }\n    return t;\n}\n\nvec3 calcNormal( in vec3 pos, in float t )\n{\n    float precis = 0.001 * t;\n\n    vec2 e = vec2(1.0,-1.0)*precis;\n    return normalize( e.xyy*map( pos + e.xyy ) + \n\t\t\t\t\t  e.yyx*map( pos + e.yyx ) + \n\t\t\t\t\t  e.yxy*map( pos + e.yxy ) + \n                      e.xxx*map( pos + e.xxx ) );\n}\n\nvec3 radiance(in vec3 eye, in vec3 dir)\n{\n    float t = trace(eye, dir);\n    if (t > MAXD)\n        return texture(iChannel0, dir).rgb;\n    vec3 pos = eye + t * dir;\n    \n    vec3 norm = calcNormal(pos, t);\n    \n    float li = -dot(dir, norm);\n    // Thanks Fabrice :)\n    //return vec3(li);\n    //return li * exp(-t/vec3(10,70,200));\n    //return vec3(li * sin(t+iTime));\n    //return li * (.6+.6*sin(t+ vec3(0,23,21))); // https://www.shadertoy.com/view/ll2cDc\n    //return li * (.6+.6*sin(t-4.*iTime+ vec3(0,23,21)));\n    return li * (.6+.6*sin(t-4.*iTime+ vec3(0,23,21))) * exp(-t/33.);\n    //return vec3( li * exp(-t/20.) );\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    U = U / iResolution.xy - 0.5;\n    U.x *= iResolution.x / iResolution.y;\n    \n    vec2 a = (iMouse.xy / iResolution.xy - .5) * 1.25;\n    mat3 cam = mat3(1, 0, 0,\n        0, cos(a.y), sin(a.y),\n        0, -sin(a.y), cos(a.y)) * mat3(\n        cos(a.x), 0, sin(a.x),\n        0, 1, 0,\n        -sin(a.x), 0, cos(a.x));\n    \n    vec3 eye = vec3(0, 0, -1);\n    vec3 dir = cam * normalize(vec3(U, 1));\n    O.rgb = radiance(eye, dir);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}