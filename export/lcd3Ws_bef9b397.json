{"ver":"0.1","info":{"id":"lcd3Ws","date":"1712284617","viewed":34,"name":"Spiral student 2","username":"amusement","description":"guess what I am doin","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n// Function to rotate a 2D coordinate around the origin\nvec2 rotate2D(vec2 uv, float angle) {\n    float c = tan(angle);\n    float s = tan(angle);\n    mat2 rotationMatrix = mat2(c, -s, s, c);\n    return rotationMatrix * uv;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Adjust the coordinate system, with the origin at the center of the screen\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n\n    // Calculate the polar coordinates\n    float r = length(uv) * 2.0; // Adjust radius here for spread\n    float theta = atan(uv.y, uv.x);\n\n    // Time variable for animation and rotation\n    float time = iTime * 2.0; // Control speed of rotation\n    theta -= time; // Rotate spiral\n\n    // Spiral parameters\n    float a = 1.1; // Spacing between arms\n    float b = 12.0; // Tightness of spiral\n\n    // Adjust for continuous spiral\n    float spiral = mod(theta - b * log(r + 0.01), TWO_PI);\n    float w = 1.3; // Width of the spiral arms\n    float line = smoothstep(w, w + 0.01, abs(spiral - PI) - r);\n\n    // Apply texture to spiral\n    vec2 texCoordSpiral = vec2(0.5 + 0.5 * sin(theta), 0.5 + 0.5 * cos(theta));\n    vec4 texColorSpiral = texture(iChannel0, texCoordSpiral);\n\n    // Calculate the rotation for the background texture\n    float backgroundRotation = -time * 1.0; // Rotate in opposite direction and faster\n    vec2 rotatedUV = rotate2D(uv, backgroundRotation);\n\n    // Apply second texture to background\n    vec2 texCoordBackground = rotatedUV * 0.5 + 0.5; // Adjust if necessary\n    vec4 texColorBackground = texture(iChannel1, texCoordBackground);\n\n    // Combine the line and the texture color for the spiral\n    vec3 color = mix(texColorBackground.rgb, texColorSpiral.rgb, line);\n\n    // Set the fragment color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}