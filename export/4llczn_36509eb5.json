{"ver":"0.1","info":{"id":"4llczn","date":"1503157282","viewed":459,"name":"The first industrial Revolution","username":"archibate","description":"a simple demo for Perlin noise.\nrefs:\n[url]http://blog.csdn.net/candycat1992/article/details/50346469[/url]\n[url]http://blog.csdn.net/panda1234lee/article/details/52085375[/url]\n[i]涉猎过的知识都像是不断汇入大海的涓涓细流，你怎么知道是哪条汇入的溪流让海洋成为海洋呢[/i] well :)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float nose(float x)\n{\n    return x * .8 + .08;\n}\n\nvec3 hash22(vec3 p)\n{\n    p = vec3( dot(p,vec3(127.1,311.7,284.4)),\n              dot(p,vec3(269.5,183.3,162.2)),\n\t      \t  dot(p,vec3(228.3,164.9,126.0)));\n\n    return -1.0 + 2.0 * fract(sin(p)*43758.5453123);\n}\n\nfloat noise(vec3 p)\n{\n    vec3 pi = floor(p);\n    vec3 pf = p - pi;\n    vec3 w = pf * pf * (3.0 - 2.0 * pf);\n    return nose(mix(\n\t\t\t    mix(\n\t\t\t\t    mix(\n\t\t\t\t\t    dot(hash22(pi + vec3(0, 0, 0)), pf - vec3(0, 0, 0)), \n\t\t\t\t\t    dot(hash22(pi + vec3(1, 0, 0)), pf - vec3(1, 0, 0)),\n\t\t\t\t\t    w.x),\n\t\t\t\t    mix(\n\t\t\t\t\t    dot(hash22(pi + vec3(0, 1, 0)), pf - vec3(0, 1, 0)), \n\t\t\t\t\t    dot(hash22(pi + vec3(1, 1, 0)), pf - vec3(1, 1, 0)),\n\t\t\t\t\t    w.x),\n\t\t\t\t    w.y),\n\t\t\t    mix(\n\t\t\t\t    mix(\n\t\t\t\t\t    dot(hash22(pi + vec3(0, 0, 1)), pf - vec3(0, 0, 1)), \n\t\t\t\t\t    dot(hash22(pi + vec3(1, 0, 1)), pf - vec3(1, 0, 1)),\n\t\t\t\t\t    w.x),\n\t\t\t\t    mix(\n\t\t\t\t\t    dot(hash22(pi + vec3(0, 1, 1)), pf - vec3(0, 1, 1)), \n\t\t\t\t\t    dot(hash22(pi + vec3(1, 1, 1)), pf - vec3(1, 1, 1)),\n\t\t\t\t\t    w.x),\n\t\t\t\t    w.y),\n\t\t\t    w.z));\n}\n\nfloat noise_sum(vec3 p)\n{\n\tfloat f = 0.0;\n\tp = p * 4.0;\n\tf += 1.0000 * noise(p); p = 2.0 * p;\n\tf += 0.5000 * noise(p); p = 2.0 * p;\n\tf += 0.2500 * noise(p); p = 2.0 * p;\n\tf += 0.1250 * noise(p); p = 2.0 * p;\n\tf += 0.0625 * noise(p); p = 2.0 * p;\n\treturn f;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = texture(iChannel0, uv);\n\tuv.x *= iResolution.x / iResolution.y;\n\tvec3 uvt = vec3(uv + vec2(iTime * -0.1, iTime * 0.02), iTime * 0.1);\n\tfloat noise = noise_sum(uvt);\n\tcolor.rgb *= mix(color.rgb * vec3(1.6, 1.0, 0.3), vec3(1.8, 1.2, 0.2) * noise, 0.7);\n\tfragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}