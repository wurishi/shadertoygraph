{"ver":"0.1","info":{"id":"fd23zz","date":"1616860451","viewed":381,"name":"Menger Sponge Tunnel","username":"kithy","description":"fractal,raymarching,Menger Sponge","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractal","mengersponge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 64\n#define EPS 0.001\n#define ITR 5\n\n\nmat2 rotate(float r){\n\tfloat c=cos(r);\n\tfloat s=sin(r);\n\treturn mat2(c,s,-s,c);\n}\n\nfloat maxcomp(vec2 p){\n\treturn max(p.x,p.y);\n}\n\n\nfloat sdCross(vec3 p){\n\tp=abs(p);\n\tvec3 d=vec3(max(p.x,p.y),\n\t\t\t\tmax(p.y,p.z),\n\t\t\t\tmax(p.z,p.x));\n\treturn min(d.x,min(d.y,d.z))-(1.0/3.0);\n}\n\n\nfloat sdCrossRep(vec3 p){\n\tvec3 q=mod(p+1.0,2.0)-1.0;\n\treturn sdCross(q);\n}\n\n\nfloat sdCrossRepScale(vec3 p,float s){\n\treturn sdCrossRep(p*s)/s;\n}\n\n\nfloat scene(vec3 p){\n\t\n\tfloat scale=1.0;\n\tfloat dist=0.0;\n\tfor(int i=0;i<ITR;i++){\n\t\tdist=max(dist,-sdCrossRepScale(p,scale));\n\t\tscale*=3.0;\n\t}\n\treturn dist;\n}\n\nvec3 genNormal(vec3 p){\n\treturn normalize(vec3(\n\t\tscene(p+vec3(EPS,0.0,0.0))-scene(p-vec3(EPS,0.0,0.0)),\n\t\tscene(p+vec3(0.0,EPS,0.0))-scene(p-vec3(0.0,EPS,0.0)),\n\t\tscene(p+vec3(0.0,0.0,EPS))-scene(p-vec3(0.0,0.0,EPS))\n\t\t));\n}\n\nvec3 hsv2rgb(vec3 c){\n\tvec4 K=vec4(1.0,2.0/3.0,1.0/3.0,3.0);\n\tvec3 p=abs(fract(c.xxx+K.xyz)*6.0-K.www);\n\treturn c.z*mix(K.xxx,clamp(p-K.xxx,0.0,1.0),c.y);\n}\n\nvec4 colorize(float c){\n\tfloat hue=mix(0.6,1.15,min(c*1.2-0.05,1.0));\n\tfloat sat=1.0-pow(c,4.0);\n\tfloat lum=c;\n\tvec3 hsv=vec3(hue,sat,lum);\n\tvec3 rgb=hsv2rgb(hsv);\n\treturn vec4(rgb,1.0);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=fragCoord.xy/iResolution.xy*2.0-1.0;\n\n\tvec3 cameraPos=vec3(0.0,0.0,iTime*0.5);\n\tvec3 cameraDir=vec3(0.0,0.0,1.0);\n\tvec3 cameraPlaneU=vec3(1.0,0.0,0.0);\n\tvec3 cameraPlaneV=vec3(0.0,1.0,0.0)*(iResolution.y/iResolution.x);\n\n\tvec3 rayPos=cameraPos;\n\n\tvec3 rayDir=cameraDir+uv.x*cameraPlaneU+uv.y*cameraPlaneV;\n\n\trayDir=normalize(rayDir);\n\n\trayDir.xy*=rotate(iTime*0.5);\n\trayDir.yz*=rotate(iTime*0.5);\n\n\tfloat dist=scene(rayPos);\n\n\tfloat emission=0.0;\n\t\n\n\tint stapsTaken;\n\tfor(int i=0;i<MAX_STEPS;i++){\n\t\tif(dist<EPS)break;\n\t\trayPos+=rayDir*dist;\n\t\tdist=scene(rayPos);\n\n\t\temission+=exp(dist*-0.4);\n\t\n\t\tstapsTaken=i;\n\t}\n\n\n\tvec4 color=0.05*emission*vec4(0.3,0.3,0.9,1.0);\n\tfragColor=color;\n}","name":"Image","description":"","type":"image"}]}