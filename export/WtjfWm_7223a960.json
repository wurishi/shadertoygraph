{"ver":"0.1","info":{"id":"WtjfWm","date":"1599156808","viewed":140,"name":"Math Animation 2","username":"Deirin","description":"idkk","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","math","sdf","animation","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdRoundedX( in vec2 p, in float w, in float r )\n{\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*0.5) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //time\n    float t = iTime;\n    \n    //uvs\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;    \n    vec2 grid_uv = fract(uv * mix(9.5, 10., sin(t*2.)*.5+.5)) - .5;\n    \n    //rotations\n    //float a = length(uv) * 3. + t;\n    //float s = sin(a);\n    //float c = cos(a);\n    //mat2 rot = mat2(s,-c, c,s);\n    //grid_uv *= rot;\n    \n    //sdfs\n    float wave = sin( length( uv * 10. ) - t * 5. ) *.5 + .5;\n    float r = mix( .3, .6, wave );\n    \n    float d;\n\tfloat d2;\n    \n    for(int x = -1; x < 1; x++){\n       for(int y = -1; y < 1; y++){\n           vec2 offset = vec2(x,y);\n           \n           d = length( grid_uv - offset ) - r;\n    \t   d2 = sdRoundedX(grid_uv - offset, .8, r * .2);\n           d = mix(d, d2, sin(t*4.5)*.5+.5);\n           d = abs(d) - mix(0.01, .2, sin(t * 2.)*.5+.5);\n       }  \n    }\n     \n    //color\n    //vec3 col = mix(vec3(.9, .5, 0.2),vec3(.45, .23, 0.6), d);\n    \n    //output\n    fragColor = vec4( 1. - iResolution.y/8. * d );\n}","name":"Image","description":"","type":"image"}]}