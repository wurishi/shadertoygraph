{"ver":"0.1","info":{"id":"4s2BW1","date":"1500307565","viewed":600,"name":"[SH17A] Kisrhombille Filter","username":"ttoinou","description":"Optimized [url]https://www.shadertoy.com/view/Md2fzm[/url] and created a progressive radial Ã©querre tiling","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["tiling","kisrhombille","equerre","sh17a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 271 chars\nvoid mainImage( out vec4 z, vec2 b )\n{\n    b /= iResolution.xy*3.;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.732; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ;\n        i < int(13.-dot(A-.2,A-.2)*81.) ;\n        i++\n    )\n        D = (2. * A + B)/3.,\n        \n        G = b - D,\n        E = B - D,\n            \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E)),\n        \n        A = z.a < -.5\n            ? A           // ACD Triangle\n            : (B + C)/2., // = E for ECD & EBD Triangles\n        \n        B = z.a > .5\n            ? B  // EBD Triangle\n            : C, // ECD & ACD Triangles\n        \n        C = D;\n                                   \n    \n    \n    z = texture(iChannel0, A+B+C); // no need to ()/3. because b/=3. \n}\n/*\n// 245 chars\nvoid mainImage( out vec4 z, vec2 b )\n{\n    //b /= 2e3;\n    b /= iResolution.xy*3.;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.73; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ;\n        i < 10 ;\n        i++\n    )\n        D = (2. * A + B)/3.,\n        \n        G = b - D,\n        E = B - D,\n            \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E)),\n        \n        A = z.a < -.5\n            ? A  // ACD Triangle\n            : (B + C)/2., // = E // ECD & EBD Triangles\n        \n        B = z.a > .5\n            ? B  // EBD Triangle\n            : C, // ECD & ACD Triangles\n        \n        C = D;\n                                   \n    \n    \n    z = texture(iChannel0,A+B+C);\n    //z.r = dot(b-.2,b-.2)*9.;\n}\n*/\n/*\n// 264 chars\nvoid mainImage( out vec4 z, vec2 b )\n{\n    z -= z;\n    b /= 2e3;\n    //b /= iResolution.xy*3.;\n    \n    vec2 A,B,C,D,E,G;\n    \n    A=B=C-=C;\n    B.x = 1.73; // sqrt(3)\n    C.y = 1.;\n    \n    \n    for(int i = 0 ; i < 10 ; i++)\n    {\n        D = (2. * A + B)/3.;\n        \n        G = b - D;\n        E = B - D;\n            \n        // z.a = cos( angle )\n        z.a = dot(G,E)/(length(G)*length(E));\n        \n        E = (B + C)/2.;\n        \n        // COS(2PI/3) = -1/2\n        // COS( PI/3) =  1/2\n        \n        // ACD Triangle\n        if( z.a < -.5 )\n            B = C;\n        \t// A stays the same\n        // EBD Triangle\n        else if( z.a > .5 )\n            A = E;\n        \t// B stays the same\n        // ECD Triangle\n        else\n            A = E,\n            B = C;\n        \n        \n        C = D;\n                                   \n    }\n    \n    z = texture(iChannel0,(A+B+C));\n}\n*/","name":"Image","description":"","type":"image"}]}