{"ver":"0.1","info":{"id":"XXlGDs","date":"1708296960","viewed":48,"name":"Engines assignment 1","username":"imjusttoasty","description":"Kind of looks like your travelling through warp space idk","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["1stattemptatraymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nmat2 rot2D(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\n// pallete\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n\n}\n\n\nfloat sdOctahedron(vec3 p, float s) {\n    p = abs(p);\n    return (p.x+p.y+p.z-s)*0.57735027;\n}\nfloat map(vec3 p) {\n    p.z += iTime * .4; // Forward movement\n    \n    // Space repetition\n    p.xy = fract(p.xy) - .5;     // spacing\n    p.z =  mod(p.z, .25) - .125; // spacing\n    \n    return sdOctahedron(p, .15); // Octahedron\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n   \n    \n    //Initialization\n    vec3 ro = vec3(0, 0, -3);         //ray origin\n    vec3 rd = normalize(vec3(uv * 5.0, 1)); // ray direction\n    vec3 col = vec3(0); \n    \n    float t = 0.; // total distance travelled\n    \n    //raymarching\n   for (int i = 0; i < 80; i++) {\n   vec3 p = ro + rd * t; // position along the ray\n    \n    \n    float d = map(p); // current distance to the scene\n    \n    t += d; // \"march\" the ray\n    \n    col = vec3(i) / 80.;\n    \n    if (d < .001 || t > 100.) break; //early stop\n    \n   \n  }\n  \n  //coloring \n col = palette(t*1.0 + 0.5);\n\n    fragColor = vec4(col, 1);\n}\n\n","name":"Image","description":"","type":"image"}]}