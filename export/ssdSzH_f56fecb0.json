{"ver":"0.1","info":{"id":"ssdSzH","date":"1632682182","viewed":40,"name":"Clamp_Colours","username":"Dave_Green","description":"Learning about clamp, playing with gradients","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["clamp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWOPI 6.28318530718\n\n// BUILT-IN FUNCTIONS: CLAMP\n//\n// \"clamp\" function saturates the input below and above the thresholds\n// f(x, min, max) = { max x>max\n//                  { x   max>x>min\n//                  { min min>x\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 bgCol = vec3(0.0);\n    vec3 col1 = vec3(0.216, 0.471, 0.698); // blue\n\tvec3 col2 = vec3(1.00, 0.329, 0.298); // yellow\n\tvec3 col3 = vec3(0.867, 0.910, 0.247); // red\n    vec3 col4 = vec3(0.427, 0.758, 0.247);\n    vec3 finalPixelCol = bgCol;\n    \n    float edge = 0.0;\n    float variable = uv.y;\n    vec3 returnVal = vec3(0.0);\n    float minVal = 0.0;\n    float maxVal = 0.0;\n    \n    // Divide the screen into 4 sections\n    if(uv.x < 0.25)\n    {\n        returnVal.x = clamp(variable, col1.x, col1.y);\n        returnVal.y = clamp(variable, col1.y, col1.z);\n        returnVal.z = clamp(variable, col1.x, col1.z);\n    }\n    else if(uv.x < 0.5)\n    {\n        minVal = 0.2;\n        maxVal = 0.7;\n        variable = uv.y;\n        \n        if(variable < minVal)\n        {\n            returnVal.x = clamp(variable, col1.y, col1.z);\n            returnVal.y = clamp(variable, col1.x, col1.y);\n            returnVal.z = clamp(variable, col1.x, col1.z);\n        }\n        \n        if(variable > minVal && variable <= maxVal)\n        {\n            returnVal.x = clamp(variable, col1.y, col1.z);\n            returnVal.y = clamp(variable, col1.x, col1.y);\n            returnVal.z = clamp(variable, col1.x, col1.z);\n        }\n        \n        if(variable > maxVal)\n        {\n            returnVal.x = clamp(variable, col1.y, col1.z);\n            returnVal.y = clamp(variable, col1.x, col1.y);\n            returnVal.z = clamp(variable, col1.x, col1.z);\n        }\n    }\n    else if(uv.x < 0.75)\n    {\n        minVal = 0.2;\n        maxVal = 0.8;\n        variable = uv.y;\n        \n        returnVal.x = clamp(variable, col1.x, col1.z);\n        returnVal.y = clamp(variable, col1.y, col1.x);\n        returnVal.z = clamp(variable, col1.z, col1.y);\n    }\n    else\n    {\n        // Move between -1 & 1, 5 times vertically\n        float y = cos(5.0 * TWOPI * uv.y);\n        \n        // map [-1, 1] to [0, 1]\n        y = (y + 1.0) * 0.5;\n        //returnVal = clamp(y, 0.2, 0.8);\n        \n        returnVal.x = clamp(y, col1.y, col1.z);\n        returnVal.y = clamp(y, col1.x, col1.z);\n        returnVal.z = clamp(y, col1.z, col1.y);\n    }\n    \n    finalPixelCol = vec3(returnVal);\n\n    // Output to screen\n    fragColor = vec4(finalPixelCol, 1.0);\n}","name":"Image","description":"","type":"image"}]}