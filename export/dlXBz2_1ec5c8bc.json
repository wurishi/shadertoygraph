{"ver":"0.1","info":{"id":"dlXBz2","date":"1693220162","viewed":300,"name":"Polygons & Spirals","username":"ChunderFPV","description":".","likes":19,"published":1,"flags":32,"usePreview":0,"tags":["spiral","polygon","buffer","fractions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 C, vec2 U )\n{  \n    vec4 b = texture(iChannel1, U/R, 1.)*.03;\n         C = texture(iChannel0, U/R, .2)\n           + b * H(length(U+U-R)*.4/R.y + T).rgbb\n           + b*b;\n    C *= C;\n}\n\n/* original\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec3 a = texture(iChannel0, U/R, .2).rgb,\n         b = texture(iChannel1, U/R, 1.).rgb*.03,\n         c = H(length(U+U-R)*.4/R.y + T) * b;\n    c += a + b*b;\n    C = vec4(c*c, 1);\n}*/","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define T iTime/120.\n#define R iResolution.xy\n#define CS(a) vec2(cos(a), sin(a))\n#define H(a) (cos(radians(vec3(-20, 60, 130))+(a)*6.2832)*.5+.5)\n\n// sdLine https://iquilezles.org/articles/distfunctions2d/\nfloat L(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a, ba = b-a;\n    return length(pa - ba*clamp(dot(pa,ba)/dot(ba,ba), 0., 1.));\n}\n\n// polygon: coords, value, exponent, loop, size\nfloat P(vec2 u, float v, float e, float l, float w)\n{\n    v = mod(v+.5, 1.)-.5; // limit val to +/-.5\n    float t = 6.2832,     // pi*2\n          s = sign(v),    // arc polarity\n          p = mod(atan(u.y, u.x)+t, t*s), // perimeter\n          i = 0., c = i, a, r;\n    if (abs(v) > .01)  // deadzone near arc 0\n        for (; i++<l;) // 1 iteration per rotation\n            a = floor(p/v/t)*v*t, // arcs\n            r = pow(i, e),        // radius\n            c = max(c, min(w*fwidth(u.x)/L(u, CS(a)*r, CS(a+v*t)*r), 1.)/i), // chords\n            p += t*s; // prep next set\n    else c = clamp(w*fwidth(u.x)/abs(1.-length(u)), 0., 1.); // circle\n    return c*abs(v)*2.;\n}\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 C, vec2 U )\n{\n    vec2 m = (iMouse.xy-R/2.)/R.y,\n         u = (U+U-R)/R.y*1.2, f;\n    u = u.yx;\n    float l = 50.,     // point loop\n          v = 15.,     // poly loop\n          p = 6.2832,  // pi*2\n          e = -.4,     // exponent\n          r = length(u),    // radius\n          w = pow(r, 1./e), // apply root (1/e) to radius\n          t = (iMouse.z > 0.) ?\n              1. + atan(m.x, m.y)/p: // value from mouse\n              1.2 + T,               // value from time\n          o = e*sin(t*p), // oscillate e\n          i = 0., h, j;\n    \n    // point spirals\n    for (; i++ < l;) // cell overlap loop\n        h = round((w-i)/l)*l+i, // radius\n        j = pow(h, e),  // radius with exponent\n        f = max(f, .006/vec2(length(u-CS(p*t*h)*j),\n                             length(u-CS(p*sqrt(t*2.*h))*j)));\n    \n    f = min(f, 2.) * r; // limit brightness & darken center\n    \n    C = f.xxxx // 1st spiral (.xxxx = vec4)\n      + f.y    // 2nd spiral\n      + .003/r // center point\n      + P(u,             t, o, v, 1.) * r  // poly set 1\n      + P(u*vec2(1, -1), t, o, v, 1.) * r  // poly set 2\n      + .05 * (cos(p*max(w, 1./w))*.5+.5); // subtle rings\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Fabrice golf\nvoid mainImage( out vec4 C, vec2 U )\n{\n    C =            texture(iChannel0,      U/R        )\n      + .97 * max( texture(iChannel1,  .99*U/R + .005 ),   // blur out\n                   texture(iChannel1, 1.01*U/R - .005 ) ); // blur in\n}\n\n/* original\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    vec3 c = texture(iChannel0, U/R).rgb,\n         a = texture(iChannel1, mix(U/R, vec2(.5),  .01)).rgb*.97 + c, // blur out\n         b = texture(iChannel1, mix(U/R, vec2(.5), -.01)).rgb*.97 + c; // blur in\n    C = vec4(max(a, b), 1);\n}\n*/","name":"Buffer B","description":"","type":"buffer"}]}