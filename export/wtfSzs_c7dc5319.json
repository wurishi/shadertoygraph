{"ver":"0.1","info":{"id":"wtfSzs","date":"1563906008","viewed":343,"name":"GPUSoundTest","username":"RakuPhys","description":"Just a test of GPU sound.","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["gpusound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float gaus(float x, float m,float s)\n{\n\treturn exp(-(x-m)*(x-m)/(2.0*s*s));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p = uv*2.0 - 1.0;\n\n    float wav = sound(iTime-p.x*0.02).x;\n    wav*=1.0;\n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    col += 2.0*vec3(0.0,0.6,0.4)*gaus(p.y,wav,0.01);\n    //col += step(-0.5,p.x)*(1.0 - step(0.,p.x));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n    vec2 wav = sound(time);\n    return wav;\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"float PI = 3.141592;\n\nfloat midi2freq(uint midi){\n      float freq = 440.0*pow(2.0,(float(midi)-69.0)/12.0);\t\n      return freq;\n}\n\nfloat rand2(vec2 seed){\n    return fract(sin(dot(seed, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand(float seed){\n    return fract(sin(seed*12.9898) * 43758.5453);\n}\n\nfloat ADSR(float t, vec4 l_adsr,float SL){\n    float eps = 0.0001;\n\tfloat at = l_adsr.x+eps;\n\tfloat dt = l_adsr.y+eps;\n\tfloat st = l_adsr.z+eps;\n\tfloat rt = l_adsr.w+eps;    \n\n    float amp = 0.;\n        \n    if(t<at) amp = exp(log(2.0)/at * t) - 1.0;\n    else if(t<at+dt) amp = exp(log(SL)/dt *(t-at));\n    else if(t<at+dt+st) amp = SL;\n    else amp = SL * exp(log(0.01)/rt*(t-(at+dt+st)));   \n    return amp;\n}\n\nfloat simple_sine(float time,float freq, vec4 adsr, float SL){\n    return sin(2.0*PI*freq*time)*ADSR(time,adsr,SL);\n}\n\nfloat kick(float time, float freq, float decay)\n{\n    float sound = 0.;\n    sound += sin(2.0*PI*freq*4.0*time*ADSR(time,vec4(0.0,0.,0.,0.7),1.))*ADSR(time,vec4(0.0,0.,0.,0.8),1.);\n    sound += sin(2.0*PI*freq*2.0*time*ADSR(time,vec4(0.0,0.,0.0,1.0),1.))*ADSR(time,vec4(0.0,0.0,0.25,0.75),1.);\n    return sound;\n}\nfloat hh(float time, float freq, float decay)\n{\n    float noise1 =  rand(fract(time*2.0*(1.0+exp(-time*20.0))))-0.5;\n    float sound = 0.0;\n    sound += noise1 * exp(-time*10.0/decay);\n    return sound;\n}\n\nfloat randSeq(float time,float fac,uvec4 cd){\n    uint rid = uint(floor(rand(floor(time*fac))*4.0));\n    int roct = int(floor(rand(floor(time*fac)+3.0)*4.0));    \n    float f = midi2freq(cd[rid]);\n    if(roct>2) f*=2.0;\n    float sound = 0.0;\n    sound += sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.06,0.0,0.3,0.2),1.);\n    f *= 1.5;\n    sound += 0.8*sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.06,0.0,0.24,0.1),1.);\n    f *= 2.0;\n    sound += 0.2*sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.06,0.0,0.24,0.1),1.);\n\tf *= 3.0/4.0;\n    sound += 0.4*sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.06,0.0,0.24,0.1),1.);\n    return sound;\n}\n\nfloat randCd(float time,float fac,uvec4 cd){\n    float sound = 0.0;\n    float f=0.0;\n    for(uint i=uint(0);i<uint(4);i++){\n      int roct = int(floor(rand(floor(time*fac)+3.0*float(i))*6.0));     \n      f = midi2freq(cd[i]);\n      if(roct>4) f*=0.5;\n      if(roct<2)f*=1.5;\n      sound += sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.3,0.0,0.4,0.2),1.); \n      f*=0.5;\n      sound += 0.3*sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.3,0.0,0.4,0.2),1.);       \n      f*=3.0;\n      sound += 0.2*sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.3,0.0,0.4,0.2),1.);\n      f*=4.0/3.0;\n      sound += 0.15*sin(2.0*PI*f*fract(time*fac)/fac)*ADSR(fract(time*fac),vec4(0.3,0.0,0.4,0.2),1.);\n\n    }\n    return sound;\n}\n\nvec2 sound( float time )\n{\n    float tf = 1.0;\n    float t = time*tf;\n    uvec4 cd = uvec4(60,65,67,70);\n    vec2 sound = vec2(0.,0.);\n    sound += 0.3*vec2(kick(fract(t*2.0),70.0/tf,4.0));\n    sound += 0.08*vec2(hh(fract(time*8.0),200.0,1.5));\n    sound += 0.15*vec2(hh(fract(time*2.0+0.5),250.0,2.0));    \n    sound += 0.2*randSeq(t,8.0,cd);\n    sound += 0.2*randSeq(t,8.0,cd);\n    sound += 0.2*randCd(t,0.5,cd);\n    return sound;\n}","name":"Common","description":"","type":"common"}]}