{"ver":"0.1","info":{"id":"Wl3XRj","date":"1581279317","viewed":81,"name":"Mandelbrot Halo RGF","username":"DaMastaCoda","description":"simple mandelbrot halo. may not work in all platforms due to a break in an if statement.\nRecommended settings: \n- RAINBOW:1, DARKEN: 0\n- RAINBOW:0, DARKEN: 1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rgf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TIMEMULT 0.0f\n#define COLORMULT 0.01f\n#define LOOPLIMIT 10000\n#define RAINBOW 1\n#define DARKEN 0\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.0f)/iResolution.x*4.0f;\n    vec2 z = uv;\n    int iter = 0;\n    for(int i = 0; i < LOOPLIMIT; i++) {\n        z.xy = vec2(z.x*z.x-z.y*z.y,z.x*z.y*2.0f) + uv;\n        if(length(z) > 2.0f) {\n            iter = i;\n            break;\n        }\n    }\n\tvec3 col;\n    // Time varying pixel color\n\t// vec3 col = hsv2rgb(vec3((length(z)+iTime)/10.0f,1.0f,1.0f) );\n    if(RAINBOW == 1) {\n\t\tcol = hsv2rgb(vec3((float(iter)+iTime*TIMEMULT)*COLORMULT,1.0f,1.0f) );\n    \tif(iter == 0) {\n    \t \tcol = vec3(0.0f,0.0f,0.0f);\n    \t}\n    } else {\n\t\tcol = vec3(1.0f,1.0f,1.0f);\n    }\n    if(DARKEN == 1) {\n\t    col = col * log(float(iter))/log(float(LOOPLIMIT));\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}