{"ver":"0.1","info":{"id":"4ldSWX","date":"1481843910","viewed":165,"name":"Purple Twist","username":"ptrgags","description":"First attempt at using both radius and angle (relative to center of screen) in a shader.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","wavy","polar","purple","twist","zigzag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float triangle_wave(float x) {\n    return abs(mod(x, 2.0) - 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Centered UV coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    //Fix aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //Polar coordinates of this point relative to the center\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n    \n    //Okay, \"Violet\"...\n    vec4 purple = vec4(0.5, 0.0, 1.0, 1.0);\n    \n    //This factor will be used in a cosine w/r/t\n    //theta. it will create a number of spokes around\n    //the center of the screen\n    float spokes = 5.0;\n    \n    \n    //Rotate the spokes back and forth over time\n    float rotation = 30.0 * cos(0.5 * iTime);\n    \n    //Distort the spokes with a wave down the radius\n    //Take your pick, triangle ewave or cosine wave. I \n    //personally like the cosine wave for this shader\n    //float radius_shift = triangle_wave(10.0 * r);\n    float distortion_wave = cos(20.0 * r);\n    \n    \n    //combine the effects of rotation + radius wave\n    float spoke_distortion = rotation * distortion_wave;\n    \n    //calculate the overall twist shape\n    float twist = cos(spokes * theta + spoke_distortion);\n    \n    //Color the twist purple\n\tfragColor = twist * purple;\n}","name":"Image","description":"","type":"image"}]}