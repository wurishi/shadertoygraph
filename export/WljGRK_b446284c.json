{"ver":"0.1","info":{"id":"WljGRK","date":"1560424570","viewed":156,"name":"study1_face_add","username":"firegump","description":"just leaning","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 uv, vec2 p, float r, float blur){\n    \n    \n    \n    float d = length(uv - p);\n    float c = smoothstep(r,r - blur ,d);\n    \n    return c;\n}\n\nfloat Band(float t, float start, float end,float blur ){ //create a band image.\n    \n    float step1 = smoothstep(start - blur, start + blur, t );\n    float step2 = smoothstep(end + blur, end - blur, t );//step1 is 0 to 1,step2 is 1 to 0;\n    \n    return step1*step2;\n\n}\n\nfloat Rect( vec2 uv, float left, float right, float bottom,float top, float blur){\n\tfloat band1 = Band(uv.x , left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1*band2;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size){\n    \n    uv -= p;//this p isn't Circle'p //translate coordinate system\n    \n    uv /= size;//scale coordinate system\n    \n    float mask = Circle(uv, vec2 ( 0, 0), .4, .01 );\n\n    mask -= Circle(uv, vec2 ( -.14, .1), .07, .01 );\n    mask -= Circle(uv, vec2 ( .14, .1), .07, .01 );\n    \n    float mouth = Circle(uv, vec2 (0.), .3, .02 );\n    mouth -= Circle(uv, vec2 (0.,0.08), .3, .02 );//subtract two cricles to create mouth\n    mask -= mouth;                               //some areas's value is nagetive 1.\n    return mask;\n    \n}\n\nfloat remap01(float a,float b,float t){\n    \n    return (t - a)/(b - a);\n    \n}\nfloat remap(float a, float b, float c, float d,float t){\n\t\n\treturn remap01(a ,b ,t) * (d - c) + c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float t = iTime*2.10;//iTime is a public variable\n    uv -= .5;\n    \n    uv.x *= iResolution.x/iResolution.y; // change the ratio of uv\n    \n    \n    float mask = Smiley(uv,vec2(-0.14,0.0),0.7);\n    \n    //mask = 0.0;\n    \n    float x = uv.x;\n    \n    float m = sin(t + x * 8.0)*0.1;//sin(t+x) :sine function moves to the left\n    float y = uv.y-m;\n    \n    float blur = remap(-0.5, 0.5 , 0.01, 0.25, x);// by x's value get different blur's value\n    \n    blur = pow(blur*4.0, 3.0);//control contrast by power;blur*4 control lef-right's contrast\n    //float blur = 0.01;\n    mask += Rect(vec2 (x,y), -0.5, 0.5, -0.1, 0.1, blur);\n   \n    vec3 col = vec3 (0.5 + 0.5*cos(t + uv.xyx + vec3(0,2,4))) * mask;//color changing\n  \t//col = vec3(mask);\n    //if(d < 0.3) c= 1.0; else c = 0.0;\n    // Output to screen\n    fragColor = vec4( col, 1.0);\n}","name":"Image","description":"","type":"image"}]}