{"ver":"0.1","info":{"id":"Mf2yzd","date":"1722877187","viewed":42,"name":"Colores mezcla 3.5","username":"jpupper","description":"\n//3.5\n//Cambio de fase \n ","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["mix","tutorial","sin","color","cos","shaders","shaders","livecoding","functions","taller","tutoriales","osciladores"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n#define PI 3.14159265359\n#define resolution iResolution\n#define time iTime\n//Funci√≥n en la que coloco mi variable de \"forma\" generada con senoidales.\n//Y luego le paso una fase distinta a cada uno : \nfloat desfase(vec2 uv,float _fase){\n      float formafinal = sin(uv.x*10.*PI+time\n                            +sin(uv.y*2.*PI+time\n                            +sin(uv.x*10.*PI-time \n                            +sin(uv.y*10.*PI-time\n                            +sin(uv.x*10.*PI-time\n                            +sin(uv.y*10.*PI-time)\n                            +sin(uv.x*10.*PI-time)))))+_fase)*0.5+0.5;\n    //formafinal+=sin(formafinal*20)*0.05;\n    return formafinal;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n      vec2 uv = gl_FragCoord.xy / resolution.xy; // De esta manera obtenemos las coordenadas cartesianas\n    \n    //Otra manera para elegir buenas paletas de colores puede ser desfasando senoidales.\n    //En este caso, los 3 canales tienen la misma forma, pero las senoidales que las generan tienen la fase cambiada\n    //Por eso es que se generan distintos colores.\n    float r  = desfase(uv,0.0);\n    float g  = desfase(uv,PI/5.);\n    float b  = desfase(uv,PI/2.);\n    \n    \n    fragColor = vec4(r,g,b,1.0); \n}","name":"Image","description":"","type":"image"}]}