{"ver":"0.1","info":{"id":"WdlXRj","date":"1607430437","viewed":236,"name":"painting test","username":"Suwu","description":"照着csdn ZzEeRO 的油画效果写的，判断方差","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["painting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Tex iChannel0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    int times = 3;\n    vec4 m0 = vec4(0, 0, 0, 0);\n    vec4 s0 = m0;\n    vec4 m1 = m0;\n    vec4 s1 = m0;\n    float  n  = float((times + 1) * (times + 1));\n    \n    \n    for(int i = -times; i <= 0; i ++)\n    {\n        for(int j = -times; j <= 0; j ++)\n        {\n             vec2 TempUV = uv + vec2(float(i), float(j))/iResolution.xy;\n            // vec2 TempUV = uv + vec2(i, j)/iResolution.xy;\n       \t\t vec4 color = texture(Tex, TempUV); \n      \t  \t m0 += color;\n             s0 += color * color;\n        }\n\n    }\n    \n    for(int i = 0; i <= times; i ++)\n    {\n        for(int j = 0; j <= times; j ++)\n        {\n             vec2 TempUV = uv + vec2(i, j)/iResolution.xy;\n       \t\t vec4 color = texture(Tex, TempUV); \n      \t  \t m1 += color;\n             s1 += color * color;\n        }\n\n    }\n\n    //float4 finalColor = 0.0;\n    float min_sigma2 = 1000.f;\n    m0 /= n;\n    s0 = abs(s0 / n - m0 * m0);\n    float sigma2 = s0.r + s0.g + s0.b;\n    if (sigma2 < min_sigma2) \n    {\n        min_sigma2 = sigma2;\n        fragColor = m0;\n    }\n    m1 /= n;\n    s1 = abs(s1 / n - m1 * m1);\n    sigma2 = s1.r + s1.g + s1.b;\n    if (sigma2 < min_sigma2) \n    {\n        min_sigma2 = sigma2;\n        fragColor = m1;\n    }\n\n    // Output to screen\n    //fragColor = m0;\n    //fragColor = m1;\n    //fragColor = texture(Tex, uv);\n}\n","name":"Image","description":"","type":"image"}]}