{"ver":"0.1","info":{"id":"ld2BWy","date":"1502213769","viewed":184,"name":"Music Visualizer Test","username":"Hendrik_King123","description":"Test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","previewfilepath":"/media/ap/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_DIST 0.15\n#define FADE_BEGIN 0.12\n#define PI 3.14159265359\n\n#define SIN_X_SCALE 100.0\n#define SIN_Y_SCALE 12.0\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float res_rel = iResolution.y / iResolution.x;\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 center_value = vec2(abs(uv - 0.5));\n    \n    center_value = vec2(center_value.x, center_value.y * res_rel);\n    \n    float dist = length(center_value);\n    float angle_to_center = atan(center_value.y / center_value.x);\n    float apos = (angle_to_center + PI) / (2.0 * PI);\n    \n    int tx = int(apos*512.0);\n    \n    float wave = texelFetch( iChannel0, ivec2(tx,1), 0 ).x;\n    float freq = texelFetch( iChannel0, ivec2(0,0), 0).x;\n    \n    wave = wave / 0.5;\n    \n    float modify = wave;\n    float out_value = (dist*modify < MAX_DIST) ? (dist-FADE_BEGIN) *(1.0/(MAX_DIST-FADE_BEGIN)) : 0.0;\n    float sin_dist =abs(1.0 - abs((sin(uv.x*freq*SIN_X_SCALE)+SIN_Y_SCALE/2.0)/SIN_Y_SCALE-uv.y ));\n    \n    sin_dist = (sin_dist > 0.998)? sin_dist : 0.0;\n    sin_dist = (length(center_value) < FADE_BEGIN)? sin_dist : 0.0;\n    \n    vec3 bg_color = vec3(uv,0.5+0.5*sin(iTime));\n    \n    bg_color.x = (out_value > 0.0)? ((out_value < 1.0) ? abs(bg_color.x-0.3*out_value) : abs(bg_color.x-0.3)) : bg_color.x;\n    bg_color.y = (out_value > 0.0)? ((out_value < 1.0) ? abs(bg_color.y-0.3*out_value) : abs(bg_color.y-0.3)) : bg_color.y;\n    bg_color.z = (out_value > 0.0)? ((out_value < 1.0) ? abs(bg_color.z-0.3*out_value) : abs(bg_color.z-0.3)) : bg_color.z;\n    \n    bg_color.x = (sin_dist > 0.0)? abs(bg_color.x-0.3) : bg_color.x;\n    bg_color.y = (sin_dist > 0.0)? abs(bg_color.y-0.3) : bg_color.y;\n    bg_color.z = (sin_dist > 0.0)? abs(bg_color.z-0.3) : bg_color.z;\n    \n\tfragColor = vec4(bg_color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}