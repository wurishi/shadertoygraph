{"ver":"0.1","info":{"id":"DdjSDt","date":"1671095209","viewed":3683,"name":"chat gpt test","username":"strppngynglad","description":"i dono the ai did it","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.9 + 0.1*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Use the sin() function to create a slow and smooth\n    // zoom effect controlled by a sin wave\n    float zoom = sin(iTime * 0.5) * 0.25 + 1.0;\n\n    // Scale the coordinates by the zoom value\n    uv *= zoom;\n\n    // Use the z-coordinate to create a 3D toroidal shape\n    vec3 p = vec3(mod(uv*10.0, 1.0), uv.y);\n\n    // Use the length() function to create a circle\n    // with a radius of 0.5\n    float d = length(p - 0.5);\n\n    // Use the smoothstep() function to create a smooth edge\n    // for the toroidal shape\n    float f = smoothstep(0.45, 0.55, d);\n\n    // Rotate the coordinates around the center of the toroidal shape\n    // using the sin() function to create a slow and smooth rotation\n    // effect controlled by a sin wave\n    uv = vec2(cos(iTime * 0.25), sin(iTime * 0.25)) * (uv - 0.5) + 0.5;\n\n    // Multiply the color by the value of f to create the\n    // final color for the pixel\n    fragColor = vec4(col * f, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}