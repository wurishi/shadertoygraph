{"ver":"0.1","info":{"id":"MlcSRS","date":"1480190397","viewed":142,"name":"learning to blur","username":"Veegie","description":"test","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//mat3 gaussian_kernel= mat3(\n//        vec3(1.0/16.0, 1.0/8.0, 1.0/16.0),\n//        vec3(1.0/8.00, 1.0/4.0, 1.0/8.00),\n//        vec3(1.0/16.0, 1.0/8.0, 1.0/16.0)\n//    );\n//\n//vec3 conv(mat3 h, mat3 imgVal[3])\n//{\n//    vec3 result;\n//    for (int x = 0; x < 3; x++)\n//        for (int y = 0; y < 3; y++)\n//            result+= (h[x][y] * imgVal[x][y]);\n//    \n//    return result;\n//}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;   \n    //vec3 color= vec3(0.0);    \n\t//\n    //mat3 imgVal[3];\n\t//for (float x = -1.0; x < 2.0; x++)\n\t//{\n\t//    mat3 val;\n\t//    for (float y = -1.0; y < 2.0; y++)\n\t//    {\n\t//        vec2 pos= vec2(fragCoord.x + x, fragCoord.y + y);\n\t//        vec3 pixelVal= texture(iChannel0, pos.xy / iResolution.xy).rgb;\n\t//        \n\t//        val[int(y) + 1]= pixelVal;\n\t//    }\n\t//    \n\t//    imgVal[int(x) + 1]= val;\n\t//}\n\t//\n    //if (fragCoord.x > iMouse.x)\n\t//{\n    //    fragColor= vec4(conv(gaussian_kernel, imgVal), 1.0);\n    //}\n    //else\n    //{\n    //    fragColor= vec4(texture(iChannel0, uv).rgb, 1.0);\n    //}\n    \t\n    fragColor= vec4(texture(iChannel1, uv).rgb, 1.0);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;   \n    vec3 color= vec3(0.0);\n    if (fragCoord.y < iMouse.y)\n\t{\n\t\tfloat x= 0.005;\n        \n        if (fragCoord.x < iMouse.x)\n        {\n            // box\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, x)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, x)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(x, x)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, 0)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, 0)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, x)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, -x)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, -x)).rgb;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, x)).rgb;\t                \n\t\t\tcolor/= 9.0; \n        }\n        else\n        {\n            // gaussian\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, x)).rgb  * (1.0/16.0);\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, x)).rgb   * (1.0/8.0) ;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(x, x)).rgb   * (1.0/16.0);\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, 0)).rgb  * (1.0/8.0) ;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, 0)).rgb   * (1.0/4.0) ;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, x)).rgb   * (1.0/8.0) ;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, -x)).rgb * (1.0/16.0);\n\t\t\tcolor+= texture(iChannel0, uv + vec2(0, -x)).rgb  * (1.0/8.0) ;\n\t\t\tcolor+= texture(iChannel0, uv + vec2(-x, x)).rgb  * (1.0/16.0);\n        }   \n\t\t\n\t }\n\telse\n\t{\n\t    color= texture(iChannel0, uv).rgb;\n\t}\n        \n    fragColor= vec4(color,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}