{"ver":"0.1","info":{"id":"7lBfzy","date":"1653224234","viewed":77,"name":"Value noise swirl of doom","username":"rucksack","description":"help, this is making me dizzy\n\nFollowed https://thebookofshaders.com/11/ and made some... interesting thing","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","ohgodwhy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Uncomment this to control gaps with the mouse\n// (might make things more weird)\n//#define MOUSE_CONTROL\n\n// Comment out to use proper rotation matrix\n// (does not look quite as weird)\n#define USE_WEIRD_ROTATION\n\nvec2 u = vec2(1., 0.);\n\n#ifdef USE_WEIRD_ROTATION\nmat2 rot(float a) {\n    return transpose(mat2(-sin(a), cos(a), cos(a), sin(a)));\n}\n#else\nmat2 rot(float a) {\n    return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\n#endif\n\nfloat random(vec2 p) {\n    return fract(sin(dot(p, vec2(213.2358276, 89.876766))) * 13747.468464);\n}\n\nfloat noise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 s = smoothstep(0., 1., fract(p));\n    \n    // Corners\n    float a = random(i);\n    float b = random(i + u.xy);\n    float c = random(i + u.yx);\n    float d = random(i + u.xx);\n    return mix(a, b, s.x) + // interpolate along x axis side\n        (c - a) * s.y * (1. - s.x) + // handle y axis side\n        (d - b) * s.x * s.y;\n        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n#ifdef MOUSE_CONTROL\n    vec2 m = iMouse.xy / iResolution.xy / vec2(2., 1.);\n#else\n    vec2 m = vec2(.24, .3);\n#endif\n\n    // All the stuff\n    float n = noise(rot(.3*iTime + uv.x * uv.y * 2.)*uv*min(iTime+2., 30.) + 10.*max(iTime, 30.));\n    float gap = .25;\n    vec3 col = vec3(.0, 0., .2);\n    col += vec3(1., .95, 1.)*smoothstep(m.x, m.y, n);\n    col -= vec3(.8, 1., 1.)*smoothstep(m.x + gap, m.y + gap, n);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}