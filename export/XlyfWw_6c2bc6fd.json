{"ver":"0.1","info":{"id":"XlyfWw","date":"1542667634","viewed":103,"name":"Green Phosphor Field","username":"t3knomanser","description":"Simple field experiments, just a scratchpad, really","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["demo","fields"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceField(vec2 uv, vec2 center) {\n    return 1.0 - distance(uv, center);\n}\n\nfloat verticalSinusField(vec2 uv, float scale) {\n    return sin(uv.x * scale);\n}\n\nfloat horizontalSinusField(vec2 uv, float scale) {\n    return sin(uv.y * scale);\n}\n\nfloat vinette(vec2 uv) {\n    return 1.0 - (distanceField(uv, vec2(0., 0.)) +\n        \tdistanceField(uv, vec2(0., 1.)) +\n        \tdistanceField(uv, vec2(1., 1.)) +\n        \tdistanceField(uv, vec2(1., 0.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float field = distanceField(uv, vec2(2.*sin(iTime * 0.65)+0.5, 0.5)) \n        / verticalSinusField(uv, 31.4) \n        + horizontalSinusField(uv, 3141.) * 0.125\n        + verticalSinusField(uv, 3141.) * 0.125\n        - vinette(uv) * 5.;\n    vec3 col = vec3(field) * vec3(0., 1., 0.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}