{"ver":"0.1","info":{"id":"Wtj3Wz","date":"1559152472","viewed":368,"name":"Single-pass focalesque blur","username":"adroitwhiz","description":"This is a relatively decent-looking dirt-cheap single-pass blur whose kernel is the *outline* of a square.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["blur","boxblur","focus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float radius = iMouse.x / 50.0;\n    \n    float dimension = floor(radius * 2.0) + 1.0;\n    float numPixels = dimension * dimension;\n    \n    float offset = fract(radius * 2.0) / 2.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 scaleFactor = 1.0 / iResolution.xy;\n    \n    vec4 tex = vec4(0.0);\n    \n    vec2 coord1;\n    vec2 coord2;\n    \n    for (float i = 0.0; i < dimension; i++) {\n        coord1 = vec2(i - radius + offset, radius);\n        coord2 = vec2(radius, i - radius + offset);\n        tex += texture(iChannel0, (coord1 + fragCoord) * scaleFactor);\n        tex += texture(iChannel0, (-coord1 + fragCoord) * scaleFactor);\n        tex += texture(iChannel0, (coord2 + fragCoord) * scaleFactor);\n        tex += texture(iChannel0, (-coord2 + fragCoord) * scaleFactor);\n    }\n    \n    tex /= dimension * 4.0;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = tex;\n}\n","name":"Image","description":"","type":"image"}]}