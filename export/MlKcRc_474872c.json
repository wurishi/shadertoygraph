{"ver":"0.1","info":{"id":"MlKcRc","date":"1537218525","viewed":652,"name":"Migraine Aura Visualization","username":"MartyMcFly","description":"Animation to describe how a migraine aura looks like for me. Screws up what's behind and introduces jaggy color patterns that flicker quickly. Takes about 10 mins to get from small at eye focus to very large at border of visible area and disappears after.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["medical","migraine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timesincestart = 1.0 - exp(-float(iFrame) * 0.0005);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.y = -uv.y;\n    \n    //uv.y -= 0.2;\n    uv.x += 0.22;\n    uv.y *= 1.44;\n    uv.y -= timesincestart * 1.2;\n    uv.xy *= mat2x2(0.707,-0.707,0.707,0.707);\n    float rottime = timesincestart;\n    uv.xy *= mat2x2(cos(rottime),-sin(rottime),sin(rottime),cos(rottime));\n    //uv.y /= timesincestart;\n    \n    float timeval = mix(0.8,0.2, timesincestart);\n\n    uv /= dot(uv,uv) * 4.0;\n    uv = clamp(uv,0.0,1.0);\n    \n    uv.xy /=  timeval;\n    \n    float modulatedtime = round(iTime * 18.0)/18.0;\n    \n    uv.x += 0.02*abs(2.0*mod(12.*uv.y + modulatedtime*5.0, 1.)-1.0);\n    uv.x -= 0.01*abs(1.5*mod(16.*uv.y - modulatedtime*6.0, 1.)-1.0);\n   uv.xy /= mix(abs(1.5*mod(16.*uv.x - modulatedtime*14.0, 1.)-1.0), 1.0, 0.95);\n    // Time varying pixel color\n    vec3 col =vec3(1.0 - 12.0*abs(uv.x - timeval));\n    col *= sqrt(max(0.0, (uv.y - uv.y * uv.y) * 2.0));\n    \n    uv.x *= 1. * 3.0;\n    uv.y *= 5.2 * 3.0;\n    //uv.x += iTime;\n    //vec3 col = vec3(1.0);\n    uv *= timeval;\n    \n    uv.y += 0.4*abs(2.0*mod(12.*uv.x, 1.)-1.0);\n    \n    col *= texture(iChannel0, uv * mix(0.1,5.0,timesincestart)).rgb * 3.0;\n    col = max(col, 0.0);\n    \n    vec2 fuckedupcoord = mix(fragCoord/iResolution.xy, uv, 0.5 * dot(col,vec3(0.333)));\n    col = mix(texture(iChannel1, fuckedupcoord).rgb, col, col.gbr);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}