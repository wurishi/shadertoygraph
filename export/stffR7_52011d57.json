{"ver":"0.1","info":{"id":"stffR7","date":"1650647765","viewed":173,"name":"Redstone Dust","username":"sinvec","description":"Finally, i found it.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["sdf","minecraft","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gl = vec3(0.);\n\nmat2 r2d(float a){\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nfloat vma(vec3 v) {\n    return max(v.x, max(v.y, v.z));\n}\n\nfloat fBox(vec3 p, vec3 b) {\n\tvec3 d = abs(p) - b;\n\treturn vma(d);\n}\n\nvoid set_m(float a, inout vec2 v) {\n    v.y = a;\n}\n   \nvec2 de(vec3 p) {\n\n    float d = 0.;\n   \n    vec3 q = p;\n   \n    p.xz *= r2d(iTime * .5);\n    p.y += sin(iTime) * .5;\n    \n    vec2 a = vec2(9999.);\n    vec2 b = vec2(9999.);\n\n    float ceil_s = .2;\n    vec3 cv = vec3(ceil_s / 2.);\n    \n    vec3 si = p;\n    si.x = abs(si.x);\n    \n    vec3 si1 = p;\n    si1.x -= 3.5 * ceil_s;\n    si1.y -=-1. * ceil_s;\n    si1.y = abs(si1.y);\n    \n    vec3 si2 = p;\n    si2.x -=-2. * ceil_s;\n    si2.x = abs(si2.x);\n    \n    b.x = fBox(p-vec3(-1.5,-.5,.0)*ceil_s,vec3(2.499,2.99,.5)*ceil_s);set_m(.2,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3(  .0,3.5,.0)*ceil_s,vec3( 1.,1.,.5)*ceil_s);set_m(.2,b);a=(a.x<b.x)?a:b;\n    \n    b.x = max(fBox(p-vec3(3.,-.5,.0)*ceil_s,vec3(2. ,2.99,.5)*ceil_s),\n             -fBox(p-vec3(4.5,2.,.0)*ceil_s,cv*1.2));\n    set_m(.4,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(si-vec3( .5,5.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(1.5,4.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(2.5,3.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(3.5,2.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(4.5,1.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(si-vec3(5.5,-1.,.0)*ceil_s,vec3(.5,1.5,.5)*ceil_s);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(4.5,-3.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(3. ,-4.,.0)*ceil_s,vec3(1. ,.5,.5)*ceil_s);set_m(.1,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(si-vec3(1. ,-5.,.0)*ceil_s,vec3(1. ,.5,.5)*ceil_s);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si-vec3(1. ,-4.,.0)*ceil_s,vec3(1. ,.5,.5)*ceil_s);set_m(.4,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(p-vec3(-3.,-3.,.0)*ceil_s,vec3(1. ,.5,.5)*ceil_s);set_m(.4,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3( 1., 3.,.0)*ceil_s,vec3(1. ,.5,.5)*ceil_s);set_m(.4,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(p-vec3(-4.,-1.5,.0)*ceil_s,vec3(1. ,1.,.5)*ceil_s);set_m(.4,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3(-4.5, -1.,.0)*ceil_s, cv);set_m(.2,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3(-3.5, -2.,.0)*ceil_s, cv);set_m(.2,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3(-1.5,  0.,.0)*ceil_s, cv);set_m(.4,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(p-vec3(  .5, -3.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3( 2.5,  1.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p-vec3( 3.5, -1.,.0)*ceil_s, cv);set_m(.1,b);a=(a.x<b.x)?a:b;\n    \n    b.x = fBox(si1-vec3(  .0,  2.,.0)*ceil_s, cv);set_m(.3,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(si2-vec3( 2.5,  0.,.0)*ceil_s, cv);set_m(.3,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p  -vec3(-1.5,  3.,.0)*ceil_s, cv);set_m(.3,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(p  -vec3(-2.5,-2.,.0)*ceil_s, cv);set_m(.3,b);a=(a.x<b.x)?a:b;\n   \n    b.x = fBox(q - vec3(2.,-5.9, 2.),vec3(4.)); set_m(.5,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(q - vec3(2.,2., -5.9),vec3(4.)); set_m(.5,b);a=(a.x<b.x)?a:b;\n    b.x = fBox(q - vec3(-5.9,2., 2.),vec3(4.)); set_m(.5,b);a=(a.x<b.x)?a:b;\n    \n    b.x = length(p) - .5;\n    gl += 0.03/(0.8+b.x*b.x);\n    \n    return a;\n}\n\nconst vec2 e = vec2(.000035, -.000035);\nvec3 norm(vec3 po) {\n        return normalize(e.yyx*de(po+e.yyx).x + e.yxy*de(po+e.yxy).x +\n                         e.xyy*de(po+e.xyy).x + e.xxx*de(po+e.xxx).x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    float time = iTime * 2.;\n    \n    vec3 ro = vec3(7.);\n    vec3 ta = vec3(0.);\n    \n    vec3 vd = normalize(ta - ro);\n    vec3 ri = normalize(cross(vd, vec3(.0, 1., 0.)));\n    vec3 dw = normalize(cross(ri, vd));\n    vec3 rd = normalize(ri * uv.x + dw * uv.y + 3. * vd);\n    \n    float t = 0.;\n    vec2 h;\n    vec3 po = vec3(0.); \n\n    for (int i = 0; i < 64; i++) {\n        po = ro + rd * t;   \n        h = de(po);\n        t += h.x;\n    }\n    \n    vec3 lp = vec3(0.);\n    lp.y -= sin(iTime) * .5;\n    \n    vec3 c = vec3(.1);\n    \n    const vec3 col1 = vec3(45./255., 1./255., 0./255.);\n    const vec3 col2 = vec3(113./255., 8./255., 0./255.);\n    const vec3 col3 = vec3(252./255., 29./255., 0./255.);\n    const vec3 col4 = vec3(73./255., 2./255., 0./255.);\n    const vec3 col5 = vec3(100./255., 100./255., 100./255.);\n    \n    if (h.y == .1) c = col1;\n    if (h.y == .2) c = col2;\n    if (h.y == .3) c = col3;\n    if (h.y == .4) c = col4;\n    \n    if (h.y == .5) {\n        po = ro + rd * t; \n        vec3 ld = normalize(lp - po);\n        vec3 n = norm(po);\n        c =  mix(col5 * .2, mix(col5, col3, .6), pow(abs(dot(n, ld)), 2.));   \n    }\n    \n    c += gl * vec3(1.,0.,0.) * .15;\n    \n    fragColor = vec4(c, 1.); \n}","name":"Image","description":"","type":"image"}]}