{"ver":"0.1","info":{"id":"XlX3Rf","date":"1443582010","viewed":1485,"name":"Swirly Sampler","username":"ddoodm","description":"Just a test of swirly texture sampling!","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["swirl","texture","trigonometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define TILES 2.0\n#define FREQU 2.0\n#define SPEED 4.0\n#define AMPLI 0.2\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * TILES;\n    uv.x *= iResolution.x/iResolution.y;\n        \n   \tfloat t = iTime * SPEED;\n    \n    uv += vec2(\n        AMPLI * sin(t/2.0) * cos(t + uv.y*FREQU),\n        AMPLI * cos(t/2.0) * sin(t + uv.x*FREQU) );\n    uv += vec2(t*0.1);\n    \n    // Sample at wavy coordinates, and colour correct!\n    vec3 c = texture(iChannel0, uv).xyz;\n    vec3 dc = vec3(0.57, 0.4, 1.0);\n    c = dc * dot(c, vec3(0.9, 0.1, 0.0));\n    c = pow(c, vec3(0.9));\n    c *= 1.75;\n    \n    // Specular highlight\n    uv *= vec2(4.0);\n    c += 0.2 * cos(t + uv.y + uv.x);\n    \n\tfragColor = vec4(c, 1.0);\n}","name":"","description":"","type":"image"}]}