{"ver":"0.1","info":{"id":"McBXzm","date":"1706151832","viewed":52,"name":"zcfan/ball","username":"zcfan","description":"distort image like there is a ball under it.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["image"],"hasliked":0,"parentid":"lcBXzm","parentname":"zcfan/pixelate video"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float RADIUS = 300.; // 凸球的半径\nconst float STRENTH = 60.; // 凸起力度\nconst float PI = 3.1415926;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    float dis = distance(fragCoord.xy, iMouse.xy);\n    \n    \n    \n    if (dis > RADIUS) {\n        // 大于凸球半径的像素，正常采样\n        vec3 col = texture(iChannel0, uv).rgb;\n        fragColor = vec4(col, 1.);\n        \n        \n        \n    } else {\n    \n        // 凸球半径内的像素，向鼠标位置偏移一定距离采样\n        // 映射像素到鼠标的距离到这个区间：[0, RADIUS] -> [0, 2Pi]\n        float mappedDistance = dis / RADIUS * 2. * PI;\n        \n        \n        // 计算应有的偏移程度：[0, 2Pi] -> 通过 cos 实现平滑过渡，从 0 到 1 再到 0\n        float offset = -cos(mappedDistance) / 2. + 0.5;\n        \n        \n        // 计算从像素坐标指向鼠标坐标的单位向量，也就是方向\n        vec2 direction = normalize(iMouse.xy - fragCoord.xy);\n        \n        \n        // 实际偏移量 = 方向 * 偏移程度（[0, 1]） * 最大偏移力度\n        vec2 actualOffset = direction * offset * STRENTH;\n        \n        \n        // 纹理采样使用的单位与前面的像素单位不同，需要转换一下\n        vec2 offsetInUv = actualOffset / iResolution.xy;\n        \n        vec3 col = texture(iChannel0, uv + offsetInUv).xyz;\n        fragColor = vec4(col, 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}