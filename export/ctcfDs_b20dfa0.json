{"ver":"0.1","info":{"id":"ctcfDs","date":"1701712346","viewed":24,"name":"Polar_Shapes","username":"jum","description":"Animated polar shapes","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    vec2 pos = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    float r = length(pos) * 2.0;\n    float a = atan(pos.y, pos.x);\n    float speed = 6.0;\n    \n    a += iTime;\n    \n    // Shapes\n    float shape_a = abs(cos(a * 12.0) * sin(a * 3.0)) * 0.8 + 0.1;\n    float shape_b = smoothstep(-0.5, 1.0, cos(a * 10.0)) * 0.2 + 0.5;\n    \n    float weight_animation = mix (0.5, 1.0, pow(((sin(iTime * speed) + 1.0) / 2.0), 9.0));\n    float result_shape = mix(shape_a, shape_b, weight_animation);\n    \n    color = vec3(1.0 - smoothstep(result_shape, result_shape + 0.02, r));\n    \n    // Strokes\n    float stroke_width = 0.3;\n    float weight_stroke_animation = pow(max(0.0, abs(sin(iTime*speed)) * 2.0 - 1.0), 1.5);\n    float shape_strokes = (1.0 - smoothstep(result_shape, result_shape + stroke_width, r));\n    shape_strokes = fract(shape_strokes * 10.0);\n    float mask_strokes = (1.0 - smoothstep(result_shape - 0.1, result_shape + (stroke_width * weight_stroke_animation), r));\n    \n    color = vec3(shape_strokes * mask_strokes) + color;\n\n\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}