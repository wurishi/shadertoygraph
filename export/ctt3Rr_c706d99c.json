{"ver":"0.1","info":{"id":"ctt3Rr","date":"1681880638","viewed":118,"name":"toon clover ","username":"z1lfromhell","description":"toon,mat2,clover,normal convert, lambert,blinn phong","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lambert","blinnphong","toon","clover","mat2","normalconvert"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterate 3.\n#define pi 5.\n\n\nfloat wavefunction (vec2 p)\n{\n    float w = (0.5 * sin(p.x *1.2) + 0.7 * sin(p.x *0.512)+ 0.5* sin(p.x *0.125)) * 0.8;\n\n    return w;\n}\n//-(h+sin(iTime)*0.5+0.5)\nfloat multiwave (vec2 p, float t)\n{\n     //float ha = 0.;\n     float wave = 1.-step((p.y),wavefunction(p));\n     float gridid = floor(p.x)+0.5;\n     float h = wavefunction(vec2(gridid,0.));\n     vec2 fix = vec2(p.y-h , fract(p.x)-0.5);\n     float circle = sqrt(dot(fix-0. , fix-0.)) - (h*0.3+t);\n     float d = min(wave,circle );\n     h = wavefunction(vec2(gridid+1.,0.));\n     fix = vec2(p.y-h , fract(p.x)-0.5-1.); \n     circle = sqrt(dot(fix-0. , fix-0.)) - (h*0.3+t);\n     d = min(d,circle );    \n     h = wavefunction(vec2(gridid-1.,0.));\n     fix = vec2(p.y-h , fract(p.x)-0.5+1.); \n     circle = sqrt(dot(fix-0. , fix-0.)) - (h*0.3+t);\n     d = min(d,circle );\n    return smoothstep(0.95,1.,1.-d );\n}\n\n\n\nfloat clover (vec2 p  )\n{\nfloat vectorradius = (atan(p.y,p.x)+ iTime*0.2) ;\nfloat r = (pow(dot(p,p),1.))*0.3;\nfloat r2 = smoothstep(0.0,1.,(1.-sqrt(dot(p,p))));\nfloat a = sqrt(sin(vectorradius*5.)*0.5+0.5);\nfloat b =pow(sin(vectorradius*5.+1.579),2.);\nfloat c = clamp((1.-r/(a*0.8+b*0.2) - r2/1.1 ), 0.,1.);\nreturn c;\n}\n\n\nfloat k (vec2 p)\n{\n    float starnumber = 2.;\n    vec3 suncolor = vec3(1.0, 0.8314, 0.7255);\n    vec2 sunposition = vec2(0.,0.);\n    float random1 = abs(fract(20.123*sin(dot(floor(p*starnumber),vec2(123.321,210.645)))));\n    float random2 = abs(fract(51236.1561*sin(dot(floor(p*starnumber),vec2(565.221,256.158)))));\n    vec2 randomvector = vec2(random1,random2);\n    float star =  smoothstep(0.98,1.,1.- length(fract((p)*starnumber)-randomvector));\n    float starrange = star * clamp(pow(p.y-1.5 , 3.),0.,1.);\n    float sun = pow((1.-clamp(length(p-sunposition),0.,1.)),15.)*2.;\n    float sunglow = ((1.-length(p*0.2-sunposition)))*0.18;\n\n    float sunfinal = (sun + sunglow);\n    \n    float bg =  sunfinal + starrange;\n    return bg;\n}\n\n\n\n\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p =((2.*fragCoord-iResolution.xy)/min(iResolution.x,iResolution.y))*pi;\n\n\n    float normalint = 1.;\n\n    float ha = 0.;\n    for(float i = 0.1 ; i<=1. ; i+=0.1)\n    {\n      float wave = multiwave(vec2(p.x+iTime*i*0.1+(sin(i*2.*pi+12.)*6.) + 17.0*i,(p.y-1.+i*5.)) , 0.8+0.4*(sin(iTime*0.35+sin(i*2.*pi))*0.5+0.5));\n      ha = mix(ha,i,wave);\n      \n    }\n    vec3 cloud =  mix( vec3(0.1725, 0.4235, 0.5412),vec3(1.0, 1.0, 1.0)*1.15,ha);\n    \n    float shape = clover(p);\n//normal convert\n    vec3 n = vec3(clover(p+vec2(0.,fwidth(p.x)))-clover(p-vec2(0.,fwidth(p.x))),clover(p+vec2(fwidth(p.x),0.))-clover(p-vec2(fwidth(p.x),0.)),1.);\n    vec3 shapenormal = normalize(vec3(n.xy * normalint,n.z)) ;\n//lambertlightling model\n    //float check = length(p - mat2( cos(iTime), -sin(iTime), sin(iTime), cos(iTime) ) * vec2(1., 1.) );\n    vec3 lv = normalize(vec3(vec2(1., 1.) * mat2( cos(iTime), -sin(iTime), sin(iTime), cos(iTime) ) , 1.));\n    vec3 lambertlight = clamp(((3.*dot(lv,shapenormal))),0.,1.)+vec3(0.5529, 0.7137, 0.8);\n//blinnphong highlight\n    vec3 cv =normalize(vec3(0.,0.,1.)-vec3(p,1.));\n\n    float blinnphong = pow(clamp(dot(dot(lv,shapenormal)*shapenormal*2.-lv,cv),0.,1.),256.);\n\n    vec3 clovercolor = (mix(vec3(0.5412, 0.749, 0.8),vec3(0.251, 0.3569, 0.3882),shape)*lambertlight*0.9 + vec3(0.9529, 1.0, 0.7765)*blinnphong*1.)*min(smoothstep(0.,0.2,shape),1.);\n\n//colorblend\n    float bg = k(p);\n\n    vec3 bc = vec3(1.0, 1.0, 1.0)*    mix(cloud,clovercolor, clamp((smoothstep(0.3,1.,(min(smoothstep(0.,0.26,shape),1.)-ha))*20.),0.,1.)) + vec3(1.0, 0.8314, 0.7255)*(bg - ((length(p*0.5)))*0.2);\n\n\n\n    fragColor = vec4(vec3(bc),1.);\n}","name":"Image","description":"","type":"image"}]}