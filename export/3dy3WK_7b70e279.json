{"ver":"0.1","info":{"id":"3dy3WK","date":"1570910744","viewed":97,"name":"Looping-Test","username":"Billy_T","description":"Just testing how to make a looping effect (Always zooming out)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["looping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat insideTriangle(vec2 uv, float h) {\n    return step(max(-uv.y, dot(vec2(abs(uv.x), uv.y), vec2(sqrt(3.0)/2.0, .5))), h);\n}\n\nfloat deg2rad(float deg) {\n    return deg*PI/180.0;\n}\n\nmat2 rot(float rad) \n{\n    float s = sin(rad);\n    float c = cos(rad);\n    return mat2(c, s, -s, c);\n}\n\nfloat sn(float x) {\n    return sin(x) / 2. + .5;\n}\n\nvec4 getColor(vec2 uv, float time)\n{\n    float z = mod(time, 1.0) + 1.0;\n    uv *= pow(2.0, z);\n    float inside = 0.0;\n    float x = length(uv);\n    float i = -floor(log2(x + 0.001));\n    float c = pow(2.0, -i+1.0);\n    uv /= c;\n    float lvl = i;\n    i -= floor(time);\n\n    uv = rot(i*deg2rad(15.0) + time*.5) * uv;\n    //return vec4(vec3(inside), 1.0);\n    float iR = insideTriangle(uv, .3 + sn(time*.7) * .23);\n    float depth = min((-lvl + 6.0 - fract(time)) * .2, 1.0);\n    return vec4(depth * iR);\n}\n\nvec2 frag2uv(vec2 f) \n{\n    vec2 r = iResolution.xy;\n    return (f / r * 2.0 - 1.0) * vec2(max(r.x/r.y, 1.0), max(r.y/r.x, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = frag2uv(fragCoord);\n    fragColor = getColor(uv, iTime) + getColor(uv, iTime*.8 + 3.) + getColor(uv, iTime*1.2 + 6.);\n}","name":"Image","description":"","type":"image"}]}