{"ver":"0.1","info":{"id":"3ld3Dj","date":"1577648873","viewed":94,"name":"Coordinate system and plotting","username":"kow","description":"Draw a coordinate system and plot a function with minimal code\nUse mouse to move the origin","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["line","guides"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * Cool trick to draw a coordinate system with minimal code\n */\n\nfloat func(float x) {\n\treturn smoothstep(.15, .85, sin(x));\n}\n\nfloat plotValue(vec2 uv, float y) {\n    float m = smoothstep(-.01, .0, uv.y + y);\n    m -= smoothstep(.01, .02, uv.y + y);\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 nm = iMouse.xy / iResolution.xy;\n    vec2 uv = (fragCoord - nm * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0);\n\n    float thickness = 1./iResolution.x;\n    if(abs(uv.x) < thickness) col.r = 1.;\n    if(abs(uv.y) < thickness) col.g = 1.;\n\n    uv *= 2.;\n    uv.y = -uv.y;\n    col += plotValue(uv, func(uv.x));\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}