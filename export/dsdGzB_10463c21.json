{"ver":"0.1","info":{"id":"dsdGzB","date":"1677496249","viewed":144,"name":"Hexagonal UVTiling","username":"rge15","description":"UV Tiling from tutorial : https://www.youtube.com/watch?v=VmrIDyYiJBA ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["uv","hexagon","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(in vec2 p)\n{\n    p = abs(p);\n    float d = dot( p, normalize(vec2(1.,1.73))); \n    d = max(d,p.x);\n    d = step(d, 0.3);\n\n    return d;\n}\n\nvec4 HexUv( in vec2 uv )\n{\n    vec2 triSide = vec2(1.,1.73);\n    vec2 hSide = triSide*0.5;\n\n    vec2 gva = mod(uv,triSide) - hSide;\n    vec2 gvb = mod(uv-hSide,triSide) - hSide;\n\n    vec2 gv;\n    if(length(gva)<length(gvb))\n        gv = gva;\n    else\n        gv = gvb;\n    \n    \n    vec2 id = uv - gv;\n    \n    return vec4(gv,id);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= 2.;\n    vec3 col = vec3( 0.);\n\n    col = vec3( HexDist(uv));\n\n    vec4 hex = HexUv(uv);\n\n    col = vec3(hex.xy,0.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}