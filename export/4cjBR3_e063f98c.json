{"ver":"0.1","info":{"id":"4cjBR3","date":"1725272181","viewed":21,"name":"Pentagon tiling 08","username":"shadertoyjiang","description":"Animations are displayed when the mouse is on the left side of the canvas.\n\n[url=https://www.shadertoy.com/view/lcSfW1]Pentagonal radial tiling[/url]","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["tiling","pentagonal"],"hasliked":0,"parentid":"MfSBz3","parentname":"Pentagon tiling 07"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2024年9月2日\n// 第8个\n// 参考：https://www.mathartroom.com/wallpaper/pentagon_tiling/type10/\n\n\nfloat dln(in vec2 a, in vec2 b, in vec2 p) {\n        b -= a;\n        p -= a;\n        float h = clamp(dot(p, b) / dot(b, b), 0., 1.);\n        return length(p - b * h);\n}\nvec2 frctE(vec2 po, vec2 px, vec2 py, vec2 p) {\n        float e = po.x, f = po.y,\n                a = px.x - e, b = px.y - f,\n                c = py.x - e, d = py.y - f,\n                g = a * d - b * c;\n        mat3 Mrst = mat3(px - po, 0, py - po, 0, po, 1);\n        mat3 Mdef = mat3(d, -b, 0, -c, a, 0, c * f - d * e, -(a * f - b * e), g) / g;\n        p = (Mdef * vec3(p, 1)).xy;\n        p = fract(p);\n        p = (Mrst * vec3(p, 1)).xy;\n        return p;\n}\nvoid mainImage(out vec4 O, vec2 U) {\n        O = vec4(.0);\n        vec2 R = iResolution.xy,\n                u = 5. * (U + U - R) / R.y;\n        vec2 p = u;\n        float ag =  1.57+.6 *cos(iTime);\n        if(iMouse.x>R.x*.55)ag=1.57;\n        float sn = sin(ag),\n              cs = cos(ag),\n              sf = sin(ag * .5), \n              cf = cos(ag * .5);\n        float t = (2. * sf - cf) / (sf + cf);\n        vec2 a = vec2(0),\n                b = vec2(1, 0),\n                c = vec2(1. - (1. - t) * cs, (1. - t) * sn),\n                d = vec2(t * sn, 1. + t * cs),\n                e = vec2(0, 1),\n                f = vec2(d.y, -d.x),\n                g = vec2(c.y, -c.x),\n                c2 = (c + d) * .5,\n                f2 = vec2(f.x + t * .5, f.y), \n                oo = c2 + f2,\n                cc=c2+c2,\n                ff=f2+f2,\n                h = cc + g, \n                i = ff - g, \n                j = vec2(f.x + t, f.y),\n                k = a + cc,\n                l = vec2(k.x, k.y - 1.);\n                \n        p = frctE(a, cc, ff, p);\n        if ((p - oo).x > 0.) p = oo + oo - p;\n        float dist = 1e8;\n        \n        #define L(A, B) dist = min(dist, dln(A, B, p));\n        L(a, b);\n        L(f, c)\n        L(c, d)\n        L(e, a)\n        L(c, h)\n        L(i, h)\n        L(i, j)\n        L(f, j)\n        L(l, k)\n        L(vec2(k.x - 1., k.y), vec2(k.x + 1., k.y))\n        L(ff - c, j)\n        L(h, f + cc)\n        L(a + ff, e + ff)\n        L(a + ff, ff - b)\n        O += vec4(.8 - .005 / dist);       \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}