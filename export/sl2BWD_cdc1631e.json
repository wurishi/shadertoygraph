{"ver":"0.1","info":{"id":"sl2BWD","date":"1653522085","viewed":91,"name":"Oneline music 1","username":"makslane","description":"One line music test","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\n\n//Measure the RMS of a square wave with n samples\nfloat measureRMS(float time, float n) {\n    float sum = 0.0;\n    float s;\n    for(float i = 0.; i < n; i++) {\n        s = oneLineMusic(time + i/iSampleRate).x;\n        sum += s * s;\n    }\n    //return sqrt(sum / n);\n    return sum / n;\n}\n\nvoid oneLineMusicImage( out vec4 fragColor, in vec2 fragCoord )\n{     \n    float nSamplesPerFrame = iSampleRate*iTimeDelta;\n    \n    //For each frame, shows the wave ahead from iTime to iTime + iTimeDelta\n    //float amplitude = oneLineMusic(iTime + iTimeDelta*(fragCoord.x / iResolution.x)).x;                  \n    float amplitude = measureRMS(iTime + 4.*iTimeDelta*(fragCoord.x / iResolution.x), 256.);\n    //drawNumber( fragColor, fragCoord,  iTimeDelta ); return;  \n        \n    \n    //From 0 to 1\n\tvec2 uv = fragCoord / iResolution.xy;    \n    \n    //Draw\n    vec3 col = vec3(1.0 -  smoothstep( 0.0, 0.015, abs(amplitude - uv.y) ));\n\tfragColor = vec4(col,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    oneLineMusicImage(  fragColor,  fragCoord );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    return oneLineMusic( time );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"int music1(int  t) {\n    int a = t < 39000?\n\t(\n\t((t*t*t)>>t)\n\t)\n\t:\n\t((t%40000) > 200000?1:0)*( \n\tt>>6^t&0x25|t+(t^t>>11)-t* ((t%24!=0?2:6)&t>>11)^t<<1&((t&0x256)!=0?t>>4:t>>10)\n\t)\n\t|((t%40000) < 200000?1:0)*(\n\t(~t>>2)*((127&t*(7&t>>10))<(245&t*(2+(5&t>>14)))?1:0)\n\t);\n    \n    return abs(clamp(a, -1, 0));\n}\n\nvec2 oneLineMusic( float time ) {\n    int delay = 100;\n    int t = int(time*(8000.)); \n    \n    return vec2( float(music1(t)), float(music1(t-delay)) );\n}","name":"Common","description":"","type":"common"}]}