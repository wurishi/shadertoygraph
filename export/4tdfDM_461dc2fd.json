{"ver":"0.1","info":{"id":"4tdfDM","date":"1539865317","viewed":98,"name":"__sphere__","username":"monada","description":" ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere2( vec2 p, float radius )\n{\n    return max( 0.0, radius - length( p ) );\n}\n\n#define mod3_      vec3(.1031, .11369, .13787)\n\nvec3 hash3(vec3 p3) {\n  p3 = fract(p3 * mod3_);\n    p3 += dot(p3, p3.yxz + 19.19);\n    return -1. + 2. * fract(vec3((p3.x + p3.y) * p3.z, (p3.x+p3.z) * p3.y, (p3.y+p3.z) * p3.x));\n}\n\nfloat perlin_noise3(vec3 p) {\n    vec3 pi = floor(p);\n    vec3 pf = p - pi;\n    \n    vec3 w = pf * pf * (3. - 2. * pf);\n    \n    return   mix(\n      mix(\n            mix(\n                dot(pf - vec3(0, 0, 0), hash3(pi + vec3(0, 0, 0))), \n                dot(pf - vec3(1, 0, 0), hash3(pi + vec3(1, 0, 0))),\n                w.x),\n            mix(\n                dot(pf - vec3(0, 0, 1), hash3(pi + vec3(0, 0, 1))), \n                dot(pf - vec3(1, 0, 1), hash3(pi + vec3(1, 0, 1))),\n                w.x),\n      w.z),\n        mix(\n            mix(\n                dot(pf - vec3(0, 1, 0), hash3(pi + vec3(0, 1, 0))), \n                dot(pf - vec3(1, 1, 0), hash3(pi + vec3(1, 1, 0))),\n                w.x),\n            mix(\n                dot(pf - vec3(0, 1, 1), hash3(pi + vec3(0, 1, 1))), \n                dot(pf - vec3(1, 1, 1), hash3(pi + vec3(1, 1, 1))),\n                w.x),\n       w.z),\n  w.y);\n}\n\nfloat noise_sum_abs3(vec3 p) {\n    float f = 0.;\n    p = p * 3.;\n    f += 1.0000 * abs(perlin_noise3(p)); p = 2. * p;\n    f += 0.5000 * abs(perlin_noise3(p)); p = 3. * p;\n  f += 0.2500 * abs(perlin_noise3(p)); p = 4. * p;\n  f += 0.1250 * abs(perlin_noise3(p)); p = 5. * p;\n  f += 0.0625 * abs(perlin_noise3(p)); p = 6. * p;\n    \n    return f;\n}\n\nvec3 ligtning( vec2 fragCoord, vec2 uv )\n{\n    vec3 p3 = vec3(\n        fragCoord.xy/iResolution.x,\n        iTime*0.04\n    );\n    \n    float noise = noise_sum_abs3(vec3(p3*12.0+12.0));\n\n    float t = clamp((uv.x * -uv.x * 0.16) + 0.15, 0.0, 1.);\n    float l = uv.y; //mix( abs( uv.y ), 0.05, abs( uv.x ) );\n  //  l =  ( smoothstep( -0.7, 0.0, uv.x ) * (\n  //        1.0 - smoothstep( 0.0, 0.7, uv.x ) ) ) * abs( uv.y );\n    \n    float r = 0.6;\n     l = sphere2( uv, r );\n    \n\n    float i = pow( abs( noise * -t  + l ), 0.3 );\n                          \n    vec3 col = vec3(1.8, 1.60, 1.8);\n    \n    col = col * -i + col;                    \n  //  col = col * col;\n    col = col * col;\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = 2.0 * uv - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n   \n    float pulsSpeed = 2.0;\n    float r = 1.0;\n    \n    float val = pow( sphere2( uv, 1.0 ) * 1.4, 2.2 );\n    \n    val = val + val * abs( sin( pow( length( uv ), 0.04 ) * 10.0 - iTime*pulsSpeed ) );\n   \n    vec3 color = vec3( 0.6, 1.3, 1.5 );\n    \n\n    fragColor.xyz = color * val;\n    fragColor.xyz *= ligtning( fragCoord, uv );\n    fragColor.xyz += color * val;\n}","name":"Image","description":"","type":"image"}]}