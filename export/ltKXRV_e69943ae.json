{"ver":"0.1","info":{"id":"ltKXRV","date":"1485123879","viewed":89,"name":"Another Mandelbrot","username":"hvillalobos","description":"mandelbrot set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float iterations = 100.0;\nconst float boundary_thickness =  10.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy;\n    vec2 uv = (2.0*fragCoord - R) / R.y;\n    uv.x -= 0.5;\n    vec2 z = vec2(0.0);\n    float lastI = 0.0;\n    \n    for (float i = 0.0; i < iterations; i++) {\n                \n     \tz = ( mat2( z, -z.y, z.x)*  z + uv );\n        \n        if (length(z) > 4.0) \n            break;\n        lastI = i;\n        \n    }\n    \n    vec3 color = abs(cos(iTime)) *\n        vec3(1.0 * (lastI / (iterations / (boundary_thickness * abs(cos(iTime))))));\n    \n    if (mod(lastI, iterations -1.0) == 0.0 && lastI > 0.0) {\n        color = abs(cos(iTime)) * mix(vec3(0.0), vec3(1.0, 1.0, 1.0), sin(iTime));\n    }\n    \n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}