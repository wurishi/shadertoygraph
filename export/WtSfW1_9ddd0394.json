{"ver":"0.1","info":{"id":"WtSfW1","date":"1598761980","viewed":371,"name":"2d bend deformer","username":"greje656","description":"A simple 2d bend deformer","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["deformer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec3 GetCheckboard(vec2 p)\n{\n    vec3 PALETTE[5];\n    PALETTE[0] = vec3( 38, 70, 83)/255.0;\n    PALETTE[1] = vec3( 42,157,143)/255.0;\n    PALETTE[2] = vec3(233,196,105)/255.0;\n    PALETTE[3] = vec3(244,162, 97)/255.0;\n    PALETTE[4] = vec3(231,111, 81)/255.0;\n    \n    float offsetX = p.x < 0.0 ? 1.0 : 0.0;\n    float offsetY = p.y < 0.0 ? 1.0 : 0.0;\n    \n    float ttt = (sin(iTime * 0.5) + 1.0) * 0.5;\n    float sss = mix(20.0, 50.0, ttt);\n    float checkBoardX = abs(round(abs(p.x) * sss) + offsetX);\n    float checkBoardY = abs(ceil(abs(p.y) * sss) + offsetY + checkBoardX);\n    int c1 = int(mod(checkBoardX + checkBoardY, 5.0));\n    \n    return\n        c1==0 ? PALETTE[0]:\n        c1==1 ? PALETTE[1]:\n        c1==2 ? PALETTE[2]:\n        c1==3 ? PALETTE[3]:\n                PALETTE[4];\n}\n\nfloat GetArcLength(vec2 circleCenter, vec2 p)\n{\n    vec2  dir = p - circleCenter;\n    float radius = length(dir);\n    float d = dot(normalize(dir), vec2(0, 1));\n\n    d = clamp(d, -0.9999999, 0.9999999);\n    return acos(d) * radius;\n}\n\nvec2 MapArcOnCircle(vec2 circleCenter, float radius, float arc)\n{\n    float halfCirconference = PI * radius;\n    float v = arc / halfCirconference;\n    float a = v * PI;\n    vec2  dir = vec2(sin(a), cos(a));\n    return circleCenter + dir * radius;\n}\n\nvec2 UnbendPoint(vec2 p, vec2 bendCircleCenter, float bendCircleRadius, float t, float ox)\n{\n    float derrivedRadius = distance(p, bendCircleCenter);\n    float d = derrivedRadius - bendCircleRadius;\n    float s  = GetArcLength(bendCircleCenter, p);\n    float safety = clamp((t - 0.01) / 0.01, 0.0, 1.0);\n    s = mix(abs(p.x - ox), s, safety);\n\n    float bendCircleRadiusT0 = 1.0 / PI + d;\n    float bendCircleHalfCirconference = PI * bendCircleRadiusT0;\n    float dynamicArcLength = mix(1.0, bendCircleHalfCirconference, t);\n\n    vec2  mp = MapArcOnCircle(bendCircleCenter, derrivedRadius, dynamicArcLength);\n    float sp = GetArcLength(bendCircleCenter, mp);\n    return vec2(s / sp, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2  uv    = fragCoord/iResolution.xy;\n    vec2  mouse = (iMouse.xy/iResolution.xy);\n    float vignette = clamp((length(uv - 0.5) - 0.35) * 1.5, 0.0, 1.0);\n    float screenRatio = iResolution.y/iResolution.x;\n    uv.y    *= screenRatio;\n    mouse.y *= screenRatio;\n\n    vec2  m = mouse;//(mouse - 0.5) * 2.0 * vec2(1,1);\n    vec2  p = uv;//(uv    - 0.5) * 2.0 * vec2(1,1);\n    float bendAmount = 1.0;//(sin(ee) + 1.0) * 0.5;\n\n    if(iMouse.z == 0.0)\n        m = vec2(0,-0.48);\n\n    float bendCircleRadius = 1.0 / max(0.01, (PI * bendAmount));\n    vec2  bendCircleCenter = vec2(m.x, -bendCircleRadius + m.y + 1.0/PI);\n    vec2  up = UnbendPoint(p, bendCircleCenter, bendCircleRadius, bendAmount, m.x);\n    vec3  pattern = GetCheckboard(up);\n\n    float sl = abs(up.y) * 150.0;\n    sl = 1.0 - clamp(sl, 0.0, 1.0);\n    sl = clamp(sl * 2.0, 0.0, 1.0);\n    \n    vec3 col = pattern;\n    //col = mix(col, col * 1.0, up.y < 0.0 ? 1.0 : 0.0);\n    //col = mix(col, vec3(0.1, 0.1, 0.1), sl);\n    //col = mix(col, col * 0.0, vignette);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}