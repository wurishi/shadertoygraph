{"ver":"0.1","info":{"id":"wdtSz7","date":"1574026190","viewed":119,"name":"Desert Flight","username":"mosaic","description":"Also planning to \"do a barrel roll\" every 15 seconds with a mod(time)","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITER 1000.\n#define R 100.\n#define S(a,b,c) smoothstep(a,b,c)\n\nvec3 colorA = vec3(0.035,0.017,0.022);\nvec3 colorB = vec3(0.995,0.922,0.755);\nvec3 colorC = vec3(0.263,0.595,0.930);\nvec3 colorD = vec3(0.020,0.016,0.012);\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n//conversion helper\nfloat f(float n, vec3 hsl){\n    float k = mod(n+hsl.x*12., 12.);\n    float a = hsl.y*min(hsl.z, 1.-hsl.z);\n    return hsl.z-a*max(min(k-3., min(9.-k, 1.)),-1.);\n}\n// hsl in range <0, 1>^3\nvec3 hsl2rgb(vec3 hsl){\n    return vec3(f(0.,hsl), f(8.,hsl), f(4.,hsl));\n}\n\nvec3 hue2rgb(float hue){\n    return hsl2rgb(vec3(hue, 1., .5));\n}\n\n//rain code borrowed from shadertoy, let me know if this is yours so I can credit it \nvec2 Rain(vec2 uv, float t){\n    t*= 40.;\n    vec2 aspect = vec2(3.,1.);\n    vec2 st = uv*aspect-iMouse.xy/200.;\n    \n    vec2 id = floor(st);\n    st.y+=t*.22;\n    float n = fract(sin(id.x*256.45)*85.);\n    st.y += n;\n    uv.y += n;\n    id = floor(st);\n    st = fract(st)-.5;\n    \n    t+= fract(sin(id.x*56.45+id.y*485.)*155.)*6.28;\n    \n    float y = -sin(t+sin(t+.5*sin(t)))*0.43;\n    float x = (fract(sin(id.x*384.45)*id.y*288.)-.5)*.6;\n    vec2 p1 = vec2(x, y);\n    vec2 o1 = (st-p1)/aspect;\n    float d = length(o1);\n    \n    float m1 = S(.07, .0, d);\n    \n    vec2 o2 = (fract(uv*aspect.x*vec2(1.,2.)-vec2(p1.x,0.))-.5)/vec2(1.,2.);\n    d = length(o2);\n    \n    float m2 = S(0.2*(.5-st.y), .0, d) * S(-.1, .1, st.y-p1.y);\n    \n    //if(st.x>.46 || st.y>.49) m1 = 1.;\n    \n    return vec2(m1*o1*30.+m2*o2*10.);\n}\n\n\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n    \n    uv=uv*rotate2d(cos(iTime)/12.); //horizon rotate (steer vehicle)\n    vec2 uv2=uv;\n    \n    uv2.y+=sin(iTime)/7.;\n    //uv.y+=sin(iTime)/5.;\n    \n    uv.x=abs(uv.x);//\n\tfloat t =-iTime;\n    vec2 rain = Rain(uv.yx*2., t*.13);\n    rain += Rain(uv.yx*3., t*.15) * .25;\n    uv -= rain * 0.35;\n    \n\tfloat len = length(uv);\n    float len2= length(uv);\n   \n \tfloat ring =smoothstep(80.0*(sin(iTime*4.)+1.1)/3./iResolution.y, 0.0, abs(len-(tan((iTime+(3.141/2.)))+1.)/3.-.5));\n    ring+= smoothstep(80.0*(cos(iTime*4.)+1.1)/3./iResolution.y, 0.0, abs(len2-(tan((iTime))+1.)/3.-.5));\n    \n    vec3 desertcolor = vec3(0.);\n    vec3 pct = vec3(uv2.y)-.3;\n    \n\tif(uv2.y>-.0)\n    {\n    desertcolor = mix(colorC, colorD, pct-.5);\n\t} else{\n    desertcolor = mix(colorB, colorA, pct+0.304);  \n\t}\n    \n    fragColor = vec4(ring);\n\tfragColor+=(hash42(uv*1e3+iTime*.2)-.5)*.2;  // optional film grain effect from https://www.shadertoy.com/view/tdy3DD\n    \n    //fragColor = vec4(smoothstep(4.0/iResolution.y, 0.0, abs(length(uv)-.6))); // non-moving ring\n    \n    fragColor=mix(vec4(desertcolor,.1),fragColor,.5);\n}","name":"Image","description":"","type":"image"}]}