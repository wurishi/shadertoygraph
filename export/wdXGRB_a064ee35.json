{"ver":"0.1","info":{"id":"wdXGRB","date":"1546720721","viewed":84,"name":"Timer_Practice","username":"shuerpiola","description":"Practicing\n\nSmall graphical glitch goes away on fullscreen mode","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// #define COUNTER_TURN // Uncomment to reverse timer direction\n// #define NO_REPEAT // Uncomment to prevent timer looping\n// #define NO_SMOOTHING\n\n#define H_PI 1.57079632679 // Pi/2\n#define TTC 3. // Time to count\n#define OUTER_DIAMETER .9\n#define INNER_DIAMETER .5\n#define BACKGROUND_COLOR vec3(0.,.5,1.)\n#define TIMER_COLOR(A) (mix(vec3(0.,1.,0.),vec3(0.,1.,1.),A)))\n\n#ifndef NO_SMOOTHING\n\t#define TIMER_BODY ((1.-smoothstep(OUTER_DIAMETER-.01,OUTER_DIAMETER,len))*smoothstep(INNER_DIAMETER-.01,INNER_DIAMETER, len))\n#else\n\t#define TIMER_BODY ((1.-step(OUTER_DIAMETER,len))*step(INNER_DIAMETER, len))\n#endif\n\n#ifndef NO_REPEAT\n\t#define REPEATING_TIME (mod(iTime,TTC))\n\t#define REPEATING_COND (step(0.,sin(iTime/TTC*2.*H_PI)))\n#else\n\t#define REPEATING_TIME iTime\n\t#define REPEATING_COND 1.\n#endif\n\n#ifndef COUNTER_TURN\n\t#define SECTOR(X,Y) abs(step(0.,-1.*X)-step(0.,-1.*Y))+(2.*step(0.,-1.*X))\n\t#define CONDITION(X,Y) abs(step(0.,X)-step(0.,Y));\n#else\n\t#define SECTOR(X,Y) abs(step(0.,-1.*Y)-step(0.,X))+(2.*step(0.,X))\n    #define CONDITION(X,Y) abs(1.-step(0.,X)-step(0.,Y))\n#endif\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    float len = length(uv);\n    \n    float cond = CONDITION(uv.x,uv.y);\n    float ang = ((1.-cond)*atan(abs(uv.x/uv.y)))+(cond*atan(abs(uv.y/uv.x)));\n    ang += (H_PI*(SECTOR(uv.x,uv.y)));\n    \n    float nang = ang/(H_PI*4.);\n    float ttime = TTC*nang;\n    float etime = REPEATING_TIME;\n    \n    float rep = REPEATING_COND;\n    float c = TIMER_BODY;\n    c *= rep*(1.-step(ttime,etime))+(1.-rep)*(step(ttime,etime));\n    \n    vec3 col = (c*TIMER_COLOR(nang)+((1.-c)*BACKGROUND_COLOR);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}