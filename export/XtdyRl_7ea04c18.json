{"ver":"0.1","info":{"id":"XtdyRl","date":"1533662182","viewed":304,"name":"Thinking","username":"toocanzs","description":"Recreation of a thinking emoji","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["emoji","thinking","thonk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nmat2 rot( in float a ) \n{\n    float c = cos(a);\n    float s = sin(a);\n\treturn mat2(c,s,-s,c);\t\n}\n\n//Adapted from https://www.shadertoy.com/view/XtlXz7\nfloat drawLine(vec2 uv, vec2 p1, vec2 p2, float Thickness, float blur) \n{\n\n  float a = abs(distance(p1, uv));\n  float b = abs(distance(p2, uv));\n  float c = abs(distance(p1, p2));\n  \n  float d = sqrt(c*c + Thickness*Thickness);\n\n  if ( a >= d || b >= d )\n  {\n  \treturn smoothstep(Thickness, Thickness-blur, min(distance(p1, uv),distance(p2, uv)));\n  }\n\n  float p = (a + b + c) * 0.5;\n\n  // median to (p1, p2) vector\n  float h = 2.0 / c * sqrt( p * ( p - a) * ( p - b) * ( p - c));\n  if(isnan(h) || isinf(h))\n      h = -1.;\n  \n  return smoothstep(Thickness, Thickness-blur, h);\n}\n\nfloat circle(vec2 uv, vec2 p, float r, float blur)\n{\n    return smoothstep(r, r-blur, length(uv - p));\n}\n\nfloat thumb(vec2 uv, vec2 p)\n{\n    uv -= p;\n    uv *= rot(PI/14.);\n    float c = drawLine(uv, vec2(0,0.1), vec2(0.65,0.1), 0.08, 0.01);\n    c += drawLine(uv, vec2(0,-0.04), vec2(0.35,-0.04), 0.08, 0.01);\n    c += drawLine(uv, vec2(0,-0.18), vec2(0.3,-0.18), 0.075, 0.01);\n    c += drawLine(uv, vec2(0,-0.30), vec2(0.2,-0.30), 0.07, 0.01);\n    c += circle((uv * vec2(1.2,1)) + uv.y*0.1, vec2(0,-0.105), 0.3,0.01);\n    vec2 q = vec2(0);\n    uv*= rot(-PI/20.);\n        uv.y -= 0.2;\n    uv.x -= 0.01;\n    q.x += uv.y*0.7;\n    c += drawLine(uv, vec2(0,-0.105) + q, vec2(0,0.2), 0.10 - uv.y*0.1, 0.01);\n    \n    c = clamp(c, 0.,1.);\n    return c;\n}\n\nvec4 head(vec2 uv, vec2 p, float scale)\n{\n    uv -= p;\n    float c = circle(uv, vec2(0), .8, .01);\n    vec4 col = mix(vec4(0), c*vec4(1,0.8,0.3,1.), c);\n    c = circle(uv * vec2(1.3,1), vec2(0.35,0.2), .15, .01);\n    c += circle(uv * vec2(1.3,1), vec2(-0.35,0.25), .15, .01);\n    \n    float d = 0.275-uv.x;\n    d *= d;\n    \n    c += drawLine(uv, vec2(0.1,0.35- d), vec2(0.45,0.35- d), 0.05, 0.01);;\n    \n    d = -0.275-uv.x;\n    d *= d;\n    \n    c += drawLine(uv, vec2(-0.1,0.55- d), vec2(-0.45,0.55- d), 0.05, 0.01);\n    \n    d = -0.1-uv.x;\n    d *= d;\n    \n    c += drawLine(uv, vec2(-0.2,-0.2- d), vec2(0.2,-0.2- d), 0.05, 0.01);\n    \n    c = clamp(c, 0.,1.);\n\n    col = mix(col, c*vec4(0.4,0.27,0,1.), c);\n    \n    c = thumb(uv, vec2(-0.5,-0.7));\n    \n    col = mix(col, c*vec4(0.95,0.6,0.05,1.), c);\n    \n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.*fragCoord - iResolution.xy )/ iResolution.y;\n    fragColor = head(uv, vec2(0,0.15), 1.);\n}","name":"Image","description":"","type":"image"}]}