{"ver":"0.1","info":{"id":"sd2Gzt","date":"1617838262","viewed":50,"name":"Wednesday Night Pina Coladas","username":"Melchizedek6809","description":"Played around in Bonzomatic triying to do something with shadows.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define E 0.0001\n#define SUNT iTime / 16.0\n#define fGlobalTime iTime\n\nvec3 lightPos(){\n    return vec3(42.0 * sin(SUNT),16.0 + abs(cos(SUNT)) * 6.0,42.0 * cos(SUNT));\n}\n\nfloat sunSDF(vec3 p){\n    return length(p - lightPos()) - 3.0;\n}\n\nfloat monolithSDF(vec3 p){\n    vec3 q = abs(p-vec3(0.0,6.75 + sin(fGlobalTime)*0.2,0.0)) - vec3(2.0,4.5,0.5);\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0)-0.1;\n}\n\nfloat pyramidSDF(vec3 p){\n    vec3 np = abs(p - vec3(0.0,-0.5,0.0));\n    return (np.x+np.y+np.z-2.0)*0.5735027;\n}\n\nfloat landSDF(vec3 p){\n    return (p.y - min(sin(p.x * 0.1),cos(p.z*0.08))) * 2.0;\n}\n\nfloat sceneSDF(vec3 p){\n    float d = sunSDF(p);\n    d = min(d,monolithSDF(p));\n    d = min(d,landSDF(p));\n    d = min(d,pyramidSDF(p));\n    return d;\n}\n\nfloat march(vec3 eye, vec3 dir, float start, float end){\n  float d = start;\n  for(int i=0;i<1024;i++){\n    float cd = sceneSDF(eye + dir * d);\n    if(cd < E){return d;}\n    d += cd;\n    if(d >= end){return end;}\n  }\n  return end;\n}\n\nvec3 rayDir(float fov, vec2 size, vec2 pos){\n    vec2 xy = pos - size/2.0;\n    float z = size.y / tan(radians(fov) / 2.0);\n    return normalize(vec3(xy,-z));\n}\n\nvec3 norm(vec3 p){\n    return normalize(vec3(\n        sceneSDF(vec3(p.x+E,p.y,p.z)) - sceneSDF(vec3(p.x-E,p.y,p.z)),\n        sceneSDF(vec3(p.x,p.y+E,p.z)) - sceneSDF(vec3(p.x,p.y-E,p.z)),\n        sceneSDF(vec3(p.x,p.y,p.z+E)) - sceneSDF(vec3(p.x,p.y,p.z-E))\n    ));\n}\n\nfloat lightIntensity(vec3 p){\n    vec3 N = norm(p);\n    vec3 lp = lightPos();\n    vec3 ldir = normalize(lp-p);\n    if(landSDF(p) < E){\n        float md = march(p+ldir,ldir,0.0,400.0);\n        float ld = length(p-lp) * 0.5;\n        if(ld >= md){return 0.0;}\n    }\n    float d = dot(N,normalize(lp-p));\n    return 0.3 + d * 0.75;\n}\n\nvec4 color(vec3 p){\n    if(monolithSDF(p) < E){\n        return vec4(0.06,0.03,0.01,1.0);\n    }else if(pyramidSDF(p) < E){\n        return vec4(0.8,0.65,0.4,1.0);\n    }else{\n        return vec4(1.0,0.9,0.4,1.0);\n    }\n}\n\nvoid mainImage( out vec4 out_color, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 eye = vec3(0.0,5.0,48.0);\n    vec3 dir = rayDir(45.0,iResolution.xy,fragCoord.xy);\n    float d = march(eye,dir,0.0,200.0);\n    float o = 1.0-uv.y;\n    vec4 fogc = vec4(0.1+o*0.3,0.3 + o*0.5,0.6 + o * 1.4,1.0);\n    if(d > 200.0-E){\n        out_color = fogc;\n    }else{\n        float li = lightIntensity(eye + dir * d);\n        if(sunSDF(eye + dir * d) < E){\n            out_color = vec4(1.0,0.95,0.9,1.0);\n        }else{\n            float fo = min(1.0,(200.0-d) / 100.0);\n            out_color = (color(eye+dir*d) * li * fo) + (1.0-fo)*fogc;\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}