{"ver":"0.1","info":{"id":"7ttcR4","date":"1659383443","viewed":66,"name":"MultiCross","username":"Moaxey","description":"Displays multiple intersecting crosses moving about the screen.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["colorful","geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool cross(vec2 uv)\n{\n    return (uv.x >= 0.48 && uv.x <= 0.52) ||\n           (uv.y >= 0.48 && uv.y <= 0.52);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 uv1 = (uv + cos(iTime) / 2.0);\n    vec2 uv2 = (uv + sin(iTime) / 2.0);\n    vec2 uv3 = (uv + sin(iTime - 1.57) / 2.0);\n    vec2 uv4 = (uv + cos(iTime + 1.57) / 2.0);\n    \n    float val = 0.0;\n    \n    if(cross(uv1))\n        val += 0.25;\n    if(cross(uv2))\n        val += 0.25;\n    if(cross(uv3))\n        val += 0.25;\n    if(cross(uv4))\n        val += 0.25;\n        \n    // fancy color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n        \n    vec3 color = val*col;\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}