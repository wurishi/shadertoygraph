{"ver":"0.1","info":{"id":"XdyGz1","date":"1453207829","viewed":923,"name":"Drawing Shaping functions","username":"flush_11","description":"Drawing shaping functions on gradient background.\nA sample for the book of the shaders.\nhttp://thebookofshaders.com/05/\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["thebookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Draw multiple lines of functions on gradient background\n// A sample for the book of shaders.\n// http://thebookofshaders.com/05/\n\n\n// Plot a line on Y using a value between 0.0-1.0\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) - \n          smoothstep( pct, pct+0.02, st.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 st = fragCoord.xy/iResolution.xy;\n    \n    //backgoud gradient\n    vec3 bkcolor = vec3(st.x);\n    \n    // Plot a lines\n    float pct1 = plot(st,st.x);\n    float pct2 = plot(st,pow(st.x, 0.5));\n    float pct3 = plot(st, pow(st.x, 2.0));\n    \n    vec3 color = (1.0-pct1)*(1.0-pct2)*(1.0-pct3)*bkcolor+pct1*vec3(1.0,0.0,0.0)+pct2*vec3(0.0,1.0,0.0) + pct3*vec3(0.0, 1.0, 1.0);\n    \n\tfragColor = vec4(color,1.0);\n}\n","name":"","description":"","type":"image"}]}