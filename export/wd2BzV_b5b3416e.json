{"ver":"0.1","info":{"id":"wd2BzV","date":"1590466732","viewed":114,"name":"Smiley Attempt 3 :P","username":"hopeliz","description":"Smiley shader following a tutorial by The Art of Code: https://youtu.be/vlD_KOrzGDc\nCreated for Day 15 of a 100 Days of Shaders and Textures project","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0.0, 1.0)\n\nfloat remap01(float a, float b, float t) {\n    return sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return sat((t - a) / (b - a)) * (d - c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect) {\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 createBrow(vec2 uv, float smile) {\n    float offset = mix(0.1, 0.0, smile);\n    uv.y += offset;\n    \n    float y = uv.y;\n    \n    // Skew eyebrows down\n    uv.y += uv.x * mix(1.0, 0.625, smile) - 0.3;\n    \n    // Push out from center\n    uv.x -= mix(-0.025, 0.05, smile);\n    \n    uv -= 0.5;\n    \n    // --- Brows ---\n    \n    vec4 color = vec4(0.0);\n    float blur = 0.1;\n    \n    float dist1 = length(uv);\n    float s1 = S(0.4, 0.475 - blur, dist1);\n    float dist2 = length(uv - vec2(0.1, -0.2) * 0.75);\n    float s2 = S(0.5, 0.5 - blur, dist2);\n                         \n    float browMask = sat(s1 - s2);\n                         \n    float colorMask = remap01(0.6, 0.9, y) * 0.8;\n    colorMask *= S(0.7, 1.0, browMask);\n    \n    vec4 browColor = mix(vec4(0.4, 0.2, 0.2, 1.0), vec4(1.0, 0.75, 0.5, 1.0), colorMask);\n    \n    // --- Shadow ---\n    \n    uv.y += 0.1 - offset;\n    blur += mix(0.0, 0.2, smile);\n    \n    dist1 = length(uv);\n    s1 = S(0.4, 0.475 - blur, dist1);\n    dist2 = length(uv - vec2(0.1, -0.2) * 0.75);\n    s2 = S(0.5, 0.5 - blur, dist2);\n    \n    float shadowMask = sat(s1 - s2);\n    \n    color = mix(color, vec4(0.0, 0.0, 0.0, 1.0), S(0.0, 1.0, shadowMask) * 0.5);\n    color = mix(color, browColor, S(0.2, 0.4, browMask));\n    return color;\n}\n\nvec4 createEye(vec2 uv, float side, vec2 mouse, float smile) {\n    // Re-center uv\n    uv -= 0.5;\n    \n    // Swap highlight\n    uv.x *= side;\n    \n    float dist = length(uv);\n    \n    // Create iris color\n    vec4 irisColor = vec4(0.396, 0.263, 0.129, 1.0);\n    vec4 irisColorInner = vec4(0.055, 0.169, 0.114, 0.5);\n    \n    // --- White of the eye ---\n    \n    vec4 color = vec4(1.0);\n    color = mix(color, irisColor, S(0.1, 0.7, dist) * 0.5);\n    color.a = S(0.5, 0.48, dist);\n    \n    // Edge shadow for white of eyes\n    color.rgb *= 1.0 - S(0.45, 0.5, dist) * 0.5 * sat(-uv.y - uv.x * side);\n    \n    // --- Iris ---\n    \n    // Iris to follow the mouse\n    dist = length(uv - mouse * 0.6);\n    \n    // Iris outline\n    color.rgb = mix(color.rgb, vec3(0.0), S(0.3, 0.28, dist));\n    \n    // Draw iris\n    irisColor.rgb *= 0.75 + S(0.35, 0.07, dist) * irisColorInner.rgb * 5.0; \n    irisColorInner.rgb *= 1.0 + S(0.2, 0.05, dist);\n    float irisMask = S(0.28, 0.27, dist);\n    color.rgb = mix(color.rgb, irisColor.rgb, irisMask);\n    \n    // --- Pupil ---\n    \n    dist = length(uv - mouse * 0.65);\n    float pupilSize = mix(0.3, 0.15, smile);\n    float pupilMask = S(pupilSize, pupilSize * 0.85, dist);\n    \n    // Constrain iris to pupil\n    pupilMask *= irisMask;\n    color.rgb = mix(color.rgb, vec3(0.0), pupilMask);\n    \n    // --- Highlights ---\n    \n    // Animate highlights\n    float time = iTime * 3.0;\n    vec2 offset = vec2(sin(time + uv.y * 25.0), sin(time + uv.x * 25.0));\n    offset *= 0.01 * (1.0 - smile);\n    \n    uv += offset;\n    \n    // Draw highlights\n    float highlight = S(0.1, 0.05, length(uv - vec2(-0.15, 0.15)));\n    highlight += S(0.07, 0.01, length(uv - vec2(0.08, -0.08)));\n    \n    color.rgb = mix(color.rgb, vec3(1.0), highlight);\n    \n    return color;\n}\n\nvec4 createMouth(vec2 uv, float smile) {\n    // Reset origin\n    uv -= 0.5;\n    \n    // Mouth color\n    vec4 color = vec4(0.5, 0.18, 0.05, 1.0);\n    \n    uv.y *= 1.8;\n    uv.y -= uv.x * uv.x * 2.0 * smile;\n    \n    uv.x *= mix(2.5, 1.0, smile);\n    \n    float dist = length(uv);\n    color.a = S(0.5, 0.48, dist);\n    \n    // --- Teeth ---\n    vec2 teethUv = uv;\n    teethUv.y += (abs(uv.x) * 0.5 + 0.1) * (1.0 - smile);\n    float teethDist = length(teethUv - vec2(0.0, 0.6));\n    vec3 teethColor = vec3(1.0) * S(0.6, 0.35, dist);\n    color.rgb = mix(color.rgb, teethColor, S(0.4, 0.37, teethDist));\n    \n    // --- Tongue ---\n    float tongueDist = length(uv + vec2(0.0, 0.5));\n    color.rgb = mix(color.rgb, vec3(1.0, 0.5, 0.5), S(0.5, 0.2, tongueDist));\n    return color;\n}\n\nvec4 createHead(vec2 uv) {\n    // Orange color\n    vec4 color = vec4(0.9, 0.65, 0.1, 1.0);\n    \n    // Create a circle\n    float dist = length(uv);\n    color.a = S(0.5, 0.49, dist);\n    \n    // --- Edge shadow ---\n    float edgeShadow = remap01(0.35, 0.5, dist);\n    edgeShadow *= edgeShadow;\n    color.rgb *= 1.0 - edgeShadow * 0.5;\n    \n    // Create outline\n    color.rgb = mix(color.rgb, vec3(0.6, 0.3, 0.1), S(0.4799, 0.48, dist));\n    \n    // --- Highlight ---\n    float highlight = S(0.41, 0.39, dist);\n    highlight *= remap(0.41, -0.1, 0.75, 0.0, uv.y);\n    highlight *= S(0.18, 0.19, length(uv - vec2(0.21, 0.08)));\n    color.rgb = mix(color.rgb, vec3(1.0), highlight);\n    \n    // --- Cheeks ---\n    dist =  length(uv - vec2(0.25, -0.2));\n    float cheek = S(0.2, 0.01, dist) * 0.3;\n    cheek *= S(0.17, 0.16, dist);\n    color.rgb = mix(color.rgb, vec3(1.0, 0.1, 0.1), cheek);\n    \n    \n    return color;\n}\n\nvec4 createSmiley(vec2 uv, vec2 mouse, float smile) {\n    vec4 color = vec4(0.0);\n    \n    // Mirror face while determining side\n    if (length(uv) < 0.5) {\n        float side = sign(uv.x);\n    \tuv.x = abs(uv.x);\n    \n        vec4 head = createHead(uv);\n        vec4 eye = createEye(within(uv, vec4(0.03, -0.1, 0.37, 0.25)), side, mouse, smile);\n        vec4 mouth = createMouth(within(uv, vec4(-0.3, -0.43, 0.3, -0.13)), smile);\n        vec4 brow = createBrow(within(uv, vec4(.03, .2, .4, .45)), smile);\n\n        color = mix(color, head, head.a);\n        color = mix(color, eye, eye.a);\n        color = mix(color, mouth, mouth.a);\n        color = mix(color, brow, brow.a);\n\t}\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Move origin to the center\n    uv -= 0.5;\n    \n    // Account for aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Get mouse coordinates\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    mouse -= 0.5;\n    \n    //uv -= mouse * (0.5 - length(uv)) * 0.15;\n    uv -= mouse * (0.5 - dot(uv, uv));//  * 1.0;\n    // Initialize the color value to be black\n    vec3 color = vec3(0.0);\n\t\n    float smile = cos(iTime) * 0.5 + 0.5;\n    // Output to screen\n    fragColor = createSmiley(uv, mouse, smile);\n}","name":"Image","description":"","type":"image"}]}