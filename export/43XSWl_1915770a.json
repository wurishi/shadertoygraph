{"ver":"0.1","info":{"id":"43XSWl","date":"1710172265","viewed":65,"name":"pattern rotator","username":"BetaSoftCologne","description":"2d rotating patterns","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2drotationpatterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TAU = 6.283185;\n\n\nmat2 rot(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat2(\n        c, -s,\n        s, c\n    );\n}\n\nvec3 pattern(vec3 col_in, vec2 uv, int count ) {\n    vec3 col = col_in;\n    for (int i=0; i<count; i++) {\n        uv = fract(uv) - 0.5;\n\n        float d = length(uv);\n        d = sin(d*8. + iTime)/8.;\n        d = abs(sin(d));\n\n        d = 0.02 / d;\n        col *= d;\n    }\n    return col;\n}\n\n\nfloat tfract(float x) {\n    return TAU*fract(x*iTime);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) /iResolution.y;\n\n    vec3 col;\n    col = pattern(vec3(1.0,4.0,5.0), uv, 2);\n\n    uv *= rot(cos(tfract(0.02)));\n    col += pattern(vec3(5.0,2.0,3.0), uv, 1);\n    col *= 0.5;\n\n    uv *= rot(sin(tfract(0.05)));\n    col += pattern(vec3(2.0,3.0,1.0), uv, 2);\n    col *= 0.6;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}