{"ver":"0.1","info":{"id":"3tVczw","date":"1610700884","viewed":62,"name":"Noisy Colours","username":"tomzer0","description":"Just generates a bunch of random colours, is semi-pleasing to look at. Made it cause I was bored, might continue experimenting with different noise fns to draw more.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(float a) {\n    return fract(sin(a) * 1337.1337 + 7.2718);\n}\n\nfloat noise2(vec2 a) {\n    return noise(dot(a, vec2(3.91239, 7.139938)));\n}\n\n\nvoid pattern(vec2 uv, out vec4 fragColor) {\n    float r = noise2(uv*31. + vec2(sin(iTime/10000.0), 0));\n    float g = noise2(uv*17. + cos(iTime/10000.) * 7.5 * noise2(uv*3.14 + vec2(2.5, 0.3)));\n    float b = noise2(uv*51. + cos(iTime/3959.) *\n        noise2(uv * uv * 13.5\n         + noise2(uv * uv * uv * 7. + vec2(6.9, 0.25))));\n    fragColor = vec4(\n        r * smoothstep(1., (sin(iTime)+0.9)/2., fwidth(r)),\n        g * smoothstep(1., (cos(iTime+0.5)+0.9)/2., fwidth(g)),\n        b * smoothstep(tan(iTime), 1., fwidth(b)),\n        //g*b,\n        1.0\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    pattern(uv, fragColor);\n}","name":"Image","description":"","type":"image"}]}