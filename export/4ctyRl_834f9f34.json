{"ver":"0.1","info":{"id":"4ctyRl","date":"1731021608","viewed":104,"name":"Comic style","username":"Redstone118","description":"Saturates the image and adds an edge and stipple filter","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["edge","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Saturation code based on this stackoverflow post:\n//https://stackoverflow.com/questions/31627303/calculate-new-rgb-by-saturation\n\nvec3 GreyScale(vec3 InCol);\nvec3 Threshold(vec3 InCol);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 TopLeft      = vec2( 1., 1.)/iResolution.xy;\n    vec2 TopMiddle    = vec2( 0., 1.)/iResolution.xy;\n    vec2 TopRight     = vec2(-1., 1.)/iResolution.xy;\n    vec2 MiddleLeft   = vec2( 1., 0.)/iResolution.xy;\n    vec2 MiddleMiddle = vec2( 0., 0.)/iResolution.xy;\n    vec2 MiddleRight  = vec2(-1., 0.)/iResolution.xy;\n    vec2 BottomLeft   = vec2( 1.,-1.)/iResolution.xy;\n    vec2 BottomMiddle = vec2( 0.,-1.)/iResolution.xy;\n    vec2 BottomRight  = vec2(-1.,-1.)/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).rgb;\n    int Min;\n    if(min(min(col.r,col.g),col.b)==col.r){\n        Min=0;\n    }else if(min(min(col.r,col.g),col.b)==col.g){\n        Min=1;\n    }else{\n        Min=2;\n    }\n    \n    int Max;\n    if(max(max(col.r,col.g),col.b)==col.r){\n        Max=0;\n    }else if(max(max(col.r,col.g),col.b)==col.g){\n        Max=1;\n    }else{\n        Max=2;\n    }\n    \n    int Mid;\n    if((Max+Min)==1){\n        Mid=2;\n    }else if((Max+Min)==2){\n        Mid=1;\n    }else{\n        Mid=0;\n    }\n    \n    float Cols[3]=float[3](\n        col.r,\n        col.g,\n        col.b\n    );\n    \n    float a = Cols[Max]-Cols[Min];\n    float b = Cols[Mid]-Cols[Min];\n    float x = Cols[Max];\n    \n    float s=0.75;\n    Cols[Max]=x;\n    Cols[Min]=x*(1.-s);\n    Cols[Mid]=x*((1.-s)+s*b/a);\n    vec3 Scol=vec3(Cols[0],Cols[1],Cols[2]);\n    Scol=Scol/max(max(Scol.r,Scol.g),Scol.b);\n    \n    col = Threshold(vec3(1.-sqrt(pow((\n               GreyScale(texture(iChannel0,uv+TopLeft     ).rgb)* 1.+\n               GreyScale(texture(iChannel0,uv+TopMiddle   ).rgb)* 2.+\n               GreyScale(texture(iChannel0,uv+TopRight    ).rgb)* 1.+\n               GreyScale(texture(iChannel0,uv+MiddleLeft  ).rgb)* 0.+\n               GreyScale(texture(iChannel0,uv+MiddleMiddle).rgb)* 0.+\n               GreyScale(texture(iChannel0,uv+MiddleRight ).rgb)* 0.+\n               GreyScale(texture(iChannel0,uv+BottomLeft  ).rgb)*-1.+\n               GreyScale(texture(iChannel0,uv+BottomMiddle).rgb)*-2.+\n               GreyScale(texture(iChannel0,uv+BottomRight ).rgb)*-1.\n                ).r,2.)+\n               pow((\n               GreyScale(texture(iChannel0,uv+TopLeft     ).rgb)* 1.+\n               GreyScale(texture(iChannel0,uv+TopMiddle   ).rgb)* 0.+\n               GreyScale(texture(iChannel0,uv+TopRight    ).rgb)*-1.+\n               GreyScale(texture(iChannel0,uv+MiddleLeft  ).rgb)* 2.+\n               GreyScale(texture(iChannel0,uv+MiddleMiddle).rgb)* 0.+\n               GreyScale(texture(iChannel0,uv+MiddleRight ).rgb)*-2.+\n               GreyScale(texture(iChannel0,uv+BottomLeft  ).rgb)* 1.+\n               GreyScale(texture(iChannel0,uv+BottomMiddle).rgb)* 0.+\n               GreyScale(texture(iChannel0,uv+BottomRight ).rgb)*-1.\n               ).r,2.))))*\n               vec3(GreyScale(texture(iChannel0,uv).rgb).r>texture(iChannel1,uv).r-0.2)*\n               Scol;\n        \n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}\n\nvec3 GreyScale(vec3 InCol){\n    return vec3((InCol.r+InCol.g+InCol.b)/3.);\n}\n\nvec3 Threshold(vec3 InCol){\n    return (1.-vec3(0.,0.,0.))*float(InCol.r>0.8);\n}","name":"Image","description":"","type":"image"}]}