{"ver":"0.1","info":{"id":"4ttfRn","date":"1544809281","viewed":194,"name":"Rainbow Color Ramps","username":"olano","description":"Various ways to compute rainbow-like color ramps\nGraphs here: https://www.desmos.com/calculator/kuun8qrcze","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hue","ramp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor *= 0.0;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    if (4. * uv.y > 3.) {\n        // typical linear hue portion of HSV transform\n    \tfragColor.rgb = abs(fract(uv.x + vec3(3,2,1)/3.)*6. - 3.) - 1.;\n    }\n    else if (4. * uv.y > 2.) {\n        // smooth quadratic with same red/green/blue peaks\n        vec3 c = 3. * vec3(abs(uv.x-.5),uv.xx) - vec3(1.5,1,2);\n\t    fragColor.rgb = 1. - c*c;\n    }\n    else if (4. * uv.y > 1.) {\n        // smooth quadratic ending with blue (not wrapping around)\n        vec3 c = 2. * uv.x - vec3(0,1,2);\n        fragColor.rgb = 1. - c*c;\n    }\n    else {\n        // smooth quadratic going to 0 at top and bottom\n        vec3 c = vec3(1,2,3) - 4. * uv.x;\n        fragColor.rgb = 1. - c*c;\n    }\n}","name":"Image","description":"","type":"image"}]}