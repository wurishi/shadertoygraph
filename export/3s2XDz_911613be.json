{"ver":"0.1","info":{"id":"3s2XDz","date":"1553579143","viewed":88,"name":"Rotating_smiley_face","username":"ruka","description":"Rotating_smiley_face","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//draw a circle\nfloat Circle(vec2 uv, vec2 p, float r, float blur){\n    float c = smoothstep(r,r-blur,length(uv-p));\n    return c;\n}\n//draw a smile face\nfloat Smiley(vec2 uv, vec2 p, float size){\n\n    uv -= p;\n    uv /= size;\n\n    float mask = Circle(uv,vec2(0,0), 0.2, 0.01);\n    mask -= Circle(uv,vec2(-0.07,0.06), 0.03, 0.01);\n    mask -= Circle(uv,vec2(0.07,0.06), 0.03, 0.01);\n\n    float mouth = Circle(uv,vec2(0,0), 0.15, 0.01);\n    mouth -= Circle(uv,vec2(0,0.04), 0.16, 0.01);\n\n    mask -= mouth;\n\n    return mask;\n}\n//ratate the uv coord\nvec2 rotate(vec2 uv, float angle){\n    vec2 ro;\n    ro.x =   cos(angle)*uv.x + sin(angle)*uv.y;\n    ro.y = - sin(angle)*uv.x + cos(angle)*uv.y;\n    return ro;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //normalize the uv coord\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    //copy uv for smile to rotate the face only\n    vec2 uv_smile = uv;\n    float PI = 3.14;\n\tfloat ang = mod(iTime, 2.0*PI);\n    uv_smile = rotate(uv,ang);;\n    \n    vec2 p = vec2(.0,.0);//move the coord of face\n    vec3 col = vec3(1.,1.,0.)*Smiley(uv_smile,p,1.);//face color\n\n    float bmask = 1.0 - Smiley(uv_smile,p,1.);// face mask\n    vec3 bcol = vec3(1.,0.5,0.6-0.5*uv.y)*(0.6-0.25*length(uv))*bmask;//background color\n    col += bcol;//mix the color\n\n\n    fragColor = vec4(col,1.0);//output\n}","name":"Image","description":"","type":"image"}]}