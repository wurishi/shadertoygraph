{"ver":"0.1","info":{"id":"DdKBDG","date":"1698606839","viewed":53,"name":"__light test","username":"jiq","description":"2d","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nfloat f( in vec2 p, in vec2 b, in vec4 r ) \n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n    vec2 s = vec2(0.5, 0.2);\n    vec4 r = vec4(0.1);\n\tfloat d = f(p, s, r);\n\n    vec3 col = (d>0.0) ? vec3(0.85,0.85,0.85) : vec3(0.9,0.9,0.9);\n    \n    const float eps = 0.0001; // or some other value\n    const vec2 h = vec2(eps,0);\n    vec3 n = vec3(\n        p.x < 0.0 ? - 1.0 + smoothstep(-0.5, -0.4, p.x) : clamp(smoothstep(0.4, 0.5, p.x), 0.0, 1.0),\n        0.0,\n        p.y < 0.0 ? - 1.0 + smoothstep(-0.2, -0.1, p.y) : clamp(smoothstep(0.1, 0.2, p.y), 0.0, 1.0)\n    );\n    n.y = 1.0 - sqrt(n.x * n.x + n.z * n.z);\n    n = normalize(n);\n    \n    vec3 l_pos = vec3(cos(iTime) * 1.0, 0.0, -1.0);\n    vec3 l_dir = vec3(0);\n    l_dir.xz = normalize(l_pos.xz - p);\n    float dt = clamp(dot(l_dir, n), 0.0, 1.0);\n    float dist = length(l_pos.xz - p);\n    dist *= 4.0;\n    float power = 1.0 / dist;//(dist * dist);\n    vec3 light_col = vec3(0.1, 0.0, 0.1) * 2.0;\n    if (d < 0.0) {\n        col += dt * light_col * power;\n    } else {\n       \n        //float a = 1.0 - smoothstep(0.0, 0.2, sqrt(d));\n        //col -= vec3(0.1, 0.1, 0.1) * a;\n        col += power * light_col;\n    }\n    \n    \n    //col = col / (col + 1.0);\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}