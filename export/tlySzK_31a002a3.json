{"ver":"0.1","info":{"id":"tlySzK","date":"1675347574","viewed":61,"name":"Midterm 1 - Chaos","username":"santreal","description":"get High ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["red","squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 circle (vec2 uv , vec2 pos, float radius , float ratio, vec3 color)\n{\n    vec2 circlePos = vec2 (pos.x * ratio, pos.y);\n    vec3 value = vec3(step(radius, distance(uv, circlePos)));\n                       \n    vec3 col = mix (color , vec3(0.), value );\n    return col;           \n}\nfloat shape (vec2 uv, vec2 shapePos, float scale)\n{\n    float dist = distance(shapePos, uv) * scale;\n    uv -= shapePos;\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = cos(10. * angle + iTime*3.);\n    radius *= sin\t(10. * angle + iTime * 1.);\n\n    \n    return radius;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord/iResolution.xy;\n\tfloat ratio =  iResolution.x/iResolution.y;\n    uv.x *= ratio;\n\n    \n    vec2 pos1 = vec2(0.9 * ratio,0.5);\n    vec2 pos2 = vec2(0.1 * ratio, 0.5);\n    float scale = 10.;\n    float blur = .5;\n    \n    float shape1 = shape(uv,pos1,scale);\n    float shape2 = shape (uv,pos2, scale);\n    float shape3 = shape(uv,vec2(0.5*ratio, 0.1),scale);\n    float shape4 = shape (uv,vec2(0.5* ratio, 0.9), scale);\n\t\n    vec3 cir1 = circle(uv,vec2(0.5,0.5), 0.3,ratio,vec3(1,0,0));\n    vec3 cir2 = circle(uv,vec2(0.5,0.9), 0.3,ratio, vec3(1,0,0));\n    \n    vec3 colorRand = vec3(1,0,0);\n   \n    // Output to screen\n\n     vec3 color = (shape1 * colorRand)  + (shape2 * colorRand) - (shape3 * colorRand) - (shape4 * colorRand); \n    fragColor = vec4(color,1.0);\n   \n    \n}\n","name":"Image","description":"","type":"image"}]}