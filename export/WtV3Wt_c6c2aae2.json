{"ver":"0.1","info":{"id":"WtV3Wt","date":"1580177087","viewed":97,"name":"Rotozoom test","username":"Axioplase","description":"It kinda makes me want to sick.\nThat being said, I'm getting better at this...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rotozoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate2d(vec2 p, float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c)*p;\n}\n\nfloat hash(vec2 p) {\n    p = fract(p*vec2(46.12, 499.346));\n    p += dot(p, 34.42*p);\n    return fract(p.x * p.y);\n}\n\nvec3 box(vec2 uv, float t) {\n    vec2 id = floor(uv);\n    float h = hash(id);\n    float r = abs(sin(h*t/2.));\n\tfloat g = abs(cos(h*t/1.2));\n    float b = 0.5*(1.+cos(h*t/1.442));\n    return vec3(r, g, b);               \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    float t = iTime;\n    // for the rotations\n    float s = sin(t/2.);\n    float c = cos(7.+t/1.7);\n    vec2 ruv = rotate2d(uv, 2.*c*s);\n    // for the translation\n    vec2 tuv = ruv+2.*vec2(s,c);\n    // for the zoom\n    float zoom = 3.*(1.+2.*s*s);\n    \n    vec3 col = box(tuv*zoom, abs(10.+3.1415*cos(iTime/2.)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}