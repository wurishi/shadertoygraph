{"ver":"0.1","info":{"id":"DsKfWz","date":"1698136481","viewed":83,"name":"Shrinking","username":"INCHMAN1900","description":"practice","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["noise","animation"],"hasliked":0,"parentid":"cdtBzl","parentname":"Shader Color Practice"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n#define res iResolution.xy\n\nfloat random(float x) {\n    return fract(sin(193.5113+x*7532.439)*395.5349);\n}\n\nfloat noise(float x) {\n    float i=floor(x);\n    float f=fract(x);\n    return smoothstep(random(i),random(i+1.),f);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/res;\n    uv-=.5;\n    uv.x*=res.x/res.y;\n    float dist=length(uv);\n    float rt=noise(dist*20.+iTime*.5)*PI*2.;\n    uv=mat2(cos(rt),-sin(rt),sin(rt),cos(rt))*uv;\n    float angle=atan(uv.y,uv.x)+PI;\n    vec3 col = vec3(.6-dist,angle/PI*.5*.4,ceil(dist*10.)*0.1*.4+.3);\n    fragColor = vec4(1.-col,1.0);\n}","name":"Image","description":"","type":"image"}]}