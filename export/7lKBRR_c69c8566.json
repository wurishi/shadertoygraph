{"ver":"0.1","info":{"id":"7lKBRR","date":"1722705557","viewed":11,"name":"TBOS_Noise7","username":"nako","description":"The Book of Shaders\nhttps://thebookofshaders.com/11/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3,1415926525\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\nfloat valueNoise(vec2 st, float num){\n    st *= num;\n    vec2 floor_st = floor(st);\n    vec2 fract_st = fract(st);\n    float rand0 = random(floor_st);\n    float rand1 = random(floor_st + vec2(1.,0.));\n    float rand2 = random(floor_st + vec2(1.,1.));\n    float rand3 = random(floor_st + vec2(0.,1.));\n    vec2 u = fract_st*fract_st*(3. - 2.*fract_st);\n    return mix(mix(rand0, rand1, u.x), mix(rand3, rand2, u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    st.x *= iResolution.x/iResolution.y;\n    st -= vec2(.5);\n    float d = distance(vec2(.0,.0), st);\n    float a = atan(st.x, st.y);\n    \n    //d += sin(a*30.)*valueNoise(vec2(a+iTime), 3.)*.5;\n    \n    //d += sin(a*30.)*.03 + valueNoise(vec2(st+iTime), 2.)*.2;\n    \n    d += sin(a*30.+valueNoise(vec2(st+iTime), 2.)*15.)*.03;\n\n    \n    float col = smoothstep(0.39,0.4, d) - smoothstep(.4, .41, d);\n    fragColor = vec4(vec3(col), 0.);\n}","name":"Image","description":"","type":"image"}]}