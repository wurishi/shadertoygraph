{"ver":"0.1","info":{"id":"tscczl","date":"1707213050","viewed":68,"name":"Vortex warp","username":"kurono","description":"Mouse click defines the vortexs' centrer","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["warp","vortex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// main\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // position\n    vec2 r = fragCoord.xy / iResolution.xy;\n    \n    // sampled scalar field\n    vec4 f = texture(iChannel0, r);\n    \n    \n    fragColor = vec4(f.rgb, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// velocity field of a vortex\n\n#define eps 0.001\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 r = fragCoord / iResolution.xy;\n\n    // center of a vortex\n    vec2 center = vec2(iMouse.x / iResolution.x, iMouse.y / iResolution.y);\n    \n    // vortex vector direction\n    float ux = r.y - center.y;\n    float uy = -1.0 * (r.x - center.x);\n    \n    float umag = sqrt(ux*ux + uy*uy);\n    \n    ux = ux / (umag + eps);\n    uy = uy / (umag + eps);\n    \n    //vec3 u = vec3(umag, umag, umag);\n    vec3 u = vec3(ux, uy, 0.0);\n\n    // Output to screen\n    fragColor = vec4(u, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// checker texture\n\n#define scale 10.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 r = fragCoord/iResolution.xy;\n    \n    // aspect ratio\n    float aspect = iResolution.x/iResolution.y; \n    //r.x = r.x*aspect;\n    \n    r = floor(scale * r);\n    \n    vec3 evenCells = vec3(mod(r.x + r.y, 2.0));\n    \n    fragColor = vec4(evenCells, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// back-traced-in-time advection of bufB through bufA\n\n#define dt 0.01\n#define velocity 5.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // position\n    vec2 r = fragCoord.xy / iResolution.xy;\n    \n    // sampled vector field\n    vec4 u = texture(iChannel0, r);\n    \n    // previous-in-time position of a point\n    vec2 rprev = r.xy - u.xy * velocity * sin(iTime) * dt;\n    \n    // sampled scalar field\n    vec4 f = texture(iChannel1, rprev);\n    \n    fragColor = vec4(f.rgb, 1.0);\n}","name":"Buffer C","description":"","type":"buffer"}]}