{"ver":"0.1","info":{"id":"4dVfW3","date":"1530802505","viewed":826,"name":"Abstract Painting","username":"FlorianDuf","description":"I read two article www.iquilezles.org/articles/warp/warp.htm & thebookofshaders.com/ and I decide to try it.","likes":28,"published":1,"flags":0,"usePreview":0,"tags":["fbmpaintingabstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n*\n*  \n*\tInspired by : https://iquilezles.org/articles/warp\n*\t\t\t\t& https://thebookofshaders.com/\n*\n*\n*/\n\nfloat rand(vec2 st)\n{\n    return fract(sin(dot(st,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = rand(i);\n    float b = rand(i + vec2(1.0,0.0));\n    float c = rand(i + vec2(0.0, 1.0));\n    float d = rand(i + vec2(1.0, 1.0));\n\n    vec2 u = smoothstep(0.0,1.0, f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n\nfloat fbm (in vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(st);\n        st *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\nfloat pattern( in vec2 p, out vec2 q, out vec2 r , in float time)\n{\n    q.x = fbm( p + vec2(0.0,0.0) );\n    q.y = fbm( p + vec2(5.2,1.3) );\n    \n    q += vec2(sin(iTime*0.25), sin(iTime*0.3538));\n\n    r.x = fbm( p + 4.0*q + vec2(1.7,9.2) );\n    r.y = fbm( p + 4.0*q + vec2(8.3,2.8) );\n\n    r += vec2(sin(iTime*0.125), sin(iTime*0.43538));\n    \n    return fbm( p + 4.0*r );\n   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 uv = 10.0* fragCoord/iResolution.x;\n\n    \n    vec2 q, r;\n    float val = pattern(uv, q, r, iTime);\n    vec3 col = vec3(0.0);\n    \n#if TYPE == 0\n    col = mix(vec3(q*0.1,0.0), vec3(r, 0.5*sin(iTime) + 0.5),val);\n#elif TYPE == 1\n    col = mix(vec3(q*r,0.0), vec3(0.0),step(val, 0.8));\n#endif\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define OCTAVES 5\n\n#define TYPE 0\n// effect : \n// 0 : art effect\n// 1 : sparkle effect\n","name":"Common","description":"","type":"common"}]}