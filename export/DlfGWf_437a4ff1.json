{"ver":"0.1","info":{"id":"DlfGWf","date":"1672509535","viewed":115,"name":"Shockwave Lensing","username":"Pseudonymous","description":"Playing around with a shockwave shader. Use mouse to place origin.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["displacement","chromaticaberration","lens","shockwave","lensing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 texCol = texture(iChannel0, uv).xyz;\n    \n    \n    vec2 origin = iMouse.xy/iResolution.xy;\n    float deltaTime = fract(iTime);\n    float radius = deltaTime;\n    \n    float shockStrength = 1.;\n    float factor = shockStrength * sin(deltaTime*3.14) * pow(clamp(1. - abs(radius - distance(origin, uv)), 0., 1.), 20.);\n  \n    float lensingSpread = 0.12;\n    vec3 color = vec3(\n        texture(iChannel0, uv + (lensingSpread)*factor*normalize(origin-uv)).x,\n        texture(iChannel0, uv + (lensingSpread*1.2)*factor*normalize(origin-uv)).y,\n        texture(iChannel0, uv + (lensingSpread*1.5)*factor*normalize(origin-uv)).z\n    );\n        \n\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}