{"ver":"0.1","info":{"id":"WdtSWM","date":"1572180619","viewed":833,"name":"PI","username":"96logda","description":"Right now I am trying to learn how to make text, so my idea was to start with combining pipes to make a simple text.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["text","antialiasing","pi","distance","field","aa","3","shape","pipe","14"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-10-26 - 2019-10-27 by Angelo Logahd\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat pipe1(float r, vec2 p, float l)\n{\n\tfloat v = max(abs(p.x) - r, abs(p.y) - l);\n\treturn min(v, max(abs(p.x) - 0.07, abs(abs(p.y) - (l - 0.04))));\n}\n\nfloat pipe2(float r, vec2 p, float rad, vec2 d)\n{\n\treturn max(max(abs(length(p) - rad) - r, p.x * d.x), p.y * d.y);\n}\n\n// Based on https://thebookofshaders.com/07/ with some small changes to get the effect I wanted.\nfloat backgroundDE(in vec2 st)\n{\n    int N = 4;\n\n    // Angle and radius from the current pixel\n    float a = atan(st.x, st.y) + PI;\n    float r = TWO_PI / float(N);\n\n    // Shaping function that modulate the distance\n    float d = cos(floor(1.0 + a / r) * r - a) * length(st);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord / iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n    \n    // Move the space\n    st.x += 0.25 + sin(iTime * 0.5) * 0.15;\n    \n    // Remap the space to -1.0 to 1.0\n    st = st * 2.0 - 1.0;\n    \n    float d = backgroundDE(st - vec2(0.03, 0.0));\n    \n    // PI text\n    d = min(d, pipe1(0.03, st, 0.4));\n    d = min(d, pipe2(0.03, st - vec2(0.1, 0.15), 0.2, vec2(-0.5, 0.1)));\n    d = min(d, pipe1(0.03, st - vec2(0.65, 0.0), 0.4));\n    \n    //3.14 text\n    //3\n    d = min(d, pipe2(0.01, st - vec2(1.1, 0.11), 0.25, vec2(-0.5, 0.1)));\n    d = min(d, pipe2(0.01, st - vec2(1.1, -0.4), 0.25, vec2(-0.5, 0.1)));\n    //.\n\td = min(d, pipe2(0.00, st - vec2(1.55, -0.51), 0.0, vec2(-0.5, 0.1)));\n    //1\n    d = min(d, pipe1(0.03, st - vec2(1.85, -0.1), 0.45));\n    //4\n    d = min(d, pipe1(0.03, st - vec2(2.2, 0.1), 0.25));\n    d = min(d, pipe1(0.13, st - vec2(2.5, -0.1), 0.01));\n    d = min(d, pipe1(0.03, st - vec2(2.6, -0.1), 0.45));\n    \n    // The smoothstep with the small interval is used to achive a simple anti aliasing.\n    vec3 color = vec3(1.0 - smoothstep(0.05, 0.06, d) * 1.0 - vec3(1.0, 0.0, 0.0));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}