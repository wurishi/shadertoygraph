{"ver":"0.1","info":{"id":"Mld3Ds","date":"1472570666","viewed":752,"name":"Light Blinking","username":"Imsure1200q_1UWE130","description":"Blinking Light","likes":1,"published":3,"flags":8,"usePreview":0,"tags":["sound","blinkinglight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float time = iTime;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 z = vec2( sin(6.2831*440.0*time)*cos(-3.0*time));\n    vec2 error = vec2( sin(6.2831*440.0*time)*cos(sqrt(-3.0*time)) );\n    vec2 unerror = vec2( sin(6.2831*440.0*time)*cos(-3.0*time));\n    vec2 x = smoothstep(error - dot(unerror, -unerror), unerror, vec2(dot(error, unerror)));\n    vec2 y = mix(error - dot(unerror, -unerror), unerror, dot(error, unerror));\n    vec2 res = min(max(tan(x) + cos(y), tan(x) - cos(y)), z);\n    vec3 col = normalize(vec3(res, 1.0));\n    vec3 r = vec3(0.4, 0.3, 0.1);\n    fragColor = vec4(col-length(min(-sqrt(uv),-tan(uv)))+r, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n    vec2 z = vec2( sin(6.2831*440.0*time)*cos(-3.0*time));\n    vec2 error = vec2( sin(6.2831*440.0*time)*cos(sqrt(-3.0*time)) );\n    vec2 unerror = vec2( sin(6.2831*440.0*time)*cos(-3.0*time));\n    vec2 x = smoothstep(error - dot(unerror, -unerror), unerror, vec2(dot(error, unerror)));\n    vec2 y = mix(error - dot(unerror, -unerror), unerror, dot(error, unerror));\n    return min(max(tan(x) + cos(y), tan(x) - cos(y)), z);\n}","name":"Sound","description":"","type":"sound"}]}