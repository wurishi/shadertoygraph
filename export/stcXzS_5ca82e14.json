{"ver":"0.1","info":{"id":"stcXzS","date":"1639313637","viewed":217,"name":"cardioid drawing animation","username":"krasnikov05","description":"https://en.wikipedia.org/wiki/Cardioid","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["animation","cardioid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n#define THICKNESS .04\n#define DELTA .1\n\nfloat circle(float x0, float y0, vec2 uv) {\n    float pix = 8./iResolution.y;\n    return smoothstep(THICKNESS-pix, THICKNESS+pix,\n    abs(distance(uv, vec2(x0, y0))-1.));\n}\n\nfloat line(float x1, float y1, float x2, float y2, vec2 uv) {\n  float t = THICKNESS;\n  if(uv.x <= min(x1,x2)-t ||\n     uv.x >= max(x1,x2)+t ||\n     uv.y <= min(y1,y2)-t ||\n     uv.y >= max(y1,y2)+t\n  ) return 1.;\n  float pix = 8./iResolution.y;\n  vec2 lineDir = vec2(x2, y2) - vec2(x1, y1);\n  vec2 perpDir = vec2(lineDir.y, -lineDir.x);\n  vec2 dirToPt1 = vec2(x1, y1) - uv;\n  float d = abs(dot(normalize(perpDir), dirToPt1));\n  return smoothstep(THICKNESS-pix, THICKNESS+pix, d);\n}\n\n\nvec3 cardioid(float n, vec2 uv) {\n    float x1 = 0.;\n    float y1 = 0.;\n    float x2 = 0.;\n    float y2 = 0.;\n    float o = 1.;\n    for(float t = 0.; t < n; t += DELTA) {\n        x1 = 2.*cos(t)-cos(2.*t);\n        y1 = 2.*sin(t)-sin(2.*t);\n        x2 = 2.*cos(t-DELTA)-cos(2.*(t-DELTA));\n        y2 = 2.*sin(t-DELTA)-sin(2.*(t-DELTA));\n        o *= line(x1,y1,x2,y2,uv);\n    }\n    x2 = 2.*cos(n)-cos(2.*n);\n    y2 = 2.*sin(n)-sin(2.*n);\n    o *= line(x1,y1,x2,y2,uv);\n    return vec3(1.)-(1.-o)*vec3(0.,1.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 8.*( fragCoord - .5*iResolution.xy ) / iResolution.y;\n\n    float time = abs(mod(.1*iTime, 2.)-1.)*PI*2.;\n\n    vec3 col = vec3(1.);\n\n    col *= circle(0., 0., uv);\n    \n    col *= circle(2.*cos(time), 2.*sin(time), uv);\n    \n    col *= line(2.*cos(time), 2.*sin(time),\n    2.*cos(time)-cos(2.*time), 2.*sin(time)-sin(2.*time), uv);\n\n    col *= cardioid(time, uv);\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}