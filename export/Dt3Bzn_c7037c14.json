{"ver":"0.1","info":{"id":"Dt3Bzn","date":"1700840407","viewed":105,"name":"20231125_先バレ (volume warning)","username":"0b5vr","description":"先バレ音","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["audio","synth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord / iResolution.xy;\n\n  float audio = 0.5 * renderAudio( iTime + 0.01 * uv.x ).x;\n  float dAudio = abs( dFdx( audio ) );\n\n  float shape = linearstep( 2.0 / iResolution.y, 0.0, abs( uv.y - 0.5 - audio ) - 0.5 * dAudio );\n  fragColor = vec4( vec3( shape ), 1.0 );\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time ) {\n  return renderAudio( time );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"#define repeat( i, n ) for( int i = 0; i < n; i ++ )\n#define saturate(x) clamp(x,0.,1.)\n#define linearstep(a,b,t) saturate(((t)-(a)) / ((b)-(a)))\n\nconst float LN2 = log( 2.0 );\n\nfloat p2f( float p ) {\n  return 440.0 * exp2( ( p - 69.0 ) / 12.0 );\n}\n\nfloat glidephase( float t, float t1, float p0, float p1 ) {\n  if ( p0 == p1 || t1 == 0.0 ) {\n    return t * p2f( p1 );\n  }\n\n  float m0 = ( p0 - 69.0 ) / 12.0;\n  float m1 = ( p1 - 69.0 ) / 12.0;\n  float b = ( m1 - m0 ) / t1;\n  \n  return (\n    + p2f( p0 ) * ( pow( 2.0, b * min( t, t1 ) ) - 1.0 ) / b / LN2\n    + max( 0.0, t - t1 ) * p2f( p1 )\n  );\n}\n\nfloat osc( float phase ) {\n  float p2 = fract( phase * 2.0 );\n  float wave = smoothstep( 0.0, 0.2, p2 ) * ( 1.0 - p2 );\n  return wave * sign( fract( wave ) - 0.5 );\n}\n\nvec2 renderAudio( float time ) {\n  vec2 dest = vec2( 0.0 );\n\n  repeat( iDelay, 6 ) {\n    float t = time - 0.5 * float( iDelay );\n    float q = 0.9 - t;\n  \n    float delayAmp = iDelay == 0 ? 1.0 : 0.1 * exp( -1.0 * float( iDelay ) );\n    float sum = 0.0;\n\n    repeat( iUnison, 4 ) {\n      float env = smoothstep( 0.0, 0.01, t ) * smoothstep( 0.0, 0.01, q );\n    \n      float phase = 0.0;\n      phase += glidephase( clamp( t, 0.0, 0.1 ), 0.05, 64.0, 52.0 );\n      phase += glidephase( clamp( t - 0.1, 0.0, 0.12 ), 0.1, 52.0, 84.0 );\n      phase += glidephase( clamp( t - 0.22, 0.0, 0.68 ), 0.7, 84.0, 40.0 );\n      phase *= exp2( -0.06 + 0.04 * float( iUnison ) );\n      sum += env * osc( phase );\n    }\n    \n    dest += delayAmp * tanh( 5.0 * sum );\n  }\n  \n  return tanh( 5.0 * dest );\n}\n","name":"Common","description":"","type":"common"}]}