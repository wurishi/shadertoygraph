{"ver":"0.1","info":{"id":"XXXcRn","date":"1725761585","viewed":70,"name":"Astrobot Eyes","username":"jackisgames","description":"Astrobot eyes ","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["bot","astro","ps5","asobi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 baseColor1 = vec4(49.0, 203.0, 255.0, 255.0) / 255.0;\n    vec4 baseColor2 = vec4(5.0, 19.0, 146.0, 255.0) / 255.0;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 eyeUvBase = uv;\n    eyeUvBase -= iMouse.xy / iResolution.xy * .1;\n    float blink = step( fract( iTime * .8f ), .065f );\n    float height = (blink * 5.0 * (.5 + sin(iTime * 2.5) * .5) ) + .97;\n    float buffer = eyeRadius * eyeGlowCoef;\n    float eyeHeightV = (eyeRadius + buffer) / iResolution.y;\n    eyeUvBase.y -=.05 + (height - 1.0) * (eyeHeightV )* (1.0f/ height);\n\n    vec2 eyeUv = vec2(mix(eyeUvBase.x +.5, 1.0 - eyeUvBase.x +.5, step(.5, eyeUvBase.x)), eyeUvBase.y * height);\n    \n    vec4 c = texture(iChannel1, eyeUv);\n    fragColor = mix(baseColor2, baseColor1 * (0.25 + texture(iChannel0, uv)), c * c) * c ;\n    \n    float sideGlow = length(abs(uv -.5));\n    \n    fragColor += baseColor2 * smoothstep(.3, 1.0, sideGlow) * (1.0 - .1 * noise1d(iTime));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 center = floor(fragCoord/circleRadius) * circleRadius + (circleRadius * .5);\n    float c = smoothstep(circleRadius* .10,  circleRadius * .76, length(fragCoord - center));\n     \n    float noiseX = noise1d(center.x);\n    float noiseY = noise1d(center.y + iTime);\n    float inv_c = (1.0f - c);\n    \n    \n    fragColor = vec4(inv_c, inv_c + noiseX * .15, inv_c + noiseY * .35,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float buffer = eyeRadius * eyeGlowCoef;\n    float eyeOffset = eyeRadius + eyeDist * .5;\n    vec2 center = vec2(iResolution.x - eyeOffset, eyeRadius + buffer) /iResolution.x;\n    \n    vec2 uv = fragCoord/iResolution.x;\n    float c = length(center - uv) / (eyeRadius / iResolution.x);\n    \n    \n    c = smoothstep(1.0 + eyeGlowCoef, smoothstep(1.0, 0.5, c), c);\n    \n    c = c * c;\n    fragColor = vec4(c, c, c,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const float eyeRadius = 100.0;\nconst float eyeDist = 25.0;\nconst float eyeGlowCoef = 1.9;\n\nconst float circleRadius = 12.0;//18.0;\n\nfloat noise1d(float n){\n    return fract(cos(n*89.42)*343.42);\n}\n","name":"Common","description":"","type":"common"}]}