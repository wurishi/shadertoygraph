{"ver":"0.1","info":{"id":"stj3Wc","date":"1625120135","viewed":66,"name":"Fork Toy1 ArthMax 463","username":"ArthMax","description":"This is Toy2 for my followers-students. Make your own Toy!/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["toy1forfollowers"],"hasliked":0,"parentid":"tdScDh","parentname":"Toy1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _(float a, float b, float c){\n                  return max(a,max(b,c));\n        }\n             \n        float L(vec2 p, vec2 P0, vec2 P1){\n                float a = -(P1.y-P0.y);\n                float b =  (P1.x-P0.x);\n                float d =  P0.x*P1.y- P0.y*P1.x; \n                float x = p.x;\n                float y = p.y;\n                \n                 return a*x + b*y + d;\n        }\n    \n    float T(vec2 p, vec2 P0, vec2 P1, vec2 P2){\n          return  _(\n                     L(p, P0, P1),\n                     L(p, P1, P2), \n                     L(p, P2, P0)\n                   );   \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//  digitalized Pi profile                      \n vec2 P[40];\n       P[ 0] = vec2(-0.74687 ,    0.21562);\n       P[ 1] = vec2(-0.7375  ,    0.38437);\n       P[ 2] = vec2(-0.63125 ,    0.54375);\n       P[ 3] = vec2(-0.47813 ,    0.63437);\n       P[ 4] = vec2(-0.30937 ,    0.66562);\n       P[ 5] = vec2(-0.053125,    0.66250);\n       P[ 6] = vec2( 0.28125  ,   0.66250);\n       P[ 7] = vec2( 0.64063  ,   0.66562);\n       P[ 8] = vec2( 0.7125   ,   0.66875);\n       P[ 9] = vec2( 0.64375  ,   0.54062);\n       P[10] = vec2( 0.51563  ,   0.46562);\n       P[11] = vec2( 0.37188  ,   0.44688);\n       P[12] = vec2( 0.24063  ,  -0.39688);\n       P[13] = vec2( 0.3375   ,  -0.51875);\n       P[14] = vec2( 0.45     ,  -0.52813);\n       P[15] = vec2( 0.65625  ,  -0.40313);\n       P[16] = vec2( 0.62188  ,  -0.54375);\n       P[17] = vec2( 0.50313  ,  -0.65938);\n       P[18] = vec2( 0.2625   ,  -0.70938);\n       P[19] = vec2( 0.096875 ,  -0.55000);\n       P[20] = vec2( 0.05     ,  -0.25938);\n       P[21] = vec2( 0.09375  ,   0.04375);\n       P[22] = vec2( 0.19688  ,   0.44688);\n       P[23] = vec2(-0.20937 ,    0.45625);\n       P[24] = vec2(-0.25937 ,   -0.10000);\n       P[25] = vec2(-0.3375  ,   -0.48438);\n       P[26] = vec2(-0.51875 ,   -0.68438);\n       P[27] = vec2(-0.64063 ,   -0.69688);\n       P[28] = vec2(-0.68125 ,   -0.60625);\n       P[29] = vec2(-0.54688 ,   -0.40625);\n       P[30] = vec2(-0.44688 ,   -0.12187);\n       P[31] = vec2(-0.35938 ,    0.27187);\n       P[32] = vec2(-0.34687 ,    0.45625);\n       P[33] = vec2(-0.49375 ,    0.40625);\n       P[34] = vec2(-0.6375  ,    0.30937);\n       P[35] = vec2(-0.7375  ,    0.21875);\n       P[36] = vec2(-0.74687 ,    0.21562);   \n       P[37] = vec2(-0.7375  ,    0.38437);\n       P[38] = vec2(-0.63125 ,    0.54375);\n       P[39] = vec2(-0.47813 ,    0.63437);\n   \n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 p = 1.0 - 2.0* fragCoord/iResolution.xy;\n    vec2 m = 1.0 - 2.0* iMouse.xy/iResolution.xy;\n\n     float x = p.x * iResolution.x/iResolution.y;\n     float y = p.y ;\n     \n     float mx = m.x * iResolution.x/iResolution.y;\n     float my = m.y ;\n           \n            x/=mx;\n            y/=my;\n            \n            p.x=x;\n            p.y=y;\n   \n\n      float  z = 1.0e25; //infinity?\n              for(int i=0;i<40-4;i++)\n                z = min(z, T(p,  P[i],P[i+1], P[i+3]) );   \n       float     f = 1.25/z; \n\n    // Time varying pixel color\n               vec3 col = vec3(1.0, 1.0, 1.0);\n                if(f >= 0.0)col.g = sin(iTime/10.0);\n                   else     col.r = f;\n                \n\n    // Output to screen\n                 fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}