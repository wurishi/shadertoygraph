{"ver":"0.1","info":{"id":"WdscR4","date":"1584276353","viewed":657,"name":"Simple neon lines","username":"jetp250","description":"Simple line utilizing the formula t=dot(C-A, B-A)/dot(B-A,B-A) for Q = A + t*(B-A), where A and B are the line start/end points and Q is the nearest point to input point C on the line.\n\nThanks a LOT to Spiney for the tonemapping function!","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.1415926535\n#define TAU 6.2831853071\n\nfloat line(vec2 A, vec2 B, vec2 C, float thickness) {\n\tvec2 AB = B-A;\n    vec2 AC = C-A;\n\n    float t = dot(AC, AB) / dot(AB, AB);\n    t = min(1.0, max(0.0, t));\n    \n    vec2 Q = A + t * AB;\n    \n    float dist = length(Q-C);\n    return smoothstep(-0.01, -dist, -thickness) + smoothstep(-0.02, dist, thickness);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 color = vec3(0.0);\n    \n    for (int i = 0; i < 20; ++i) {\n        float r = 0.5 - sin(iTime + float(i) * 0.8 * PI) * 0.1;\n        float angle = iTime * 0.2 + float(i+1) * 0.1 * PI;\n\n        vec2 dir = vec2(cos(angle), sin(angle)) * r;\n\n        vec2 A = -dir * 0.5;\n        vec2 B = -dir * 0.3;\n\n        float t = iTime * 0.5 + float(i) * 0.1 * TAU;\n        vec3 rgb = vec3(\n        \tsin(t\t\t  ) * 0.5 + 0.5,\n            sin(t + PI/2.0) * 0.5 + 0.5,\n            sin(t + PI\t  ) * 0.5 + 0.5\n        );\n\n        color += line(A, B, uv, 0.001) * rgb;        \n    }\n    \n    // Thanks Spiney!\n    color = color * 0.4 + sqrt(color*color / (color*color + 1.0)) * 0.6;\n\n    fragColor = vec4(vec3(color), 1.0);\n}","name":"Image","description":"","type":"image"}]}