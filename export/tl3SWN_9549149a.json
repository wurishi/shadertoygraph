{"ver":"0.1","info":{"id":"tl3SWN","date":"1580937677","viewed":351,"name":"Fractal Paint","username":"Orm","description":"Paint a bit then press 2 to start painting fractals.","likes":29,"published":1,"flags":48,"usePreview":0,"tags":["fractal","paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nControls:\n1: color paint\n2: fractal paint\n3: toggle high dynamic range of color brush\n4: toggle repeating texture\nQ, A: brush size\nW, S: red level\nE, D: green level\nR, F: blue level\nT, G: distance between each draw in the fractal brush\nY, H: opacity of fractal brush\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(texture(iChannel0, fragCoord/iResolution.xy));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//https://www.shadertoy.com/view/WdsSRn\nvec2 circleFold(vec2 uv, float r) {\n    float r2 = dot(uv,uv);\n    if(r2 < r) return uv * (r / r2);\n    return uv;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 brush_color\t\t= texelFetch(iChannel1,ivec2(0,0),0).rgb;\n    float brush_size_c\t\t= texelFetch(iChannel1,ivec2(1,0),0).r;\n    float brush_size_f\t\t= texelFetch(iChannel1,ivec2(7,0),0).r;\n    float brush_type\t\t= texelFetch(iChannel1,ivec2(2,0),0).r;\n    vec2 brush_position\t\t= texelFetch(iChannel1,ivec2(4,0),0).rg;\n    float brush_step\t\t= texelFetch(iChannel1,ivec2(5,0),0).r;\n    float brush_opacity\t\t= texelFetch(iChannel1,ivec2(6,0),0).r;\n    \n    bool repeat_texture\t= texelFetch(iChannel2,ivec2(52,2),0).x >0.;\n    \n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 uvt = vec2(fragCoord/iResolution.xy);\n\tvec2 m = (iMouse.xy-.5*iResolution.xy)/iResolution.y;\n\n    vec2 uvd = uv;\n    uvd-=m;\n    uvd = circleFold(uvd, brush_size_f);  \n   \n    uvd+=m;\n    uvd*=iResolution.y/iResolution.xy;\n    uvd+=0.5;\n    \n\tvec3 asd = vec3(texture(iChannel0, uvt));\n    \n    if(iFrame == 0)\n    {\n    asd = vec3(.9);\n    }\n\n\n    if(iMouse.z > 0.5 && brush_type >= 0.5)\n    {\n        \n        asd = mix(asd, brush_color,smoothstep(brush_size_c+1.,brush_size_c,length(fragCoord - iMouse.xy)));\n\n    }\n\n    float dist = distance(m, brush_position);\n    if(iMouse.z > 0.5 && brush_type < 0.5 && dist >= brush_step)\n    {\n        if(repeat_texture == true) uvd = fract(uvd);\n        asd = vec3(mix(texture(iChannel0,uvt),texture(iChannel0,uvd),brush_opacity));\n    }\n    vec3 asdf = vec3(uvd.rg,0.);\n    fragColor = vec4(vec3(asd),1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//https://www.shadertoy.com/view/3dGXzm\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t   \n\tivec2 p = ivec2(fragCoord);\n    \n    vec3 brush_color\t= texelFetch(iChannel0,ivec2(0,0),0).rgb;\n    float brush_size_c \t= texelFetch(iChannel0,ivec2(1,0),0).r;\n    float brush_size_f \t= texelFetch(iChannel0,ivec2(7,0),0).r;\n    float brush_type\t= texelFetch(iChannel0,ivec2(2,0),0).r;\n    vec2 brush_position\t= texelFetch(iChannel0,ivec2(4,0),0).rg;\n    float brush_step\t= texelFetch(iChannel0,ivec2(5,0),0).r;\n    float brush_opacity\t= texelFetch(iChannel0,ivec2(6,0),0).r;\n    \n    if(iFrame==0){\n        brush_color  = vec3(0.0);\n        brush_size_c  = 20.;\n        brush_size_f  = .1;\n        brush_type = 1.;\n        brush_step = 0.1;\n        brush_position = vec2(-1000.);\n        brush_opacity = 1.;\n    }\n    \n    bool r_up\t\t\t= texelFetch(iChannel1,ivec2(87,0),0).x >0.;\n    bool r_down\t\t\t= texelFetch(iChannel1,ivec2(83,0),0).x >0.;\n    bool g_up\t\t\t= texelFetch(iChannel1,ivec2(69,0),0).x >0.;\n    bool g_down\t\t\t= texelFetch(iChannel1,ivec2(68,0),0).x >0.;\n    bool b_up\t\t\t= texelFetch(iChannel1,ivec2(82,0),0).x >0.;\n    bool b_down\t\t\t= texelFetch(iChannel1,ivec2(70,0),0).x >0.;\n    bool bigger\t\t\t= texelFetch(iChannel1,ivec2(81,0),0).x >0.;\n    bool smaller\t\t= texelFetch(iChannel1,ivec2(65,0),0).x >0.;\n    bool paint\t\t\t= texelFetch(iChannel1,ivec2(49,0),0).x >0.;\n    bool distort\t\t= texelFetch(iChannel1,ivec2(50,0),0).x >0.;\n    bool step_up\t\t= texelFetch(iChannel1,ivec2(84,0),0).x >0.;\n    bool step_down\t\t= texelFetch(iChannel1,ivec2(71,0),0).x >0.;\n    bool opacity_up\t\t= texelFetch(iChannel1,ivec2(89,0),0).x >0.;\n    bool opacity_down\t= texelFetch(iChannel1,ivec2(72,0),0).x >0.;\n\tbool clamp_colors\t= texelFetch(iChannel1,ivec2(51,2),0).x >0.;\n\n    \n    \n    float step_size = 0.5*iTimeDelta;\n    \n    \n    brush_type += (float(paint) - float(distort));\n    if(brush_type > 0.5 ){\n    brush_size_c += (float(bigger) - float(smaller))*(step_size*brush_size_c*3.);\n    }else{\n    brush_size_f += (float(bigger) - float(smaller))*(step_size*brush_size_f);\n    }\n    \n    brush_step += (float(step_up) - float(step_down))*(step_size*.3);\n    brush_opacity += (float(opacity_up) - float(opacity_down))*(step_size);\n    \n    if(clamp_colors == true)\n    {\n    brush_color.r += (float(r_up) - float(r_down))*step_size*10.;\n    brush_color.g += (float(g_up) - float(g_down))*step_size*10.;\n    brush_color.b += (float(b_up) - float(b_down))*step_size*10.;\n    brush_color = clamp(brush_color,-10.,100.);\n    }\n    else\n    {\n    brush_color.r += (float(r_up) - float(r_down))*step_size*2.;\n    brush_color.g += (float(g_up) - float(g_down))*step_size*2.;\n    brush_color.b += (float(b_up) - float(b_down))*step_size*2.;\n    brush_color = clamp(brush_color,0.,1.);\n        \n    }\n    \n    brush_size_c = clamp(brush_size_c,1.0,100.);\n    brush_size_f = clamp(brush_size_f,.005,2.);\n    brush_type = clamp(brush_type,0.,1.);\n    brush_step = clamp(brush_step,0.,0.4);\n    brush_opacity = clamp(brush_opacity,0.,1.);\n    \n    \n        \n    \n    \n    vec2 m = (iMouse.xy-.5*iResolution.xy)/iResolution.y;\n    float dist = distance(m, brush_position);\n    \n    if(iMouse.z > 0.0 && brush_type < 0.5 && dist > brush_step)  \n        brush_position = m;\n    if(iMouse.z <= 0.0)\n        brush_position = vec2(-1000.);\n    \n    \n    if(p.x==0){\n    \tfragColor.rgb = brush_color;\n    }\n\telse if(p.x==1){\n    \tfragColor.r = brush_size_c;\n    }\n    \telse if(p.x==7){\n    \tfragColor.r = brush_size_f;\n    }\n   \telse if(p.x==2){\n    \tfragColor.r = brush_type;\n    }\n    else if(p.x==4){\n    \tfragColor.rg = brush_position;\n    }\n    else if(p.x==5){\n    \tfragColor.r = brush_step;\n    }\n    else if(p.x==6){\n    \tfragColor.r = brush_opacity;\n    }\n}","name":"Buffer B","description":"","type":"buffer"}]}