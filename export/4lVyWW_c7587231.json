{"ver":"0.1","info":{"id":"4lVyWW","date":"1536262094","viewed":700,"name":"Magmatic Water","username":"834144373","description":"hum...also it's simple and fast run.(here iterration is just one step)\nAnother version is base on Buffer Self Iteration.","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["math","magmaticwater"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t vec2(iTime*0.04,0.)\nvoid mainImage( out vec4 C, in vec2 U ){\n    U /= iResolution.xy;\n    /*Get â–½xV or Rot(V)*/\n    vec3 field = texture(iChannel0,U+t).rgb;\n\tfloat lum = texture(iChannel0,U-t*.5+(field.rg-field.gb)/4.).a;\n\tC = vec4(lum+vec3(230,127,25)/255.,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 C, in vec2 U )\n{\n    C = texture(iChannel0,U/iResolution.xy).rgbr + vec4(230,127,25,0.)/255.;\n}","name":"Buffer A","description":"","type":"buffer"}]}