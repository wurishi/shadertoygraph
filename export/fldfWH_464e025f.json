{"ver":"0.1","info":{"id":"fldfWH","date":"1663035939","viewed":793,"name":"Bokeh [194 Chars]","username":"Xor","description":"Bokeh, made even smaller.","likes":45,"published":1,"flags":0,"usePreview":1,"tags":["dof","bokeh","tweet","golf","200chars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Bokeh\" by @XorDev\n    \n   This is my new, smallest bokeh shader.\n   \n   \n   Cubemap version: shadertoy.com/view/fljyWd\n   \n   <200 chars playlist: shadertoy.com/playlist/N3lGDN\n*/\n\nvoid mainImage( out vec4 O, vec2 I)\n{\n    //Resolution for scaling\n    vec2 r = iResolution.xy,\n    //Iteration constant (starting at 0)\n    //11 is approximately 3.5 * pi, perfect for computing sine and cosine together.\n    i = vec2(0,11);\n    \n    //Clear the output color\n    //Loop 200 times\n    for(O-=O; i.x<2e2; )\n        \n        //Bokeh sample (fifth-power)\n        O += pow(texture(iChannel0,(I+(I+I-r-r*sin(iTime)).y*sin(i)/6e2*sqrt(i++).x)/r), 5.+O-O);\n    \n    //Compute average with fifth-root.\n    //This a gamma transform that makes brighter samples standout.\n    O = pow(O/2e2,.2+O-O);\n}","name":"Image","description":"","type":"image"}]}