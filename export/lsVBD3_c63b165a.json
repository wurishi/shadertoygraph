{"ver":"0.1","info":{"id":"lsVBD3","date":"1530871561","viewed":147,"name":"Nice Shades","username":"MadcoreTom","description":"Test maintaining bright colours on a sphere, with a clear edge between lit and shaded sides","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["sphere","shading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Based on shader by zavie https://www.shadertoy.com/view/XsfXDr\n\tfloat ratio = iResolution.x / iResolution.y;\n\tvec2 uv = vec2(ratio, 1.) * (2. * fragCoord.xy / iResolution.xy - 1.);\n\t\n    vec3 n = vec3(uv, sqrt(1. - clamp(dot(uv, uv), 0., 1.)));\n\n    vec3 norm =n;// 0.5 + 0.5 * n;\n\n    \n    // the rest is my code\n    \n    // pick A colour\n    vec4 col = vec4(0.9,0.2,0.5,1.0);\n    if(iMouse.x > 0.5 * iResolution.x){\n        col = vec4(0.5,0.9,0.2,1.0);\n    } else if(iMouse.x > 0.4 * iResolution.x){\n        col = vec4(0.2,0.5,0.9,1.0);\n    } else if(iMouse.x > 0.3 * iResolution.x){\n        col = vec4(0.9,0.5,0.2,1.0);\n    } else if(iMouse.x > 0.2 * iResolution.x){\n        col = vec4(0.7,0.6,0.5,1.0);\n    }\n    \n    // light it\n    vec3 light = vec3(sin(iTime),0.6,1.0);\n    if(norm.b != 0.0) {\n        float d = dot(light,norm);\n        col *= pow((d*0.5+0.5),0.5);\n        \n    \tif(d< 0.25 ){\n            // in shade, make a bit bluer, and make darker\n            col = (col*1.9 - vec4(0.15,0.15,0.0,0.0)) / 2.0;\n    \t}\n    } else {\n        // Background is dark grey\n        col = vec4(0.1,0.1,0.1,1.0);\n    }\n    \n    \n\tfragColor = col;\n}","name":"Image","description":"","type":"image"}]}