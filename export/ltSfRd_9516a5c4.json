{"ver":"0.1","info":{"id":"ltSfRd","date":"1516918368","viewed":340,"name":"Pong Game Global Game Jam 2018","username":"barakooda","description":"Pong Game Global Game Jam 2018","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["pong"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//26/01/2018\n//Made by Barakooda in global game jam 2018.\n// Thanks to the shadertoy community for examples and hints. \n\n// uv , position , two points define rectangle, aspect\n\nfloat circle (vec2 uv,vec2 position,float radius,float aspect)\n{\n    \n    uv.x *= aspect;\n    position.x *= aspect;\n    \n    return 1.0-step(radius, distance (position , uv));\n}\n\nfloat Rectangle(vec2 uv,vec2 position,vec4 TwoPoints,float aspect)\n{\n  \n   float TopRightX = step ( -TwoPoints.x,-uv.x );\n   float TopRightY = step ( -(TwoPoints.y + position.y),-uv.y );\n   \n   float ButtomLeftX = step ( TwoPoints.z,uv.x );\n   float ButtomLeftY = step ( -(TwoPoints.w - position.y),uv.y );\n    \n   return  ButtomLeftX*ButtomLeftY*TopRightX*TopRightY;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n   //normalize\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 tex = texture(iChannel0, uv);\n    \n   //uv aspect\n    float aspect = iResolution.x/iResolution.y;\n    \n   //uv from 0-1 to -1.0 - 1.0\n    uv = uv * 2.0 - 1.0;\n   \n    \n   // Mouse position normalize\n   vec2 MousePosition = iMouse.xy / iResolution.xy ;\n  \n   // position from 0-1 to -1.0 - 1.0\n   MousePosition = MousePosition * 2.0 - 1.0; \n   MousePosition = clamp (MousePosition,-0.7,0.7);\n        \n   // background frame\n   vec4 TwoPoints = vec4(0.95,0.95,-.95,0.95);\n   vec4 TwoPointsSmall = vec4(0.93,0.92,-.93,0.92);\n\n   // we substract big recnatngle from smaller one.   \n   float background = Rectangle(uv,vec2(0.0,0.0),TwoPoints,aspect) - Rectangle(uv,vec2(0.0,0.0),TwoPointsSmall,aspect)  ;\n   \n   //Seperation block\n   TwoPoints = vec4(0.015,0.5,-0.015,0.5); \n   float SeperationBlock =  Rectangle(vec2(uv.x,sin(uv.y*15.)),vec2(0.),TwoPoints,aspect);\n    \n   // player block \n    TwoPoints = vec4(0.75,0.2,0.7,0.2); \n    float PlayerBlock =  Rectangle(uv,MousePosition,TwoPoints,aspect);\n   \n   //circle\n   \tvec2 CirclePosition = tex.xy;\n    //vec2 dir = tex.xy;\n    float radius = 0.1;\n    float Pong = circle(uv,CirclePosition,radius,aspect);\n    \n    \n    \n    \n    // Ai block \n    float AiPositionY = clamp (CirclePosition.y,-0.7,0.7); \n    TwoPoints = vec4(-0.70,0.2,-0.75,0.2); \n    float AiBlock =  Rectangle(uv,vec2(0.,AiPositionY),TwoPoints,aspect);\n    \n    //final\n    vec3 col = vec3(Pong) + vec3(background) + vec3(PlayerBlock) + vec3(AiBlock) + vec3(SeperationBlock/2.) ;\n    \n    //circle\n    \n    /*\n     if(uv.x < -.5 && uv.y < -.5) {\n     \n        col = vec3(CirclePosition,.0);\n     }*/\n   \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    float aspect = iResolution.x/iResolution.y;\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n   \n  \n    vec4 tex = texture(iChannel0,uv);\n   \n    \n   // Mouse position normalize\n   vec2 MousePosition = iMouse.xy / iResolution.xy ;\n  \n   // position from 0-1 to -1.0 - 1.0\n   MousePosition = MousePosition * 2.0 - 1.0; \n   MousePosition = clamp (MousePosition,-0.7,0.7);\n    \n    // vec2 pos vec2 vel\n    if ( tex.xy == vec2(0.) ) {tex = vec4(.0,.0,1.,-1.7);}\n    \n    fragColor = vec4(0.0,0.0,1.0,1.0);\n    \n    \n    float speed = 1.0;\n    \n    vec2 pos = tex.xy;\n    \n    vec2 dir = normalize (tex.zw);\n    \n    vec4 TwoPoints = vec4(0.75,0.2,0.7,0.2);\n    \n    // if reach player block\n     if (pos.y >= MousePosition.y - 0.2 && pos.y <= MousePosition.y + 0.2 && pos.x >= 0.65)\n    \t{\n         \tdir.x *= -1.0;\n          \tpos.xy += iTimeDelta * speed * dir.xy;\n        }\n    \n    //check if reach top or buttom border\n    if (pos.y >= 0.8 || pos.y <= -0.8)\n    \t{\n         \tdir.y *= -1.0;\n          \tpos.xy += iTimeDelta * speed * dir.xy;\n           \n    \n        }\n    else if (pos.x >= 0.85 || pos.x <= -0.85 || pos.x <= -0.65 )\n    \t{\n         \tdir.x *= -1.0;\n          \tpos.xy += iTimeDelta * speed * dir.xy;\n           \n    \n        }\n    \n    else\n  \t\t  {\n              \n            pos.xy += iTimeDelta * speed * dir.xy ;  \n              \n          }\n    \n   fragColor = vec4(pos,dir);\n    \n}","name":"Buf A","description":"","type":"buffer"}]}