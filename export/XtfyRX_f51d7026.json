{"ver":"0.1","info":{"id":"XtfyRX","date":"1505641587","viewed":188,"name":"Op Art","username":"g4b0r","description":"I used to draw this in my elementary school math class.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","lines","copy","opart","lineart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Gabor Nagy (gabor.nagy@me.com)\n// September 20, 2017\n//\n// Some artwork I use to draw on a math graph paper.\n\nvec3 paperColor = vec3(.95,.95,.93);\nvec3 gridColor  = vec3(.5,.8,1.);\nvec3 penColor\t= vec3(.0,.2,1.);\n\n// Borrowed rand from one of iq's shaders.\nfloat rand(vec2 uv){\n    return fract(sin(dot(uv ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat plot(float t, float d) {\n\treturn smoothstep(t / iResolution.y, 0.0, abs(d));\n}\n\nfloat line(vec2 uv, vec2 a, vec2 b) {\n    vec2 ab = b - a; \n    vec2 auv = uv - a;\n    return length(auv - ab * clamp(dot(ab, auv) / dot(ab, ab), 0., 1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    uv = abs(uv * 2.3);\n    vec2 uv_fract = fract(uv);\n   \n    vec3 color = paperColor;\n    color += (rand(uv)-.5)*.1;\n    color = clamp(color,0.,1.);\n    \n    float f=0.;\n    for (int i=0; i<=10; i+=1) {\n        color = mix(color, gridColor, plot(2., line(uv_fract, vec2(f, 0.), vec2(f, 1.))));\n\t\tcolor = mix(color, gridColor, plot(2., line(uv_fract, vec2(0., f), vec2(1., f))));\n        f += .1;\n    }\n    \n    f = 0.;\n    for (int i=0; i<=10; i+=1) {\n        color = mix(color, penColor, plot(3., line(uv, vec2(f, 0.), vec2(0., 1.-f))));\n        color = mix(color, penColor, plot(3., line(uv, vec2(f, 1.), vec2(1., 1.-f))));        \n        f += .1;\n    }\n    \n    fragColor = vec4(color,1.);\n}\n\n","name":"Image","description":"","type":"image"}]}