{"ver":"0.1","info":{"id":"DsdGR7","date":"1677168076","viewed":175,"name":"gt04","username":"ChunderFPV","description":"A couple more grid transforms with hexagons.","likes":17,"published":1,"flags":32,"usePreview":0,"tags":["grid","hexagon","hex","tile","transform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 C, in vec2 U )\n{\n    vec3 c = vec3(0);\n    float j = .0625; // increment\n    for (float i = j; i < 1.; i+=j) // clone & color bufferA\n        c = max(c, texture(iChannel0, mix(U/R, vec2(0.5), .25*i), .5).rgb*i*H(i));\n    C = vec4(c, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 C, in vec2 U )\n{\n    vec2 u = (2.*U-R)/R.y*4.*(1.-iMouse.y/R.y/1.1),\n         u1, u2;\n    \n    u1 = vec2(0, (length(u)*2.-4.)*u.y*2.1); // radial warp\n    u2 = u*sqrt(abs(T*19.-dot(u, u)*2.)*2.); // inv sphere\n    u = u1*(1.-T)+u2*T; // transform\n    vec3 c = vec3(honeycomb(u)*(1.1-T*.2));\n    \n    float r = length(u);\n    \n    // grid\n    u.y *= .866;\n    vec2 g = max(vec2(0), 1.-abs(fract(u+.5)-.5)/fwidth(u)/1.5);\n    c += T*c*max(g.x, g.y)*.25 + min(g.x, g.y)*.5;\n    \n    c *= min(1., 1./r*5.)*.7+.3; // darken\n    \n    C = vec4(c*c*c, 1);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define H(a) (cos(radians(vec3(350, 50, 120))-((a)*6.2832))*.5+.5) // hue pallete\n#define T smoothstep(0., 1., sin(iTime*6.3/15.)*.5+.51)\n\nfloat honeycomb(vec2 u)\n{\n    vec2 o = vec2(1, .866); // offset\n    u.x += round(u.y/o.y)*.5; // shift every 2nd row\n    u = abs(u-round(u/o)*o)*o.y; // tile coords\n    u = vec2(u.x/o.y, u.y+u.x*.577); // hex coords\n    float f = max(u.x, u.y); // hex to float\n    return min(f, 1.-f) * 2.;\n}\n","name":"Common","description":"","type":"common"}]}