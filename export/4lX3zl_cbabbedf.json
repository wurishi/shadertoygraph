{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"struct Hole{\n\tvec2 Center;\n    float Rad;\n};\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    Hole MyHole;\n    MyHole.Center = vec2(iResolution.x /2.0 + sin(iTime) * iResolution.x/2.0 , iResolution.y /2.0);\n    MyHole.Rad    = 100.0;\n    \n    //Hole MyHole2;\n    //MyHole2.Center = vec2(iResolution.x /2.0, iResolution.y /2.0);\n    //MyHole2.Rad    = 100.0;\n    \n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n \tuv.y = -uv.y;\n    \n    vec4 Vector = vec4(MyHole.Center,0.0, 1.0) - vec4(fragCoord,0,0);\n    \n    float Distance = length(Vector);\n    \n    \n    if(Distance < MyHole.Rad)\n    {\n        float DistToRad = MyHole.Rad - Distance;\n        \n        Vector = normalize(Vector);\n        Vector = Vector;\n        \n        vec2 CoordToUse = fragCoord.xy + Vector.xy * DistToRad;\n        \n        \n        uv = CoordToUse/iResolution.xy;\n        uv.y = -uv.y;\n        \n    }\n    \n    \n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lX3zl","date":"1424142121","viewed":484,"name":"Vortex Effect","username":"blastxu","description":"Trying to create a black hole kind of effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","light"],"hasliked":0,"parentid":"","parentname":""}}