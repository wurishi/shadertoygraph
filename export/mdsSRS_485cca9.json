{"ver":"0.1","info":{"id":"mdsSRS","date":"1669138776","viewed":185,"name":"Infinite maze","username":"jarble","description":"An infinite procedural maze.","likes":7,"published":3,"flags":8,"usePreview":0,"tags":["maze","dungeon","labyrinth","roguelike"],"hasliked":0,"parentid":"DdXXzB","parentname":"Infinite roguelike dungeon 5"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float threshold = .5;\nint iters = 4;\n\n#define noise2D(p) float(((p).x * 68657387u ^ (p).y * 361524851u + (p).x) % 890129u) / 890128.\n\nbool labyrinth(uvec3 U,float n2){\n    //to do: make this work in 3 dimensions\n    //this would need a 3D noise function\n    uint c1 = 1u; //change this constant to get more interesting patterns\n    bvec3 b = bvec3(U & 1u+(U%c1));\n    return (b.x && b.y || b.x != b.y && n2 < threshold);\n}\n\nbool labyrinth(uvec2 U,float n2){\n    return labyrinth(uvec3(U,0.),n2);\n}\n\nvec4 maze(uvec2 I){\n    vec4 O = vec4(1);\n    bool b = false;\n    float threshold = .5;\n    for(int i = 0; i++ < iters;I =\n    //Multiply and divide by prime numbers to get interesting patterns\n    I*2u/3u\n    //I*13u/17u\n    ){\n        //I += uint(i);\n        float n = noise2D(I);\n        b =\n            !b || labyrinth(I,n)\n            //!b || labyrinth(I,n) || labyrinth(I/2u,n)\n            //!b || labyrinth(I,n) || n > (8.*abs(.5-fract(iTime/16.))-.5);\n        ;\n        O -= float(n > .125)/float(iters)/4.;\n        \n        //some random-looking distortion\n        //{I = I+I.yx/(31u)-I.yx/(29u)-I.yx/(23u);}\n        //{I = I-I.yx/13u/11u/7u/5u+I.yx/11u/7u/5u-I.yx/7u/5u;}\n    }\n    if (b) O = 1.-O;\n    return O;\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n    uvec2 I = uvec2( U/8.+ iTime*8.);\n    O = maze(I);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n#define fmod(x,y) floor(max(mod(floor(-(x))/2.,y),mod(floor(x),y)))\n\nvec2 mainSound(int samp, float time){\n  \n  time /= 8.;\n  float s1 =\n      5.,\n\n  s2 = 7.,\n\n  m1 =\n      fmod(time/s1,s2)\n  ,\n  t=\n      time*s2\n  ,\n  m4 =\n      fmod(t*s1,s2)\n  ,\n  m3 =\n      fmod((t+m4)*s1,s2);\n\n  float m2 =\n      1. + fmod(t,s1);\n  ;\n  \n  float a=\n      32.*pow((1.-sqrt(fract(t*s1/4.)/(1.+m1)))/4.,2.)\n      //pow((1.-log(fract(t*s1/4.)/(1.+m1))),2.)\n  ;\n  \n  float nb = time*pow(2.,(m3+m2)/5.+9.5);\n\n  return\n      log(.1+abs(.5-vec2(fract(nb*.998),fract(nb)))*a)\n  ;\n\n}","name":"Sound","description":"","type":"sound"}]}