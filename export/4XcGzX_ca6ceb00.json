{"ver":"0.1","info":{"id":"4XcGzX","date":"1716800828","viewed":224,"name":"hexa kaleidoscope","username":"FabriceNeyret2","description":"click to show tiles.","likes":24,"published":3,"flags":0,"usePreview":1,"tags":["kaleidoscope","tiling","tiling","hexagonal","short","triangular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy, V,\n         U = ( u+u - R ) / R.y;       // normalized coordinates\n         \n    U.y /= .866;     \n    U.x += .5*floor(U.y);             // hexagonal tiling\n    U.y = fract(U.y);\n    U.x = fract(U.x -.5*U.y);\n    bool b = U.x > 1.-U.y;\n    if (b) U = 1.-U;\n    U.x += .5*U.y;\n    U.y *= .866;\n    \n    U -= vec2(.5,.29);                // centering local coordinates\n    if (b) U.x = -U.x;                // for contra-rotative tiles\n\n    U = length(U) * cos( mod( atan(U.y,U.x)+iTime -1.57, 2.1 ) +1.57 + vec2(0,11) ); // 3-rot symmetry\n    U += vec2(.5,-.29)/2.;\n\n    O = texture(iChannel0, U + .3*iTime );\n\n    //O.rg += 1e-4/(U*U);            // show coordinate system\n    O += 3.* vec4(U,U.x+U.y,0)       // show mapping\n           * sin(iTime); \n    if ( b && iMouse.z>0. ) O.b = 1.;\n         \n    \n}","name":"Image","description":"","type":"image"}]}