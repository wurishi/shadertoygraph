{"ver":"0.1","info":{"id":"43yXDG","date":"1720409228","viewed":29,"name":"hw4 ","username":"cancanneed","description":"......","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n\n// ref: https://www.shadertoy.com/view/WsSGWG\nmat2 rot(float x)\n{\n    return mat2(cos(x), sin(x), -sin(x), cos(x));\n}\n\nvec2 foldRotate(in vec2 p, in float s) {\n    float a = PI / s - atan(p.x, p.y);\n    float n = PI * 2. / s;\n    a = floor(a / n) * n;\n    p *= rot(a);\n    return p;\n}\n\nfloat sdRect( vec2 p, vec2 b )\n{\n  vec2 d = abs(p) - b;\n  return min(max(d.x, d.y),0.0) + length(max(d,0.0));\n}\n\n// TheGrid by dila\n// https://www.shadertoy.com/view/llcXWr\nfloat tex(vec2 p, float z)\n{\n    p = foldRotate(p, 8.0);\n    vec2 q = (fract(p / 10.0) - 0.5) * 10.0;\n    for (int i = 0; i < 3; ++i) {\n        for(int j = 0; j < 2; j++) {\n        \tq = abs(q) - .25;\n        \tq *= rot(PI * .25);\n        }\n        q = abs(q) - vec2(1.0, 1.5);\n    }\n\tfloat d = sdRect(q, vec2(1., 1.));\n    float f = 1.0 / (1.0 + abs(d));\n    return smoothstep(.9, 1., f);\n}\n\nfloat sm(float start, float end, float t, float smo)\n{\n    return smoothstep(start, start + smo, t) - smoothstep(end - smo, end, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy/2.)/iResolution.y;\n    \n    #define INTERVAL 3.0\n    #define INTENSITY vec3((6.0 * INTERVAL - t) / (6.0 * INTERVAL))\n    \n    uv = vec2(length(uv)*(8.+2.*sin(iTime*.1)), sin(atan(uv.x,uv.y)*floor(2.0 + mod(iTime*0.2,6.0)) + iTime*0.01));\n    \n    vec3 col = vec3(0);\n    \n    uv+=sin(uv.yx*(sin(iTime*0.2))+iTime*0.6*vec2(1.0,0.9));\n    col += 2.-smoothstep(0.1,.2, length(uv-vec2(uv.x,0)));\n    col *= 0.5 + 0.5*cos(6.28*vec3(0,0.33,0.66)+uv.y+iTime + col*2. );\n    \n    for(int i = 0; i < 6; i++) {\n        float t;\n        float ii = float(6 - i);\n        t = ii * INTERVAL - mod(iTime - INTERVAL * 0.75, INTERVAL);\n        float r = length(uv * 2.0 * max(0.0, t));\n        float rr = sm(-24.0, -0.0, (r - mod(iTime * 30.0, 90.0)), 10.0);\n        col = mix(col, mix(INTENSITY * vec3(1.), INTENSITY * vec3(0.7, 0.5, 1.0) * 3.0, rr),tex(uv * 2.0 * max(0.0, t), 0.27 + (2.0 * rr)));\n        }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}