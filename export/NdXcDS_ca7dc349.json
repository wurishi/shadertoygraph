{"ver":"0.1","info":{"id":"NdXcDS","date":"1642594402","viewed":153,"name":"DvsE","username":"namanonamako","description":"Cubes","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nprecision highp float;\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nvec3 lightDir = vec3(.4, .5, -.5);\n\nfloat smoothMin(float d1, float d2, float k){\n\tfloat h = exp(-d1 * k) + exp(-d2 * k);\n\treturn -log(h) / k;\n}\n\nfloat sdBox(vec3 p, vec3 b){\n\tvec3 d = abs(p) - b;\n\treturn length(max(d, 0.)) + min(max(max(d.z, d.x), d.y), 0.);\n}\n\t\n\nfloat sdSphere(vec3 p, float r){\n\treturn length(p) - r;\n}\n\nmat2 rot(float a){\n\tfloat s = sin(a), c = cos(a);\n\treturn mat2(c, s, -s, c);\n}\n\nfloat map(vec3 p){\n\tvec3 q = p;\n\tq += vec3(0., sin(iTime), 0.) * 1.8;\n\tq.xy *= rot(iTime);\n\tq.xz *= rot(iTime);\n\tfloat d1 = sdBox(q , vec3(.7)) - .07;\n\tvec3 s = p;\n\ts.xz *= rot(iTime * .9 + .3);\n\ts.xy *= rot(iTime * .3);\t\n\tfor(int i = 0; i < 2; i++){\n\t\ts = abs(s) - .5;\n\t\ts.xz *= rot(iTime + .6);\n\t\ts.xy *= rot(iTime * 1.6 - .8);\t\t\n\t}\n\tfloat d2 = sdBox(s, vec3(.3)) - .03;\n\treturn smoothMin(d1, d2, 8.);\n}\n\nvec3 genNormal(vec3 p){\n\tvec2 d = vec2(0.001, 0.);\n\treturn normalize(vec3(\n\t\tmap(p + d.xyy) - map(p - d.xyy),\n\t\tmap(p + d.yxy) - map(p - d.yxy),\n\t\tmap(p + d.yyx) - map(p - d.yyx)\n\t\t));\n}\n\nvec3 rimCol = vec3(0.4, 0.7, 0.8);\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord  ) {\n\n\tvec2 p = ( fragCoord.xy * 2. - iResolution.xy ) / min(iResolution.x, iResolution.y);\n\tvec2 op = p;\n\t\n\tp.x = mod(p.x, 2.) - 1.;\n\t\n\tvec3 color = vec3(0.0);\n\t//color.xy = p;\n\n\tvec3 cPos = vec3(0., 0., -4.);\n\tvec3 rd = normalize(vec3(p, 1.));\n\t\n\tfloat d, dd;\n\t\n\tfor(int i = 0; i < 100; i++){\n\t\tdd = map(cPos + d * rd);\n\t\tif(dd < 0.001){\n\t\t\tbreak;\n\t\t}\n\t\td += dd;\n\t}\n\t\n\tvec3 ip = cPos + d * rd;\n\t\n\tif(dd < 0.001){\n\t\tvec3 normal = genNormal(ip);\n\t\t\n\t\tfloat diff = clamp(dot(lightDir, normal), 0.1, 1.);\n\t\tfloat spec = pow(clamp(dot(reflect(lightDir, normal), rd), 0., 1.), 3.);\n\t\tfloat rim = clamp(1. - dot(abs(normal), rd), 0., 1.);\n\t\t\n\t\tfloat speed = iTime * .7;\n\t\tfloat typeSelect = step(fract(speed * .25), 0.5);\n\t\tfloat mode1 = step(p.x, 0.);\n\t\t//mode1 = mix(mode1, 1. - mode1, step(fract(speed * 1.), 0.5));\n\t\tfloat mode2 = step(op.x, 0.);\n\t\tmode2 = mix(mode2, 1. - mode2, step(fract(speed * .25), 0.5));\n\t\tmode2 = mix(mode2, mode1, step(fract(speed * .125), 0.25));\n\t\t\n\t\tcolor += diff * mix(1., 0.2, mode2);\n\t\tcolor += spec;\n\t\tcolor += rim * rimCol * mix(1., 0.01, mode2);\n\t\t\n\t}\n\t\n\tfragColor = vec4(color, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}