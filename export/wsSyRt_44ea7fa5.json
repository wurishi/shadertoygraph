{"ver":"0.1","info":{"id":"wsSyRt","date":"1587138835","viewed":267,"name":"Plasma chessboard","username":"Bjorn","description":"My first Shader. <3","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["plasma","chessboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col;\n    float minSize = 50.;\n    float mergez =0.;\n\n    float popx = cos(uv.x*minSize*(0.5+0.5*cos(iTime))-0.5*cos(iTime)*minSize*0.5);\n    float popy = cos(uv.y*minSize*(0.5+0.5*cos(iTime))-0.5*cos(iTime)*minSize*0.5);\n\n    if(popx<mergez ^^ popy<mergez){\n        //col = vec3(0,0,0);\n        col = vec3(0.5,0.5 + 0.5*cos(uv.xy+iTime));\n    }\n    else{\n        //col = vec3(1,1,1);\n        col = vec3(0.5 + 0.5*cos(uv.xy+iTime),0.5);\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}