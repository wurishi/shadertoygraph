{"ver":"0.1","info":{"id":"3tsyWN","date":"1592114108","viewed":107,"name":"Im so bored","username":"JuliaPoo","description":"ehhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["colors","bored"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float n) { return fract(sin(n) * 1e4); }\n\nfloat noise(float x, float scale) {\n    x *= scale;\n\tfloat i = floor(x);\n\tfloat f = fract(x);\n\tfloat u = f * f * (3.0 - 2.0 * f);\n    float m = mix(hash(i), hash(i + 1.0), u);\n\treturn m;\n}\n\nmat2 rot(float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat brush(in vec2 uv)\n{\n    vec2 uv0 = uv;\n    uv *= rot(pow(sin(iTime), 3.) * length(uv) * 3. + iTime);\n    vec2 n = normalize(uv);\n    float c1 = acos(n.x) - .3;\n    float c0 = length(uv);\n    c0 += sin(c1*5.)*.2*c0 * sin(iTime);\n    float f = pow(noise(c0, 70.), 10.);\n    float c3 = acos(normalize(uv0).x) - .3;\n    f *= pow(.4, -c3*c3);\n    float col = smoothstep(0., 1., f);\n    col *= sqrt(1.-.8*length(uv));\n    \n    return pow(col, 4.) + .4*sqrt(col);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec3 col = vec3(.5, .8, .9);\n    vec3 brush = vec3(brush(uv), brush(uv*.9), brush(uv*1.1));\n    col += brush;\n    col = col*col*col*col*col;\n    fragColor = vec4(col, length(col));\n}","name":"Image","description":"","type":"image"}]}