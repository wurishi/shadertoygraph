{"ver":"0.1","info":{"id":"mtX3W7","date":"1671836995","viewed":187,"name":"Just waves","username":"CynicRus","description":"Just playing with shadertoy","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["waves","fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//based on https://glslsandbox.com/e#98250.0\nvec3 getWaves(vec2 p)\n{\n    const vec3 col = vec3(0.02,.3,.55);\n    const mat3 _m = mat3(-2.0,-1.0,2.0, 3.0,-2.0,1.0, 1.0,2.0,2.0);\n    vec4 d = vec4(iTime*.122);\n    d.xy = p;\n    d.xyw *=_m*.5;\n    float v1 = length(.5-fract(d.xyw));\n    d.xyw *=_m*.4;\n    float v2 = length(.5-fract(d.xyw));\n    d.xyw *=_m*.3;\n    float v3 = length(.5-fract(d.xyw));\n    float v = pow(min(min(v1,v2),v3), 5.)*15.;\n    return col+vec3(v,v,v);\n}\n\n\nmat3 rotX(float a) {\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat3(\n\t\t1, 0, 0,\n\t\t0, c, -s,\n\t\t0, s, c\n\t);\n}\nmat3 rotY(float a) {\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\treturn mat3(\n\t\tc, 0, -s,\n\t\t0, 1, 0,\n\t\ts, 0, c\n\t);\n}\n\nfloat random(vec2 pos) {\n\treturn fract(sin(dot(pos, vec2(1789.9898, 78.233))) * 43758.5453);\n}\n\nfloat hash( float n )\n{\n    return fract(sin(n)*758.5453)*2.;\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 pos) {\n\tvec2 i = floor(pos);\n\tvec2 f = fract(pos);\n\tfloat a = random(i + vec2(0.0, 0.0));\n\tfloat b = random(i + vec2(1.0, 0.0));\n\tfloat c = random(i + vec2(0.0, 1.0));\n\tfloat d = random(i + vec2(1.0, 1.0));\n\tvec2 u = f * f * (3.0 - 2.0 * f);\n\treturn mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\n\n\nfloat fbm(vec2 p)\n{\n    float f = 0.0;\n    f += 0.500000000000*noise( p); p = p*2.02+0.15;\n    f -= 0.25000*noise( p); p = p*2.03+0.15;\n    f += 0.1500*noise( p); p = p*2.01+0.15;\n    f += 0.06250*noise( p); p = p*2.04+0.15;\n    f -= 0.03125*noise( p); p = p*2.04+0.15;\n    return f/0.9678;\n}\n\nfloat waves2(vec2 p)\n{\n\tp-=fbm(vec2(p.x,p.y)*0.5)*0.7;\n\t\n\tfloat a =0.0;\n\ta-=fbm(p*3.0)*2.2-0.998;\n\tif (a<0.0) a=0.0;\n\ta=a*a;\n\treturn a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = (fragCoord.xy * 3.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\n\tfloat t = 0.0, d;\n\n\tfloat time2 = 4.0 * iTime / 13.0;\n\n\tvec2 q = vec2(0.0);\n\tq.x = fbm(p + 0.00 * time2);\n\tq.y = fbm(p + vec2(1.0));\n\tvec2 r = vec2(0.0);\n\tr.x = fbm(p + 1.0 * q + vec2(5.3, 9.2) + 0.23 * time2);\n\tr.y = fbm(p + 1.0 * q + vec2(2.3, 2.8) + 0.4466 * time2);\n\tfloat f = fbm(p + r);\n\tvec3 color = mix(\n\t\tvec3(0.101961, 1.0, 0.8),\n\t\tvec3(.466667, 1.0, 0.666667),\n\t\tclamp((f * f) * 9.0, 0.0, 22.0)\n\t);\n\n\tcolor = mix(\n\t\tcolor,\n\t\tvec3(1, 0.6, 0.6),\n\t\tclamp(length(q), 0.0, 1.0)\n\t);\n\n\n\tcolor = mix(\n\t\tcolor,\n\t\tvec3(0., 1, 3.5),\n\t\tclamp(length(r.x), 0.0, 1.0)\n\t);\n\n\n    color = getWaves(vec2(q+r)) * 12.0 ;\n    color = (f *f * f + 0.2 * f * f + 0.5 * f) * color * waves2(q);\n\n\tfragColor = vec4( color, 0.5);\n}\n","name":"Image","description":"","type":"image"}]}