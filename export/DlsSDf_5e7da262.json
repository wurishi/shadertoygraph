{"ver":"0.1","info":{"id":"DlsSDf","date":"1675437492","viewed":58,"name":"c nul","username":"ABK","description":"yay partiel 2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["partiel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 opRep( in vec3 p, in vec3 c)\n\n{\n    return mod(p+0.6*c,c)-0.5*c;\n}\n\n  vec3 palette (in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d)\n{\n    return a +b*cos (6.28318*(c*t+d) );\n}\n\n// will this bloody f*cking work??\nfloat sdSphere( vec3 p, float s)\n    {\n    return length (p)-s;\n    }\n    \n//it didn't\n\nfloat SDF(vec3 p)\n{\n    //sphere\n    p = opRep(p, vec3(10.));\n    \n    float sphere = sdSphere(p, 2.0);\n    //taille des balles\n    return length(p)-1.40;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n\t\n    float mask = smoothstep(0.5, 0.0, length(uv));\n    mask *= 1.0-(uv.y+0.5);\n    \n    float f = 10.0;\n    float newTime = iTime*5.0;\n    float d = (uv.y+0.5)+1.0; // denser higher\n    float final = 0.05*sin(dot(uv, vec2(sin(newTime*0.2),cos(newTime*0.15)))*10.5*d+newTime);\n    final += 0.15*sin(dot(uv, vec2(sin(newTime*0.2+1.42),cos(newTime*0.15+1.46)))*6.5*d*d+newTime);\n    final += 0.15*sin(dot(uv, vec2(sin(newTime*-0.2+2.42),cos(newTime*-0.2+2.42)))*20.5+newTime);\n    final += 0.09*sin(dot(uv, vec2(sin(newTime*0.26+2.42),cos(newTime*0.26+2.42)))*16.5+newTime);\n    \n    final = final*0.5+0.5;\n    final *= mask;\n    \n    //Mask wave\n    final += mask*0.7;\n    \n    //Orbe\n    final += smoothstep(0.5, 0.6, final);\n    \n    final = mask*10.0;\n \n    //emplacement cam\n    vec3 p = vec3 (iTime,0.,-2.);\n    vec3 dir = normalize(vec3(uv,5.));\n    \n    //nuance de gris de l'ombre/environement\n    float shad =  .80;\n\n    \n    // nette des pas derriere\n    for (int i=0;i<90;i++)\n    {\n        float d = SDF(p);\n        if (d<.01)\n        {\n            shad = float(i)/64.;//ombre des bordures?\n            break;\n        }\n        p += d*dir;\n    }\n    \n    // test mouvement couleur\n    \n   //couleur \n    vec3 col = palette( fract(p.y), vec3(1.,1.0,1.),vec3(1.,1.0,1.0),vec3(1.,1.0,1.0),vec3(1.,1.,1.0));\n    \n   // shadowing\n    col *= 0.8 + 0.7*sqrt(5.0*shad*(1.0-shad));\n    fragColor = vec4(col,.1);\n    float glow = mask*1.8;\n}\n\n//AAAAAAAAAAAAAHHHHHHHHHHHH c'est nul, je suis désolée... le risque que des larmes de sang coulent sur tes joues en lisant ces lignes\n// est grand. désolé\n","name":"Image","description":"","type":"image"}]}