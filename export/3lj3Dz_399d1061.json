{"ver":"0.1","info":{"id":"3lj3Dz","date":"1559161685","viewed":207,"name":"First step into glsl","username":"STUVash","description":"Learning and testing, having fun =)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["somenoobshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec4 color = vec4 (0.18, 0.4, 1, 1.)*3.0;\n    float d = fract (10.0*distance (uv, vec2 (0.5, 0.5))+iTime);\n    float e = fract ( pow ((length (atan (uv.x-0.5, uv.y-0.5))/3.), 0.5)*10.*1.);\n    vec2 ed = vec2 (e, d);\n    float noise = texture(iChannel0, ed/150.0).r;\n\n    fragColor = vec4 (1.0, 1.0, 1.0, 1.0)*noise*color;\n}","name":"Image","description":"","type":"image"}]}