{"ver":"0.1","info":{"id":"wsyXDW","date":"1574253272","viewed":145,"name":"color combinations","username":"sobriquet","description":"a grid of color combinations, somewhat inspired by Vasarely","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","vasarely"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Experimenting with a grid of color combinations. The sides of the grid\n// are assumed to be a power of 2.\n//\n// Similar to this GeoGebra demonstration:\n// https://www.geogebra.org/m/eu75wg5x\n\n\n#define r (sqrt(2.)/4.)\n//#define r sqrt(1./(2.*acos(-1.)))\n\nvec3 f2c(float f) // compute the RGB components of a hue value between 0 and 1 \n{\n    return vec3(smoothstep(1./3.,1./6.,f)+smoothstep(2./3.,5./6.,f),\n                smoothstep(0.,1./6.,f)-smoothstep(1./2.,2./3.,f),\n                smoothstep(1./3.,1./2.,f)-smoothstep(5./6.,1.,f));\n}\n\nfloat c2i(float c, float f1, float f2) // assign a unique number to every point in a square grid\n{\n    float s1=0.;\n    float s2=0.;\n\n    float p1 = 1.;\n    float p2 = 1.;\n    for(float i=0.;i<(log2(c));i++) {\n    \ts1 += p2*mod(floor(f1/p1),2.);\n        s2 += 2.*p2*mod(floor(f2/p1),2.);\n        p1 *= 2.;\n        p2 *= 4.;\n    }\n\treturn s1+s2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float c1 = 8.;\n    vec2 R = iResolution.xy;\n    float s = (max(R.x,R.y)-min(R.x,R.y))/2.;\n    float AA = 0.01*(c1/8.)*(2000./max(R.x,R.y));\n    vec2 uv1 = (fragCoord -.5* R.xy)/R.y;\n    vec2 uv = fract(c1*uv1);\n    float f1 = floor(c1*(fragCoord.x-s)/R.y);\n    float f2 = floor(c1*fragCoord.y/R.y);\n    float f3 = c2i(c1,f1,f2);\n    \n    float uvl = length(uv-.5);\n    vec3 col = f2c(fract((iTime+5.)*.05+f3/(c1*c1)+(.25*(mod(f3,3.)+1.))+abs(floor(mod(f3,4.)/2.)-mod(f3,2.))/2.))*smoothstep(uvl,uvl+AA,r)+\n        \t   f2c(fract((iTime+5.)*.05+f3/(c1*c1)+abs(floor(mod(f3,4.)/2.)-mod(f3,2.))*(.25*(mod(f3,3.)+1.))))*smoothstep(uvl+AA,uvl,r);\n    col *= vec3(step(abs(uv1.x),.5));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}