{"ver":"0.1","info":{"id":"3llGRn","date":"1555489148","viewed":191,"name":"SpinCoaster","username":"kiyamada96","description":"can rot mouseInput","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hash(vec3 p)\n{ \n    float n = sin(dot(p, vec3(7, 157, 113)));    \n    return fract(vec3(2097152, 262144, 32768)*n); \n}\n\nfloat map(vec3 p)\n{\n    vec3 o = hash(floor(p)) * 0.1; \n    \n    p = fract(p + o) - .5; \n    float r = dot(p, p) - 0.21; \n    p = abs(p); \n    \n    float d = max(p.x, p.y);\n    return d;    \n    \n}\n\nvoid mainImage( out vec4 fragColor, vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord - iResolution.xy*.5 ) / iResolution.y;\n    vec3 rd = normalize(vec3(uv, (1.- dot(uv, uv) * .5) * .5));\n    \n    vec2 mouse = (2.0 * (iMouse.xy / iResolution.xy) - 1.0) * 5.0 + 0.1;\n    vec3 ro = vec3(mouse, iTime * 0.5);\n    \n    vec3 col = vec3(0);\n    vec3 sp = vec3(0);\n\t\n\tfloat cs = cos( iTime * 0.375 ); \n    float si = sin( iTime * 0.375 );\n    \n    rd.xz = mat2(cs, si,-si, cs) * rd.xz;\n    rd.xy = mat2(cs, si,-si, cs) * rd.xy;\n    \t\n    float t= 0.0;\n    float layers= 0.0;\n    float d;\n    float aD;\n    float thD = .055;\n    \n\tfor(int i=0; i < 256; i++)\t\n    {\n        \n        if(layers > 15. || col.x>1. || t > 10.)\n        {\n        \tbreak;\n        }\n        \n        sp = ro + rd * t;\t\t\n        d = map(sp);\n        aD = (thD - abs(d) * 15./16.) / thD;\n        \n        if(aD > 0.)\n        {  \n            col += aD * aD * (3. - 2. * aD) / (1. + t * t * .25) * 0.8;\n           \n        }\n        \n        t += max(abs(d) * .5, thD * 1.);\n        \n    }\n    \n\n\t  fragColor = vec4(clamp(col, 0., 1.0), 1);\n\n}\n","name":"Image","description":"","type":"image"}]}