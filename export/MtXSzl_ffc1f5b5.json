{"ver":"0.1","info":{"id":"MtXSzl","date":"1516619604","viewed":336,"name":"cmyk dots","username":"nexor","description":"cmyk","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cymk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define time iTime\n#define resolution iResolution.xy\n\nconst float pi = 3.14156;\nconst float pi2 = pi*2.0;\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453123);\n}\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*157.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+157.0), hash(n+158.0),f.x),f.y);\n}\n\nconst mat2 m2 = mat2( 0.8, -0.6, 0.6, 0.8 );\n\nfloat fbm( vec2 p )\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p = m2*p*2.02;\n    f += 0.2500*noise( p ); p = m2*p*2.03;\n    f += 0.1250*noise( p ); p = m2*p*2.01;\n    f += 0.0625*noise( p );\n    return f/0.9375;\n}\n\nvec2 tr(vec2 p)\n{\n\t p /= resolution.xy;\n\t p = -1.0+2.0*p;\n\t p.x *= resolution.x/resolution.y;\n\t return p;\n}\n\nvec2 rot(vec2 p, float deg)\n{\n\tfloat c = cos(deg);\n\tfloat s = sin(deg);\n\tmat2 m = mat2(c,s,\n\t\t   \t\t\t\t\t\t\t\ts,-c);\n\treturn m*p;\n}\n\nvec2 pix(vec2 p, int s)\n{\n\treturn floor(p*float(s)+0.5)/float(s);\n}\n\nfloat eudist(vec2 p, vec2 s)\n{\n\treturn max(abs(p.x-s.x),abs(p.y-s.y));\n}\n\nfloat hex(vec2 p)\n{\n\tp.x *= 0.57735*2.0;\n\tp.y += mod(floor(p.x), 2.0)*0.5;\n\tp = abs((mod(p, 1.0) - 0.5));\n\treturn abs(max(p.x*1.5 + p.y, p.y*2.0) - 1.0);\n}\n\nfloat circle(vec2 p, float r)\n{\n\t return smoothstep(r,r*.95,length(p));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = tr(fragCoord.xy);\n\tvec3 col = vec3(1.0);\n\n    float t = time*.125;\n    float g = 0.0275;\n\n    p+=vec2(cos(t),sin(t));\n\n    for(int i=0;i<3;++i)\n    {\n    \t vec2 f = rot(p,float(i+1)*-75.);\n    \t vec2 q = mod(f,g)-g*.5;\n         float n = fbm(2.*floor(f/g)*g\n\t\t\t\t\t+4.*t*float(i)+t);\n\t\tcol[i] -= circle(q,n*g*.8);\n    }\n\n    col = sqrt(col);\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}