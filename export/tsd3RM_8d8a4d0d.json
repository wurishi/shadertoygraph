{"ver":"0.1","info":{"id":"tsd3RM","date":"1568123725","viewed":216,"name":"distort displace shader","username":"erikccoder","description":"simple distort displace shader","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["displace","distort","mirror"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159265359;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float t = fract(iTime);\n    \n    t = 0.0;\n    \n    vec2 st = uv*pi*6.0;\n    \n    st = (cos(st + sin(st.yx * t))+1.0)/2.0;\n    \n    float d = st.y;\n    \n    d = smoothstep(0.1, 0.9, d);\n    \n       \n    vec3 col = vec3(d);\n   \n    float x = (0.5-d) * 0.03*sin(iTime);\n    float y = (0.5-d) * 0.1*cos(iTime);\n        \n    \n    \n    vec2 duv = uv + vec2( x, y);\n    \n    vec3 tex = texture(iChannel0, duv).rgb;\n    \n    \n    col = tex;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}