{"ver":"0.1","info":{"id":"WlfGWS","date":"1557400128","viewed":331,"name":"mandala pattern 1","username":"ankd","description":"my shader mandala pattern 1","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["mandala"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WHITE vec3(1.0)\n#define BLACK vec3(0.0)\n#define RED vec3(1.0, 0.,0.)\n#define BLUE vec3(0.,0.,1.)\n#define YELLOW vec3(1.,1.,0.)\n#define HANADA vec3(39., 146., 195.)/255.0\n\n\n\nconst float PI = 3.14159265359;\n\nfloat rand(in vec2 n){\n    return fract(sin(dot(n, vec2(12.9898, 78.233)))*43758.5453);\n}\nfloat rand(in float n){\n    return rand(vec2(n));\n}\nfloat noise(in float x){\n    float f = fract(x);\n    float i = floor(x);\n    //return mix(rand(i), rand(i+1.0), f);\n    return mix(rand(i), rand(i+1.0), f*f*(3.0-2.0*f));\n    //return mix(rand(i), rand(i+1.0), smoothstep(0., 1., f));\n}\nfloat noise(in vec2 st){\n    vec2 f = fract(st);\n    vec2 i = floor(st);\n    \n    float a = rand(i);\n    float b = rand(i + vec2(1.,0.));\n    float c = rand(i + vec2(0.,1.));\n    float d = rand(i + vec2(1.,1.));\n    \n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix(a,b,u.x)+\n        \t\t(c-a)*u.y*(1.0-u.x) +\n        \t\t(d-b)*u.x*u.y;\n}\n\nmat2 rotate(in float r){\n    float c=cos(r), s=sin(r);\n    return mat2(c, -s, s, c);\n}\nfloat usin(in float x){\n    return 0.5+0.5*sin(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv = (fragCoord*2.0 - iResolution.xy)/min(iResolution.x, iResolution.y);\n\n    float t = 0.2*iTime;\n    for(int i=0;i<5;i++){\n        float a = atan(uv.x, uv.y);\n        float b = floor(5.0+4.*fract(iTime*0.25));\n\t    a *= b / (2.0*PI);\n        a = abs(fract(a*0.5-b*0.5)*2.0-1.0);\n        a *= (2.0*PI)/b;\n        uv = length(uv)*vec2(sin(a+t*0.7), cos(a+t*0.8));\n        uv -= vec2(0.2+1.8*usin(iTime*0.3), 0.);\n        uv = fract(uv)*2.0-1.0;\n    }\n    \n\tfloat v = noise(uv);\n    \n    vec3 col1 = mix(RED, YELLOW, usin(iTime*0.4));\n    vec3 col2 = mix(BLACK, HANADA, usin(iTime*0.9));\n    vec3 col = mix(col1, col2, v);\n    \n    col *= clamp(length(uv), 0., 1.);\n    \n\tuv = (fragCoord*2.0 - iResolution.xy)/min(iResolution.x, iResolution.y);\n    col *= exp(-0.8*length(uv));\n    col += 1.1*usin(iTime*0.4)*exp(-1.2*length(uv));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}