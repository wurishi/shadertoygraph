{"ver":"0.1","info":{"id":"M3lBRn","date":"1727961293","viewed":51,"name":"strange eggs","username":"pb","description":"monkeying around","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["raymarch","4d","exp"],"hasliked":0,"parentid":"M3VXDK","parentname":"tangled space"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//philip.bertani@gmail.com\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy,\n        uv = u/R;\n\n    O *= 0.;\n\n    float[] gk1s = float[](\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.023792, 0.094907, 0.150342, 0.094907, 0.023792,\n        0.015019, 0.059912, 0.094907, 0.059912, 0.015019,\n        0.003765, 0.015019, 0.023792, 0.015019, 0.003765\n    );\n\n    //golfed by fabriceneyret2\n    for (int k; k < 25; k++)      \n        O += gk1s[k] * texture(iChannel0, uv + ( vec2(k%5,k/5) - 2. ) / R );\n        \n    //O = 50.*fwidth(O*O/10.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rot(x) mat2(cos(x+vec4(0,11,33,0)))\n\n//formula for creating colors;\n#define H(h)  (  cos(  h*2.+ 2.*vec3(2,3,1)   )*.8 + .5 )\n\n//formula for mapping scale factor \n#define M(c)  log(c)\n\n#define R iResolution\n\n     \n#define ex exp(p.x)\n#define cy cos(p.y)\n#define sy sin(p.y)\n#define cz cos(p.z)\n#define sz sin(p.z)\n#define cw cos(p.w)\n#define sw sin(p.w)\n\nvoid mainImage( out vec4 O, vec2 U) {\n  \n    O = vec4(0);\n    \n    vec3 c=vec3(0);\n    vec4 rd = normalize( vec4(U-.5*R.xy, .9*R.y, 0))*400.;\n    \n    float sc,dotp,totdist=0., tt=iTime, t=0.;\n    \n    for (float i=0.; i<60.; i++) {\n        \n        vec4 p = vec4( rd*totdist);\n        \n        p.z += .8+tt/10.;\n        p.y -= .5+sin(tt/2.)*.04;\n        //p.x +=  -.2;\n\n        p.yzw = sin(p.xyz*5.);\n        \n        p.xz *= rot(4.57);\n        \n        \n        sc = 1.; \n         \n        vec4 w = p;\n     \n        for (float j=0.; j<6.; j++) {\n          \n            p = sin(p)*.8;\n            \n            dotp = max(1./dot(w-.3*p,w-.3*p),.2);\n            \n            sc *= dotp; \n            \n            p = p * dotp - .3; \n            \n            //this is exp(p.x+i*p.y+j*p.z+k*p.w) where ijk are the quaternion group\n            w =\n                    \n                    (vec4( \n                        ex*(cy*cz*cw - sy*sz*sw),\n                        ex*(sy*cz*cw + cy*sz*sw),\n                        ex*(cy*sz*cw - sy*cz*sw),\n                        ex*(sy*sz*cw + cy*cz*sw) ) ); \n                      \n                                  \n            \n        }\n         \n        float dist = abs( length(p.zw )-.2)/sc ;\n        float stepsize = dist/1000. ;     \n        totdist += stepsize;                  //move the distance along rd\n        \n        //accumulate color, fading with distance and iteration count\n        c +=\n             .25e-1* \n             H(M(sc)) * exp(-i*i*stepsize*1e1);\n    }\n    \n    c = 1. - exp(-c*c);\n    O = ( vec4(c,0) );\n               \n}","name":"Buffer A","description":"","type":"buffer"}]}