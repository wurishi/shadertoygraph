{"ver":"0.1","info":{"id":"WdVyDR","date":"1604943700","viewed":172,"name":"graffiti23","username":"edwardbraed","description":"Just a mouse paint editor.\nPick color - 1,2,3,4,5,6\nCleaning - space.","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Output to screen\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PEN_SIZE 30.0\n\n//thanks: https://www.shadertoy.com/view/XtdGW4\nfloat drwLine(vec2 p, vec2 a, vec2 b) \n{ \n    vec2 ab = b - a, ap = p - a;\n    float seg = length(ap - ab * clamp(dot(ab, ap) / dot(ab, ab), 0.0, 1.0));\n    return smoothstep(PEN_SIZE / iResolution.y, 0.0, abs(seg));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aX = iResolution.x / iResolution.y;\n    vec2 auv = vec2(uv.x * aX, uv.y);\n    ivec2 iFragCoord = ivec2(fragCoord);\n    \n    vec4 color  = texelFetch(iChannel0, iFragCoord, 0);\n    vec4 pstate = texelFetch(iChannel0, ivec2(0), 0); // pen state\n    \n    \n    const int   pColorsSz = 6;\n    const vec3  pColors[] = vec3[pColorsSz]( vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0),\n                                             vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0),\n                                             vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 1.0) );\n    \n    if(iMouse.z > 1.0)\n    {\n        vec2 mPos = iMouse.xy / iResolution.xy;\n        vec2 maPos = vec2(mPos.x * aX, mPos.y);\n        \n        if(iFragCoord == ivec2(0))\n            color.xyz = vec3(maPos, 1.0);\n        else\n        {\n    \t\tvec2 lastPos = pstate.xy * pstate.z;\n            lastPos += float(length(lastPos) < 0.001) * maPos;\n            float line = drwLine(auv, lastPos, maPos);\n            color.xyz += pColors[int(pstate.w)] * line;\n        }\n    }\n    else if(texelFetch(iChannel1, ivec2(32, 0), 0).x > 0.0)\n        color.xyz = mix(color.xyz, vec3(0.0), 0.4);\n    else if(iFragCoord == ivec2(0))\n    {\n    \tcolor.z = 0.0;\n        if     (texelFetch(iChannel1, ivec2(49, 0), 0).x > 0.0) color.w = 0.0;\n        else if(texelFetch(iChannel1, ivec2(50, 0), 0).x > 0.0) color.w = 1.0;\n        else if(texelFetch(iChannel1, ivec2(51, 0), 0).x > 0.0) color.w = 2.0;\n        else if(texelFetch(iChannel1, ivec2(52, 0), 0).x > 0.0) color.w = 3.0;\n        else if(texelFetch(iChannel1, ivec2(53, 0), 0).x > 0.0) color.w = 4.0;\n        else if(texelFetch(iChannel1, ivec2(54, 0), 0).x > 0.0) color.w = 5.0;\n    }\n    const vec2  pickPanel = vec2(0.03, 0.2);\n    \n    if(uv.x > (1.0 - pickPanel.x) && (1.0 - uv.y < pickPanel.y))\n    {\n        const float pCellSz   = pickPanel.y / float(pColorsSz);\n        \n        color.xyz = pColors[int((1.0 - uv.y) / pickPanel.y * float(pColorsSz))];\n        float x = (1.0 - pickPanel.x * 0.15);\n        float y = 1.0 - (pstate.w + 1.0) * pCellSz;\n        color.xyz += float(uv.x > x && uv.y > y && (uv.y < y + pCellSz));\n    }\n    \n    fragColor = color;\n}","name":"Buffer A","description":"","type":"buffer"}]}