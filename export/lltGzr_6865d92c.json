{"ver":"0.1","info":{"id":"lltGzr","date":"1467769862","viewed":316,"name":"Reflection Map","username":"Demod","description":"First (naive) attempt to make a refractive surface by generating a normal map of one image applied to another.","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["2d","reflection","texture","normalmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//const float distance = 50.0;\nconst float iChannel1Size = 512.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float distance = 30.0+20.0*4.0*min(0.25,max(-0.25,sin(iTime/2.0)));\n    vec2 uv = fragCoord.xy/iResolution.xy;\n\tvec3 normal = texture(iChannel0,fract(uv+iMouse.xy/iResolution.xy/*+vec2(iTime/10.0,iTime/20.0)*/)).xyz;\n    vec2 offset = (normal*distance).xy/iChannel1Size;\n    //offset = vec2(0,0);\n    fragColor = texture(iChannel1,uv+offset);\n    //fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Convert image to deflection map (normal map ish)\n\nconst float texelScale = 0.1;\nconst float iChannel0Size = 512.0;\n\nfloat getLuma(vec2 coord) {\n    vec4 sample = texture(iChannel0,coord);\n    //Luminosity ITU-R recommendation (BT.709, specifically) \n    return sample.r*0.2126 + sample.g*0.7152 + sample.b*0.0722;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float luma = getLuma(uv);\n    vec2 delta = vec2(luma - getLuma(uv+vec2(-1.0,0.0)/iChannel0Size),\n                      luma - getLuma(uv+vec2(0.0,-1.0)/iChannel0Size));\n    vec3 normal;\n    normal.x = sin(atan(-delta.x/texelScale));\n    normal.y = sin(atan(-delta.y/texelScale));\n    normal.z = sqrt(1.0 - normal.x*normal.x - normal.y*normal.y);\n    fragColor = vec4(normal,1.0);\n    //fragColor = texture(iChannel0,fragCoord.xy/iResolution.xy);\n   \t//fragColor = vec4(luma,luma,luma,1.0);\n    //fragColor = vec4(abs(delta.x),abs(delta.y),0.0,1.0);\n\t//fragColor = vec4(1.0,1.0,1.0,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}