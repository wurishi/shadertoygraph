{"ver":"0.1","info":{"id":"MtjBWR","date":"1600236728","viewed":383,"name":"HCL Color Range","username":"jlfwong","description":"Just an experiment with mapping a linear range onto a set of colors that look nice together","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hcl2rgb(float H, float C, float L) {\n    // https://en.wikipedia.org/wiki/HSL_and_HSV#From_luma/chroma/hue\n    float hPrime = H / 60.0;\n    float X = C * (1.0 - abs(mod(hPrime, 2.0) - 1.0));\n    vec3 rgb = (\n        hPrime < 1.0 ? vec3(C, X, 0) :\n        hPrime < 2.0 ? vec3(X, C, 0) :\n        hPrime < 3.0 ? vec3(0, C, X) :\n        hPrime < 4.0 ? vec3(0, X, C) :\n        hPrime < 5.0 ? vec3(X, 0, C) :\n        vec3(C, 0, X)\n    );\n    \n    float m = L - dot(vec3(0.3, 0.59, 0.11), rgb);\n    return rgb + vec3(m, m, m);\n}\n\nfloat triangle(float x) {\n    return 2.0 * abs(fract(x) - 0.5) - 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float bands = 80.0;\n    float ratio = floor(bands * fragCoord.x / iResolution.x) / bands;\n    float x = triangle(30.0 * ratio);\n    float H = 360.0 * (0.9 * ratio);\n    float C = 0.25 + 0.2 * x;\n    float L = 0.80 - 0.15 * x;\n\tfragColor = vec4( hcl2rgb(H, C, L), 1.0);\n}","name":"Image","description":"","type":"image"}]}