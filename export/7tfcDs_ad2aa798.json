{"ver":"0.1","info":{"id":"7tfcDs","date":"1649700313","viewed":103,"name":"trojuhelnik","username":"megafet","description":"trojuhelnik","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["trojuhelnik"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec2 p, vec2 a, vec2 b)\n{\n     vec2 a2b = b - a;\n     vec2 a2p = p - a;         \n     float d = dot(normalize(vec2(a2b.y, -a2b.x)), a2p);   \n     return length( d)*50.5;\n}\n\nfloat point(vec2 p, vec2 a)\n{\n     return length(p-a)*50.5;\n}\nfloat segment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0., 1.0 );\n    return length( pa - ba*h ) * 50.5;\n}\n\nconst float PI = 3.14;\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x -= 0.5;\n    uv.y -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    fragColor = vec4(0);\n    \n    vec2 a1; vec2 a2; vec2 b1; vec2 b2; vec2 c1; vec2 c2; vec4 s1; vec4 s2; vec4 s3;\n    \n    float timer = mod(iTime, 40.);\n    float t0 = 5.;\n    float t1 = 10.;\n    float t2 = 14.;\n    float t4 = 20.;\n    float t5 = 26.;\n    float t6 = 29.;\n    \n    //timer += 19.;\n    \n    a1 =  vec2(-0.5, -0.4);\n    a2 =  vec2(-0.5, -0.4);\n    b1 =  vec2(-0.5, -0.4);\n    b2 =  vec2(-0.5, -0.4);\n    c1 =  vec2(-0.5, -0.4);\n    c2 =  vec2(-0.5, -0.4);\n    \n    if(timer > t0){\n        a2 =  vec2( min(-0.5 + (timer - t0)/4., 0.5), -0.4);\n        //s1 = vec4(1.) / segment(uv, a1, a2);\n        \n    }\n    \n    if(timer > t1){\n        b1 =  vec2(0.5, -0.4);\n        b2 =  vec2( max(0., 0.5 - (timer-t1)/6.4), min(0.4, -0.4 + (timer-t1)/4.));\n        //s2 = vec4(1.) / segment(uv, b1, b2);\n        \n    }\n    \n    if(timer > t2){\n        c1 =  vec2(0., 0.4);\n        c2 =  vec2( max(-0.5, 0. - (timer-t2)/6.4), max(-0.4, 0.4 - (timer-t2)/4.));\n        //s3 = vec4(1.) / segment(uv, c1, c2);\n        \n    }\n    if(timer > t4){\n        a1.y += min((timer - t4)/4.,0.8);\n        a2.y += min((timer - t4)/4., 0.8);\n        //s1 = vec4(1.) / segment(uv, a1, a2);\n        \n        b1.x -= min((timer - t4)/6.4, 0.5);\n        b2.x -= min((timer - t4)/6.4, 0.5);\n        //s2 = vec4(1.) / segment(uv, b1, b2);\n        \n        c1.x += min((timer - t4)/6.4, 0.5);\n        c2.x += min((timer - t4)/6.4, 0.5);\n        //s3 = vec4(1.) / segment(uv, c1, c2);\n    }\n    if(timer > t5){\n        float speed = 3.;\n        a1.x += (min((timer - t5)/(4. * speed), 0.5));\n        a1.y -= (min((timer - t5)/(5.* speed), 0.4));\n        a2.x -= (min((timer - t5)/(4.* speed), 0.5));\n        a2.y -= (min((timer - t5)/(5.* speed), 0.4));\n        \n        b1.y += (min((timer - t5)/(5.* speed), 0.4));\n        b2.x += (min((timer - t5)/(4.* speed), 0.5));\n        b2.y -= (min((timer - t5)/(5.* speed), 0.4));\n        \n        c1.x -= (min((timer - t5)/(4.* speed), 0.5));\n        c1.y -= (min((timer - t5)/(5.* speed), 0.4));\n        c2.y += (min((timer - t5)/(5.* speed), 0.4));\n        \n        uv *= rotationMatrix(max(0., (timer - t5) * 500.));\n        \n        \n        \n        \n    }\n    \n    s1 = vec4(1.) / segment(uv, a1, a2);\n    s2 = vec4(1.) / segment(uv, b1, b2);\n    s3 = vec4(1.) / segment(uv, c1, c2);\n    \n    \n    fragColor = max(fragColor, s1);\n    fragColor = max(fragColor, s2);\n    fragColor = max(fragColor, s3);\n    \n    if (timer < 5.){\n        fragColor = vec4(0.) + fragColor*(timer)/5.;\n    }if (timer > t6){\n        fragColor = fragColor*(1.-(timer-t6)/4.);\n    }\n\n\n}","name":"Image","description":"","type":"image"}]}