{"ver":"0.1","info":{"id":"NlGBz1","date":"1722705537","viewed":8,"name":"TBOS_Noise8","username":"nako","description":"The Book of Shaders\nhttps://thebookofshaders.com/11/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926525\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\nfloat valueNoise(vec2 st, float num){\n    st *= num;\n    vec2 floor_st = floor(st);\n    vec2 fract_st = fract(st);\n    float rand0 = random(floor_st);\n    float rand1 = random(floor_st + vec2(1,0));\n    float rand2 = random(floor_st + vec2(1,1));\n    float rand3 = random(floor_st + vec2(0,1));\n    vec2 u = fract_st*fract_st*(3. - 2.*fract_st);\n    return mix(mix(rand0, rand1, u.x), mix(rand3, rand2, u.x), u.y);\n}\n\nfloat shape(float d, float a, vec2 st){\n    float time = iTime;\n    float cycle1 = smoothstep(-1., 1.,sin(a+time));\n    float cycle2 = smoothstep(0.0, 1.,sin(a+time));\n    float baseWave = .8 + sin(a*25.)*.1*cycle1;\n    float noiseWave = sin(a*43.)*valueNoise(st+time, 2.)*.1*cycle2;\n    \n    return baseWave + noiseWave;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = ( 2.* fragCoord - iResolution.xy ) / iResolution.y;\n    float d = distance(vec2(.0,.0), st);\n    float a = atan(st.x, st.y);\n    \n    float radius = shape(d, a, st);\n    \n    //float col = smoothstep(radius-.01,radius, d)-smoothstep(radius, radius+.01, d);\n    float col = smoothstep(1., 0.0, abs(d - radius)/fwidth(d -radius));\n    fragColor = vec4(vec3(col), 0.);\n}","name":"Image","description":"","type":"image"}]}