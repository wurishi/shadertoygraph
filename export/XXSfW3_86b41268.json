{"ver":"0.1","info":{"id":"XXSfW3","date":"1729968822","viewed":86,"name":"dot light 2","username":"ChunderFPV","description":"Experimenting with 2d light effects.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","light","light","sphere","blocks","dot","transform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"dot light\" by ChunderFPV. https://shadertoy.com/view/4cB3W1\n// 2024-10-26 18:50:47\n\n#define O(x,a,b) (smoothstep(0., 1., cos(x*6.2832)*.5+.5)*(a-b)+b)  // oscillate x between a & b\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float s = 10.,\n          t = .01 + iTime/10.,\n          n = .4,  // shadow strength\n          x, tr;\n    \n    vec2 R = iResolution.xy,\n         u = (U - R/2.)/R.y*s,\n         m = (iMouse.xy - R/2.)/R.y*s,\n         v, o, b, u2, m2;\n    \n    vec3 c = vec3(0);\n    \n    if (iMouse.z < 1.) // not clicking\n        m = vec2(sin(t*3.1416)*2., sin(t*6.2832))*3.; // fig-8 movement\n    \n    c += .05/length(u-m);  // mouse light\n    \n    // transform\n    u2 = u/abs(1.-dot(u, u)/15.);\n    m2 = m/abs(1.-dot(m, m)/15.);\n    tr = O(t/3., 0., 1.);  // transform ratio\n    u = mix(u, u2, tr);  // u*(1.-tr) + u2*tr;\n    m = mix(m, m2, tr);\n    \n    // movement\n    x = (round(u.x/2.-t)+t)*2.;\n    b = vec2(x, 1./sin(x/2.));\n    u -= b;\n    m -= b;\n    \n    // blocks\n    o = round(u/2.)*2.;  // tile coords\n    m -= o;  // apply tile coords\n    u -= o;\n    v = abs(u);  // reflect + to -\n    u /= pow( (1.-max(v.x, v.y)) * abs(.5-length(v)), n );  // coords\n    c += .5/length(u-m);                  // light it up\n    c += c*texture(iChannel0, u/2.).rgb;  // texture\n    \n    C = vec4(tanh(c + c*c), 1);\n}","name":"Image","description":"","type":"image"}]}