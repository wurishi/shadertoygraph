{"ver":"0.1","info":{"id":"Xtcfzf","date":"1540399211","viewed":1592,"name":"Pulsing ring","username":"aferriss","description":"Pulsing ring ","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["pulse","ring","eased"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float speed = 1.0;\nfloat offset = 0.1;\nfloat size = 4.0;\n\nfloat exponentialIn(float t) {\n  return t == 0.0 ? t : pow(2.0, 12.0 * (t - 1.0));\n}\n\nfloat map(float value, float inMin, float inMax, float outMin, float outMax) {\n  return outMin + (outMax - outMin) * (value - inMin) / (inMax - inMin);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = iResolution.x / iResolution.y;\n\t\n    uv = uv * 2.0 - 1.0;\n    uv *= size;\n    uv = uv * 0.5 + 0.5;\n    \n    uv.x *= aspect;\n\n    uv -= vec2(0.5*aspect, 0.5);\n    \n    float l = 1.0 - length(uv);\n    \n    float t = mod(iTime*speed, 1.0);\n    float t2 = mod(iTime*speed + offset, 1.0);\n    \n    t = clamp(exponentialIn(t), 0.0,1.0);\n    t2 = clamp(exponentialIn(t2), 0.0,1.0); \n    \n    float circle1 = smoothstep(0.0, 0.01, l * t);\n\tfloat circle2 = smoothstep(0.0, 0.01, l * t2);\n    \n    float pulse = circle2 - circle1;\n    pulse = clamp(pulse, 0.0,1.0);\n    //pulse = smoothstep(0.3, 0.5, pulse);\n    // Output to screen\n    fragColor = vec4(pow(pulse*1.5, 2.0));\n}","name":"Image","description":"","type":"image"}]}