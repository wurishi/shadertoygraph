{"ver":"0.1","info":{"id":"43lXRH","date":"1709144412","viewed":110,"name":"Sexy Voronoi","username":"ripazhakgggdkp","description":"Voronoi but sexy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define NUM_SEEDS 40\n\nstruct Seed\n{\n    vec2 position;\n    vec4 color;\n};\n\nSeed seeds[NUM_SEEDS];\n\nvoid generate(float seed) {\n    for (int i;i<NUM_SEEDS;i++) {\n        float x = fast(vec2(seed,i*10));\n        float y = fast(vec2(seed,i*20));\n        float c = fast(vec2(seed,i*5));\n        \n        // aspect ratio constant\n        float aspectRatio = iResolution.x/iResolution.y;\n        \n        seeds[i] = Seed(vec2(x*aspectRatio,y),vec4(viridis(c),1.));\n    }\n}\n\nSeed closestSeed(vec2 uv) {\n    float closest = 2.;\n    int index = 0;\n    for (int i; i<seeds.length(); i++) {\n        float dist = length(uv - seeds[i].position);\n        if (dist < closest) {\n            closest = dist;\n            index = i;\n        }  \n    }\n    return seeds[index];\n}\n\nbool circlePointBounding(vec2 pos, float r, vec2 point) {\n    return (length(pos-point)<r);\n}\n\n// find if a fragCoord point is within a radius of a seed\nbool isSeed(vec2 uv) {\n    for (int i; i<seeds.length(); i++) {\n        if (circlePointBounding(seeds[i].position, 0.009, uv)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // tick every two seconds\n    float tick = floor(iTime*0.5);\n    \n    generate(tick);\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // fix aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // paint the uv with the color of the closest seed\n    fragColor = closestSeed(uv).color;\n    \n    // paint the seed point\n    if (isSeed(uv)) {\n        fragColor = vec4(0.,0.,0.,0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// UE4's RandFast function\n// https://github.com/EpicGames/UnrealEngine/blob/release/Engine/Shaders/Private/Random.ush\nfloat fast(vec2 v)\n{\n    v = (1./4320.) * v + vec2(0.25,0.);\n    float state = fract( dot( v * v, vec2(3571)));\n    return fract( state * state * (3571. * 2.));\n}\n\n// Viridis colormap\n// https://www.shadertoy.com/view/WlfXRN\nvec3 viridis(float t) {\n\n    const vec3 c0 = vec3(0.2777273272234177, 0.005407344544966578, 0.3340998053353061);\n    const vec3 c1 = vec3(0.1050930431085774, 1.404613529898575, 1.384590162594685);\n    const vec3 c2 = vec3(-0.3308618287255563, 0.214847559468213, 0.09509516302823659);\n    const vec3 c3 = vec3(-4.634230498983486, -5.799100973351585, -19.33244095627987);\n    const vec3 c4 = vec3(6.228269936347081, 14.17993336680509, 56.69055260068105);\n    const vec3 c5 = vec3(4.776384997670288, -13.74514537774601, -65.35303263337234);\n    const vec3 c6 = vec3(-5.435455855934631, 4.645852612178535, 26.3124352495832);\n\n    return c0+t*(c1+t*(c2+t*(c3+t*(c4+t*(c5+t*c6)))));\n\n}","name":"Common","description":"","type":"common"}]}