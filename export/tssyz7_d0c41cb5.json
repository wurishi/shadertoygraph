{"ver":"0.1","info":{"id":"tssyz7","date":"1584484410","viewed":65,"name":"PatternTest","username":"spooneystone","description":"testing pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,c) smoothstep(a,b,c)\nfloat Box(vec2 p,float xb, float xt,float yb, float yt,float blur)\n{\n    float m = S(-blur,blur,p.y-yb);\n     m *= S(blur,-blur,p.y-yt);\n    \n    p.x = abs(p.x);\n    \n    float w = mix(xb,xt,(p.y - yb) / (yt -yb));\n    m *= S(blur, -blur, p.x - w);\n    \n    return m;\n    \n}\nfloat boxLayer(vec2 uv,float UVyPos,float UVxPos,float yoffset,float xoffset, vec3 col, float blur,float Scale)\n{\n    \n    uv *= Scale;\n    uv.y -= UVyPos;\n    uv.x -= UVxPos;\n    //float id = floor(uv.x);\n    uv.x = fract(uv.x)-xoffset;\n    uv.y = fract(uv.y)-yoffset;\n    //vec3 col = vec3(0);\n    \n    float box = Box(uv,.2,.2,.0,.4,blur);\n    \n    return   box ;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord -.5 * iResolution.xy)/iResolution.y;\n\n    uv.y += .25;\n    uv.x += .6;\n    vec4 col = vec4(0);\n    float blur = 0.2;\n    float scale = 10.;\n    \n    //float blend = S(-1.,1.,uv.x);\n    \n    \n    \n    \n    float thickness = 1./iResolution.y;\n    if(abs(uv.x)<thickness) col.g = 1.;\n    if(abs(uv.y)<thickness) col.r = 1.;\n    \n    //col += vec4(1,0,0,1) * boxLayer(uv,.5,.5,.5,.5,vec3(1,0,0),blur,scale) ;\n   float time = iTime;\n    \n    for(float i=.0; i < 1.; i+=1./5.)\n    {\n       \n        time *= i + (1. /5.);\n        col += vec4(0.+(i+.1) ,1.-(i+.1),0.,1) * boxLayer(uv + vec2(time,0),.5 + i,.5 + i,.5,.5,vec3(1,0,0),blur += i ,scale += 1.) ;\n        \n    }\n    // Output to screen\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}