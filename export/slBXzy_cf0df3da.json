{"ver":"0.1","info":{"id":"slBXzy","date":"1669570897","viewed":79,"name":"Times table","username":"harsukh","description":"yuh","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265359;\n\nfloat circle (in vec2 uv,in float rad)\n{\n    vec2 center = uv-vec2(0.);\n    float stroke = 20.;\n    return 1.- step(rad , dot(center,center)*4.);\n    //step( rad+(rad*stroke), dot(center,center)*4.);\n   \n}\n\nfloat line (vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    \n    float h = clamp(dot(pa, ba)/ dot(ba,ba), 0.0, 1.0);\n    float dist = length(pa-ba*h);\n    return smoothstep(3./iResolution.y, -0.2/iResolution.y, dist);\n}\n\nvec2 rotate2D(vec2 uv, float deg)\n{\n  \n    uv = mat2(cos(deg), -sin(deg),\n               sin(deg), cos(deg))*uv;\n    return uv;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //zoom out, center by subtracting res, normalize y so you can see it\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    uv*=vec2(1.5);\n \n    \n    vec3 col = vec3(0.);\n    \n    int divisions = 100;\n     float factor = 1.;\n     factor +=iTime/20.;\n    \n    float len = 2.*pi/float(divisions);\n    //uv = rotate2D(uv, iTime);\n    //col+=circle(uv, 4.)*vec3(0.,1.,1.);\n    \n    for(int i=0; i<divisions; i++)\n    {\n        float n = float(i);\n        float t = (sin(iTime*.1+ float(i)*0.01)+1.)/2.;\n        vec2 a = -vec2(cos(n*len), sin(n*len));\n        vec2 b = -vec2(cos(n*len*factor), sin(n*len*factor));\n        col+=line(uv,a,b)*vec3(0.,1.,1.);\n        col+=circle(uv-(t*a)+(1.-t)*b, .001)*vec3(1.,1.,1.);\n         col+=circle(uv-(a*0.25+b*0.75), .001)*vec3(1.,.5,.8);\n        \n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}