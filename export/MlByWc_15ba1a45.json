{"ver":"0.1","info":{"id":"MlByWc","date":"1510327392","viewed":112,"name":"color greyscale alternation","username":"beardrops","description":"A challange from this tutorial: https://gamedevelopment.tutsplus.com/tutorials/a-beginners-guide-to-coding-graphics-shaders--cms-23313\nI made the image to alternate between color and greyscale.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color","image","greyscale","alternation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t  \n    vec2 xy = fragCoord.xy / iResolution.xy;//Condensing this into one line\n    float zoom = 1.0;\n    float limit = 1.0 - 1.0 / zoom;\n    float offset_x = iMouse.x / iResolution.x;\n    if(offset_x > limit) offset_x = limit;\n    float offset_y = iMouse.y / iResolution.y;\n    if(offset_y > limit) offset_y = limit;\n    xy = vec2(offset_x + xy.x / zoom, offset_y + xy.y / zoom);\n    \n    vec4 texColor = texture(iChannel0,xy);\n    float average = (texColor.r + texColor.g + texColor.b) / 3.0;\n    float s = abs(sin(iTime));\n    //fragColor = texColor;\n    fragColor = vec4(\n     \ts * texColor.r + (1.0 - s) * average,\n        s * texColor.g + (1.0 - s) * average,\n        s * texColor.b + (1.0 - s) * average,\n        1.0\n        );\n    \n}","name":"Image","description":"","type":"image"}]}