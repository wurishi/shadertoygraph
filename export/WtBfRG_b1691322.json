{"ver":"0.1","info":{"id":"WtBfRG","date":"1599323131","viewed":204,"name":"Fade of Quality (dithered)","username":"spool2kool","description":"starts at full quality, decreases it to 0 and increases it back. click and hold for webcam image.","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["fx","effects","dithering","quality"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat q=abs(mod(iTime/30.,2.)-1.);//iMouse.x/iResolution.x;\n    // Output to screen\n    if(iMouse.z>0.5)\n    {\n        fragColor=texture(iChannel0,uv);\n    }\n    else\n    {\n        fragColor=texture(iChannel1,uv);\n    }\n    fragColor = setq(uv,fragColor,pow(q,4.));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float hmax=1536.;\nconst float svmax=256.;\nfloat hash31(vec3 seed)\n{\n    return fract(sin(seed.x*315.41+seed.y*379.648+seed.z*339.93287)*75731.967);\n}\nvec3 noise(vec2 xy,float seed)\n{\n    return vec3(hash31(vec3(xy,seed+1.)),hash31(vec3(xy,seed+3.)),hash31(vec3(xy,seed+5.)));\n}\nvec3 rgb2hsv(vec3 v)\n{\n    float cmin=min(v.r,min(v.g,v.b));\n    float cmax=max(v.r,max(v.g,v.b));\n    float diff=cmax-cmin;\n    float h=0.;\n    float s=0.;\n    if(diff>0.)\n    {\n        if(v.r>=v.g && v.r>=v.b) h=mod((v.g-v.b)/diff,6.);\n        else if(v.g>=v.r && v.g>=v.b) h=mod(((v.b-v.r)/diff+2.),6.);\n        else if(v.b>=v.r && v.b>=v.g) h=mod(((v.r-v.g)/diff+4.),6.);\n    }\n    \n    if(cmax>0.) s=diff/cmax;\n    return vec3(h/6.,s,cmax);\n}\nvec3 hsv2rgb(vec3 v)\n{\n    float c=v.y*v.z;\n    float x=c*(1.-abs(mod(v.x*6.,2.)-1.));\n    float m=v.z-c;\n    float h=v.x*6.;\n    vec3 ret=vec3(0.);\n    if(h>=0. && h<1.) ret=vec3(c,x,0.);\n    if(h>=1. && h<2.) ret=vec3(x,c,0.);\n    if(h>=2. && h<3.) ret=vec3(0.,c,x);\n    if(h>=3. && h<4.) ret=vec3(0.,x,c);\n    if(h>=4. && h<5.) ret=vec3(x,0.,c);\n    if(h>=5. && h<6.) ret=vec3(c,0.,x);\n    return ret+m;\n}\nvec4 setq(vec2 xy,vec4 v,float q)\n{\n    vec3 hsv=rgb2hsv(v.rgb);\n    float hq=q*hmax+0.5;\n    float sq=q*svmax;\n    float vq=q*svmax+0.5;\n    hsv.x=floor(hsv.x*hq+noise(xy,1.).r-0.5)/hq;\n    hsv.y=floor(hsv.y*sq+noise(xy,1.).r-0.5)/sq;\n    hsv.z=floor(hsv.z*vq+noise(xy,1.).r-0.5)/vq;\n \treturn vec4(hsv2rgb(hsv),1.);   \n}","name":"Common","description":"","type":"common"}]}