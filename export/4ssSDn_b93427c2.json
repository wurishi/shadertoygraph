{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// \"hej\" is \"hello\" is Swedish :)\n\n#define LENGTH 16\n#define MAXD 100.\n\nint text[LENGTH];\n\n// iq's renamed sdCapsule in 2d\nfloat line( vec2 p, vec2 a, vec2 b) {\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - .1;\n}\n\nfloat noise( in vec3 x ) {\n\tvec3 p = floor(x);\n\tvec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = textureLod( iChannel0, (uv+ 0.5)/256.0, 0.0 ).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nconst mat3 m = mat3( 0.0,  0.8,  0.6,\n                    -0.8,  0.3, -0.4,\n                    -0.6, -0.4,  0.6 );\n\nfloat fbm(in vec3 x) {\n\tvec3 p = .3 * x;\n\tfloat v;\t\n\tv  = 0.500*noise( p ); p = m*p*2.2;\n    v += 0.250*noise( p ); p = m*p*2.3;\n    v += 0.125*noise( p ); p = m*p*2.1;\n    v += 0.063*noise( p );\n\t\n\treturn v;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\t// h \n\ttext[0] = 12;\n\ttext[1] = 258;\n\ttext[2] = 134;\n\ttext[3] = 182;\n\t\n\t// e\n\ttext[4] = -3;\n\ttext[5] = 200;\n\ttext[6] = 239;\n\ttext[7] = 174;\n\ttext[8] = 138;\t\n\ttext[9] = 266;\t\n\t\n\t// j\n\ttext[10] = -3;\n\ttext[11] = 133;\n\ttext[12] = 166;\n\ttext[13] = 417;\n\ttext[14] = 0;\n\ttext[15] = 67;\n\t\n\tvec2 p = 10.*uv + .02 * sin(5. * iTime * vec2(uv) + 10.*6.28*uv);\n\tvec2 caret = vec2(1.4, .5);\n\t\n\tfloat d = MAXD;\n\tfor (int i=0;i<LENGTH;i++) {\n\t\tif (text[i] <= 0) {\n\t\t\tcaret.x -= float(text[i]);\t\t\t\n        } else {\n            // lines are stored in the format value = from * 21 + to\n            float p0 = float(text[i] / 21);\n            float p1 = mod(float(text[i]), 21.);\t\t\n\n            // TODO: invert Y during encoding to remove \"7.-\"\n            vec2 c0 = caret + vec2(mod(p0, 3.), 7.-floor(p0/3.));\n            vec2 c1 = caret + vec2(mod(p1, 3.), 7.-floor(p1/3.));\n            d = min(d, line(p, c0, c1));\n        }\n\t}\n\t\n\tvec3 color = vec3(smoothstep(0., .05, d));\t\n    \n    float n = fbm(vec3(200.*p, iTime));\n    color -= .5*n;\n    \n    color = pow( color, vec3(1.1)) * sqrt( 64.*uv.x*uv.y*(1.-uv.x)*(1.-uv.y) );\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ssSDn","date":"1399278539","viewed":705,"name":"Text rendering","username":"bysse","description":"Just a small experiment in drawing characters, inspired from http://www.claudiocc.com/the-1k-notebook-part-i/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["text"],"hasliked":0,"parentid":"","parentname":""}}