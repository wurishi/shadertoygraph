{"ver":"0.1","info":{"id":"WsfcDN","date":"1584778075","viewed":331,"name":"Cage Tube","username":"gaz","description":"3d","likes":18,"published":1,"flags":32,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    // https://www.shadertoy.com/view/ls2Xzd\n    vec2 co = vec2(0.5);\n    float itr = 100.0;\n    vec2 delta = (uv-co)/itr;\n    delta *= 0.3;\n    vec3 col = vec3(0);\n    float decay=1.0;\n    for (float i = 0.0; i < itr; i++)\n\t{\n        col += 0.3*decay*textureLod(iChannel0, uv,0.0).xyz;\n        uv -= delta;\n        decay *= 0.8;\n    }  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n// https://www.shadertoy.com/view/3syGzz\n#define opRepLim(p,s,l) p-s*clamp(round(p/s),-l,l);\n\nfloat G=0.0;\n\n// https://www.shadertoy.com/view/WdfcWr\nvec2 pSFold(vec2 p,float n)\n{\n    float h=floor(log2(n)),a =6.2831*exp2(h)/n;\n    for(float i=0.0; i<h+2.0; i++)\n    {\n\t \tvec2 v = vec2(-cos(a),sin(a));\n\t\tfloat g= dot(p,v);\n \t\tp-= (g - sqrt(g * g + 5e-3))*v;\n \t\ta*=0.5;\n    }\n    return p;\n}\n\nfloat map(vec3 p)\n{   \n    p.x-=sin(p.z*0.2+iTime*3.0)*0.8;\n    p.y-=cos(p.z*0.2+iTime*3.0)*0.8;\n\tp.xy*=rot(p.z*0.2);\n    p.xy=pSFold(p.xy,6.0);\n    float c=2.0;\n    p.z=mod(p.z,c)-0.5*c;\n    p.y-=4.0;\n    p.y=opRepLim(p.y,0.8,2.0);\n    float de=1e9;\n    float d=length(p.xy)-0.05;\n    G+=0.1/(0.1+d*d*10.0);\n    de=min(de,d);\n    for(int i=0;i<3;i++)\n    {\n        p.xy=abs(p.xy)-0.2;\n        p.xz=abs(p.xz)-0.5;\n    }\n    de=min(de,length(p.yz)-0.05);   \n    return de;\n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat softshadow(in vec3 ro, in vec3 rd)\n{\n\tfloat res = 1.0;\n    float t = 0.05;\n    for(int i = 0; i < 32; i++)\n    {\n\t\tfloat h = map(ro + rd * t);\n        res = min(res, 8.0 * h / t);\n        t += clamp(h, 0.02, 0.1);\n        if(h < 0.001 || t > 5.0) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro=vec3(0);\n    ro.z -=iTime*5.0;\n    vec3 rd=normalize(vec3(uv,-2));\n    vec3 col= mix(vec3(0.1),vec3(0.0,0.3,0.5),length(uv*vec2(1,1.2))*0.4);\n    float t=0.0,d;\n    for(int i=0;i<64;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<0.001) break;\n    }\n    if(d<0.001)\n    {\n        col=vec3(0.3,0.5,0.8);\n        vec3 p=ro+rd*t;\n        vec3 n = calcNormal(p);\n        vec3 li = normalize(vec3(2,3,3));\n        float dif = clamp(dot(n, li), 0.0, 1.0);\n        dif *= softshadow(p, li);\n        col *= max(dif, 0.3);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd+2.2*(1.0-rimd);\n    \tcol *= frn*0.8;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 60.0);\n        col = mix(col, vec3(0.0), exp(-0.01*t*t));\n        col+=vec3(0.7,0.5,0)*G*0.05;\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}