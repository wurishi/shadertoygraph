{"ver":"0.1","info":{"id":"WlKSDK","date":"1583615744","viewed":161,"name":"Flag Effect","username":"nicholasreynolds02","description":"My first shader here.  It's supposed to look like the flag is flapping in the wind.  I think it turned out pretty nice.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["effect","flag","imageeffect","image"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 calculateOffset(vec2 uv) {\n    float TimeOffset = iTime * 5.0;\n    float Intensity = 0.02;\n    \n    vec2 offsetReadCoords = vec2(0, 0);\n    offsetReadCoords.x += (TimeOffset + uv.y*5.0) * Intensity;\n    offsetReadCoords.y += (TimeOffset * 2.0 + uv.x*5.0) * Intensity;\n    \n    // Read from iChannel to offset\n    float u_offset = texture(iChannel0, vec2(1, 1) - offsetReadCoords).x - 0.5;\n    float v_offset = texture(iChannel0, offsetReadCoords).x - 0.5;\n    \n    vec2 totalOffset = vec2(u_offset, v_offset) * 0.1;\n    \n    // Multiply offset by uv.x coordinate to create the illusion of a flagpole\n    totalOffset *= 1.0 - uv.x;\n    \n    return totalOffset;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Zoom in\n    uv -= 0.5;\n    uv *= 1.2;\n    uv += 0.5;\n    \n    // Offset UV\n    vec2 totalOffset = calculateOffset(uv);\n    \n    uv -= totalOffset;\n    \n    // Cull any pixels that would be screen-wrapping\n    float cull_color = floor(2.0 - uv.x);\n    cull_color *= floor(2.0 - uv.y);\n    cull_color *= round(0.5 + uv.x);\n    cull_color *= round(0.5 + uv.y);\n    \n    // Generate some fun colors for the flag\n    float flag_color = floor(uv.y * 3.0) / 3.0 + 0.25;\n    vec3 color = vec3(flag_color, 0.25, 1.0-flag_color);\n    \n    // Calculate Shadow\n    vec2 up_neighbor = (fragCoord + vec2(1, 0)) / iResolution.xy;\n    vec2 right_neighbor = (fragCoord + vec2(0, 1)) / iResolution.xy;\n    \n    vec2 up_neighbor_offset = calculateOffset(up_neighbor);\n    vec2 right_neighbor_offset = calculateOffset(right_neighbor);\n    \n    vec2 up_diff = abs(totalOffset - up_neighbor_offset);\n    vec2 right_diff = abs(totalOffset - up_neighbor_offset);\n    \n    vec2 neighbor_diff = up_diff + right_diff / .4;\n    \n    float shadow = 1.0 - ((neighbor_diff.x + neighbor_diff.y));\n    \n    fragColor = vec4(cull_color * color * shadow, 1.0);\n}","name":"Image","description":"","type":"image"}]}