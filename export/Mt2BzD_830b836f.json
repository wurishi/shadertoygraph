{"ver":"0.1","info":{"id":"Mt2BzD","date":"1514929004","viewed":318,"name":"1/2018","username":"rimina","description":"My first shader of the year. Starting with basics.\n\nResources used: https://thebookofshaders.com/07/","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","shapes","dailyshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 q = fragCoord.xy / iResolution.xy;\n    q = -1.0+2.0*q;\n    q.x *= iResolution.x/iResolution.y;\n    \n    float a = 0.0;\n    float r = 0.0;\n    float d = 10000.0;\n    \n    for(float i = 0.0; i < 6.0; ++i){\n        vec2 p = q;\n        p += vec2(i*0.5-1.2, 0.0);\n        if(mod(i, 2.0) == 0.0){    \n    \t\tp *= vec2(1.8);\n            p = vec2(p.x*cos(-iTime*0.5)-p.y*sin(-iTime*0.5), p.x*sin(-iTime*0.5)+p.y*cos(-iTime*0.5));\n        }\n        else{   \t\t\n            p = vec2(p.x*cos(iTime*0.5)-p.y*sin(iTime*0.5), p.x*sin(iTime*0.5)+p.y*cos(iTime*0.5));\n        }\n        \n        a = atan(p.x, p.y)+PI;\n    \tr = (PI*2.0)/(i+3.0);\n    \td = min(d, cos(floor(0.5+a/r)*r-a)*length(p));\n        \n        \n    }\n    \n    vec3 col = vec3(0.8, 0.0, 0.5) + vec3(smoothstep(0.2, 0.21, d));\n    \n    \n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}