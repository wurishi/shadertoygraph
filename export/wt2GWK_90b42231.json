{"ver":"0.1","info":{"id":"wt2GWK","date":"1561328817","viewed":561,"name":"VoroHearts","username":"MeDope","description":"Thanks https://www.shadertoy.com/user/BigWIngs for great tutorials!\nJust found that outdated shader and decided to update it a little bit. Looks much better now. At least in my opinion xD","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","noise","heart","glow","blue","hearts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t (iTime+12.0)\n\nvec2 rotate(vec2 p, float a)\n{\n    float s = sin(a), c = cos(a);\n    return p * mat2x2(c,s,-s,c);\n}\n\nvec2 hash22(vec2 p) \n{\n    return fract(sin(vec2(dot(p,vec2(65.1375,23.7513)),dot(p,vec2(37.97844, 17.9753))))*47354.71168); \n}\n\n// The MIT License\n// Copyright Â© 2021 Inigo Quilez\n// (Added scale)\nfloat sdHeart(vec2 p, float s)\n{\n    #define dot2(x) dot(x, x)\n    p.y += s * 0.5833333;\n    p.x = abs(p.x);\n    if (p.y + p.x > s) return sqrt(dot2(p - vec2(0.25, 0.75) * s)) - s * sqrt(2.0) / 4.0;\n    return sqrt(min(dot2(p - vec2(0.0, s)), dot2(p - 0.5 * max(p.y + p.x, 0.0)))) * sign(p.x - p.y);\n}\n\nfloat vorohearts(vec2 uv)\n{\n    #define scale 0.3\n    vec2 i = floor(uv / scale);\n    vec2 p = mod(uv, scale);\n\tfloat md = 1e1;\n    for(int x = -1; x <= 1; x++)\n\t{\n    \tfor(int y = -1; y <= 1; y++)\n    \t{\n        \tvec2 ro = hash22((i + vec2(x, y)) * scale);\n            float rnd = ro.x + ro.y;\n\t    \tvec2 rp = p - ((sin(ro * 7.0 + t * 0.3) * 0.5 + 0.5) + vec2(x, y)) * scale;\n            rp = rotate(rp, 0.5 * t * (rnd - 1.0));\n            rp.x *= 1.0 + sin(0.5 + sin(6.0 * (t+rnd))) * 0.03;\n    \t\trp.y *= 0.9 + sin(1.5 + sin(3.0 * (t+rnd))) * 0.1;\n    \t\tfloat d = sdHeart(rp, 0.08 + rnd * 0.08);\n        \tif (d < md) md = d;\n    \t}\n    }\n    #undef scale\n    return md;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord - .5*iResolution.xy) / iResolution.y;\n    \n    uv.y += t * 0.1;\n    \n\tfloat d = vorohearts(uv);\n    vec3 col = (abs(0.01 / min(-d, 0.0)) + d) * vec3(0.05, 0.2, 0.9);\n\n    fragColor = vec4(col, 1);\n}","name":"Image","description":"","type":"image"}]}