{"ver":"0.1","info":{"id":"NsKBDd","date":"1659102326","viewed":242,"name":"2D SDF Examples","username":"ewine","description":"Some nice shapes","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//SDF functions credit: https://iquilezles.org/articles/distfunctions2d/\n\nfloat circleSDF(vec2 p, float r){\n    return length(p)-r;\n}\n\nfloat roundedRectSDF( in vec2 p, in vec2 b, in float r )\n{\n    vec2 q = abs(p)-b+r;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r;\n}\n\nfloat lineSegmentSDF( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nfloat triangleSDF( in vec2 p )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - 1.0;\n    p.y = p.y + 1.0/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0, 0.0 );\n    return -length(p)*sign(p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //16/9 or 1.77778\n    float aspect = iResolution.x / iResolution.y;\n    \n    //0,0 -> 1,1\n    vec2 uv = fragCoord / iResolution.xy;\n   \n    //-1,-1 -> 1,1\n    uv = uv*2.0 - vec2(1.0);\n    //Correct for aspect ratio by shrinking the X\n    uv.x*=aspect;\n    \n    //BG Color\n    vec3 col = vec3(0.9,0.92,0.81);\n\n    //Amount of smoothness for anti-aliasing\n    float px = 2.0*aspect/iResolution.x;\n\n    //Rounded rectangle\n    float a = sin(iTime)*0.1;\n    vec2 p = mat2(cos(a),-sin(a),sin(a),cos(a))*uv;\n    float shadow = smoothstep(-0.06,0.0,roundedRectSDF(p,vec2(0.4,0.3),0.1));\n    col*=0.5+shadow*0.5;\n    p-=vec2(-0.05,0.05);\n    col = mix(col,vec3(0.2,0.6,0.9),smoothstep(px,-px,roundedRectSDF(p,vec2(0.4,0.3),0.1)));\n    \n    //Red circle\n    p = uv + vec2(1.0+sin(iTime)*0.1,0.6);\n    col = mix(col,vec3(0.9,0.0,0.1),smoothstep(px,-px,circleSDF(p,0.2)));    \n    \n    //Green donut\n    p = uv + vec2(-1,-0.5);\n    float ringThickness = 0.1+(sin(iTime)*0.5+0.5)*0.05;\n    col = mix(col,vec3(0,0.8,0.2),smoothstep(px,-px,abs(circleSDF(p,0.3))-ringThickness));\n    \n    //Pink rounded triangle\n    a = iTime*0.2;\n    p = uv + vec2(1.1,-0.4);\n    p = mat2(cos(a),-sin(a),sin(a),cos(a))*mat2(3.0,0.0,0.0,3.0) * p;\n \n    col = mix(col,vec3(0.9,0.2,0.7),smoothstep(px,-px,triangleSDF(p)-0.1));\n    \n    //Line segment\n    p = uv;\n    float thickness = 0.1;\n    float stretch = sin(iTime)*0.1;\n    col = mix(col,vec3(0.3,0.4,0.5),smoothstep(px,-px,lineSegmentSDF(p,vec2(0.5,-0.7+stretch),vec2(1.3,-0.3-stretch))-thickness));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}