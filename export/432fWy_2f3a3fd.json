{"ver":"0.1","info":{"id":"432fWy","date":"1729885983","viewed":30,"name":"Quadratic BÃ©zier Curve ","username":"paraskhosla3903","description":"Quadratic Bezier Curve\nControl Points (P0-Red, P1-Green, P2-Blue)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// c is circle center, p is point on circle\nfloat Circle(vec2 p, vec2 c){\n    float r = length(p-c);\n    return smoothstep(fwidth(r), 0., r-.03);\n}\n\n// a,b are line endpoints; p is point on line\nfloat Line(vec2 p, vec2 a, vec2 b){\n    vec2 pa = p-a, ba = b-a;\n    float t = clamp(dot(pa,ba)/dot(ba,ba), 0., 1.);\n    vec2 c = a+ba*t;\n    float d = length(c-p);\n    return smoothstep(fwidth(d), 0., d-.001);\n}\n\nvec2 bezier(vec2 a, vec2 b, vec2 c, float t){\n    return mix(mix(a,c,t), mix(c,b,t), t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.x;\n    vec3 col = vec3(0);\n    \n    /*\n    col += Circle(uv, vec2(0));\n    col += Line(uv, vec2(-.2, -.2), vec2(.2, .2));\n    */\n    \n    float t = sin(iTime)*.5+.5; // 0<=t<=1\n    \n    vec2 \n        P0 = vec2(-.4, -.2), \n        P2 = vec2(.4, .2),\n        P1 = (iMouse.xy-iResolution.xy*.5)/iResolution.x,\n        P01 = mix(P0, P1, t),\n        P12 = mix(P1, P2, t),\n        P0112 = mix(P01, P12, t);\n    \n    // vec3(R,G,B)\n    col += vec3(1,0,0)*Circle(uv, P0);\n    col += vec3(0,0,1)*Circle(uv, P2);\n    col += vec3(0,1,0)*Circle(uv, P1);\n    \n    col += vec3(1,1,0)*Circle(uv, P01);\n    col += vec3(0,1,1)*Circle(uv, P12);\n    col += vec3(1,1,1)*Circle(uv, P0112);\n    \n    col += Line(uv,P01,P12);\n    \n    int NUM_SEGS = 25;\n    vec2 P, PP=P0;\n    \n    for(int i=1; i<=NUM_SEGS; i++){\n        t = float(i)/float(NUM_SEGS);\n        P = bezier(P0, P2, P1, t);\n        col = max(col,Line(uv, P, PP));\n        PP = P;\n    }\n    \n    col += Line(uv,P0,P1)+Line(uv,P1,P2);\n   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}