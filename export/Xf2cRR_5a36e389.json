{"ver":"0.1","info":{"id":"Xf2cRR","date":"1721846438","viewed":32,"name":"Stern-Brocot Fractal [205 chars]","username":"rikr","description":"I always wanted to make some visuals using the Stern-Brocot tree or the Minkowski Questionmark Function as they are really cheap to compute having properties of fractal curves as well as periodicity. Made by Rik Riesmeijer in 246 characters. Golf by @Xor!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","tree","coloring","sternbrocot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Stern-Brocot Fractal\n// Made by Rik Riesmeijer, 2024 - No rights reserved.\n\n/* @Xor improved it! @Xor's version:*/\nvoid mainImage(out vec4 c, vec2 v) {\n    // Pixel coordinate bits interpreted as tree location.   \n    vec4 l = vec4(1, 2, 0, 1), r = l.xxxx; // preselect the branches.\n    for(ivec2 i = ivec2(v / exp2(fract(iTime*.2))); i.x>0 && i.y>0; i/=2) \n       i.x % 2>0? // Stern-Brocot tree branch x axis.\n            l.xy += r.xy:\n            r.xy += l.xy,\n       i.y % 2>0? // Stern-Brocot tree branch y axis.\n            l.zw += r.zw:\n            r.zw += l.zw;\n    \n    c = l.xwzy/length(l); // Arbitrary nice coloring.\n}\n\n/* @SnoopethDuckDuck made a very short, but very good looking altered version:\n\nvoid mainImage(out vec4 c, vec2 v) { \n    c *= 0.;\n    c.y++;\n    for (ivec2 i = ivec2(v+vec2(iTime*30.,0)), j; i.y > 0; i /= 2)\n        j = i % 4, // was % 2\n        c[1-j.x] += c[j.x],\n        c[1+j.y] += c[2-j.y],\n        c *= .6;\n    c = sqrt(c);\n} */\n\n/* Original:\n\nvoid mainImage(out vec4 c, vec2 v) {\n    // Pixel coordinate bits interpreted as tree location.   \n    vec4 l = vec4(1, 2, 0, 1), r = l.xxxx; // preselect the branches.\n    ivec2 i = ivec2(4.0 * v - 2.0 * v * fract(0.2 * iTime));\n    for(; min(i.x, i.y) > 0; i = i >> 1) {\n        if(1 == (i.x & 1)) // Stern-Brocot tree branch x axis.\n            l.xy += r.xy;\n        else\n            r.xy += l.xy;\n        if(1 == (i.y & 1)) // Stern-Brocot tree branch y axis.\n            l.zw += r.zw;\n        else\n            r.zw += l.zw;\n    }\n    c = c = normalize(l.xwzy); // Arbitrary nice coloring.\n}*/","name":"Image","description":"","type":"image"}]}