{"ver":"0.1","info":{"id":"wdKBWm","date":"1607328482","viewed":323,"name":"percolation 1","username":"FabriceNeyret2","description":"Percolation with 8-connexity (green) and 4-connexity (blue). propag only towards top.\nThe proportion on empty space is decreasing vertically from 50% ( bottom ) to 17% (top).\nLeft: white noise. Right: blue noise.\nClick to zoom pattern.","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["simulation","short","percolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// see full diffusion version here: https://www.shadertoy.com/view/tsVfzd\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    O = T(u);\n    if ( O.yz == vec2(0) ) O += O.w; // substrate (draw where not yet colored by percolation )\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2  R = iResolution.xy,\n          U = u / R,\n          P = ( u + vec2(iFrame,0) );\n    if (iMouse.z>0.) P /= 2.;                                 // zoom pattern\n    float g = 1. + 2.*U.y; // exp2(3.*U.y);\n    int L = int(R.x/2.),\n        x = int (u.x) - L,\n        t = (iFrame/256)%4;                                   // hack to emulate a 1024 white noise texture\n    \n    O-=O;\n    if      (x==  0) O.r = 1.;                                // inject texture on right subwindow column\n    else if (x== -1) O.w = step( g * texelFetch(iChannel1, ivec2(P)%256 , 0)[t] , 1. ); // white noise\n    else if (x==L-1) O.w = step( g * texelFetch(iChannel2, ivec2(P)%1024, 0).x  , 1. ); // blue noise\n    else O = T(u+vec2(1,0));                                  // scroll\n        \n    u.x++;\n    if (u.y==.5) O.yz++;                                      // seed fluid for percolation in .yz\n    else \n        if(T(u).w > 0. &&  abs(x) > 1  ) {\n#define pull(l,x,y)  O.l = max( O.l, T(u+vec2(x,y)).l )       // pull contrib from(x,y)\n            for( int i=0; i<6; i++ ) pull(y, i%3-1, i/3-1 );  // 8-connexity layer in y\n            pull(z, 0,-1); pull(z, -1,0); pull(z, 1,0);       // 4-connexity layer in z\n        }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(u) texelFetch(iChannel0, ivec2(u), 0 )\n","name":"Common","description":"","type":"common"}]}