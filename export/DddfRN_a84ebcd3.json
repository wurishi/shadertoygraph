{"ver":"0.1","info":{"id":"DddfRN","date":"1696927941","viewed":327,"name":"FBM_TEST_01","username":"willis","description":"reproduction :\nhttps://twigl.app/?ol=true&ss=-NNIajM4aEzy75lqtAUd","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["2d","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://twigl.app/?ol=true&ss=-NNIajM4aEzy75lqtAUd\n//FabriceNeyret2, 2023-10-10\n//continuing the series around https://www.shadertoy.com/view/clXXDl\n//also shares some of https://www.shadertoy.com/view/dd2BR1\n\n\n#define Sat(a) clamp(a, 0., 1.)\n#define getN(p) normalize(cross(dFdx(p), dFdy(p)))\n\nmat2 rot(float a){\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = (fragCoord - iResolution.xy * 0.5)/iResolution.y;\n    \n    vec2 n, q, u = vec2(uv);\n    float d = dot(u, u), s = 9., t = iTime, o, j;\n    \n    for(mat2 m = rot(5.);j < 16.; j++){\n        u *= m;\n        n *= m;\n        q = u * s + t * 4. + sin(t * 4. - d * 6.) * 0.8 + j + n;\n        o += dot(cos(q)/s, vec2(2.));\n        n -= sin(q);\n        s *= 1.2;\n    }\n\n    vec3 N = getN(vec3(u, o));\n    \n    vec4 col = vec4(pow(Sat(dot(N, normalize(vec3(0.7, 0.5, 1)))), 5.));\n    \n    col += mix(vec4(1., .2, .3, 0), vec4(4, 2, 1, 0), tanh(o * 0.5));  \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}