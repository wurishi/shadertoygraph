{"ver":"0.1","info":{"id":"3djGRc","date":"1549551431","viewed":98,"name":"Coherent Random Color Palette","username":"amally","description":"Generating random colors from a seed color, demo for class.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 seedColor = vec3(1.0, 0.5, 0.5);\nconst float colorOffset = 0.1;\n\n#define CONTINUOUS 0\n\nfloat random1(float t) {\n    return 2.0 * fract(sin(t * 489.12342) * 348921.32457) - 1.0;\n}\n\nvec3 remapColor(vec3 c, float offset, float seed) {\n    float ro = random1(seed) * offset;\n    float go = random1(seed + 31242.134) * offset;\n    float bo = random1(seed + 73576.347) * offset;\n    \n    return clamp(vec3(c.r + ro, c.g + go, c.b + bo), 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #if CONTINUOUS\n    float t = iTime + fragCoord.x / iResolution.x * 6.0;\n    float x = floor(t);\n    float f = smoothstep(0.0, 1.0, fract(t));\n    vec3 colorA = remapColor(seedColor, colorOffset, x);\n    vec3 colorB = remapColor(seedColor, colorOffset, x + 1.0);\n    fragColor = vec4(mix(colorA, colorB, f), 1.0);\n    #else\n    float x = iTime + floor(fragCoord.x / iResolution.x * 6.0) + floor(fragCoord.y / iResolution.y * 3.0) * 5.0;\n    float a = floor(x);\n    float t = fract(x);\n    vec3 colorA = remapColor(seedColor, colorOffset, a);\n    vec3 colorB = remapColor(seedColor, colorOffset, a + 1.0);\n    \n    fragColor = vec4(mix(colorA, colorB, t), 1.0);\n    #endif\n}","name":"Image","description":"","type":"image"}]}