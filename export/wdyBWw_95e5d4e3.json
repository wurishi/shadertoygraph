{"ver":"0.1","info":{"id":"wdyBWw","date":"1607299116","viewed":137,"name":"hoeled_swirl","username":"hoeled","description":"Rotated rectangles.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["swirl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 Rot(float a) {\n\tfloat s = sin(a), c = cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Square(vec2 uv, float size) {\n\tvec2 s = abs(uv) - vec2(size);\n    float square = length(max(s, .0));\n    square = smoothstep(.001, .0, square);\n    return square;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(1.06);\n    float t = sin(4.+(sin(iTime)*.2+.2));\n    uv *= .35;\n    uv *= Rot(sin(iTime*.5));\n    \n    for(float i=.0; i<20.5; i=i+.1) {\n    \tuv *= Rot(.049);\n        float size = .01 * i;\n        col.bg -= i*.0001;\n        float strength = .0037;\n        col -= Square(uv, size)*strength;\n    }\n    \n    col *= col*2.;\n    \n    float d = length(uv);\n    \n    vec2 fs = vec2(.0, .47);\n    float focus = smoothstep(fs.x, fs.y, d);\n    col += focus;\n    \n    col += smoothstep(.05, .00, d)*.05;\n    \n    col.g += smoothstep(0.06, 0.3, d);\n    col.r -= smoothstep(0.06, 0.3, d);\n    col = clamp(col, 0., 1.);\n    col -= vec3(.22, 1., 1.);\n    \n    col.b = col.r*.3;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}