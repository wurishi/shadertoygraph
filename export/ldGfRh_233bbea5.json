{"ver":"0.1","info":{"id":"ldGfRh","date":"1527579760","viewed":543,"name":"流动电流效果原理","username":"jcyuan","description":"原作品：https://www.shadertoy.com/view/4sl3Dr，这个只是写的一个简单版本来解释它是如何工作的。","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// 2D random numbers\nvec2 rand2(in vec2 p)\n{\n\treturn fract(vec2(sin(p.x * 591.32 + p.y * 154.077), cos(p.x * 391.32 + p.y * 49.077)));\n}\n\n// voronoi distance noise, based on iq's articles\nfloat voronoi(in vec2 x)\n{\n\tvec2 p = floor(x);\n\tvec2 f = fract(x);\n\t\n\tvec2 res = vec2(8.0);\n\tfor(int j = -1; j <= 1; j ++)\n\t{\n\t\tfor(int i = -1; i <= 1; i ++)\n\t\t{\n\t\t\tvec2 b = vec2(i, j);\n\t\t\tvec2 r = vec2(b) - f + rand2(p + b);\n\t\t\t\n\t\t\t// chebyshev distance, one of many ways to do this\n\t\t\tfloat d = max(abs(r.x), abs(r.y));\n\t\t\t\n\t\t\tif(d < res.x)\n\t\t\t{\n\t\t\t\tres.y = res.x;\n\t\t\t\tres.x = d;\n\t\t\t}\n\t\t\telse if(d < res.y)\n\t\t\t{\n\t\t\t\tres.y = d;\n\t\t\t}\n\t\t}\n\t}\n\treturn res.y - res.x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;   //标准化\n\tuv = (uv - 0.5) * 2.0;                      //坐标变换为-1至1\n\tvec2 suv = uv;                              //记录原始uv\n\tuv.x *= iResolution.x / iResolution.y;     //画面等比率\n\t\n\tfloat v = 0.0;                              //混合场结果\n\t\n    const float sz = 4.0;                       //尺寸\n    \n\tfloat v1 = voronoi(uv * sz + 5.0);   //第一层\n\tfloat v2 = voronoi(uv * sz * 0.5 + 50.0 + iTime);   //第二层\n\t\n    float va = 1.0 - smoothstep(0.0, 0.1, v1);   //根据第一层场生成边缘\n\tfloat vb = 1.0 - smoothstep(0.0, 0.08, v2);  //根据第二层场生成边缘\n    \n    //根据vb及va域差值来提高va域的亮度达到流动效果\n    v += pow(va * (0.5 + vb), 2.0);\n\t\n\t//去掉注释显示第二层域的工作原理\n\t//v += v2;\n\t\n\t//根据原始uv坐标添加vignette\n\t//v *= exp(-.6 * length(suv)) * 1.2;\n\t\n    //混合颜色\n    //使用蓝色\n    vec3 col = pow(vec3(v), vec3(6., 2., 1.)) * 1.2;\n    //使用灰色比较明显\n    col = vec3(v);\n\t\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}