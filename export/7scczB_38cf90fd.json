{"ver":"0.1","info":{"id":"7scczB","date":"1653629893","viewed":175,"name":"cmyk color d0ts tunnel","username":"HaleyHalcyon","description":"Tune some properties using #define","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TURN (6.283185307)\n#define HEX(x) (vec3((x >> 16) & 255, (x >> 8) & 255, x & 255) / 255.)\n\nvec3 color(float r, float aa) {\n    r = fract(r);\n    float mix0 = smoothstep(0., aa, r);\n    float mix1 = smoothstep(0., aa, r - 0.25);\n    float mix2 = smoothstep(0., aa, r - 0.5);\n    float mix3 = smoothstep(0., aa, r - 0.75);\n    \n    vec3 color0 = HEX(0x009BE8);\n    vec3 color2 = HEX(0xfff100);\n    vec3 color1 = HEX(0xEB0072);\n    vec3 color3 = HEX(0x010a31);\n    \n    return (\n        color0 * (mix0 - mix1) +\n        color1 * (mix1 - mix2) +\n        color2 * (mix2 - mix3) +\n        color3 * (mix3 - mix0 + 1.)\n    );\n}\n\n#define ZIGZAG(x) 1. - abs(1. - 2. * fract(x))\n\n\n// Overall speed of the animation. 1.0 = loop once every second, 0.5 = loop once every 2 seconds, etc.\n#define SPEED 1./2.\n\n// How many dots in a circle.\n#define ANGLEMULTI 15.\n\n// How thick each ring should be.\n#define RINGWIDTH 4.75\n// How spaced out the rings should be.\n#define RINGSPACE 1.4\n// How large each dot should be. (max 1 or else the circles get stuck together)\n#define DOTRADIUS 0.7\n\n// How many rings of dots in total to render.\n// The outer few rings migth be out of render range.\n#define DEPTH 64.\n// How many rings to zoom in per loop. Should be an even integer because of the stagger.\n#define ZOOMSPEED 6.\n\n// How distance-dense the colors should be.\n#define SPIRALDIST 0.10\n// How many loops of colors the spiral should do per rotation.\n#define SPIRALANGLE 2.\n// How fast the spiral's colors should move.\n#define SPIRALSPEED -00.\n\n// Wthether or not to smooth the outline of the dots and colors.\n#define ANTIALIAS 1\n\nvec2 angleVec(float angle) {\n    return vec2(cos(angle), sin(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime * SPEED);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy) / length(iResolution.xy);\n    \n    float angle = atan(uv.y, uv.x) / TURN;\n    vec2 cbcr = vec2(0);\n    \n    float ioffset = mod(t * ZOOMSPEED, 2.) * RINGSPACE;\n\n    for (float i = 0.; i < DEPTH; i++) {\n        float alpha = clamp(ioffset + i - 2., 0., 1.);\n        float z = (DEPTH - i) * RINGSPACE - ioffset - 1.;\n        alpha *= clamp(z * 2., 0., 1.);\n        float stagger = 0.5 * step(1., mod(i, 2.));\n        float layerAngle = angle * ANGLEMULTI + stagger;\n        float layerRound = (round(layerAngle) - stagger) / ANGLEMULTI;\n        float layerAngleDist = ZIGZAG(layerAngle);\n        float layerDist = (1. -\n            log(length(uv) * z * RINGSPACE)\n        ) * RINGWIDTH;\n        \n#if ANTIALIAS\n        float layerV = smoothstep(\n            DOTRADIUS, DOTRADIUS - 1.5 * fwidth(layerDist),\n            length(vec2(layerDist,layerAngleDist))\n        );\n#else\n        float layerV = step(\n            layerDist * layerDist + layerAngleDist * layerAngleDist, DOTRADIUS\n        );\n#endif\n        \n        vec2 colLayer = angleVec((\n            layerRound * SPIRALANGLE + z * SPIRALDIST + t * SPIRALSPEED\n        ) * TURN);\n        //colLayer = angleVec(i);\n    \n        cbcr = mix(cbcr, colLayer, layerV * alpha);\n    }\n\n    // Time varying pixel color\n    float bgv = step(0.5, ZIGZAG(2.2 * log(length(uv))));\n    bgv = mix(bgv, 1. - bgv, step(0.5, ZIGZAG(angle * 12.0)));\n    vec3 col = mix(\n        vec3(1), HEX(0xC4D7F0),\n        bgv\n    );\n#if ANTIALIAS\n    vec3 rawcol = color(atan(cbcr.y, cbcr.x) / TURN, 0.2);\n#else\n    vec3 rawcol = color(atan(cbcr.y, cbcr.x) / TURN, 0.0);\n#endif\n    col = mix(\n        col, rawcol,\n        min(1.0, length(cbcr))\n    );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}