{"ver":"0.1","info":{"id":"Nsc3Rn","date":"1628945701","viewed":255,"name":"Hyperbolic checkerboard","username":"kaihagseth","description":"Checkerpattern in hyperbolic space","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["hyperbolicgeometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float checker(in vec2 st)\n{\n  const float checkSize = 3.0;\n  vec2 tile = abs( mod(checkSize * st, 2.) - 1.);\n  tile = smoothstep( checkSize*length(fwidth(st)),0.,tile-.5);\n  tile = tile*2.-1.;\n  return tile.x*tile.y *.5 + .5;\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Set coordinate system from -1.5 to 1.5 on y-axis\n    // dist 1.0 is where distance will go to infinite in hyperbolic space.\n    vec2 uv = 1. * ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    uv = rotate2d(iTime/5.) * uv;\n    \n    //Transfrom to hyperbolic space.\n    if (length(uv) > .5) {\n        fragColor = vec4(vec3(1),1.);\n        return;\n    }\n    uv /=  (1. / (length(uv) + .5) ) - 1.;\n    uv += vec2(iTime, 2.*sin(iTime/3.));\n    fragColor = vec4(vec3(checker(uv)),1.);\n}","name":"Image","description":"","type":"image"}]}