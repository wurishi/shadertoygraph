{"ver":"0.1","info":{"id":"MsSBWz","date":"1500029355","viewed":153,"name":"Austin Powers Accident","username":"Flopine","description":"Homework #1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","cube","green"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere(vec3 pos, float r)\n{\n    return length(pos)-r;\n}\n\nfloat box (vec3 pos, vec3 corner)\n{\n    return length(max(abs(pos) - corner,0.));\n}\n\nmat2 rotate(float angle)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c,-s,s,c);\n}\n\nvec3 albedo (vec3 pos)\n{\n\tpos *= 0.2;\n\t\n\tfloat f = smoothstep (0.08, 0.9, fract(pos.z));\n\t//return fract(pos.z) * vec3(0.0,1.0,0.0);\n\treturn f*vec3 (0.5,0.8,0.1)*8.0;\n}\n\nfloat SDF(vec3 pos)\n{\n    pos.z = mod(pos.z+4.,8.)-4.;\n    pos.xy = pos.xy*rotate(sin(iTime*2.0)+1.);\n    pos.yz = pos.yz*rotate(sin(iTime*0.9)+1.);\n    return max(-sphere(pos,1.9),box(pos, vec3(1.5)));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*(fragCoord.xy / iResolution.xy) -1.;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 pos = vec3 (0.,0.,-2.5*iTime*0.6);\n    vec3 frust = vec3 (uv*0.1,1.);\n    vec3 color = vec3(0.);\n    \n    for (int i = 0; i<120; i++)\n    {\n        float d = SDF(pos);\n        if (d<0.001)\n        {\n           color = albedo(pos); \n           break;\n        }   \n        \t\n        pos += d*frust;\n    }\n    \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}