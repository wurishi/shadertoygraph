{"ver":"0.1","info":{"id":"lffBW4","date":"1724086088","viewed":28,"name":"gamer turf wwar","username":"420bongrips247365","description":"linksys","likes":0,"published":3,"flags":4,"usePreview":0,"tags":["zelda"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy shader - Enhanced Audio Reactive\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Distance from the center\n    float d = length(uv);\n    \n    // Get audio input from iChannel0 (assuming iChannel0 is the audio texture)\n    float audioReactive = texture(iChannel0, vec2(01.01, -01.25)).r;\n    float audioReactive2 = texture(iChannel0, vec2(01.05, -01.25)).r;\n\n    // More dynamic time-based modulation\n    float timeMod = iTime * 1000.125 + audioReactive * 200.0;\n    \n    // Enhanced color palette for more vivid visuals\n    vec3 colorA = vec3(0.933,1.000,0.000); // Deep purple\n    vec3 colorB = vec3(1.000,0.000,0.784); // Bright orange\n    vec3 colorC = vec3(0.2, 0.7, 1.0); // Cyan\n    vec3 colorD = vec3(1.0, 0.9, 0.3); // Golden yellow\n    \n    // Color palette using a sine wave function for smoother transitions\n    vec3 col = colorA + colorB * sin(12.566370614 * (colorC * d + colorD * timeMod + audioReactive2 * 90.0));\n\n    // Apply audio reactive distortion\n    d = sin(d * 12020.0 - iTime * 01.25) / (audioReactive + 013.19);\n    d = abs(d);\n    d = smoothstep(0.0008, 0.99, d);\n    d = 0.0001 / d;\n\n    // Amplify the color intensity based on audio\n    col *= d * (3.0 + audioReactive * 9.0);\n    \n    // Final color output with a slight glow effect\n    fragColor = vec4(col, 2.0);\n}","name":"Image","description":"","type":"image"}]}