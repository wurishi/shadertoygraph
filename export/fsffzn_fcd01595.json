{"ver":"0.1","info":{"id":"fsffzn","date":"1644371717","viewed":298,"name":"Feedback Buffer Example","username":"vega","description":"Example how to use buffer. Would have helped me, so maybe helpful to others.","likes":5,"published":1,"flags":34,"usePreview":0,"tags":["example","feedback","buffer"],"hasliked":0,"parentid":"3dsGzs","parentname":"simple buffer example"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    fragColor = vec4(col.rgb, 1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //move everything over, to add motion\n    //You might want to change this value for full screen\n    uv.x = uv.x+.002;\n\n    // get webcam\n    vec4 webcam = texture(iChannel1, uv);\n    \n    // get the the last output\n    vec4 old = texture(iChannel0, uv);\n    \n    //subtract the two, this should leave just the changed pixels\n    //which are what you'll see feedback\n    //the .9 dramatically reduces flicker\n    \n    //basic style\n    //vec4 new = webcam - old*.9;\n    \n    // alternative styles\n    //vec4 new = smoothstep(webcam,old-.1,vec4(.5));\n    //vec4 new = webcam.bgra - old.bgga*.9 + .5 * sin(texture(iChannel1, (cos(uv+.5))));\n    vec4 new = atan(smoothstep(webcam,old-.1,vec4(.5))); //this one is using asin 'clipping' to chill out the signal\n    \n    //use this to reset the screen\n    //new = vec4(1.0);\n\n    // Output to screen\n    fragColor = new;\n}","name":"Buffer A","description":"","type":"buffer"}]}