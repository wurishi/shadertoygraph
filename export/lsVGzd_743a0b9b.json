{"ver":"0.1","info":{"id":"lsVGzd","date":"1456031838","viewed":224,"name":"Wind Ripple","username":"gaz","description":"3d","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265359\n#define PIH PI/2.0\n\nmat2 rotate(float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nmat3 lookat(in vec3 eye, in vec3 target)\n{\n\tvec3 w = normalize(target-eye);\n\tvec3 u = normalize(cross(w,vec3(0.0,1.0,0.0)));\n\tvec3 v = normalize(cross(u,w));\n    return mat3(u,v,w);\n}\n\nfloat gaussian(in float t)\n{\n    return exp(-t*t);\n}\n\nvec2 fold(in vec2 p, in float a)\n{\n    p.x = abs(p.x);\n    vec2 v = vec2(cos(a),sin(a));\n    for(int i=0;i<6;i++)\n    {\t\n    \tp -= 2.0*min(0.0,dot(p,v))*v;\n    \tv = normalize(vec2(v.x-1.0,v.y));\n    }\n \treturn p;    \n}\n\nfloat map(in vec3 p)\n{   \n    float t = iTime*0.2;\n \tfloat de = length(p)-1.0;\n    de -= 0.015*gaussian(fold(p.xy*50.0,t+PIH).x);\n    de -= 0.015*gaussian(fold(p.yz*50.0,t-PIH).x);\n    de -= 0.015*gaussian(fold(p.zx*50.0,t).x);    \n    return de;\n}\n\nvec3 doColor(in vec3 p)\n{\n    return normalize(abs(p));\n}\n\nvec3 calcNormal(in vec3 pos)\n{\n    vec2 e = vec2(1.0,-1.0)*0.001;\n    return normalize(\n        e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n        e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p2 = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0);\n    vec3 ro = vec3(0.8);\n    vec3 rd = normalize(vec3(p2,2.0));\n    ro.xz *= rotate(iTime*0.3);\n    rd = lookat(ro, vec3(0.0))*rd;\n    float maxd = 10.0;\n    float t = 0.0, d;\n    for(int i=0;i<64;i++)\n    {\n        t += d = map(ro+rd*t);\n        if(d<0.001 || t>maxd) break;\n    }\n    if(t<maxd)\n    {\n        vec3 p = ro+t*rd;\n        vec3 nor = calcNormal(p);\n\t\tcol = doColor(p);\n\t\tvec3 li = normalize(vec3(2.0,3.0,3.0));\n        float dif = clamp(dot(nor,li),0.0,1.0);\n        float amb = max(0.5+0.5*nor.y,0.0);\n        float spc = pow(clamp(dot(reflect(rd, nor),li),0.0,1.0),10.0);\n        col *= clamp(0.0,1.0,max(dif,0.3)*amb+spc);\n        col = mix(vec3(1.0),col,exp(-t*t*0.0015));\n\t\tcol = pow(col, vec3(0.7));\n    }\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}