{"ver":"0.1","info":{"id":"McVyRw","date":"1731646344","viewed":35,"name":"morphing orb stuff","username":"bkzzz","description":"uhh","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gradient(float t) {\n    vec3 col1 = vec3(.03, .34, .29);\n    vec3 col2 = vec3(.77, .53, .86);\n    vec3 col3 = vec3(.04, .64, .52);\n    vec3 col4 = vec3(.87, .95, .75);\n    if (t < 0.333) return mix(col1, col2, t * 3.0);\n    if (t < 0.666) return mix(col2, col3, t * 3.0 - 1.0);\n    return mix(col3, col4, t * 3.0 - 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel1, uv);\n    col = 1.0 - vec4(smoothstep(col.r, 0.74, 0.25)) - vec4(smoothstep(col.r, 0.74, 0.2));\n    col.rgb = 1.0 - gradient((col.r + col.g + col.b) * 0.3333);\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float yfactor = iResolution.y / iResolution.x;\n    vec2 uv = (fragCoord/iResolution.xy - vec2(0.5)) * vec2(1.0, yfactor);\n    float t = 20.0 * round(fract(iTime * 0.25) * 4.0);\n    float a = 1.0;\n    float theta = 4.4 * iTime;\n    float i = 0.096 * sin(theta);\n    mat2 rot = mat2(cos(theta), sin(theta), -sin(theta), cos(theta));\n    vec3 col1 = vec3(0.5 * sin(iTime * a + t * distance(uv, rot * vec2(0.0, i))) + 0.5);\n    vec3 col2 = vec3(0.5 * sin(iTime * a + t * distance(uv, rot * vec2(0.0, -i))) + 0.5);\n    vec3 col = mix(col1, col2, 0.5) * exp(- distance(uv, vec2(0.0, -i)));\n    \n    col.r = smoothstep(0.58, 0.36, col.r);\n    col.g = smoothstep(0.54, 0.33, col.g);\n    col.b = smoothstep(0.52, 0.41, col.b);\n    \n    col = mix(col, vec3(1), 1.0 - smoothstep(0.45, 0.58, exp(- 4.0 * distance(uv, vec2(0.0)))));\n    col = mix(col, vec3(1), 1.0 - smoothstep(0.50, 0.51, exp(- 4.0 * distance(uv, vec2(0.0)))));\n    col = mix(col, vec3(0.9), 1.0 - smoothstep(0.499, 0.501, exp(- 4.0 * distance(uv, vec2(0.0)))));\n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = mix(texture(iChannel0, uv), texture(iChannel1, uv + vec2(0.0, 0.001)), 0.92);\n    fragColor = col;\n}","name":"Buffer B","description":"","type":"buffer"}]}