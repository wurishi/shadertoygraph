{"ver":"0.1","info":{"id":"WlGGz3","date":"1579433985","viewed":95,"name":"egg shader","username":"alarch","description":"fake 3d thing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["egg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float metaCalc(vec2 uv, vec3 pos)\n{\n    float amplitude = (pos.x*pos.x)+(pos.y*pos.y)+(pos.z*pos.z);\n    return 1.0/amplitude;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    vec3 pos = vec3(0.1*cos(iTime),0.3*cos(iTime),0.5);\n    vec3 pos2 = vec3(-0.1,-0.3,0.0)*sin(iTime);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= 0.5; // set center/origo to vec2(0.0,0.0);    \n    uv.x *= iResolution.x/iResolution.y; // how do you really do aspect ratio?    \n    \n    float amplitude1 = metaCalc(uv, vec3(uv.x - pos.x,uv.y - pos.y,pos.z));\n    float amplitude2 = metaCalc(uv, vec3(uv.x - pos2.x,uv.y - pos2.y, pos.z));\n    \n    float amplitude = amplitude1+amplitude2;\n    \n    if(amplitude > 5.0)\n    {\n       float amplitudeColor = amplitude/10.0;\n       float depthColor = amplitudeColor*(pos.z*amplitude1+pos2.z*amplitude2);\n       fragColor = vec4(vec3(depthColor), 0.0);  \n    }\n    else\n    {  \n    \tvec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n        fragColor = vec4(col, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}