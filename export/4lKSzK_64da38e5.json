{"ver":"0.1","info":{"id":"4lKSzK","date":"1485061275","viewed":570,"name":"Worley/Cell Noise","username":"AxleMike","description":"Worley and Cell Noise\nHopefully I'm doing this right.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["2d","noise","worley","cell"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Alexander Lemke, 2017\n\nvec2 Hash2D(in vec2 p)\n{\n    return fract(sin(p * mat2(12.98, 78.23, 127.99, 311.33)) * 43758.54);\n}\n\nvec3 DisplayNoise(in vec4 d)\n{\n    float toggle = mod(floor(iTime * 0.5), 6.0);\n    \n    vec3 color = d.xxx;\n    \n    if(toggle == 1.0) \t\tcolor = vec3(1.0 - d.x);\n    else if(toggle == 2.0) \tcolor = vec3(d.y - d.x);     \n    else if(toggle == 3.0) \tcolor = vec3(d.z - d.y);\n    else if(toggle == 4.0) \tcolor = vec3(d.z - d.x);  \n    else if(toggle == 5.0) \tcolor = d.xyz;   \n    \n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.yy * 12.0;\n    vec2 i = floor(uv);\n    vec2 n = fract(uv);\n    vec4 minD = vec4(9.0);\n    \n    for (float y = -1.0; y <= 1.0; ++y) \n    {\n        for(float x = -1.0; x <= 1.0; ++x) \n        {\n            vec2 point = sin(iTime + 32.0 * Hash2D(i + vec2(x, y))) * 0.5 + 0.5;\n            float d = length(vec2(x, y) + point - n);\n            \n            minD = (d < minD.x) ? vec4(d, minD.xyz) \n               \t : (d < minD.y) ? vec4(minD.x, d, minD.yz) \n               \t : (d < minD.z) ? vec4(minD.xy, d, minD.z) \n               \t : (d < minD.w) ? vec4(minD.xyz, d) \n                 : minD;\n        }\n    }\n    fragColor = vec4(DisplayNoise(minD), 1.0);\n}","name":"Image","description":"","type":"image"}]}