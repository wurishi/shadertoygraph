{"ver":"0.1","info":{"id":"NdcSz8","date":"1632555434","viewed":210,"name":"matrix shader","username":"vandale","description":"matrix effect","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["matrix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    \n    if (uv.x > (.5f + .4f * sin(iTime / 2.0f))){\n        col.x = pow(col.x, 1.5f);\n        col.y = pow(col.y, 0.8f);\n        col.z = pow(col.z, 1.5f);\n    }\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}