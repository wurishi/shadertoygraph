{"ver":"0.1","info":{"id":"3dXcDB","date":"1585430880","viewed":102,"name":"Cartoonish Lava Shader","username":"wobbumash","description":"The yin to my last shader's yang","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","cartoon","lava"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Grayscale(vec4 Texture) {\n    \n\tfloat Median = (Texture.r * 0.2126) + (Texture.g * 0.7152) + (Texture.b * 0.0722);\n    \n    return vec4(vec3(Median), 1.0);\n    \n}\n\nvec2 RotateUV(vec2 UV, float Angle) {\n    \n\tUV -= 0.5;\n    \n    float ModX = (UV.x * cos(Angle)) - (UV.y * sin(Angle));\n    float ModY = (UV.x * sin(Angle)) + (UV.y * cos(Angle));\n    \n    vec2 NewUV = vec2(ModX, ModY);\n    \n    NewUV += 0.5;\n    \n    return NewUV;\n    \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    vec2 UV = fragCoord.xy / iResolution.xy;\n    vec2 RippleUV = UV;\n    vec2 RippleAUV = UV;\n    vec2 RippleBUV = UV;\n    \n    RippleUV -= 0.5;\n    RippleAUV = RippleUV + 0.25;\n    RippleBUV = RippleUV - 0.25;\n    \n    float RippleMod = sin((distance(RippleUV, vec2(0.0, 0.0)) * (3.141592 * 2.0)) - (iTime / 2.0));\n    float RippleAMod = sin((distance(RippleAUV, vec2(0.0, 0.0)) * (3.141592 * 2.0)) - (iTime / 2.0));\n    float RippleBMod = sin((distance(RippleBUV, vec2(0.0, 0.0)) * (3.141592 * 2.0)) - (iTime / 2.0));\n    \n    vec2 TextureAUV = UV;\n    vec2 TextureBUV = UV;\n    \n    float FRippleMod = RippleMod * RippleAMod * RippleBMod;\n    \n    TextureAUV /= 1.0 + (FRippleMod * 0.1);\n    TextureBUV /= 1.0 + (FRippleMod * 0.1);\n    \n    TextureAUV.y += sin(TextureAUV.x + iTime) * 0.1;\n    TextureBUV.y += sin(TextureBUV.x + iTime) * 0.1;\n    \n    vec4 TextureA = Grayscale(texture(iChannel0, TextureAUV));\n    vec4 TextureB = Grayscale(texture(iChannel0, TextureBUV));\n    \n    float TextureAMod = iTime * 0.1;\n    float TextureBMod = iTime * 0.08;\n    \n    vec4 TextureAMask = step(0.1 + (sin(TextureAMod) * 0.05), TextureA);\n    vec4 TextureBMask = step(0.08 + (sin(TextureBMod) * 0.04), TextureB);\n    \n    vec4 Background = vec4(1.0, 0.0, 0.0, 1.0);\n    vec4 ColorA = vec4(0.5, 0.5, 0.0, 1.0) * TextureAMask;\n    vec4 ColorB = vec4(0.5, 0.5, 0.0, 1.0) * TextureBMask;\n    \n    fragColor = Background + ColorA + ColorB;\n    \n}","name":"Image","description":"","type":"image"}]}