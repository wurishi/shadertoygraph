{"ver":"0.1","info":{"id":"XcKSRd","date":"1715628652","viewed":84,"name":"spiral sphere stereographic","username":"DeltaT","description":"spiral sphere thing projected onto a 2d plane","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["map","projection","stereographic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float halfpi = asin(1.);\n\nvec3 plane2sphere(vec2 p) {\n    float r = length(p);\n    float c = 2.*r / (dot(p, p)+1.);\n    return vec3(p*c/r, sin(2.*atan(r)-halfpi));\n}\n\nvec3 rotate(vec3 v, float xz, float yz) {\n    float c1 = cos(yz);\n    float s1 = sin(yz);\n    float c2 = cos(xz);\n    float s2 = sin(xz);\n    vec3 u = vec3(v.x, c1*v.y-s1*v.z, c1*v.z+s1*v.y);\n    return vec3(c2*u.x-s2*u.z, u.y, c2*u.z+s2*u.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 mouse = iMouse.xy == vec2(0) ? vec2(iTime, 0.) : (iMouse.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 v = rotate(plane2sphere(2.*uv), -2.*mouse.x, 2.*mouse.y);\n    vec2 p0 = vec2(atan(v.y, v.x), asin(v.z))/halfpi;\n    vec2 p = mod(2.*p0, 1.);\n    \n    vec3 col = abs(p.x+p.y-0.5) < 0.25 || abs(1.5-p.x-p.y) < 0.25 ? vec3(0., 0.6, 0.9) : vec3(0., 0.4, 0.6);\n    if (p0.x > 0.) col = 1.-col;\n    if (p0.y > 0.) col = 1.-col;\n    if (p0.x > 1. || p0.x < -1.) col = 1.-col;\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}