{"ver":"0.1","info":{"id":"4XSXDy","date":"1710997679","viewed":91,"name":"rain map","username":"totan","description":"rain marching(I just want to say)\n\n//I rewrote this a little(2024/03/23)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define Res iResolution\n#define iMAX 140.0\n#define REACH 0.01\n#define repeat(p,r) (mod(p,r)-r/2.)\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define Mod(p,a) mod(p+a/2.,a)-a/2.\n#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_2 1.57079632679\n\n\n\nstruct RAY{\n    vec3 p;\n    vec3 dir;\n    vec3 Ndir;\n    vec2 tex;\n    float obj;\n    float total_d;\n    vec3 tCol;\n};RAY ray;\n\nfloat hash(float n){return fract(sin(n)*332.123);}\nfloat sdBox( vec3 p, vec3 b ){\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\n\nint m;\n#define cut 20.\n#define cut2 cut*0.5\nfloat MAP(in vec3 p0){\n    \n    \n    float d=0.0,d2=10000000000.;\n        \n        for(float i=0.;i++<6.;){//loop!!!\n        vec3 p=p0;\n        p.x+=hash(i*43.+224.)*18.-9.;\n        p.z+=hash(i*23.+324.)*18.-9.;\n        \n        vec2 mas=p.xz;\n        p.xz=mod(p.xz+cut2,cut)-cut2;\n        mas-=(p.xz);\n        mas=abs(mas*2.)+vec2(mas.x>0.5,mas.y>0.5);\n        \n        float h=hash(mas.x*31.+mas.y*45.+5423.+56.*i);\n        \n        p.x+=h*7.;\n        p.z+=+mod(h*74.,7.);\n    \n        m=int(h*4.);\n        float t=mod(iTime+mod(h*100.,10.),2.)*5.3-2.5;\n        float r=length(p.xz);\n        float y=t,x=r-t;\n        x=1.-tanh(x*x)/PI_2;\n        y=1.-tanh(t*t/16.)/PI_2;\n        x*=x;\n        \n        d+=pow(x*y,8.)*(1.+h*.4);\n        //d=-1.3 *( pow(x*y,8.)  )  +p.y;\n        //d2=min(d,d2);\n        \n    }//loop fin!!!\n    d=-1. *d  +p0.y;\n    return d;\n    \n}\nvec3 getNormal(float d){\n    //vec3 p=ray.p;\n    const vec2 e = vec2(0.001,0.0);\n    #if 1\n    return normalize(\n        vec3(MAP(ray.p + e.xyy) - MAP(ray.p - e.xyy),\n             MAP(ray.p + e.yxy) - MAP(ray.p - e.yxy),\n             MAP(ray.p + e.yyx) - MAP(ray.p - e.yyx)));\n    #else   \n    return normalize(\n        vec3(MAP(ray.p + e.xyy),\n             MAP(ray.p + e.yxy),\n             MAP(ray.p + e.yyx) )-MAP(ray.p));\n    #endif\n            \n}\nvec3 getReflect(vec3 dir,vec3 n){\n    //vec3 n = getNormal(d);\n    return reflect(dir,n);\n}\nbool RM(){\n    vec3 dir = ray.dir;\n    float t_d=0.;\n    for(float d,i=0.0;i++<iMAX || t_d>400.;){\n        #if 0\n        t_d += d = min(MAP(ray.p),1.);\n        #else\n        t_d += d = MAP(ray.p);\n        #endif\n        ray.p+=dir*d;\n        if(d<REACH){\n            ray.Ndir=getNormal(d);\n            if(ray.obj<5.0){\n                ray.total_d=t_d;\n                return true;\n            }\n            dir = getReflect(dir,ray.Ndir);\n        }\n    }\n    return t_d>10.?false : true;\n}\n\nconst vec3[5] col_list= vec3[](vec3(.2, .8, .2),vec3(0.1,.3,0.2),\n      vec3(1.1, 1., .05),vec3(1., .1, .2),vec3(.05, .1, 1.));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-Res.xy*0.5)/Res.y;\n    vec3 dir=normalize(vec3(uv,1.0)),\n         pos=vec3(0.0,23.,-5.);\n    //MOVE(pos,dir);\n    //\n    dir.yz*=rot(-.5);\n    ray.dir=dir;\n    ray.p=pos;\n    ray.obj=1.0;\n    ray.tCol=vec3(0.0);\n    ray.total_d=0.0;\n    vec3 col=vec3(1.0);\n    if( RM() ){\n        float amb = 0.3*ray.Ndir.x+.4*ray.Ndir.y+.6;\n        //col=col_list[m];\n        col=vec3(0.05,0.07,0.7);\n        col*=texture(iChannel0,ray.p.xz/32.).xyz*0.6+0.4;\n        col*=0.057 *  ray.total_d*amb;\n    }\n    else{\n        col=vec3(0.2,0.4,1.0);\n    }\n    col=pow(col, vec3(.4545));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}