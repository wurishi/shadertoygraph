{"ver":"0.1","info":{"id":"flScR3","date":"1649977982","viewed":52,"name":"Bouncy x4","username":"david_dawkins","description":"Based on Let's Get Bouncy!!! by Art of Code","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["bounce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"Lets get bouncy!!\" \n// by Martijn Steinrucken aka BigWings/The Art of Code - 2022\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// \n// Email: countfrolic@gmail.com\n// Twitter: @The_ArtOfCode\n// YouTube: youtube.com/TheArtOfCodeIsCool\n// FX Hash(NFT): https://www.fxhash.xyz/u/The%20Art%20of%20Code\n//\n// This effect is part of a tutorial on YouTube\n// https://youtu.be/BRR7x-uLoWE\n\nfloat Dot(vec2 uv, float x, float y) {\n    x = mix(-.8, .8, x);\n    return smoothstep(.01,.0, length(uv-vec2(x,y))-.02);\n}\n\nfloat Bounce(float x) {\n    float\n        b1 = -4.*(x+.5)*(x-.5),\n        b2 = -16.*(x-.5)*(x-.8),\n        b3 = -8.*(x-.8)*(x-1.);\n        \n    return .4*max(b1, max(b2, b3));    \n}\n\nfloat Bounce2(float x, float r) {\n    float\n        start = -.5,\n        end = .5,\n        width = end-start,\n        center,\n        val = 0.;\n    \n    int NUM = 16;\n    \n    x *= 1./(1.-r) -.5;\n    \n    for(int i=0; i<NUM; i++) {\n        center = (start+end)/2.;\n\n        float bounce = -(x-start)*(x-end);\n        bounce /= -(center-start)*(center-end);\n        bounce *= width;\n        val = max(val, bounce);\n\n        start = end;\n        width *= r;\n        end += width;\n        center = (start+end)/2.;\n        \n        if(width<1e-3) break;\n    }\n    \n    return .4*val;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 M = iMouse.xy/iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    float t = fract(iTime*.3);//min(1., iTime);\n    float x = (uv.x+.8)/1.6;    \n    float r = 1.-M.x;\n    \n    col += vec3(0,1,0)*Dot(uv, t, Bounce2(t, r)); // draw ball\n    \n    //if(uv.y<0.)\n    //col += fract(-log2(1.-x)); \n    \n    col += smoothstep(.01,.0,abs(uv.y-Bounce2(x, r)));   // draw graph \n   \n    col += vec3(0,1,0)*Dot(uv, t, Bounce2(t, r)); // draw ball\n    col += vec3(1,1,0)*Dot(uv, t/1.1, Bounce2(t/1.1, r)); // draw ball\n    col += vec3(1,0,0)*Dot(uv, t/1.1/1.1, Bounce2(t/1.1/1.1, r)); // draw ball\n    col += vec3(0,0,1)*Dot(uv, t/1.1/1.1/1.1, Bounce2(t/1.1/1.1/1.1, r)); // draw ball\n     \n    // draw start, finish and x-axis\n    if(abs(uv.y)<.002) col += 1.;\n    if(abs(abs(uv.x)-.8)<.002) col += 1.;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}