{"ver":"0.1","info":{"id":"MtKBWd","date":"1544604191","viewed":853,"name":"Circular Bokeh Blur","username":"kritzsie","description":"Simple convolution-based bokeh blur with custom radius.\nThis one uses a circle pattern for weights.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["blur","bokeh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 bokeh(vec4 color, vec2 origin, int radius) {\n    float divisor = 0.f;\n\n    for (int x = -radius; x < radius + 1; ++x)\n    for (int y = -radius; y < radius + 1; ++y) {\n        vec2 offset = vec2(x, y);\n        vec2 pos = (origin + offset) / iChannelResolution[0].xy;\n\n        float weight = 1.f - step(float(radius), length(offset));\n\n\t\tcolor += texture(iChannel0, pos) * weight;\n        divisor += weight;\n    }\n\n    return color / divisor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int blurRadius = int(mix(40.f, 7.f, step(1.f / 60.f, iTime)));\n    fragColor = bokeh(fragColor, fragCoord, blurRadius);\n}\n","name":"Image","description":"","type":"image"}]}