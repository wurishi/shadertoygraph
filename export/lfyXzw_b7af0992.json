{"ver":"0.1","info":{"id":"lfyXzw","date":"1727739980","viewed":43,"name":"iamrescircle","username":"iamres","description":"123","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["123"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi acos(-1.0)\n\nvec2 UVtoPolar(vec2 p)\n{\n    return vec2(atan(p.x, p.y), length(p));\n}\n\nvec2 PolarToUV(vec2 p)\n{\n    return vec2(sin(p.x), cos(p.x)) * p.y;\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b) {\n\tvec2 pa = p - a, ba = b - a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n    vec2 c = a+ba*t;\n    float d = length(c-p);\n    float l = 0.002, g = 0.002;\n\treturn min(1.0, 0.003/d); }\n    \nvec2 polarcords (float x, float p) {\n    float u = fract(sin(x))*2.0*pi;\n    return vec2(sin(u), cos(u)) * p; }   \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.x;\n    vec3 col = vec3(0.0);\n    float a = atan(p.x, p.y);\n    col += min(0.01/abs(length(p) - 0.2), 1.2);\n    col *= sin(a + iTime*3.+vec3(0, 4, 2))*0.5+0.5;\n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}