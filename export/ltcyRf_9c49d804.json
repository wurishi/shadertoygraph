{"ver":"0.1","info":{"id":"ltcyRf","date":"1533409539","viewed":482,"name":"Smooth Chromatic Aberration","username":"slerpy","description":"The runtime is proportional to 1/delta","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["post","color","effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 sca(sampler2D tex, vec2 uv, float width)\n{\n    vec3 acc = vec3(0);\n    \n    const float delta = 0.04;\n    const float range = acos(-1.0);\n    const float spec = 2.0 * range / 3.0;\n    \n    for(float i = -1.0; i <= 1.0; i += delta)\n    {\n        vec3 mask = 0.5 + 0.5 * cos(range * i + vec3(-spec, 0, spec));\n        acc += mask * texture(tex, uv - vec2(width * i, 0)).rgb;\n    }\n    \n    return vec4(delta * acc, 0);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    fragColor = sca(iChannel0, uv, 0.1*uv.x*uv.x);\n}","name":"Image","description":"","type":"image"}]}