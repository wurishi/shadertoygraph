{"ver":"0.1","info":{"id":"3stBD4","date":"1605180456","viewed":101,"name":"learn(10)","username":"saltlemon","description":"raymarch\nhttps://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg The Art of Code","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SAFE_DIST 0.001\nstruct ray{\n    vec3 o,d;\n};\nfloat smax(float a,float b,float k){\n    float h=clamp((b-a)/k+0.5,0.,1.);\n\treturn mix(a,b,h)+h*(1.-h)*k*.5;   \n}\nfloat smin(float a,float b,float k){\n    float h=clamp((b-a)/k+0.5,0.,1.);\n\treturn mix(b,a,h)-h*(1.-h)*k*.5;   \n}\nray getRay(vec2 uv,vec3 camPos,vec3 lookat,float zoom){\n    ray a;\n    a.o=camPos;\n    vec3 f=normalize(lookat-a.o);\n    vec3 r=cross(vec3(0.,1.,0.),f);\n    vec3 u=cross(f,r);\n    vec3 c=a.o+zoom*f;\n    vec3 i=c+uv.x*r+uv.y*u;\n    a.d=normalize(i-a.o);\n    return a;\n}\nmat2 rot(float a){\n    float s=sin(a);\n    float c=cos(a);\n    return mat2(c,-s,s,c);\n}\n\nfloat sdBox( vec3 p, vec3 b )\n{\n    vec3 q = abs(p) - b;\n    return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\nfloat sdGyroid(vec3 p,float scale,float thickness,float bias){\n    p*=scale;\n    return abs(dot(sin(p),cos(p.zxy))-bias)/scale-thickness;\n}\nvec3 transfrom(vec3 p){\n    p.xy*=rot(p.z*.15);\n    p.z+=iTime*.1;\n    p.y-=.3;\n    return p;\n}\nfloat getDist(vec3 p){ \n    p=transfrom(p);\n    vec3 dp=p-vec3(0.,0,0);\n    \n    float dBox=sdBox(dp,vec3(1));\n    \n\n    float g1=sdGyroid(p,5.25,.03,1.4);\n    float g2=sdGyroid(p,10.54,.03,.3);\n    float g3=sdGyroid(p,20.44,.03,.3);\n    float g4=sdGyroid(p,35.63,.03,.3);\n    float g5=sdGyroid(p,60.31,.03,.3);\n    float g6=sdGyroid(p,110.31,.03,.3);\n    //float g=min(g1,g2);\n    //float g=max(g1,-g2);\n    float g=g1-g2*.4;\n    g-=g3*.3;\n    g+=g4*.2;\n    g+=g5*.2;\n    g+=g6*.1;\n    float d=g*.8;\n    return d;\n}\nvec3 getNormal(vec3 p){\n \tfloat d=getDist(p);\n    vec2 e=vec2(.02,0.);\n    vec3 n=normalize(vec3(\n        d-getDist(p-e.xyy),\n        d-getDist(p-e.yxy),\n        d-getDist(p-e.yyx)\n    ));\n        return n;\n}\n\nfloat RayMarch(vec3 ro,vec3 rd){\n\tfloat d_o=0.;\n    for(int i=0;i<MAX_STEPS;i++){\n     \tvec3 p=ro+d_o*rd;\n        float dS=getDist(p);\n        d_o+=dS;\n        if(d_o>MAX_DIST||abs(dS)<SAFE_DIST) break;\n    }\n    \n    return d_o;\n}\nfloat getLight(vec3 p){\n \tvec3 LightPos=vec3(1,2,3);\n    vec3 l=normalize(LightPos-p);\n    vec3 n=getNormal(p);\n    \n    float dif=clamp(dot(n,l),0.,1.)*.5+.5;\n\n    float d=RayMarch(p+n*SAFE_DIST*2.,l);\n    //if(d<length(LightPos-p))dif*=.3;\n    return dif;\n}\nfloat getCol(vec3 p,vec3 n){\n    \n    float dif=n.y*.5+.5;\n    return dif;\n}\n\nvec3 background(vec3 rd){\n    vec3 col=vec3(0.);\n    float y=rd.y*.5+.5;\n    col+=(1.-y)*vec3(1.,.4,.1)*2.;\n    float t=iTime;\n    float a=atan(rd.x,rd.z);\n    float flame=sin(a*10.+t)*sin(a*6.-t)*sin(a*5.);\n    flame*=smoothstep(.8,.5,y);\n    col+=flame*.5;\n    col=max(col,0.);\n    col+=smoothstep(.5,.0,y)*.5;\n    return col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n\tuv.x*=iResolution.x/iResolution.y;\n    \n    uv+=sin(uv*20.+iTime)*.01;//motion blur\n    vec3 col = vec3(0.);\n\t\n    vec2 m=iMouse.xy/iResolution.xy;\n    vec3 camPos=vec3(0,0,-.03);\n    camPos.yz*=rot(-m.y*3.14+1.);\n    camPos.xz*=rot(-m.x*6.2831);\n    vec3 lookat=vec3(0,0,0);\n    ray myray=getRay(uv,camPos,lookat,.8);\n\n   \tfloat dif=0.;\n    float d=RayMarch(myray.o,myray.d);\n    if(d<MAX_DIST){\n    \tvec3 p=myray.o+d*myray.d;\n        float height=p.y;\n        vec3 n=getNormal(p);\n        dif=getCol(p,n);\n        col=vec3(dif*dif);\n        p=transfrom(p);\n    \t\n        //col=getNormal(p)*.5+.5;\n        float g2=sdGyroid(p,10.54,.03,.3);\n        col*=smoothstep(-.1,.1,g2);//shadow\n        \n        \n        float crackwidth=smoothstep(0.,-.5,n.y)*.04;\n        float crack=smoothstep(-.02+crackwidth,-.03,g2);\n        float t=iTime;\n        float g3=sdGyroid(p+t*.1,5.54,.03,0.);\n        float g4=sdGyroid(p-t*.05,4.72,.03,0.);\n        crack*=g3*g4*20.+.2*smoothstep(.2,0.,n.y);\n        col+=crack*vec3(1.,.4,.1)*3.;//crack\n        \n        float g5=sdGyroid(p-vec3(0.,t,0.),3.85,.03,0.);//fire\n        col+=g5*vec3(1.,.4,.1);\n        col+=smoothstep(0.,-2.,height)*vec3(1.,.4,.1)*.3;\n        \n    }\n    col=mix(col,background(myray.d),smoothstep(0.,6.,d));\n    col*=(1.-dot(uv,uv));//camera shadow\n    //col=background(myray.d);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}