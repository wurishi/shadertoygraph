{"ver":"0.1","info":{"id":"DlXcDr","date":"1690575854","viewed":677,"name":"Processing Data (CineShader ed.)","username":"StefanPijnacker","description":"CineShader version of the Processing Data shader I made some time ago. \nhttps://cineshader.com/view/DlXcDr","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["2d","monochrome","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float N21(vec2 uv)\n{\n    return fract(sin(uv.x * 21.281 + uv.y * 93.182) * 5821.92);\n}\n\nfloat line(vec2 uv)\n{\n    return smoothstep(0.0, 0.05, uv.x) - smoothstep(0.0, 0.95, uv.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    \n    vec2 offset = abs(uv.yx) / vec2(30., 5.2);\n    uv = uv + uv * offset * offset;\n    uv = uv * 0.5 + 0.5;\n    \n    vec2 scale = vec2(128, 90);\n    \n    vec2 lUV = fract(uv * scale);\n    vec2 gID = floor(uv * scale);\n\n    float rowNoise = N21(vec2(0.0, gID.y));\n    float dir = ((rowNoise * 2.0) - 1.0) + 0.2;\n    gID.x += floor(iTime * dir * 30.);\n    \n    float cellNoise = N21(gID);\n    float drawBlock = float(cellNoise > 0.28);\n    int even = int(gID.y) % 2;\n\n    vec3 col = vec3(line(lUV)) * drawBlock * float(even);\n    col *= fract(sin(gID.y)) + 0.24;\n    col *= vec3(0.224,0.996,0.557);\n    \n    fragColor = vec4(vec3(col), col.g * 0.2);\n}","name":"Image","description":"","type":"image"}]}