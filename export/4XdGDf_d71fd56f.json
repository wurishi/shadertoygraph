{"ver":"0.1","info":{"id":"4XdGDf","date":"1717088836","viewed":90,"name":"n-bit color","username":"aerowave","description":"Dithering with a 6bit palette","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["color","palette","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLORS 4\n\nvec3 dither(in vec3 col, in vec2 fragCoord) {\n    col += (texelFetch(iChannel0, ivec2(mod(fragCoord, iChannelResolution[0].xy)), 0).x - 0.5) / float(COLORS-1);\n    return round(col * float(COLORS-1)) / float(COLORS-1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // pixelize\n    fragCoord = floor(fragCoord * 0.5) * 2.0;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+mod(uv, vec2(1)).xyx+vec3(0,2,4));\n    if (uv.y > 0.0)\n        col = vec3(uv.y);\n    \n    // dither output\n    if (uv.x > 0.0)\n        col = dither(col, fragCoord * 0.5);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n/*\n\nvec3 dither(in vec3 col, in vec2 fragCoord) {\n    col += (texelFetch(iChannel0, ivec2(mod(fragCoord, iChannelResolution[0].xy)), 0).x - 0.5) * 0.3333333;\n    return round(col * 3.0) * 0.33333333;\n}\n\n*/","name":"Image","description":"","type":"image"}]}