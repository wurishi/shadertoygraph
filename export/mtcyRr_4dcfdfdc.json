{"ver":"0.1","info":{"id":"mtcyRr","date":"1698882137","viewed":68,"name":"000Tool: Mod-Style Tracker v0.1","username":"foodini","description":"I intend to evolve this considerably over time. I NEED better instrument definitions, though. I've no idea how to make them.","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["tracker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/* \nMod-style tracker tool. Version 0.1  2023.11.03 foodini@shadertoy\nUse freely, but please keep this line and the version line.\n\nThe entire purpose of this tool is for you to steal it and use it in\nyour own stuff. The \"manual\" is at the bottom of this comment.\n\n\nTHE CURRENT VERSION SHAMELESSLY STEALS IQ's MUISC FROM HIS EXCELLENT:\n\n                https://www.shadertoy.com/view/ldXXDj\n            \nIt took a friend and me a bit of time to unpack what was going on in iq's\nshader. I was introduced to the assembly demos of the early 90s when I was\nin college and have very fond memories of this one in particular. If\nyou've spent enough time on shadertoy that you're reading this but are\nunfamiliar with \"Second Reality,\" drop whatever you're doing and take it\nin. Keep in mind that THIS RAN ON A 486 RUNNING AT 25MHz WITH NO FLOATING\nPOINT HARDWARE AND ONLY 2 MEGABYTES OF MEMORY!!! Read that last sentence\nagain before watching it. The video compression does it little to no \njustice. It ran at 60Hz on my 486:\n\n              https://www.youtube.com/watch?v=iw17c70uJes\n\nThe music is just unbelievable. If you want some idea of just how complex\nit is, check out the version of it being played in Schism Tracker:\n\n              https://www.youtube.com/watch?v=Dmhtc5S4atU\n              \nI'd love to be able to play Second Reality in shadertoy, but there are\nconsiderable barriers:\n\n* Mods (actually, Second Reality is an .s3m, but same it's the same idea)\n  pack uncompressed .wavs as their instruments. There's a sample in there,\n  at about 2:48 in the tracker video, of Vice Admiral W.H.P. Blandy (I \n  love that name) saying \"I am not an atomic playboy.\" On my hardware, the\n  audio sample rate is 44100 (\"CD Quality\"), so we're looking at 66150\n  bytes for that sample if we compress to 8 bits (which would suck.) 16\n  bits would be solid... and 132300 bytes. It might be passable at 12\n  bits, but really we need something mp3-esque for sample compression.\n* Even if we solve the problem of compressing samples, the tracks can be a\n  bit bloaty, too. For the moment, I'm using a 32-bit int to represent a\n  tone - which is serious overkill. The only reason I'm wasting all that\n  space is because I've yet to decide what to do with it. I _could_ pack\n  4 tracks into a single uint, since I only use 7 bits per track at the\n  moment. However, I want some per-not control over stacatto, accent,\n  vibrato, volume, and other characteristics. I've not decided how many\n  bits per sample I want for all that yet. At the very least, I expect to\n  land at 16 bits per sample.\n* Second Reality uses the entire gamut of capabilities in the .s3m format.\n  In fact, I understand that the s3m was created in order to play this\n  exact piece. It's very complex, and the size of an event is something\n  like 10 bytes: https://moddingwiki.shikadi.net/wiki/S3M_Format\n\n\n\"The Manual\"\n\n\n\nThings to try;\n* Each track should have its own position in the stereo mix.\n  The instrument should have an x coefficient in the right\n  channel and a 1.0-x coefficient in the left.\n* Portamento\n* Build your own instruments.\n* Stacatto\n* Accent\n* How do we pulse the beat w/o having to codify it into our\n  events?\n* Set relative balance of tracks? Maybe globally, or have a per-event\n  weight?\n\n*/\n\nconst float PI = 3.14159265;\nconst float TAU = 2.0*PI;\nconst float equal_temperament_interval = pow(2.0, 1.0/12.0);\n\n#define DT(name, bitpack) const uint name = bitpack;\n  DT(A0,0x0u)DT(As0,0x1u)DT(Bf0,0x1u)DT(B0,0x2u)DT(C0,0x3u)\n  DT(Cs0,0x4u)DT(Df0,0x4u)DT(D0,0x5u)DT(Ds0,0x6u)DT(Ef0,0x6u)DT(E0,0x7u)\n  DT(F0,0x8u)DT(Fs0,0x9u)DT(Gf0,0x9u)DT(G0,0xau)DT(Gs0,0xbu)DT(Af0,0xbu)\n  DT(A1,0xcu)DT(As1,0xdu)DT(Bf1,0xdu)DT(B1,0xeu)DT(C1,0xfu)\n  DT(Cs1,0x10u)DT(Df1,0x10u)DT(D1,0x11u)DT(Ds1,0x12u)DT(Ef1,0x12u)DT(E1,0x13u)\n  DT(F1,0x14u)DT(Fs1,0x15u)DT(Gf1,0x15u)DT(G1,0x16u)DT(Gs1,0x17u)DT(Af1,0x17u)\n  DT(A2,0x18u)DT(As2,0x19u)DT(Bf2,0x19u)DT(B2,0x1au)DT(C2,0x1bu)\n  DT(Cs2,0x1cu)DT(Df2,0x1cu)DT(D2,0x1du)DT(Ds2,0x1eu)DT(Ef2,0x1eu)DT(E2,0x1fu)\n  DT(F2,0x20u)DT(Fs2,0x21u)DT(Gf2,0x21u)DT(G2,0x22u)DT(Gs2,0x23u)DT(Af2,0x23u)\n  DT(A3,0x24u)DT(As3,0x25u)DT(Bf3,0x25u)DT(B3,0x26u)DT(C3,0x27u)\n  DT(Cs3,0x28u)DT(Df3,0x28u)DT(D3,0x29u)DT(Ds3,0x2au)DT(Ef3,0x2au)DT(E3,0x2bu)\n  DT(F3,0x2cu)DT(Fs3,0x2du)DT(Gf3,0x2du)DT(G3,0x2eu)DT(Gs3,0x2fu)DT(Af3,0x2fu)\n  DT(A4,0x30u)DT(As4,0x31u)DT(Bf4,0x31u)DT(B4,0x32u)DT(C4,0x33u)\n  DT(Cs4,0x34u)DT(Df4,0x34u)DT(D4,0x35u)DT(Ds4,0x36u)DT(Ef4,0x36u)DT(E4,0x37u)\n  DT(F4,0x38u)DT(Fs4,0x39u)DT(Gf4,0x39u)DT(G4,0x3au)DT(Gs4,0x3bu)DT(Af4,0x3bu)\n  DT(A5,0x3cu)DT(As5,0x3du)DT(Bf5,0x3du)DT(B5,0x3eu)DT(C5,0x3fu)\n  DT(Cs5,0x40u)DT(Df5,0x40u)DT(D5,0x41u)DT(Ds5,0x42u)DT(Ef5,0x42u)DT(E5,0x43u)\n  DT(F5,0x44u)DT(Fs5,0x45u)DT(Gf5,0x45u)DT(G5,0x46u)DT(Gs5,0x47u)DT(Af5,0x47u)\n  DT(A6,0x48u)DT(As6,0x49u)DT(Bf6,0x49u)DT(B6,0x4au)DT(C6,0x4bu)\n  DT(Cs6,0x4cu)DT(Df6,0x4cu)DT(D6,0x4du)DT(Ds6,0x4eu)DT(Ef6,0x4eu)DT(E6,0x4fu)\n  DT(F6,0x50u)DT(Fs6,0x51u)DT(Gf6,0x51u)DT(G6,0x52u)DT(Gs6,0x53u)DT(Af6,0x53u)\n  DT(A7,0x54u)DT(As7,0x55u)DT(Bf7,0x55u)DT(B7,0x56u)DT(C7,0x57u)\n  DT(Cs7,0x58u)DT(Df7,0x58u)DT(D7,0x59u)DT(Ds7,0x5au)DT(Ef7,0x5au)DT(E7,0x5bu)\n  DT(F7,0x5cu)DT(Fs7,0x5du)DT(Gf7,0x5du)DT(G7,0x5eu)DT(Gs7,0x5fu)DT(Af7,0x5fu)\n  DT(A8,0x60u)DT(As8,0x61u)DT(Bf8,0x61u)DT(B8,0x62u)DT(C8,0x63u)\n  DT(Cs8,0x64u)DT(Df8,0x64u)DT(D8,0x65u)DT(Ds8,0x66u)DT(Ef8,0x66u)DT(E8,0x67u)\n  DT(F8,0x68u)DT(Fs8,0x69u)DT(Gf8,0x69u)DT(G8,0x6au)DT(Gs8,0x6bu)DT(Af8,0x6bu)\n  DT(A9,0x6cu)DT(As9,0x6du)DT(Bf9,0x6du)DT(B9,0x6eu)DT(C9,0x6fu)\n  DT(Cs9,0x70u)DT(Df9,0x70u)DT(D9,0x71u)DT(Ds9,0x72u)DT(Ef9,0x72u)DT(E9,0x73u)\n  DT(F9,0x74u)DT(Fs9,0x75u)DT(Gf9,0x75u)DT(G9,0x76u)DT(Gs9,0x77u)DT(Af9,0x77u)\n  \nfloat unpack_frequency(uint bitpack) {\n    float note = float(bitpack % 12u);\n    float octave = float((bitpack & 0x7fu) / 12u);\n    return 27.5 * pow(equal_temperament_interval, note) * pow(2.0, octave);\n}\n\nfloat linear_up(float t0, float tx, float t) {\n    if(t<t0)\n        return 0.0;\n    if(t>=tx)\n        return 1.0;\n    return (t-t0)/(tx-t0);\n}\n\nfloat linear_down(float t0, float tx, float t) {\n    if(t<t0)\n        return 1.0;\n    if(t>=tx)\n        return 0.0;\n    return 1.0 - (t-t0)/(tx-t0);\n}\n\nfloat falloff(float t0, float tx, float t, float rate) {\n    if(t<t0)\n        return 1.0;\n    return exp(rate*(t-t0));\n}\n\nfloat cosine(float freq, float t) {\n    return cos(TAU * freq * t);\n}\n\nfloat sine(float freq, float t) {\n    return sin(TAU * freq * t);\n}\n\nfloat _bass_drum(float time, float base_frequency) {\n    return \n        //linear_up(0.0, 0.0008, time) *\n        linear_down(0.1, 0.3, time) * \n        cosine(base_frequency, time) * \n        falloff(0.0, 3.0, time, -3.0 );\n}\n\nfloat bass_drum(float time, uint event) {\n    float base_frequency = unpack_frequency(event);\n    return 0.4   * _bass_drum(time, base_frequency) +\n           0.3   * _bass_drum(time, base_frequency*1.51) +\n           0.2   * _bass_drum(time, base_frequency*2.251) +\n           0.1   * _bass_drum(time, base_frequency*4.51);\n}\n\nfloat white_noise(float time, float base_frequency) {\n    float retval = 0.0;\n\n    for(int i=0; i<1; i++) {\n        retval += 0.5 * sin(TAU * time * base_frequency * pow(2.0, 5.0 + 5.0*uniform_float()));\n    }\n    return retval;\n}\n\nfloat high_hat_tap(float time, uint event) {\n    float base_frequency = unpack_frequency(event);\n    return\n        linear_up(0.0, 0.0001, time) *\n        linear_down(0.0, 0.1, time) * \n        white_noise(time, base_frequency) *\n        2.0;\n}\n\nfloat tone(float time, uint event) {\n    float base_frequency = unpack_frequency(event);\n    float retval =\n        0.5 * sine(base_frequency, time) +\n        0.25 * sine(2.01 * base_frequency, time) +\n        0.125 * sine(4.01 * base_frequency, time) +\n        0.0625 * sine(8.01 * base_frequency, time);\n    return retval * \n        falloff(0.0, 3.0, time, -3.0) *\n        linear_up(0.0, 0.01, time);\n}\n\nfloat mute(float freq, float time) {\n    return 0.0;\n}\n\nfloat iq(float freq, float time)\n{\n    float ph = 1.0;\n    ph *= sin(6.283185*freq*time*2.0);\n    ph *= 0.5+0.5*max(0.0,5.0-0.01*freq);\n    ph *= exp(-time*freq*0.2);\n    \n    float y = 0.0;\n    y += 0.70*sin(1.00*6.283185*freq*time+ph)*exp2(-0.7*0.007*freq*time);\n    y += 0.20*sin(2.01*6.283185*freq*time+ph)*exp2(-0.7*0.011*freq*time);\n    y += 0.20*sin(3.01*6.283185*freq*time+ph)*exp2(-0.7*0.015*freq*time);\n    y += 0.16*sin(4.01*6.283185*freq*time+ph)*exp2(-0.7*0.018*freq*time);\n    y += 0.13*sin(5.01*6.283185*freq*time+ph)*exp2(-0.7*0.021*freq*time);\n    y += 0.10*sin(6.01*6.283185*freq*time+ph)*exp2(-0.7*0.027*freq*time);\n    y += 0.09*sin(8.01*6.283185*freq*time+ph)*exp2(-0.7*0.030*freq*time);\n    y += 0.07*sin(9.01*6.283185*freq*time+ph)*exp2(-0.7*0.033*freq*time);\n\n    y += 0.35*y*y*y;\n    y += 0.10*y*y*y;\n       \n    y *= 1.0 + 1.5*exp(-8.0*time);\n    y *= clamp( time/0.004, 0.0, 1.0 );\n\n    y *= 2.5-1.5*clamp( log2(freq)/10.0,0.0,1.0);\n\treturn y;\t\n}\n\nconst uint NO = 0xffffffffu;\nconst uint SU = 0xfffffffeu;\nconst uint SN = 0u; // High Hat/Snare tap\nconst uint BD = 1u; // BASS DRUM\nconst uint TONE = 2u;\nconst uint IQ = 3u;\nconst uint MT = 4u;  // \"Mute\" or \"eMpTy\" Convenient for temporarily muting a channel.\n\nconst int num_tracks = 6;\nconst int beats_per_measure = 4;\nconst int rows_per_beat = 3;\nconst int num_measures = 29;\nconst int num_rows = num_tracks * beats_per_measure * rows_per_beat * num_measures;\nconst uint instruments[] = uint[](IQ, IQ, IQ, IQ, IQ, SN);\nconst vec2 left = vec2(0.7, 0.3);\nconst vec2 right = vec2(0.3, 0.7);\nconst vec2 balances[] = vec2[](left, left, left, right, right, right);\nconst uint tracks[] = uint[] (\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row0, Measure0, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row1, Measure0, Beat0.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row2, Measure0, Beat0.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row3, Measure0, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row4, Measure0, Beat1.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row5, Measure0, Beat1.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row6, Measure0, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row7, Measure0, Beat2.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row8, Measure0, Beat2.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row9, Measure0, Beat3.0\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row10, Measure0, Beat3.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row11, Measure0, Beat3.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row12, Measure1, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row13, Measure1, Beat0.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row14, Measure1, Beat0.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row15, Measure1, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row16, Measure1, Beat1.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row17, Measure1, Beat1.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row18, Measure1, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row19, Measure1, Beat2.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row20, Measure1, Beat2.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row21, Measure1, Beat3.0\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row22, Measure1, Beat3.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row23, Measure1, Beat3.2\n   D3,  NO,  NO,  D0,  D1,  NO,   // Row24, Measure2, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row25, Measure2, Beat0.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row26, Measure2, Beat0.2\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row27, Measure2, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row28, Measure2, Beat1.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row29, Measure2, Beat1.2\n   D3,  NO,  NO,  D0,  D1,  NO,   // Row30, Measure2, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row31, Measure2, Beat2.1\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row32, Measure2, Beat2.2\n   D3,  NO,  NO,  D0,  D1,  NO,   // Row33, Measure2, Beat3.0\n   A2,  NO,  NO,  NO,  NO,  NO,   // Row34, Measure2, Beat3.1\n   C3,  NO,  NO,  NO,  NO,  NO,   // Row35, Measure2, Beat3.2\n   F2,  A2,  D3,  D1,  D2,  NO,   // Row36, Measure3, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row37, Measure3, Beat0.1\n   F2,  A2,  D3,  D1,  D2,  NO,   // Row38, Measure3, Beat0.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row39, Measure3, Beat1.0\n   F2,  A2,  D3,  NO,  NO,  NO,   // Row40, Measure3, Beat1.1\n   A2,  C3,  E3,  C1,  C2,  NO,   // Row41, Measure3, Beat1.2\n  As2,  D3,  F3, As0, As1,  NO,   // Row42, Measure3, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row43, Measure3, Beat2.1\n  As2,  D3,  F3, As0, As1,  NO,   // Row44, Measure3, Beat2.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row45, Measure3, Beat3.0\n  As2,  D3,  F3,  NO,  NO,  NO,   // Row46, Measure3, Beat3.1\n   D3,  G3,  NO, As0, As1,  NO,   // Row47, Measure3, Beat3.2\n   A2,  C3,  E3,  A0,  A1,  NO,   // Row48, Measure4, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row49, Measure4, Beat0.1\n   A2,  C3,  E3,  A0,  A1,  NO,   // Row50, Measure4, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row51, Measure4, Beat1.0\n   A2,  D3,  NO,  NO,  NO,  NO,   // Row52, Measure4, Beat1.1\n   C3,  NO,  NO,  A0,  A1,  NO,   // Row53, Measure4, Beat1.2\n   A2,  C3,  NO,  D1,  D2,  NO,   // Row54, Measure4, Beat2.0\n   A2,  D3,  NO,  NO,  NO,  NO,   // Row55, Measure4, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row56, Measure4, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row57, Measure4, Beat3.0\n   A2,  NO,  NO,  NO,  NO,  NO,   // Row58, Measure4, Beat3.1\n   C3,  NO,  NO,  D1,  D2,  NO,   // Row59, Measure4, Beat3.2\n   F2, As2,  D3, As0, As1,  NO,   // Row60, Measure5, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row61, Measure5, Beat0.1\n   F2, As2,  D3, As0, As1,  NO,   // Row62, Measure5, Beat0.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row63, Measure5, Beat1.0\n  As2,  D3,  NO,  NO,  NO,  NO,   // Row64, Measure5, Beat1.1\n  As2,  E3,  NO, As0, As1,  NO,   // Row65, Measure5, Beat1.2\n   A2,  C3,  F3,  F0,  F1,  NO,   // Row66, Measure5, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row67, Measure5, Beat2.1\n   A2,  C3,  F3,  F0,  F1,  NO,   // Row68, Measure5, Beat2.2\n   NO,  NO,  NO,  F0,  F1,  NO,   // Row69, Measure5, Beat3.0\n   C3,  F3,  NO,  NO,  NO,  NO,   // Row70, Measure5, Beat3.1\n   C3,  G3,  NO,  F0,  F1,  NO,   // Row71, Measure5, Beat3.2\n   C3,  E3,  NO,  C1,  C2,  NO,   // Row72, Measure6, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row73, Measure6, Beat0.1\n   C3,  E3,  NO,  C1,  C2,  NO,   // Row74, Measure6, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row75, Measure6, Beat1.0\n   A2,  D3,  NO,  NO,  NO,  NO,   // Row76, Measure6, Beat1.1\n   C3,  NO,  NO,  A0,  A1,  NO,   // Row77, Measure6, Beat1.2\n   F2,  A2,  D3,  D1,  D2,  NO,   // Row78, Measure6, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row79, Measure6, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row80, Measure6, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row81, Measure6, Beat3.0\n   A2,  NO,  NO,  NO,  NO,  NO,   // Row82, Measure6, Beat3.1\n   C3,  NO,  NO,  D1,  D2,  NO,   // Row83, Measure6, Beat3.2\n   F2,  A2,  D3,  D1,  D2,  NO,   // Row84, Measure7, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row85, Measure7, Beat0.1\n   F2,  A2,  D3,  D1,  D2,  NO,   // Row86, Measure7, Beat0.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row87, Measure7, Beat1.0\n   A2,  D3,  NO,  NO,  NO,  NO,   // Row88, Measure7, Beat1.1\n   A2,  F3,  NO,  D1,  D2,  NO,   // Row89, Measure7, Beat1.2\n  As2,  D3,  G3, As0, As1,  NO,   // Row90, Measure7, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row91, Measure7, Beat2.1\n  As2,  D3,  G3, As0, As1,  NO,   // Row92, Measure7, Beat2.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row93, Measure7, Beat3.0\n   D3,  G3,  NO,  NO,  NO,  NO,   // Row94, Measure7, Beat3.1\n   D3,  A3,  NO, As0, As1,  NO,   // Row95, Measure7, Beat3.2\n   D3,  G3, As3,  G0,  G1,  NO,   // Row96, Measure8, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row97, Measure8, Beat0.1\n   D3,  G3, As3,  G0,  G1,  NO,   // Row98, Measure8, Beat0.2\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row99, Measure8, Beat1.0\n   F3,  A3,  NO,  NO,  NO,  NO,   // Row100, Measure8, Beat1.1\n   E3,  G3,  NO,  G0,  G1,  NO,   // Row101, Measure8, Beat1.2\n   F3,  A3,  NO,  D1,  D2,  NO,   // Row102, Measure8, Beat2.0\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row103, Measure8, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row104, Measure8, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row105, Measure8, Beat3.0\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row106, Measure8, Beat3.1\n   E3,  NO,  NO,  D1,  D2,  NO,   // Row107, Measure8, Beat3.2\n  As2,  D3,  F3, As0, As1,  NO,   // Row108, Measure9, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row109, Measure9, Beat0.1\n  As2,  D3,  F3, As0, As1,  NO,   // Row110, Measure9, Beat0.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row111, Measure9, Beat1.0\n  As2,  D3,  G3,  NO,  NO,  NO,   // Row112, Measure9, Beat1.1\n   NO,  NO,  NO, As0, As1,  NO,   // Row113, Measure9, Beat1.2\n   F3,  A3,  NO,  D1,  D2,  NO,   // Row114, Measure9, Beat2.0\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row115, Measure9, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row116, Measure9, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row117, Measure9, Beat3.0\n   D3,  NO,  NO,  NO,  NO,  NO,   // Row118, Measure9, Beat3.1\n   F3,  NO,  NO,  D1,  D2,  NO,   // Row119, Measure9, Beat3.2\n   A2, Cs3,  E3,  A0,  A1,  NO,   // Row120, Measure10, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row121, Measure10, Beat0.1\n   A2, Cs3,  E3,  A0,  A1,  NO,   // Row122, Measure10, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row123, Measure10, Beat1.0\n   D3,  F3,  NO,  NO,  NO,  NO,   // Row124, Measure10, Beat1.1\n   D3,  NO,  NO,  A0,  A1,  NO,   // Row125, Measure10, Beat1.2\n   A2, Cs3,  E3,  A0,  A1,  NO,   // Row126, Measure10, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row127, Measure10, Beat2.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row128, Measure10, Beat2.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row129, Measure10, Beat3.0\n   A3,  NO,  NO,  NO,  NO,  NO,   // Row130, Measure10, Beat3.1\n   C4,  NO,  NO,  A0,  A1,  NO,   // Row131, Measure10, Beat3.2\n   F3,  A3,  D4,  D1,  D2,  NO,   // Row132, Measure11, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row133, Measure11, Beat0.1\n   F3,  A3,  D4,  D1,  D2,  NO,   // Row134, Measure11, Beat0.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row135, Measure11, Beat1.0\n   F3,  A3,  D4,  NO,  NO,  NO,   // Row136, Measure11, Beat1.1\n   A3,  C4,  E4,  C1,  C2,  NO,   // Row137, Measure11, Beat1.2\n  As3,  D4,  F4, As0, As1,  NO,   // Row138, Measure11, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row139, Measure11, Beat2.1\n  As3,  D4,  F4, As0, As1,  NO,   // Row140, Measure11, Beat2.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row141, Measure11, Beat3.0\n  As3,  D4,  F4,  NO,  NO,  NO,   // Row142, Measure11, Beat3.1\n   D4,  G4,  NO, As0, As1,  NO,   // Row143, Measure11, Beat3.2\n   A3,  C4,  E4,  A0,  A1,  NO,   // Row144, Measure12, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row145, Measure12, Beat0.1\n   A3,  C4,  E4,  A0,  A1,  NO,   // Row146, Measure12, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row147, Measure12, Beat1.0\n   A3,  D4,  NO,  NO,  NO,  NO,   // Row148, Measure12, Beat1.1\n   G3,  C4,  NO,  A0,  A1,  NO,   // Row149, Measure12, Beat1.2\n   A3,  C4,  NO,  D1,  D2,  NO,   // Row150, Measure12, Beat2.0\n   A3,  D4,  NO,  NO,  NO,  NO,   // Row151, Measure12, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row152, Measure12, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row153, Measure12, Beat3.0\n   A3,  NO,  NO,  NO,  NO,  NO,   // Row154, Measure12, Beat3.1\n   C4,  NO,  NO,  D1,  D2,  NO,   // Row155, Measure12, Beat3.2\n   F3, As3,  D4, As0, As1,  NO,   // Row156, Measure13, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row157, Measure13, Beat0.1\n   F3, As3,  D4, As0, As1,  NO,   // Row158, Measure13, Beat0.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row159, Measure13, Beat1.0\n  As3,  D4,  NO,  NO,  NO,  NO,   // Row160, Measure13, Beat1.1\n  As3,  E4,  NO, As0, As1,  NO,   // Row161, Measure13, Beat1.2\n   A3,  C4,  F4,  F0,  F1,  NO,   // Row162, Measure13, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row163, Measure13, Beat2.1\n   A3,  C4,  F4,  F0,  F1,  NO,   // Row164, Measure13, Beat2.2\n   NO,  NO,  NO,  F0,  F1,  NO,   // Row165, Measure13, Beat3.0\n   C4,  F4,  NO,  NO,  NO,  NO,   // Row166, Measure13, Beat3.1\n   C4,  G4,  NO,  F0,  F1,  NO,   // Row167, Measure13, Beat3.2\n   C4,  E4,  NO,  C1,  C2,  NO,   // Row168, Measure14, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row169, Measure14, Beat0.1\n   C4,  E4,  NO,  C1,  C2,  NO,   // Row170, Measure14, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row171, Measure14, Beat1.0\n   A3,  D4,  NO,  NO,  NO,  NO,   // Row172, Measure14, Beat1.1\n   C4,  NO,  NO,  A0,  A1,  NO,   // Row173, Measure14, Beat1.2\n   F3,  A3,  D4,  D1,  D2,  NO,   // Row174, Measure14, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row175, Measure14, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row176, Measure14, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row177, Measure14, Beat3.0\n   A3,  NO,  NO,  NO,  NO,  NO,   // Row178, Measure14, Beat3.1\n   C4,  NO,  NO,  D1,  D2,  NO,   // Row179, Measure14, Beat3.2\n   F3,  A3,  D4,  D1,  D2,  NO,   // Row180, Measure15, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row181, Measure15, Beat0.1\n   F3,  A3,  D4,  D1,  D2,  NO,   // Row182, Measure15, Beat0.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row183, Measure15, Beat1.0\n   A3,  D4,  NO,  NO,  NO,  NO,   // Row184, Measure15, Beat1.1\n   A3,  F4,  NO,  D1,  D2,  NO,   // Row185, Measure15, Beat1.2\n  As3,  D4,  G4, As0, As1,  NO,   // Row186, Measure15, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row187, Measure15, Beat2.1\n  As3,  D4,  G4, As0, As1,  NO,   // Row188, Measure15, Beat2.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row189, Measure15, Beat3.0\n   D4,  G4,  NO,  NO,  NO,  NO,   // Row190, Measure15, Beat3.1\n   D4,  A4,  NO, As0, As1,  NO,   // Row191, Measure15, Beat3.2\n   D4,  G4, As4,  G0,  G1,  NO,   // Row192, Measure16, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row193, Measure16, Beat0.1\n   D4,  G4, As4,  G0,  G1,  NO,   // Row194, Measure16, Beat0.2\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row195, Measure16, Beat1.0\n   F4,  A4,  NO,  NO,  NO,  NO,   // Row196, Measure16, Beat1.1\n   E4,  G4,  NO,  G0,  G1,  NO,   // Row197, Measure16, Beat1.2\n   F4,  A4,  NO,  D1,  D2,  NO,   // Row198, Measure16, Beat2.0\n   D4,  NO,  NO,  NO,  NO,  NO,   // Row199, Measure16, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row200, Measure16, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row201, Measure16, Beat3.0\n   D4,  NO,  NO,  NO,  NO,  NO,   // Row202, Measure16, Beat3.1\n   E4,  NO,  NO,  D1,  D2,  NO,   // Row203, Measure16, Beat3.2\n  As3,  D4,  F4, As0, As1,  NO,   // Row204, Measure17, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row205, Measure17, Beat0.1\n  As3,  D4,  F4, As0, As1,  NO,   // Row206, Measure17, Beat0.2\n   NO,  NO,  NO, As0, As1,  NO,   // Row207, Measure17, Beat1.0\n  As3,  D4,  G4,  NO,  NO,  NO,   // Row208, Measure17, Beat1.1\n   NO,  NO,  NO, As0, As1,  NO,   // Row209, Measure17, Beat1.2\n   F4,  A4,  NO,  D1,  D2,  NO,   // Row210, Measure17, Beat2.0\n   D4,  NO,  NO,  NO,  NO,  NO,   // Row211, Measure17, Beat2.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row212, Measure17, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row213, Measure17, Beat3.0\n   D4,  NO,  NO,  NO,  NO,  NO,   // Row214, Measure17, Beat3.1\n   F4,  NO,  NO,  D1,  D2,  NO,   // Row215, Measure17, Beat3.2\n   A3, Cs4,  E4,  A0,  A1,  NO,   // Row216, Measure18, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row217, Measure18, Beat0.1\n   A3, Cs4,  E4,  A0,  A1,  NO,   // Row218, Measure18, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row219, Measure18, Beat1.0\n   D4,  NO,  NO,  NO,  NO,  NO,   // Row220, Measure18, Beat1.1\n  Cs4,  NO,  NO,  A0,  A1,  NO,   // Row221, Measure18, Beat1.2\n   A3,  D4,  NO,  D1,  D2,  NO,   // Row222, Measure18, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row223, Measure18, Beat2.1\n   A3,  D4,  NO,  D1,  D2,  NO,   // Row224, Measure18, Beat2.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row225, Measure18, Beat3.0\n   A3,  C4,  E4,  C1,  C2,  NO,   // Row226, Measure18, Beat3.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row227, Measure18, Beat3.2\n   C4,  D4,  F4,  C1,  C2,  NO,   // Row228, Measure19, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row229, Measure19, Beat0.1\n   F4,  NO,  NO,  C1,  C2,  NO,   // Row230, Measure19, Beat0.2\n   F4,  NO,  NO,  NO,  NO,  NO,   // Row231, Measure19, Beat1.0\n  As3,  D4,  G4, As0, As1,  NO,   // Row232, Measure19, Beat1.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row233, Measure19, Beat1.2\n   D4,  A4,  NO,  A0,  A1,  NO,   // Row234, Measure19, Beat2.0\n   F4,  NO,  NO,  NO,  NO,  NO,   // Row235, Measure19, Beat2.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row236, Measure19, Beat2.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row237, Measure19, Beat3.0\n   A3,  F4,  NO,  NO,  NO,  NO,   // Row238, Measure19, Beat3.1\n   A3,  D4,  NO,  A0,  A1,  NO,   // Row239, Measure19, Beat3.2\n   A3,  NO,  NO,  A0,  A1,  NO,   // Row240, Measure20, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row241, Measure20, Beat0.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row242, Measure20, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row243, Measure20, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row244, Measure20, Beat1.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row245, Measure20, Beat1.2\n   D4,  G4, As4,  G0,  G1,  NO,   // Row246, Measure20, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row247, Measure20, Beat2.1\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row248, Measure20, Beat2.2\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row249, Measure20, Beat3.0\n  As3,  G4,  NO,  NO,  NO,  NO,   // Row250, Measure20, Beat3.1\n  As3,  D4,  NO,  G0,  G1,  NO,   // Row251, Measure20, Beat3.2\n  As3,  NO,  NO,  G0,  G1,  NO,   // Row252, Measure21, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row253, Measure21, Beat0.1\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row254, Measure21, Beat0.2\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row255, Measure21, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row256, Measure21, Beat1.1\n   NO,  NO,  NO,  G0,  G1,  NO,   // Row257, Measure21, Beat1.2\n  Cs3,  E3,  NO,  A0,  A1,  NO,   // Row258, Measure21, Beat2.0\n  Cs3,  E3,  NO,  NO,  NO,  NO,   // Row259, Measure21, Beat2.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row260, Measure21, Beat2.2\n   D3,  NO,  NO,  A0,  A1,  NO,   // Row261, Measure21, Beat3.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row262, Measure21, Beat3.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row263, Measure21, Beat3.2\n   A2, Cs3,  F3,  A0,  A1,  NO,   // Row264, Measure22, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row265, Measure22, Beat0.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row266, Measure22, Beat0.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row267, Measure22, Beat1.0\n   F3,  NO,  NO,  NO,  NO,  NO,   // Row268, Measure22, Beat1.1\n   G3,  NO,  NO,  A0,  A1,  NO,   // Row269, Measure22, Beat1.2\n   D3,  F3,  A3,  D1,  D2,  NO,   // Row270, Measure22, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row271, Measure22, Beat2.1\n   D3,  F3,  A3,  D1,  D2,  NO,   // Row272, Measure22, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row273, Measure22, Beat3.0\n   D3,  F3,  A3,  NO,  NO,  NO,   // Row274, Measure22, Beat3.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row275, Measure22, Beat3.2\n   D3,  F3, As3,  D1,  D2,  NO,   // Row276, Measure23, Beat0.0\n   D3,  F3,  A3,  NO,  NO,  NO,   // Row277, Measure23, Beat0.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row278, Measure23, Beat0.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row279, Measure23, Beat1.0\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row280, Measure23, Beat1.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row281, Measure23, Beat1.2\n   C3,  E3,  G3,  C1,  C2,  NO,   // Row282, Measure23, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row283, Measure23, Beat2.1\n   C3,  E3,  G3,  C1,  C2,  NO,   // Row284, Measure23, Beat2.2\n   NO,  NO,  NO,  C1,  C2,  NO,   // Row285, Measure23, Beat3.0\n   C3,  E3,  G3,  NO,  NO,  NO,   // Row286, Measure23, Beat3.1\n   NO,  NO,  NO,  C1,  C2,  NO,   // Row287, Measure23, Beat3.2\n   C3,  E3,  G3,  F1,  F2,  NO,   // Row288, Measure24, Beat0.0\n   C3,  F3,  A3,  NO,  NO,  NO,   // Row289, Measure24, Beat0.1\n   NO,  NO,  NO,  F1,  F2,  NO,   // Row290, Measure24, Beat0.2\n   NO,  NO,  NO,  F1,  F2,  NO,   // Row291, Measure24, Beat1.0\n   NO,  NO,  NO,  F1,  F2,  NO,   // Row292, Measure24, Beat1.1\n   NO,  NO,  NO,  F1,  F2,  NO,   // Row293, Measure24, Beat1.2\n   D3,  F3,  A3,  D1,  D2,  NO,   // Row294, Measure24, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row295, Measure24, Beat2.1\n   D3,  F3,  A3,  D1,  D2,  NO,   // Row296, Measure24, Beat2.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row297, Measure24, Beat3.0\n   D3,  F3,  A3,  NO,  NO,  NO,   // Row298, Measure24, Beat3.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row299, Measure24, Beat3.2\n   D3,  F3, As3,  D1,  D2,  NO,   // Row300, Measure25, Beat0.0\n   D3,  F3,  A3,  NO,  NO,  NO,   // Row301, Measure25, Beat0.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row302, Measure25, Beat0.2\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row303, Measure25, Beat1.0\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row304, Measure25, Beat1.1\n   NO,  NO,  NO,  D1,  D2,  NO,   // Row305, Measure25, Beat1.2\n  Cs3,  E3,  G3,  A0,  A1,  NO,   // Row306, Measure25, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row307, Measure25, Beat2.1\n  Cs3,  F3,  NO,  A0,  A1,  NO,   // Row308, Measure25, Beat2.2\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row309, Measure25, Beat3.0\n   A2,  E3,  NO,  NO,  NO,  NO,   // Row310, Measure25, Beat3.1\n   NO,  NO,  NO,  A0,  A1,  NO,   // Row311, Measure25, Beat3.2\n   F2,  A2,  D3,  D1,  D2,  NO,   // Row312, Measure26, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row313, Measure26, Beat0.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row314, Measure26, Beat0.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row315, Measure26, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row316, Measure26, Beat1.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row317, Measure26, Beat1.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row318, Measure26, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row319, Measure26, Beat2.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row320, Measure26, Beat2.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row321, Measure26, Beat3.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row322, Measure26, Beat3.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row323, Measure26, Beat3.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row324, Measure27, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row325, Measure27, Beat0.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row326, Measure27, Beat0.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row327, Measure27, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row328, Measure27, Beat1.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row329, Measure27, Beat1.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row330, Measure27, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row331, Measure27, Beat2.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row332, Measure27, Beat2.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row333, Measure27, Beat3.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row334, Measure27, Beat3.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row335, Measure27, Beat3.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row336, Measure28, Beat0.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row337, Measure28, Beat0.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row338, Measure28, Beat0.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row339, Measure28, Beat1.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row340, Measure28, Beat1.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row341, Measure28, Beat1.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row342, Measure28, Beat2.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row343, Measure28, Beat2.1\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row344, Measure28, Beat2.2\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row345, Measure28, Beat3.0\n   NO,  NO,  NO,  NO,  NO,  NO,   // Row346, Measure28, Beat3.1\n   NO,  NO,  NO,  NO,  NO,  NO    // Row347, Measure28, Beat3.2\n);\n\n\nvoid find_last_hit(out uint event, out int skipped_rows,\n                   int index, int max_steps) {\n    for(skipped_rows=0, index>=0;\n        skipped_rows<max_steps; \n        skipped_rows++, index-=num_tracks) {\n        \n        if(tracks[index] == NO)\n            break;\n        if(tracks[index] != SU) {\n            event = tracks[index];\n            return;\n        }\n    };\n    \n    event = NO;\n    return;\n}\n\nfloat get_sample_timestamp(float t, float rows_per_second, float row_id, int skipped_rows) {\n    return t - (row_id - float(skipped_rows)) / rows_per_second;\n}\n\nvec2 play(uint event, float sample_timestamp, int sample_index) {\n    float amplitude = sine(unpack_frequency(event), sample_timestamp);\n    switch(instruments[sample_index]) {\n        case SN: amplitude = high_hat_tap(sample_timestamp, event); break;\n        case BD: amplitude = bass_drum(sample_timestamp, event); break;\n        case TONE: amplitude = tone(sample_timestamp, event); break;\n        case IQ: amplitude = iq(sample_timestamp, unpack_frequency(event)); break;\n        case MT: amplitude = mute(sample_timestamp, unpack_frequency(event)); break;\n    }\n    //return vec2(amplitude);\n    return amplitude * balances[sample_index];\n}\n\nvec2 mainSound( int samp, float time ) {\n    global_rand_state = uint(samp);\n    \n    vec2 channels = vec2(0.0);\n    \n    float tempo = 140.0;\n    float beats_per_second = tempo/60.0;\n    float rows_per_second = beats_per_second * float(rows_per_beat);\n\n    //Play the entire thing on repeat:\n    time = mod(time, float(beats_per_measure*num_measures)/beats_per_second);\n\n    float row_id_float = floor(time*rows_per_second);\n    int   row_id_int   = int(row_id_float);\n    float time_at_start_of_row = row_id_float / rows_per_second;\n    \n    uint event;\n\n    for(int track_index=0; track_index<num_tracks; track_index++) {\n        float sample_timestamp = time - time_at_start_of_row;\n        for(int event_index = row_id_int * num_tracks + track_index; event_index >= 0; event_index -= num_tracks) {\n            event = tracks[event_index];\n            if(event != NO) {\n                channels += play(event, sample_timestamp, track_index);\n                break;\n            }\n            sample_timestamp += (1.0 / rows_per_second);\n         }\n    }\n    return channels / float(num_tracks) / 1.6;\n}\n\n\n\n\n","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"uint global_rand_state;\n\n//Adapted from: https://gist.github.com/keijiro/24f9d505fac238c9a2982c0d6911d8e3\nuint hash() {\n    global_rand_state ^= 2747636419u;\n    global_rand_state *= 2654435769u;\n    global_rand_state ^= global_rand_state >> 16;\n    global_rand_state *= 2654435769u;\n    global_rand_state ^= global_rand_state >> 16;\n    global_rand_state *= 2654435769u;\n    return global_rand_state;\n}\n\nvoid make_rand_state(vec2 fragCoord, vec3 iResolution, int iFrame){\n    global_rand_state =\n        uint(fragCoord.y*iResolution.x + fragCoord.x) + \n        uint(iFrame)*uint(iResolution.x)*uint(iResolution.y);\n}\n\n\n// returns a float in the range [0.0..1.0]\nfloat uniform_float() {\n    return float(hash()) / 4294967295.0; // 2^32-1\n}","name":"Common","description":"","type":"common"}]}