{"ver":"0.1","info":{"id":"ll2fDy","date":"1517113869","viewed":107,"name":"Checkerboard - HW1","username":"ZachPhillips","description":"Homework 1 for EGP-200. Zach Phillips","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["homework"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    //vars for the amount of squares in the checkerboard\n    float row = 9.0;\n    float col = 16.0;\n    \n    //setting up the colors, using black and white\n    //vec4 Color1 = vec4(0.0, 0.0, 0.0, 1.0);\n    //vec4 Color2 = vec4(1.0, 1.0, 1.0, 1.0);\n    \n    //Bonus:using textures\n    vec4 Color1 = texture(iChannel0, uv);\n    vec4 Color2 = texture(iChannel1, uv);\n    \n    //calculates the height of the box depending on the amount of rows\n    float rowHeight = floor(uv.y * row);\n    \n    //calculates the width of the box depending on the amount of cols\n    float colWidth = floor(uv.x * col); \n    \n    //what is floor?\n    //floor returns an int closest to the next smallest int\n    //example: \n    //2.1 = 2, 2.6 = 2, 2.99999 = 2;\n    //same is used for ceiling, keyword ceil\n    //ceil returns the closest next largest int  \n    \n    //use this color as the background, easier than making this draw a checkerboard too\n    fragColor = Color1;\n    \n    //combine the row and col length to get a sum needed for mod\n    float squareSum = rowHeight + colWidth;\n    \n   \t//creates the checkerboard pattern on top of the background (explanation below)    \n    if( mod(squareSum, 2.0) == 0.0)\n    {\n        fragColor = Color2;\n    }\n    \n    //what is mod?\n    //mod returns the remainder after division of a by m, where a is the dividend and m is the divisor. \n    //can also be shown as b = a - m.*floor(a./m) (Source: https://www.mathworks.com/help/matlab/ref/mod.html?requestedDomain=true)\n    //example:\n    //squareSum = 2 (from 1 + 1)\n    //squareSum / 2 = 1 remainder 0\n    //this means that the fragColor is changed for that (1,1) area\n}","name":"Image","description":"","type":"image"}]}