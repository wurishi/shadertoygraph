{"ver":"0.1","info":{"id":"XdcXz7","date":"1458224151","viewed":225,"name":"1.5.Simpliest SpecularLight - 22","username":"Krosser22","description":"The simpliest specular light shader.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["simple","basic","texture","light","specular","22","ambient","diffuse","simpliest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Color\n    vec3 u_color = vec3(1.0, 1.0, 1.0);\n    \n    //Texture\n\tvec2 i_uv = fragCoord.xy / iResolution.xy;\n\tvec3 textureColor = texture(iChannel0, i_uv).xyz;\n    \n    //Ambient Light\n    float u_ambientStrength = 0.05;\n    vec3 ambientColor = u_color * u_ambientStrength;\n    \n    //Diffuse Light\n    vec3 u_lightColor = vec3(1.0, 1.0, 1.0);\n    vec3 i_lightDirection = vec3(1.0, 1.0, 1.0);\n    vec3 i_normalDirection = vec3(1.0, 1.0, 1.0);\n    vec3 lightDirection = normalize(i_lightDirection);\n    vec3 normalDirection = normalize(i_normalDirection);\n\tvec3 diffuseColor = u_lightColor * max(dot(normalDirection, lightDirection), 0.0);\n    \n\t//Specular Light\n    float u_shininess = 32.0;\n\tvec3 u_specularIntensity = vec3(1.0, 1.0, 1.0);\n\tvec3 u_specularMaterial = vec3(1.0, 1.0, 1.0);\n    vec3 i_cameraPosition = vec3(-(0.5+0.5*sin(iTime)), -1.0, -1.0); //Simulated movement of the camera\n\tvec3 viewDirection = normalize(normalDirection - i_cameraPosition);\n    vec3 reflectionDirection = reflect(-lightDirection, normalDirection);\n    float spec = pow(max(dot(viewDirection, reflectionDirection), 0.0), u_shininess);\n\tvec3 specularColor = u_lightColor * spec * u_specularIntensity * u_specularMaterial;\n    \n    //Final\n    fragColor = vec4(textureColor * (ambientColor + diffuseColor + specularColor), 1.0);\n}","name":"Image","description":"","type":"image"}]}