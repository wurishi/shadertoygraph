{"ver":"0.1","info":{"id":"l3fGWS","date":"1707863848","viewed":48,"name":"The Swirl","username":"Shin0155","description":"The Swirl","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["theswirl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shadertoy uniforms\nuniform vec3 iGlobalResolution;\nuniform float iGlobalTime;\n\n\n\n// Function to create a swirling effect with spiral arms\nvec2 swirlWithSpirals(vec2 uv, vec2 center, float radius, float time) {\n    vec2 dir = uv - center;\n    float dist = length(dir);\n    if (dist < radius) {\n        float angle = atan(dir.y, dir.x);\n        float spiralFactor = (radius - dist) / radius;\n        float spiralSpeed = 2.0;\n        float spiralStrength = 5.0; // Adjust the strength of the spiral arms\n        float spiralTime = time * spiralSpeed + spiralFactor * spiralStrength;\n        float spiralAngle = spiralTime + spiralFactor * sin(spiralTime);\n        float spiralRadius = radius * (1.0 - spiralFactor * 0.5);\n        uv = center + spiralRadius * vec2(cos(angle + spiralAngle), sin(angle + spiralAngle));\n    }\n    return uv;\n}\n\n// Function to create a color gradient\nvec3 colorGradient(vec2 uv, vec2 center, float radius) {\n    vec2 dir = uv - center;\n    float dist = length(dir);\n    float t = dist / radius;\n    t = clamp(t, 0.0, 1.0);\n    vec3 color = mix(vec3(0.0, 0.0, 0.5), vec3(1.0, 1.0, 1.0), t);\n    return color;\n}\n\n// Function to animate the galaxy center\nvec2 animateGalaxyCenter(vec2 center, float time) {\n    // Animate the center position over time\n    float moveSpeed = 0.5; // Adjust the speed of the movement\n    float moveRadius = 0.1; // Adjust the radius of the movement\n    float moveAngle = time * moveSpeed;\n    vec2 moveDir = vec2(cos(moveAngle), sin(moveAngle));\n    return center + moveDir * moveRadius;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // Galaxy parameters\n    vec2 galaxyCenter = vec2(0.5, 0.5); // Initial center of the galaxy in screen space\n    float galaxyRadius = 0.3; // Radius of the galaxy\n\n    // Animate the galaxy center\n    galaxyCenter = animateGalaxyCenter(galaxyCenter, iTime);\n\n    // Create swirling effect with spiral arms\n    uv = swirlWithSpirals(uv, galaxyCenter, galaxyRadius, iTime);\n\n    // Sample the texture with the distorted UV coordinates\n    vec3 color = texture(iChannel0, uv).rgb;\n\n    // Apply color gradient\n    color *= colorGradient(uv, galaxyCenter, galaxyRadius);\n\n    // Output the final color\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}