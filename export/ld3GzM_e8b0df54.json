{"ver":"0.1","info":{"id":"ld3GzM","date":"1448558246","viewed":165,"name":"Testing rotations","username":"prozacgod","description":"Just trying to figure out the texture space and learning how to create a rotation, should have used a matrix calculation here, but I knew that s(t)x - c(t)y ... etc by heart... or maybe it's backwards rotating the wrong way... or .. meh...","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learning","rotation","texturemapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = (uv * 2.0)- 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float phase = mod(iTime, 30.0)/30.0;\n    \n    phase *= 6.288;\n    \n    vec2 texuv = vec2(\n        sin(phase) * uv.x - cos(phase) * uv.y,\n        cos(phase) * uv.x + sin(phase) * uv.y\n    );\n    \n    texuv /= 20.0;\n    \n    vec3 color = texture(iChannel0, texuv).xyz;\n\t   \n\t    \n\tfragColor = vec4(color.xyz,1.0);\n}\n\n\n\n","name":"","description":"","type":"image"}]}