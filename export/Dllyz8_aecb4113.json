{"ver":"0.1","info":{"id":"Dllyz8","date":"1690399733","viewed":98,"name":"Bad Grid (help me please)","username":"ebkgne","description":"agreed","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    // this is a bit simplified and hardcoded values version of a shader Im trying to make to illustrate the problem Im facing\n    // to see the shader in action checkout :\n    // https://cdn.discordapp.com/attachments/1134025706469326890/1134025706779721768/Animation.gif \n    \n    vec2 max_lines = vec2(2.0); // number of possible lines inside the contour / outmost line\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    float debug0 = 1.0;  // is COLUMNS\n    float debug1 = 1.0;  // is ROWS\n    float debug2 = 0.9;  // is THICKNESS\n\n    vec2 grid = vec2(debug0,debug1);\n    vec2 thickness = vec2(debug2);\n    \n    vec2 res = iResolution.xy;\n    // Following line could be the problem\n    res /=  max_lines * grid + 1.0; // account for grid size in aspect \n    vec2 aspect = min(vec2(1.0),vec2(res.y/res.x,res.x/res.y)); \n    \n    grid = 1.0+grid*max_lines; // remap grid from 1 to max_lines \n    \n    // because of the following line I'd expect horizontal & vertical lines to have the same thickness \n    // though where they meet (in the corners for instance) is definetly not squared , thus lines do not have same thickness !\n    thickness *= aspect;\n\n    vec2 pixel = uv;\n    pixel = abs(pixel*2.0-1.0);    \n    // I believe the problem to be at following line, \"+thickness\" is not accounted for in aspect(or grid ?) definition above, \n    // but thickness is defined by aspect, so the snake eat his tail ... :(\n    // the extra thickness here is needed to correct the otherwise half thickness only on outmost line \n    // (you can try bypassing it to understand)\n    pixel*= grid +thickness; \n    pixel = abs(mod(pixel,2.0)-1.0);\n    pixel = step(pixel,thickness); \n\n \n    //fragColor = vec4(pixel.x,pixel.y,0,1);\n    fragColor = vec4(vec3(min(1.0,pixel.x+pixel.y)),1);\n    \n    \n    // draw a black square in the corner to help notice the unsquarness\n    float carre = (iResolution.x/(grid.x*2.0+2.0))+mod(iTime,1.0)*15.0;\n    if (fragCoord.x > iResolution.x-carre && fragCoord.y > iResolution.y-carre && fragCoord.x < iResolution.x && fragCoord.y < iResolution.y) fragColor-=vec4(.5);\n\n\n    \n}\n\n","name":"Image","description":"","type":"image"}]}