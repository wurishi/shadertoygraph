{"ver":"0.1","info":{"id":"wl3fz2","date":"1613064706","viewed":119,"name":"Tiny Raymarcher","username":"oneshade","description":"Can you make it smaller?","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["3d","raymarching","sphere","sky","codegolf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Shorter version by jarble, -3 chars (221 chars) */\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 R = iResolution, d = normalize(vec3((u + u - R.xy) / R.y, 1)), p;\n    float t = 0., s;\n    for (int i=0; i++ < 99; t += s)\n        p = d * t, p.z -= 5., s = length(p) - 2.7;\n        o =  (s < .1) ? vec4(p.y - p.z - p.x, 0, 0, 1) / 4.5:vec2(.62 + .38 * d.y, 1).xxyy;\n}\n/**/\n\n/* Shorter version by oneshade, -2 chars (224 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 R = iResolution, d = normalize(vec3((u + u - R.xy) / R.y, 1)), p;\n    o = vec2(.62 + .38 * d.y, 1).xxyy;\n    float t = 0., s;\n    for (int i=0; i++ < 99; t += s)\n        p = d * t, p.z -= 5., s = length(p) - 2.7;\n        if (s < .1) o = vec4(p.y - p.z - p.x, 0, 0, 1) / 4.5;\n}\n**/\n\n/* Shorter version by blackle, -7 chars! (226 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 R = iResolution, d = normalize(vec3((u + u - R.xy) / R.y, 1)), p;\n    o = vec2(0.62 + 0.38 * d.y, 1).xxyy;\n    float t = 0., s;\n    for (int i=0; i++ < 99; t += s)\n        p = d * t, p.z -= 5., s = length(p) - 2.7;\n        if (s < .1) o = vec4(p.y - p.z - p.x, 0, 0, 1) / 4.5;\n}\n**/\n\n/* Shorter version by oneshade ;), -3 chars (233 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 R = iResolution, d = normalize(vec3((u + u - R.xy) / R.y, 1)), p;\n    o = mix(vec2(.62, 1), vec2(1), d.y).xxyy;\n    float t = 0., s;\n    for (int i=0; i++ < 99; t += s)\n        p = d * t, p.z -= 5., s = length(p) - 2.7;\n        if (s < .1) o = vec4(p.y - p.z - p.x, 0, 0, 1) / 4.5;\n}\n**/\n\n/* Shorter version by blackle, -3 chars (236 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 R = iResolution, d = normalize(vec3((u + u - R.xy) / R.y, 1)), p;\n    o = mix(vec4(1, 1, 4, 4) / 8. + .5, vec4(1), d.y);\n    float t = 0., s;\n    for (int i=0; i++ < 99; t += s)\n        p = d * t, p.z -= 5., s = length(p) - 2.7;\n        if (s < .1) o = vec4(p.y - p.z - p.x, 0, 0, 1) / 4.5;\n}\n**/\n\n/* Original code (239 chars) *\nvoid mainImage(out vec4 o, vec2 u) {\n    vec3 R = iResolution, d = normalize(vec3((u + u - R.xy) / R.y, 1)), p;\n    o = mix(vec4(1, 1, 4, 4) / 4., vec4(1), .5 + .5 * d.y);\n    float t = 0., s;\n    for (int i=0; i++ < 99; t += s)\n        p = d * t, p.z -= 5., s = length(p) - 2.7;\n        if (s < .1) o = vec4(p.y - p.z - p.x, 0, 0, 1) / 4.5;\n}\n**/","name":"Image","description":"","type":"image"}]}