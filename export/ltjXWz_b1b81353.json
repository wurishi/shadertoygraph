{"ver":"0.1","info":{"id":"ltjXWz","date":"1443013596","viewed":162,"name":"3D SPhere TP1","username":"clem19s","description":"3D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float phong(in vec3 origine, in vec3 point, in vec3 centreLumiere, in vec3 N){\n    vec3 L = normalize(centreLumiere - point);\n    vec3 R = normalize(2.0*dot(N,L)*N-L);\n    //vec3 R = normalize(reflect(L,norme));\n    vec3 V = normalize(origine - point);\n            \n    float diffuse = max(dot(N, L), 0.0);\n            \n    float speculaire = pow(max(dot(R, V), 0.0), 64.0);\n            \n    float ambiante = 0.15;\n    \n    \n            \n    float intensite = diffuse + speculaire + ambiante;\n    \n    return clamp(intensite,0.0,1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy/2.0 + gl_FragCoord.xy) / iResolution.xy;\n   \tuv.x *= 16.0/9.0;\n\tvec3 origine = vec3(0.0, 0.0, -2.0);\n\tvec3 direction = normalize(vec3(uv, 1.0));\n    \n    vec3 point = origine;\n    \n    vec3 centreLumiere = vec3(2.0*sin(iTime),2.0,3.0*cos(iTime));\n    \n    vec3 centreSphere = vec3(1.5,0.0,2.0);\n    \n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    \n    for (float i = 0.0; i <1000.0; i++){\n        \n        point = point + direction * 0.01;\n        \n        if(point.y < -1.0){\n            vec3 N = vec3(0.0,1.0,0.0);\n            \n            float intensite = phong(origine, point, centreLumiere, N);\n            \n            vec3 L = normalize(centreLumiere - point);\n            for(int j = 0; j < 512; j++){\n                point = point + L*0.01;\n                if(distance(point, centreSphere) <= 1.0){\n                    intensite = 0.0;\n                    break;\n                }\n            }\n            \n            fragColor = vec4(intensite,intensite,intensite,1.0);\n            break;\n        }\n        \n        if(point.z > 5.0){\n            vec3 N = vec3(0.0,0.0,-1.0);\n            \n            float intensite = phong(origine, point, centreLumiere, N);\n            \n            vec3 L = normalize(centreLumiere - point);\n            for(int j = 0; j < 512; j++){\n                point = point + L*0.01;\n                if(distance(point, centreSphere) <= 1.0){\n                    intensite = 0.0;\n                    break;\n                }\n            }\n            \n            fragColor = vec4(intensite,intensite,intensite,1.0);\n            break;\n        }\n        \n        if( distance(point, centreSphere) <= 1.0){\n            \n        \tvec3 norme = normalize(point - centreSphere);\n      \n            float intensite = phong(origine, point, centreLumiere, norme);\n            \n            fragColor = vec4(intensite, intensite, intensite,1.0);\n          \tbreak;\n        }\n        \n        \n    }\n}\n","name":"","description":"","type":"image"}]}