{"ver":"0.1","info":{"id":"l3GXWd","date":"1720629054","viewed":29,"name":"Easy Keyboard Persistence","username":"unravelwinter","description":"Simple keyboard input and persistence. Store current position in pixel (0, 0). Use the arrow keys to move.","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["simple","reference","easy","keyboard","persistence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {    \n    // Get stored coordinates\n    vec2 coord = texelFetch(iChannel0, ivec2(0), 0).xy;\n    \n    // Draw circle\n    float col = (1.0 - distance(fragCoord, coord)*0.02);\n\tfragColor = vec4(0, 0, col, 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nconst float speed = 100.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) { \n    // At the beginning of each frame, store current coordinates in pixel (0, 0)\n    if (int(fragCoord.y) == 0 && int(fragCoord.x) == 0) { \n        float xCoord = texelFetch(iChannel0, ivec2(0), 0).r +\n            (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r -\n            (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r;\n            \n        float yCoord = texelFetch(iChannel0, ivec2(0), 0).g +\n            (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r -\n            (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r;\n            \n        fragColor = vec4(xCoord, yCoord, 0, 1);\n    }   \n}","name":"Buffer A","description":"","type":"buffer"}]}