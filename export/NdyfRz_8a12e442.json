{"ver":"0.1","info":{"id":"NdyfRz","date":"1657530094","viewed":688,"name":"postprocess existing shaders","username":"FabriceNeyret2","description":"easy adaptive sampling:\nJust add this Common to postprocess any shader. Example here: antialiasing ( amount _NÂ² ) + sRGB \nAttention: will do it on all buffers.\n\nMouse.x : ref separator \n","likes":25,"published":3,"flags":16,"usePreview":0,"tags":["antialiasing","sampling","tuto","easyadaptivesampling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// base shader: https://www.shadertoy.com/results?query=hexamaz\n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2  R =  iResolution.xy;\n    float s = iMouse.z>0. ? iMouse.x : R.x/2.;\n    if ( U.x<s) _N=1;    // just for this demo: left = no antialiasing\n\n    vec3 V =  ( ( (U) -9.*iTime ) * mat2(cos(.1 + vec4(0,11,33,0))) )\n             * mat3x2( 12, -7, 0, 14,    12, 7 ) / 1e2; \n    O = vec4( fract(  V[ 1 + int( 2.* sin( 1e5* length( ceil( V.xy )))) ]) < .1 );\n\n    if ( abs(U.x-s) < 1. ) O = vec4(1,0,0,1); // red separator\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"int _N = 3;\n#define mainImage mainImage0(out vec4 O, vec2 U);        \\\nvoid mainImage(out vec4 O, vec2 U) {                     \\\n    vec4 o; O = vec4(0);                                 \\\n    for (int k=0; k < _N*_N; k++ )                       \\\n      { mainImage0(o,U+vec2(k%_N-_N/2,k/_N-_N/2)/float(_N)); O += o; }  \\\n    O /= float(_N*_N);                                   \\\n    O = pow( O, vec4(1./2.2) );        /* to sRGB */     \\\n} \\\nvoid mainImage0","name":"Common","description":"","type":"common"}]}