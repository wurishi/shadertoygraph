{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime/1.50;\n\tvec2 uv = fragCoord.xy / iResolution.yy;\n    vec2 center = vec2(0.1,0.5);\n    \n    //we want to decide whether we're moving left or right. \n    \n    //we take the global time and get a value 0.0-2.0\n    \n\tfloat xPos = mod(t, 2.0);\n    xPos = abs(xPos-1.0)*1.4;\n    center[0]+=xPos;\n    center[1]+=-0.4+0.7*abs(sin(t*5.0));\n\tuv-=center;    \n    float dist = sqrt(dot(uv,uv));\n    float angle = atan(uv.x,uv.y);\n    angle*=8.0;\n    \n    \n    vec3 yellow = vec3(1.0,0.8,0.1);\n    \n    \n    \n    \n    vec3 outC = vec3(1.0-dist*abs(angle/2.0));\n    outC[0]=pow(outC[0],0.5);\n    \n    outC[2]=pow(outC[2],2.0);\n    outC[0] = max(0.0,outC[0]);\n\toutC[2] = max(0.0,outC[2]);\n\tfloat fracSecond = 1.0-mod(t,1.0);\n   fracSecond = pow(fracSecond,3.0);\n   if(dist<0.15){\n       outC = mix(yellow,outC,4.0*dist);\n    } else {\n    \n    \toutC = vec3(0.3-mod(t*1.5,1.0));\n\t}\n    \n    fragColor = vec4(outC,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XsjSz3","date":"1414392329","viewed":234,"name":"Ridiculous bouncing ball","username":"zachernuk","description":"Just testing out some functions - step, mix, pow sqrt, abs and mod all make an appearance here. \n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["silly","bounce","learning","doodle"],"hasliked":0,"parentid":"","parentname":""}}