{"ver":"0.1","info":{"id":"cdSBW3","date":"1690189523","viewed":60,"name":"Small Fire Man","username":"luhongdi","description":"You can try to move your mouse, this is a little picture of a ghost animal, his hair and eyes will move with the mouse","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","cartoon","fire","human","people","spoof"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\nmat2 rotate2d(float _angle){//rotate angle\n  return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289(((x*34.0)+1.0)*x); }\n//this noise function from https://thebookofshaders.com/edit.php#11/iching-03.frag\nfloat snoise(vec2 v) {//return -1.0~1.0\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                        0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                        0.024390243902439); // 1.0 / 41.0\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n                     + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\nfloat noise_sum_abs(vec2 p,float f)\n{\n    p = p * 2.0;\n    f += 1.0000 * abs(snoise(p)); p = 2.0 * p;\n    f += 0.5000 * abs(snoise(p)); p = 2.0 * p;\n    f += 0.2500 * abs(snoise(p)); p = 2.0 * p;\n    f += 0.1250 * abs(snoise(p)); p = 2.0 * p;\n    f += 0.0625 * abs(snoise(p)); p = 2.0 * p;\n\n    return f;\n}\n\nfloat noise_sum(vec2 p,float f)\n{\n    p = p * 2.0;\n    f += 1.0000 * (snoise(p)); p = 2.0 * p;\n    f += 0.5000 * (snoise(p)); p = 2.0 * p;\n    f += 0.2500 * (snoise(p)); p = 2.0 * p;\n    f += 0.1250 * (snoise(p)); p = 2.0 * p;\n    f += 0.0625 * (snoise(p)); p = 2.0 * p;\n\n    return f;\n}\n\n\nfloat plot_wind_line(vec2 st,vec2 point1,vec2 point2,float upordown){\n   \n    float tranx=0.0;\n    float rate=(point2.y-point1.y)/(point2.x-point1.x);\n    if(st.x<point1.x){\n        tranx=(point1.y/point1.x)*st.x;\n    }\n    else if(st.x>=point1.x && st.x<=point2.x){\n        tranx=point1.y+rate*(st.x-point1.x+0.01);\n    }\n    else{\n        tranx=point2.y+st.x;\n        \n    }\n    float line =smoothstep(point1.y,point2.y,tranx);\n    float rate2=point2.y-point1.y;\n    float tranline=point1.y+rate2*(line);\n    float cut=step(point1.x,st.x)-step(point2.x,st.x);\n    \n    float longline=smoothstep( tranline, tranline, st.y);\n    float totalline;\n    if(upordown == 1.0){\n        totalline=longline*cut; \n    }\n    else{\n        totalline=(1.0-longline)*cut;\n    }\n    \n    return totalline;\n    \n}\nfloat plot_wind_traingle(vec2 st,vec2 uppoint,vec2 middlepoint,vec2 rightpoint){\n    float tranx=0.0;\n    vec2 Transt;\n    Transt.y=st.x;\n    Transt.x=st.y;\n    float lineum=0.0;\n    float linemr=0.0;\n    float lineur=0.0;\n    float triangle=0.0;\n    linemr= plot_wind_line(st,middlepoint,rightpoint,1.0);\n    if(uppoint.x<middlepoint.x){\n        lineum= plot_wind_line(st,uppoint,middlepoint,1.0);\n        lineur=plot_wind_line(st,uppoint,rightpoint,-1.0);\n        triangle=(lineum+linemr)*lineur;\n    }\n    else{\n        lineum=plot_wind_line(st,middlepoint,uppoint,-1.0);\n        if(uppoint.x<rightpoint.x){\n            lineur=plot_wind_line(st,uppoint,rightpoint,-1.0);\n            triangle=(lineum+lineur)*linemr;\n        }\n        else{\n            lineur=plot_wind_line(st,rightpoint,uppoint,1.0);   \n            triangle=(linemr+lineur)*lineum;\n       }\n    }\n    \n    return triangle;\n    \n}\n\nfloat drawEllipse(vec2 fragCoord, vec2 center, vec2 radius)\n{\n    vec2 uv = (fragCoord - center) / radius;\n    float distance = length(uv);\n    \n    if (distance <= 1.0)\n    {\n        return 1.0;  \n    }\n    else\n    {\n        return 0.0;  \n    }\n}\nfloat drawCircle(vec2 fragCoord, vec2 center, float r)\n{\n    vec2 uv = (fragCoord - center);\n    float distance = length(uv);\n    float total=smoothstep(r+0.02,r,distance)-smoothstep(r,r-0.02,distance);\n    return total;\n\n}\nfloat drawpoint(vec2 fragCoord, vec2 center, float r)\n{\n    vec2 uv = (fragCoord - center);\n    float distance = length(uv);\n    float total=smoothstep(r,r+0.01,distance);\n    return total;\n\n}\nfloat plot_wind_line(vec2 st,vec2 point1,vec2 point2){\n  float tranx=0.0;\n  float rate=(point2.y-point1.y)/(point2.x-point1.x);\n  if(st.x<point1.x){\n      tranx=(point1.y/point1.x)*st.x;\n    }\n  else if(st.x>=point1.x && st.x<=point2.x){\n      tranx=point1.y+rate*(st.x-point1.x+0.01);\n    }\n  else{\n      tranx=point2.y+st.x;\n\n    }\n  float line =smoothstep(point1.y,point2.y,tranx);\n  float rate2=point2.y-point1.y;\n  float tranline=point1.y+rate2*(line);\n  float cut=step(point1.x,st.x)-step(point2.x,st.x);\n\n  float longline=smoothstep( tranline-0.03, tranline, st.y)-\n      smoothstep( tranline, tranline+0.03, st.y);\n  float totalline=longline*cut;\n\n  return totalline;\n\n}\n\nfloat rectangle(vec2 coord,vec2 size,vec2 position){//plot rectangle ,coord is totla location ,position is left front of picture\n  vec2 coord_new;\n  coord_new.x=coord.x;\n  coord_new.y=coord.y;\n  size=0.5*position-size*0.5;\n  vec2 uv=smoothstep(size,size+0.01,coord_new);\n  uv*=smoothstep(size,size+0.01,(position-coord_new));\n  return uv.x*uv.y;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 st=uv*vec2(15.0,9.5);\n    vec2 iMouse=iMouse.xy/iResolution.xy;\n    vec2 mouse=iMouse*vec2(1.5,1.0);\n    float time=0.8*iTime;\n    vec2 Orig_Point=vec2(10.0*(mouse.x),10.0*(mouse.y));\n    vec2 New_st=st-Orig_Point;\n    vec2 New_sthh=st-vec2(5.0,5.0);\n    New_st.x=New_st.x+1.036;\n    New_st.y=New_st.y-1.6;\n \t vec3 color = vec3(0.940,0.071,0.017);\n    \n    vec2 st_time;\n    float x=New_st.x+sin(time);\n    float y=New_st.y+sin(time);\n    st_time.x=x;\n    st_time.y=y;\n    \n    float noisestvalue1=noise_sum(vec2(New_st.x-0.0*sin(time),New_st.y-1.0*time),0.0);\n    float noisestvalue2=noise_sum_abs(vec2(New_st.x-0.0*sin(time),New_st.y-1.0*time),0.0);\n    float noisestvalue=noisestvalue1;\n    \n    float noisestvaluehh=noise_sum(vec2(New_sthh.x-0.0*sin(time),New_sthh.y-1.0*time),0.0);\n    \n    float totalnoise=smoothstep(0.2,0.6,noisestvalue);\n    float totalnoisestep=step(1.4,noisestvalue);\n    float totalnoisestephh=step(1.4,noisestvaluehh);\n    \n    float bb=totalnoisestephh;//bk\n\t float cc;//hair\n    cc=plot_wind_traingle(vec2(New_st.x,New_st.y),vec2(0.680+0.1*noisestvalue+2.0*(0.5-mouse.x),2.9+0.1*noisestvalue+2.0*(0.5-mouse.y)),vec2(0.6,0.2), vec2 (1.9,0.2));\n    cc+=plot_wind_traingle(vec2(New_st.x,New_st.y),vec2(0.3+0.15*noisestvalue+2.0*(0.5-mouse.x),1.5+0.01*noisestvalue+2.0*(0.5-mouse.y)),vec2(0.1,0.2), vec2 (1.3,0.2));\n    cc+=plot_wind_traingle(vec2(New_st.x,New_st.y),vec2(1.69+0.15*noisestvalue+2.0*(0.5-mouse.x),1.9+0.01*noisestvalue+2.0*(0.5-mouse.y)),vec2(1.5,0.2), vec2 (2.5,0.2));\n    cc+=plot_wind_traingle(vec2(New_st.x,New_st.y),vec2(2.09+0.15*noisestvalue+2.0*(0.5-mouse.x),1.4+0.01*noisestvalue+2.0*(0.5-mouse.y)),vec2(1.9,0.2), vec2 (2.9,0.0));\n    cc+=plot_wind_traingle(vec2(New_st.x,New_st.y),vec2(3.09+0.15*noisestvalue+2.0*(0.5-mouse.x),0.85+0.01*noisestvalue+2.0*(0.5-mouse.y)),vec2(2.7,0.0), vec2 (3.1,0.0));\n    cc+=bb;\n    float dd;//head\n    dd= drawEllipse(New_st, vec2(1.6,-0.1+0.1*noisestvalue), vec2(1.5+0.1*noisestvalue,2.2));\n    float ee;//line\n    ee=1.0-step(0.2,New_st.y);\n    dd*=ee;\n    float ff;//eye\n    ff=drawCircle(New_st, vec2(1.19+0.023*noisestvalue,-0.55),0.2+1.0*(0.5-mouse.x));\n    ff+=drawCircle(New_st, vec2(2.1+0.02*noisestvalue,-0.55),0.25+1.0*(0.5-mouse.y));\n    ff=1.0-ff;\n    dd*=ff;\n    float gg;//yanqiu\n    gg=drawpoint(New_st, vec2(1.19+0.023*noisestvalue,-0.55),0.05-min(1.0*(0.5-mouse.x),0.0));\n    gg*=drawpoint(New_st, vec2(2.1+0.02*noisestvalue,-0.55),0.1+1.0*(0.5-mouse.y));\n    dd*=gg;\n    float hh;//mouse\n    hh=plot_wind_line(New_st,vec2(1.4,-1.6),vec2(2.2,-1.3));\n    hh=1.0-hh;\n    dd*=hh;\n    float body;\n    body=rectangle(New_st,vec2(1.2,1.5),vec2(3.25+0.1*noisestvalue,-5.8+0.1*noisestvalue));\n    body+=rectangle(New_st,vec2(0.3,0.5),vec2(2.6+0.1*noisestvalue,-7.8+0.1*noisestvalue))+(1.0-drawpoint(New_st, vec2(1.28+0.023*noisestvalue,-4.15),0.155));\n    body+=rectangle(New_st,vec2(0.3,0.5),vec2(3.9+0.1*noisestvalue,-7.8+0.1*noisestvalue))+(1.0-drawpoint(New_st, vec2(1.95+0.023*noisestvalue,-4.15),0.155));\n    vec2 rotatest=vec2(New_st)-vec2(1.0+0.1,-2.0-0.3);\n\t rotatest=rotatest*rotate2d(0.5);\n    rotatest=rotatest+vec2(1.0+0.1,-2.0-0.3);\n    body+=rectangle(rotatest,vec2(0.2,0.7),vec2(1.75+0.05*noisestvalue,-5.1+0.05*noisestvalue));\n    vec2 rotatest2=vec2(New_st)-vec2(3.0-0.6,-2.0-0.5);\n\t rotatest2=rotatest2*rotate2d(-0.5);\n    rotatest2=rotatest2+vec2(3.0-0.6,-2.0-0.6);\n    body+=rectangle(rotatest2,vec2(0.2,0.7),vec2(4.75+0.05*noisestvalue,-5.1+0.05*noisestvalue));\n    body+=(1.0-drawpoint(New_st, vec2(0.58+0.023*noisestvalue,-2.75),0.095));\n\t body+=(1.0-drawpoint(New_st, vec2(2.50+0.023*noisestvalue,-2.75),0.095));\n    dd+=body;\n    \n    cc+=dd;\n    float zz=step(0.00,New_st.y);\n\n    // Time varying pixel color\n    vec3 col = color*cc;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}