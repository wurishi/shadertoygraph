{"ver":"0.1","info":{"id":"cdKfDd","date":"1698775886","viewed":96,"name":"Stripes beats","username":"Bleuje","description":"Code for live visuals performance. It was synchronized with the live coded music.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["colorful","livecoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// by @etiennejcb\n\nfloat t;\nfloat pulseTime;\nfloat pulseTime2;\nfloat period;\n\nfloat pmap(float x,float a,float b,float c,float d){\n  float progress = (x - a) / (b - a);\n  return c + (d - c) * progress;\n}\n\nfloat timeMoves(float x, float duration, float part, float g){\n  float md = mod(x, duration);\n  float start = floor(x/duration) * duration;\n  float nm = md/duration;\n  float change = clamp(pmap(nm, part, 1., 0., 1.), 0., 1.);\n  change = 1. - pow(1. - change, g);\n  return start + change * duration;\n}\n\nmat2 rot2D(float a){float c = cos(a), s = sin(a); return mat2(c,-s,s,c);}\n\nvec3 aces(vec3 x) {\n  const float a = 2.51;\n  const float b = 0.03;\n  const float c = 2.43;\n  const float d = 0.59;\n  const float e = 0.14;\n  return clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0.0, 1.0);\n}\n\nfloat discre(float a) {return floor(mod(mod(a,2.0) + 2.0, 2.0));}\n\n////////////////////////////////////////////////////////////////////\n\nfloat discre2(float a){\n  float modulo = mod(mod(a,2.0) + 2.0, 2.0);\n  float type = floor(modulo);\n  float ret = type==0. ? 0. : mod(8. * modulo,2.0);\n  return ret;\n}\n\nfloat field1(vec2 pos0,float q) {\n  vec2 pos = pos0;\n  pos *= rot2D(-0.3*pulseTime2);\n  return q - 2.5*(1.5*abs(pos.y)+1.0*abs(pos.x) + 0.3*sin(1.2*pos.x + 1.3*pulseTime2));\n}\n\nfloat field2(vec2 pos,float q) {\n  //return q - f*(abs(pos.y)+1.4*abs(pos.x));\n  return q - 3.3*length(pos);\n  //return q - 4.0*abs(pos.y);\n}\n\nfloat field3(vec2 pos,float q) {\n  return q + 7.0*length(pos);\n}\n\nfloat field4(vec2 pos, float q) {\n  return q + 13.0*abs(pos.x);\n}\n\nfloat pcol(vec2 uv,float q, float q2) {\n    //float col0 = discre(discre(field1(uv,q)) + discre(field2(uv,q)));\n    //float col1 = discre(field1(uv,q));\n    //float col2 = discre2(field1(uv,q) + field2(uv,q) + 1.3*sin(3.*uv.x + 3.*pulseTime) + 1.5*sin(4.*uv.y + 1.1 + 3.*pulseTime) );\n    //float col3 = discre(discre2(field1(uv,q)) + discre2(field2(uv,q)));\n    //float col4 = discre(discre(field3(uv,q)) + discre(discre2(field1(uv,q)) + discre2(field2(uv,q))));\n    //float col5 = discre(discre(field4(uv,q)) + discre(field3(uv,q)) + discre(discre2(field1(uv,q)) + discre2(field2(uv,q))));\n    float wavyOffset = 1.3*sin(3.*uv.x + 3.*pulseTime) + 1.5*sin(4.*uv.y + 1.1 + 3.*pulseTime);\n    float col6 = discre(wavyOffset\n                        + discre(field4(uv,q))\n                        + discre(field3(uv,q))\n                        + discre(discre2(field1(uv,q))\n                        + discre2(field2(uv,q))));\n    return col6;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 s = fragCoord.xy / iResolution.xy;\n  vec2 uv = (s-0.5)*iResolution.xx / iResolution.yx;\n\n  uv *= 1.3 + 0.85*sin(0.2*t);\n\n  float bpm = 176./2.;\n  period =  1.0 / (bpm / 60.);\n  float TF = 2.0;\n  float phase = 0.05;\n  t = TF*iTime;\n  pulseTime = TF*timeMoves(iTime - phase, period, 0.2, 1.6);\n  pulseTime = mix(t,pulseTime,0.7);\n\n  pulseTime2 = TF*timeMoves(iTime - phase, 2.*period, 0.2, 1.6);\n  pulseTime2 = mix(t,pulseTime2,0.7);\n\n  float dt = 0.035;\n\n  vec3 rgb = vec3(pcol(uv,pulseTime,t),\n                  pcol(uv,pulseTime-dt,t-dt),\n                  pcol(uv,pulseTime-2.*dt,t-2.*dt));\n\n  float coff = length(uv)*1.0;\n  rgb.xy *= rot2D(0.57*t-coff);\n  rgb.yz *= rot2D(0.87*t-coff*1.2);\n  rgb = abs(rgb);\n\n  float scl = 13.0+4.*sin(0.37*t);\n  vec2 ruv = uv;\n  ruv *= rot2D(0.05*t);\n  rgb = mix(rgb,vec3(1.0)-rgb,discre(ruv.x*scl));\n  //rgb = mix(rgb,vec3(1.0)-rgb,discre(ruv.y*scl));\n\n\n  rgb = aces(aces(rgb));\n\n  fragColor = vec4(rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}