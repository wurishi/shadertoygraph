{"ver":"0.1","info":{"id":"XcdyDn","date":"1730496694","viewed":138,"name":"flower :)","username":"clara_bnuuy","description":"a small flower-like thingy!!","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.2, 0.1, 0.5);\n    vec3 b = vec3(0.2, 0.0, 0.5);\n    vec3 c = vec3(.5, .5, .5);\n    vec3 d = vec3(0.8, 0.416, 0.557);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nfloat rand(vec2 n) { \n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.);\n\n    // how many layers to draw\n    int layers = 8;\n    \n    // radius of smallest layer\n    float baseRadius = 0.75;\n    \n    // sharpness of petals\n    float waveAmplitude = .05;\n    \n    // how many petals (should be whole number)\n    float basePetalCount = 2.;\n    \n    // speed of the simulation\n    float t = iTime * .8;\n\n    // Breathing effect speed\n    float breatheFreq = .9;\n    // and amplitude\n    float breatheQuot = .1 * sin(t * breatheFreq);\n    layers += int(round(breatheQuot + 2.));\n    \n    float minPetalCount = 1.0;\n    float maxPetalCount = 20.0;\n    \n    float angle = atan(uv.y, uv.x);\n    float dist = length(uv);\n    \n    for (int i = 0; i <= layers; i++) {\n        float frac = float(i) / float(layers);\n        float radI = (baseRadius + breatheQuot) * frac;\n        \n        float petalCount = floor(mix(minPetalCount, maxPetalCount, frac));\n        \n        float perturbedRadius = radI + waveAmplitude * sin(angle * petalCount + t * 5.2);\n\n        \n        // Set line thickness\n        float edge = 0.002;\n\n        // we can use abs for discrete lines instead of areas\n        if ((dist - perturbedRadius) < edge) {\n            vec3 color = palette(dist + t * .4);\n            finalColor += color;\n        }\n        \n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}