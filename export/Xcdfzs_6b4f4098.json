{"ver":"0.1","info":{"id":"Xcdfzs","date":"1733395716","viewed":80,"name":"Heavily distorted VHS","username":"oemfoe","description":"Forked from https://www.shadertoy.com/view/XtBXDt and added extra distortion","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["distortion","vhs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define gl_FragCoord fragCoord\n#define gl_FragColor fragColor\n\n#define PI 3.14159265\n#define uDistort 1.\n\nvec3 tex2D( sampler2D _tex, vec2 _p ){\n  vec3 col = texture( _tex, _p ).xyz;\n  if ( 0.5 < abs( _p.x - 0.5 ) ) {\n    col = vec3( 0.1 );\n  }\n  return col;\n}\n\nfloat hash( vec2 _v ){\n  return fract( sin( dot( _v, vec2( 89.44, 19.36 ) ) ) * 22189.22 );\n}\n\nfloat iHash( vec2 _v, vec2 _r ){\n  float h00 = hash( vec2( floor( _v * _r + vec2( 0.0, 0.0 ) ) / _r ) );\n  float h10 = hash( vec2( floor( _v * _r + vec2( 1.0, 0.0 ) ) / _r ) );\n  float h01 = hash( vec2( floor( _v * _r + vec2( 0.0, 1.0 ) ) / _r ) );\n  float h11 = hash( vec2( floor( _v * _r + vec2( 1.0, 1.0 ) ) / _r ) );\n  vec2 ip = vec2( smoothstep( vec2( 0.0, 0.0 ), vec2( 1.0, 1.0 ), mod( _v*_r, 1. ) ) );\n  return ( h00 * ( 1. - ip.x ) + h10 * ip.x ) * ( 1. - ip.y ) + ( h01 * ( 1. - ip.x ) + h11 * ip.x ) * ip.y;\n}\n\nfloat noise( vec2 _v ){\n  float sum = 0.;\n  for( int i=1; i<9; i++ )\n  {\n    sum += iHash( _v + vec2( i ), vec2( 2. * pow( 2., float( i ) ) ) ) / pow( 2., float( i ) );\n  }\n  return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = gl_FragCoord.xy / iResolution.xy;\n  vec2 uvn = uv;\n  vec3 col = vec3( 0.0 );\n\n  // tape wave\n  uvn.x += ( noise( vec2( uvn.y, time ) ) - 0.500 )* (0.001 + uDistort * 2.); //@wave0\n  uvn.x += ( noise( vec2( uvn.y * 100.000, time * 10.000 ) ) - 0.500 ) * 0.01; // wave=[0:100]\n\n  // tape crease\n  float tcPhase = clamp( ( sin( uvn.y * 8.000 - time * PI * 1.2 ) - 0.920 ) * noise( vec2( time ) ), 0.0, 0.01 ) * 10.0; //phase=[0:10]\n  float tcNoise = max( noise( vec2( uvn.y * 200.000, time * 10.000 ) ) - 0.500, 0.0 ); //noise\n  uvn.x = uvn.x - tcNoise * tcPhase * 0.5;\n\n  // switching noise\n  float snPhase = smoothstep( 0.030, 0.000, uvn.y ); // @switch=[0:1]\n  uvn.y += snPhase * 0.3;\n  uvn.x += snPhase * ( ( noise( vec2( uv.y * 100.0, time * 10.0 ) ) - 0.5 ) * 0.2 );\n    \n  col = tex2D( iChannel0, uvn );\n  col *= 1.0 - tcPhase;\n  col = mix(\n    col,\n    col.yzx,\n    snPhase\n  );\n\n  // bloom\n  for( float x = -4.0; x < 2.5; x += 1.0 ){\n    col.xyz += vec3(\n      tex2D( iChannel0, uvn + vec2( x - 0.0, 0.0 ) * 7E-3 ).x,\n      tex2D( iChannel0, uvn + vec2( x - 1.0, 0.0 ) * 7E-3 ).y,\n      tex2D( iChannel0, uvn + vec2( x - 2.0, 0.0 ) * 7E-3 ).z\n    ) * 0.1;\n  }\n  col *= 0.6;\n\n  // ac beat\n  col *= 1.000 + clamp( noise( vec2( 0.000, uv.y + time * 0.200 ) ) * 0.600 - 0.250, 0.000, 0.100 ); //ac=[0:10]\n\n  gl_FragColor = vec4( col, 1.0 );\n}\n\n#undef gl_FragCoord\n#undef gl_FragColor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}