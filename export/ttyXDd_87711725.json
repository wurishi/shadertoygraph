{"ver":"0.1","info":{"id":"ttyXDd","date":"1583850784","viewed":407,"name":"Grid rotation illusion","username":"jeyko","description":"recreation of this https://youtu.be/QAja2jp1VjE?t=267","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["optical","illusion","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// recreation of this https://youtu.be/QAja2jp1VjE?t=267\n\n#define pmod(p,x) mod(p,x) - 0.5*x\n#define rot(x) mat2(cos(x),-sin(x),sin(x),cos(x))\n\n// thx to Fabrice for adding antialiasing\nfloat get (vec2 uv){\n    float modD = 0.024;\n    uv /= modD*2.;\n    uv = smoothstep(-fwidth(uv.x),fwidth(uv.x), 2.* abs(fract(uv)-.5)-.5); // abs(fract(uv)-.5)-.25 is more correct at the end\n    uv = 2.*uv-1.; \n    return .5+ .5* uv.x*uv.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n\n    \n    uv *= 1. + sin(iTime*0.5)*0.3;\n    col += get(uv)*0.9;\n    col += get(uv*rot( sin(fract(1.*iTime/3.14))*0.3));\n    col = 1. - col;\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}