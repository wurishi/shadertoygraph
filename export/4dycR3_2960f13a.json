{"ver":"0.1","info":{"id":"4dycR3","date":"1522714205","viewed":307,"name":"Simple Color Map - RGB","username":"chao_mu","description":"Calculate luminance and then based on that range, do linear interpolation with the mix function. For the first half of the range of luminance, use a and b, after that use b and c.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["simple","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define START_COLOR vec3(1., 0., 1.)\n#define MIDDLE_COLOR vec3(0., 1., 0.)\n#define END_COLOR vec3(1., 0., 1.)\n\n// Calucalate the luminance of a given pixel.\nfloat luminance(vec3 rgb) {\n    return dot(rgb, vec3(0.3, 0.59, 0.11));\n}\n\n// Remap number to [0, 1]\n#define to01(value, low, high) (value - low) / (high - low)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 tex = texture(iChannel0, uv);\n    float lums = luminance(tex.rgb);\n                       \n    // Time varying pixel color\n    vec3 col;\n    if (lums < 0.5) {\n    \tcol = mix(START_COLOR, MIDDLE_COLOR, to01(lums, 0., 0.5));\n    } else {\n        col = mix(MIDDLE_COLOR, END_COLOR, to01(lums, .5, 1.));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}