{"ver":"0.1","info":{"id":"mt2GRG","date":"1674099022","viewed":191,"name":"water_asdf","username":"belfry","description":"Mousable.","likes":7,"published":1,"flags":0,"usePreview":1,"tags":["voronoi","water"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 fbm(vec2 uv) {\n    vec4 n = vec4(0.);\n    float t = 0.;\n    for (float i = 1.; i < 40.; i *= 2.) {\n        n += texture(iChannel0, uv * i / 32.) / i;\n        t += 1. / i;\n    }\n    return n / t;\n}\n\nvec4 voronoi(vec2 uv, float tiling) {\n    float d1 = 10000.001;\n    float d2 = 10000.001;\n    vec2 id = vec2(0., 0.);\n    for (float i = -1.; i < 1.5; i++) {\n        for (float j = -1.; j < 1.5; j++) {\n            vec2 tileUV = fract(tiling * uv) + vec2(i, j);\n            vec2 tileID = floor(tiling * uv) - vec2(i, j);\n            vec4 noise = texelFetch(\n                iChannel0,\n                ivec2(mod(tileID, iChannelResolution[0].xy)),\n                0\n            );\n            vec2 pd = noise.xy - tileUV;\n            float d = dot(pd, pd);\n            if (d < d1) {\n                d2 = d1;\n                d1 = d;\n                id = tileID;\n            }\n            if (d < d2 && d > d1) {\n                d2 = d;\n            }\n        }\n    }\n    return vec4(d1, abs(d1 - d2), id);\n}\n\nvec2 distortion(vec2 fbmNoise, float height, out float visibility) {\n    vec2 offset = (2. * fbmNoise.xy - 1.) * .02;\n    visibility = smoothstep(.4, .0, height - length(offset / 4.) * 100.);\n    return visibility * offset;\n}\n\nfloat water(vec2 uv, vec2 distortedUV, vec2 flow) {\n    vec4 noise2 = texture(iChannel0, distortedUV.yx * .2 + iTime * .01 + flow);\n    float color = fbm(uv.yx * 5. + noise2.xy * .5 + iTime * .01 + flow).x;\n    noise2 = texture(iChannel0, distortedUV * .2 - vec2(iTime * .01, -iTime * .01) + flow);\n    color *= fbm(uv.xy * 5. + noise2.zw * .5 - iTime * .01 + flow).y;\n    return color * max(smoothstep(.13, .1, color), step(.5, color));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = .25;//clamp(0.2, 1., iResolution.y/450.*.2);\n    fragCoord *= zoom;\n    vec4 f1 = fbm(fragCoord / iResolution.xy * 1.5 + iTime * .05);\n    vec4 f = fbm(fragCoord / iResolution.xy * 3. + f1.xy * .5 - iTime * .1);\n    \n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float tiling = 10.;\n    \n    vec4 v = voronoi(uv, tiling);\n    \n    float waterVis;\n    uv += distortion(f1.xy, v.y, waterVis);\n    v = voronoi(uv, tiling);\n    \n    f*=f;\n    f*=f;\n    \n    vec2 eps = vec2(.005, .0);\n    float dx = voronoi(uv + eps, tiling).y - voronoi(uv - eps, tiling).y;\n    float dy = voronoi(uv + eps.yx, tiling).y - voronoi(uv - eps.yx, tiling).y;\n    vec3 normal = normalize(vec3(-dx, -dy, f.x + .4));\n    \n    vec2 mouse;\n    if (iMouse.xy == vec2(0.))\n        mouse = ((cos(iTime*vec2(1., 1.432))*.3 + 1.) * zoom - 1.) * iResolution.xy / iResolution.y;\n    else\n        mouse = (2. * iMouse.xy * zoom - iResolution.xy) / iResolution.y;\n    \n    vec3 light = normalize(vec3(mouse - uv, f.y + .4));\n    float diff = max(0.4 + f.z, dot(normal, light));\n    vec3 dir = normalize(vec3(-uv, 1. / tan(radians(30.))));\n    float spec = pow(max(.0, dot(normal, normalize(light + dir))), 32.);\n    vec4 noise = texelFetch(\n        iChannel0,\n        ivec2(mod(v.zw, iChannelResolution[0].xy)),\n        0\n    );\n    float lightDist = clamp(2.-length(uv - mouse), 0., 1.);\n    fragColor = v.y * (lightDist * (diff + spec + f.w) * .75 + .2) * noise;\n\n    fragColor += max(lightDist, .04) * waterVis * \n        water(fragCoord / iResolution.xy, uv, normal.xy * .01);\n}","name":"Image","description":"","type":"image"}]}