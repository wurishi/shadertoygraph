{"ver":"0.1","info":{"id":"3tsXR8","date":"1570823963","viewed":148,"name":"tuto-4","username":"Clemm_ence","description":"tuto4","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tuto4"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x,0.,1.) \n//make sure that x is between 0 and 1\n\nfloat remap01(float a, float b, float t){\n\treturn sat((t-a) / (b-a));\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n\treturn sat(((t-a) / (b-a)) * (d-c) +c);\n}\n\nvec2 within(vec2 uv, vec4 rect){//Same as remap 01\n\treturn (uv - rect.xy) / (rect.zw-rect.xy);\n}\n\n\nvec4 Brow(vec2 uv){\n\tfloat y = uv.y;\n    uv.y +=uv.x *.8-.3; // play with the place & form\n    uv.x -= .1;\n    \n    uv -=.5;\n    \n    vec4 col = vec4(0.);\n    \n    float blur = .1;\n    \n    float d1 = length(uv); \n    float s1 = S(.45, .45-blur, d1);//first circle\n    float d2 = length(uv-vec2(.1, -.2)*.7); \n    float s2 = S(.5, .5-blur, d2); //2nd circle\n    \n\tfloat browMask = sat(s1-s2); //substract first circle to second & don't go negative\n    \n     float colMask = remap01(.7, .8, y)*.75;\n     colMask *= S(.6, .9, browMask);\n    \n    vec4 browCol = mix(vec4(.4,.2 ,.2, 1.),vec4(1., .75, .5, 1.), colMask);\n    \n    uv.y += .15;\n    blur +=.1;\n    \n    d1 = length(uv);\n    s1 = S(.45, .45-blur, d1);\n    d2 = length(uv-vec2(.1, -.2)*.7);\n    s2 = S(.5, .5-blur, d2);\n    float shadowMask = sat(s1-s2);\n    \n    \n    col = mix(col, vec4(0.,0.,0.,1.), S(.0, 1., shadowMask)*.5);\n    \n    col = mix(col, browCol, S(.2, .4, browMask));\n    \n    return col;\n}\n\nvec4 Eye(vec2 uv, float side, vec2 m, float smile) {\n    uv -=.5;\n    uv.x *= side;\n    \n    float d= length(uv);\n    vec4 irisCol = vec4(.3,.5,1.,1.);\n    vec4 col = mix(vec4(1.), irisCol, S(.1,.7,d)* .5);\n    col.a = S(.5,.48,d);\n    \n    col.rgb *= 1. - S(.45, .5 , d) *.5 * sat(-uv.y - uv.x*side);\n    d = length(uv-m*.5);\n    irisCol.rgb *= 1. + S(.3,.05,d);\n    \n    col.rgb = mix(col.rgb, vec3(0.), S(.3,.28,d)); // iris outline\n    \n    d = length(uv-m*.6); \n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28,.25,d));\n    \n    float pupilSize = mix(.2,.16, smile);\n    col.rgb = mix(col.rgb, vec3(0.), S(pupilSize,pupilSize*.85,d)); //pupile\n    \n    float highlight = S(.1, .09, length(uv-vec2(-.15,.15)));\n    highlight += S(.07, .05, length(uv+vec2(-.08,.08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    \n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv) {\n    uv -= .5;\n\tvec4 col = vec4(.5, .18, .05, 1.);\n    \n    uv.y *= 1.5;\n    uv.y -= uv.x * uv.x*2.;\n    float d = length(uv);\n    col.a = S(.5, .48, d);\n    \n    float td = length(uv-vec2(0., .6));\n    vec3 toothCol = vec3(1.) * S(.6,.35 ,d);\n    col.rgb = mix(col.rgb, toothCol, S(.4,.37, td));\n    \n    td = length(uv + vec2(0., .5)); //thong distance\n    col.rgb = mix(col.rgb, vec3(1., .5 ,.5) , S(.5 , .2 ,td));\n    return col;\n}\n\nvec4 Head(vec2 uv) {\n\tvec4 col = vec4(0.9,.65,0.1,1.);\n    float d = length(uv);\n    col.a = S(0.5,.49,d);\n    float edgeShade = remap01(.35,.5,d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1. - edgeShade *.5;\n    col.rgb = mix(col.rgb, vec3(.6,.3,.1), S(.47,.48,d));\n        \n    float highlight = S(.41, .405,d);\n    highlight *= remap(.41 , -.1, 0.75, 0.,uv.y);\n    highlight *= S(.18, .19, length(uv - vec2(.21,.08)));\n    col.rgb = mix(col.rgb , vec3(1.), highlight);\n    \n     d = length(uv - vec2(.25,-.2));\n    float cheek = S(.2,.01,d)*.4; //edge\n    cheek *= S(.18 ,  .16, d) ;\n    \n    col.rgb = mix(col.rgb, vec3(1., .1 , .1), cheek);\n    \n    return col;\n}\n\n\nvec4 Smiley(vec2 uv, vec2 m, float smile) {\n\tvec4 col = vec4(0.);\n    \n    float side = sign(uv.x); //+1 for right side -1 for the left side\n    \n    uv.x = abs(uv.x); //symetrie\n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(.03,-.1,.37, .25)),side, m, smile);\n    vec4 mouth = Mouth(within(uv, vec4(-.3,-.43,.3, -.13)));\n    vec4 brow = Brow(within(uv, vec4(.03,.2, .4,.45)));\n    \n    col = mix(col,head, head.a); //mix the color between col and head. if head.a = 0 return col/ if =1 return head\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    col = mix(col, brow, brow.a);\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    \n    uv -=0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec2 m = iMouse.xy /iResolution.xy;\n  \tm -= .5;\n\n    float smile = cos(iTime)*.5+.5;\n    // Output to screen\n    fragColor = Smiley(uv, m, smile);\n}","name":"Image","description":"","type":"image"}]}