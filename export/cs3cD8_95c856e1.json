{"ver":"0.1","info":{"id":"cs3cD8","date":"1694976087","viewed":24,"name":"pixilated color palettes","username":"anass_RAZIK","description":"pixilated color palettes","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colors","palettes","pixilated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float t){return fract(sin(t*8742.2324)*2133.9421);}\n\nfloat hash(vec2 uv){\n    float angle = dot(uv, vec2(21.3245, 35.9769));\n    return fract(sin(angle)*2133.9421);\n}\n\nvec3 c(vec3 yphase, vec3 amplitude, vec3 frequency, vec3 xphase, float angle){\n    return yphase + amplitude * cos((2.*3.141592)*(frequency * angle + xphase));\n}\n\n#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n    uv.x *= iResolution.x/iResolution.y;\n    //uv *= .01;\n    \n    \n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    float angle = atan(uv.x, uv.y);\n    float dist = length(uv);\n    float noise = hash(uv);\n        \n    uv = dist * vec2(cos(angle), sin(angle));\n    \n    float pixelsize = .05;\n    vec2 newuv = floor(uv/pixelsize)*pixelsize;\n\n    //vec3 pal = c(vec3(0.5), vec3(0.5), vec3(1), vec3(0.0,0.1,0.2)*(sin(time)*0.5+0.5)*3., hash(newuv));\n    //vec3 pal = c(vec3(0.5), vec3(0.5), vec3(1), vec3(0.0,0.33,0.67), hash(newuv));\n    //vec3 pal = c(vec3(1,.5,0.5), vec3(0.7), vec3(1,1,.5), vec3(.8,.9,.3), newuv.y);\n    vec3 pal = c(vec3(.8,.5,0.4), vec3(0.2,.5,.2), vec3(2,1,1), vec3(.0,.25,.25), sin(time)+newuv.y);\n    vec3 color = texture(iChannel0, newuv*0.5+0.5).xyz * pal;\n    \n    color = floor(color/pixelsize)*pixelsize;\n    float brightness = (color.r+color.g+color.z)/3.;\n    fragColor = vec4(color,1.0);//vec4(brightness);\n}","name":"Image","description":"","type":"image"}]}