{"ver":"0.1","info":{"id":"msBSDG","date":"1670792056","viewed":105,"name":"Perlin Voronoi noise","username":"Arternum","description":"Perlin Voronoi Noise\nLike a cloud (in Horizon Zero-даун)\nUse your mouse to change the cloud shapes\nMouse.x - Cloud more like voronoi/perlin\nMouse.y - Voronoi brightness (looks like a cloud size)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","voronoi","noise","perlin","worley","simplex"],"hasliked":0,"parentid":"4tXSDf","parentname":"Voronoi Water"},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 hash2(vec2 p ) {\n   return texture(iChannel0, p.xy*0.0125).rg;   \n}\n\n//Based off of iq's described here: https://iquilezles.org/articles/voronoilines\nfloat voronoi(vec2 pos) {\n    vec2 p = pos*0.4;\n    vec2 n = floor(p*0.3);\n    vec2 f = fract(p*0.3);\n    float md = 5.0;\n    float d;\n    vec2 g, o, r;\n    \n    for (int i = -1;i<=1;i++) \n    {\n        for (int j = -1;j<=1;j++) \n        {\n            g = vec2(i, j);\n            o = hash2(n+g);\n            o = 0.5+0.5*sin(5.*o);\n            r = g + o - f;\n            d = dot(r, r);\n            if (d<md) {\n              md = d;\n            }\n        }\n    }\n    return md;\n}\n\nfloat ov(vec2 pos) {\n    float v = 0.0;\n    float f = 0.0;\n    float n = 1.0;\n    vec2 p = pos;\n    \n    //-----VORONOI-----//\n    for (int i = 0;i<2;i++) {\n        v+= voronoi(p)*n;\n        p*=2.6;\n        n*=0.9;\n    }\n    \n    v = (1.-v)*3.0-1.4;\n    \n    //-----PERLIN-----//\n    p = pos*0.005; n=1.;\n    float sharp = 0.5;\n    for (int i = 0;i<4;i++){\n        f += (texture(iChannel0, p).r)*n;\n        p*=2.24;\n        n*=sharp;\n        sharp*=0.9;\n    }\n    \n    vec2 MOUSE_C = (iMouse.xy/iResolution.xy);\n    \n    f = f+(v-MOUSE_C.y)*MOUSE_C.x;\n    //f = v*2.;\n    \n    return (1.-exp(-(f-0.8)*2.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv *= vec2(iResolution.x/iResolution.y,1.)*24.;\n\tfragColor = vec4(ov(uv));\n    \n}","name":"Image","description":"","type":"image"}]}