{"ver":"0.1","info":{"id":"ltKyWh","date":"1536069485","viewed":752,"name":"Fake plane perspective","username":"Emil","description":"Just realized one could do a perspective projection by dividing viewDir with it's y component. Didn't know it was this \"easy\"\nfun times :)","likes":6,"published":1,"flags":0,"usePreview":1,"tags":["projection","plane","fake3d","mode7","planar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((fragCoord/iResolution.xy)-0.5)*vec2(iResolution.x/iResolution.y,1.0);\n    \n    vec3 viewDir = normalize(vec3(uv,0.5));\n    \n    vec2 planarUV = viewDir.xz/abs(viewDir.y);\n    \n    float depth = planarUV.y;\n    planarUV += vec2(0.0, iTime*.6);\n    \n    vec3 albedo = texture( iChannel0, planarUV).rgb;\n    \n    float light = 2.5/(depth*depth)*viewDir.z;\n    \n    fragColor = vec4(light*albedo,1.0);\n}","name":"Image","description":"","type":"image"}]}