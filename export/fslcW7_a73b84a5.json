{"ver":"0.1","info":{"id":"fslcW7","date":"1642182204","viewed":206,"name":"Little Fractal","username":"SnoopethDuckDuck","description":"might stretch it around a torus later idk","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["e"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//future ideas:\n// do same but split into 4/6 etc.\n// give each subdivision random split number\n\n\nmat2 Rot(float a) {\n    float s = sin(a); float c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\n// doesnt work / wrong (I think?)\nfloat rand(float id) {\n    float time = iTime;\n    float v1 = h21(vec2(floor(time) + 10. * id));\n    float v2 = h21(vec2(floor(time) + 10. * id + 1.));\n    return mix(v1, v2, smoothstep(0., 1., fract(time)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float r = 0.5;\n    float th = 0.3 * iTime;\n    float sn = 1.;\n    float n = 5.;\n    float id = 0.;\n    for (float i = 0.; i < n; i++) {\n        th -= 0.5 * pi + 0.22 * (h21(vec2(id + 1.))-0.5) * iTime;\n        uv = 2. * Rot(sn * th) * uv;\n        int ind = int(mod(i, 2.));       \n        sn *= sign(uv[ind]);\n        uv[ind] = abs(uv[ind]) - r;\n        id += pow(0.1, i) * 0.5 * (1. + sn); // <- sloppy but works \n    }\n    \n    float d = length(uv);\n    float s = step(d -  0.25 * (1. + cos(2. * pi * h21(vec2(id)) + iTime)), 0.);\n    \n    vec3 col = vec3(s);\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.14159\n\nfloat thc(float a, float b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nfloat ths(float a, float b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec2 thc(float a, vec2 b) {\n    return tanh(a * cos(b)) / tanh(a);\n}\n\nvec2 ths(float a, vec2 b) {\n    return tanh(a * sin(b)) / tanh(a);\n}\n\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat h21 (vec2 a) {\n    return fract(sin(dot(a.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat mlength(vec2 uv) {\n    return max(abs(uv.x), abs(uv.y));\n}\n\n","name":"Common","description":"","type":"common"}]}