{"ver":"0.1","info":{"id":"Ws33Wl","date":"1570118371","viewed":726,"name":"symmetry","username":"DarkKiwi","description":"I'm tring some symmetry effect in order to achieve a kaleidoscope thingy","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["effecttexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define REFLECTION_NUMBER 40\n\nfloat random(vec2 uv)\n{\n\treturn fract(sin(dot(uv.xy, vec2(12.9898, 78.233))) * 43758.5453123);    \n}\n\nmat3 rotation(float angle)\n{\n\tfloat c = cos(angle);\n    float s = sin(angle);\n    return mat3( c, -s, 0.,  s, c, 0.,  0., 0., 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord/iResolution.y - iResolution.xy/iResolution.y*.5)*2.;\n    uv *= 1.5;\n    vec3 huv = vec3(uv, 0.);\n    huv *= rotation(iTime*.2);\n    \n    vec3 axisOrigin = vec3(0., 0., 1.);\n    vec3 axisDirection = vec3(normalize(vec2(1., 1.)), 0.);\n    \n    for(int i = 0; i < REFLECTION_NUMBER; i++)\n    {\n        float offset = (3.1415 * 2. / float(REFLECTION_NUMBER) ) * float(i);\n        float axisRotation = offset;\n    \tvec3 tuv = (huv - axisOrigin) * rotation(-axisRotation);\n    \tif(tuv.y < 0.)\n    \t{\n    \t\tvec3 invuv = tuv;\n        \tinvuv.y = -invuv.y;\n        \tinvuv = (invuv * rotation(axisRotation)) + axisOrigin;\n        \thuv = invuv;\n    \t}\n    }\n    \n    vec3 col = vec3(texture(iChannel1, huv.xy - vec2(iTime *.2, 0.) ));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}