{"ver":"0.1","info":{"id":"3tGcWK","date":"1611734249","viewed":242,"name":"Color Light Beam","username":"zhoucy001","description":"It is inspired by an example from The Book of Shaders(section COLORS).","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n#define PI 3.14159265854\n#define HALF_PI 1.5707963267948966\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = sin(rgb*abs(10.0*(fract(iTime*0.1)*2.0-1.0)));\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 color = vec3(0.0);\n    vec2 toCenter = uv-vec2(0.5);\n    float angle = atan(toCenter.y,toCenter.x);\n    float radius = length(toCenter)*2.0;\n    color = hsb2rgb(vec3((angle/TWO_PI)+0.5,radius,1.0));\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}