{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"const float PI = 3.14159265359;\nconst float TAU = 2.0*PI;\nfloat deg30 = TAU/12.0;\n\n// http://www.gamedev.net/page/resources/_/technical/game-programming/coordinates-in-hexagon-based-tile-maps-r1800\n// nearest hexagon sampling, not quite sure if it's correct\n\nfloat hexDist(vec2 a, vec2 b){\n\tvec2 p = abs(b-a);\n\tfloat s = sin(deg30);\n\tfloat c = cos(deg30);\n\t\n\tfloat diagDist = s*p.x + c*p.y;\n\treturn max(diagDist, p.x)/c;\n}\n\nvec2 nearestHex(float s, vec2 st){\n\tfloat h = sin(deg30)*s;\n\tfloat r = cos(deg30)*s;\n\tfloat b = s + 2.0*h;\n\tfloat a = 2.0*r;\n\tfloat m = h/r;\n\n\tvec2 sect = st/vec2(2.0*r, h+s);\n\tvec2 sectPxl = mod(st, vec2(2.0*r, h+s));\n\t\n\tfloat aSection = mod(floor(sect.y), 2.0);\n\t\n\tvec2 coord = floor(sect);\n\tif(aSection > 0.0){\n\t\tif(sectPxl.y < (h-sectPxl.x*m)){\n\t\t\tcoord -= 1.0;\n\t\t}\n\t\telse if(sectPxl.y < (-h + sectPxl.x*m)){\n\t\t\tcoord.y -= 1.0;\n\t\t}\n\n\t}\n\telse{\n\t\tif(sectPxl.x > r){\n\t\t\tif(sectPxl.y < (2.0*h - sectPxl.x * m)){\n\t\t\t\tcoord.y -= 1.0;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(sectPxl.y < (sectPxl.x*m)){\n\t\t\t\tcoord.y -= 1.0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcoord.x -= 1.0;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfloat xoff = mod(coord.y, 2.0)*r;\n\treturn vec2(coord.x*2.0*r-xoff, coord.y*(h+s))+vec2(r*2.0, s);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n\tfloat s = iResolution.x/80.0;\n\tvec2 nearest = nearestHex(s, fragCoord.xy);\n\tvec4 texel = texture(iChannel0, nearest/iResolution.xy, -100.0);\n\tfloat dist = hexDist(fragCoord.xy, nearest);\n\t\n\tfloat luminance = (texel.r + texel.g + texel.b)/3.0;\n\t//float interiorSize = luminance*s;\n\tfloat interiorSize = s;\n\tfloat interior = 1.0 - smoothstep(interiorSize-1.0, interiorSize, dist);\n\t//fragColor = vec4(dist);\n\tfragColor = vec4(texel.rgb*interior, 1.0);\n\t//fragColor = vec4(nearest, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ls23Dc","date":"1394739891","viewed":1840,"name":"Hexagon Sampling","username":"pyalot","description":"Samples from the nearest hexagon to the pixel.","likes":48,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}