{"ver":"0.1","info":{"id":"lfjyRd","date":"1722873187","viewed":22,"name":"Estructura del lenguaje 1.3","username":"jpupper","description":"//1.3\n//Estructura del lenguaje inicial parte 3\n//Creacion y definición de funciones. \n ","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["tutorial","shaders","shaders","livecoding","taller","tutoriales"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Taller de Livecoding con visuales en GLSL 1.3\n//1.3\n//Estructura del lenguaje inicial parte 3\n//Creacion y definición de funciones. \n \n//LAS FUNCIONES SIEMPRE SE DECLARAN ARRIBA DEL MAIN.\n//Podemos declarar funciones que proximamente vamos a invocar en el main.\n\n//Las funciones pueden devolver variables : \n//Es decir, cuando yo ejecuto esta funcion, la funcion va a devolver un valor, en este caso, el valor que devuelve es el vec3.\n//Hago una funcion que me devuelve un valor\nvec3 rojopastel(){\n    return vec3(0.9,0.55,0.55);\n}\n\n//Esta funcion recibe un valor, y utiliza ese valor para devolver otro valor. \n//En este caso, esta función lo que hace es obtener el valor invertido de un vec3.\nvec3 invertcolor(vec3 _col1){\n    return vec3(1.0-_col1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 colorfinal = rojopastel();\n    //fragColor = vec4(colorfinal,1.0); \n    fragColor =  vec4(invertcolor(colorfinal),1.0); \n    \n}","name":"Image","description":"","type":"image"}]}