{"ver":"0.1","info":{"id":"WdlGRn","date":"1544720537","viewed":82,"name":"CSC550FinalProj","username":"alexander_hart21","description":"I wanted a shader that would show one image and have \"filter\" that was a checkered blur","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","checker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Blurring code was provided from https://www.shadertoy.com/view/4l2yz1\n//Blur Kernel\nmat3 blur = mat3(\n0.111, 0.111, 0.111, \n0.111, 0.111, 0.111, \n0.111, 0.111, 0.111 \n);\n\n//Sharpen Kernel\nmat3 sharpen = mat3(\n0., -1, 0.0, \n-1, 5, -1, \n0., -1, 0.0 \n);\n\n//Makes the image aspect ratio correct!\nvec3 sampler(const int x, const int y, in vec2 fragCoord, sampler2D channelName)\n{\nvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\nuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\nreturn texture(iChannel0, uv).xyz;\n}\n\n//Runs the kernel through\nvec3 nFilter(in vec2 fragCoord, mat3 kernel, in sampler2D channelName)\n{\nvec3 sum = vec3(0.0, 0.0, 0.0);\n\nfor (int i = 0; i < 3; i++)\n{\nfor (int j = 0; j < 3; j++)\n{\nsum += sampler(i - 1, j - 1, fragCoord, channelName) * kernel[i][j];\n}\n}\nreturn sum;\n}\n    \n//Variables needed for layers!\nvec3 backgroundColor = vec3(0.5, 0.9, 1.0);\nvec3 layerColor = vec3(1.0, 0.0, 0.0);\n\nvec4 layer1,layer2, layer3;\nvec4 compositeLayers;\n\n//Layer Alphas\nconst float Layer1Alpha = 1.0; \nconst float Layer2Alpha = 1.0;\nfloat layer3Alpha;\n\n\n//Coordinate variables\nvec2 fc, uv, mouseUv;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfc = fragCoord.xy;\nuv = fc / iResolution.xy;\nuv.y *= iResolution.y / iResolution.x;\n    \nfloat checkerSize = 40.0;\n   \n//Background\nlayer1 = vec4(backgroundColor, Layer1Alpha);\n    \n    vec3 col = vec3(0.0);\n    if (int(fragCoord.x/checkerSize) % 2 == 0 ){\n        if (int(fragCoord.y/checkerSize) % 2 == 0)\n            col = vec3(1.0);\n            // blur effect in image\n              \n    }\n    else\n        if (int(fragCoord.y/checkerSize) % 2 == 1)\n             col = vec3(1.0);\n            // sharp effect on image\n        \n    layerColor = nFilter(fc, blur, iChannel0) * col + nFilter(fc, sharpen, iChannel0) * (1.0 - col);\n           \n\t\t\tlayer2 = vec4(layerColor, Layer2Alpha);\n    \n//Mixing of the Layers to get the mix right\ncompositeLayers = mix(layer1, layer2, layer2.a);\n    \n//The final mix displayed\nfragColor = compositeLayers;\n}\n   ","name":"Image","description":"","type":"image"}]}