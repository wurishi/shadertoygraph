{"ver":"0.1","info":{"id":"Ddj3DW","date":"1667607502","viewed":332,"name":"Fork dance dots mds2 313","username":"mds2","description":"Music by \"Vantage\" (not by me!).\n\nFork of https://www.shadertoy.com/view/MdcSDB that keeps dots at a constant size","likes":5,"published":3,"flags":66,"usePreview":0,"tags":["sound","camera","dots","noodling","soundcloud","vaporwave","vantage"],"hasliked":0,"parentid":"MdcSDB","parentname":"dance dots"},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"MdS3zz","filepath":"https://soundcloud.com/vantagenoise/so-right-80s-aerobics-1k-thank-you-mix?in=vantagenoise/sets/metro-city-deluxe-1","previewfilepath":"https://soundcloud.com/vantagenoise/so-right-80s-aerobics-1k-thank-you-mix?in=vantagenoise/sets/metro-city-deluxe-1","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DOTSIZE 8.0\n\nfloat ramp(in float start, in float stop, in float val) {\n  return clamp((val - start)/(stop - start), 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float dotsize = min(20.0, max(DOTSIZE, 5.0));\n    vec2 mirrorCoord = vec2 (iResolution.x - fragCoord.x, fragCoord.y);\n    vec2 dotcenter = (mirrorCoord - mod(mirrorCoord, 2.0 * dotsize)) + vec2(dotsize);\n    float rad = length(mirrorCoord - dotcenter);\n    \n    vec2 sampleAt = dotcenter / iResolution.xy;\n    \n    vec2 musicSampleAt = vec2(fract(dot(sampleAt + sampleAt * sampleAt, vec2(311.7123, 733.01))), 0.0);\n    \n    float dotRad = texture(iChannel1, musicSampleAt).x * (dotsize - 3.0);\n    \n    float inside = ramp (2.0, 0.25, rad - dotRad) - 0.125 * ramp(dotRad, 0.0, rad);\n    \n    vec3 rgb = texture(iChannel0, sampleAt).xyz;\n    \n    rgb = 0.25 * (step(vec3(0.1), rgb) + step(vec3(0.25), rgb) +\n                  step(vec3(0.4), rgb) + step(vec3(0.55), rgb));\n   //  rgb = vec3(1.0, 0.0, 0.0);\n    \n    vec3 background = vec3(0.0);\n\tfragColor = vec4(mix(background, rgb, inside),1.0);\n}","name":"Image","description":"","type":"image"}]}