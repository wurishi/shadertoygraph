{"ver":"0.1","info":{"id":"lcVSWD","date":"1715218544","viewed":21,"name":"domain repitition experiment v2","username":"thom7918","description":"Experimenting with the ideas  inspired by the very cool article by Inigo Quilez: https://iquilezles.org/articles/sdfrepetition/","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"lfKXDW","parentname":"domain repition experiment"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141592653589793238\n\n\nfloat circle_sdf(vec4 lv, float r){\n    \n    vec2 p = lv.xy;\n    vec2 id = lv.zw;\n       \n    \n    return length(p) - r;\n}\n\n\n\nfloat hash( float n ) { return fract(sin(n)*43758.5453123); }\n\n// Source The Book of Shaders: https://thebookofshaders.com/10/\nfloat hash2d(vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvec4 repeated(vec2 p, float s){\n    \n    vec2 id = floor((p/s) +0.5);\n    p = p - s*id;\n    float theta = (atan(p.y, p.x));\n    p -= 0.1*sin(cos(theta) + iTime);\n\n    return vec4(p, id);\n}\n\nmat2 rotate(float a){\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    vec3 color = vec3(0.0);\n    \n    \n    \n    float zoom = 1./(1.+iTime*0.4);\n    zoom = 1.;\n    \n    float scale = 0.4*zoom;\n    float interval = (scale/2.); //tiles go from -interval < x, y < interval\n    float radius = 0.5*interval;\n\n    vec2 p = st;\n     \n  \n    vec4 c = repeated(p,scale);\n    vec2 lv = c.xy;\n    vec2 id = c.zw;\n    float d = circle_sdf(c, radius);\n    //vec3 circle = vec3(smoothstep(0., 0.0, d));//*hash2d(id);//*p.y*p.x;\n    color.b += (hash2d(id)*2.);\n    color.r = clamp((1.-color.b), 0., 1.);\n    \n    color.g += length(st);\n    color *= -sign(d);\n    \n    float m =(p.x*p.y);\n    \n    \n    //debug\n    if(false){\n     if(lv.x > interval - 0.01 || lv.y > interval-0.01){\n         color.r = 1.;\n      }\n      if(st.x < 1.01 && st.x > 0.98){\n        //color.b = 1.;\n      }\n      //color = vec3(0);\n      //color.b = atan(lv.y, lv.x)/(2.*PI);\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n\n\n  \n","name":"Image","description":"","type":"image"}]}