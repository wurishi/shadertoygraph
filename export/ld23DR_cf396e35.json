{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// math const\nconst float PI = 3.14159265359;\nconst float DEG_TO_RAD = PI / 180.0;\nconst vec3 fog_color=vec3(0.5,0.5,0.5);\n\n// height map\nfloat voxel( vec3 pos ) {\n\tpos = floor( pos );\n\tfloat density = texture( iChannel0, pos.xz / 2048.0 ).x*pow(sin(pos.x*0.5)*sin(pos.z*0.5)*0.5+0.5,4.0);\n\treturn step( pos.y, floor( density * 32.0 ) );\n}\n\n// improvement based on fb39ca4's implementation to remove most of branches :\n// https://www.shadertoy.com/view/4dX3zl\n// min | x < y | y < z | z < x\n//  x  |   1   |   -   |   0  \n//  y  |   0   |   1   |   -  \n//  z  |   -   |   0   |   1  \nfloat ray_vs_world( vec3 pos, vec3 dir, out vec3 mask, out vec3 center ) {\n\t// grid space\n\tvec3 grid = floor( pos );\n\tvec3 grid_step = sign( dir );\n\tvec3 corner = max( grid_step, vec3( 0.0 ) );\n\t\n\t// ray space\n\tvec3 inv = vec3( 1.0 ) / dir;\n\tvec3 ratio = ( grid + corner - pos ) * inv;\n\tvec3 ratio_step = grid_step * inv;\n\t\n\t// dda\n\tfloat hit = -1.0;\n\tfor ( int i = 0; i < 128; i++ ) {\n\t\tif ( voxel( grid ) > 0.5 ) {\n\t\t\thit = 1.0;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvec3 cp = step( ratio, ratio.yzx );\n\n\t\tmask = cp * ( vec3( 1.0 ) - cp.zxy );\n\t\t\n\t\tgrid  += grid_step  * mask;\t\t\n\t\tratio += ratio_step * mask;\n\t}\n\t\n\tcenter = grid + vec3( 0.5 );\n\treturn dot( ratio - ratio_step, mask ) * hit;\n}\n\n// improvement based on iq's implementation to remove lots of redundant texture accesses :\n// https://www.shadertoy.com/view/4dfGzs\nvoid occlusion( vec3 v, vec3 n, out vec4 side, out vec4 corner ) {\n\tvec3 s = n.yzx;\n\tvec3 t = n.zxy;\n\n\tside = vec4 (\n\t\tvoxel( v - s ),\n\t\tvoxel( v + s ),\n\t\tvoxel( v - t ),\n\t\tvoxel( v + t )\n\t);\n\t\n\tcorner = vec4 (\n\t\tvoxel( v - s - t ),\n\t\tvoxel( v + s - t ),\n\t\tvoxel( v - s + t ),\n\t\tvoxel( v + s + t )\n\t);\n}\n\nfloat my_filter( vec4 side, vec4 corner, vec2 tc ) {\n\tvec4 v = side.xyxy + side.zzww + corner;\n\n\treturn mix( mix( v.x, v.y, tc.y ), mix( v.z, v.w, tc.y ), tc.x ) * 0.25;\n}\n\nfloat ao( vec3 v, vec3 n, vec2 tc ) {\n\tvec4 side, corner;\n\t\n\tocclusion( v + n, abs( n ), side, corner );\n\t\n\treturn 1.0 - my_filter( side, corner, tc );\n}\n\nfloat edge( vec3 v, vec3 n, vec2 tc ) {\n\tfloat scale = 1.0 / 12.0;\n\ttc = fract( tc / scale );\n\tn *= scale;\n\n\tv += abs( n.yzx ) * ( -tc.y + 0.5 );\n\tv += abs( n.zxy ) * ( -tc.x + 0.5 );\n\n\tvec4 side_l, side_h, corner_l, corner_h;\n\t\t\n\tocclusion( v - n, abs( n ), side_l, corner_l );\n\tocclusion( v + n, abs( n ), side_h, corner_h );\n\n\treturn 1.0 - my_filter(\n\t\tvec4( 1.0 ) -   side_l * ( vec4( 1.0 ) -   side_h ),\n\t\tvec4( 1.0 ) - corner_l * ( vec4( 1.0 ) - corner_h ),\n\t\ttc\n\t);\n}\n\nfloat window( vec2 tc ) {\n\ttc =step( vec2(0.2),abs( tc - vec2( 0.5 ) ) );\n\treturn max( tc.x, tc.y );\n}\n\n// pitch, yaw\nmat3 rot3xy( vec2 angle ) {\n\tvec2 c = cos( angle );\n\tvec2 s = sin( angle );\n\t\n\treturn mat3(\n\t\tc.y      ,  0.0, -s.y,\n\t\ts.y * s.x,  c.x,  c.y * s.x,\n\t\ts.y * c.x, -s.x,  c.y * c.x\n\t);\n}\n\n// get ray direction\nvec3 ray_dir( float fov, vec2 size, vec2 pos ) {\n\tvec2 xy = pos - size * 0.5;\n\n\tfloat cot_half_fov = tan( ( 90.0 - fov * 0.5 ) * DEG_TO_RAD );\t\n\tfloat z = size.y * 0.5 * cot_half_fov;\n\t\n\treturn normalize( vec3( xy, -z ) );\n}\n\nvec3 ray_dir_spherical( float fov, vec2 size, vec2 pos ) {\n\tvec2 angle = ( pos - vec2( 0.5 ) * size ) * ( fov / size.y * DEG_TO_RAD );\n\n\tvec2 c = cos( angle );\n\tvec2 s = sin( angle );\n\t\n\treturn normalize( vec3( c.y * s.x, s.y, -c.y * c.x ) );\n}\n\n// phong shading\nvec3 shading( vec3 v, vec3 n, vec3 eye ) {\n\tvec3 final = vec3( 0.0 );\n\t\n\t// light 0\n\t{\n\t\tvec3 light_pos = vec3( 100.0, 110.0, 150.0 );\n\t\tvec3 light_color = vec3( 0.7,0.8,1.0 );\n\t\tvec3 vl = normalize( light_pos - v );\n\t\tfloat diffuse  = max( 0.0, dot( vl, n ) );\n\t\tfinal += light_color * diffuse;\n\t}\n\t\n\t// light 1\n\t{\n\t\tvec3 light_pos = -vec3( 100.0, 110.0, 120.0 );\n\t\tvec3 light_color = vec3( 0.7,0.8,1.0 );\n\t\tvec3 vl = normalize( light_pos - v );\n\t\tfloat diffuse  = max( 0.0, dot( vl, n ) );\n\t\tfinal += light_color * diffuse;\n\t}\n\n\treturn final;\n}\n\nfloat fog_den_int(float h)\n{\n\th=h-12.0;\n\treturn (1.1*h-0.9*abs(h))*0.125;\n}\n\nfloat fog(vec3 eye,vec3 dir,float depth)\n{\n\tdepth=abs(depth);\n\treturn exp(-(fog_den_int(eye.y+dir.y*depth)-fog_den_int(eye.y))/dir.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// default ray dir\n\tvec3 dir = ray_dir( 55.0, iResolution.xy, fragCoord.xy );\n\t\n\t// default ray origin\n\tvec3 eye = vec3( 0.0, 0.0, 70.0 );\n\n\t// rotate camera\n\tmat3 rot = rot3xy( vec2( -DEG_TO_RAD * 45.0, iTime * 0.1 ) );\n\tdir = rot * dir;\n\teye = rot * eye;\n\t\n\t//lower cam\n\teye.y-=20.0;\n\t\n\tdir = normalize( dir );\n\t\n\t// grid traversal\n\tvec3 mask;\n\tvec3 center;\n\tfloat depth = ray_vs_world( eye, dir, mask, center );\n\n\tvec3 p = eye + dir * depth;\n\tvec3 n = -mask * sign( dir );\n\n\tvec2 tc =\n\t\t( fract( p.yz ) * mask.x ) +\n\t\t( fract( p.zx ) * mask.y ) +\n\t\t( fract( p.xy ) * mask.z );\n\t\n\t// attenuation\n\tfloat k_att = min( 1.0, 600.0 / depth / depth );\n\n\t// ambient occlusion\n\tfloat k_ao = ao( center, n, tc );\n\t\n\t// window\n\tfloat k_window =min(window( tc )+step(0.5,n.y),1.0);\n\t\n\t// edge\n\t//float k_edge = edge( p, n, tc );\n\t\n\t// color\n\tvec3 color = shading( p, n, eye ) * (\n\t\tk_att *\n\t\tk_ao *\n\t\tk_window *\n\t\t//k_edge * k_edge *\n\t\t1.8\n\t\t);\n\t//fog\n\tcolor=mix(fog_color,color,fog(eye,dir,depth)*step(0.0,depth));\n\t\n\tfragColor = vec4( color, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ld23DR","date":"1386428172","viewed":1104,"name":"City in the fog","username":"cnbjw","description":"Make a little change on gltracy's project: https://www.shadertoy.com/view/MdBGRm","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["voxel"],"hasliked":0,"parentid":"","parentname":""}}