{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/* Compiled with Shaderforth: https://github.com/daeken/Shaderforth\n:globals\n\t@vec3 uniform =iResolution\n\t@float uniform =iTime\n;\n\n:m anim\n\t1 iTime 8 mod 4 - abs 1 - 1.5 / 0 1 clamp 3 pow -\n;\n\n: cwarp ( c:vec3 -> vec3 )\n\tanim =t\n\t[\n\t\t\tc .xy 1 t - *\n\t\t\t[ t pi * -1 * 0 ]\n\t\tp+\n\t\tc .z t 2.5 * 1 + *\n\t]\n;\n\n: p-circle ( p:vec2 c:vec3 -> float )\n\tc cwarp =c\n\tc .xy p - length c .z -\n;\n\n:m circle ( c ) p c p-circle ;\n\n:m intersect max ;\n:m subtract neg max ;\n:m union min ;\n:m shape call ;\n\n: zrotate ( v:vec3 a:float -> vec3 )\n\t[ v .xy a rotate-deg v .z ]\n;\n\niResolution frag->position [ 1.2 -1.2 ] * =p\n\n: distance-field ( p:vec2 -> float )\n\tp iTime neg rotate-2d =p\n\t{\n\t\t[ 0 0 0.6 ] circle\n\t\t{\n\t\t\t{\n\t\t\t\t[\n\t\t\t\t\t[ 0 0 0.4 ] circle\n\t\t\t\t\t$[0:+360:120] /{ ( a )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[ .14 -.04 .52 ] a zrotate circle\n\t\t\t\t\t\t\t[ -.25 .135 .46 ] a zrotate circle intersect\n\t\t\t\t\t\t\t[ -.3 -.101 .46 ] a zrotate circle subtract\n\t\t\t\t\t\t} shape\n\t\t\t\t\t} flatten\n\t\t\t\t] \\subtract\n\t\t\t} shape \n\n\t\t\t{\n\t\t\t\t[ 0 .184 .295 ] circle\n\t\t\t\t[ 0 .184 .295 ] 120 zrotate circle intersect\n\t\t\t\t[ 0 .184 .295 ] 240 zrotate circle intersect\n\t\t\t\t[ 0 0 .0434 ] circle subtract\n\t\t\t} shape subtract\n\t\t} shape subtract\n\t} shape\n;\n\n:m paper-color [ 0.83 0.83 0.83 ] ;\n:m line-color [ .23 .20 .19 ] ;\n:m fill-color [ 0.44 0.38 0.37 ] ;\n\n:m rfac\n\t1 iTime 1000 * sin abs .025 * .025 + - *\n;\n\n: hatching ( p:vec2 -> float )\n\tp 1000 * sin .0015 * p + =p\n\t[\n\t\t[\n\t\t\tp rfac \\+ 100 * sin .9 1 clamp .9 - 10 * rfac\n\t\t\tp [ 1 -1 ] * \\+ 100 * sin p .x p .y 137 * sin 5 * + sin + .9 1 clamp .9 - 10 *\n\t\t] \\-\n\t\t[\n\t\t\tp rfac [ -1.4 1 ] * \\+ 50 * sin .95 1 clamp .95 - 20 *\n\t\t] \\- .4 *\n\t] \\+ 2 /\n;\n\n:m fill-pattern ( p )\n\tp [ .5 .05 p .x sin abs * + rfac 1 rfac ] * \\+ 200 * sin .9 1 clamp .9 - 10 *\n;\n\n:m paper ( p )\n\tpaper-color p hatching .2 * -\n;\n\n:m line ( d p )\n\tline-color\n;\n\n: fill ( d:float p:vec2 -> vec3 )\n\t[\n\t\tfill-color\n\t\tp hatching .05 *\n\t\tp fill-pattern .2 *\n\t] \\-\n;\n\n:m line-thickness .01 ;\n\n: texturize ( d:float p:vec2 -> vec3 )\n\td iTime 100 * d p .y * 10 * * sin .4 * d * + =d\n\t[\n\t\t\td abs line-thickness <=\n\t\t\td abs p hatching .04 * - line-thickness <=\n\t\tor { d p line }\n\t\td 0 < { d p fill }\n\t\t{ p paper }\n\t] cond\n;\n\n\tp\n\t[ 0 p .y 100 * iTime 10 * + sin .003 * ] p+\n\t[ p .y 10 * iTime 10 * iTime 17 / sin * + sin .005 * 0 ] +\n=wp\n\n&distance-field wp gradient p texturize ->fragcolor\n*/\n\nfloat hatching(vec2 p) {\n\tp = sin(p * 1000.) * .0015 + p;\n\tvec2 var_1 = p * (1. - (abs(sin(iTime * 1000.)) * .025 + .025));\n\tvec2 var_2 = p * vec2(1., -1.);\n\tvec2 var_3 = p * (1. - (abs(sin(iTime * 1000.)) * .025 + .025)) * vec2(-1.4, 1.);\n\treturn ((clamp(sin((var_1.x + var_1.y) * 100.), .9, 1.) - .9) * 10. * (1. - (abs(sin(iTime * 1000.)) * .025 + .025)) - (clamp(sin((var_2.x + var_2.y) * 100.) + sin(p.x + sin(p.y * 137.) * 5.), .9, 1.) - .9) * 10. + (clamp(sin((var_3.x + var_3.y) * 50.), .95, 1.) - .95) * 20. * .4) / 2.;\n}\nvec3 fill(float d, vec2 p) {\n\tvec2 var_2 = p * vec2((.5 + .05 * abs(sin(p.x))) * (1. - (abs(sin(iTime * 1000.)) * .025 + .025)), 1. * (1. - (abs(sin(iTime * 1000.)) * .025 + .025)));\n\treturn vec3(.44, .38, .37) - hatching(p) * .05 - (clamp(sin((var_2.x + var_2.y) * 200.), .9, 1.) - .9) * 10. * .2;\n}\nvec2 polar_cart(vec2 p) {\n\treturn vec2(cos(p.x), sin(p.x)) * p.y;\n}\nvec3 texturize(float d, vec2 p) {\n\tvec3 temp_30;\n\td = d + sin(iTime * 100. * d * p.y * 10.) * .4 * d;\n\tif(abs(d) <= .01 || (abs(d) - hatching(p) * .04) <= .01) {\n\t\ttemp_30 = vec3(.23, .20, .19);\n\t} else if(d < 0.) {\n\t\ttemp_30 = fill(d, p);\n\t} else {\n\t\ttemp_30 = vec3(.83, .83, .83) - hatching(p) * .2;\n\t}\n\treturn temp_30;\n}\nvec2 cart_polar(vec2 p) {\n\treturn vec2(atan(p.y, p.x), length(p));\n}\nvec3 cwarp(vec3 c) {\n\tfloat t = 1. - pow(clamp((abs(mod(iTime, 8.) - 4.) - 1.) / 1.5, 0., 1.), 3.);\n\treturn vec3(polar_cart(cart_polar(c.xy * (1. - t)) + vec2(t * 3.14159 * -1., 0.)), c.z * (t * 2.5 + 1.));\n}\nfloat p_circle(vec2 p, vec3 c) {\n\tc = cwarp(c);\n\treturn length(c.xy - p) - c.z;\n}\nvec2 rotate_2d(vec2 c, float a) {\n\tfloat ca = cos(a);\n\tfloat sa = sin(a);\n\treturn vec2(c.x * ca - c.y * sa, c.y * ca + c.x * sa);\n}\nvec3 zrotate(vec3 v, float a) {\n\treturn vec3(rotate_2d(v.xy, a * .017453), v.z);\n}\nfloat distance_field(vec2 p) {\n\tp = rotate_2d(p, -iTime);\n\treturn max(p_circle(p, vec3(0., 0., .6)), -max(max(max(max(max(p_circle(p, vec3(0., 0., .4)), -max(max(p_circle(p, zrotate(vec3(.14, -.04, .52), 0.)), p_circle(p, zrotate(vec3(-.25, .135, .46), 0.))), -p_circle(p, zrotate(vec3(-.3, -.101, .46), 0.)))), -max(max(p_circle(p, zrotate(vec3(.14, -.04, .52), 120.)), p_circle(p, zrotate(vec3(-.25, .135, .46), 120.))), -p_circle(p, zrotate(vec3(-.3, -.101, .46), 120.)))), -max(max(p_circle(p, zrotate(vec3(.14, -.04, .52), 240.)), p_circle(p, zrotate(vec3(-.25, .135, .46), 240.))), -p_circle(p, zrotate(vec3(-.3, -.101, .46), 240.)))), -max(max(p_circle(p, zrotate(vec3(.14, -.04, .52), 360.)), p_circle(p, zrotate(vec3(-.25, .135, .46), 360.))), -p_circle(p, zrotate(vec3(-.3, -.101, .46), 360.)))), -max(max(max(p_circle(p, vec3(0., .184, .295)), p_circle(p, zrotate(vec3(0., .184, .295), 120.))), p_circle(p, zrotate(vec3(0., .184, .295), 240.))), -p_circle(p, vec3(0., 0., .0434)))));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = (fragCoord.xy / iResolution.xy * 2. - 1.) * vec2(iResolution.x / iResolution.y, 1.) * vec2(1.2, -1.2);\n\tvec2 wp = polar_cart(cart_polar(p) + vec2(0., sin(p.y * 100. + iTime * 10.) * .003)) + vec2(sin(p.y * 10. + iTime * 10. * sin(iTime / 17.)) * .005, 0.);\n\tvec2 h = vec2(.00001, 0.);\n\tfragColor = vec4(texturize(distance_field(wp) / abs(length(vec2(distance_field(wp + h) - distance_field(wp - h), distance_field(wp + h.yx) - distance_field(wp - h.yx)) / (2. * h.x))), p), 1.);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdSXWG","date":"1415221605","viewed":276,"name":"Paper Logo","username":"daeken","description":"Paper sketch version of my logo.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","shaderforth"],"hasliked":0,"parentid":"","parentname":""}}