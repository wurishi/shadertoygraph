{"ver":"0.1","info":{"id":"ltKSDG","date":"1485790222","viewed":351,"name":"Rectangle shadow #4","username":"pavelB","description":"I am trying to implement CSS3 box-shadow","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy, c = ( 2.*fragCoord - R ) / R.y;\n    \n    vec4 backColor = vec4(0, 0.8, 0.8, 1.);\n    \n    vec2 boxCenter = vec2(0.,0.);\n    \n    vec2 box = vec2(0.45, 0.45);\n    vec4 boxColor = vec4(1.,1.,1.,1.);\n    \n    vec2 border = vec2(0.451, 0.451);\n    vec4 borderColor = vec4(0.,0.,0.,1.);    \n    \n    vec2 shadow = vec2(0.05, -0.05);\n    vec4 shadowColor = vec4(0.,0.,0.,1.);\n    \n    vec2 r=abs(c.xy - boxCenter);\n    vec2 shadowCenter = boxCenter + shadow;\n    vec2 rShadow = abs(c.xy - shadowCenter);\n    \n    float colBoxX = step(r.x, box.x);\n    float colBoxY = step(r.y, box.y);\n    float cBox = colBoxX * colBoxY;\n    vec4 colBox = boxColor * cBox;\n    \n    float colBorderX = step(r.x, border.x);\n    float colBorderY = step(r.y, border.y);\n    float cBorder = colBorderX * colBorderY;\n    vec4 colBorder = borderColor * (cBorder  - cBox);\n    \n    float colShadowX = step(rShadow.x, border.x) * smoothstep(border.x,border.x - shadow.x,rShadow.x);\n    float colShadowY = step(rShadow.y, border.y) * smoothstep(border.y,border.y + shadow.y,rShadow.y);\n    float cShadow = colShadowX * colShadowY;\n    vec4 colShadow = shadowColor * (cShadow - cBorder);    \n    \n    float cBack = 1. - max(cBorder, cShadow);\n    vec4 colBack = backColor * cBack;\n\n\tfragColor = colBox + colBorder + colShadow + colBack;\n    \n} ","name":"Image","description":"","type":"image"}]}