{"ver":"0.1","info":{"id":"43sXWn","date":"1709590166","viewed":57,"name":"Morning Frontier","username":"karanbpathak","description":"New sun, big view, wide open","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mountain"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Draw a circle 2D\nfloat ce2(vec2 uv, float s, float cx, float cy)\n{\n    uv.x += cx; uv.y+= cy;\n    return 1.0-step(s, length(uv));\n}\n\n// Draw a rectangle\nfloat re2(vec2 uv, float sx, float sy,float rx, float ry)\n{\n    uv.x += rx;\n    uv.y += ry;\n    return step(sx,0.7-abs(uv.x)) * (1.0-step(sy, abs(uv.y)));\n}\n\n// Draw an equilateral triangle\nfloat te2(vec2 uv, float s, float tx, float ty)\n{\n    uv.x += tx;\n    uv.y += ty;\n    float triangle = smoothstep(s, s + 0.01, s-abs(uv.x)-uv.y);\n    triangle *= step(0.1, uv.y+0.25 );\n    return triangle;\n}\n\nfloat tre2(vec2 uv, float s, float tx, float ty, float se)\n{\n    uv.x += tx;\n    uv.y += ty;\n    float ls = smoothstep(s, s + 0.009, s-abs(uv.x*se)-uv.y);\n    ls *= step(0.1, uv.y+0.25 );\n    return ls;\n}\n\nvec3 dir2(vec3 px, vec3 pr)\n{\n    vec3 ln = normalize(vec3(1.0));\n    vec2 gt = vec2(dFdx(px.r) , dFdy(px.g));\n    vec3 nl = normalize(vec3(gt, 0.0));\n    float ly = max(0.0, dot(nl, -ln));\n    vec3 lr = vec3(1.);\n    return mix(pr, lr, ly) * px;\n}\n\nvec3 ac2( vec2 uv, vec3 c, vec3 se, vec3 te)\n{\n    float t = length(se); \n    return mix(c, dir2(se,te), smoothstep(0.0,0.0001, t));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize coordinates to range [0, 1]\n   // vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Center the coordinates\n    uv -= 0.5;\n    float s = 0.5;\n    vec3 color = vec3(0.5,0.5,0.5);\n    \n    color += 1.2-length(vec2(uv.x,uv.y-0.4))-0.5;\n    \n    float fi = 0.0;\n    for(fi=0.001;fi<1.; fi+=0.09)\n    {\n        float i = 4.*smoothstep(s, s+fi, sin(fi));\n        vec3 ma = vec3(te2(uv, s, i-0.65, -0.31));\n        color = ac2(uv, color, ma, vec3(0.7,0.6,0.5));\n    }\n\n    vec3 wr = vec3(re2(uv, s-0.3, 0.06, 0.0, -0.1));\n    color = ac2(uv, color, wr, vec3(.0,0.,0.5));\n\n    vec3 ld = vec3( re2(uv, s-0.3, 0.3, 0.0, 0.26));\n    color = ac2(uv, color, ld, vec3(.1,0.2,0.1));\n    \n    float ti = 0.0;\n    vec2 tuv = uv;\n    for(ti=0.001;ti<1.; ti+=0.001)\n    {    \n        tuv = max(tuv, fract(tuv * vec2(10.)));\n        vec3 ma = vec3(tre2(tuv, s, -0.6, -0.11,1.));\n        color = ac2(uv, color, ma, vec3(0.1,0.4,0.1));\n    }\n    \n    color = mix(1.4*color, texture(iChannel0,uv).xyz, texture(iChannel0,uv).w);\n    \n    // Set color\n    fragColor = vec4(color,1.0);\n    //fragColor = txt;\n}\n","name":"Image","description":"","type":"image"}]}