{"ver":"0.1","info":{"id":"MclGD4","date":"1703093871","viewed":15,"name":"waterfallwall","username":"javelamaker","description":"use in a vidgame or smth idk","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec3 vel = vec3(-30,-10,0) * (iTime);\n    \n    vec2 preuv = fragCoord/iResolution.xy;\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 offset = vec2(.5,.3);\n    vec2 size = vec2(10,5.8) * 2.;\n    uv *= size;\n    uv -= offset;\n    \n    float f = 10.;\n    \n    vec2 pos = vec2(.5,.5);\n    \n    vec3 col = vec3(distance(length(uv+pos)/1.5, sin(cos(iTime))*10. +2.)/30., length(pos) - fract(dot(pos,uv) + sin(length(pos*2.)) * iTime), 2.);\n    \n    col+= dot(fract(preuv *23.),fract(preuv*51.));\n    \n    col = floor(col*f)/f;\n    col += col;\n    col /= 5.;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}