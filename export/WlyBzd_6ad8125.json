{"ver":"0.1","info":{"id":"WlyBzd","date":"1614847215","viewed":321,"name":"GLSL short circuiting test","username":"morisil","description":"Are there any performance benefits of choosing style 2 over style 1 in terms of parallelization and branching?","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["test","shortcircuiting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Are there any performance benefits of choosing style 2 over style 1\n// in terms of parallelization and branching?\n\nconst float ZERO_NON_ZERO_DURATION = 2.;\nconst int ITERATION_COUNT = 1000;\n\nvec3 doSomethingExpensive1(in vec2 uv) {\n    vec4 color;\n    for (int i = 0; i < ITERATION_COUNT; i++) {\n        color += texture(iChannel0, uv);\n    }\n    return color.rgb;\n}\n\nbool doSomethingExpensive2(in vec2 uv, in float coefficient, out vec3 outColor) {\n    vec4 color;\n    for (int i = 0; i < ITERATION_COUNT; i++) {\n        color += texture(iChannel0, uv);\n    }\n    outColor += coefficient * color.rgb;\n    return true;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    // in my use case it would be uniform\n    float coefficient = floor(mod(iTime / ZERO_NON_ZERO_DURATION, 2.));\n    vec3 color = vec3(0);\n    // style 1\n    if (coefficient != 0.) {\n        color += coefficient * doSomethingExpensive1(uv);\n    }\n    // style 2\n    (coefficient != 0.) && (doSomethingExpensive2(uv, coefficient, color));\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}