{"ver":"0.1","info":{"id":"tt3XWX","date":"1581819347","viewed":238,"name":"heart3♡♡♡","username":"HaleyHalcyon","description":"luvluv","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n// this function makes the heart shape\nfloat distCustom(float x, float y)\n{\n    float n = -0.5 * abs(x) + y;\n    return log(\n        x * x + 1.5 * n * n\n    );\n}\n\nfloat fn(float x)\n{\n    return max(0.0, (sin(x * PI * 2.) + 0.4) * 0.6);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    const float speed = 3.0; //loop length\n    const vec3 color1 = vec3(1.0, 0.5, 0.8);\n    const vec3 color2 = vec3(0.3, 0.8, 1.0);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord / scale;\n\tuv -= vec2(iResolution.x / scale, iResolution.y / scale) / 2.;\n    uv *= 2.0;\n    \n    float distance = distCustom(uv.x, uv.y);\n    // float angle = atan(uv.y, uv.x);\n    \n    // Time varying pixel color\n    float c1 = 1.-fn(distance * 1.0 + iTime / speed + PI);\n    float c2 = fn(distance * 1.0 + iTime / speed * -2. + PI);\n\n    // Output to screen\n    fragColor = vec4(\n\t\tc1 * color1 + c2 * color2,\n        1\n    );\n}","name":"Image","description":"","type":"image"}]}