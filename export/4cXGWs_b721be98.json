{"ver":"0.1","info":{"id":"4cXGWs","date":"1703650161","viewed":96,"name":"space-c","username":"jackyhowe","description":"space","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["star","space","sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid layer (out vec4 col, in vec3 uv, in float zoom, in float music)\n{\n    \n    vec2 baseUv = uv.xy;\n    \n    uv.xy *= mix(1.2, 0.001, zoom);\n    \n    float deCenter = length(uv);\n    \n    deCenter = min(1., deCenter * deCenter);\n\n    vec2 smokeDin = vec2(-iTime + sin(uv.z*23.)*12.34, iTime + cos(uv.z*11.))*0.02;\n    \n    vec2 smokeUV = uv.xy;\n \n    float texC = texture(iChannel3, smokeUV*13.+ smokeDin.yx*0.5).r\n        \t\t*texture(iChannel3, smokeUV*15.*zoom*uv.y - smokeDin.yx*1.2).r*0.015;\n      \n    \n    float texA = (1.- texture(iChannel3, smokeUV*0.6 - texC * 0.5 + smokeDin*0.2).r);\n    \n    float texB = 1.-texture(iChannel3, smokeUV *  (1.-texA*0.1 + texC * 0.4 * (.5-texA)) + smokeDin*0.1).r;\n        \n   \n    texA *= (0.5 + texB)*0.25;\n\n    texA *= texA * 8.* zoom * zoom * (1.-col.a) * deCenter;\n    \n    \n    vec2 grid = uv.xy*10.;\n    \n     uv.xy = mod(grid,1.0);\n\n     grid -= uv.xy;\n    \n    uv.xy-=0.5;\n     \n    \n    vec4 add = vec4(0,0,0, texA);\n    \n    float depthMod = uv.z*0.123;\n    \n    float iTimeAndZoom = iTime + zoom;\n    \n    float cutMod = col.a * (64.) * music;\n    \n    float upscale =  (music * col.a * 20.);\n    \n    const float cuttingMod = 1.;\n    \n    float distMod =  (1. + texA* 50.  + cutMod)* max(0.1,  zoom - col.a*8.) ;\n        \n    for(int x=-1;x<=1;x++){\n    \tfor(int y=-1;y<=1;y++){\n        \n            vec2 dUv = uv.xy - vec2(x,y);\n            vec2 dGrid = grid + vec2(x,y);\n\n            vec3 vol = texture(iChannel2, vec3(dGrid.xy*0.1+depthMod, (dGrid.x + iTimeAndZoom)*0.003 )).rgb ;\n\n            float big = vol.b*vol.b * upscale;\n            \n            dUv += (vol.xy - .5)*1.5;\n            \n            \n          \n            // CIRCLES\n            // dUv += normalize(-dUv.xy) * 0.2 * music  * vol.b;\n            \n            \n            \n            \n            \n            float len = length(dUv) +0.0001;\n            \n            float dist = big * distMod/len; \n\n            \n            float cut = smoothstep(cuttingMod,.5,len);\n            \n            float ray = max(0., 1.-abs(dUv.x*dUv.y*300.))* cut * big;\n            \n            dist += ray;\n            \n            add.rgb +=  dist * cut * vol;\n    \t}\n     }\n\n   col += add * zoom * (1.-zoom);\n    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n     vec3 noise =  texture(iChannel2, vec3(uv*123.123+iTime, iTime+uv.x*uv.y*543.21)).rgb;\n    \n    vec4 col = vec4(0.1,0.1,0.2,0);\n    \n     uv -= 0.5;\n    \n    vec2 M = (iMouse.xy - iResolution.xy * .5)/iResolution.y;\n    \n    uv += M;\n    \n    float aspect = iResolution.x/iResolution.y; \n    \n    uv.x*=aspect;\n        \n    \n    const float stepCnt = 5.;\n    const int steCntInt = 5;\n    const float oneStep = 1./stepCnt;\n    const float SPEED = 0.02;\n    \n    float zoom = iTime*SPEED;\n    \n    float index = floor(mod(zoom, 1.)*stepCnt);\n    \n    zoom = mod(zoom, oneStep);\n    \n    float off = 0.;\n    \n    float music = 0.;  \n    \n    for(int i=0;i<steCntInt;i++){\n        \n        float totalZoom = zoom + off;\n        \n        music = texture(iChannel0, vec2(mix(0.01, 0.8, totalZoom),0.05)).x;\n\n        // for Unseen: smoothstep(0.01,.4, music);    \n        music = smoothstep(-.2,1., music);\n        \n    \tlayer(col, vec3(uv.xy,index), totalZoom, music);\n    \toff += oneStep;\n        index = mod(index-1., stepCnt);\n    \t\n    }    \n    \n    col.rgb*=vec3(0.5,0.9,1) * 5. * oneStep;\n    \n    vec3 mixing = col.gbr+col.brg;\n    \n    col.rgb+= mixing * mixing * 0.1;\n    \n    col.rgb += noise*col.rgb*0.15;\n\n    //col = clamp(col,0.,1.);\n    \n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}