{"ver":"0.1","info":{"id":"Dt3cWn","date":"1699031987","viewed":39,"name":"Pisano Patterns","username":"emptyflash","description":"Patterns that arise from count the number of zeroes in a pisano cycle.\n\nInspired by https://www.youtube.com/watch?v=_aIf4WUCNZU and https://en.wikipedia.org/wiki/Pisano_period#Number_of_zeros_in_the_cycle","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["math","fibonacci","pisano"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/ll2GD3\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = .2;\n    int mod = 3 + (int(iTime)%100);\n    int startX = int(fragCoord.y*scale) % mod;\n    int startY = int(fragCoord.x*scale) % mod;\n    int prev = startX;\n    int curr = startY;\n    int iter;\n    int maxIter = 100;\n    // https://en.wikipedia.org/wiki/Pisano_period#Number_of_zeros_in_the_cycle\n    int zeroes = 0;\n    for (iter = 0; iter < maxIter; iter++) {\n        int temp = curr;\n        curr = (prev + curr) % mod;\n        prev = temp;\n        if (curr == 0) {\n            zeroes++;\n        }\n        if (iter != 0 && prev == startX && curr == startY) {\n            break;\n        }\n    }\n    vec3 col = vec3(float(zeroes)/4.); //pal(float(zeroes)/ float(4), vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20));\n    //vec3 col = pal(float(iter)/ float(maxIter), vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,0.7,0.4),vec3(0.0,0.15,0.20));\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}