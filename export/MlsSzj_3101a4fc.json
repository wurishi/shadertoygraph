{"ver":"0.1","info":{"id":"MlsSzj","date":"1444143513","viewed":119,"name":"Dancing squares","username":"rohtie","description":"Fake lighting.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fakelight","textured"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 point, float angle) {\n\treturn mat2(\n        cos(angle), -sin(angle),\n        sin(angle), cos(angle)\n    )*point;\n}\n\nvec2 repeat(vec2 point, vec2 center) {\n\treturn mod(point, center) - 0.5*center;\n}\n\nvoid mainImage( out vec4 col, in vec2 p ) {   \n    p /= iResolution.xy;\n    \n    vec2 center = vec2(1.0) / 5.0;\n    \n    center = repeat(p, center);\n    \n    float angle = 3.14/4.0 + texture(iChannel0, vec2(0.9, 0.75)).x * 3.14;\n    center = rotate(center, angle); \n    \n    float square = abs(center.x) + abs(center.y);\n    square = smoothstep(0.12, 0.11, square);\n    \n    vec2 eyecenter = rotate(center, 3.14/4.0);\n    float eyes = min(length(eyecenter + vec2(-0.04, 0.0)), length(eyecenter + vec2(0.04, 0.0)));\n    eyes = max(eyes, smoothstep(0.0, 0.12, eyecenter.y));\n    eyes = smoothstep(0.02, 0.01, eyes);\n    \n    \n    col.rgb = (\n        // Background\n        vec3(0.24 / sqrt(p.y + 0.2), 0.23, 0.11) +\n        \n        // Square\n        vec3(square) * \n        vec3(0.42 / p.y*0.52, 0.15 / p.y*0.82 + p.x*0.22, 0.21) +\n        texture(iChannel1, center).rgb * 0.25 +\n        \n        // Eyes\n        -vec3(eyes) + \n        \n        // Overlay\n        vec3(-length(p - vec2(0.323))) * vec3(2.52, 1.23, 2.04) * 0.164 +\n        \n        // Specular\n        vec3(square + cos(atan(center.x, center.y) * 0.25 - angle))*p.x*p.y\n    );\n}","name":"Image","description":"","type":"image"}]}