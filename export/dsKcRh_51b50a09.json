{"ver":"0.1","info":{"id":"dsKcRh","date":"1695804724","viewed":51,"name":"weather_winter","username":"RainStar","description":"high efficiency\nsnowy from: https://www.shadertoy.com/view/ldsGDn\nVaryNf fromï¼šhttps://www.shadertoy.com/view/Wtd3Df\nSnow covered ground from: https://www.shadertoy.com/view/wdGSWd","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","snow","weather","winter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float f_Snow_Change_Interval = 5.0;\nconst float f_Snow_Coverage_Max_Rate = 5.0;\n\nfloat DEPTH = 0.4;\nfloat WIDTH = 0.5;\n\nfloat vmax(vec3 a) {return max(max(a.x,a.y),a.z);}\nfloat vmin(vec3 a) {return min(min(a.x,a.y),a.z);}\n\nvec3 rgb2hsv(vec3 rgb) //convert rgb to hsv color space\n{\n\tfloat c_max = vmax(rgb);\n\tfloat c_min = vmin(rgb);\n\tvec3 hsv = vec3(0,c_max>0.?1.-c_min/c_max:0.0,c_max);\n\t\n\tif (c_max==c_min) {hsv.x=6.0;}\n\telse if (c_max==rgb.r) {hsv.x=0.0+(rgb.g-rgb.b)/(c_max-c_min);}\n\telse if (c_max==rgb.g) {hsv.x=2.0+(rgb.b-rgb.r)/(c_max-c_min);}\t\n\telse if (c_max==rgb.b) {hsv.x=4.0+(rgb.r-rgb.g)/(c_max-c_min);}\n\thsv.x = fract(hsv.x/6.0);\n\thsv = clamp(hsv,0.0,1.0);\n\treturn hsv;\n}\n\nvec3 iMouse3 = vec3(0.44375,0.3778,-0.15625);\nfloat wdistance(vec3 p) {return length(fract(p + iMouse3) - 0.5);}\n\nvec3 ToWhite(vec3 color, float fCoverage_Rate, float radio)\n{\n\tvec3 hsv = rgb2hsv(color);\n\treturn mix(vec3(0.9, 0.9, 0.95)*radio,color, smoothstep(0.0,fCoverage_Rate, length(vec3(0.0,0.933,0.933)*wdistance(hsv))));\n}\n\nconst float cHashM = 43758.54;\n\nvec2 Hashv2v2 (vec2 p)\n{\n  vec2 cHashVA2 = vec2 (37., 39.);\n  return fract (sin (vec2 (dot (p, cHashVA2), dot (p + vec2 (1., 0.), cHashVA2))) * cHashM);\n}\n\nfloat Noisefv2 (vec2 p)\n{\n  vec2 t, ip, fp;\n  ip = floor (p);  \n  fp = fract (p);\n  fp = fp * fp * (3. - 2. * fp);\n  t = mix (Hashv2v2 (ip), Hashv2v2 (ip + vec2 (0., 1.)), fp.y);\n  return mix (t.x, t.y, fp.x);\n}\n\nfloat Fbmn (vec3 p, vec3 n)\n{\n  vec3 s;\n  float a;\n  s = vec3 (0.);\n  a = 1.;\n  for (int j = 0; j < 5; j ++) {\n    s += a * vec3 (Noisefv2 (p.yz), Noisefv2 (p.zx), Noisefv2 (p.xy));\n    a *= 0.5;\n    p *= 2.;\n  }\n  return dot (s, abs (n));\n}\n\nvec3 VaryNf (vec3 p, vec3 n, float f)\n{\n  vec3 g;\n  vec2 e = vec2 (0.1, 0.);\n  g = vec3 (Fbmn (p + e.xyy, n), Fbmn (p + e.yxy, n), Fbmn (p + e.yyx, n)) - Fbmn (p, n);\n  return normalize (n + f * (g - n * dot (n, g)));\n}\n\nfloat VaryFaction(vec2 uv)\n{\n\tvec3 vn = VaryNf (40.0 * vec3(uv.x, 1.0, uv.y), vec3(0.0, 1.0, 0.0), 4.0);\n  vec3 sunDir = normalize (vec3 (1., 1.5, 0.3));\n\treturn (0.2 + 0.2 * max (dot (normalize (- sunDir.xz), vn.xz), 0.0) + 0.1 * max (vn.y, 0.0) + 0.8 * max (dot (vn, sunDir), 0.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 u=fragCoord/iResolution.x*2.0-1.0;\n    u/=(u.y+=.8)-1.;\n\tvec3 baseColor = texture(iChannel0, u).rgb;    \n    float radio = VaryFaction(u*1.5);\n    \n    float step = fract(iTime/(f_Snow_Change_Interval*6.0))*6.0;\n    float f_Winter_Transition_1 = 0.0;\n    float f_Winter_Transition_2 = 0.0;\n\n    if(step < 1.0)\n    {\n        f_Winter_Transition_2 = step;\n        f_Winter_Transition_1 = step*0.5;\n    }\n    else if(step < 2.0)\n    {\n        f_Winter_Transition_2 = 1.0;\n        f_Winter_Transition_1 = step*0.5;\n    }else if(step < 3.0)\n    {\n        f_Winter_Transition_1 = 1.0;\n        f_Winter_Transition_2 = 1.0;\n    }else if(step < 4.0)\n    {\n        f_Winter_Transition_1 = (5.0-step)*0.5;\n        f_Winter_Transition_2 = 4.0-step;\n    }\n    else if(step < 5.0)\n    {\n        f_Winter_Transition_1 = (5.0-step)*0.5;\n        f_Winter_Transition_2 = 0.0;\n    }    \n    float START = 0.0;\n    float LAYERS = f_Winter_Transition_2*50.0;\n    // Snow covered ground\n    vec3 snowColor = ToWhite(baseColor.rgb, f_Snow_Coverage_Max_Rate*f_Winter_Transition_1, radio);\n    \n    baseColor.rgb = snowColor;//mix(baseColor.rgb, snowColor, f_Winter_Transition_1);\n\n    // snowy\n\tconst mat3 p = mat3(13.323122,23.5112,21.71123,21.1212,28.7312,11.9312,21.8112,14.7212,61.3934);\n    uv.x = uv.x+iTime*0.1;\n\tvec3 acc = vec3(0.0);\n\tfor (float i=START;i<LAYERS;i+=1.0) {\n        if(uv.y < i/LAYERS)\n           continue;\n\t\tfloat fi = float(i+5.0);\n\t\tvec2 q = uv*(1.0+fi*DEPTH);\n\t\tq += vec2(q.y*(WIDTH*mod(fi*7.238917,1.)-WIDTH*.5),iTime/(1.+fi*DEPTH*.03));\n\t\tvec3 n = vec3(floor(q),31.189+fi);\n\t\tvec3 m = floor(n)*.00001 + fract(n);\n\t\tvec3 mp = (31415.9+m)/fract(p*m);\n\t\tvec3 r = fract(mp);\n\t\tvec2 s = abs(mod(q,1.)-.5+.9*r.xy-.45);\n\t\ts += .01*abs(2.*fract(10.*q.yx)-1.); \n\t\tfloat d = .6*max(s.x-s.y,s.x+s.y)+max(s.x,s.y)-.01;\n\t\tfloat edge = 0.005+0.05*min(.5*abs(fi-5.-sin(iTime*0.01)),1.);\n\t\tacc += vec3(smoothstep(edge,-edge,d)*(r.x/(1.+.02*fi*DEPTH)));\n\t}\n\tbaseColor.rgb = mix(baseColor.rgb, vec3(1.0), acc.x*4.0);\n    \n    // Output to screen\n    fragColor = vec4(baseColor,1.0);\n}","name":"Image","description":"","type":"image"}]}