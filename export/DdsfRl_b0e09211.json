{"ver":"0.1","info":{"id":"DdsfRl","date":"1689073058","viewed":30,"name":"Expanding shapes","username":"billyberkouwer","description":"circles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdOrientedBox( in vec2 p, in vec2 a, in vec2 b, float th )\n{\n    float l = length(b-a);\n    vec2  d = (b-a)/l;\n    vec2  q = p-(a+b)*1.5;\n          q = mat2(d.x,-d.y,d.y,d.x)*q;\n          q = abs(q)-vec2(l*0.5,th);\n    return length(max(q,0.0)) + min(max(q.x,q.y),0.2);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coordinates\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    p *= 1.4;\n    \n    // animation\n    \n    float d;\n    vec3 col;\n    \n    for (int index; index<4; index++) {\n        for (int i; i<5; i++) {\n            vec2 v1 = vec2(-float(i*(index+2))/2.+float(index+1)/5.,0.)+float(index)/5.;\n            vec2 v2 = vec2(-float(i*(index-2))/2.+float(index-1)/5.,-0.)-float(index)/5.;\n            float th = 1.-cos(iTime/2.)/4.;\n            d += sdOrientedBox( p, v1, v2, th );\n            col += vec3(pow(cos(iTime*.5)/2., 2.), pow(sin(iTime*.5)/2., 1.)/10., 0.01) - sign(d)/5.;\n        }\n    }\n\n    // distance\n\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}