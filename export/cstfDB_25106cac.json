{"ver":"0.1","info":{"id":"cstfDB","date":"1697609054","viewed":46,"name":"Music Through ShaderToy","username":"juu_nii","description":"Currently working a sound program in ShaderToy! Haven't Implemented Typecasting yet!","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = vec2(fragCoord.x/iResolution.x, fragCoord.y/iResolution.y-.5);\n    \n    float a = uv.y*sin(2.0*3.1415*uv.x);\n    if(uv.y < .1 && uv.y >-0.1) {fragColor = vec4(1.0);}\n    if(a == 1.0){\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }else{\n        fragColor = vec4(uv, 0.0, 0.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define aVal 440.0\n\nfloat noteVal(float key){\n    float val = aVal;\n    float div = aVal;\n    int count = 0;\n    while(key>0.0){\n        if(count>12) div *= 2.0;\n        val = val + (div/12.0);\n        count += 1;\n        key -= 1.0;\n    }\n    while(key<0.0){\n        if(count>12) div /= 2.0;\n        val = val - (div/12.0);\n        count += 1;\n        key += 1.0;\n    }\n    return val;\n}\n\nint Arp(float steps, float size){\n    return 0;\n}\n\nint saw(float steps, float size){\n    return 0;\n}\n\nfloat BPM(float a, float t){\n    return exp(-a*(fract(t))); //(60 Beats Per Min) * Time Multiplier\n}\n\nfloat square(float time, float note){\n    return fract(3.1415*note*time)>=0.6?1.0:fract(3.1415*note*time)<0.5?0.0:fract(fract(3.1415*note*time)*10.0);\n}\n\nvec2 mainSound( int samp, float time )\n{\n    float tm = 2.0;\n    float t = time * tm;\n    //float Note = noteVal(0.0);\n    //float Signal = sin(2.0*3.1415*Note*time);//440Hz - A4, Step = 36.666\n    \n    float notes[10] = float[10](-4.0, 0.0, -2.0, 4.0, 0.0, 0.0, 0.0, -2.0, -5.0, -4.0);\n    \n    float Signal = 0.0;\n    \n    float Kick = sin(2.0*3.1415*noteVal(-24.0)*time) * BPM(100.0, t);\n    float Snare = square(time, noteVal(-3.0-8.0*fract(time*2.0))) * BPM(3.0, (t)+((tm/2.0))/tm);\n    Signal += 2.0*Kick;\n    Signal += 0.5*Snare;\n    \n    int i = int(time);\n    \n    float SinA = sin(2.0*3.1415*noteVal(notes[i])*time) * BPM(2.0, t/2.0);\n    Signal += .2*SinA;\n    float Square = square(time, noteVal(notes[i]));\n    Signal += .1*Square;\n    \n    \n    float Expo = BPM(100.0,t);\n    float Amp = .5;\n    return vec2(Amp*Signal);\n}","name":"Sound","description":"","type":"sound"}]}