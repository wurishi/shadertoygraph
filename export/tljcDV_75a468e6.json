{"ver":"0.1","info":{"id":"tljcDV","date":"1595447961","viewed":124,"name":"v0TestCard.glsl","username":"jorge2017a1","description":"v0TestCard.glsl","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["v0testcardglsl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float saturate(float x) { return clamp(x, 0.0, 1.0); }\nvec3 saturate(vec3 x) { return clamp(x, 0.0, 1.0); }\n\nvec3 hue2rgb(float h)\n{\n    h = fract(saturate(h)) * 6.0 - 2.0;\n    return saturate(vec3(abs(h - 1.0) - 1.0, 2.0 - abs(h), 2.0 - abs(h - 2.0)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 27.0 / iResolution.y;                             // grid scale\n    vec2 area = vec2(floor(13.0 / iResolution.y * iResolution.x), 13.0); // size of inner area\n\n    vec2 p0 = fragCoord.xy - iResolution.xy / 2.0; // position (pixel)\n    vec2 p1 = p0 * scale;                       // position (grid)\n\n    // gray background with crosshair\n    float c1 = 1.0 - step(2.0, min(abs(p0.x), abs(p0.y))) * 0.5;\n\n    // grid lines\n    vec2 grid = step(scale, abs(0.5 - fract(p1 * 0.5)));\n    c1 = saturate(c1 + 2.0 - grid.x - grid.y);\n\n    // outer area checker\n    vec2 checker = step(0.49999, fract(floor(p1 * 0.5 + 0.5) * 0.5));\n    if (any(greaterThan(abs(p1), area))) c1 = abs(checker.x - checker.y);\n\n    float corner = sqrt(8.0) - length(abs(p1) - area + 4.0); // corner circles\n    float circle = 12.0 - length(p1);                      // big center circle\n    float mask = saturate(circle / scale);               // center circls mask\n\n    // grayscale bars\n    float bar1 = saturate(p1.y < 5.0 ? floor(p1.x / 4.0 + 3.0) / 5.0 : p1.x / 16.0 + 0.5);\n    c1 = mix(c1, bar1, mask * saturate(ceil(4.0 - abs(5.0 - p1.y))));\n\n    // basic color bars\n    vec3 bar2 = hue2rgb((p1.y > -5.0 ? floor(p1.x / 4.0) / 6.0 : p1.x / 16.0) + 0.5);\n    vec3 c2 = mix(vec3(c1), bar2, mask * saturate(ceil(4.0 - abs(-5.0 - p1.y))));\n\n    // big circle line\n    c2 = mix(c2, vec3(1.0), saturate(2.0 - abs(max(circle, corner)) / scale));\n\n    fragColor = vec4(c2, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( in int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( 5.0*sin(6.2831*800.0*time)*0.125 );\n}","name":"Sound","description":"","type":"sound"}]}