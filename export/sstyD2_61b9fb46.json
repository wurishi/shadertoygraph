{"ver":"0.1","info":{"id":"sstyD2","date":"1654531142","viewed":109,"name":"Test_shaderVSH","username":"AlexFisher","description":"vsh shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["vsh"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.1415926\n\nvec3 colorDef(vec2 uv) {\n    vec3 color;\n    color.r = texture(iChannel0, uv).r;\n    color.g = texture(iChannel0, uv).g;\n    color.b = texture(iChannel0, uv).b;\n    return color;\n}\n\n\nvec2 fault(vec2 uv, float s) {\n    float v = pow(0.5 - 0.5 * cos(2.0 * pi * uv.y), 2000.0) * sin(2.0 * pi * uv.y);\n    uv.x += v * s * 4.0;\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float t = iTime / 10.0;\n    float blink = float(int(iTime*100.0) % 2);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 newUv = fault(uv + vec2(0.0, fract(t * 2.0)), 0.2) - vec2(0.0, fract(t * 2.0));\n    vec3 color = colorDef(newUv * float(!bool(blink)) + uv * blink);\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}