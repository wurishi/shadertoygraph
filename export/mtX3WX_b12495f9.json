{"ver":"0.1","info":{"id":"mtX3WX","date":"1672524772","viewed":99,"name":"üëÅÔ∏è for the meaning of üß¨","username":"blurryroots","description":"üîé‚ú®üß†‚ú®‚ùì","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["2d","music","distortion","sin","distance","repeat"],"hasliked":0,"parentid":"DtXGWf","parentname":"The sin of tan and friends."},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtSSDy","filepath":"https://soundcloud.com/boris-brejcha/the-meaning-of-life","previewfilepath":"https://soundcloud.com/boris-brejcha/the-meaning-of-life","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define WITH_SOUND_IN 1\n// === icon message: \"sound in\". link: https://www.shadertoy.com/view/MtyXRW\nfloat message(vec2 uv) { // to alter in the icon\n    uv-=vec2(1.,10.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n// === icon message: \"sound in\"\n\n\nvoid mainImage (out vec4 C, in vec2 F) {\n    #ifdef WITH_SOUND_IN\n    // Overlay by FabriceNeyret2 https://www.shadertoy.com/view/MtyXRW\n    if (iResolution.y<2000.) {float c=message(F.xy/8.);if(c>=0.){C=vec4(c);return;}}  \n    #endif\n\n    float t = iTime;\n    float r = R.x / R.y;\n    vec2 uv = F / R.xy;\n    vec2 uvn = (F - 0.5 * R.xy)\n        / max (R.x, R.y)\n        ;\n        \n    float k = 1. * texture (iChannel2, vec2 (0.09, 0.)).r;\n    k = 2.1 * cos (k * halfpi);\n       \n    vec2 zuv = 9.* r * uvn; //33. * psin (0.5 * t) * uvn;\n    float t_mode = 0.3 * t;\n    int mode = int (floor (mod (t_mode, 18.)));\n    float l = 0.;\n    l = max (l, length (zuv + sin (k*zuv)));\n    l = mix (l, length (zuv - sin (zuv)), psin (2.*t));// 0.1*k); //k*0.8);//psin (t));\n    l = mix (l, k*length (tan (zuv)), k-0.2); //k);//sin (1.*t));\n    \n    float s = smoothstep (phi * 2. * r, -phi0 * r, l);\n    \n    vec2 tuv = mix (uvn, vec2 (s), 0.777);//pcos (1.*t));\n    vec3 color = vec3 (0);\n    vec3 bg = vec3 (0.0);\n    bg = texture (iChannel0, 1. * uvn).rgb;\n    bg = mix (bg, pow (s, .8) * (1.-vec3 (0.1, 1.0, 0.1)), 0.888);\n    vec3 fg = vec3 (0.0, 0.5, 0.0);\n    fg = texture (iChannel1, 1.5 * tuv).rgb;\n    color += (1. - s) * bg;\n    color += (0. + s) * fg;\n    \n    C = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution\n#define F fragCoord\n\nconst float pi = 355. / 113.;\nconst float halfpi = 0.5 * pi;\nconst float phi = 0.5 * (1. + sqrt (5.));\nconst float phi0 = phi - 1.;\nconst float phi0i = 1. - phi0;\n\nfloat psin (float t) {\n    return 0.5 * (1. + sin (pi * t - halfpi));\n}\nvec2 psin (vec2 t) {\n    return 0.5 * (1. + sin (pi * t - halfpi));\n}\nfloat pcos (float t) {\n    return 0.5 * (1. + cos (pi * t));\n}\nvec2 pcos (vec2 t) {\n    return 0.5 * (1. + cos (pi * t));\n}","name":"Common","description":"","type":"common"}]}