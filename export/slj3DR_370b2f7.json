{"ver":"0.1","info":{"id":"slj3DR","date":"1623749716","viewed":256,"name":"Smoldering effect ","username":"SimpleMurad","description":"smoldering effect with noise ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["noise","fire","smoldering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float scale = 2.0f;\nconst float intensivity = 0.05f;\nconst int iteration = 6;\nconst float speed = 85.0; // range 1 to 100\n\nconst mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\nvec2 hash( vec2 p ) {\n\tp = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    const float K1 = 0.366025404; \n    const float K2 = 0.211324865; ;\n\tvec2 i = floor(p + (p.x+p.y)*K1);\t\n    vec2 a = p - i + (i.x+i.y)*K2;\n    vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); \n    vec2 b = a - o + K2;\n\tvec2 c = a - 1.0 + 2.0*K2;\n    vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n\tvec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n    return dot(n, vec3(70.0));\t\n}\n\nfloat fbm(vec2 n) {\n\tfloat total = 0.0, amplitude = 0.1;\n\tfor (int i = 0; i < 7; i++) {\n\t\ttotal += noise(n) * amplitude;\n\t\tn = m * n;\n\t\tamplitude *= 0.4;\n\t}\n\treturn total;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n\tvec2 uv = p*vec2(iResolution.x/iResolution.y,1.0);    \n    float time = iTime*0.02f;\n    float q = fbm(uv  * 0.5);\n\n\tuv *= scale;\n    uv -= q - time;\n    \n    float f = 0.0;\n    float weight = 0.7;\n    for (int i=0; i<iteration; i++){\n\t\tf += weight*noise( uv );\n        uv = m*uv + time;\n\t\tweight *= 0.6;\n    }\n    \n    f = fract(f+iTime/(101.-speed));\n    \n    float coeff = intensivity/abs(.5 - f);\n    vec3 result = vec3(.9,.2,.1)*coeff;\n        \n    fragColor = vec4(result,1.0);\n}","name":"Image","description":"","type":"image"}]}