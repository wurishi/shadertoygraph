{"ver":"0.1","info":{"id":"ltfyW2","date":"1506427164","viewed":169,"name":"Light Night","username":"zomee","description":"Turn an image into the  \"light night\" mode","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["light","night"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\tCreated by zomee 2017.\n\n//\tbox filter\nvec3 boxFilter(sampler2D tex, vec2 uv, vec2 imageSize, int r)\n{\n    float imageWidth = imageSize.x;\n    float imageHeight = imageSize.y;\n    vec3 color = vec3(0.);\n    for(int i = -r; i <= r; ++i)\n        for(int j = -r; j <= r; ++j)\n        {\n         \tvec2 offset = vec2(float(i)/imageWidth, float(j)/imageHeight);\n            color += texture(tex, uv + offset).rgb;\n        }\n    \n    float num = float((2 * r + 1) * (2 * r + 1));\n    color /= num;\n    \n    return color;\n}\n\n//\tsquare the texture color\nvec3 boxFilter_SquareColor(sampler2D tex, vec2 uv, vec2 imageSize, int r)\n{\n \tfloat imageWidth = imageSize.x;\n    float imageHeight = imageSize.y;\n    vec3 color = vec3(0.);\n    for(int i = -r; i <= r; ++i)\n        for(int j = -r; j <= r; ++j)\n        {\n         \tvec2 offset = vec2(float(i)/imageWidth, float(j)/imageHeight);\n            vec3 texColor = texture(tex, uv + offset).rgb;\n            color += texColor * texColor;\n        }\n    \n    float num = float((2 * r + 1) * (2 * r + 1));\n    color /= num;\n    \n    return color;   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col = vec3(0.);\n\n    int r = 5;\n   \tcol = boxFilter(iChannel0, uv, iChannelResolution[0].xy, r);\n    \n    //\tmean I\n    vec3 mean_I = boxFilter(iChannel0, uv, iChannelResolution[0].xy, r);\n    //\tmean of I * I \n    vec3 mean_II = boxFilter_SquareColor(iChannel0, uv, iChannelResolution[0].xy, r);\n\t//\tvariance of I\n    vec3 variance_I = mean_II - mean_I * mean_I;\n    \n    \n    col = variance_I * 30.0;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}