{"ver":"0.1","info":{"id":"Mcs3zM","date":"1702918820","viewed":55,"name":"Truchet Tiling + smoothstep","username":"vlahovivan","description":"Forked my existing Truchet tiling study, made it a bit more cool","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiling"],"hasliked":0,"parentid":"dlcyR7","parentname":"Truchet Tiling study"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define HALF_PI 1.57079632679\n#define QUARTER_PI 0.78539816339\n\nfloat rand(vec2 co, float seed){\n    return fract(sin(dot(co, vec2(26.9898, 98.233))) * seed);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float tiling_length = 2.0;\n    float seed_1 = 43758.5453 + floor(iTime / tiling_length);\n    float seed_2 = 45252.2524 + floor((iTime - 0.75 * tiling_length) / tiling_length);\n    \n    float seed_1_next = seed_1 + 1.0;\n    float seed_2_next = seed_2 + 1.0;\n    \n    float circle_radius = 0.15 * smoothstep(0.5, 0.0, abs(mod(iTime - 0.75 * tiling_length, tiling_length) - 0.25 * tiling_length));\n    \n    vec2 original_p = (fragCoord)/iResolution.y;\n    \n    vec2 truchet_p = original_p;\n    \n    float rows = 6.0;\n    truchet_p *= rows;\n    \n    vec2 circle_p = truchet_p + 0.5;\n    \n    vec2 idx = floor(truchet_p);\n    vec2 color_idx = floor(circle_p);\n    \n    truchet_p = fract(truchet_p) - 0.5;\n    circle_p = fract(circle_p) - 0.5;\n\n    float rot = floor(rand(idx, seed_1) * 4.0) * HALF_PI;\n    float rot_next = floor(rand(idx, seed_1_next) * 4.0) * HALF_PI;\n    \n    float aa_const = 0.75 * rows / iResolution.y;\n    \n    float rot_t = smoothstep(0.25 * tiling_length, 0.75 * tiling_length, mod(iTime, tiling_length));\n    float actual_rot = mix(rot, rot_next, rot_t);\n    truchet_p *= mat2(cos(actual_rot), sin(actual_rot), -sin(actual_rot), cos(actual_rot));\n    \n    vec2 c_1 = vec2(0.5, 0.5);\n    vec2 c_2 = vec2(-0.5, -0.5);\n    \n    float r = min(length(truchet_p - c_1), length(truchet_p - c_2));\n    vec2 pos_1 = truchet_p - c_1;\n    vec2 pos_2 = truchet_p - c_2;\n    float l = (smoothstep(0.6 + aa_const, 0.6 - aa_const, r) - smoothstep(0.4 + aa_const, 0.4 - aa_const, r))\n             * smoothstep(0.5 + aa_const, 0.5, max(abs(truchet_p.x), abs(truchet_p.y)));\n    \n    float r_c = length(circle_p);\n    float l_c = smoothstep(circle_radius + aa_const, circle_radius - aa_const, r_c);\n    \n    if(rand(color_idx, seed_2) > 0.25) {\n        l_c = 0.0;\n    }\n    \n    float gradient_amt = clamp(length(original_p) * 0.6, 0.0, 1.0);\n    \n    vec4 bg_color = mix(vec4(0.169, 0.227, 0.404, 1.000), vec4(0.286, 0.416, 0.506, 1.000), gradient_amt);\n    vec4 line_color = mix(vec4(0.937, 0.973, 0.984, 1.000), vec4(1.000, 0.996, 0.922, 1.000), gradient_amt);\n    vec4 circle_color = mix(vec4(0.91, 0.365, 0.459, 1.000), vec4(0.949, 0.506, 0.137, 1.000), gradient_amt);\n    \n    fragColor = bg_color;\n    fragColor = mix(fragColor, line_color, l);\n    fragColor = mix(fragColor, circle_color, l_c);\n}","name":"Image","description":"","type":"image"}]}