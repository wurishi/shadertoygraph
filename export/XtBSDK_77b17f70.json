{"ver":"0.1","info":{"id":"XtBSDK","date":"1446388645","viewed":223,"name":"ParticleSelection","username":"jt","description":"An effect for selecting a bunch particles - could be usefull for computer games.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["particles","games","selection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 mirror2(vec2 v)\n{\n    return abs(2.0 * fract(v * 0.5) - 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.0);\n    uv *= aspect;\n    \n    const float n = 32.0;\n    float inner = 0.0;\n    float outer = 0.0;\n    for(float i = 0.0; i < n; i++)\n    {\n        vec2 pos = aspect * mirror2(texture(iChannel0, vec2(i / n, 0.5)).xy * iTime * 0.1);\n        \n        float d = length(uv - pos);\n        // suggested by FabriceNeyret2 - very creative modification :-)\n        // d = 5.+5.*sin(10.*d);\n        float d0 = d - 0.09;\n        float d1 = d - 0.1;\n        inner = min(inner, d0);\n        outer = min(outer, d1);\n    }\n\n    float value = 1.0 - smoothstep(0.0, -0.01, outer) * smoothstep(-0.01, 0.0, inner);\n    vec4 border = vec4(smoothstep(0.49, 0.51, uv.y)); // could't decide which color looks nicer ;-)\n    vec4 background = vec4(0.0, 0.5, 0.0, 1.0);\n\tfragColor = mix(border, background, value);\n}\n","name":"","description":"","type":"image"}]}