{"ver":"0.1","info":{"id":"3lBBDD","date":"1598957203","viewed":68,"name":"Distorting space","username":"Ric3cir121","description":"this is what distorting space mean\narrows and mouse to move","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["3d","raymarching","fractal","sphere","space"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n                   Distorting space by ric3cir121\n\n---------------------------------------------------------------------\n                  See 'Buffer A' for Ray marching,\n               See 'Buffer B' for Data storing system.\n*/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;///((iResolution.x/512.)<1.?1.:(iResolution.x/512.));\n    vec4 col = texture(iChannel0,uv);\n    vec4 col2 = vec4(0);\n    //col2 = texture(iChannel1,vec2(fragCoord.x/iResolution.x/20.,0));\n    fragColor = vec4(pow(col2.rgb+col.rgb+0.5,vec3(5.5)),1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define mouse 2\n#define coordinates 3\n\n/* data storing system*/ vec4 get(int coord){return texture(iChannel1,vec2(coord*2,0.)/iResolution.xy);}\n\n/* Distance Estimator */ float p(int x, int y){return float(int(((x^y)*int(pow(float(x%43),2.))+int(pow(float(y%26),5.))))%255);}\nfloat pattern(float x, float y){\n    float spi = 1.5707963;\n    float mx = (cos((x-floor(x))*spi*2.)+1.)/2.;\n    float my = (cos((y-floor(y))*spi*2.)+1.)/2.;\n    return float((((p(int(x),int(y+1.))*(mx))+(p(int(x+1.),int(y+1.))*(1.-mx)))*(1.-my))+(((p(int(x),int(y))*(mx))+(p(int(x+1.),int(y))*(1.-mx)))*(my)));\n}\nfloat de(vec3 p){\n\treturn length(mod(p, 1.) - 0.5) - ((cos(iTime)+2.)/20.);\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord ){\n    /* scaled uv */ float scale = 1.;vec2 uv = fragCoord/iResolution.xy*scale;if(uv.x > 1. || uv.y > 1.)return;\n    \n    /* coordinates */ float offs = 10.;vec4 crds = get(coordinates);vec3 coords = vec3(crds.x+offs,1.,crds.z+offs);float spi = 1.5707963;\n    \n    /* camera */ vec4 det = get(mouse);float vwX = det.x+3.9,vwY = det.y+3.;vec3 N = vec3(cos(vwX)*cos(vwY),sin(vwY),sin(vwX)*cos(vwY)),V = vec3(cos(vwX+spi),0.,sin(vwX+spi))+N,U = vec3(cos(vwX)*cos(vwY+spi),sin(vwY+spi),sin(vwX)*cos(vwY+spi))+N;float X=((fragCoord.x-(iResolution.x*0.5/(scale)))/(iResolution.x/(scale)))*4.,Y=(0.-((fragCoord.y*(scale)-(iResolution.x*.5/(scale)))/iResolution.x*1.))*4.,Rx=V.x*X+N.x*(1.-X)+U.x*Y+N.x*(1.-Y),Rz=V.z*X+N.z*(1.-X)+U.z*Y+N.z*(1.-Y),Ry=U.y*Y+N.y*(1.-Y),OS=pow(1./(Rx*Rx+Rz*Rz+Ry*Ry),0.5),mx=Rx*OS,mz=Rz*OS,my=Ry*OS,f=255.,cz=0.,cx=0.,cy=0.,C=9.,f2=255.,f3=0.,angle = 99.,fk;\n\n    /* marching */ while(f > 8. && C > 0.003){\n        C=de(vec3(abs(cx+coords.x),abs(cy+coords.y),abs(cz+coords.z)));cx+=C*mx,cy+=C*my,cz+=C*mz,f-=4.;\n    }float lght = (mod(cy+coords.y,1.)-0.3)*5.;fk = C > 0.003?1.:0.;mx=-0.3,my=0.6,mz=-0.3,C=9.;cx-=0.6,cy+=0.6,cz+=-0.6;while(f2 > 32. && C > 0.003){\n        C=de(vec3(abs(cx+coords.x),abs(cy+coords.y),abs(cz+coords.z)));cx+=C*mx,cy+=C*my,cz+=C*mz,angle = min(atan(C/(260.-f2)),angle),f2-=31.;\n    }\n\n    /* light and colors */ vec3 rgb;float light = 1.;if(fk == 1.){rgb = vec3(255,255,255);}else{rgb = vec3(255,127,64);}\n    if(fk == 0.){light=4.;} else {light=1.;}rgb += ((255.-f)/100.)*vec3(.5,.25,0.)*p(abs(int(cx)),abs(int(cz)));\n    vec3 col = vec3((rgb/255.*light)/(f/30.))/2.;col.x=col.x>1.?1.:col.x;col.y=col.y>1.?1.:col.y;col.z=col.z>1.?1.:col.z;\n\n    /* finally the pixel that is returned */ fragColor = vec4(col,1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// storing data system by Ric3cir121\n\n#define mouse 2\n#define coordinates 3\n\n/* actions (storable,store and get) */ bool storable(int coord, vec2 fragCoord){return round(fragCoord.x/2.) == float(coord) && fragCoord.y < 1.;}\nvoid store(int coord, vec4 data, vec2 fragCoord, out vec4 fragColor){if(storable(coord,fragCoord)){fragColor = data;}}\nvec4 get(int coord){return texture(iChannel0,vec2(coord*2,0.)/iResolution.xy);}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord ){\n    /* uv */ vec2 uv = fragCoord/iResolution.xy;fragColor = texture(iChannel0,uv);\n    \n    /* mouse */ vec4 ms = get(mouse),res = ms;if(iMouse.z >0.0){if(ms.z == 0.){res.zw = iMouse.xy/100.;}else{res.zw = iMouse.xy/100.;res.xy -= iMouse.xy/100.-ms.zw;}} else {res.z = 0.;}store(mouse,res,fragCoord,fragColor);\n    \n    /* movement */ vec4 crds = get(coordinates),det = get(mouse);float vwX = det.x+3.9+3.14159265;\n    if(texture(iChannel1,vec2(38./256.,0)).x > 0.)crds.xz += vec2(cos(vwX),sin(vwX))/120.;\n    if(texture(iChannel1,vec2(37./256.,0)).x > 0.)crds.xz += vec2(cos(vwX+1.5707963),sin(vwX+1.5707963))/120.;\n    if(texture(iChannel1,vec2(39./256.,0)).x > 0.)crds.xz += vec2(cos(vwX-1.5707963),sin(vwX-1.5707963))/120.;\n    if(texture(iChannel1,vec2(40./256.,0)).x > 0.)crds.xz += vec2(cos(vwX+3.141459265),sin(vwX+3.141459265))/120.;\n    store(coordinates,crds,fragCoord,fragColor);\n}","name":"Buffer B","description":"","type":"buffer"}]}