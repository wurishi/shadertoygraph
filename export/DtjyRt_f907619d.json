{"ver":"0.1","info":{"id":"DtjyRt","date":"1692182956","viewed":40,"name":"Mandelbrot by pshegger","username":"pshegger","description":"Simple Mandelbrot fractal with animated zoom, showcasing some interesting parts.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITER = 512;\nconst float ANIMATION_LENGTH = 20.0;\nconst vec2 TARGETS[] = vec2[](\n    vec2(0.313, 0.50001),\n    vec2(-0.74385, 0.12705),\n    vec2(-0.0018, -0.8243),\n    vec2(-0.77659, 0.13664)\n);\n\n// http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = mod(iTime, 2.0 * ANIMATION_LENGTH);\n    if (t > ANIMATION_LENGTH) {\n        t = 2.0 * ANIMATION_LENGTH - t;\n    }\n    float zoom = 0.5 + pow(t, 1.0 + 3.5 * t / 30.0);\n    int target_i = int(floor(iTime)) / int(2.0 * ANIMATION_LENGTH) % TARGETS.length();\n    vec2 m = TARGETS[target_i] * tanh(t);\n    \n    vec2 visible_size = vec2((1.0 / zoom) * (iResolution.x / iResolution.y), 1.0 / zoom);\n    vec2 uv = (fragCoord / iResolution.xy) * visible_size + (m - visible_size / 2.0);\n    \n    float cr = uv.x;\n    float ci = uv.y;\n    float zr = 0.0;\n    float zi = 0.0;\n    \n    int i = 0;\n    while (i < MAX_ITER && zr * zr + zi * zi < 4.0) {\n        float nzr = zr * zr - zi * zi + cr;\n        float nzi = 2.0 * zr * zi + ci;\n        zr = nzr;\n        zi = nzi;\n        i++;\n    }\n    \n    float hue = float(i) / float(MAX_ITER);\n    float value = (i < MAX_ITER) ? 1.0 : 0.0;\n    vec3 c = hsv2rgb(vec3(hue, 1.0, value));\n    \n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}