{"ver":"0.1","info":{"id":"wlGcWz","date":"1610960404","viewed":159,"name":"${\"digital_sea\"}","username":"changwenhan","description":"inspired by Ryoji Ikeda :: data.path (https://vimeo.com/76813693)","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["noise","sea","ambience"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtlSz4","filepath":"https://soundcloud.com/lukeoxendale/ambience","previewfilepath":"https://soundcloud.com/lukeoxendale/ambience","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 p) {\n    p = fract(p * vec2(324.456, 863.789));\n    p += dot(p, p+89.56);\n    return fract(p.x*p.y);\n}\n\n\n// noise function from BigWIngs https://www.shadertoy.com/view/3d23z1\nfloat SmoothNoise(vec2 uv) {\n    vec2 lv = fract(uv);\n    vec2 id = floor(uv);\n    \n    lv = lv*lv*(3.-2.*lv);\n    \n    float bl = rand(id);\n    float br = rand(id+vec2(1,0));\n    float b = mix(bl, br, lv.x);\n    \n    float tl = rand(id+vec2(0,1));\n    float tr = rand(id+vec2(1,1));\n    float t = mix(tl, tr, lv.x);\n    \n    return mix(b, t, lv.y);\n}\n\nfloat SmoothNoise2(vec2 uv) {\n    float c = SmoothNoise(uv*4.);\n    \n    c += SmoothNoise(uv*8.2)*.5;\n    c += SmoothNoise(uv*16.7)*.25;\n    c += SmoothNoise(uv*32.4)*.125;\n    c += SmoothNoise(uv*64.5)*.0625;\n    \n    c /= 2.;\n    \n    return c;\n}\n\n// char function from FabriceNeyret2: https://www.shadertoy.com/view/ltcXzs\nvec4 char(vec2 p, int C) {\n    if (p.x<0.|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n    return textureGrad( iChannel1, p/16. + fract( vec2(C, 15-C/16) / 16. ) , \n                       dFdx(p/16.),dFdy(p/16.) );\n}\n\nfloat block(vec2 uv) {\n    vec2 n_uv = uv;\n\n    float col = 0.;\n    \n    vec2 ceilCount = vec2(100., 100.);\n    \n    uv*=ceilCount;\n    \n    float speed = 20.;\n    \n    uv.x -= iTime * ( rand(vec2(0.234, floor(uv).y)) + .5) * speed;\n    \n    vec2 gv = fract(uv);\n    vec2 id = floor(uv);\n    \n    float border = .1;\n    col += (1. - step(border, gv.y)) + (step(1.-border, gv.y));\n    \n    col += rand(id/ceilCount);\n    \n    vec2 noise_id = floor(n_uv*ceilCount)*vec2(.03,.3)/ceilCount + vec2(iTime*.03, iTime*.01);\n    \n    float threshold = SmoothNoise2(noise_id);\n    \n    col = step(threshold, col);\n    \n    return col;\n}\n\nvec3 wall(vec2 uv) {\n    vec3 pixelColor;\n    \n    float colorOffset = .005;\n    \n    pixelColor.x = block(uv+vec2(colorOffset,0.));\n    pixelColor.y = block(uv+vec2(0.,0.));\n    pixelColor.z = block(uv+vec2(-colorOffset,0.));\n\n    return pixelColor;\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-0.5*iResolution.xy)/iResolution.y;\n    vec2 text_uv = uv;\n    \n    uv*= 3. + iTime*.01;\n    \n    // rotate\n    float radian = 3.1415926 * 0.5;\n    float s = sin(radian);\n    float c = cos(radian);\n    mat2 rotate = mat2(c, -s, s, c);\n    uv *= rotate;\n   \n    \n    vec3 pixelColor;\n    \n    \n    uv.y /= uv.x * 1.;\n    \n    vec3 wallL = wall(vec2(uv.x, uv.y) * (1.-step(0.,uv.x)));\n    vec3 wallR = wall(vec2(-uv.x, uv.y+123.321) * (step(0.,uv.x)));\n \n    pixelColor = wallR * wallL;\n    \n    float farMask = smoothstep(10. , 0., abs(uv.y)) * smoothstep(.05 , .35, abs(uv.x));\n    \n    pixelColor *= farMask;\n    \n    pixelColor += .1;\n    \n    \n    //text: ${\"digital_sea\"}\n    float text; \n    \n    text_uv*=25.;\n    text_uv+=.5;\n    text_uv.x += 3.75;\n   \n    text += char(text_uv,36).x; text_uv.x-=.5;\n    text += char(text_uv,123).x; text_uv.x-=.5;\n    text += char(text_uv,34).x; text_uv.x-=.5;\n    \n    text += char(text_uv,64+32+4).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+9).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+7).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+9).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+20).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+1).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+12).x; text_uv.x-=.5;\n    \n    text += char(text_uv,64+31).x; text_uv.x-=.5;\n    \n    text += char(text_uv,64+32+19).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+5).x; text_uv.x-=.5;\n    text += char(text_uv,64+32+1).x; text_uv.x-=.5;\n    \n    text += char(text_uv,34).x; text_uv.x-=.5;\n    text += char(text_uv,125).x; text_uv.x-=.5;\n    \n    \n    pixelColor += text;\n    \n    \n    \n    // Output to screen\n    fragColor = vec4(pixelColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}