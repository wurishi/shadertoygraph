{"ver":"0.1","info":{"id":"csBGDh","date":"1667560924","viewed":65,"name":"liquid-test","username":"Necromurlok","description":"liquid test","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["liquidtest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    fragColor = vec4(texture(iChannel0, uv).rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n#define SUBSTRACT_AMOUNT 0.01\n\nfloat expandAndSubstractBlit(vec2 fragCoord)\n{\n    vec4 offset = vec4(1.0f, 1.0f, 0.0f, -1.0f);\n    float left = texture(iChannel0, (fragCoord - offset.xz) / iResolution.xy).r;\n    float right = texture(iChannel0, (fragCoord + offset.xz) / iResolution.xy).r;\n    float top = texture(iChannel0, (fragCoord + offset.zy) / iResolution.xy).r;\n    float bottom = texture(iChannel0, (fragCoord - offset.zy) / iResolution.xy).r;\n/*    \n    float topRight = texture(iChannel0, (fragCoord + offset.xy) / iResolution.xy).r;\n    float topLeft = texture(iChannel0, (fragCoord + offset.wy) / iResolution.xy).r;\n    float bottomLeft = texture(iChannel0, (fragCoord + offset.ww) / iResolution.xy).r;\n    float bottomRight = texture(iChannel0, (fragCoord + offset.xw) / iResolution.xy).r;\n*/    \n    float center = texture(iChannel0, fragCoord / iResolution.xy).r;\n    \n    float result = max(center, left);\n    result = max(result, right);\n    result = max(result, top);\n    result = max(result, bottom);\n/*    \n    result = max(result, topRight);\n    result = max(result, topLeft);\n    result = max(result, bottomLeft);\n    result = max(result, bottomRight);    \n*/    \n    result = clamp(result - SUBSTRACT_AMOUNT, 0.0, 1.0);\n    \n    return result;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n\n    mouse.x *= ratio;\n    vec2 newUv = vec2(uv.x * ratio, uv.y);\n    float dist = length(mouse - newUv);\n    fragColor.rgb = vec3(step(dist, 0.05)) * iMouse.z;\n\n    fragColor.rgb = max(fragColor.rgb, vec3(expandAndSubstractBlit(fragCoord)));\n\n}","name":"Buffer A","description":"","type":"buffer"}]}