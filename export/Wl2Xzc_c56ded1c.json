{"ver":"0.1","info":{"id":"Wl2Xzc","date":"1566645038","viewed":100,"name":"Julia Art 2","username":"96logda","description":"My first julia fractal shader with color shifting.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","art","colorshifting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-08-24 - 2019-08-31 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n\n#define saturate(x) clamp(x, 0.0, 1.0)\n\nconst vec2  juliaC = vec2(0.38, 0.25);\nconst float juliaZoom = 0.25;\n\nconst int maxIterations = 255;\n\nvec2 complexZ(const in vec2 z)\n{\n\treturn vec2\n    (\n \t\tz.x * z.x - z.y * z.y,\n \t\tz.x * z.y * 2.0\n\t);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.0 / min(iResolution.x, iResolution.y);\n    \n    vec2 z = uv * juliaZoom;  \n    int count = 0;\n\tfor (; count < maxIterations; ++count) \n    {\n \t\tz = complexZ(z) + juliaC;\n \t\tif (dot(z, z) > 4.0)\n        {\n            break;\n \t\t}\n    }\n    \n    vec2 texUV = vec2(float(count)) / 100.0;   \n    vec3 colorShifting = vec3(saturate(sin(iTime * 0.3)), \n                              saturate(sin(iTime * 0.1)), \n                              saturate(sin(iTime * 0.5))) + 0.5;\n    fragColor.rgb = texture(iChannel0, texUV).rgb * colorShifting * 0.5;\n    fragColor.rgb = pow(fragColor.rgb, vec3(0.4545));\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}