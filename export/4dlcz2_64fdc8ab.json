{"ver":"0.1","info":{"id":"4dlcz2","date":"1488979012","viewed":191,"name":"Jfranmp - Clouds v2","username":"jfranmp","description":"A simple cloud based on thebookofshaders.com","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["cloudsv2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// author: Juan Francisco\n// title: Clouds\n\n#define NUM_OCTAVES 10\n\nfloat random (in vec2 _st) { \n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233))) * \n        43758.5453123);\n}\n\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) + \n            (c - a)* u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2( cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n    //mat2 rot = mat2( 0, 3. * sin(0.5), 0, cos(0.50));\n    \n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(_st);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.5;\n    }\n    \n    return v;\n}\n\nvec3 grayscale(in vec3 _rgb) {\n    vec3 base = vec3(0.2989, 0.587, 0.114);\n    float lum = base.r * _rgb.r + base.g * _rgb.g + base.b * _rgb.b;\n    return vec3(lum);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    \n    vec2 st = fragCoord.xy/ iResolution.xy * 5. + iTime / 25.;\n    vec3 color = vec3(0);\n\n    vec2 q = vec2(0.);\n    q.x = fbm( st + 0.00*iTime);\n    q.y = fbm( st + vec2(1.0));\n    \n    vec2 r = vec2(0.);\n    r.x = fbm( st + 1.0*q + vec2(1.7,9.2)+ 0.15*iTime );\n    r.y = fbm( st + 1.0*q + vec2(8.3,2.8)+ 0.126*iTime);\n\n    float f = fbm( st + fbm(st + fbm(st)));\n\n    color = mix(vec3(0.198,0.629,0.667),\n                vec3(0.666667,0.666667,0.498039),\n                clamp((f*f)*4.0,0.0,1.0));\n\n    color = mix(color,\n                vec3(0,0,0.164706),\n                clamp(length(q),0.0,1.0));\n\n    color = mix(color,\n                vec3(0.666667,1,1),\n                clamp(length(r.x),0.0,1.0));\n    \n    float x = .5 + fbm(st);\n    float nt = noise(vec2(iTime * .013, iTime * .013));\n    float v1 = pow(length(r), 2.5 + 1.5 * (1. - nt));\n    float v2 = 1.;\n    float alpha = mix(v2, v1, nt);\n    \n    vec3 colorv = 1. * color + f*f*f*color*color;\n    vec3 tint = vec3(0.682,0.933,1.000);\n    \n    // tint image\n    vec3 c1 = vec3(0.051,0.739,1.000);\n    vec3 c2 = vec3(1.000,0.080,0.089);\n    vec3 c3 = vec3(1.000,0.985,0.067);\n    \n    vec3 total = vec3(.0);\n    total = mix(c1, c2, noise(st));\n    total = mix(total, c3, noise(st * .75));\n    \n    fragColor = vec4(total * grayscale(colorv),alpha);\n}","name":"Image","description":"","type":"image"}]}