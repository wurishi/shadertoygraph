{"ver":"0.1","info":{"id":"4dXfWf","date":"1499893872","viewed":102,"name":"Effect: Sine plasma","username":"Blueberry","description":"Try out effects","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["prototyping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint sintab(int i) {\n\treturn int(128.0 + 125.0 * sin(float(i * 2 + 1) * 3.14159265358979 / 256.0));\n}\n\nint dither(int xp, int yp, int v) {\n\treturn (v & 3) >=\n        ((xp < 2 && (yp & 1) == 0) ? 1 :\n         (xp >= 2 && (yp & 1) == 1) ? 2 :\n         (xp >= 2 && (yp & 1) == 0) ? 3 : 4) ? 1 : 0;\n}\n\n//int colors[4] = int[4](0, 4, 1, 5);\n//int colors[4] = int[4](5, 13, 10, 9);\nint colors[4] = int[4](7, 10, 2, 12);\n\nint image(ivec2 p) {\n\tint x = p.x / 4;\n    int y = p.y / 4;\n\tint xp = p.x - x * 4;\n\tint yp = p.y - y * 4;\n\n    int t = int(iTime * 50.0);\n\tint s = 80 + sintab(t);\n\n    int xs = (sintab(((x-40)*s*8 + t*456) / 256) + sintab(((x-40)*s*13 - t*321) / 256)) / 16;\n    int ys = (sintab(((y-25)*s*9 + t*567) / 256) + sintab(((y-25)*s*13 - t*123) / 256)) / 16;\n\n    int v = xs + ys;\n    \n    return colors[(v / 4 + dither(xp, yp, v)) & 3];\n}\n\nint border(ivec2 p) {\n\treturn 0;\n}\n\nint effect(ivec2 p) {\n    if (p.x >= 0 && p.x < 320 && p.y >= 0 && p.y < 200) {\n        return image(p);\n    } else {\n        return border(p);\n    }\n}\n\n// Colodore PAL Palette\nivec3 palette_rgb[16] = ivec3[16](\n\tivec3(0x00, 0x00, 0x00), //  0: Black\n\tivec3(0xFF, 0xFF, 0xFF), //  1: White\n\tivec3(0x96, 0x28, 0x2e), //  2: Red\n\tivec3(0x5b, 0xd6, 0xce), //  3: Cyan\n\tivec3(0x9f, 0x2d, 0xad), //  4: Purple\n\tivec3(0x41, 0xb9, 0x36), //  5: Green\n\tivec3(0x27, 0x24, 0xc4), //  6: Blue\n\tivec3(0xef, 0xf3, 0x47), //  7: Yellow\n\tivec3(0x9f, 0x48, 0x15), //  8: Orange\n\tivec3(0x5e, 0x35, 0x00), //  9: Brown\n\tivec3(0xda, 0x5f, 0x66), // 10: Light Red\n\tivec3(0x47, 0x47, 0x47), // 11: Dark Gray\n\tivec3(0x78, 0x78, 0x78), // 12: Medium Gray\n\tivec3(0x91, 0xff, 0x84), // 13: Light Green\n\tivec3(0x68, 0x64, 0xff), // 14: Light Blue\n\tivec3(0xae, 0xae, 0xae)  // 15: Light Gray\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Compute pixel coordinate\n    ivec2 ires = ivec2(iResolution);\n    int scale = ires.y / 225;\n    ivec2 border = (ires / scale - ivec2(320,200)) / 2;\n\tvec2 coord = vec2(fragCoord.x, iResolution.y - fragCoord.y);\n    ivec2 p = ivec2(coord / float(scale)) - border;\n\n    // Run effect and select color\n    vec3 c = vec3(palette_rgb[effect(p) & 15]) / 255.0;\n\n    // Adjust saturation with mouse\n    float g = dot(c, vec3(0.3,0.6,0.1));\n\tc = mix(c, vec3(g), iMouse.x/iResolution.x);\n\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}