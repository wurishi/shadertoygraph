{"ver":"0.1","info":{"id":"3ltGRX","date":"1577054025","viewed":62,"name":"SimpleRaycast","username":"Omega","description":"3D-Renderer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPLEN 0.02\n\nbool map(vec3 pos)\n{\t\n    return abs(pos.x) + abs(pos.y) + abs(pos.z) < 1.5 && ! (length(pos) < 1.);\n    //return length(pos) < 1.;\n    //return abs(pos.x) < .5 && abs(pos.y) < .5 && abs(pos.z) < .5;\n}\n\n\nfloat light(vec3 pos)\n{\t\n    vec3 offset = vec3(0.01, 0.02, 0.);\n    if (map(pos + offset * 0.5))\n    {\n        return 0.5;\n    }\n    else\n    {\n        return 1.0;\n    }\n}\n\n\nvoid alight(vec3 pos)\n{\t\n    vec3 o1 = vec3(0.01,0.,0.);\n    vec3 o2 = vec3(0.,0.01,0.);\n    vec3 o3 = vec3(0.,0.,0.01);\n}\nfloat raytrace(vec3 ro, vec3 rd)\n{\t\n    for (float i = 0.; i < 512.; i++)\n    {\n        vec3 pos = ro + rd * i * STEPLEN;\n\t\tif (map(pos))\n        {\n            return light(pos);\n        }\n    }\n    return 0.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n\tuv.x *= iResolution.x/iResolution.y;\n\t\n\tvec3 ro = vec3(iMouse.x/iResolution.x, iMouse.y/iResolution.y, -6.);    \n    vec3 rd = normalize(vec3(uv, 1));\n\n    float col = raytrace(ro, rd);\n\n    // Output to screen\n    fragColor = vec4(col,0.,uv.y,1.0);\n}","name":"Image","description":"","type":"image"}]}