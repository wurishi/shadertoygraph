{"ver":"0.1","info":{"id":"WdsGRl","date":"1547196761","viewed":872,"name":"simple 2d animation","username":"naxius","description":"simple animation attempt.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["beginner","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord - .5*iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.);\n    float a = atan(uv.y,uv.x);\n    float r = 0.5*length(uv);\n    float counter = 100.;\n    a = 4.*a+20.*r+50.*cos(r)*cos(.1*t)+abs(a*r);\n    float f = 0.02*abs(cos(a))/(r*r);\n    \n    \n    vec2 v = vec2(0.);\n    for(float i=0.;i<counter;i++){\n    \tv = mat2(v,-v.y,v.x) * v + vec2(2.*f+cos(0.5*t*(exp(-0.2* r))),-cos(t*r*r)*cos(0.5*t));\n        if(length(v)>2.){\n        \tcounter = i;\n            break;\n        }  \n    }\n\n    col=vec3(min(0.9,1.2*exp(-pow(f,0.45)*counter)));\n\n\tfragColor =    min(0.9,1.2*exp(-pow(f,0.45)*counter) )\n                * ( 0.7 + 0.3* cos(10.*r - 2.*t -vec4(.7,1.4,2.1,0) ) );}","name":"Image","description":"","type":"image"}]}