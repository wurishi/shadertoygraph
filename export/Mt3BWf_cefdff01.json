{"ver":"0.1","info":{"id":"Mt3BWf","date":"1541279253","viewed":429,"name":"Phasing Circles","username":"stellartux","description":"Phasing colour patterns of overlapping circles.","likes":1,"published":3,"flags":16,"usePreview":0,"tags":["circles","colourful"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*  \nLoosely based off of this video \nhttps://www.youtube.com/watch?v=hkCakDslpXM\n\nSPACE to toggle between colour/black&white\nM to toggle mirroring the circles\n#define as MAGICNUM as any nonzero float for specific images\n*/\n\n//#define MAGICNUM 360./32.\n#ifndef MAGICNUM\n#define MAGICNUM 4000./(iTime + 45.)\n#endif\n\nfloat circle(in vec2 _st, in vec2 _pos, in float _radius){\n  vec2 _c = _st - _pos;\n\treturn step(dot(_c,_c), _radius);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \tvec2 st = 2. * fragCoord.xy / iResolution.xy - 1.;\n  \tst.x *= iResolution.x/iResolution.y;\n\t\n    float color = 0.;\n    \n    for (float i = 0.; i < 360.; i += MAGICNUM) {\n   \t\tcolor += circle(st, 0.5 * vec2(sin(i), cos(i)), 0.25);\n        if (texelFetch( iChannel0, ivec2(77,2),0 ).x == 0.) {\n          color += circle(st, 0.5 * vec2(sin(-i), cos(-i)), 0.25);\n        }\n    }\n    if (texelFetch( iChannel0, ivec2(32,2),0 ).x == 0.) {\n    \tcolor /= MAGICNUM / 4.;\n    \tfragColor = vec4(hsv2rgb(vec3(color, 1., .8)),1.0);\n    } else {\n     \tcolor = mod(color, 2.);\n        fragColor = vec4(vec3(color), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}