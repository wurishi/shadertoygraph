{"ver":"0.1","info":{"id":"Ml3BWM","date":"1539789172","viewed":204,"name":"Algorithmic Drawing","username":"danamuise","description":"Function based shapes based on the Big Book of Shaders\nChapter: Algrorithmic Drawing / Shaping functions\nhttp://www.thebookofshaders.com","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["funtioncurvesbigbookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nThis is work from The Book of Shaders\nby Patricio Gonzalez Vivo and Jen Lowe\nhttps://thebookofshaders.com/\nTutorials from the chapter about basic algorithmic drawing\n*/\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\n\nfloat plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n    //normalize current screen dimensions\n    vec2 st = fragCoord.xy/iResolution.xy;\n\n    //float y = pow(st.x,2.0);\n\t\n\t//float y = step(0.5, st.x);\n    \n\t//float y = smoothstep(0.0, 1.0, st.x);\n\n    float y = smoothstep(0.0,0.5,st.x) - smoothstep(0.5,1.0,st.x);\n    \n    \n    vec3 color = vec3(y);\n\t\n    //plot a green line reflecting the bg gradient\n    float pct = plot(st,y);\n    color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}