{"ver":"0.1","info":{"id":"ctlSRn","date":"1674193665","viewed":80,"name":"Taiji symbol","username":"hucancode","description":"A taiji symbol. See how did I made this https://hucanco.de/blog/post/draw-taiji-with-glsl","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["taiji"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BIG_CIRCLE_RADIUS 0.35\n#define SMALL_CIRCLE_RADIUS 0.1\n#define STROKE_WIDTH 0.02\n#define SMOOTH_PIXEL 1.5\n#define SMOOTH(t, x) smoothstep(t - EPSILON*0.5, t + EPSILON*0.5, x)\n#define SMOOTHR(t, x) smoothstep(t + EPSILON*0.5, t - EPSILON*0.5, x)\n#define WHITE_CIRCLE(r, o) SMOOTHR((r)*0.5, length(uv - o))\n#define BLACK_CIRCLE(r, o) SMOOTH((r)*0.5, length(uv - o))\n\nmat2 rotateMat(float angle) {\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float EPSILON = SMOOTH_PIXEL/iResolution.y;\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= rotateMat(-iTime);\n    float v = 0.0;\n    vec2 center = vec2(0.0);\n    vec2 centerTop = center + vec2(0.0, BIG_CIRCLE_RADIUS/2.0);\n    vec2 centerBottom = center + vec2(0.0, -BIG_CIRCLE_RADIUS/2.0);\n    \n    v += WHITE_CIRCLE(BIG_CIRCLE_RADIUS*2.0, center) * SMOOTH(0.0, uv.x);\n    v += WHITE_CIRCLE(BIG_CIRCLE_RADIUS, centerTop);\n    v *= BLACK_CIRCLE(BIG_CIRCLE_RADIUS, centerBottom);\n    v += WHITE_CIRCLE(SMALL_CIRCLE_RADIUS, centerBottom);\n    v *= BLACK_CIRCLE(SMALL_CIRCLE_RADIUS, centerTop);\n    v += BLACK_CIRCLE(BIG_CIRCLE_RADIUS*2.0 + STROKE_WIDTH, center);\n    float alpha = WHITE_CIRCLE(BIG_CIRCLE_RADIUS*2.0, center);\n    fragColor = vec4(v, v, v, alpha);\n}","name":"Image","description":"","type":"image"}]}