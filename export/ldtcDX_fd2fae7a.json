{"ver":"0.1","info":{"id":"ldtcDX","date":"1520453129","viewed":249,"name":"Fire - Noise + distortion","username":"satbir121","description":"Fire generated from noise and distortion pattern.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Following the tutorial by SketchpunkLabs from: https://www.youtube.com/watch?v=uT5w3Bwhk4s\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_anim = uv;\n    float grad = mix(2.0, 0.0, uv.y + 0.45);\n    \n    uv_anim.y -= fract(iTime * 0.3);\n    uv_anim.x -= fract(iTime * 0.05);\n    \n    vec4 d = texture(iChannel1, uv / 2.1);\n    vec4 d1 = d * 0.2;\n    vec4 d2 = (d * 2.0 - 1.) * 0.2;\n    vec4 n = texture(iChannel0, uv_anim + d1.rg);\n    n.r = smoothstep(0.3, 0.7, n.r);\n    \n    n += grad;\n    \n    fragColor = getColorRamp (clamp (n.r, 0., 1.), 0.05);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// https://iquilezles.org/articles/palettes\nvec3 palette(float t, vec3 a, vec3 b, vec3 c, vec3 d){ return a + b*cos( 6.28318*(c*t+d) ); }\n\nconst float ColorAnchor[3]\t= float[]( 0.0, 0.5, 0.75 );\nconst vec4 ColorRamp[3]\t\t= vec4[]( \n    vec4(0.0,0.0,0.0,0.0),\n    vec4(219./255.,56./255.,201./255.,1.0),\n    vec4(160./255.,246./255.,180./255.,1.0)\n);\n\nvec4 getColorRamp(float v, float feather){\n    for(int i=0; i < 2; i++){\n        if(v >= ColorAnchor[i] && v < ColorAnchor[i+1])\n            return mix( ColorRamp[i], ColorRamp[i+1], smoothstep(ColorAnchor[i+1]-feather,ColorAnchor[i+1],v) );\n    }\n    return ColorRamp[2];\n}\n","name":"Common","description":"","type":"common"}]}