{"ver":"0.1","info":{"id":"XtKBRK","date":"1543171694","viewed":224,"name":"C= Logo","username":"soundis","description":"C= logo with proportions as in the official 1965 schema: \n\nhttps://scontent-lga3-1.cdninstagram.com/vp/d50ef014e2a0fe052b0fd989c78d7074/5CA9057E/t51.2885-15/e35/41647028_259698814886211_6218355486096568393_n.jpg","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["logo","c64","commodore"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float lineThickness=1.0;\nconst vec3 lineColor=vec3(0.1);\nconst vec3 logoColor=vec3(0.4);\nconst vec3 backgroundColor=vec3(0.8, 0.8, 0.78);\n\nconst float A=2.0;\nconst float B=A*0.034;\nconst float C=A*0.166;\nconst float D=A*0.30;\nconst float F=A*0.52;\nconst float G=A*0.53; // is G intentionally different from F?\nconst float H=A*0.636;\nconst float I=B+C+C+D+D; // sums up A*0.966 and not A*0.97 as in the schema!\nconst float E=I-2.0*D; // sums up to 0.366 and not 0.364 as in the schema!\n\nfloat sdLine(vec2 l0, vec2 l1, vec2 p)\n{\n    vec2 n=normalize((l1-l0).yx*vec2(-1.0, 1.0));\n\n    return dot(n, p-l0);\n}\n\n// (approximate)\nfloat sdEllipse(vec2 e, vec2 ab, vec2 p)\n{\n    vec2 np=(p-e)/ab;\n    float phi=atan(np.y, np.x);\n\n    vec2 p0=e+ab*vec2(cos(phi), sin(phi));\n    vec2 p1=p;\n\n    float d0=distance(p0, e);\n    float d1=distance(p1, e);\n\n    return d1-d0;\n}\n\nvec3 subColor(vec2 p)\n{\n    float x, y;\n\n    y=1.0-D;\n    float hor0=sdLine(vec2(-1.0, y), vec2(1.0, y), p);\n\n    y=1.0-C-D;\n    float hor1=sdLine(vec2(-1.0, y), vec2(1.0, y), p);\n\n    y=1.0-I+C+D;\n    float hor2=sdLine(vec2(-1.0, y), vec2(1.0, y), p);\n\n    y=1.0-I+D;\n    float hor3=sdLine(vec2(-1.0, y), vec2(1.0, y), p);\n\n    x=-1.0+A-E;\n    float ver0=sdLine(vec2(x, -1.0), vec2(x, 1.0), p);\n\n    x=-1.0+A;\n    float ver1=sdLine(vec2(x, -1.0), vec2(x, 1.0), p);\n\n    float el0=sdEllipse(vec2(-1.0+0.5*I, 1.0-0.5*I), 0.5*vec2(I, I), p);\n    float el1=sdEllipse(vec2(-1.0+0.5*I, 1.0-0.5*I), 0.5*vec2(G, F), p);\n\n    float y0=1.0-D;\n    float y1=1.0-0.5*I;\n    float y2=1.0-I+D;\n    float x0=-1.0+A;\n    float x1=x0-(y0-y1);\n\n    float diag0=sdLine(vec2(x0, y0), vec2(x1, y1), p);\n    float diag1=sdLine(vec2(x0, y2), vec2(x1, y1), p);\n\n    float t=lineThickness/iResolution.y;\n\n    if(abs(hor0)<t) return lineColor;\n    if(abs(hor1)<t) return lineColor;\n    if(abs(hor2)<t) return lineColor;\n    if(abs(hor3)<t) return lineColor;\n    if(abs(ver0)<t) return lineColor;\n    if(abs(ver1)<t) return lineColor;\n    if(abs(el0)<t) return lineColor;\n    if(abs(el1)<t) return lineColor;\n    if(abs(diag0)<t) return lineColor;\n    if(abs(diag1)<t) return lineColor;\n\n    if(ver0<0.0 && hor0<0.0 && hor1>=0.0 && diag0<0.0) return logoColor;\n    if(ver0<0.0 && hor2<0.0 && hor3>=0.0 && diag1>=0.0) return logoColor;\n    if(el0<0.0 && el1>=0.0 && ver0>0.0) return logoColor;\n\n    return backgroundColor;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 vPosition=vec2(-1.0, -1.0)+2.0*fragCoord/iResolution.xy;\n\tvPosition.x*=iResolution.x/iResolution.y;\n    \n\tconst int n=4;\n\n    vec3 c=vec3(0.0);\n\n    for(int i=0; i<n; i++)\n    {\n        for(int j=0; j<n; j++)\n        {\n            vec2 p=vPosition+2.0*vec2(j, i)/(float(n)*iResolution.yy);\n            c+=subColor(p)/float(n*n);\n        }\n    }\n    \n    fragColor=vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}