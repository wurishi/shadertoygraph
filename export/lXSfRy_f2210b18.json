{"ver":"0.1","info":{"id":"lXSfRy","date":"1729629744","viewed":296,"name":"cell-faces truchet","username":"FabriceNeyret2","description":"truchet drawn on the faces on the grid cells\n\nmouse controls camera","likes":35,"published":3,"flags":0,"usePreview":1,"tags":["short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a+vec4(0,33,11,0)))                       // rotation\n//#define C(s) length(vec2(q.x,length(q.yz s .5)-.5))             // torus (offseted in corner)\n\nvoid mainImage( out vec4 O, vec2 u ) {\n\n    vec3 R = iResolution,\n         P = 6./R, q, a,I,                                        // P: camera pos, then sample along ray\n         D = normalize(vec3( u , -R.y ) - .5*R ),                 // D: ray direction\n         M = iMouse.z > 0. ? iMouse.xyz/R -.5 :                   // comment for no mouse cam\n                 vec3( .15,.07,0) * cos(.3*iTime + vec3(0,11,0));          \n    float t=1., i, d,d2, l, s=t;\n    int c;\n    for ( O=vec4(1.1); O.x > 0. && t > .01; O-=.01 )              // --- march scene\n        q = P, \n        q.yz *= rot(-6.*M.y),                                     // rotations\n        q.xz *= rot(-6.*M.x-1.57),\n        I = ceil(q), q = fract(q)-.5, a = abs(q),\n        c = a.y > max(a.x,a.z) ? q=q.yzx, I=I.yzx, 1              // closest face coordinates\n          : a.z > max(a.x,a.y) ? q=q.zxy, I=I.zxy, 2 : 0,\n        q.x > .0 ? I.x++ : t, q.x -= .5*sign(q.x),                // rear or front side in cell\n        s = mod(I.y+I.z,2.) - .5,                                 // checkered filling\n        fract(1e4*sin(dot(I,R-71.))) > .5 ? q.y = -q.y : t,       // random truchet swap\n     // s > 0. ? t = min( C(+), C(-) ) - .05  : t,                // draw truchet\n        q.y+q.z < 0. ? q.yz = -q.yz : u,                          // truchet arc side\n        s > 0. ? t =  length(vec2(q.x,length(q.yz-.5)-.5))  - .05  : t, // draw truchet\n        a = abs(q), a.y > a.z ? a = a.xzy : a, a.z-=.5,\n        t = min(t, length(a) -.06 ),                              // connection sphere\n    //  a = abs(q), t = min(t, max( max(a.x,max(a.y,a.z)),min(length(q.xy),min(length(q.yz),length(q.xz)))) -.05 ),\n        P += .5*t*D;                                              // step along the ray\n    \n    O[c] *= .9;                                                   // color scheme\n    O *= texture(iChannel0, vec2(atan(q.x,length(q.yz-=.5)-.5),10.*atan(q.y,q.z))/6.28); // texturing\n // O *= O*O*2.;\n}\n","name":"Image","description":"","type":"image"}]}