{"ver":"0.1","info":{"id":"DtXSzN","date":"1674346169","viewed":132,"name":"basic sun","username":"OscarSaharoy","description":"Don't look at the sun except if its a shader","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["simple","sun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159\n\nfloat sunRadius = 0.035;\n\n\nfloat saturate( float x ) {\n\n    return min( 1., max( 0., x ) );\n}\nvec3 saturate( vec3 x ) {\n\n    return min( vec3(1), max( vec3(0), x ) );\n}\n\nfloat hash( float x ) {\n\n    return fract( sin(\n        sin( x ) * 6251.8367\n    ) * 8262.83627 );\n}\n\n\nvec3 disc( float r ) {\n    float pixelWidth =\n        2. / min( iResolution.x, iResolution.y );\n    float a = -1. / pixelWidth;\n    float b = 1. + sunRadius / pixelWidth;\n    float insideness = a*r + b;\n\n    return smoothstep( 0., 1., insideness )\n        * vec3(1);\n}\n\nvec3 glow( float r ) {\n\n    float breathe = sin(iTime + sin(iTime*PI) ) * .15;\n\n    float saturatedRadius =\n        sunRadius * (1. + breathe);\n\n    float glowAmount =\n        exp( .15*(saturatedRadius - r) / sunRadius );\n\n    return glowAmount * vec3(1,.9,.3);\n\n}\n\nvec3 spikes( float r, float t ) {\n\n    float spikeAmount = 0.;\n\n    for( int i = 0; i < 2; ++i ) {\n        float o = hash(float(i+1));\n        float f = sqrt(hash(o));\n        spikeAmount +=\n            saturate( f * exp(\n                (sin( t*6. + o*PI*67. ) - 1.)\n                    * r/sunRadius\n            ) * (1. - r/sunRadius/20.) ) * .2;\n    }\n\n    return spikeAmount * vec3(1);\n}\n\n\nvoid mainImage(\n        out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 p = fragCoord.xy/iResolution.xy - .5;\n    p.x *= max( 1., iResolution.x/iResolution.y );\n    p.y *= max( 1., iResolution.y/iResolution.x );\n\n    float r = length(p);\n    float t = atan(p.y, p.x);\n\n    vec3 light = vec3(0);\n\n    light += vec3( .1, .3, 1 ) * .64;\n    light += disc( r );\n    light += glow( r );\n    light += spikes( r, t );\n\n    light = pow(light , vec3(1. / 2.2));\n\n    fragColor = vec4( light, 1. );\n}","name":"Image","description":"","type":"image"}]}