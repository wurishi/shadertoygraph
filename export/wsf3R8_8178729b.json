{"ver":"0.1","info":{"id":"wsf3R8","date":"1544871447","viewed":293,"name":"dots_wave","username":"CynicRus","description":"just experements","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["wave","dots","silk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 cam_pos;\nmat3 cam_rot;\n\nvec3 transform(vec3 p)\n{\n   return cam_rot * (p - cam_pos);\n}\n\nvec2 project(vec3 p)\n{\n   return p.xy / p.z;\n}\n\nfloat gauss(float x, float a)\n{\n   return sqrt(a / 3.14159265) * exp(-a * x * x);\n}\n\nfloat blob(vec3 o, vec2 p)\n{\n   return gauss(distance(project(o), p), 50000.0 / abs(o.z - 6.01)) * 0.01;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 p = (fragCoord -.5* iResolution.xy ) / iResolution.y;\n   p.x *= iResolution.x / iResolution.y;\n\t\n   cam_pos = vec3(0.0, 0.0, -6.0);\n\n   vec3 cam_target = vec3(0.0, 1.0, 12.0);\n\n   cam_rot[2] = normalize(cam_target - cam_pos) ;\n\n   cam_rot[0] = cross(cam_rot[2], vec3(0.0, 1.0, 1.0));\n   cam_rot[1] = cross(cam_rot[2], cam_rot[0]);\n\n\n   fragColor.rgb = vec3(0.0);\n\n   for(int i = 0; i < 30; ++i)\n   {\n      for(int j = 0; j < 30; ++j)\n      {\n         float u = (float(i) / 30.0 - 0.5) * 10.0,\n               v = (float(j) / 30.0 - 0.5) * 10.0;\n\n         float h = 1.0 + cos(u - iTime) * sin(v + iTime * 0.8) * 0.2;\n\n         vec3 g = transform(vec3(u + cos(v) * 0.5, h, v + sin(u) * 0.5));\n\n         if(g.z > 0.0)\n         {\n            fragColor.rgb += blob(g, p.xy) * (2.0 + sin(v * 30.0 + iTime)) * (2.0 + cos(u * 30.0)) * 0.25;\n         }\n      }\n   }\n\n\n   fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}