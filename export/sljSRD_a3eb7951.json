{"ver":"0.1","info":{"id":"sljSRD","date":"1627240622","viewed":79,"name":"quantum-level infinite zoom","username":"Epromee","description":"Just a little bit of lmao out there, I couldn't make what I wanted but here is what I've got instead.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["veryprecisezoomlol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.1415926538\n\n\nfloat gauss(float x) {\n    return exp(- x * x);\n}\n\nvec2 tranzoom(vec2 uv, float power) {\n    \n    float dest = uv.x * uv.x + uv.y * uv.y;\n    \n    uv.x /= dest;\n    uv.y /= dest;\n    \n    // \n    float selector = gauss(power * dest);\n    \n    \n    dest = dest * (1. - selector) + selector * (dest * 1000.);\n    \n    uv.x *= dest;\n    uv.y *= dest;\n\n    return uv;\n\n}\n\nvec2 tzfrac(vec2 tz) {\n\n    tz = tranzoom(tz, 10000000.);\n\n    for (int i = 0; i < 20; ++i) {\n        tz = tranzoom(tz, 500000.);\n    }\n\n    tz = tranzoom(tz, 10000000.);\n\n    return tz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= vec2(0.5, 0.5);\n    \n    float zoom = 1.0 * (0.5 + 0.5 * cos(iTime * 0.05));\n    \n    zoom = pow(zoom, 4.);\n    \n    uv *= zoom;\n    \n    uv = tzfrac(uv);\n    \n    //uv = uv * zoom;\n    uv += vec2(0.5, 0.5);\n    \n    vec4 colorPre = texture(iChannel0, uv);\n    \n    fragColor = colorPre;\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}