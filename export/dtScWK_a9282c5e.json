{"ver":"0.1","info":{"id":"dtScWK","date":"1692310330","viewed":11,"name":"Elipse movil","username":"AlbertoOlaria1","description":"Elipse que se desplaza de esquina inferior izquierda a esquina superior derecha","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["elipsemovil"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  Título :  Elipses móviles\n//   \n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n     vec2 uv = fragCoord/iResolution.xy ;\n    \n    // Normalized pixel coordinates (from -1.0 to 1.0)\n    //vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y ;\n  \n  \n     \n    // Distancias respecto a la esquina inferior izquierda , elipse verde\n    float l = 0.8*length(uv);        // Color del fondo pantalla\n    float d = length(uv );\n    float k =  0.6*sin(iTime/5.) ;   // posición de las líneas \n    float de = abs(d - k) ;          // Con normalized pixel coordinates (from 0 to 1) y\n                                     // utilizando el valor absoluto se obtienen 2 elipses \n                                 \n     \n     // Distancias respecto al centro de la pantalla , elipse azul\n      float ddd = length(uv-1.0);        \n      float dist = abs(ddd - k) ; \n     \n         \n     // Distancias respecto al centro , elipse roja\n     float kk = 0.4*cos(3.1415926/2. +iTime/5.) ;   // desfaso el coseno para que coincida el final\n     float dd = length(uv-0.5);                     // una elipse con el inicio de la otra  \n     float dis = abs(dd - kk) ; \n     \n     \n     \n     \n     \n    //---------------------------------------------------------------------------\n    // Output to screen\n    // --------------------------------------------------------------------------\n    \n    // EJES :  Normalized pixel coordinates (from 0 to 1) el origen está en la esquina\n    //         inferior izquierda ,pero quiero trazar unos ejes en el centro dela pantalla\n   \n    float g = 0.003 ;    // grueso de las líneas de eje\n      \n    if  ( abs(uv.x -0.5)< g/2. ||  abs(uv.y -0.5)< g/2. )   // Solo utilizar para Normalized pixel \n          fragColor = vec4(0.0 , 0.0 ,0.0 , 1.0);           //  coordinates (from 0 to 1)\n         \n      \n     // ELIPSES \n    else\n    {   \n      if (de > 0.1 && de < 0.103)\n           fragColor = vec4(0. , 1. , 0. ,1.0);       // elipse verde  esquina inferior izquierda \n         \n      else if (dist > 0.1 && dist < 0.103)\n             fragColor = vec4(0. , 1.0 , 0. ,1.0);       // elipse verde esquina superior derecha \n           \n      else if (dis > 0.1 && dis < 0.103)      \n         fragColor = vec4(1. , 0. , 0. ,1.0);         //  elipse roja\n      \n      else \n        fragColor = vec4(l , l , l ,1.0);             //  fondo pantalla\n    }\n        \n}\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}