{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"precision highp float;\n\nvec2 uv,C;\nvec2 Z, dZ;\nvec2 sqr_Z;\nfloat sqr_norm_Z, sqr_norm_dZ;\nint iter_count;\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat time = iTime;\n\tfloat zoo = 1.3;// * (0.99 * (sin(time/10.0))/2.);\n\tuv = (-1.0 + 2.0*(fragCoord.xy / iResolution.xy))*zoo;\n\tZ = uv;\n\tint ic;\n\tdZ = vec2(0., 0.);\n\tC = vec2((iMouse.x/iResolution.x) + 0.5*sin(time/100.0),\n\t\t\t (iMouse.y/iResolution.y) - 0.5*sin(time/100.0));\n\tfor(int iter_count = 0; iter_count < 32; ++iter_count) {\n\t  sqr_Z = vec2(Z.x * Z.x, Z.y * Z.y);\n\t  if (dot(sqr_Z,sqr_Z) < 8.)\n\t  {\n\t\t  ic+=1;\n\t\t  dZ = vec2(2.0 * (Z.x * dZ.y - Z.x * dZ.y) + 1.0,\n\t\t\t\t\t2.0 * (Z.y * dZ.x + Z.y * dZ.x));\n\t\t  Z = vec2(sqr_Z.x - sqr_Z.y,\n\t\t\t\t   2.0 * Z.x * Z.y) + C;\n\t  }\n    }\n\tsqr_norm_Z = Z.x* Z.x + Z.y*Z.y;\n\tsqr_norm_dZ = dZ.x * dZ.x + dZ.y * dZ.y;\n\tvec4 color0 = vec4(0., 0., 0., 1.0);\n\tvec4 color1 = vec4(0.5+0.5*cos(float(ic/32) * (1./(uv.x*uv.y))),\n\t\t\t\t\t   0.5+0.5*cos(sqr_norm_Z),\n\t\t\t\t\t   0.5+0.5*cos(sqr_norm_dZ), 1.0);\n \n    float co = 0.5 + 0.5*sin((sqr_norm_dZ/sqr_norm_Z));\n    fragColor = mix(color0,color1,co);\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdX3R7","date":"1365683270","viewed":169,"name":"julia explorer","username":"foreigner","description":"move your mouse over the screen and have some fun or wait for the show to run by itself.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""}}