{"ver":"0.1","info":{"id":"msycWV","date":"1696611274","viewed":19,"name":"Color palette rotation","username":"snowderg","description":"Color palette rotation like the old VGA plasma demos","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["plasma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COLOR1 vec3(1.0, 0.0, 1.0)\n#define COLOR2 vec3(0.0, 1.0, 1.0)\n#define SPEED 0.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float noise = texture(iChannel0, uv).r;\n    float value = smoothstep(0.45, 0.55, fract(noise + iTime * SPEED));\n    vec3 col = mix(COLOR1, COLOR2, value);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}