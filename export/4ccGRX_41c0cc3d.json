{"ver":"0.1","info":{"id":"4ccGRX","date":"1711924294","viewed":53,"name":"Figures 1.1","username":"Vladdosattack","description":"First exercise ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["balltrianglesquare"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 BGColor = vec3(0.0, 0.0, 0.0);\nconst int n=2;\n\nvec3 setBG(vec2 uv) {\n \n    vec3 BGColor=0.5+0.9*sin(-iTime+(uv.x*uv.x)+(uv.y*uv.y)+vec3(8,1,3))\n    *cos(iTime+(uv.y*uv.x)+(uv.y*uv.y)+vec3(5,1,6))\n    +0.5*cos(iTime+(uv.y*uv.x)+(uv.y*uv.y)+vec3(1,2,3))\n    *cos(iTime+(uv.y*uv.x)\n    +(uv.y*uv.y)+vec3(13,5,8))*cos(iTime+(uv.y*uv.x)\n    +(uv.y*uv.y)+vec3(1,2,1))+0.5*cos(iTime+(uv.y*uv.x)+(uv.y*uv.y)+vec3(1,2,3));\n    return BGColor;\n}\n\nint Triangle(in vec2 fragCoord, in vec2 centerPosition, in float sideLength)\n{\n    if (fragCoord.y < centerPosition.y - sideLength) return 0;   \n    if (fragCoord.y + centerPosition.y * 2.0 > (1.73 * fragCoord.x + sideLength)) return 0; \n    if (fragCoord.y  + centerPosition.y * 2.0 > (-1.73 * fragCoord.x) + centerPosition.x * 2.0 * 1.73 + sideLength) return 0;\n    return 1;\n}\n\n\nfloat Circle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n\n  float d = length(vec2(x, y)) - r;\n  return d;\n}\n\nfloat Square(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n  return max(abs(x), abs(y)) - size;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n  vec2 uv = fragCoord/iResolution.xy; // <0,1>\n  setBG(uv);\n  fragColor = vec4(BGColor, 1.0);\n  uv -= 0.5;\n  uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n  vec3 col;\n  vec2 offset  = vec2(sin(iTime*2.)*0.2, cos(iTime*2.)*0.2);\n  vec2 offset1 = vec2(0., 0.);\n  if (Triangle(fragCoord, vec2(iResolution.xy/2.0), 60.0 + (30.0 * sin(iTime * 2.0)))==1) \n  col = vec3(1.,0.5+0.5*sin(iTime),sin(iTime));\n  else if (Circle(uv, .1, offset)<0.) col=0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4));\n  else if (Square(uv, 0.25, offset1) <0.) col = vec3(0.8,1.,0.2);\n  else if (Square(uv, 0.26, offset1) <0.) col = vec3(0.,0.,0.);\n  else col=setBG(uv);\n  fragColor = vec4(col,1.0);\n \n}","name":"Image","description":"","type":"image"}]}