{"ver":"0.1","info":{"id":"wdK3W1","date":"1570123217","viewed":318,"name":"ShaderTober - Bait","username":"Flopine","description":"A small doodle with inktober's theme \"bait\"... ;D ","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","inktober","bait"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, Coyhot, Alkama and YX for teaching me\n// Thanks LJ for giving me the love of shadercoding :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and others to sprout :)  https://twitter.com/CookieDemoparty\n\n#define PI 3.141592\n#define nt iTime*4.\n\n\n// taken from YX here : https://www.shadertoy.com/view/tdlXW4\n// rough shadertoy approximation of the bonzomatic noise texture\nvec4 texNoise(vec2 uv)\n{\n    float f = 0.;\n    f += texture(iChannel0, uv*.125).r*.5;\n    f += texture(iChannel0, uv*.25).r*.25;\n    f += texture(iChannel0, uv*.5).r*.125;\n    f += texture(iChannel0, uv*1.).r*.125;\n    f=pow(f,1.2);\n    return vec4(f*.45+.05);\n}\n\nmat2 rot (float a)\n{return mat2 (cos(a),sin(a),-sin(a),cos(a));}\n\n// polynomial smooth min from iq\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nfloat sphe (vec3 p, float r)\n{return length(p)-r;}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r, abs(p.z)-h);}\n\n\nfloat sp (vec3 p)\n{   \n    p.z -= nt;\n    p.xz *= rot(-PI/2.);\n    \n    p.y -= sin(p.x*2.+iTime*2.)*p.x*0.2;\n    float s =  sphe(p,0.5);\n    p.x -= 1.8;\n    float c = cyl(p.yzx,-p.x*0.2,1.5);\n    return smin(s,c,0.2);\n}\n\nfloat sps (vec3 p)\n{\n    p.xy *= rot(iTime*0.5);\n    float s1 = sp(p+vec3(3.,2.,0.));\n    float s2 = sp(p+vec3(0.,-2.,0.));\n   \tfloat s3 = sp(p + vec3(-3.,0.,0.));\n    return min(s1,min(s2,s3));\n}\n\nfloat g2 = 0.;\nfloat ov (vec3 p)\n{\n    p.z -= 3.+nt;\n    \n    p.x += sin(p.y*5.+.5)*0.2;\n    p.y -= sin(p.z*5.+0.1)*0.1;\n    p.z += cos(p.x*4.)*0.3;\n    float d = sphe(p, 0.8+exp(-fract(iTime)));\n    g2 += 0.1/(0.1+d*d);\n    return d;\n}\n\nfloat g1 = 0.;\nfloat tunnel(vec3 p)\n{\n    p.x += texNoise(p.yz*0.05).r;\n    p.y += texNoise(p.xz*0.02).r;\n    float d =  cyl(p, 5.+sin(nt)*0.15, 1e10);\n    g1 += 0.01/(0.01+d*d);\n    return d;\n}\n\nvec2 path(float t) \n{\n\tfloat a = sin(t*.2 + 1.5), b = sin(t*.2);\n\treturn vec2(a, a*b);\n}\n\nfloat SDF (vec3 p)\n{\n    p.xy -= path(p.z);\n    \n    return min(-tunnel(p),min(sps(p), ov(p)));\n}\n\nvec3 getcam (vec3 ro, vec3 tar, vec2 uv)\n{\n    vec3 f = normalize(tar-ro);\n    vec3 l = normalize(cross(vec3(0.,1.,0.), f));\n    vec3 u = normalize(cross(f,l));\n    return normalize(f + l*uv.x + u*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n    vec3 ro = vec3(0.001,0.001,-5.+nt),\n        tar = vec3(0.,0.,nt),\n        p = ro,\n        col = vec3(0.);\n    \n    ro.xy += path(ro.z);\n\ttar.xy += path(tar.z);\n    \n    vec3 rd = getcam(ro, tar, uv);\n    \n    float shad = 0.;\n    bool hit = false;\n    \n    for (float i =0.; i<64.;i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            shad = i/64.;\n            hit = true;\n            break;\n        }\n        p+=d*rd*0.7;\n    }\n    if (hit) \n    {\n        col = vec3(1.-shad);\n    }\n    col += g1 * vec3(1.,0.7,0.7)*0.02;\n    col += g2 * vec3(0.8,0.1,length(uv))*0.05;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}