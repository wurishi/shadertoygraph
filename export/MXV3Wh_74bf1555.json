{"ver":"0.1","info":{"id":"MXV3Wh","date":"1717611133","viewed":64,"name":"Infinityy","username":"Muhammad","description":"Inifinity","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float FadedCircle(vec2 point , float r ,  vec2 uv )\n{\n\n    float distPoint = length(uv - point);\n    \n    float DrawPoint = smoothstep(r , r - 0.03 , distPoint);\n    \n    DrawPoint *= smoothstep(r+.9 , r , DrawPoint);\n   \n    \n    \n    return DrawPoint;\n    \n\n\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord -.5*iResolution.xy ) / iResolution.y * 3.;\n   \n\t\n\t// convert frequency to colors\n    float col = 0.;\n    \n   for(float i=0.0;i<50.0;i++)\n\t{\n\t  float si = sin(iTime + i * 0.05 );\n\t  float co = cos(iTime + i * 0.05 );\n      \n\t  \n      col += FadedCircle(vec2(si , (si * co)) , 0.2 , uv) * 0.4;\n\t}\n   \n    \n    \n    \n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}