{"ver":"0.1","info":{"id":"tsB3Dm","date":"1549019183","viewed":356,"name":"Tan Triangles","username":"Jamie_Pendergast","description":"I dont know why this works but it does.\nEquilateral triangles turn to Right  Angle triangles vice versa","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["interesting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nmat2 rot(float theta)\n{\n    return mat2(cos(theta),-sin(theta),sin(theta),cos(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = -1. + 2. * fragCoord/iResolution.xy;\n    uv *= PI*2.;\n    uv.x *= iResolution.x / iResolution.y*PI/2.;\n\t\n    \n    vec3 col = vec3(1.);\n    float angle = iTime;   \n\tuv *= rot(radians(angle*10.));\n    \n    float change = tan(uv.x - angle - uv.y) - tan(uv.x +  angle +  uv.y); \n\t\n    if(change >= 0.) \n    {\n        col = vec3(1.,0.4,0.4);\n    }\n    else\n    {\n        col = vec3(0.4,1.,1.);\n    }\n\n \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}