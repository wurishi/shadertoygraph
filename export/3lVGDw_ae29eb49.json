{"ver":"0.1","info":{"id":"3lVGDw","date":"1579086296","viewed":179,"name":"Animated concentric circles","username":"guitio2002","description":"Animated concentric circles.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circles","concentric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141593\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 circleCenter = 0.5 * iResolution.xy;\n\n    // Circles configuration\n    float circleSize = 0.13 * max(iResolution.x, iResolution.y);\n    float distanceToCenter = distance(fragCoord, circleCenter);\n\n    // Remap distance\n    float d = clamp(distanceToCenter / circleSize - 1.0, 0.0, 1.0);\n    d = 50.0 * d;\t// more rings\n\n    // Make first circle a bit bigger\n    float firstCircleRemap = step(d, 5.0);\n    d = pow(d - 2.0 * (1.0 - firstCircleRemap), 1.0 - 0.35 * firstCircleRemap);\n\n    // Retrieve circle color\n    float circleColor = sin(d);\n    circleColor = pow(max(circleColor, 0.0), 2.0);\n\n    // Animation thingy\n\tvec2 pos = fragCoord - circleCenter;\n    float angle = (pos.y >= 0.0 ? 1.0 : -1.0) * acos(pos.x / distanceToCenter) + PI;\n    angle = mod(angle + iTime, 2.0 * PI);\t// animate\n\n    // Tweak the circles color\n    float circleColorRemap = min(1.0 - angle / (2.0 * PI) + 0.35, 1.0);\n    circleColorRemap *= 2.0 - smoothstep(0.0, 0.1, angle);\t// brighten up the \"cursors\"\n    circleColor *= mix(circleColorRemap, 1.0, firstCircleRemap);\n\n    // Tint in blue\n    fragColor = vec4(circleColor * vec3(0.5, 0.9, 1.8), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}