{"ver":"0.1","info":{"id":"NdySzR","date":"1634214990","viewed":89,"name":"Lavalamp light points","username":"pehaa","description":"Mixing regular movement with a slight of randomness.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sine","points","1dnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589\n#define TWO_PI 6.28318530718\n\nfloat rand(float x) { return fract(sin(x * 1.14529) * 43758.5453123); }\n\nvec3 light_point(vec2 xy, vec2 center, vec3 color, float strength, float threshold) {\n  vec3 clr = vec3(0.0);\n  float l = length(xy - center);\n  // use threshold to cut off too much long distance light\n  clr += (strength / l) * smoothstep(0.0, threshold, strength / l);\n  return clr * color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n  vec2 uv = fragCoord/iResolution.xy;\n  vec2 center = vec2(.5);\n  vec3 color = vec3(.0);\n  const int count = 150;\n  \n  float t = 12. + TWO_PI * iTime * .25;\n  for (int i = 0; i < count; i++) {\n    float j = rand(float(i));\n    // use j in the B and loop G over time\n    vec3 rgb_color = vec3(0.7, 0.2 + 0.6 *sin(iTime), .1 + j);\n    vec3 new_c =\n        light_point(uv,\n                    center + vec2(0.35 * 1. * sin(j + 1. + 2. *  t * j),\n                                  +.45 * sin(j * .75 * PI + PI +  t)),\n                    rgb_color, 0.0025, .8 - .2*(1. - (1. - uv.y)* uv.y) );\n\n    color += new_c;\n  }\n\n  fragColor = vec4(vec3(color), 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}