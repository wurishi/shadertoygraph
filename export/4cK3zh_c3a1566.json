{"ver":"0.1","info":{"id":"4cK3zh","date":"1712409580","viewed":33,"name":"W_06_04_2023_15_18","username":"openroomxyz","description":"The wave pattern when we are rotating and adding all kind of waves o yea","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Experiment with shaders on shadertoy\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n     // Define the rotation angle in radians\n    float angle = 0.5 + (iTime + (uv.x) * sin(iTime + uv.y)); // You can change this angle to rotate differently\n    \n     // Define the rotation matrix\n    mat2 rotationMatrix = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    \n    uv *= rotationMatrix;\n\n    col.g = sin(uv.x * 10.0 + (iTime + 0.1 * sin(uv.y * 42.42 + iTime)*sin(uv.y * 100.0 + iTime)));\n    col.r = sin(col.g + iTime + 0.42 * sin(iTime * 0.2 + uv.x * 10.0));\n    col.b = 0.4 + 0.32 * abs(sin(abs(sin((col.g * col.r) * 32.0)) / sin((sin(col.g) / sin(col.r)) * sin(uv.x * iTime * cos(uv.y * iTime * 1.24)) * 10.0)));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}