{"ver":"0.1","info":{"id":"XsGBzK","date":"1529456874","viewed":2485,"name":"retro waves","username":"xdaimon","description":"neon\nvignette borrowed from https://www.shadertoy.com/view/ll2BWm","likes":28,"published":3,"flags":32,"usePreview":0,"tags":["80s","retro","audio","waveform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(float p) {\n\tvec3 p3  = fract(vec3(p) * 443.8975);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvoid mainImage( out vec4 c, in vec2 p ) {\n\tp /= iResolution.xy;\n    \n    /* look at buffer A contents\n    c = texture(iChannel0, p);\n    return;\n\t//*/\n    \n    // use manhatten dist in voronoi to get the blocky effect (thanks shadertoy)\n    // todo look into plane tilings\n\n    // todo parallelogram is neat but a diagonal high tech (possibly mini voronoi)\n    // pattern might be cooler\n\n    const float freq = 33.;\n    const float bezel = .7;\n    const float skew = .5;\n\n    vec2 uv = p;\n    uv.x *= iResolution.x / iResolution.y;\n\n\t// background mesh\n    vec2 pp = fract(uv*sqrt(iResolution.y*14.));\n    float mesh_bezel = .4 - .08 * smoothstep(500., 900., iResolution.y);\n\tvec4 bgmesh = 1.4*vec4(.05, .086, .04, 1.) * step(mesh_bezel, pp.x) * step(mesh_bezel, pp.y);\n    \n    // give the fragment a skewed lattice point\n    uv = vec2(uv.x-skew*uv.y, uv.y);\n    vec2 lattice = floor(uv * freq) / freq;\n    // unskew latice point\n    lattice.x += floor(skew * uv.y * freq) / freq;\n    \n    // compute skewed grid\n    uv = fract(uv * freq);\n    float grid = step(bezel, 1. - abs(uv.x - .5));\n    grid *= step(bezel, 1. - abs(uv.y - .5));\n\n    const float pinkness = .7;\n    const float blueness = .8;\n    const float brightness = 1.85;\n    \n    vec4 pink = 1.4 * vec4(255./256., 20./256., 144./256., 1);\n    vec4 blue = vec4(0., 204./256., 1., 1);\n    vec4 bg = vec4(0);\n\n    lattice.x *= iResolution.y / iResolution.x;\n    float x = texture(iChannel0, lattice).r;\n    c = mix(mix(bg, blue, smoothstep(.0, .3, blueness*x)), pink, pinkness*x);\n    c *= grid * brightness;\n    c = mix(bgmesh, c, smoothstep(.05, 1., length(c)));\n    \n    // vignette - I like the color distortion of the pinks this gives\n    // gives a more 'retro tv' feel\n    c.rgb *= pow(16.*p.x*p.y*(1.-p.x)*(1.-p.y), .35);\n    \n    c *= 1. - .5*sqrt(hash(p.x*p.y+2.));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 c, in vec2 p )\n{\n    p /= iResolution.xy ;\n    \n    float wave = texture(iChannel0, vec2(p.x, 1.0)).r;\n\n    vec4 prev_col = texture(iChannel1, p);\n    float dist = abs(p.y - wave);\n    dist *= dist;\n    \n    /*\n    c = vec4(clamp(.00075 / dist, 0., 1.));\n\t/*/\n    c = prev_col*.75 + vec4(clamp(.0002 / dist, 0., 1.));\n    c = clamp(c, vec4(0), vec4(1.5));\n    //*/\n}\n","name":"Buf A","description":"","type":"buffer"}]}