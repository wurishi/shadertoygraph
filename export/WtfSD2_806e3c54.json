{"ver":"0.1","info":{"id":"WtfSD2","date":"1564246831","viewed":132,"name":"Technoshader","username":"ErnstHot","description":"It's techno. Epilepsy warning!","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["sound","music"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    float bar = fract(iTime / 240.0 * bpm);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    float aspect = iResolution.x / iResolution.y;\n    uv.x *= aspect;\n    \n    float t = iTime * 20.5;\n    float t2 = iTime * 0.66;\n    float r1 = distance(uv, vec2(0.0, 0.0)) * 5.0;\n\n    vec2 uv2 = uv + vec2(cos(t2)*0.5,sin(t2*0.87)*0.5);   \n    float r2 = distance(uv2, vec2(0.0, 0.0)) * 50.0;\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5 * cos(iTime*0.4+uv.xyx+vec3(4,2,1));\n    float cs =  sin(r2 * r2 * 2.0 - t * 0.2) * sin(r1 * r1 * 100.0 - t) * 4.5;\n\tvec3 col = vec3(cos(cs)*1.7+0.5,cos(cs+1.3)*0.75+0.5,cos(cs+1.6)*1.1+0.5);\n    \n    // Output to screen\n    fragColor = vec4(col *((1.0 - barToNth(bar, 4.0))), 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float bpm = 132.0;\nconst float volume = 0.6 ;\n\n\n\n#define norm(x) (0.5 + 0.5 * x)\n\nconst float minus3dB = 0.707945764f;\nconst float pi = 3.141592;\nconst float twoPi = 2.0 * 3.141592;\n\nfloat timeToBar(float time)\n{\n    return fract(time / 240.0 * bpm);\n}\n\nfloat barToNth(float bar, float n)\n{\n\treturn fract(bar * n);\n}\n\n// Thanks Niels\nfloat overdrive(float sound, float amount)\n{\n\tamount = 1.0 + amount * 31.0;\n    float distorted = atan(sound * amount)*(2.0 / 3.14);\n    return distorted;\n}\n\nfloat foldback(float x)\n{\n  if (x > 1.0 || x < 0.0)\n  {\n    x = abs(abs(mod(x - 1.0, 4.0)) - 2.0) - 1.0;\n  }\n    \n  return x;\n}\n\nfloat varShape(float x, float s)\n{\n\treturn x / (x + (1.0 - (1.0 / s)) * (x - 1.0));\n}\n\n\n// x must be [0 ... 1]\nfloat triangle(float x, float center)\n{\n  if (x < center)\n  {\n      x += (0.5 - center) * (x / center); \n\t  x = 1.0 - abs(2.0 * fract(x) - 1.0);\n  }\n  else\n  {\n      x += (0.5 - center) * ((1.0 - x) / (1.0 - center));\n\t  x = 1.0 - abs(2.0 * fract(x) - 1.0);\n  }\n    \n  return x;    \n}\n\n\n// x must be [0 ... 1]\nfloat triangleShape(float x, float center, float attackShape, float decayShape)\n{\n  if (x < center)\n  {\n      x += (0.5 - center) * (x / center); \n\t  x = 1.0 - abs(2.0 * fract(x) - 1.0);\n      x = varShape(x, attackShape);\n  }\n  else\n  {\n      x += (0.5 - center) * ((1.0 - x) / (1.0 - center));\n\t  x = 1.0 - abs(2.0 * fract(x) - 1.0);\n      x = varShape(x, decayShape);\n  }\n    \n  return x;    \n}\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"float soundKick(float time)\n{\n    float os = 0.0;\n    \n    const float osFactor = 16.0;\n  \n    for (float i = 0.0; i < osFactor; i++)\n    {\n        float tBar = timeToBar(time + 1.0 / iSampleRate * i);\n        \n        float kick = cos((500.0 + 20.0 * cos(pi * 0.75 + time * 0.3))*tBar+triangleShape(barToNth(tBar, 4.0), 0.05, 0.85, 0.75)*10.0)*triangleShape(barToNth(tBar, 6.0)+ 0.8 * barToNth(tBar, 4.0), 0.01, 0.75, 0.05);\n        kick *= 10.0;\n        kick = overdrive(kick + 0.01 + 0.01 * cos(time * 0.1), 1.0);\n\n        float cf = 0.5+0.5*cos((0.5-(i / (osFactor - 1.0)))*2.0*pi);\n\t\tos += kick * cf;\n    }\n    \n    os /= osFactor;\n\t\n    return os;\n}\n\nfloat soundSaw(float time)\n{\n    float wave = 0.0;\n    for (float i = -4.0; i < 4.0; i++)\n    {\n    \twave += triangle(fract(time * (55.0 + (i * 20.0))), 0.5+0.5*sin(time*0.1));\n    }\n    \n\treturn wave * 0.1;\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    float tBar = timeToBar(time);\n    float sound = 0.0;\n    \n    sound += soundKick(time);\n    //sound += soundSaw(time);\n    \n    float soundLeft = 0.5 * triangle(fract(time * 55.0) * 10.09, 0.5+0.5*sin(time*0.1)) + 0.25 * triangle(fract(time * 110.01) * 5.0, 0.5+0.5*sin(time*0.12));\n    float soundRight = 0.5 * triangle(fract(time * 35.01) * 10.1, 0.5+0.5*sin(time*0.101)) + 0.25 * triangle(fract(time * 109.9 * 5.05), 0.5+0.5*sin(time*0.11));\n    \n    soundLeft += soundRight * 0.5;\n    soundRight += soundLeft * 0.5;\n    \n    float pump = triangleShape(barToNth(tBar, 4.0), 0.95, 0.5, 0.75);\n    soundLeft = overdrive(0.75 * pump * soundLeft + sound, 0.12);\n    soundRight = overdrive(0.75 * pump * soundRight + sound, 0.121);\n    \n    return vec2(soundLeft, soundRight);\n} ","name":"Sound","description":"","type":"sound"}]}