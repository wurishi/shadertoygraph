{"ver":"0.1","info":{"id":"WtcBDS","date":"1613322408","viewed":101,"name":"space noise","username":"utgwn","description":"sound test","likes":1,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 random2( vec2 p ) {\n    return fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy / iResolution.xy;\n    st.x *= iResolution.x / iResolution.y;\n    vec3 color = vec3(.0);\n\n    st *= 4.;\n\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n    float m_dist = 1.;\n\n    for (int y = -1; y <= 1; y++) {\n        for (int x = -1; x <= 1; x++) {\n            vec2 neighbor = vec2(float(x), float(y));\n\n            vec2 point = random2(i_st + neighbor);\n            point = .5 + .5 * sin(iTime * .2 + 6.2831 * point);\n            \n            vec2 diff = neighbor + point - f_st;\n            float dist = length(diff);\n            \n            m_dist = min(m_dist, dist);\n        }\n    }\n\n    color.b += cos(m_dist * 3.) * sin(iTime * .4);\n    color.g += cos(m_dist * 4.);\n    color += sin(m_dist * 4. * cos(iTime * .1));\n\n    color.r += .5 * sin(st.x * 3. * cos(iTime * .1));\n    color.g += .5 * cos(st.x * 3. * cos(iTime * .1));\n    color.b += sin(st.y * 1. * cos(iTime * .1));\n    \n    color.r -= cos(3.*sin(11.*iTime)+iTime);\n    color.b += tan(iTime);\n    color.g += cos(iTime);\n\n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time )\n{\n    // A 440 Hz wave that attenuates quickly overt time\n    //return vec2( sin(6.2831*440.0*time)*exp(-3.0*time) );\n    \n    vec2 sound = vec2(sin(6.2831*440.*(1.+cos(10.*sin(12.*time)+time))*tan(time)));\n    return sound*.5;\n}","name":"Sound","description":"","type":"sound"}]}