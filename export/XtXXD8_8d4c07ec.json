{"ver":"0.1","info":{"id":"XtXXD8","date":"1436128399","viewed":1255,"name":"Xor - Infinite Value Noise","username":"Xor","description":"A simple shader for beginners.","likes":25,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","perlin","xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float r(vec2 n)\n{\n    return fract(cos(dot(n,vec2(36.26,73.12)))*354.63);\n}\nfloat noise(vec2 n)\n{\n    vec2 fn = floor(n);\n    vec2 sn = smoothstep(vec2(0),vec2(1),fract(n));\n    \n    float h1 = mix(r(fn),r(fn+vec2(1,0)),sn.x);\n    float h2 = mix(r(fn+vec2(0,1)),r(fn+vec2(1)),sn.x);\n    return mix(h1,h2,sn.y);\n}\nfloat value(vec2 n)\n{\n    float total;\n    total = noise(n/32.)*0.5875+noise(n/16.)*0.2+noise(n/8.)*0.1\n            +noise(n/4.)*0.05+noise(n/2.)*0.025+noise(n)*0.0125;\n \treturn total;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = vec4(vec3(value(iTime*16.+fragCoord.xy/4.)),1.0);\n}","name":"Image","description":"","type":"image"}]}