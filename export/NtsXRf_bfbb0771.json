{"ver":"0.1","info":{"id":"NtsXRf","date":"1626198720","viewed":352,"name":"Analog Julia Fractal","username":"TheJimJames40","description":"Idea stolen from https://www.youtube.com/watch?v=Pv26QAOcb6Q\nI was wondering if this would also work with the julia set.\nGo full screen, and point a webcam at the screen. Drag with the mouse to change the value of 'c'","likes":3,"published":3,"flags":2,"usePreview":0,"tags":["fractal","webcam","feedback","julila"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 m  = iMouse.xy/iResolution.xy;\n    \n    vec2 ratio = vec2(iResolution.y / iResolution.x, 1.0);\n    \n    float s = 2.0;\n    \n    vec2 i = (uv*2.0 - 1.0)*s;\n    m = (m*2.0 - 1.0)*s;\n    float d = length(i)*8.0;\n    \n    vec2 c = i;\n\n    vec2 z = vec2(0.0);\n    \n    z = i;\n\n    {\n        vec2 z2;\n        z2.x = z.x*z.x - z.y*z.y;\n        z2.y = z.x*z.y*2.0;\n        z2 += m;\n        z = z2;\n    }\n    \n    vec2 o = (z / s + 1.0) / 2.0;\n    // o = (o / ratio / 3.0 + 1.0)*0.5;\n    \n\n    // Time varying pixel color\n    vec4 col = max(texture(iChannel0, o)*0.5, 1.0 / (d*d + 1.0));\n\n    // Output to screen\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}