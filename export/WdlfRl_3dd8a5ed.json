{"ver":"0.1","info":{"id":"WdlfRl","date":"1588872067","viewed":80,"name":"mandelbrot_yurka","username":"yurka","description":"Mandelbrot set","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["mandelbrotset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 mandelbrot(vec2 a)\n{\n    vec2 r = vec2(0.0, 0.0);\n    int s = 0;\n    int mx = 100;\n    while (s < mx && r.x*r.x + r.y*r.y < 20.0)\n    {\n        r += a;\n        r = vec2(r.x*r.x - r.y*r.y, 2.0*r.x*r.y);\n        s++;\n    }\n    vec3 res = vec3(0);\n\tif (r.x*r.x + r.y*r.y > 4.0)\n    {\n        res.g = float(s) / float(mx);\n        res.b = sqrt(float(s) / float(mx)); \n        res.r = 0.0;\n    }\n    return res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy / 2.0)/iResolution.y;\n\t//uv -= vec2(0.5, 0.5);\n    uv *= 2.0;\n    uv.x -= 0.5;\n    // Time varying pixel color\n    vec3 col = mandelbrot(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}