{"ver":"0.1","info":{"id":"Ws3BzS","date":"1605361519","viewed":443,"name":"plasma line distortion","username":"oatmealine","description":"heavily inspired by effects ive seen in some BOFXVI entries","likes":2,"published":3,"flags":0,"usePreview":1,"tags":["distortion","plasma","post","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415\n\n// lower for more quality\n#define steps 4\n// increase for more glitchiness\n#define thres 0.7\n\n// uncomment to increase plasma effect quality\n//#define properplasma\n\nfloat random(vec2 co) {\n   return fract(sin(dot(co.xy,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat plasma(vec2 uv) {\n    float v = 0.0;\n    float k = 9.0;\n    vec2 c = uv * k - k / 2.0;\n    \n    v += sin((c.x + iTime));\n    v += sin((c.y + iTime) / 2.0);\n    \n    v += sin((c.x + c.y + iTime) / 3.0);\n    \n    c += k / 2.0 * vec2(sin(iTime / 3.2), cos(iTime / 2.7));\n   \n    #ifdef properplasma\n    v += sin(sqrt(c.x * c.x + c.y * c.y + 1.0 ) + iTime);\n    #endif\n    \n    v = v/2.0;\n    \n    // vec3 col = vec3(1, sin(PI*v), cos(PI*v));\n    return v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int xModif = 0;\n    for (int x = 0; x < int(fragCoord.x); x += min(steps, int(fragCoord.x) - x)) {\n        float psin = sin(plasma(vec2(x, fragCoord.y)/iResolution.xy));\n        float pcos = cos(plasma(vec2(fragCoord.y, x)/iResolution.xy));\n        \n        if (abs(psin - pcos) > thres) {\n            xModif += min(steps, int(fragCoord.x) - x);\n        }\n    }\n    \n    vec2 uvModif = vec2(xModif, fragCoord.y) / iResolution.xy;\n    vec3 col = texture(iChannel0, uvModif).rgb;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}