{"ver":"0.1","info":{"id":"wt2cDw","date":"1594584019","viewed":119,"name":"String Attempt","username":"ShaderLyf","description":"trying to make an artistic interpretation of a string. Need to figure out how to let the string decay after being interacted with!","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["string"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 Colour, in vec2 U )\n{\n    vec2 p = U/iResolution.xy;\n    vec2 g = p-vec2(0.5,0.5);\n    float r = 0.0025; // thickness of line\n    vec3 col = vec3(0.0);\n\n    float freq = 8.;\n    int a = int(amt);\n    vec2 q;\n    float t;\n    float scale = 0.001;\n    \n  for (int i = 0; i< a; i++)\n    {\n      float s = 1.0/amt;\n      float ii = float(i);\n      q = p - vec2(0.5, (s * ii+s/2.));\n\n      t = texelFetch(iChannel0, ivec2(p.y*amt,5),0).x;  \n\n      col += smoothstep (r+0.01,r,abs(q.y-((t*scale)) * sin(freq * q.x + (iTime*12.*(ii+1.)))));\n    }\n    \n    \n    float c = vec3(vec2(length(g)),0).x;\n    \n    //col *= smoothstep(r+0.2,r+0.21,length(g));\n    col += vec3(0.00,0.0,0.125);\n    col -= 0.5 + 0.5*cos(iTime+p.xyx+vec3(0,2,4)); // you know you love it\n\tcol += t*0.02; // debug mouse tex\n\t//col+=c;\n    Colour = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 Colour, in vec2 U )\n{\n    vec2 p = U/iResolution.xy;\n\t\n    vec3 col = vec3(0);\n    Colour = texture(iChannel0,U/iResolution.xy);\n    Colour.x -= Colour.x * 0.02;\n    if (iMouse.z > 0.)\n    {\n        float m = (iMouse.y / iResolution.y) * amt;\n     \tif(ivec2(U) == ivec2(int(m), 5)) \n    \t{ \n        \tcol.x = 1.0;\n    \t}\n    }\n    \n    Colour += vec4(col,1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float amt = 6.; //amount of strings","name":"Common","description":"","type":"common"}]}