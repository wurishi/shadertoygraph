{"ver":"0.1","info":{"id":"wtBSRd","date":"1566762320","viewed":132,"name":"The color of the night ","username":"foran","description":"The color of the night ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["thecolorofthenight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n  bool u_renderpass=false;\n  const int octaves = 2;\n\n  // LUT Noise by Inigo Quilez - iq/2013\n  // https://www.shadertoy.com/view/4sfGzS\n  float noiseLUT( in vec3 x )\n  {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    vec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n    vec2 rg = texture(iChannel2, (uv+0.5)/256.0).yx - .5;\n    return mix( rg.x, rg.y, f.z );\n  }\n\n  float fbm1(in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5),\n                    -sin(0.5), cos(0.50));\n    for (int i = 0; i < octaves; ++i) {\n        v += a * noiseLUT(vec3(_st, 1.));\n        // v += a * noise(_st, seed);\n        _st = rot * _st * 2.0 + shift;\n        a *= 0.4;\n    }\n    return v;\n  }\n\n  float pattern(vec2 uv, float time, inout vec2 q, inout vec2 r) {\n\n    q = vec2( fbm1( uv + vec2(0.0,0.0) ),\n                   fbm1( uv + vec2(5.2,1.3) ) );\n\n    r = vec2( fbm1( uv + 4.0*q + vec2(1.7 - time / 2.,9.2) ),\n                   fbm1( uv + 4.0*q + vec2(8.3 - time / 2.,2.8) ) );\n\n    return fbm1( uv + 4.0*r );\n  }\n  //-----------\nvec3 linearDodge(vec3 s,vec3 b){return b*s;}\n  //---------\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n  //void main()\n   {\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / min(iResolution.y, iResolution.x);\n    vec2 aspect=fragCoord.xy/iResolution.xy;//aspect   этот for little\n    uv=aspect/1.85-.001;\n    uv.x*=iResolution.x/.97/iResolution.y;//.67 по оси x уже-шире\n    vec2 sampl = fragCoord.xy / iResolution.xy;\n    //vec2 sampl=(fragCoord.xy-.00015*iResolution.xy)/iResolution.y;\n//-------------\n   //vec2 sampl=(fragCoord/iResolution.xy)/.93+.01;\n   //float aspect=iResolution.x/iResolution.y;//aspect\n   //sampl.x*=aspect;\n//------------\n   //vec2 aspeqt=fragCoord.xy/iResolution.xy;//aspect   этот for little\n   //vec2 sampl=aspeqt/1.-.001;\n   //sampl.x*=iResolution.x/.67/iResolution.y;//.67 по оси x уже-шире\n//--------------\n    //vec2 aspect=vec2(iResolution.x/iResolution.y,.7);//      этот for little\n    //vec2 sampl=((fragCoord.xy/iResolution.xy)/.7+.001)*aspect;\n//--------------    \n    vec2 px = 1. / iResolution.xy;\n\n    vec4 fragcolour = texture(iChannel1, sampl);\n\n    if(u_renderpass) {\n      vec2 q;\n      vec2 r = vec2(0.);\n       float shade = pattern((uv * 5. + fragcolour.xy), iTime * .5, q, r) + .2;\n    \n      for(int x = -1; x < 2; x++) {\n        for(int y = -1; y < 2; y++) {\n          //vec2 _r;\n          shade += pattern((uv * 5.1 + (fragcolour.xy) + vec2(px.x * float(x),  px.y * float(y))),  iTime * .5,  q,  r);\n          r += r;\n        }\n      }\n      r *= 98.;\n      r = r * 2.5 - 1.;\n      fragcolour += vec4(r, 0., 1.) * .05;\n      fragcolour += texture(iChannel2, sampl).x;\n      fragcolour *= .95;\n \n    } else {\n      vec2 q;\n      vec2 r;\n      float shade = pattern((uv * 5. + fragcolour.xy), iTime * .95, q, r) + .251;\n      fragcolour = vec4(shade);\n      fragcolour += vec4(r, q.y, 1.);\n      fragcolour *= 1.5;\n    }\n   //fragColor = fragcolour;\n   //----------Photoshop filters\nvec4 s=vec4(abs(fragcolour));//backdropImage  вверху\nvec4 b=texture(iChannel0,uv);\nvec3 mix=linearDodge(b.rgb,s.rgb);\nvec3 blend=(1.-b.a)*s.rgb+b.a*mix;\nvec3 composite=s.a*blend+b.a*b.rgb*(1.-s.a);\nfloat coverage=s.a+b.a*(1.-s.a);\nvec4 pixelColor=vec4(clamp(composite,0.,1.),clamp(coverage,0.,1.));\nfragColor=pixelColor;\n//-----------\n  }","name":"Image","description":"","type":"image"}]}