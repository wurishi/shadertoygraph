{"ver":"0.1","info":{"id":"mtGyzV","date":"1700419573","viewed":76,"name":"Implementing archimedean spiral","username":"INCHMAN1900","description":"A new implementation of Archimedean spiral.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["sdf","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RES iResolution.xy\n#define PI 3.1415926\n#define TAU (2.*PI)\n\nfloat w = .01;\n\nvec3 spiral(vec2 uv, float r) {\n    float a = fract((atan(uv.y, uv.x) + iTime * 10.) / TAU + .5);\n    float l = length(uv);\n    float d = l - (floor(l / r) + a) * r;\n    float c = smoothstep(w, .0, abs(d)) + smoothstep(w, .0, abs(d + r)) + smoothstep(w, .0, abs(d - r));\n    return vec3(c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - RES) / RES.y;\n    fragColor = vec4(spiral(uv, .1), 1.0);\n}","name":"Image","description":"","type":"image"}]}