{"ver":"0.1","info":{"id":"Xd33zS","date":"1450306523","viewed":374,"name":"Wave reflection + interference","username":"TambakoJaguar","description":"Test of the reflection and interference of waves like when object is thrown into the water.\nYou can change the boolean distimage to see the waves themselves or the effect of the waves on an image, as distortion.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["reflection","wave","water","interference","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"const float pi = 3.141559;\n\nvec2 center = vec2(0.5, 0.5);\nconst float dfreq = 320.;\nconst float wfact = 8.;\nconst float tfreq = 80.;\nconst float distamp = 0.04;\n\nconst int nr = 4;\nconst bool distimage = true;\n\nvec4 drawWave(vec2 center, vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xx;\n    float ratio = iResolution.x/iResolution.y;\n    center*= vec2(1., 1./ratio);\n    float disttime = mod(distance(uv, center)*dfreq - iTime*tfreq + 2.*pi*wfact, 5.*tfreq*float(nr));\n    // Wavelets\n\tvec4 wo = vec4(disttime>0. && disttime<2.*pi*wfact?sin(disttime)*0.5 + 0.5:0.);\n    // Ring\n    wo*= vec4(sin(disttime/wfact - pi/2.)*0.5 + 0.5);\n    // Distance attenuation\n    wo*= pow(1./(1. + distance(uv, center)), 2.);\n    \n    if (distimage)\n        return wo*vec4(normalize(uv - center), 0., 0.);\n    else\n        return wo;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 wo = vec4(0.);\n    vec2 uv2 = fragCoord.xy / iResolution.xy;\n   \n    const float inr = float(nr);\n    for (float j=-inr; j<=inr; j++)\n    {\n    \tfor (float i=-inr; i<=inr; i++)\n    \t{\n            if (distimage)\n        \t   wo+= drawWave(center + vec2(i, j), fragCoord);\n            else\n               wo+= drawWave(center + vec2(i, j), fragCoord);\n        }\n    }\n    \n    if (distimage)\n        fragColor = texture(iChannel0, uv2 + wo.xy*distamp);\n    else\n    \tfragColor = wo;\n}","name":"","description":"","type":"image"}]}