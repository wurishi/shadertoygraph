{"ver":"0.1","info":{"id":"lt2XRW","date":"1442147552","viewed":274,"name":"Linear Spectrum","username":"Sab0k","description":"Simple spectrum r->g->b","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["gradient","rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"//Lee Higgins\n//DepthPerPixel\n//www.depthperpixel.com\n//\n// simple linear test spectrum low frequency(left) to high\n// approximation experiments\n// trying using sine cheating\n\n#define M_PI 3.1415926535897932384626433832795\n\nfloat redDistribution(in float inputFloat)\n{\n    return (sin((inputFloat*M_PI)*2.2)+1.0)*0.5;\n}\n\nfloat greenDistribution(in float inputFloat)\n{\n    return (sin((inputFloat*M_PI)*2.4)+1.0)*0.5;\n}\n\nfloat blueDistribution(in float inputFloat)\n{\n    return (sin((inputFloat*M_PI)*2.4)+1.0)*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //LH wavelength peaks\n    const float specMin = 250.0;\n    const float specMax = 620.0;\n    const float specLen = specMax - specMin;\n        \n    const float redPeak = (564.0 - specMin)/specLen;\n    const float greenPeak = (533.0 - specMin)/specLen;\n    const float bluePeak = (437.0 - specMin)/specLen;\n    \n        \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float xu = 1.0-uv.x;\n    \n    float blueMask = clamp(2.0-(xu*4.0),0.0,1.0);\n    \n    float red = redDistribution(xu - (redPeak-0.5));\n   \tfloat green = greenDistribution(xu - (greenPeak-0.5));\n    float blue = blueDistribution(xu - (bluePeak-0.5)) * blueMask;\n\t\n   // green=0.0;\n   // blue = 0.0;\n    //red=0.0;\n    fragColor = vec4(red,green,blue,1.0);\n}","name":"","description":"","type":"image"}]}