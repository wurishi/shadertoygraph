{"ver":"0.1","info":{"id":"XlSBzz","date":"1514162968","viewed":323,"name":"sobel filter","username":"saidwho12","description":"just a simple sobel edge detector","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sobel","filter","edge","detector"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* comment or un-comment for lighting */\n#define _use_light\n\nfloat lumi( in vec4 fragColor ) {\n\treturn sqrt( 0.299*pow(fragColor.x, 2.0) + 0.587*pow(fragColor.y, 2.0) + 0.114*pow(fragColor.z, 2.0) );\n}\n\nvec2 sobel(in vec2 uv, in vec2 t) {\n    float tleft = lumi(texture(iChannel0,uv + vec2(-t.x,t.y)));\n    float left = lumi(texture(iChannel0,uv + vec2(-t.x,0)));\n    float bleft = lumi(texture(iChannel0,uv + vec2(-t.x,-t.y)));\n    float top = lumi(texture(iChannel0,uv + vec2(0,t.y)));\n    float bottom = lumi(texture(iChannel0,uv + vec2(0,-t.y)));\n    float tright = lumi(texture(iChannel0,uv + vec2(t.x,t.y)));\n    float right = lumi(texture(iChannel0,uv + vec2(t.x,0)));\n    float bright = lumi(texture(iChannel0,uv + vec2(t.x,-t.y)));\n    float gx = tleft + 2.0*left + bleft - tright - 2.0*right - bright;\n    float gy = -tleft - 2.0*top - tright + bleft + 2.0 * bottom + bright;\n    return vec2(gx, gy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 t = vec2(1.0) / iResolution.xy;\n    vec2 s = sobel(uv, t);\n    float g = sqrt(pow(s.x, 2.0) + pow(s.y, 2.0));\n    vec2 m = iMouse.xy / iResolution.xy;\n    vec3 col;\n    \n    if (uv.x > 0.5) {\n    \tcol = vec3(g);\t\n    } else {\n    #ifdef _use_light\n        vec3 N = normalize(vec3(s, 1.0));\n        vec3 L = normalize(vec3(m.xy, 0.2) - vec3(uv, 0.0));\n        float NdotL = clamp(dot(N, L), 0.0, 1.0);\n        col = vec3(NdotL);\n        \n    #else\n    \tcol = vec3(s, 0.0);\n    #endif\n    }\n    \n    col += (1.0-clamp(200.0*abs(uv.x - 0.5), 0.0, 1.0))*vec3(1.0, 0.0, 0.0);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}