{"ver":"0.1","info":{"id":"Xt2czh","date":"1507432997","viewed":94,"name":"NWalker_Reveal","username":"natwalker","description":"Hovering over the texture reveals the texture underneath.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reveal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rad = 0.1;\n\nmat3 blur = mat3(\n\t0.111, 0.111, 0.111,\n\t0.111, 0.111, 0.111,\n\t0.111, 0.111, 0.111 \n);\n\nmat3 sharpen = mat3(\n\t0., -1, 0.0, \n\t-1, 5, -1, \n\t0., -1, 0.0 \n);\n\nmat3 emboss = mat3(\n\t-2, -1, 0.0,\n\t-1, 1, 1,\n\t0.0, 1, 2\n);\n\nmat3 outline = mat3(\n\t-1, -1, -1,\n\t-1, 8, -1,\n\t-1, -1, -1\n);\n\nmat3 topSobel = mat3(\n\t1, 2, 1,\n\t0.0, 0.0, 0.0,\n\t-1, -2, -1\n);\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord, int texNum)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy;\n    \n    \n    if (texNum == 0)\n    {\n\t\treturn texture(iChannel0, uv).xyz;\n    }\n    else if (texNum == 1)\n    {\n        return texture(iChannel1, uv).xyz;\n    }\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel, int texNum)\n{\n\tvec3 sum = vec3(0.0,0.0,0.0);\n\n\tfor (int i = 0; i <= 2; i++)\n\t{\n\t\tfor (int j = 0; j <= 2; j++)\n\t\t{\n\t\t\tsum += (aSample((i-1), (j-1), fragCoord, texNum) * kernel[i][j]);\n\t\t}\n\t}\n\n\treturn sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 fc = fragCoord.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    \n  \tvec4 layer;\n    \n    //Blur\n    vec3 cf = aFilter(fc, blur, 0);\n    \n    //Emboss\n    //vec3 cf = aFilter(fc, emboss, 0);\n    \n    //Outline\n    //vec3 cf = aFilter(fc, outline, 0);\n    \n    //topSobel\n    //vec3 cf = aFilter(fc, topSobel, 0);\n    \n    //Sharpen\n\tvec3 Color1 = aFilter(fc, sharpen, 1);\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n    mouse.y *= iResolution.y / iResolution.x;\n    \n    float layerA = step(rad, length(uv-mouse));\n\tlayerA = 1.0 - layerA;\n\tlayer = vec4(Color1, layerA);\n    \n    vec4 blurLayer = vec4(cf, 1.0);\n    \n    vec4 comp = mix(blurLayer, layer, layer.a);\n    \n\tfragColor = comp;\n}","name":"Image","description":"","type":"image"}]}