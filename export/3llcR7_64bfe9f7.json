{"ver":"0.1","info":{"id":"3llcR7","date":"1591711056","viewed":79,"name":"key input test (moving square)","username":"darkfox","description":"red square is moving while \"a\" key is pressed.\ngreen square is move if \"b\" key is pressed.\nblue square is start moving if \"c\" key is pressed. if pressed twice, it's initialize.","likes":3,"published":1,"flags":16,"usePreview":0,"tags":["keyinput"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// red: move while A is pressed.\n// green: move if B is pressed.\n// blue: start moving if C is pressed.\n\n#define K_A 65\n#define K_B 66\n#define K_C 67\n\n#define RED vec3(0.95, 0.3, 0.35)\n#define GREEN vec3(0.3, 0.9, 0.4)\n#define BLUE vec3(0.2, 0.25, 0.98)\n\nvec4 square(vec2 p, float size, vec3 bodyColor){\n  if(max(abs(p.x), abs(p.y)) > size){ return vec4(0.0); }\n  return vec4(bodyColor, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n  vec2 p = fragCoord.xy / min(iResolution.x, iResolution.y);\n  bool ka = bool(texelFetch(iChannel0, ivec2(K_A, 0), 0).x);\n  bool kb = bool(texelFetch(iChannel0, ivec2(K_B, 1), 0).x);\n  bool kc = bool(texelFetch(iChannel0, ivec2(K_C, 2), 0).x);\n  \n  vec4 bg = vec4(vec3(1.0 - p.y), 1.0);\n  vec4 col = bg;\n    \n  vec4 redSquare, greenSquare, blueSquare;\n  \n    if(ka){\n        redSquare = square(p - vec2(0.2 + mod(iTime * 0.2, 1.0), 0.8), 0.1, RED);\n    }else{\n        redSquare = square(p - vec2(0.2, 0.8), 0.1, RED);\n    }\n    if(kb){\n        greenSquare = square(p - vec2(0.2 + mod(iTime * 0.2, 1.0), 0.5), 0.1, GREEN);\n    }else{\n        greenSquare = square(p - vec2(0.2, 0.5), 0.1, GREEN);\n    }\n    if(kc){\n        blueSquare = square(p - vec2(0.2 + mod(iTime * 0.2, 1.0), 0.2), 0.1, BLUE);\n    }else{\n        blueSquare = square(p - vec2(0.2, 0.2), 0.1, BLUE);\n    }\n  vec4 squareSum = redSquare + greenSquare + blueSquare;\n\n  fragColor = mix(col, squareSum, squareSum.a);\n}\n","name":"Image","description":"","type":"image"}]}