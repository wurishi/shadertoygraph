{"ver":"0.1","info":{"id":"l3dSWX","date":"1719707837","viewed":173,"name":"weird realtime shadows experimen","username":"andylovescode","description":"like google material design or something","likes":1,"published":3,"flags":34,"usePreview":0,"tags":["shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float light_height = texture(iChannel0,uv).x;\n    float texture_height = texture(iChannel1, uv).x;\n    \n    float light = 1.0 - (light_height - texture_height) * 0.5;\n    \n    //light = light_height;\n    //light = texture_height;\n    \n    vec3 surfaceColor = vec3(158. / 255., 169. / 255., 255. / 255.);\n    \n    surfaceColor += (1. - surfaceColor) * texture_height;\n        \n    surfaceColor = surfaceColor * light;\n    \n    fragColor = vec4(surfaceColor, 1.);\n    \n    //fragColor = vec4(light, light, light, 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float light(vec2 fragCoord, float texture_height, vec2 dir, float slope) {\n    float rate = 1.;\n    float light_height = texture(iChannel0, (fragCoord - dir * rate) / iResolution.xy).x - slope * rate;\n\n    if (light_height > texture_height) {\n        texture_height = light_height;\n    }\n    \n    return texture_height;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float texture_height = texture(iChannel1, uv).x;\n    \n    texture_height = light(fragCoord, texture_height, vec2(1., -1.), 0.05);\n\n    // Mouse light\n    //texture_height = light(fragCoord, texture_height, normalize(fragCoord - iMouse.xy), 0.05);\n    \n    // Fake AO hack\n    float around_depth = 0.3;\n\n    texture_height = light(fragCoord, texture_height, vec2(-1., 0.), around_depth);\n    texture_height = light(fragCoord, texture_height, vec2(0., 1.), around_depth);\n    texture_height = light(fragCoord, texture_height, vec2(1., 0.), around_depth);\n    texture_height = light(fragCoord, texture_height, vec2(0., -1.), around_depth);\n        \n    fragColor = vec4(texture_height, 0., 0., 1.);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float height = 0.;\n    \n    float time = iTime;\n    \n    vec2 coord = ((fragCoord) / 50.0) + time;\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    \n    height = round(uv.y * 2.) / 4.;\n    \n    if (sin(coord.x) * sin(coord.y) > 0.4) {\n        height = 1.;\n    }\n    \n    vec2 from_center = fragCoord - (iResolution.xy / 2.);\n    float dist = distance(from_center, vec2(0.));\n    \n    if (dist > 100. && dist < 200.) {\n        //height = 0.;\n    } else {\n        //height = 1.;\n    }\n    \n    if (texture(iChannel0, fragCoord / iResolution.xy).z > iMouse.y / iResolution.y) {\n        height = 1.;\n    } else {\n        height = 0.;\n    }\n    \n    fragColor = vec4(height,height,height,1.);\n}","name":"Buffer B","description":"","type":"buffer"}]}