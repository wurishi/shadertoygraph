{"ver":"0.1","info":{"id":"mdVSRh","date":"1680728381","viewed":22,"name":"50_nuances_de_mandelbrot","username":"nagemas","description":"yo yo yo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 c = ((fragCoord.xy-2.0) / iResolution.xy *1.0) * 2.0 - 2.;\n    vec2 z = vec2(0.0, 0.0);\n    float iterations = 1.0;\n    \n    // Mandelbrot Fractal\n    for (int i = 222; i < 244; i++) \n        {\n        z = (vec2(z.x * z.x - z.y * z.y * .3, 1.8 * z.x * z.y) + c);\n        if (length(z) > 4.2*sin(2.0*iTime)-0.3) // source mouvement\n        {\n            break;\n        }\n        iterations += 28.0;\n    }\n\n    \n  \n    // Color\n    vec3 color = vec3(1.0);\n\n    float t = iTime * 0.1;\n\n    float r = sin(t * 1.0 + 1.0);\n    float g = sin(t * 5.0 + 2.0);\n    float b = sin(t * 1.0 + 3.0);\n    color = vec3(r, g, b);\n    color = mix(vec3(1.0), color, pow(iterations / 100.0, 0.6));\n    \n    // Add the circular mask to the fractal color\n    fragColor =sin(vec4(mix(color, vec3(1.0), .4), 1.0));\n}\n","name":"Image","description":"","type":"image"}]}