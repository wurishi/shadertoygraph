{"ver":"0.1","info":{"id":"4cS3DD","date":"1704294993","viewed":16,"name":"Diagonal Tile shader","username":"boomji","description":"The shader divides the canvas into black & white based on a line. \nIt checks if the slope of a pixel is above or below a threshold and colors it.  ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["line","tile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform vec2 u_mouse;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( fragCoord/iResolution.xy) ;\n    \n    float final_pixel = 0.0;\n    float slope = 1.5;\n    vec2 uv_offset = uv + 0.0;\n    if ( uv_offset.y / uv_offset.x  >=  slope )\n        final_pixel = 1.;\n\n    // Experiment\n    vec3 col =  vec3(final_pixel ) ;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}