{"ver":"0.1","info":{"id":"4scGWB","date":"1451933697","viewed":301,"name":"FEEDBACK EFFECT","username":"Branch","description":"FEEDBACK EFFECT","likes":4,"published":1,"flags":96,"usePreview":0,"tags":["feedbackeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3RN","filepath":"https://soundcloud.com/branch-tarhatarha/branch-paranoia","previewfilepath":"https://soundcloud.com/branch-tarhatarha/branch-paranoia","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(0.5);\n    uv*=0.7;\n    uv+=vec2(0.5);\n    uv.y=floor(uv.y*960.0)/960.0;\n\tfloat aspectCorrection = (iResolution.x/iResolution.y);\n\tvec2 coordinate_entered = 2.0 * uv - 1.0;\n\tvec2 coord = vec2(aspectCorrection,1.0) *coordinate_entered;\n\tfloat vignette = 1.0 / max(0.25 + 0.9*dot(coord,coord),1.);\n\tfragColor = pow(texture(iChannel0,uv)*0.5*min(iTime/4.*vignette,1.0),vec4(1.3));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rotate(float Angle){\n    mat2 rotation = mat2(\n        vec2( cos(Angle),  sin(Angle)),\n        vec2(-sin(Angle),  cos(Angle))\n    );\n\treturn rotation;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(0.5);\n    vec2 yv = uv * (1.02+sin(iTime)/128.);\n    yv *= rotate(0.01*sin(iTime/33.));\n    uv+=vec2(0.5);\n    yv+=vec2(0.5);\n    fragColor = texture(iChannel0,uv) + texture(iChannel1,yv)*0.98;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float circle(vec2 coord, vec2 pos, float size){\n    return min(floor(distance(coord,pos)-size),0.);\n}\nmat2 rotate(float Angle){\n    mat2 rotation = mat2(\n        vec2( cos(Angle),  sin(Angle)),\n        vec2(-sin(Angle),  cos(Angle))\n    );\n\treturn rotation;\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nfloat rand(float co){\n    return rand(vec2(co));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\tfloat aspectCorrection = (iResolution.x/iResolution.y);\n\tvec2 coordinate_entered = 2.0 * p - 1.0;\n\tvec2 coord = vec2(aspectCorrection,1.0) *coordinate_entered;\n    vec2 s = coord;\n\tfloat vignette = 1.0 / max(0.25 + 0.3*dot(coord,coord),1.);\n\tvec3 COLOR = vec3(0.0);\n    for(float i=0.0; i<6.0; i++){\n    \tCOLOR -= 0.2*circle(coord, vec2(1.3,2.*rand(i+3.+iTime)-1.), 0.06+sin(iTime+i)*0.03);\n    }\n    for(float i=0.0; i<6.0; i++){\n    \tCOLOR -= 0.2*circle(coord, vec2(-1.3,2.*rand(i+2.+iTime)-1.), 0.06+sin(iTime+i)*0.03);\n    }\n    if(mod(iTime*(60.0/124.0),2.0)<0.1){\n        COLOR+=vec3(1./(1.0+floor(texture(iChannel0,p*vec2(1./5.,1.0)+vec2(iTime/32.,0.)).r*4.))/4.);\n    }\n    COLOR+=vec3(2.0)*rand(p+floor(mod(iTime*60.,40.0)))/16.-1.0/17.0;\n\tfragColor = vec4( COLOR*vignette,1.0);\n} ","name":"Buf B","description":"","type":"buffer"}]}