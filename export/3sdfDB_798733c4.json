{"ver":"0.1","info":{"id":"3sdfDB","date":"1605906056","viewed":163,"name":"Audio Waveform Visualizer v4","username":"oneshade","description":"Version four of my Audio Waveform Visualizer. Will I ever stop?","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["visualization","waveform","curvefitting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nVersion four of my Audio Waveform Visualizer.\nAdded some cool but rather trippy coloring.\n*/\n\n// 0 for frequency mode, 1 for amplitude mode:\n#define VIEW_MODE 0\n\nfloat samplePiecewiseSmooth(in float x, in float res) {\n    float xTimesRes = x * res;\n\n    // Left sample point:\n    float x1 = floor(xTimesRes) / res;\n    float y1 = texture(iChannel0, vec2(x1, VIEW_MODE)).x;\n\n    // Right sample point:\n    float x2 = ceil(xTimesRes) / res;\n    float y2 = texture(iChannel0, vec2(x2, VIEW_MODE)).x;\n\n    // Prevent small breaks in the line:\n    x2 += 0.001;    \n\n    // Fit half of a sine wave between sample points:\n    float sine = sin(((x - x1) / (x2 - x1) * 2.0 - 1.0) * 1.5707963267);\n    return y1 + (0.5 + 0.5 * sine) * (y2 - y1);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float curSample = samplePiecewiseSmooth(uv.x, 20.0);\n    // How close the pixel is to the wave:\n    float smoothError = smoothstep(0.03, 0.0, abs(uv.y - curSample));\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    if (smoothError > 0.0) {\n        // Mix red and white based on closeness:\n        fragColor = vec4(mix(vec3(1.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0), smoothError), 1.0);\n    }\n\n    // Multiply by some changing colors:\n    fragColor.rgb *= 0.5 + 0.5 * cos(iTime + uv.xyx * vec3(20.0, 1.0, 1.0) + vec3(0.0, 2.0, 4.0));\n}","name":"Image","description":"","type":"image"}]}