{"ver":"0.1","info":{"id":"csj3zw","date":"1667402929","viewed":112,"name":"Rotated","username":"rebbur","description":"Rotate based on distance in discrete steps","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["texture","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 16.0\n#define ALTERNATE false\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    vec2 uv = ( U - vec2(.5, .5) * iResolution.xy ) / iResolution.y;\n    float d = distance(uv, vec2(0.0)) * STEPS;\n    \n\n    float rotation = floor(d);//\n    \n    if (ALTERNATE)\n        rotation = int(rotation) % 2 == 0 ? rotation : -rotation;\n        \n    rotation *= iMouse.x / iResolution.x - 0.5;\n    \n    float s = sin(rotation);\n    float c = cos(rotation);\n    \n    float aspect = iResolution.x / iResolution.y; \n    uv.x /= aspect;    \n    uv = uv * mat2(c, s, -s, c) - .5;\n    \n    O = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"}]}