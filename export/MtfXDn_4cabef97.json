{"ver":"0.1","info":{"id":"MtfXDn","date":"1435755490","viewed":188,"name":"pie-charts","username":"kusma","description":"lots of anti-aliased pie-charts\n\n...or white-supremacist pac-men, depending on how you look at it.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["piechart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float piechart(vec2 p, float r, float a0, float a1)\n{\n    vec2 n0 = vec2(-cos(a0), sin(a0));\n    vec2 n1 = -vec2(-cos(a1), sin(a1));\n\tvec2 nm = normalize(n0 + n1);\n\n    float da0 = dot(p, n0);\n    float da1 = dot(p, n1);\n\n    float da;\n\t// if the angle between a0 and a1 is less than 180 degrees\n    bool convex = (a1 - a0) < 3.1415926;\n    if (convex)\n    \tda = max(da0, da1);\n    else\n    \tda = min(da0, da1);\n\n    // add a miter limit of 0.0\n    float dm = dot(p, nm);\n    if (convex)\n    \tda = max(da, dm);\n    else\n    \tda = min(da, dm);\n\n    float dc = length(p) - r;\n    return max(dc, da) + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = 16.0;\n    vec2 pos = floor((fragCoord.xy) / (2.0 * r));\n    float a0 = mod(pos.x * 0.5 - iTime * 0.1, 3.1415926 * 2.0);\n    float a1 = mod(pos.y * 0.5 + iTime * 0.5, 3.1415926 * 2.0);\n    if (a1 < a0)\n        \ta1 += 3.14159265 * 2.0; // make sure a1 is larger than a0\n\n\tfloat d = piechart(fragCoord.xy - r - pos * r * 2.0, r, a0, a1);\n    float a = clamp(0.5 - d, 0.0, 1.0);\n    \n\tfragColor = vec4(vec3(sqrt(a)) + vec3(0.0, 0.0, 0.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}