{"ver":"0.1","info":{"id":"wlKGzW","date":"1578435580","viewed":119,"name":"0xFFCDAA","username":"gigatron","description":"Fast atom demo ; Various routines from around shadertoy , glslsandbox, sin displacement curtain scanline from me .. etc ! demo duration 130 sec !","likes":6,"published":1,"flags":64,"usePreview":0,"tags":["amiga","demo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4tS3R1","filepath":"https://soundcloud.com/f242-edo-dominatrix/front-242-never-stop-edobot","previewfilepath":"https://soundcloud.com/f242-edo-dominatrix/front-242-never-stop-edobot","type":"musicstream","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n#define slowt mod(iTime,0.1)\nvec3 lDir = vec3(-0.577, 0.577, 0.577);\n\nvec3 rotate(vec3 p, float angle, vec3 axis)\n{\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    mat3 m = mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n    return m * p;\n}\n\nfloat distBox(vec3 p, vec3 b)\n{\n\treturn length(max(abs(p)-b, 0.0));\n}\n\n \nfloat distMap(vec3 p)\n{\n\tfloat ret = 0.0;\n\tvec3 q = rotate(p,  iTime-slowt, vec3(2.0, 1.0, 5.0));\n\t//ret = distSphere(p, 1.0);\n\tret = distBox(q, vec3(0.5, 0.5, 0.5));\n    \n    //ret = min(distBox(q+1.0, vec3(0.5, 0.5, 0.5)),distBox(q, vec3(0.3, 0.3, 0.3)));\n    \n\treturn ret;\n}\n\n \nvec3 getNormal(vec3 p)\n{\n\tfloat d = 0.0001;\n\t\n    return normalize(vec3(\n        distMap(p + vec3(  d, 0.0, 0.0)) - distMap(p + vec3( -d, 0.0, 0.0)),\n        distMap(p + vec3(0.0,   d, 0.0)) - distMap(p + vec3(0.0,  -d, 0.0)),\n        distMap(p + vec3(0.0, 0.0,   d)) - distMap(p + vec3(0.0, 0.0,  -d))\n    ));\n}\n \n\nfloat cc (float c )\n\t\n{\n\t  float r = floor( 2.0*(gl_FragCoord.x )*0.2) + iTime *0.08;\n\t\t  \n   \t  c =  0.99-(abs(sin(0.02*iTime-gl_FragCoord.y+r * 20.0)) * 0.5 ) * 1.5;\n\t\n\t  return  c+c;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 uv1 = uv;\n    vec2 uv2 = uv;\n    float t = iTime;\n     float tr = floor(1.+mod(t,3.0)*3.0);\n    \n      \n    float y  = mod(floor(uv1.y * iResolution.y / 2.0), 2.0);\n    float y1 = mod(floor(0.2-uv2.y * iResolution.y / 2.0), 2.0);\n    \n    \n    float x1 =abs(sin(10.*(uv1.y-uv1.x + iTime)*0.4)*10.2) * 0.005;\n      if (y1 == 0.0 )\n       fragColor =  texture(iChannel0, 0.80*(uv2 + vec2(-x1+0.10, 0.)));\n    else if(y==0.0)\n\t   fragColor =  texture(iChannel0, 0.80*(uv1 + vec2(x1+0.10, 0.)));\n    \n     \n     uv1 =  (2.*fragCoord.xy - iResolution.xy)/iResolution.y;\n       \n    \n  \n    vec3  cPos = vec3(0.0, 0.0, 3.0);\n\tvec3  cDir = vec3(0.0, 0.0,-1.0);\n\tvec3  cUp  = vec3(0.0, 1.0, 0.0);\n\tvec3  cSide= cross(cDir, cUp);\n\tfloat focus= 2.8;\n    \n    if (t>10.0) cPos = vec3(0.2+sin(t)*0.8 , 0.2+sin(t)*0.5, 5.0-abs(sin(t))*5.0);\n\t \n\tvec3 rPos = cPos;\n\tvec3 rDir = normalize(cSide*uv1.x + cUp*uv1.y + cDir*focus);\n\t\n\tconst int MAX_MARCH = 32;\n\tfloat dist;\n\tfloat total = 0.0;\n\tfor(int i = 0; i < MAX_MARCH; i++){\n\t\tdist = distMap(rPos);\n\t\ttotal += dist;\n\t\trPos = cPos + rDir*total;\n        \n        \n\t}\n\t \n\tvec3  color  = vec3(0.3*tr, 0.4*tr, 0.6*tr);\n\tvec3  normal = getNormal(rPos);\n\tfloat diff   = min(max(dot(lDir, normal), 0.1), 1.0);\n           \n\tif(dist<0.01){\n\t\tfragColor = vec4(color*diff, 1.0);\n        \n        \n  \n\t}\n\t \n //****\n    vec2 p = (fragCoord  - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    vec3 c = vec3(0.005, 0.0021, 0.009); // BG color\n\tvec3 lightCol = vec3(0.1 , 0.0, 0.4  );\n    \n    float w = texture(iChannel3,p).r;\n\tfloat l = (0.05+clamp(sin(iTime*20.) ,0.2,0.25+(w>0.1 ? 0.0 :0.1)))/length(p );\n                                                   // to do !\n    \n    vec3 pn = normalize(vec3(p,1.0));\n         \n    vec3 q = rotate(pn,  iTime-slowt, vec3(2.0, 1.0, 5.0));\n    \n     \n    \n    float timer = iTime+1.0;\n\t    timer =0.0;\n\tfor(int i = 0; i <40; ++i) {\n\t\t  \n\t\ttimer = iTime+1.0;\n        \tfloat t = 0.8 * 3.14 * float(i) / 5.+iTime  ;\n        \tfloat x = cos(t)*0.3 ;\n        \tfloat y = sin(t) ;\n\t\tfloat yy = sin(-t) ;\n        vec2 o = .5 * vec2(x   -  y, y);\n\t\tvec2 r = .5 * vec2(x   +  y, y);\n\t\tvec2 s = .5 * vec2(yy*1.5   , x*.6);\n\t\t\n\t\t// demo sequences :!\n        if(timer>10.0) {  c += 0.02 / (length(p -(o))) * lightCol * 0.2;}\n\t\tif(timer>15.0) {  c += 0.02 / (length(p -(r))) * lightCol * 0.2;}\n\t\tif(timer>20.0) {  c += 0.02 / (length(p -(s))) * lightCol * 0.2;}\n\t\t\n\t\tif(timer>=30.0) {lightCol = 0.9*vec3(0.0 , 0.8, 0.2  );}\n\t\t\n\t\tif(timer>=40.0) {lightCol = 0.8*vec3(0.5 , 0.8, 0.8  );}\n\t\tif(timer>=60.0) {lightCol = 0.8*vec3(0.5 , 0.8, 0.8  )+sin(t*30.0);}\n\t\t\n        if(timer>=80.0) {lightCol = 0.8*vec3(0.5 , 0.8, 0.8  )+sin(t*30.0);\n                        l = (0.05+clamp(sin(iTime*20.),\n                             0.1,0.25))/length(p-0.2*vec2(sin(t*0.9),cos(t*0.95)*1.5));\n                        }\n        \n        if(timer>=120.0) {c =c*c*0.5+sin(iTime)*.5; }\n\t\t\n\t}\n\t \n\t\n\tfragColor *= vec4(c*c*cc(c.b)+l-c/c,1.)*0.9;\n        \n        \n        \n        \n   //***** \n    vec2 kp = uv;\t \n  \t      \n    float ay=max(0.1,0.5-iTime/10.);\n  \n    if(kp.y<ay || kp.y>1.-ay+0.006) {fragColor =vec4(0.20,0.30,0.4,1.0);}\n       \n        \n} ","name":"Image","description":"","type":"image"}]}