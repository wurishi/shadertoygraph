{"ver":"0.1","info":{"id":"Ntd3zS","date":"1636288179","viewed":177,"name":"入门之路-12","username":"jialouluo","description":"模拟细胞运动","likes":1,"published":3,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float count = 40.0;\nvec2 Size = vec2(30.0, 40.0);\nvec3 colorBg = vec3(0.0);\nvec3 colorIn = vec3(1.0, 0.9, 0.16);\nvec3 colorOut = vec3(0.12, 0.59, 0.21);\nvec3 getPowerColor(vec2 power) {\n    float pMax = pow(1.12,3.2);\n    float pMin = 1.0 / pMax;\n    vec3 color = mix(colorBg, colorOut, smoothstep(pMin, pMax, power.y));\n    color = mix(color, colorIn, smoothstep(pMin, pMax, power.x));\n    return color;\n}\nvec2 getPower(vec2 st, vec2 pos, vec2 size) {\n    vec2 radius = (size * size) / dot(st - pos, st - pos);\n    radius = pow(radius, vec2(1.5));\n    return radius;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord;\n    vec2 pows = vec2(0.0);\n    vec2 pos;\n    vec3 col;\n    for(float i = 1.0; i < count; i++) {\n        pos = 0.5 *iResolution.xy *\n            vec2(sin(iTime*0.05 * fract(0.246 * i) + i * 3.6) *\n                          cos(iTime*0.05 * fract(0.374 * i) - i * fract(0.6827 * i))\n                          + 1.,\n                          cos(iTime*0.05 * fract(0.246 * i) + i * 3.6) *\n                          sin(iTime*0.05 * fract(.374 * i) - i * fract(0.6827 * i))\n                          + 1.);\n        pows += getPower(uv, pos, Size * (.5 + fract(0.2834 * i) * .5));\n    }\n    col = getPowerColor(pows);\n    // Output to screen\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}