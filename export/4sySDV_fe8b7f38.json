{"ver":"0.1","info":{"id":"4sySDV","date":"1466564143","viewed":179,"name":"tell me something","username":"bostelk","description":"inspired by weval","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi  3.14159\n#define tau 6.28318\n\n#define thickness 0.2\n#define time iTime\n\n#define rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n// source: https://iquilezles.org/articles/palettes\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( tau*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = -1. + 2. * fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n\n    uv.y += 10. + time * 0.2;\n\n    float theta = tau / 8. * cos(pi * (iMouse.y / iResolution.y));\n    \n    // mirror x, maths?\n    uv = uv * rot(theta * sign(uv.x));\n\n    float p = fract(uv.y / thickness);\n    \n    float d = smoothstep(0.,0.05, min(p, 1. - p));\n   \n    float row = floor((uv.y + 0.5) / (0.5 * thickness));\n    float t = abs(uv.x) + 0.005 * pi * row + time;\n\n\tvec3 c = palette(t, vec3(0.5, 0.5, 0.5),\n                        vec3(0.5, 0.5, 0.5),\n                        vec3(1.0, 1.0, 1.0),\n                        vec3(0.0, 0.1, 0.2));\n    vec3 rgb = d * c;\n    \n    fragColor = vec4(rgb,1.0);\n}\n","name":"Image","description":"","type":"image"}]}