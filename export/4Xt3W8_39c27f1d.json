{"ver":"0.1","info":{"id":"4Xt3W8","date":"1716414411","viewed":70,"name":"Sine dance","username":"synthc","description":"iterative sine noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvec3 lerp(in vec3 a,in vec3 b,float f )\n{\n\treturn a*f+b*(1.-f);\n}\n\nvoid mainImage( out vec4 C, in vec2 P )\n{\n\n    float t = iTime * 0.01;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ((P/iResolution.xy)-vec2(0.5,0.5))*4.;\n\n    // Time varying pixel color\n    float ang=atan(uv.x,uv.y);\n    float dis=sqrt(uv.x*uv.x+uv.y*uv.y);\n\n    vec3 col1 = normalize(vec3(uv.x,uv.y,1./dis))/2.;\n    vec3 col2 = vec3(uv.x,uv.y,0)/3.;\n\n    \n\n    vec3 col = mix(col1,col2,smoothstep(0.,1.,sin(dis+ t*33.)*.5+.5));\n  //  col=col2;\n\n    float l =1., il = 1.-l;\n\n    int n = 20;\n\n    int i;\n    float fi; \n    t=t*40.;\n    vec3 fo = vec3(t*0.97+cos(t*0.2+4.)+2.,\n                   t*1.0 +sin(t*1.1+6.)+1.,\n                   t*1.13+cos(t*.57+.1));\n    \n    vec3 f,g,ff;\n    for( ;i < n  ;i++) {\n        fi = float(i) / float(n),\n        \n        ff = vec3(11.+sin(t*0.128+4.+fi)*4., \n                  20.+sin(-t*0.5+2.+fi)*3.,\n                  13.+sin(t*0.345+2.+fi)*4.),\n        \n        f = sin( vec3(col.y*ff.x+t*.9,\n                      col.z*ff.y+t*.4,\n                      col.x*ff.z+4.-t*0.2)\n                     + fo ) *l ,\n                     \n        g = sin( vec3(col.z*1.4 - t*0.5,\n                      col.x*.4 + t*0.4,\n                      col.y*.40 + t*0.3)\n                      *0.5+0.5\n                     + fo ) *l ,\n        col= col*0.999+(f+g*0.5)*0.03;\n\n    }\n    \n    \n    col = abs(col);\n    col.x = col.x*.01+t*0.04+dis*.02;\n    col.y= (col.y * col.y )+.3;\n    col.z = col.z *1.5+.1;\n    \n    // Output to screen\n    C = vec4(hsv2rgb_smooth( col),1);    \n}","name":"Image","description":"","type":"image"}]}