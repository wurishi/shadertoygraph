{"ver":"0.1","info":{"id":"tt2yWV","date":"1595439666","viewed":261,"name":"Basic Mandelbrot set display","username":"Nrx","description":"Basic Mandelbrot set display.\n\nAn anti-aliased version can be seen [url=https://www.shadertoy.com/view/Wl2cDt]here[/url].","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C1\tvec2 (0.2, 0.55)\n#define C2\tvec2 (-0.743644, 0.131826)\n#define N\t900.0\n#define PI\t3.14159265358979\n\nmat2 Rotate (in float angle)\n{\n\tfloat c = cos (angle);\n\tfloat s = sin (angle);\n\treturn mat2 (c, s, -s, c);\n}\n\nfloat Mandelbrot (in vec2 c)\n{\n\tvec2 m;\n\n\t#ifndef NO_OPTIM\n\tm = vec2 (c.x + 1.0, c.y);\n\tif (dot (m, m) < 0.0625) {\n\t\treturn 1.0;\n\t}\n\n\tm = vec2 (c.x - 0.25, c.y);\n\tfloat l = dot (m, m);\n\tif (c.x < sqrt (l) - 2.0 * l + 0.25) {\n\t\treturn 1.0;\n\t}\n\t#endif\n\n\tm = c;\n\tfor (float n = 0.0; n < N; ++n) {\n\t\tif (dot (m, m) > 256.0) {\n\t\t\treturn n / N;\n\t\t}\n\t\tm = vec2 (m.x * m.x - m.y * m.y, 2.0 * m.x * m.y) + c;\n\t}\n\treturn 1.0;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 c = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n\tfloat time = iTime * 0.1;\n\tfloat zoom = 1.5 * pow (0.5, 18.0 * (0.5 - 0.5 * cos (time * 2.0)));\n\tfloat angle = PI * 6.0 * cos (time);\n\tvec2 translate = mix (C1, C2, smoothstep (-0.4, 0.4, sin (time)));\n\n\tc = zoom * Rotate (angle) * c + translate;\n\tfloat m = Mandelbrot (c);\n\tfragColor = vec4 (m, pow (m, 0.6), pow (m, 0.3), 1.0);\n}","name":"Image","description":"","type":"image"}]}