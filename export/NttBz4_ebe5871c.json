{"ver":"0.1","info":{"id":"NttBz4","date":"1662737261","viewed":165,"name":"Outrun Scene","username":"nethe550","description":"A simple outrun-inspired scene.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["retro","outrun","vaporwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float grid(vec2 uv, float t) {\n    vec2 size = vec2(uv.y, uv.y * uv.y * 0.2) * 0.01;\n    uv += vec2(0.0, iTime * 4.0 * (t + 0.05));\n    uv = abs(fract(uv) - 0.5);\n \tvec2 lines = smoothstep(size, vec2(0.0), uv);\n \tlines += smoothstep(size * 5.0, vec2(0.0), uv) * 0.4 * t;\n    return clamp(lines.x + lines.y, 0.0, 3.0);\n}\n\nfloat sun(vec2 uv, float t) {\n \tfloat val = smoothstep(0.3, 0.25, length(uv));\n \tfloat bloom = smoothstep(2.5, 0.3, length(uv));\n    float glow = smoothstep(2.0, 0.0, length(uv) - 0.125);\n    float cut = 3.0 * sin((uv.y + iTime * 0.1 * (t + 0.02)) * 100.0) \n\t\t\t\t+ clamp(uv.y * 14.0 + 1.0, -6.0, 6.0);\n    cut = clamp(cut, 0.0, 1.0);\n    return clamp(val * cut, 0.0, 1.0) + bloom * 0.6 + glow * 0.4;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float t = 1.0;\n    if (iMouse.x > 1.0 && iMouse.y > 1.0) t = iMouse.y / iResolution.y;\n    else t = 0.8;\n    \n    float fog = smoothstep(0.1, -0.02, abs(uv.y + 0.2));\n    vec3 col = vec3(0.1, 0.1, 0.2);\n    if (uv.y < -0.2) {\n        vec2 uvA = uv;\n        uvA.y = 3.0 / (abs(uvA.y + 0.2) + 0.05);\n        uvA.x *= uvA.y;\n        float gridVal = grid(uvA, t);\n        col = mix(col, vec3(1.0, 0.5, 1.0), gridVal);\n    }\n    else {\n        vec2 uvB = uv;\n        uvB.y -= t * 1.1 - 0.51;\n        col = vec3(1.0, 0.25, 1.0);\n        float sunVal = sun(uvB, t);\n        col = mix(col, vec3(1.0, 0.4, 0.1), uvB.y * 2.0 + 0.2);\n        col = mix(vec3(0.0, 0.0, 0.0), col, sunVal);\n        col += vec3(0.0, 0.1, 0.2);\n    }\n\n    col += fog * fog * fog;\n    col = mix(vec3(col.r, col.r, col.r) * 0.5, col, t * 0.7);\n\n    fragColor = crt(fragCoord, col, fragCoord.xy / iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float warp = 0.75;\nfloat scan = 0.5;\n\nvec4 crt(vec2 fragCoord, vec3 col, vec2 uv) {\n    vec2 dc = abs(0.5 - uv);\n    dc *= dc;\n    \n    uv.x -= 0.5; \n    uv.x *= 1.0 + (dc.y * (0.3 * warp));\n    uv.x += 0.5;\n    \n    uv.y -= 0.5; \n    uv.y *= 1.0 + (dc.x * (0.4 * warp));\n    uv.y += 0.5;\n\n    if (uv.y > 1.0 || uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0) \n        return vec4(0.0, 0.0, 0.0, 1.0);\n    else {\n        return vec4(mix(col, vec3(0.0), abs(sin(fragCoord.y) * 0.5 * scan)), 1.0);\n    }\n}","name":"Common","description":"","type":"common"}]}