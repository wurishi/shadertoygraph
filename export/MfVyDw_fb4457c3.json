{"ver":"0.1","info":{"id":"MfVyDw","date":"1731973817","viewed":131,"name":"Borbüê¶","username":"chronos","description":"Borbüê¶","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d","bounce","stretch","softbody","squish","borb"],"hasliked":0,"parentid":"XcGyWm","parentname":"Squishy Stretchy"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n/*\n    Borb üê¶ by chronos\n    --------------------------------------------------------------------------\n\n    It's a Borbüê¶\n    \n    Say hello to the Borb :)\n    \n    --------------------------------------------------------------------------\n\n    self link: https://www.shadertoy.com/view/MfVyDw\n*/\n\nfloat gaussian(vec2 p)\n{\n    return exp(-dot(p,p)*2.);\n}\n\nfloat smin(float a, float b, float k)\n{\n    return -k*log2( exp2( -a/k ) + exp2( -b/k ) );\n}\n\nvec2 stretchy(vec2 p, mat2 R, vec2 stretch)\n{\n    return R * ((transpose(R) * p) / stretch);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float zoom = 2.;\n    vec2 uv = zoom*(2. * fragCoord - iResolution.xy)/iResolution.y;\n    vec2 mouse = zoom*(2. * iMouse.xy - iResolution.xy)/iResolution.y;\n    float ps = zoom * 2./iResolution.y;\n    \n    if(length(iMouse.xy) < 10.) mouse = 1.9*zoom*vec2(cos(iTime*.5), .5*sin(iTime*.5)) * iResolution.xy/iResolution.y;\n\n    vec3 color = mix(\n        mix(vec3(0.2,.2,.1), vec3(0.5,0.4,0.1), -uv.y/zoom),\n        mix(vec3(0.1,.2,.2), vec3(0.,0.1,0.3), uv.y/zoom)+.2,\n        smoothstep(-0.1, .1, uv.y+ sin(uv.x*.75)*.125+ cos(0.5+uv.x*2.75)*.0125));\n\n\n    vec2 p1 = vec2(0., -1.2 - sin(iTime) * .05);\n    vec2 p2 = vec2(0., 3.5*(2.*pow((min(1.5*iTime,1.)-.75),2.)-0.125) + sin(iTime) * .05);\n\n    // Shadow\n    color *= 1.-gaussian(stretchy(uv-vec2(0, -0.5), mat2(1,0,0,1), vec2(1.4+sin(iTime)*.2, .2)))\n        *smoothstep(0., .4, iTime);\n    color += gaussian(.5*(uv-vec2(1.5, 2.)));\n\n    vec2 collide_dir = normalize(p2-p1);\n    vec2 ortho_dir = collide_dir.yx * vec2(-1, 1);\n    \n    mat2 R = mat2(collide_dir, ortho_dir);\n\n    float center_dist = distance(p1, p2);\n    \n    vec2 stretch = vec2(1,0) + vec2(0,1) / smin(.25*center_dist+.75, 1., .2);\n    \n    float field = gaussian(stretchy(uv - p1, R, stretch)) - gaussian(stretchy(uv - p2, R, stretch))\n    \n    + .08*gaussian(stretchy(uv - mouse, R, stretch));\n        \n    color = clamp(color, 0., 1.);\n    \n    float dist = sqrt(1.-log(-field/smin(center_dist, 1., 0.2)));\n    \n    float ps2 = length(fwidth(dist));\n    vec3 borb_color = vec3(.84,.18, .22);\n    vec3 body_color = borb_color * (0.95+0.05*smoothstep(sqrt(3.),0.9*sqrt(3.),dist));\n    body_color *= 0.45 + .55 *sqrt( smoothstep(-0.25, -.10, uv.y/zoom-p2.y/zoom));\n    color = mix(color, body_color, smoothstep(ps2, 0., dist-sqrt(3.)));\n        \n    vec2 headpos = vec2(0.,.75)+p2*.5;\n    float headsize = .5;\n    float head = length(uv - headpos)-headsize;\n    color = mix(color, borb_color, smoothstep(ps*2., ps, head));\n    \n    vec2 featherpos = vec2(0.,1.25)+p2*.5;\n    float feathersize = .1;\n    float feather = length(mat2(1,1,-1,1)*sqrt(2.)*(uv - featherpos)*vec2(2.5,.65))-feathersize;\n    color = mix(color, borb_color, smoothstep(ps*2., ps, feather));\n    \n    vec2 eyepos = vec2(0.2,1.)+p2*.5;\n    float eyesize = .05;\n    vec2 eye_uv = uv;\n    eye_uv.x = abs(eye_uv.x);\n    \n    float blink_t = fract(iTime*.5);\n    float blink =\n        step(.35, blink_t) - step(.4, blink_t) +\n        step(.45, blink_t) - step(.5, blink_t)\n        ;\n    \n    float eyes = length((eye_uv-eyepos)*vec2(1,1.+2.*blink))-eyesize;\n    color = mix(color, vec3(.0), smoothstep(ps*2., ps, eyes));\n\n    vec2 beakpos = vec2(0.0,.9)+p2*.5;\n    float beaksize = .075;\n    vec2 beak_uv = abs(uv-beakpos);\n    \n    float beak = max(beak_uv.x, beak_uv.y)-beaksize + step(beaksize, beak_uv.x+beak_uv.y);\n    color = mix(color, vec3(.9, .9, 0), smoothstep(ps*2., ps, beak));\n        \n    color *= color;\n    color *= 1.-length(uv)*.15;\n    color = tanh(color);\n    color = sqrt(color);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}