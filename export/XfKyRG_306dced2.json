{"ver":"0.1","info":{"id":"XfKyRG","date":"1732549626","viewed":61,"name":"Grating Lobes","username":"EdgarDorausch","description":"...","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["phase","beamformer","syntheticaperture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define product(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n#define conjugate(a) vec2(a.x,-a.y)\n#define divide(a, b) vec2(((a.x*b.x+a.y*b.y)/(b.x*b.x+b.y*b.y)),((a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)))\n#define cexp(p) vec2(cos(p), sin(p))\n\nfloat circle(vec2 uv, vec2 center, float radius) {\n    float rad = length(uv-center);\n    float val = clamp(radius-rad, 0.0, 1.3/iResolution.x)*iResolution.x/1.3;\n    \n    return val;\n}\n\n\nvec3 rbcolormap(float val) {\n\n    return vec3(clamp(val, 0.0, 1.0), 0.0, clamp(-val, 0.0, 1.0));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    vec2 amp = vec2(0.0);\n    \n    float spacing = 0.02*(1.0+sin(iTime*0.5))/2.0;\n    int M = 10;\n    \n    float sources = 0.0;\n    \n    // Time varying pixel color\n    for(int i=0; i<M; i++){\n    \n        vec2 src_pos = vec2(0.8+spacing*float(i), 0.1);\n        float r = length(uv - src_pos);\n    \n        float lambda = 0.0020;\n        float c = 0.10;\n        float f = c/lambda;\n        amp += cexp(r/lambda-f*iTime)/(r+0.7)*0.9;\n        \n        sources += circle(uv, src_pos, 0.005);\n    }\n    \n    \n    vec3 col = rbcolormap(length(amp)/float(M));\n    \n    col.g = sources;\n    \n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}