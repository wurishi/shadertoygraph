{"ver":"0.1","info":{"id":"MtdyR7","date":"1532087451","viewed":440,"name":"mod weave general oriental","username":"ollj","description":"klick mouse!\n\na general weave,\n//mouse.x sets angle, wich also increases number of lines\nmouse.y sets offsets (and line width), which can be tricky, because offsets are uniform among al braids, disregarding angles and trigonometry.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["pattern","weave","generalization","oriental"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\n\n// variant of https://www.shadertoy.com/view/MlXcWn\n//   https://www.shadertoy.com/view/ltfcWn\n\n#define pi acos(-1.)\n\n//iq.HSV.Smooth.seesaw: https://www.shadertoy.com/view/MsS3Wc\nvec3 hsv2rgb(in vec3 c){vec3 r=clamp(abs(mod(c.x*6.+vec3(0,4,2),6.)-3.)-1.,0.,1.);\n return c.z*mix(vec3(1.),r*r*(3.-2.*r),c.y);}\n\nvoid mainImage(out vec4 O,vec2 U \n){float N=19.*iMouse.x/iResolution.x// number of axis //oriental weave-tilings use integer axes.\n ,S=10.,a=pi/(1.+N),h=iResolution.y,l=0.,d;U=(U/h-.5)*S;O-=O\n ;for(float i=0.;i<N;i++\n){float c=smoothstep(S/h,0.,abs(fract(U.x)-iMouse.y/iResolution.y-.1)-.1)//line pattern\n     *(.7+.3*sin(pi*((U.y*sqrt(3.)+floor(U.x)))))//waveform modulate distance\n  ;if(c>O.x){O.xyz=max(O.xyz,c);d=i;}//keep smallest distance\n ;U*=mat2(cos(a),-sin(a),sin(a),cos(a))//rotate(kifs iteration)\n ;O.xyz*=hsv2rgb(vec3(1.+d*6./2./pi/(N+1.),1,1));}}//set hue by d,multiply by hue\n\n\n\n\n\n\n\nvoid mainImage2(out vec4 O,vec2 U \n){float N=19.*iMouse.x/iResolution.x// number of axis //oriental weave-tilings use integer axes.\n ,S=10.     \n ,a=pi/(1.+N)\n ,h=iResolution.y\n ;U=(U/h-.5)*S\n ;O-=O\n ;float \n ;for(float i=0.;i<N;i++)O=max(O,smoothstep(S/h,0.,abs(fract(U.x)-iMouse.y/iResolution.y-.1)-.1)    // strip\n *(.7+.3*sin(pi*((U.y*sqrt(3.)+floor(U.x)))))//shading wave\n),U*=mat2(cos(a),-sin(a),sin(a),cos(a))\n ;}\n\n","name":"Image","description":"","type":"image"}]}