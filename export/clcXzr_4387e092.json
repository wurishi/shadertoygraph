{"ver":"0.1","info":{"id":"clcXzr","date":"1684961223","viewed":88,"name":"Basic patterns 5 - color palette","username":"rafaelbeckel","description":"Playing with some of the basic patterns I've got from Char Stiles:\nhttps://www.youtube.com/watch?v=0kcbWQg99TA\n\nBasic patterns 1, 2, 3 & 4 - link in comments","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["mix","color","palette","basics"],"hasliked":0,"parentid":"ct3Xzn","parentname":"Basic patterns 4  - swirl"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// TAU > PI https://tauday.com/tau-manifesto\n#define TAU 6.283185307179586476925286766559\n\n// See https://iquilezles.org/articles/palettes for more information\n// Check https://www.shadertoy.com/view/ll2GD3 for reference palettes\n// \n// An explanation about how this function works is in this video\n// at 57:02 https://youtu.be/0kcbWQg99TA?t=3422 by Char Stiles\n// \n// To see this function graphed out go to \n// https://www.desmos.com/calculator/rz7abjujdj\n//\n// As t moves from 0 to 1, the cosine oscillates with a defined period and phase,\n// then the result is scaled and biased by the brightness and contrast inputs.\nvec3 pal( in float t, in vec3 brightness, in vec3 contrast, in vec3 osc, in vec3 phase )\n{\n    return brightness + contrast * cos( TAU * (osc*t+phase) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Check Basic patterns 1: https://www.shadertoy.com/view/dtVGDt\n    vec2 normCoord = fragCoord/iResolution.xy;\n    vec2 uv = -1. + 2. * normCoord;\n    float time = iTime/4.;\n    \n    // Check Basic patterns 2: https://www.shadertoy.com/view/mtVGDt\n    uv.x *= iResolution.x/iResolution.y;\n    float radius = length(uv);\n    float rings = sin(time - radius * 15.);\n   \n    // Check Basic patterns 3: https://www.shadertoy.com/view/mtVGDd\n    float radar = sin(atan(uv.x,uv.y) + time);\n    \n    // Check Basic patterns 4: https://www.shadertoy.com/view/ct3Xzn\n    float swirl = sin(rings + radar + time);\n    \n    // Just play with the values and have fun!\n    vec3 brightness = vec3(mix(.1, .7, (sin(iTime + length(uv*20.))+1.)/2.));\n    vec3 contrast = vec3(mix(.2, .5, (sin(time)+1.)/2.));\n    vec3 osc = vec3(.4,.9,.2);\n    vec3 phase = vec3(0.7,0.4,0.1);\n    vec3 r = pal(swirl, brightness, contrast, osc, phase);\n    \n    // Output color to screen\n    fragColor = vec4(r, 1.);\n}","name":"Image","description":"","type":"image"}]}