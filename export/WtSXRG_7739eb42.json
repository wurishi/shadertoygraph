{"ver":"0.1","info":{"id":"WtSXRG","date":"1566276675","viewed":123,"name":"Pasta Spirograph","username":"mosaic","description":"The XOR function is from https://www.shadertoy.com/view/Xsc3WX  \nThis gave each rounded square some 3d shading, and a slight shadow on the layer below it.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat csg_nand (float a, float b) {\n    return -max(a,b);\n}\n\n// join two NANDs together\nfloat csg_not (float x) {\n    return csg_nand(x, x);\n}\n\n// NOT(NAND(A,B))\nfloat csg_and (float a, float b) {\n    float o = csg_nand(a, b);\n    return csg_nand(o, o);\n}\n\n// aka A AND NOT B, NOT(NAND(A,NOT(B)))\nfloat csg_sub (float a, float b) {\n    float o = csg_nand(a, csg_nand(b, b));\n    return csg_nand(o, o);\n}\n\n// NAND(NOT(A),NOT(B))\nfloat csg_or (float a, float b) {\n    return csg_nand(\n        csg_nand(a,a),\n        csg_nand(b,b));\n}\n\n// NAND(NAND(A,NAND(A,B)),NAND(B,NAND(A,B)))\nfloat csg_xor (float a, float b) {\n    float o = csg_nand(a, b);\n    return csg_nand(\n        csg_nand(a, o),\n        csg_nand(b, o));\n}\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat sdRoundBox( in vec2 p, in vec2 b, in float r ) \n{\n    vec2 q = abs(p) - b;\n    return   abs(min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r)-r/3.;\n}\n\nfloat loop( in vec2 p, in vec2 b, in float r )\n{\n    float s = 0.0;\n    \n    for(float i = -8.0;i<7.0;i+=1.0)\n    {\n                \n        s=min(s,sdRoundBox(p*rotate2d(i*iTime/8.),b,r/i));\n        s=csg_xor(s,sdRoundBox(p*rotate2d(i*iTime/8.),b,r/i));\n            }\n\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec2 ra = vec2(0.5,.5);// + 0.3*cos( iTime + vec2(0.0,1.57) + 0.0 );\n\n\tfloat d = loop( p, ra, .2);\n\n    vec3 col = vec3(1.0) -pow(d,.1);//*vec3(0.1,0.4,0.7);\n    //vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\t//col *= 1.0 - exp(-2.0*abs(d));\n\t//col *= 0.8 + 0.2*cos(120.0*d);\n\t//col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n\t//fragColor = mix(vec4(col,1.0),vec4(.9,.8,.0,.0),.4);\n    fragColor =vec4(1.)-(vec4(col,1.0))+vec4(.2,.2,.0,.0);\n}","name":"Image","description":"","type":"image"}]}