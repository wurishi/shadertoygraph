{"ver":"0.1","info":{"id":"mdBczt","date":"1688034962","viewed":35,"name":"kenan_SDF","username":"msh1847908539","description":"sdf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float drawCircle(in vec2 p, in vec2 offset,in float r) \n{\n    return length(p-offset)-r;\n}\n//并集\nfloat opUnion( float d1, float d2 ) { return min(d1,d2); }\n//差集\nfloat opSubtraction( float d1, float d2 ) { return max(-d1,d2); }\n//交集\nfloat opIntersection( float d1, float d2 ) { return max(d1,d2); }\n\n//平滑并集\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n//平滑差集\nfloat opSmoothSubtraction( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2+d1)/k, 0.0, 1.0 );\n    return mix( d2, -d1, h ) + k*h*(1.0-h); }\n//平滑交集\nfloat opSmoothIntersection( float d1, float d2, float k ) {\n    float h = clamp( 0.5 - 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) + k*h*(1.0-h); }\n\n//测试\nfloat opSmoothUnionTest( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ); }\n\nfloat smin( float d1, float d2, float k )\n{\n    float h = max( k-abs(d1-d2), 0.0 )/k;\n    return min( d1, d2 ) - h*h*h*k*(1.0/6.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float d1 = drawCircle(p,vec2(0.0,0.7*sin(iTime)), 0.3);\n    float d2 = drawCircle(p, vec2(0.0),0.3);    \n    //float d = opSubtraction(d1,d2);\n    float d = smin(d1,d2,0.15);\n    //float d = opSmoothUnion(d1,d2,0.15);\n    \n    vec3 col = vec3(1.0);\n    if(d<-0.005) col = vec3(1.0,0.0,0.0);\n    if(d>0.005) col = vec3(0.0,1.0,0.0);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}