{"ver":"0.1","info":{"id":"tsVBWK","date":"1608009549","viewed":635,"name":"Small Bang Theory","username":"Kali","description":"Naive particle system. Also a cheap explosion sound.","likes":22,"published":1,"flags":40,"usePreview":0,"tags":["explosion","particles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 o, vec2 fragCoord )\n{\n\tvec2 uv = fragCoord/iResolution.xy;\n    o = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nvec2 mainSound( in int samp, float time )\n{\n    float t = mod(time,10.);\n    t*=t*2.;\n\tfloat w=fract(t*50.);\n\tw+=fract(t*72.);\n\tw+=fract(t*90.);\n    w-=1.;\n    w=pow(abs(w),3.)*sign(w);\n    return vec2(w*exp(-2.*t));\n}","name":"Sound","description":"","type":"sound"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define particles 500.\nvec3 c1 = vec3(0.,0.3,1.);\nvec3 c2 = vec3(1.,0.5,.3);\n\nmat2 rot(float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\n\nvec3 noise(float n) {\n\tvec3 t = texture(iChannel0,vec2(floor(n)/particles)).xyz;\n    vec3 u = texture(iChannel0,vec2(ceil(n)/particles)).xyz;\n    return mix(t,u,fract(n));\n}\n\nvec3 render_points(vec2 uv) {\n    uv*=.8;\n    vec3 c=vec3(0.);\n\tfor (float i=0.; i<particles; i++) {\n\t\tvec3 point=noise(i+floor(iTime/10.)*.1)-.5;\n        float a=4.*smoothstep(0.,7.,mod(iTime,10.));\n        point.xz*=rot(a);\n        point.yz*=rot(a*.2);\n\t\tpoint=pow(abs(point),vec3(1.3))*sign(point);\n        point*=.2+mod(iTime,10.)*.4;\n        float e=pow(mod(dot(point,point)*.05-iTime*.01,.1)/.1,1.5);\n        point.xy/=max(0.,1.5+point.z);\n        point.x*=1.5;\n\t\tfloat l=max(0.,.1-distance(uv,point.xy))/.1;\n        vec3 col=mix(c1,c2,e)*e;\n        c+=pow(l,20.)*col*2.;\n\t\tc+=pow(l,40.)*col*5.;\n        c+=pow(max(0.,1.-length(uv)),15.)*.03*c2*pow(mod(10.-iTime,10.)*.1,10.);\n\t}\n\treturn c;\n}\n\n\nvoid mainImage( out vec4 o, vec2 fragCoord )\n{\n\tvec2 uv=fragCoord/iResolution.xy;\n    vec3 feedback = texture(iChannel1,uv).rgb;\n    uv-=.5;\n\tuv.x*=iResolution.x/iResolution.y;\n    vec3 c=render_points(uv);\n    o=vec4(c,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}