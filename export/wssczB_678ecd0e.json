{"ver":"0.1","info":{"id":"wssczB","date":"1585082214","viewed":591,"name":"Curl transition","username":"WAHa_06x36","description":"A quick test for a transition effect.","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["transition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float triangle(float x) {\n    return 1.0 - abs(fract(x) - 0.5) * 2.0;\n}\n\nfloat smootherstep(float x) {\n    return x * x * x * (x * (x * 6.0 - 15.0) + 10.0);\n}\n\nfloat endPosition(float radius, float offset, float rollPosition) {\n    float rollLength = radius * 3.141592 / 2.0;\n    float onRoll = min(offset + 1.0 - rollPosition, rollLength);\n\treturn rollPosition + radius * sin(onRoll / radius);\n}\n\nfloat findRollPosition(float radius, float offset) {\n    float lower = 1.0 - radius;\n    float upper = 1.0;\n\n    float mid = 0.0;\n    for(int i = 0; i < 16; i++) {\n        mid = (upper + lower) / 2.0;\n        float position = endPosition(radius, offset, mid);\n        if(position > 1.0) {\n            upper = mid;\n        } else {\n            lower = mid;\n        }\n    }\n    return mid;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = fragCoord/iResolution.xy;\n   \tfloat t = iTime / 5.0;\n    float offset = smootherstep(triangle(t));\n\n    float radius = 0.2;\n    float flatLength = 1.0 - radius;\n    float rollLength = radius * 3.141592 / 2.0;\n    float fullLength = flatLength + rollLength;\n\n    offset *= fullLength;\n\n    float rollPosition = findRollPosition(radius, offset);\n\n    vec2 uv = p;\n\tfloat shadow;\n    \n    if(p.x < rollPosition) {\n        uv.x -= offset;\n        shadow = 1.0;\n    } else {\n        float a = asin((p.x - rollPosition) / radius);\n   \t    uv.x = a * radius - offset + rollPosition;\n\t\tuv.y = (p.y - 0.5) / (0.2 * cos(a) + 0.8) + 0.5;\n        shadow = 0.5 * cos(a) + 0.5;\n    }\n\n    vec4 col = texture(iChannel0, uv);\n    col *= step(-uv.x, 0.0);\n    col *= step(-uv.y, 0.0);\n    col *= step(uv.y, 1.0);\n    col *= shadow;\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}