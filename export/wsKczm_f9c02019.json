{"ver":"0.1","info":{"id":"wsKczm","date":"1602531827","viewed":112,"name":"cycle","username":"rileyjshaw","description":"Shadertoy hello world!","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["luminance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float max_lum = 1.;\nfloat half_range = .15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1).\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color.\n    vec3 col = texture(iChannel0, vec2(1.-uv.x,uv.y)).rgb;\n    \n    // Adjust for perceptual weights, find the luminance.\n    col *= vec3(0.2126, 0.7152, 0.0722);\n    // TODO: this max() causes an ugly flash at post = max_lum Â± half_range.\n\tfloat lum = min(max_lum, col.r + col.g + col.b);\n    \n    float slowTime = iTime / 9.;\n    \n    // Darken anything with luminance within half_range of the post which moves [0, max_lum].\n    float post = mod(slowTime, max_lum);\n    \n    float delta = abs(lum - post);\n    bool bw = delta > half_range && delta < max_lum - half_range;\n    \n    // Output to screen\n    fragColor = vec4(bw, bw, bw, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}