{"ver":"0.1","info":{"id":"slcfDN","date":"1663090491","viewed":139,"name":"dot mask crt","username":"maple","description":"it's a dot mask crt","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * ------------------------------------------------------------\n * \"THE BEERWARE LICENSE\" (Revision 42):\n * maple <maple@maple.pet> wrote this code. As long as you retain this \n * notice, you can do whatever you want with this stuff. If we\n * meet someday, and you think this stuff is worth it, you can\n * buy me a beer in return.\n * ------------------------------------------------------------\n */\n\nfloat circle(in vec2 _st, in float _radius){\n    vec2 dist = mod(_st,vec2(3.0,2.0))-vec2(0.5);\n\treturn 0.05+1.-smoothstep(_radius-(_radius*1.2),\n                         _radius+(_radius*0.8),\n                         dot(dist,dist)*4.6);\n}\n\nconst float HResolution = 150.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 mask_uv = fragCoord/vec2(iResolution.y) * vec2(HResolution);\n    vec2 mask_r = mask_uv;\n    vec2 mask_g = mask_uv - vec2(1.0,0.0);\n    vec2 mask_b = mask_uv - vec2(2.0,0.0);\n\n    vec3 red = (vec3(circle(mask_r,0.9)) + vec3(circle(mask_r-vec2(1.5, 1),0.9))) * vec3(1,0,0);\n    vec3 grn = (vec3(circle(mask_g,0.9)) + vec3(circle(mask_g-vec2(1.5, 1),0.9))) * vec3(0,1,0);\n    vec3 blu = (vec3(circle(mask_b,0.9)) + vec3(circle(mask_b-vec2(1.5, 1),0.9))) * vec3(0,0,1);\n    vec3 col_mask = red + grn + blu;\n    \n    vec2 quant_factor = vec2(1.0) / vec2(iResolution.x, HResolution);\n    vec2 uv = floor((fragCoord/iResolution.xy) / quant_factor) * quant_factor;\n    vec3 col = texture(iChannel0, uv).rgb * col_mask * vec3(1.8);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}