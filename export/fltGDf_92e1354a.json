{"ver":"0.1","info":{"id":"fltGDf","date":"1636854090","viewed":341,"name":"Cinema Shader","username":"ladberg","description":"Adds in realistic bokeh, vignette, and some color changes.","likes":4,"published":1,"flags":2,"usePreview":0,"tags":["webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAXBOKEHRADIUS 20.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Bokeh\n    float bokehRadius = max(MAXBOKEHRADIUS * length(uv - 0.5), 1.0);\n    float count = 0.0;\n    for (float i = fragCoord.x - bokehRadius; i <= fragCoord.x + bokehRadius; i += 1.0) {\n        for (float j = fragCoord.y - bokehRadius; j <= fragCoord.y + bokehRadius; j += 1.0) {\n            float distFromCenter = distance(fragCoord, vec2(i, j));            \n            float mult = 1.0 - smoothstep(0.95, 1.0, distFromCenter / bokehRadius);\n            \n            fragColor += texture(iChannel0, vec2(i, j) / iResolution.xy) * mult;\n            count += mult;\n        }\n    }\n    fragColor = fragColor / count;\n    \n    // Vignette\n    fragColor = pow(fragColor * 0.5, vec4(1.0 + 2.0*smoothstep(0.3, 0.9, length(uv - 0.5)))) * 2.0;\n    \n    // JJ Abrams bluification and tone mapping\n    fragColor.rgb = pow(fragColor.rgb, vec3(0.75, 0.75, 0.5));\n}","name":"Image","description":"","type":"image"}]}