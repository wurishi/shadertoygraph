{"ver":"0.1","info":{"id":"stcczs","date":"1660323658","viewed":75,"name":"Spinner_Example","username":"ercantomac","description":"Loading Spinner","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spinner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    float timeCoefficient = sin(iTime), circleRadius = 0.3, borderWidth = 0.005, tmp = 2.0;\n    borderWidth += abs(cos(iTime * 1.5)) * (0.015 - borderWidth);\n    circleRadius += abs(sin(iTime)) * (0.4 - circleRadius);\n    tmp += (cos(iTime) + 1.0) * (20.0 - tmp);\n    // move space from the center to the vec2(0.0)\n    st -= vec2(0.5);\n    // rotate the space\n    st *= rotate2d(iTime * 1.5 * PI);\n    // move it back to the original place\n    st += vec2(0.5);\n    \n\n    fragColor = vec4(borderWidth * 10.0, \n                        distance(st, vec2(0.5, 0.5)) > ((circleRadius / 2.0) - borderWidth) && \n                        distance(st, vec2(0.5, 0.5)) < ((circleRadius / 2.0) + borderWidth) && \n                        (st.x > (0.5 + (circleRadius / tmp)) || st.x < (0.5 - (circleRadius / tmp))), \n                        circleRadius / 2.0, \n                        1.0);\n}\n","name":"Image","description":"","type":"image"}]}