{"ver":"0.1","info":{"id":"MddXz4","date":"1458237133","viewed":134,"name":"Multipass test keyboard","username":"aaecheve","description":"Multipass","likes":2,"published":1,"flags":48,"usePreview":0,"tags":["game","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 readMemory(vec2 coords)\n{\n    return texture(iChannel0, (coords + 0.5)/iChannelResolution[0].xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 data1 = readMemory(vec2(0,0));\n    \n    vec2 pos1 = data1.xy;\n    \n    vec4 col = vec4(0,0,0,1);\n    if (distance(pos1, fragCoord.xy) < 20.0)\n        col = vec4(0,0,1,1);\n    \n\tfragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEY_LEFT\t37.5/256.0\n#define KEY_UP\t\t38.5/256.0\n#define KEY_RIGHT\t39.5/256.0\n#define KEY_DOWN\t40.5/256.0\n\nvec4 readMemory(vec2 coords)\n{\n    return texture(iChannel0, (coords + 0.5)/iChannelResolution[0].xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Read data\n    vec4 data1 = readMemory(vec2(0,0));\n    vec2 pos1 = data1.xy;\n    \n    //Set initial values\n    if(pos1.x == 0.0 && pos1.y == 0.0)\n       pos1 = 0.5*iChannelResolution[0].xy; \n    \n    // read keyboard\n    float kUp = texture( iChannel1, vec2(KEY_UP,0.0) ).x;\n    float kRight = texture( iChannel1, vec2(KEY_RIGHT,0.0) ).x;\n    float kDown = texture( iChannel1, vec2(KEY_DOWN,0.0) ).x;\n    float kLeft = texture( iChannel1, vec2(KEY_LEFT,0.0) ).x;\n    \n    // move left\n    if (kLeft > 0.5) {\n        pos1.x -= 1.0;\n    }\n    // move right\n    if (kRight > 0.5) {\n        pos1.x += 1.0;\n    }\n\n    // move up\n    if (kUp > 0.5) {\n       pos1.y += 1.0;\n    }\n    // move down\n    if (kDown > 0.5) {\n        pos1.y -= 1.0;\n    }      \n\n    \n    //Write data\n    if(fragCoord.x < 1.0 && fragCoord.y < 1.0) \n    \tfragColor = vec4(pos1.x, pos1.y, 0, 0);\n    else\n       discard;\n}","name":"Buf A","description":"","type":"buffer"}]}