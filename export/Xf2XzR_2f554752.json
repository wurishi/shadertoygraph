{"ver":"0.1","info":{"id":"Xf2XzR","date":"1705968609","viewed":125,"name":"game of life attempt","username":"possan","description":"game of life","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["life"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int act = isOddFrame(iFrame);\n    vec2 uv = fragCoord/iResolution.xy;\n    if (act == 1) {\n       fragColor = texture(iChannel1, uv);\n    } else {\n       fragColor = texture(iChannel0, uv);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int act = isOddFrame(iFrame);\n    fragColor = iterate2(\n        iChannel1, iChannel0, iChannel2,\n        fragCoord.xy, iResolution.xy, act, iMouse, iTime);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    int act = 1 - isOddFrame(iFrame);\n    fragColor = iterate2(\n        iChannel0, iChannel1, iChannel2,\n        fragCoord.xy, iResolution.xy, act, iMouse, iTime);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"int isOddFrame(int frame) {\n    int o = ((frame % 2) >= 1) ? 1 : 0;\n    return o;\n}\n\nint binSamp(sampler2D prev, vec2 uv) {\n    vec4 o = texture(prev, uv);\n    return (o.r > 0.5) ? 1: 0;\n}\n\nint lifeRules(int neighs, int self) {\n    if (self == 1) {\n        return (neighs == 2 || neighs == 3) ? 1 : 0;\n    }\n    return (neighs == 3) ? 1 : 0;\n}\n\nint countNeighbours(sampler2D prev, vec2 uv, vec2 delta) {\n    int c = 0;\n    c += binSamp(prev, uv + delta * vec2(-1,-1));\n    c += binSamp(prev, uv + delta * vec2(0,-1));\n    c += binSamp(prev, uv + delta * vec2(1,-1));\n    c += binSamp(prev, uv + delta * vec2(-1,0));\n    c += binSamp(prev, uv + delta * vec2(1,0));\n    c += binSamp(prev, uv + delta * vec2(-1,1));\n    c += binSamp(prev, uv + delta * vec2(0,1));\n    c += binSamp(prev, uv + delta * vec2(1,1));\n    return c;\n}\n\nvec4 iterate(sampler2D prev, vec2 coord, vec2 resolution, vec4 mouse) {\n    vec2 uv = coord / resolution;\n    vec2 delta = 1.0 / resolution;\n    int n = countNeighbours(prev, uv, delta);\n    int s = binSamp(prev, uv);\n    int l = lifeRules(n, s);\n    return vec4(float(l),float(l),float(l),1.0);\n}\n\nvec4 iterate2(sampler2D prev, sampler2D self, sampler2D noisetex, vec2 coord, vec2 resolution, int act, vec4 mouse, float time) {\n    vec2 uv = coord / resolution;\n\n    if (act == 0) {\n       vec4 o = texture(self, uv);\n       return o;\n    }\n\n    vec4 o = iterate(prev, coord, resolution, mouse);\n    \n    if (time < 0.3) {\n        // some initial noise\n        vec4 o2 = texture(noisetex, uv + vec2(time, 0.0));\n        o = o2;\n    }\n\n    if (mouse.z > 0.5) {\n        // mouse noise \n        vec2 rel = (mouse.xy / resolution) - uv;\n        float d = 0.0 + length(rel);\n\n        vec4 o2 = texture(noisetex, 5.0 * uv + vec2(time, 0.0));\n        if ( d < 0.1) {            \n            o +=o2;\n        }\n    }\n\n    return o;  \n}\n","name":"Common","description":"","type":"common"}]}