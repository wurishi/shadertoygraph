{"ver":"0.1","info":{"id":"4XlBR8","date":"1728015994","viewed":12,"name":"Flower in the Wind","username":"cocoatehcat","description":"First shader made for class!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Written by Arija\n// GPR-200\n\n// Global Constants\nconst float BASE_VECTOR = 0.0;\nconst float START_SMOOTH = 0.45;\nconst float END_SMOOTH = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Move UV to make a new center\n    uv *= 2.0;\n    uv -= 1.0;\n    uv.x *= iResolution.x /iResolution.y; //Account for any aspect ratio\n    \n    // Checkerboard pattern\n    float r = mod(uv.x + uv.y, 1.0);\n    \n    // Center Values for the Petals\n    vec2 center = vec2(BASE_VECTOR);\n    center += vec2(cos(iTime), sin(iTime)) * 0.5;\n    \n    vec2 center2 = vec2(BASE_VECTOR);\n    center2 += vec2(sin(iTime), cos(iTime)) *0.5;\n    \n    // Center of the flower (making an oval)\n    float flower = length(uv);\n    flower = smoothstep(0.3, 0.4, flower);\n    \n    // Petal 1 (making an oval)\n    float pet = distance(uv, center);\n    pet = smoothstep(START_SMOOTH, END_SMOOTH, pet); // make the edges smooth\n    \n    // Petal 2 (making an oval)\n    float petb = distance(uv, center2);\n    petb = smoothstep(START_SMOOTH, END_SMOOTH, petb);\n    \n    // Setting Colors!!\n    vec3 circleCol = vec3(0.5, 0.5, 1.0);\n    vec3 OtherCol = vec3(1.0, 1.0, 0.6);\n    vec3 bgCol = vec3(1.0, 0.5, 1.0);\n    vec3 bgCol2 = vec3(0.0, 1.0, 0.5);\n    \n    // Adding Colors to the Fragment Shader\n    vec3 colors = vec3(1.0);\n    colors = mix(bgCol, colors, r);\n    colors = mix(bgCol2, colors, r); // did this for multiple stripes\n    colors = mix(circleCol, colors, pet);\n    colors = mix(circleCol, colors, petb);\n    colors = mix(OtherCol, colors, flower);\n\n    // Output to screen\n    fragColor = vec4(colors, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}