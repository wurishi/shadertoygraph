{"ver":"0.1","info":{"id":"ctKXzz","date":"1685904279","viewed":74,"name":"Julia set black and white","username":"vruks","description":"Simple implementation of the julia set","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 resolution = iResolution.xy;\n    float zoom = 0.9;\n    vec2 c = vec2(-0.8, 0.156);\n    int maxIterations = 500;\n\n    vec2 uv = (2.0 * fragCoord - resolution) / min(resolution.x, resolution.y) * zoom;\n    vec2 z = uv;\n\n    int i;\n    for (i = 0; i < maxIterations; i++)\n    {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (dot(z, z) > 4.0)\n            break;\n    }\n\n    // Apply color mapping based on iteration count\n    float brightness = float(i) / float(maxIterations);\n    vec3 color = vec3(\n        sin(0.2 + brightness * 2.0),\n        sin(0.1 + brightness * 2.0),\n        sin(0.4 + brightness * 2.0)\n    );\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}