{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nvoid circle(vec2 p, vec2 offset, float size, vec3 color, inout vec3 i){\n    float l = length(p - offset);\n    if(l < size){\n        i = color;\n    }\n}\n\nvoid rect(vec2 p, vec2 offset, float size, vec3 color, inout vec3 i){\n    vec2 q = (p - offset) / size;\n    if(abs(q.x) < 1.0 && abs(q.y) < 1.0){\n        i = color;\n    }\n}\n\nfloat line(vec2 p, vec2 p0, vec2 p1, float w) {\n    float WEIGHT = 3.0 / iResolution.x;\n    vec2 d = p1 - p0;\n    float t = clamp(dot(d,p-p0) / dot(d,d), 0.0,1.0);\n    vec2 proj = p0 + d * t/1.0+(sin(iTime*0.5)*0.002);\n    float dist = length(p - proj);\n    dist = 1.0/dist*WEIGHT*(w+(sin(iTime*0.5)*0.1));\n    return min(dist*dist,1.0);\n}\n\nvoid hud(vec2 p, vec2 offset, float size, vec3 color, inout vec3 i, float sp){\n    vec2 q = (p - offset) / size;\n    if(abs(q.x) < 1.0+abs(sin(iTime*sp)*19.0) && abs(q.y) < 0.9){\n        i = color;\n    }\n}\n\nmat4 matRotateX(float rad)\n{\n\treturn mat4(1,       0,        0,0,\n\t\t\t\t0,cos(rad),-sin(rad),0,\n\t\t\t\t0,sin(rad), cos(rad),0,\n\t\t\t\t0,       0,        0,1);\n}\n\nmat4 matRotateY(float rad)\n{\n\treturn mat4( cos(rad),0,-sin(rad),0,\n\t\t\t\t 0,       1,        0,0,\n\t\t\t\t sin(rad),0, cos(rad),0,\n\t\t\t\t 0,       0,        0,1);\n}\n\nmat4 matRotateZ(float rad)\n{\n\treturn mat4(cos(rad),-sin(rad),0,0,\n\t\t\t\tsin(rad), cos(rad),0,0,\n\t\t\t\t       0,        0,1,0,\n\t\t\t\t\t   0,        0,0,1);\n}\n\nmat4 translate(vec3 t)\n{\n\treturn mat4(1,0,0,t.x,\n\t\t\t\t0,1,0,t.y,\n\t\t\t\t0,0,1,t.z,\n\t\t\t\t0,0,0,1);\n}\n\nmat4 scale(vec3 s)\n{\n\treturn mat4(s.x,  0,  0,0,\n\t\t\t\t  0,s.y,  0,0,\n\t\t\t\t  0,  0,s.z,0,\n\t\t\t\t  0,  0,  0,1);\n}\n\nmat4 perspectiveLH(float vw, float vh, float z_near, float z_far)\n{\n\treturn mat4(2.0*z_near/vw,         \t   0,                           0,0,\n\t\t\t\t            0, 2.0*z_near/vh,                           0,0,\n\t\t\t\t            0,             0, \t     z_far/(z_far-z_near),1,\n\t\t\t\t            0,             0, z_near*z_far/(z_near-z_far),0);\n}\n\nmat4 lookAtLH(vec3 aUp, vec3 aFrom, vec3 aAt)\n{\n\tvec3 aX = vec3(0.0);\n\tvec3 aY = vec3(0.0);\n\n\tvec3 aZ = vec3(aAt.x,aAt.y,aAt.z);\n\taZ = normalize(aZ-aFrom);\n\n\taX = normalize(cross(aUp,aZ));\n\taY = cross(aZ,aX);\n\n\treturn mat4(          aX.x,           aY.x,           aZ.x,0,\n\t\t\t\t          aX.y,           aY.y,           aZ.y,0,\n\t\t\t\t          aX.z,           aY.z,           aZ.z,0,\n\t\t\t\t-dot(aFrom,aX), -dot(aFrom,aY), -dot(aFrom,aZ),1);\n}\n\nvec3 cube(vec2 world, mat4 proj, mat4 view, float time, vec3 p, vec3 s, float rotX, float rotY, float rotZ, vec3 cl)\n{\n\tvec3 col = vec3(0.0);\n\tvec4 pos = vec4(p,1.0);\n\n\tvec4 v1 = proj*view*((vec4(-1.0,-1.0,1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v2 = proj*view*((vec4(1.0,-1.0,1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v3 = proj*view*((vec4(1.0,1.0,1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v4 = proj*view*((vec4(-1.0,1.0,1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v5 = proj*view*((vec4(-1.0,-1.0,-1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v6 = proj*view*((vec4(1.0,-1.0,-1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v7 = proj*view*((vec4(1.0,1.0,-1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v8 = proj*view*((vec4(-1.0,1.0,-1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\n\tcol += cl*line(world,vec2(v1.x,v1.y),vec2(v2.x,v2.y),0.5);\n\tcol += cl*line(world,vec2(v2.x,v2.y),vec2(v3.x,v3.y),0.5);\n\tcol += cl*line(world,vec2(v3.x,v3.y),vec2(v4.x,v4.y),0.5);\n\tcol += cl*line(world,vec2(v4.x,v4.y),vec2(v1.x,v1.y),0.5);\n\tcol += cl*line(world,vec2(v5.x,v5.y),vec2(v6.x,v6.y),0.5);\n\tcol += cl*line(world,vec2(v6.x,v6.y),vec2(v7.x,v7.y),0.5);\n\tcol += cl*line(world,vec2(v7.x,v7.y),vec2(v8.x,v8.y),0.5);\n\tcol += cl*line(world,vec2(v8.x,v8.y),vec2(v5.x,v5.y),0.5);\n\n\tcol += cl*line(world,vec2(v8.x,v8.y),vec2(v4.x,v4.y),0.5);\n\tcol += cl*line(world,vec2(v7.x,v7.y),vec2(v3.x,v3.y),0.5);\n\tcol += cl*line(world,vec2(v5.x,v5.y),vec2(v1.x,v1.y),0.5);\n\tcol += cl*line(world,vec2(v6.x,v6.y),vec2(v2.x,v2.y),0.5);\n\n\treturn col;\n}\n\nvec3 airplane(vec2 world, mat4 proj, mat4 view, float time, vec3 p, vec3 s, float rotX, float rotY, float rotZ, vec3 cl)\n{\n\tvec3 col = vec3(0.0);\n\tvec4 pos = vec4(p,1.0);\n\n\tvec4 v1 = proj*view*((vec4(-0.215379,-0.018131,0.254635,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v2 = proj*view*((vec4(-0.130827,-0.030620,-0.229209,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v3 = proj*view*((vec4(-0.605928,0.226597,0.656825,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v4 = proj*view*((vec4(-0.457512,-0.151435,0.173292,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v5 = proj*view*((vec4(-0.301224,-0.276743,0.205711,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v6 = proj*view*((vec4(-0.762492,-0.313925,0.985007,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v7 = proj*view*((vec4(0.219197,-0.018172,0.253044,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v8 = proj*view*((vec4(0.605928,0.226597,0.656825,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v9 = proj*view*((vec4(0.134193,-0.030673,-0.229209,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v10 = proj*view*((vec4(0.457512,-0.151435,0.173292,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v11 = proj*view*((vec4(0.001113,0.122996,0.372016,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v12 = proj*view*((vec4(0.012398,0.313925,0.213513,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v13 = proj*view*((vec4(0.001113,-0.050108,-0.985007,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v14 = proj*view*((vec4(0.301224,-0.276743,0.205711,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v15 = proj*view*((vec4(0.762492,-0.313925,0.985007,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\n\tcol += cl*line(world,vec2(v2.x,v2.y),vec2(v3.x,v3.y),0.5);\n\tcol += cl*line(world,vec2(v2.x,v2.y),vec2(v12.x,v12.y),0.5);\n\n\tcol += cl*line(world,vec2(v3.x,v3.y),vec2(v4.x,v4.y),0.5);\n\tcol += cl*line(world,vec2(v4.x,v4.y),vec2(v5.x,v5.y),0.5);\n\tcol += cl*line(world,vec2(v4.x,v4.y),vec2(v6.x,v6.y),0.5);\n\tcol += cl*line(world,vec2(v6.x,v6.y),vec2(v5.x,v5.y),0.5);\n\tcol += cl*line(world,vec2(v5.x,v5.y),vec2(v13.x,v13.y),0.5);\n\n\tcol += cl*line(world,vec2(v8.x,v8.y),vec2(v9.x,v9.y),0.5);\n\tcol += cl*line(world,vec2(v8.x,v8.y),vec2(v10.x,v10.y),0.5);\n\tcol += cl*line(world,vec2(v10.x,v10.y),vec2(v15.x,v15.y),0.5);\n\tcol += cl*line(world,vec2(v10.x,v10.y),vec2(v14.x,v14.y),0.5);\n\n\tcol += cl*line(world,vec2(v2.x,v2.y),vec2(v13.x,v13.y),0.5);\n\tcol += cl*line(world,vec2(v4.x,v4.y),vec2(v13.x,v13.y),0.5);\t\t\t\n\tcol += cl*line(world,vec2(v9.x,v9.y),vec2(v13.x,v13.y),0.5);\n\tcol += cl*line(world,vec2(v10.x,v10.y),vec2(v13.x,v13.y),0.5);\n\n\tcol += cl*line(world,vec2(v3.x,v3.y),vec2(v12.x,v12.y),0.5);\t\t\t\t\n\tcol += cl*line(world,vec2(v8.x,v8.y),vec2(v12.x,v12.y),0.5);\n\n\tcol += cl*line(world,vec2(v12.x,v12.y),vec2(v11.x,v11.y),0.5);\n\n\tcol += cl*line(world,vec2(v11.x,v11.y),vec2(v3.x,v3.y),0.5);\n\tcol += cl*line(world,vec2(v11.x,v11.y),vec2(v8.x,v8.y),0.5);\n\n\tcol += cl*line(world,vec2(v11.x,v11.y),vec2(v7.x,v7.y),0.5);\n\tcol += cl*line(world,vec2(v11.x,v11.y),vec2(v1.x,v1.y),0.5);\n\n\tcol += cl*line(world,vec2(v9.x,v9.y),vec2(v12.x,v12.y),0.5);\n\n\tcol += cl*line(world,vec2(v8.x,v8.y),vec2(v7.x,v7.y),0.5);\n\tcol += cl*line(world,vec2(v3.x,v3.y),vec2(v1.x,v1.y),0.5);\n\n\tcol += cl*line(world,vec2(v1.x,v1.y),vec2(v6.x,v6.y),0.5);\n\tcol += cl*line(world,vec2(v7.x,v7.y),vec2(v15.x,v15.y),0.5);\n\n\tcol += cl*line(world,vec2(v12.x,v12.y),vec2(v13.x,v13.y),0.5);\n\tcol += cl*line(world,vec2(v13.x,v13.y),vec2(v14.x,v14.y),0.5);\n\tcol += cl*line(world,vec2(v14.x,v14.y),vec2(v15.x,v15.y),0.5);\n\n\treturn col;\n}\n\nvec3 mountain(vec2 world, mat4 proj, mat4 view, float time, vec3 p, vec3 s, float rotX, float rotY, float rotZ, vec3 cl)\n{\n\tvec3 col = vec3(0.0);\n\tfloat pi = 3.14159265358979;\n\n\tvec4 pos = vec4(p,1.0);\n\tvec4 v1 = proj*view*((vec4(1.0,0.0,0.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v2 = proj*view*((vec4(-1.0,0.0,0.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v3 = proj*view*((vec4(0.0,0.0,-2.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\tvec4 v4 = proj*view*((vec4(0.0,2.0,-1.0,1.0)-pos)*matRotateX(rotX)*matRotateY(rotY)*matRotateZ(rotZ)*scale(s));\n\n\tcol += cl*line(world,vec2(v1.x,v1.y),vec2(v2.x,v2.y),0.5);\n\tcol += cl*line(world,vec2(v2.x,v2.y),vec2(v3.x,v3.y),0.5);\n\tcol += cl*line(world,vec2(v3.x,v3.y),vec2(v1.x,v1.y),0.5);\n\tcol += cl*line(world,vec2(v1.x,v1.y),vec2(v4.x,v4.y),0.5);\n\tcol += cl*line(world,vec2(v2.x,v2.y),vec2(v4.x,v4.y),0.5);\n\tcol += cl*line(world,vec2(v3.x,v3.y),vec2(v4.x,v4.y),0.5);\n\treturn col;\n}\n\nvec3 _vUP = vec3(0, 1, 0);\nvec3 _vAT = vec3(0, -2, 0);\nvec3 _mEye = vec3(1, 0, 15);\nvec3 _mEyeA = vec3(0, 0, 20);\n\nfloat pi = atan(1.)*4.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t// set up world position\n\tvec2 worldCenter = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\tfloat cLength = length(worldCenter);\n\n\t// add post effect\n\tworldCenter += (worldCenter/cLength)*cos(cLength*12.0-iTime*4.0)*0.03; // ripple\n\n\tvec3 col = vec3(0.0);\n\n\t_mEyeA.xz = vec2(-cos(iTime*0.5)*200.,-sin(iTime*0.5)*200.);\n\t_mEyeA.y = 45.0;\n\n\t_mEye = _mEye*0.7;\n\t_mEye.x += _mEyeA.x * 0.5;\n\t_mEye.y += _mEyeA.y * 0.5;\n\t_mEye.z += _mEyeA.z * 0.5;\n\n\t// pipeline\n\tmat4 proj = perspectiveLH(1.0, 1.0, 0.12-(_mEyeA.x*0.0003), 1000.0);\n\tmat4 view = lookAtLH(_vUP, _mEye, _vAT);\n\n\tfloat loopZ = mod(iTime*3.0, 30.0);\n\tcol += airplane(worldCenter,proj,view,iTime,vec3(0.0,0.0,loopZ-15.0),vec3(1.8,1.8,1.8),0.0,0.0,sin(iTime*0.5),vec3(1.0,1.0,1.0));\n\n\tcol += cube(worldCenter,proj,view,iTime,vec3(6.0,0.0,0.0),vec3(1.2,1.2,1.2),iTime*.5-(pi/2.),0.0,0.0,vec3(1.0,1.0,1.0));\n\tcol += cube(worldCenter,proj,view,iTime,vec3(-4.0,0.0,6.0),vec3(1.2,2.2,1.2),0.0,0.0,0.0,vec3(1.0,1.0,1.0));\n\n\tcol += mountain(worldCenter,proj,view,iTime,vec3(4.0,0.0,9.0),vec3(2.2,1.2,1.2),0.0,0.0,0.0,vec3(1.0,1.0,1.0));\n\tcol += mountain(worldCenter,proj,view,iTime,vec3(-4.0,0.0,-6.5),vec3(2.2,2.1,1.2),0.0,0.0,0.0,vec3(1.0,1.0,1.0));\n\n\t// floor\n\tvec3 gridScale = vec3(3.5,3.5,3.5);\n\tfor(float i = -2.; i <= 2.; i ++)\n\t{\n\t\tvec4 t1 = proj*view*(vec4(-256.0*0.02,-64.0*0.02,i*128.0*0.02,1.0)*scale(gridScale));\n\t\tvec4 t2 = proj*view*(vec4(256.0*0.02,-64.0*0.02,i*128.0*0.02,1.0)*scale(gridScale));\n\t\tvec4 t3 = proj*view*(vec4(i*128.0*0.02,-64.0*0.02,-256.0*0.02,1.0)*scale(gridScale));\n\t\tvec4 t4 = proj*view*(vec4(i*128.0*0.02,-64.0*0.02,256.0*0.02,1.0)*scale(gridScale));\n\n\t\tcol += vec3(1.0,1.0,1.0)*line(worldCenter,vec2(t1.x,t1.y),vec2(t2.x,t2.y),0.5);\n\t\tcol += vec3(1.0,1.0,1.0)*line(worldCenter,vec2(t3.x,t3.y),vec2(t4.x,t4.y),0.5);\n\t}\n\n\t// if you don't want posteffect.\n\t//worldCenter = (gl_FragCoord.xy * 2.0 - iResolution) / min(iResolution.x, iResolution.y);\n\n\thud(worldCenter,vec2(-1.9+abs(sin(iTime*1.0)*0.57),0.85),0.03,vec3(1.0,1.0,1.0),col,1.0);\n\thud(worldCenter,vec2(-1.9+abs(sin(iTime*1.1)*0.57),0.75),0.03,vec3(1.0,1.0,1.0),col,1.1);\n\thud(worldCenter,vec2(-1.9+abs(sin(iTime*1.2)*0.57),0.65),0.03,vec3(1.0,1.0,1.0),col,1.2);\n\n\n\tfragColor = vec4(vec3(col), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lls3Wl","date":"1426265973","viewed":1216,"name":"[TDF15]Wireframe 3D Shooting","username":"yasuo","description":"TokyoDemoFest2015\nGLSL Graphics Compo\n3rd","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["wireframe"],"hasliked":0,"parentid":"","parentname":""}}