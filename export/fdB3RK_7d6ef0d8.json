{"ver":"0.1","info":{"id":"fdB3RK","date":"1617625726","viewed":83,"name":"3p Shader","username":"atteherttala","description":"Wavy","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalisoidut pikselin koordinaatit (0:sta 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //Pikselin väri (R,G,B)\n    vec3 col = vec3(0,0,0);\n    \n\n    //Jos pikselin (x,y) y-koordinaatti on pienempi kuin sin(x) (sekä kertoimia jotta saadaan mahtumaan koko näytölle)\n    if(uv.y < 0.5*sin(iTime + uv.x*10.0)+0.5)col = \n\n    //Alhaalta ylöspäin tulevat aaltojen kertoimet, joilla kerrotaan sinistä väriä.\n    0.7/(0.5*sin(iTime + uv.x * 10.0) -uv.y - 0.5) *\n\n    //Itse väri, jossa sinistä väriä lisätään cos(aika) mukaan\n    0.4 * vec3(0,1,cos(iTime * 8.0));\n    \n\n    //Jos pikselin (x,y) y-koordinaatti on suurempi kuin sin(x)\n    if(uv.y > 0.5*sin(iTime + uv.x*10.0)+0.5)col = \n\n    //Tummuuskerroin kohtiin jotka ovat lähellä sinin \"reunaa\"\n    (uv.y - 0.5*sin(iTime + uv.x*10.0)+0.5) * 0.2\n    \n    //Itse väri jossa vihreää väriä lisätään sin(aika) mukaan\n    + 0.1* vec3(1,sin(iTime*10.0),0);\n\n\n\n    // Asetetaan väri ruudulle\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}