{"ver":"0.1","info":{"id":"NsSSWR","date":"1699047892","viewed":78,"name":"hyperbolic raymarch by racon","username":"racon","description":"Originally made in 2021","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["space","hyperbolic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float TAU=6.283185307179586;\nint curve=-1;float gvecScale=0.1;\n//rotate\n\tfloat atan2(in float y, in float x){\n\t\tif(x==0.&&y==0.)return 0.;\n\t\tbool s = (abs(x) > abs(y));\n\t\treturn mix(TAU/4.0 - atan(x,y), atan(y,x), s);\n\t}\n\tfloat atan2(in vec2 a){return atan2(a.y,a.x);}\n\t\n\tmat2 rotate0(float t){return mat2(1.0,t,0.0,1.0);}\n\tmat2 rotate(float t){return mat2(cos(t),-sin(t),sin(t),cos(t));}\n\tmat2 rotateh(float t){return mat2(cosh(t),sinh(t),sinh(t),cosh(t));}\n\t\n\tmat4 rotateByAxis(mat2 c,int a,int b){mat4 ans=mat4(1.);ans[a][a]=c[0][0];ans[a][b]=c[0][1];ans[b][a]=c[1][0];ans[b][b]=c[1][1];return ans;}\n\tmat4 rotate0(float t,int a,int b){return rotateByAxis(rotate0(t),a,b);}\n\tmat4 rotate(float t,int a,int b){return rotateByAxis(rotate(t),a,b);}\n\tmat4 rotateh(float t,int a,int b){return rotateByAxis(rotateh(t),a,b);}\n//----\nmat4 gvec(vec3 b,int curve){//gyrovector\n\tvec3 d=b;//unrotated b length(b)\n\tvec3 rots;\n\tmat4 b1;\n\trots.x=atan2(d.yz);d.yz=d.yz*rotate(-rots.x);\n\trots.y=atan2(d.xz);d.xz=d.xz*rotate(-rots.y);\n\trots.z=atan2(d.xy);d.xy=d.xy*rotate(-rots.z);\n\tb1=rotate(-rots.x,1,2)*rotate(-rots.y,0,2)*rotate(-rots.z,0,1);\n\t//b1=rotate(rots.z,0,1)*rotate(rots.y,0,2)*rotate(rots.x,1,2);\n\t//d=vec3(rotate(rots.x,1,2)*rotate(rots.y,0,1)*rotate(rots.z,0,2)*vec4(d,0.));\n\tswitch(curve+1){\n\t\tcase 0:b1*=rotateh(d.x,3,0);break;//-ve curve\n\t\tcase 1:b1*=rotate0(d.x,3,0);break;//normal\n\t\tcase 2:b1*=rotate(d.x,3,0);break;//+ve curce\n\t}\n\t//b1=rotate(-rots.x,1,2)*rotate(-rots.y,0,2)*rotate(-rots.z,0,1)*b1;\n\tb1=b1*rotate(rots.z,0,1)*rotate(rots.y,0,2)*rotate(rots.x,1,2);\n\t//b1=mat4(1.,vec4(0.),1.,vec4(0.),1.,0.,b1[3]);\n\t//if(dot(cross(b1[3].xyz,b),vec3(1.))>0.01){isBS=true;}//if(b1[2].w!=1.){isBS=true;}//\n\treturn b1;\n    }\n    mat4 gvec(vec3 b){return gvec(b,curve);}\n    mat4 gvec(float x,float y,float z){return gvec(vec3(x,y,z));}\n    mat4 gvec(float x,float y,float z,int curve){return gvec(vec3(x,y,z),curve);}\nvec3 vecg(mat4 a){return vec3(a[3]);}////a[0].w,a[1].w,a[2].w);}//\nmat4 gpos(vec3 b,int curve){return gvec(b*gvecScale,curve);}\n    mat4 gpos(vec3 b){return gpos(b,curve);}\n    mat4 gpos(float x,float y,float z){return gpos(vec3(x,y,z));}\n    mat4 gpos(float x,float y,float z,int curve){return gpos(vec3(x,y,z),curve);}\nfloat hypoth(vec4 a){return acosh(a[3]);}\nfloat hypotCircle(vec4 a){return acos(a[3]);}\nfloat hypotNormal(vec4 a){return sqrt(dot(a,a)-1.);}\nfloat hypot(vec4 a){switch(curve+1){\n\t\tcase 0:return hypoth(a);break;//-ve curve\n\t\tcase 1:return hypotNormal(a);break;//normal\n\t\tcase 2:return hypotCircle(a);break;//+ve curce\n\t}return 0.;\n}\nfloat hypot(mat4 a){return hypot(a[3]);}\nfloat minOnLine(float w,float x){return -log((w-x)/(w+x))/2.;}\nfloat minOnLine(float w,float x,float len){return min(len,max(-len,minOnLine(w,x)));}\nfloat lineDE(mat4 p,mat4 line,float len,out mat4 pos){//hyperbolic line\n    mat4 p1=inverse(line)*p;\n\tfloat a=p1[3].w;float b=p1[3].x;\n\tfloat minX=-log((a-b)/(a+b))/2.;\n\tfloat x=min(len,max(-len,minX));\n\treturn acosh(a*cosh(-x)+b*sinh(-x));\n}\nfloat line2DE(mat4,mat4,float,out mat4);\nfloat asd(){return 2.;}\nfloat line2DE(mat4 p,mat4 line,float len){mat4 a;return line2DE(p,line,len,a);}\nfloat line2DE(mat4 p,mat4 line,float len,out mat4 pos){//hyperbolic square\n    mat4 p1=inverse(line)*p;\n\tfloat a=p1[3].w;float b=p1[3].x;\n\tfloat minX=-log((a-b)/(a+b))/2.;\n\tfloat x=min(len,max(-len,minX));\n    //acosh(a*cosh(-x)+b*sinh(-x));\n    p1=gvec(-x,0.,0.)*p1;\n\ta=p1[3].w;b=p1[3].y;\n\tfloat minY=-log((a-b)/(a+b))/2.;\n\tfloat y=min(len,max(-len,minY));\n    pos[3].xy=vec2(x,y);\n\t//return hypot(gvec(-vec3(x,y,0.))*inverse(line)*p);\n    return acosh(a*cosh(-y)+b*sinh(-y));\n}\nvoid DE(in mat4 p,in vec3 dir,out float dist,out vec3 col){\n\t//dist=1000000.;\n    float dist1;\n    {\n        dist1=hypot(p*gpos(-vec3(10.,10.*pow(sin(iTime*TAU*0.25),1.),12.2)) )-3.*gvecScale; //15.2;\n        if(true){\n            dist=dist1;\n            col=vec3(1.); //col;\n        }\n    }{//sphere4\n        dist1=hypot(p*gpos(-vec3(5.,-7.,40.)) )-1.*gvecScale; //40.;\n        if(dist1<dist){\n            dist=dist1;\n            col=vec3(0.8,0.6,0.6);\n        }\n    }if(true){//plane or line\n        vec2 tp;//texlePos\n        mat4 tpGvec;\n        dist1=line2DE(p*gpos(-vec3(0.,0.,1.)),gpos(0.,0.7,0.2)*rotate(TAU*(0.2*sin(iTime*0.1)),0,2),1.*gvecScale,tpGvec)-0.01*gvecScale;\n        if(dist1<dist){\n            dist=dist1;\n            tp=asinh(tpGvec[3].xy)*0.01;\n            \n            if(dist1<0.01){\n                col=texture(iChannel0,(tp-0.001)*iResolution.xy).xyz; //\n                if(col==vec3(0.))col=vec3(0.3,0.5,0.8);\n            }\n        }\n    }\n    //mat4 rot=mat4(rotate(TAU*0.2,0,1));\n\t//dist=min(dist,hypot( max(vec4(0.),abs((p*gvec(-vec3(4.,0.,10.))[3]))*gvec(-vec3(20.))) )-1.);//unfinished cube\n\treturn;\n}//normalize determinant\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = (fragCoord*2.-iResolution.xy)/iResolution.y;\n\tvec2 mouse=(iMouse.xy*2.-iResolution.xy)/iResolution.y;\n    if(iMouse.xy==vec2(0.))mouse = vec2(0.);\n\tvec3 col=vec3(1.);\n\t{\n\t\t//vec2 a=uv*10.*(1.+sin(iTime*TAU*0.25));\n\t\tmat4 pos=gpos(vec3(mouse*10.,0.))*gpos(vec3(uv*0.,0.));\n\t\tvec3 dir=normalize(vec3(uv,1.));\n\t\tbool done=false;\n\t\tfloat minDist=0.001;\n\t\tfloat dist=minDist*1000.;\n\t\tfloat i=0.;float inc=0.2;\n\t\tfor(i=0.;i<200.&&!done;i++){\n            col=vec3(1.);\n\t\t\tDE(pos,dir,dist,col);\n\t\t\tpos=gvec(dir*dist*inc)*pos;\n\t\t\tif(dist>1000.){\n                col=vec3(1.);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(dist<=minDist){\n\t\t\t\tdone=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}i*=inc;\n        if(dist>0.1){\n            col=vec3(1.);\n        }\n\t\tif(done){\n\t\t\tif(dist<0.)col=vec3(0.);\n\t\t\telse col*=1./(1.+i*i/200.);\n\t\t}\n\t}\n\tvec3 asd=vec3(uv,1.);\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//variables\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.y!=0.)return;\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}