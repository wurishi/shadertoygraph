{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Converted from some stuff I'm doing on sh8r.org.\n// None of this makes any sense and its missing the zoom/pan controls.\n// Derivative works are welcome, show me those wacky fractys.\nvoid mainImage( out vec4 o, in vec2 F )\n{\n    #define P(v, k) pow(v, k)\n    float esc = 6e1, at = .25, sc = .4, it = 20.;\n    vec3 hue = vec3(0, .5, 1);\n    float B, I, t = iTime*.2,\n        e = esc, le = log2(e), k = 1./sc,\n        J = sin(t), K = cos(t);\n    vec2 c = mat2(K, J, -J, K)*vec2(.5, .5), z = (F+F-iResolution.xy)/iResolution.y;\n    int i, h = int(it);\n    for (; i < h && B < e;\n        // I'm just throwing stuff at z.           .2 = intensity?\n        z = vec2(z.x*z.x - z.y*z.y, 2.*z.x*z.y)*exp(.2*cos(atan(z)*log2(1.+I) + t)) + c,\n        I = float(i++),\n        // Also throw stuff at the boundary.\n        B = z.x*z.x+2.*le*z.y*cos(atan(z.y, z.x) + I + t) \n    ); o = i < h?\n        vec4((.5+.5*cos(at*cos(atan(z.y, z.x) + I + t)\n            + I*sc + t + 2.*(hue)))\n        *smoothstep(1., 0., P(I, k)/P(float(h), k))\n        *smoothstep(-le, le, log2(B/e)), 1)\n    : vec4(0,0,0,1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XfVBWy","date":"1734408061","viewed":88,"name":"Julia 2","username":"xld3","description":"This one came out a lot cleaner with a better orbit and some scaling that affects the darkness.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["fractal","julia","2","fabric"],"hasliked":0,"parentid":"","parentname":""}}