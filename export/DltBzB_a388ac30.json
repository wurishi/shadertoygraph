{"ver":"0.1","info":{"id":"DltBzB","date":"1701365000","viewed":16,"name":"moon color","username":"zoma1001","description":"there is nothing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    vec2 uvr = fragCoord/iResolution.xy;\n    uv -= vec2(0.2,0.4) * iResolution.xy ;\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uvr.xyx+vec3(0,1,2));\n    \n    \n    float r= 100.0;\n    if( uv . x * uv . x + uv . y * uv . y < r * r )\n    {\n    float z = sqrt( r * r - uv . x * uv . x - uv . y * uv .y );\n    vec3 normal = normalize(vec3( uv . x , uv . y , z ));\n    vec3 light = normalize(vec3(1.0,1.0,1.0));\n    float diffuse = clamp(dot(normal,light),0.0,1.0);\n    float I = diffuse * 0.7 + 0.3;\n    \n    vec3 d = vec3(0.0,0.0,-1.0);\n    vec3 reflection = reflect(d,normal); \n\n    col = vec3(0.5,0.5,0.5) * I +\n        vec3(1.0,1.0,1.0)*pow(clamp(dot(reflection,light),0.0,1.0),4.0);\n    }\n\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}