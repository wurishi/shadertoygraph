{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"cubemap","id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Created by vincent francois - cyanux/2014\n// Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License (CC BY-NC-ND 3.0)\n//\n// vfrancois.pro@hotmail.fr\n//\n// tks tekf, vgs, iq :)\n\n// 3d function support. See https://www.shadertoy.com/view/4slSzB for main idea\n\n// Varying this value!\n#define D 10.0 // distance from object\n\n// Following is a dirty code\n\n#define T iTime\n\nfloat BASS;\n\nvec3 rX(vec3 v, float t) {\n\tfloat COS = cos(t);\n\tfloat SIN = sin(t);\n\treturn vec3(v.x,SIN*v.z+COS*v.y,COS*v.z-SIN*v.y);\n}\nvec3 rY(const vec3 v, const float t) {\n\tfloat COS = cos(t);\n\tfloat SIN = sin(t);\n\treturn vec3(COS*v.x-SIN*v.z, v.y, SIN*v.x+COS*v.z);\n}\nfloat sdTruncatedOctahedron(vec3 p, float r) {\n\treturn\n\t\tmax(\n\t\tabs(p.x) - r +\n\t\tabs(p.y) - r + \n\t\tabs(p.z) - r,\n\t\t\tmax(abs(p.x) - r, 0.0) - 0.5 * r + max(abs(p.y) - r,0.0) - 0.5 * r + max(abs(p.z) - r,0.0));\n}\nfloat fn(vec3 A, vec3 B, vec3 U, float t, float f) {\n\tvec3 a = B - A;\n\tvec3 n = vec3(0.0, 1.0, 0.0); //normalize(t*a+A-U);\t\n\tvec3 i = n * f * 0.5 + a * t + A;\n\t//return 0.2 * length(i-U);\n\treturn 0.2 * length(i-U) - 0.1; // AA trick\n}\nbool is_dCM = false;\nfloat scene(vec3 p) {\n\tp = rX(p, iTime);\n\tfloat dCM = -sdTruncatedOctahedron(p, 16.0);\n\tfloat t = dot(vec3(1.0, 0.0, 0.0), p - vec3(-0.5,0.0,0.0));\n\tfloat dO = fn(vec3(-0.5,0.0,0.0),vec3(0.5,0.0,0.0),p,t,4.0 * BASS * sin(T + t * 0.5) * 2.0 * sin(T + t * 2.));\n\tif(dCM < dO) {\n\t\tis_dCM = true;\n\t\treturn dCM;\n\t}\n\t\treturn dO;\n}\nvec2 M;\nvec3 ro;\nvec4 render(vec2 uv)\n{\n\tvec3 rd = normalize(rY(rX(vec3(uv, 1.0), M.y), M.x));\t\n\tvec3 g;\n\tfloat d;\n\tfor(float n = 0.0; n < 256.0; n++) {\n\t\td = scene(ro);\n\t\tif(d < 0.03) {\n\t\t\tg.x = scene(ro + vec3(0.001, 0.0, 0.0));\n\t\t\tg.y = scene(ro + vec3(0.0, 0.001, 0.0));\n\t\t\tg.z = scene(ro + vec3(0.0, 0.0, 0.001));\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t\tro += rd * d * 0.5;\n\t}\t\n\tif(is_dCM == true) {\n\t\treturn texture(iChannel0, ro);\n\t}\n\t\n\tvec3 n = normalize(g-d);\n\trd = normalize(rd);\n\t\n\treturn\n\t\tmix(\n\t\t\tmix(\n\t\t\t\ttexture(iChannel0, reflect(rd + 0.1, n)),\n\t\t\t\ttexture(iChannel0, reflect(rd, n)),\n\t\t\t\t0.5),\n\t\t\t\tmix(\n\t\t\t\t\ttexture(iChannel0, reflect(rd - 0.1, n)),\n\t\t\t\t\ttexture(iChannel0, ro),\n\t\t\t\t\t0.1),\n\t\t\t0.5);\n}\n\nvec4 nyan(vec4 color, vec2 fragCoord)\n{\n\tvec2 a = fragCoord.xy - vec2(BASS * iResolution.x, 0.0);\n\t\n\tif(a.x < 32.0 && a.y < 32.0)\n\t{\n\t\tvec4 color = texture(iChannel2, vec2(0.01 + (ceil(mod(16.0 * iTime, 5.0)) * 40.0 + mod(fragCoord.x, 32.0)) / 256.0, (32.0 - fragCoord.y) / 32.0));\n\t\t\n\t\tif(color.x != 0.0 && color.y != 0.0 && color.z  != 0.0 && color.w != 0.0)\n\t\t\treturn color;\t\t\t   \n\t}\n\t\n\treturn color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    BASS = texture(iChannel1, vec2(0.002, 0.0)).y;\n    M = 8.0 * (iMouse.xy / iResolution.xy - 0.5);\n    ro = -rY(rX(vec3(0.0, 0.0, D) , M.y), M.x);\n\n\tvec2 ar = vec2(iResolution.x/iResolution.y, 1.0);\n\tvec2 uv = ar * (fragCoord.xy / iResolution.xy - 0.5);\n\t\n\tfragColor = render(uv);\n\t\n\tfragColor = \n\t\tnyan(\n\t\t\tmix(\n\t\t\t\tmix(\n\t\t\t\t\tmix(\n\t\t\t\t\t\trender(uv),render(uv + 0.1),0.5),\n\t\t\t\t\trender(uv - 0.1),0.5),\n\t\t\t\ttexture(iChannel1, fragCoord.xy/iResolution.xy), 0.3), fragCoord);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XssXzB","date":"1403470273","viewed":192,"name":"Into the woods","username":"cyanux","description":"Into the woods : function support demo :) [v1.1 AA patch]","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""}}