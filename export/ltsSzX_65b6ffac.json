{"ver":"0.1","info":{"id":"ltsSzX","date":"1438664419","viewed":231,"name":"Point Lights","username":"mojobojo","description":"Just starting to get into shader stuff. Don't even know if this is the way to do lights.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","light","point"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec4\nLight(vec2 uv, vec2 Position, float Size, float Focus, float Brightness)\n{\n    float Color = smoothstep(Focus, length(uv - Position), Size);\n    return vec4(Color, Color, Color, 1.0) * Brightness;\n}\n\nvoid\nmainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    vec4 Texel = texture(iChannel0, uv);\n    fragColor = \n        (Light(uv, vec2(sin(iTime) * 0.5, 0.0), -0.1, -0.2, 2.0) +\n        Light(uv, vec2(-sin(iTime) * 0.5, 0.0), -0.1, -0.2, 2.0)) * Texel;\n}\n","name":"","description":"","type":"image"}]}