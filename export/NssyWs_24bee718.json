{"ver":"0.1","info":{"id":"NssyWs","date":"1642919153","viewed":66,"name":"Fork Basic Mandlebrot","username":"personalizedrefrigerator","description":"Move the mouse to pan the screen.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","compute"],"hasliked":0,"parentid":"sdXcWs","parentname":"Mandelbrot set - basic"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complex_square(vec2 z)\n{\n    return vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y);\n}\n\n#define MAX_ITER 255.0\n#define MAX_MAGNITUDE_SQUARED 2.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    \n\tfloat time_wrapped = (1.0 - cos(0.2*iTime))/2.0;\n    float zoom = pow( 2.0, -10.0*time_wrapped );\n    \n    // thanks to https://www.shadertoy.com/view/lsX3W4 for the coordinates here\n\tvec2 c = vec2(-0.04,.648) + p * zoom + (iMouse.xy / iResolution.xy - vec2(0.5, 0.5)) * zoom;\n    vec2 z = vec2(0.0);\n    float n;\n    float r = 0.0;\n    \n    for (n = 0.0; n < MAX_ITER; n++)\n    {\n        z = complex_square(z) + c;\n        float sqr = dot(z, z);\n        \n        r += sqr < 1.0 ? sqr : 0.0;\n        \n        if (sqr >= MAX_MAGNITUDE_SQUARED)\n        {\n            break;\n        }\n    }\n    \n\n    // Time varying pixel color\n    vec3 col = vec3(max(0.5*sin(r) + 0.5, n/255.0), n/255.0, n/255.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}