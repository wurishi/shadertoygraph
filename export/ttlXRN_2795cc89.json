{"ver":"0.1","info":{"id":"ttlXRN","date":"1562403522","viewed":149,"name":"first Linear interpolation ","username":"DDave","description":"Simple linear interpolation featuring distance from 2 points in plot function. Tweak the y value to have different types of lines.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["line","plot","smoothstep","interpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//line interpolation functions\nfloat plot(vec2 st, float pct){\n\treturn smoothstep(pct-0.02, pct, st.y) - smoothstep(pct, pct+0.02, st.y); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 st = fragCoord.xy/vec2(iResolution);\n    \n    //line creation; tweak float y to have different types of line\n    st.x += iTime;\n    float y = smoothstep(0.3, 0.9, sin(st.x));\n    \n    float line = plot(st, y);\n    vec3 color = vec3(y);\n    \n    //line drawing to the screen\n    color = line * vec3(0.0, 1.0, 0.0);\n    fragColor = vec4(color, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}