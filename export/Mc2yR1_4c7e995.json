{"ver":"0.1","info":{"id":"Mc2yR1","date":"1721941825","viewed":33,"name":"Murilo mask","username":"murilo","description":"Atividade de CG","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mask","vnadame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Pega as texturas da imagem e video.\n\tvec2 xy = fragCoord.xy / iResolution.xy;\n    vec4 background = texture(iChannel0,xy);\n    vec4 color = texture(iChannel1,xy);\n    \n    // Normaliza as cores para evitar correspondências falsas, ajustando o comprimento da cor do fragmento em \n    // relação à cor chave e garantindo que o valor esteja entre 0.0 e 1.0.\n    float normLength = clamp(length(color.rgb) / length(vec4(0.0508, 0.6328, 0.1484, 1.0000).rgb), 0.0, 1.0);\n    vec3 normColor = normalize(color.rgb) * normLength;\n\tvec3 normKey = normalize(vec4(0.0508, 0.6328, 0.1484, 1.0000).rgb);    \n    \n    // Calcula a diferença entre a cor normalizada do fragmento e a cor chave.\n    float colorDiff = length(normColor - normKey); \n    \n    // Remove o brilho verde nas bordas.\n    colorDiff = smoothstep(0.5 - 0.35, 0.5 + 0.35, colorDiff);\n    color.g = color.g - (vec4(0.0508, 0.6328, 0.1484, 1.0000).g * (1.0 - colorDiff));\n    \n    // Ajusta a transparência com base na diferença de cor\n    color.a = colorDiff;\n\n    // Finaliza a saída misturando o plano de fundo e a cor com base no nível de diferença de cor.\n    float level = clamp(((colorDiff - 0.5) * 1.5) + 0.5, 0.0, 1.0);\n   \tfragColor = mix(background, color, level);\n}\n","name":"Image","description":"","type":"image"}]}