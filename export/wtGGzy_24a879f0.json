{"ver":"0.1","info":{"id":"wtGGzy","date":"1579204249","viewed":103,"name":"Biohazard_Honotfile","username":"Honorfil","description":"biohazard v2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST 0.01\n#define PI 3.1415\n\nmat2 GetRot2d(float alpha)\n{\n    float c = cos(alpha);\n    float s = sin(alpha);\n    \n    return mat2(c, -s, s, c);\n}\n\nfloat GetCylinder(vec3 p, vec3 top, vec3 bottom, float radius)\n{\n    vec3 ab = bottom - top;\n    vec3 ap = p - top;\n    \n    float t = dot(ab, ap) / dot(ab, ab);\n    \n    vec3 c = top + t * ab;\n\n    float x = length(p - c) - radius;\n    float y = (abs(t - .5) - .5) * length(ab);\n    float exterior = length(max(vec2(x, y), 0.));\n    float interior = min(max(x, y), 0.);\n    \n    return exterior + interior;\n}\n\nfloat GetMoon(vec3 p)\n{\n    float cyl1 = GetCylinder(p, vec3(0,0,0), vec3(0,.3,0), 2.);\n    float cyl2 = GetCylinder(p, vec3(0,-1,0.4), vec3(0,2,0.4), 1.7);\n    \n    return max(cyl1, -cyl2);\n}\n\nfloat GetMainShape(vec3 p)\n{\n    vec3 p1 = p;\n    p1.z -= 0.5;\n    float m1 = GetMoon(p1);\n    \n    vec3 p2 = p;\n    p2.xz *= GetRot2d(2. * PI / 3.);\n    p2.xz -= vec2(1.4, 2.76);\n    float m2 = GetMoon(p2);\n    \n    vec3 p3 = p;\n    p3.xz *= GetRot2d(-2. * PI / 3.);\n    p3.xz -= vec2(-1.4, 2.76);\n    float m3 = GetMoon(p3);\n    \n    return min(m3, min(m1, m2));\n}\n\nfloat GetDecor(vec3 p)\n{\n    float outer = GetCylinder(p, vec3(0,0,0), vec3(0,.3,0), 4.2);\n    float inner = GetCylinder(p, vec3(0,-1.,0), vec3(0,1,0), 4.05);\n    float circle = max(outer, -inner);\n    \n    float middleTip = GetCylinder(p, vec3(0,0,0), vec3(0,.3,0), 0.5);\n    \n    return min(circle, middleTip);\n}\n\nfloat GetDist(vec3 p)\n{\n    p.yx *= GetRot2d(iTime);\n    \n    vec3 p1 = p;\n    p1.z -= -1.5;\n    float middleHole = GetCylinder(p1, vec3(0,-1,0), vec3(0,1,0), 1.0);\n    float decor = GetDecor(p1);\n\tfloat result = max(-middleHole, GetMainShape(p));\n    \n    return min(decor, result);\n}\n\nvec3 GetNormal(vec3 p)\n{   \n    float d = GetDist(p);\n    vec2 e = vec2(0.01, .0);\n    \n    vec3 n = d - vec3(\n    \tGetDist(p - e.xyy),\n    \tGetDist(p - e.yxy),\n    \tGetDist(p - e.yyx));\n    \n    return normalize(n);\n}\n\nfloat RayMarch(vec3 ro, vec3 rd, float surfDist)\n{\n    float d0 = 0.;\n        for (int i = 0; i < MAX_STEPS; i++)\n        {\n            vec3 p = ro + rd * d0;\n            float ds = abs(GetDist(p));\n            d0 += ds;\n            if (abs(d0) > MAX_DIST || ds < surfDist)\n            {\n                break;\n            }\n        }\n    \n    return min(d0, MAX_DIST);\n}\n\nfloat GetGlow(vec3 ro, vec3 rd, vec3 hitPoint)\n{   \n    float glowValue = 0.;\n    float initialDist = length(ro - hitPoint);\n    \n    if (initialDist < 90.)\n    {\n        return 0.0;\n    }\n    \n    for (int i = 0; i < 10; i++)\n    {\n        glowValue += 1. - (RayMarch(ro, rd, 1.2 * float(i) * SURF_DIST) - initialDist);\n    }\n    \n    return glowValue * 0.002;\n}\n\nfloat GetLight(vec3 p)\n{\n    vec3 lightPos = vec3(-13., 15, 0);\n    \n    vec3 l = normalize(lightPos - p);\n    vec3 n = GetNormal(p);\n    \n    float diff = clamp(dot(n, l)*.5+.5, 0., 1.);\n\n    return diff;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy) / iResolution.y;\n\n    vec3 ro = vec3(0, 10, -1.5);\n    vec3 rd = normalize (vec3(uv.x, uv.y, 1));\n    rd.yz *= GetRot2d(PI / 2.);\n\n    float d = RayMarch(ro, rd, SURF_DIST);\n    vec3 p = ro + rd * d;\n    float dif = GetLight(p);\n    vec3 col = vec3(.5, 1, .5);\n    vec3 glow = GetGlow(ro, rd, p)* vec3(.4, 1, .65);\n    \n    fragColor = vec4(vec3(dif) * col + glow, 1.0);\n}","name":"Image","description":"","type":"image"}]}