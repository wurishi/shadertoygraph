{"ver":"0.1","info":{"id":"MlfXWS","date":"1439310683","viewed":288,"name":"Raumfahrtagentur","username":"WilstonOreo","description":"raumfahrtagentur.org - show must go on!","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["2d","starfield","rocket","hackerspaces"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"/// (c) 2015 WilstonOreo, raumfahrtagentur.org\nconst float soft = 0.002;\n\nconst float pi = 3.141593;\n\nvec3 cosmic_blue = vec3(0.024, 0.318, 0.545); // 06518b\nvec3 orange = vec3(0.91, 0.392, 0.196); // #e86432\nvec3 white = vec3(1.0); //#ffffff\n\nfloat circle(vec2 pos, float r)\n{\n  float _distance = length(pos);\n  float _v = (_distance ) / r;\n  return 1.0 - smoothstep(1.0 - soft / r,1.0,_v); \n}\n\nfloat line(vec2 coord, vec2 p1, vec2 p2, float thickness)\n{\n  float d = dot(coord - p1, p2 - p1) / length(p2 - p1);\n  d /= length(p2 - p1);\n  d = clamp(step(0.0, d) * d, 0.0, 1.0);\n  d = distance(p1 + d * (p2 - p1), coord);\n\n  float dst = 1.0 - smoothstep(thickness - soft, thickness + soft, d);\n\n  return dst;\n}\n\n\nfloat rectangle(vec2 pos, float w, float h)\n{\n  return 1.0 -  \n    max(smoothstep(0.5*w - soft,0.5*w + soft,abs(pos.x)), \n    smoothstep(0.5*h - soft,0.5*h + soft,abs(pos.y))); \n}\n\n\nvec2 hash2( vec2 p )\n{\nreturn fract(sin(vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3))))*43758.5453);\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(32.9898,78.233))) * 43758.5453);\n}\n\nfloat rand1(float i) {\n    return rand(vec2(i, i));\n}\n\nfloat star(int n, vec2 pos) {\n    float fn = float(n);\n    vec2 p = vec2(\n        rand1(0.12+float(n))* 3.,\n        rand1(0.5+float(n)) * 3.);\n   \tfloat pf = rand1(fn*0.63)*0.5+0.5;\n    p += vec2(0.0,-iTime*0.5)*pf;\n    p = mod(p, 3.);\n    p -= vec2(0.5);\n\n    \n    float dist = length(1.0+pos*1.5-p);\n    float i = 0.000000000000000001 * pow(dist, -10.0) * pf;\n \n    return i;\n}\n\nvec2 moon(int n, vec2 pos)\n{\n    float fn = float(n);\n    vec2 p = vec2(\n        rand1(0.12+float(n))* 3.,\n        rand1(0.5+float(n)) * 3.);\n   \tfloat pf = rand1(fn*0.63);\n    p += vec2(0.0,-iTime*0.5)*pf;\n    p = mod(p, 3.);\n    p -= vec2(0.5);\n\n    float size = 4.0*rand1(float(n)*1.5);\n    \n    float dist1 = length(1.0+pos*1.5-p + vec2(1.0,0.0));\n    float dist2 = length(vec2(1.0 - size*0.01,1.0 + size*0.01)+pos*1.5-p + vec2(1.0,0.0));\n    float i = clamp(0.00000001 * (pow(dist1, -10.0 + size)) * pf,0.1,0.15);\n    float j = clamp(0.00000001 * (pow(dist2, -10.0 + size)) * pf,0.1,0.15);\n \n    return vec2(20.0*(i - j),20.0 * (j - 0.1));\n}\n\nfloat triangle(in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\nvec2 e0 = p1 - p0;\nvec2 e1 = p2 - p1;\nvec2 e2 = p0 - p2;\n\nvec2 v0 = p - p0;\nvec2 v1 = p - p1;\nvec2 v2 = p - p2;\n\nvec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\nvec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\nvec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    \n    vec2 d = min( min( vec2( dot( pq0, pq0 ), v0.x*e0.y-v0.y*e0.x ),\n                       vec2( dot( pq1, pq1 ), v1.x*e1.y-v1.y*e1.x )),\n                       vec2( dot( pq2, pq2 ), v2.x*e2.y-v2.y*e2.x ));\n\n\n  float dist = -sqrt(d.x)*sign(d.y);\nreturn 1.0 - smoothstep(-soft,soft,dist);\n}\n\nvec3 cosmos(vec2 pos)\n{\n  vec2 value = vec2(0.0,0.0);\n    \n    for (int i=0; i<50; ++i) {\n        value += vec2(star(i,pos));\n    } \n\n    for (int i=50; i<53; ++i) {\n        value += moon(i,pos).xy;\n    } \n\n\n  return mix(cosmic_blue,white,clamp(value.x,0.0,1.0));\n}\n\nfloat windowBorder(vec2 pos) \n{\n  float angleOffset = 120.0 / 180.0 * pi * 2.0;\n  float theta = iTime * 0.4;\n  vec2 p0 = 0.2 * vec2(cos(theta),sin(theta));\n  vec2 p1 = 0.2 * vec2(cos(theta + angleOffset),sin(theta + angleOffset));\n  vec2 p2 = 0.2 * vec2(cos(theta + angleOffset * 2.0),sin(theta + angleOffset * 2.0));\n\n  // Window Border\n  return clamp(circle(pos,0.185) - circle(pos,0.16) \n  - line(pos,vec2(0.0,0.0),p0,0.015)\n  - line(pos,vec2(0.0,0.0),p1,0.015)\n  - line(pos,vec2(0.0,0.0),p2,0.015),  \n  0.0,1.0);   \n}\n\nvec2 polarToVec(float r, float phi)\n{\n  return r * vec2(cos(phi),sin(phi));\n}\n\nfloat star(vec2 pos) \n{\n  float dTheta = 18.0 / 180.0 * pi;\n  float r = 0.10;\n  float sum = 0.0;\n  for (float i = 0.0; i < 12.0; i += 4.0)\n  {\n    sum += triangle(pos,\n      polarToVec(r,(i + 1.0) * dTheta),\n      polarToVec(r / sqrt(8.0),(i + 15.0) * dTheta),\n      polarToVec(r,(i + 9.0) * dTheta));\n  }\n  return clamp(sum,0.0,1.0);\n}\n\n\nvec4 rocket(vec2 pos)\n{\n  vec2 windowCenter = vec2(0.0,-0.25);\n  \n  float wDist = length(pos + windowCenter);\n\n  if (wDist < 0.12 - soft) return \n    vec4(mix(cosmic_blue,white,star(pos + windowCenter)),1.0);\n\n  if (wDist < 0.12 + soft) \n    return vec4(mix(cosmic_blue,orange,smoothstep(0.12 - soft,0.12 +soft,wDist)),1.0);\n\n  float boost_wooble = 0.01 * sin(iTime*30.0);\n  float boost =  \n      circle(pos * vec2(5.0,1.0 + boost_wooble) + vec2(0.0,0.63),0.1) + \n      circle(pos * vec2(5.0,1.0 + boost_wooble) + vec2(0.4,0.6),0.1) + \n      circle(pos * vec2(5.0,1.0 + boost_wooble) + vec2(-0.4,0.6),0.1); \n\n  float d= (clamp(clamp(\n    circle(pos * vec2(3.8,1.5),0.95) - rectangle(pos + vec2(0.0,0.5),1.0,0.9) + \n    rectangle(pos - vec2(0.0,0.6),0.025,0.3) +\n    circle(pos + vec2(0.0,-0.75),0.05),0.0,1.0) +\n    triangle(pos - vec2(0.0,0.2),vec2(-0.475,-0.28),vec2(0.0,0.0),vec2(0.475,-0.28)) +\n    rectangle(pos - vec2(0.0,-0.17),0.95,0.18) + \n    rectangle(pos - vec2(0.0,-0.27),0.51,0.16) +\n    triangle(pos,vec2(-0.225,-0.45),vec2(0.0,0.0),vec2(0.225,-0.45)) + boost,\n    0.0,1.0));\n  return vec4(orange * d  +\n    white * clamp(\n      // Stripes\n      rectangle(pos - vec2(0.11,-0.15),0.055,0.055) +\n      rectangle(pos - vec2(0.0,-0.15),0.055,0.055) +\n      rectangle(pos - vec2(-0.11,-0.15),0.055,0.055) +\n      rectangle(pos - vec2(0.055,-0.205),0.055,0.055) +\n      rectangle(pos - vec2(-0.055,-0.205),0.055,0.055) + \n      windowBorder(pos + windowCenter) +\n      boost\n      ,\n    0.0,1.0),d);\n}\n\nvec3 background(vec2 pos)\n{\n  const float inner = 0.88;\n  const float stripe = 0.93;\n\n  vec4 rocketDist = rocket(pos);\n\n  float dist = length(pos);\n  if (dist < inner - soft) return mix(cosmos(pos),rocketDist.rgb,rocketDist.a);\n  if (dist < inner + soft)\n  {\n    return mix(rocketDist.rgb,white,smoothstep(inner - soft,inner +soft,dist));\n  }\n  if (dist < stripe - soft) return white;\n  if (dist < stripe + soft) {\n    return mix(white,orange,smoothstep(stripe - soft,stripe+soft,dist));\n  }\n  if (dist < 1.0 - soft) return orange;\n  if (dist < 1.0 + soft) {\n    return mix(orange,white,smoothstep(1.0 - soft,1.0+soft,dist));\n  }\n\n  return white;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  vec2 pos = (-iResolution.xy + 2.0*fragCoord.xy)/(iResolution.y) + vec2(0.0,0.0);\n  \nfragColor = vec4(background(pos), 1.0 );\n}","name":"Image","description":"","type":"image"}]}