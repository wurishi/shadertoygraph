{"ver":"0.1","info":{"id":"7tKGD3","date":"1638470345","viewed":138,"name":"Platformer-ish Water Attempt","username":"wainggan","description":"it looks interesting","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["water"],"hasliked":0,"parentid":"NtVGzd","parentname":"Simple Water Shader With Top"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float wave(float pos, float time, float freq, float intense) {\n    return sin(pos*freq + time)*intense;\n}\n\nvec3 watershine(vec2 uv, float time) {\n    #define SHINE 1.08\n    #define THRESHOLD 0.45\n    #define WATERSPEED 0.09\n\n    float scroll = iTime * WATERSPEED;\n    vec2 scale = vec2(uv.x * 0.8, uv.y * 1.7);\n    float offset = 0.2;\n    \n    float col1 = texture(iChannel1, scale + vec2(scroll, 0.0)).r;\n    float col2 = texture(iChannel1, scale + vec2(-scroll + offset, offset)).r;\n    \n    float soup = col1 + col2;\n    if (soup <= SHINE) {\n        soup = clamp(soup, 0.0, THRESHOLD);\n    }\n    soup = min(soup, 1.0);\n    return vec3(soup);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    const float waveStrength = 0.01;\n    const float waveFrequency = 64.0;\n    const float waveSpeed = 0.5;\n    \n    vec3 TexCol = texture(iChannel0, uv).rgb;\n    \n    vec2 warpOffset = vec2(sin((iTime + waveFrequency * uv.y) * waveSpeed + uv.y)* waveStrength, \n    sin((iTime / 2.0 + waveFrequency * uv.x) * waveSpeed + uv.x)* waveStrength);\n    \n    vec3 EditCol = texture(iChannel0, uv + warpOffset).rgb;\n    EditCol.b += 0.5;\n    EditCol.rg -= 0.2;\n    \n    \n    const float height = 0.5;\n    const float outlineThresh = 0.005;\n    \n    float wavetop = wave(uv.x, iTime*1.1, 32.0, 0.01) + wave(uv.x, iTime * -3.0, 64.0, 0.01);\n    float heightmap = wavetop-uv.y;\n    \n    vec3 col = step(-height, heightmap) == 1.0 ? EditCol + watershine(uv+warpOffset*2.0, iTime)*uv.y*2.0 : TexCol;\n    if (-heightmap<height+outlineThresh && height-outlineThresh<-heightmap) {\n        col = vec3(1.0);\n    }\n    \n    \n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}