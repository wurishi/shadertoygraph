{"ver":"0.1","info":{"id":"M3s3Ds","date":"1708086669","viewed":62,"name":"Fork costasArray paperjack 455","username":"paperjack","description":"No offense @ollj, but I found your code nigh unreadable and I had to refactor it!\nI still don't really understand how the pattern is generated nor how to calculate/change its size.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["dither","costas","costasarray"],"hasliked":0,"parentid":"tdjfzR","parentname":"costasArray2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//source ollj, FabriceNeyret2\n//https://www.shadertoy.com/view/tdjfzR\n/*\ncostas array is pattern free\nIn theory ideal for dithering\nThe greyscaling gradient is BASIC, and can easily be more distorted\n,by adding any ;fragCoord.x+=fragCoord.y*b; b!=0 offset\n*/\n\nfloat costas3(float x,float b, float period){\n    // return mod( round(      exp2(mod(x,period)) ) , period );\n    return mod( round(     pow(b,mod(x,period)) ) , period );      // not exactly indentical\n    // return float(int( .5 + pow(b,mod(x,period)) ) % int(period));  // not exactly indentical\n    // return float(int(round(pow(b,mod(x,period)))) % int(period));  // original\n    //ollj initially forced this into type-int as much as possible, hoping for more precision and being more work safe, but apparently it barely mattered anyways and was just slowing it down\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    //the pairs (3,5) (3,7) (5,7)  make costas arrays\n    //the pairs (2,11) (2,13) (2,29) look a lot like they make costas arrays\n    //the function below fails for too large [base1] values\n    //and it breaks for period>=37\n\n    vec2       b = vec2(2);\n    float period = 28.;\n    \n    float c = mod( fragCoord.x - costas3(fragCoord.y, b.x, period) , period+1.); //Gradient\n    c = mod( fragCoord.x - costas3(  c, b.y, period) , period+1.); //Gradient\n    c /= period-2.;\n    \n    \n    float gradient = fragCoord.x/iResolution.x;\n    if(gradient > c){    \n        fragColor=vec4(1.0);\n    } else {\n        fragColor=vec4(vec3(0.0),1.0);\n    }\n    \n    if(fragCoord.y/iResolution.y < 0.1){\n        fragColor=vec4(c,c,c,1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}