{"ver":"0.1","info":{"id":"4tdyDS","date":"1533875051","viewed":643,"name":"feedback stripes","username":"aferriss","description":"Testing copying outlines with feedback. Click to move circle","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["shapes","stripes","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 brightnessContrast(vec3 value, float brightness, float contrast)\n{\n    return (value - 0.5) * contrast + 0.5 + brightness;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec4 t = texture(iChannel0, uv)+0.03;\n    //t.rgb = brightnessContrast(t.rgb, 0.0,2.0);\n    //t = pow(t, vec4(4.0));\n    t = smoothstep(0.4, 0.7, t);\n    //t = smoothstep(0.7, 0.9, t);\n    //t = step(0.5, t);\n    fragColor = t;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// just make a circle that you can move with the mouse\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n    m = m * 2.0 - 1.0;\n    \n    uv.xy += -m.xy*0.5;\n    \n    float l = length(uv - 0.5 );\n    \n    \n    float l1 = smoothstep(0.1, 0.11, l);\n    \n    l = 1.0 - l1;\n    fragColor = vec4(l,l,l,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float dampening = 0.9;\nvec2 scale = vec2(0.9);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uv2 = uv;\n    \n    vec2 m = iMouse.xy / iResolution.xy;\n    m = m * 2.0 - 1.0;\n    m *= 0.5;\n    \n    float aspect = iResolution.y / iResolution.x;\n   \n    //scale.x *= aspect;\n    \n    // scale tex coords based on buf a circle pos\n    uv2 -= m;\n    uv2 = 2.0 * uv2 - 1.0;\n    uv2 *= scale;\n    uv2 = 0.5 * uv2 + 0.5;\n    uv2 += m;\n    \n    vec4 a = texture(iChannel0, uv);\n    vec4 b = texture(iChannel1, uv2);\n\n    b = a + (1.0 - b)*(dampening);//*(distance(uv-0.5, m)+1.0));\n   // b = fract(b);\n    fragColor = b;//clamp(b, vec4(0.0), vec4(1.0));\n    //fragColor.a = 1.0;\n   \n}","name":"Buffer B","description":"","type":"buffer"}]}