{"ver":"0.1","info":{"id":"MsySWV","date":"1466625627","viewed":316,"name":"Erasing Tool Testing","username":"chipbell4","description":"Testing out some eraser ideas","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","masking","erasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n    \n    // The list of path segments to draw\n    vec2 pathSegments[5];\n    pathSegments[0] = vec2(0.1, 0.1);\n    pathSegments[1] = vec2(0.25, 0.25);\n    pathSegments[2] = vec2(0.75, 0.25);\n    pathSegments[3] = vec2(0.75, 0.75);\n    pathSegments[4] = vec2(0.25, 0.75);\n    \n    vec2 v;\n    vec2 w;\n    vec2 direction;\n    vec2 approachPoint;\n    float t;\n    \n    // For each path segment, determine the shortest distance to the line segment:\n    // http://stackoverflow.com/a/1501725\n    for(int i = 0; i < 4; i++) {\n        v = pathSegments[i];\n        w = pathSegments[i+1];\n        direction = w - v;\n        \n        // the parameter at which closest approach occurs (clamping to 0-1)\n        t = dot(uv - v, direction) / dot(direction, direction);\n        t = min(t, 1.);\n        t = max(t, 0.);\n        \n        // find the closest point on the line where approach occurs\n        approachPoint = v + t * (w - v);\n           \n        if(distance(approachPoint, uv) < 0.05) {\n            // erase to white\n            fragColor = vec4(1., 1., 1., 1.);\n            \n            // or, erase to a background image\n            //fragColor = texture(iChannel1, uv); \n            \n            // bail out early, to help frame rate\n            return;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}