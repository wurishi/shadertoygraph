{"ver":"0.1","info":{"id":"tlsXD2","date":"1564413627","viewed":74,"name":"RayMarching:XOR","username":"Hirai_worthless","description":"normal vec is difficult","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float XOR (float a,float b){\n\tfloat tmp1 = max(a,b);\n    float tmp2 = min(a,b) + 0.0001;\n    return max(tmp2,-tmp1);\n    \n}\nfloat map(vec3 p){\n    p.xz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n    float boxes = 100000.0;\n    for(float i = -10.0; i < 11.0; i += 1.0){\n    \tfloat box = length(max(abs(p - vec3(0.5 * i,0.5 * i,0.0))-vec3(0.5,0.5,0.15),0.0))-0.1;\n        boxes = XOR(boxes,box);\n    }\n    \t\n    \treturn boxes;\n}\n\nfloat trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 96; ++i){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 U)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec3 R = iResolution,\n    r = normalize(vec3((2.*U - R.xy )/  R.y,1.2)),\n    o = vec3(0,0,-2.5);\n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.1);\n    vec3 fc = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}