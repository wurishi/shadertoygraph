{"ver":"0.1","info":{"id":"7lyBDR","date":"1664333246","viewed":46,"name":"Koch -- Messing with 2","username":"Sent","description":"started from koch. symmetry is fun","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kifs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    float t = .6*iTime;\n    vec2 st = vec2(.5*sin(t)+.5, .5*cos(t)+.5);\n    \n    float phi = (.5*st.y+.9) * 2./3. * 3.14159265;\n    vec2 n = vec2(sin(phi), cos(phi));\n    \n    float scale = 1.;\n    uv *= .9;\n    scale *= .9;\n    \n    uv.x += .5;\n    for (int i = 0; i < 4; i ++) {\n        scale *= 3.;\n        uv *= 3.;\n        uv.x -= 1.5;\n        \n        uv.xy = abs(uv.xy);\n        uv.x -= st.x;\n        uv -= n*min(0., dot(uv, n))*2.;\n    }\n  \n    \n    \n    float w = 2.*(st.x+1.);\n    float d = length(uv - vec2(clamp(uv.x, -w, w), 0.));\n    col += .8*smoothstep(2./iResolution.y, .0, d/scale);\n    col.rb += uv*.01;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}