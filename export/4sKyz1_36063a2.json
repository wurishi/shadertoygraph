{"ver":"0.1","info":{"id":"4sKyz1","date":"1521046017","viewed":725,"name":"Strips","username":"peko","description":"Glitch effect","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["mirror","strips"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\n\nvec3 point(vec2 p) {\n\treturn length(p)<0.005 ? vec3(1.0) : vec3(0.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // LINE ax+by+c = 0\n    // y = -(ax+c)/b\n    // through two points\n    // a = y2-y1 \n    // b = x1-x2\n    // c = x2y1-x1y2\n    \n    vec2 p1 = vec2(\n        0.5+sin(iTime*0.5)*0.3,\n        0.5+cos(iTime*0.5)*0.3);\n    vec2 p2 = vec2(\n        0.5+sin(iTime*0.2)*0.2,\n        0.5+cos(iTime*0.2)*0.2);\n    \n    float a = p2.y-p1.y;\n    float b = p1.x-p2.x;\n    float c = p2.x*p1.y-p1.x*p2.y;\n \n    float x = uv.x;\n    float y = -(a*x+c)/b;\n    \n    vec3 col;\n    if (uv.y > y) {\n    \tcol = texture(iChannel0, uv).rgb;\n    } else {\n        // closest point to line\n        // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n        float x0 = uv.x;\n        float y0 = uv.y;\n        vec2 uv2 = vec2(\n            b*( b*x0-a*y0) - a*c,\n            a*(-b*x0+a*y0) - b*c);\n        uv2 /= a*a+b*b;\n        col = texture(iChannel0, uv2 ).rgb;\n    }\n    col+= point(uv-p1)+point(uv-p2);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}