{"ver":"0.1","info":{"id":"4tjczh","date":"1509318323","viewed":86,"name":"RevealAssignment","username":"rjb361","description":"blur to sharpen","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Background;\nvec4 Layer1;\nvec4 Layer2;\n\nvec2 MousePos;\n\nfloat Radius = 0.1;\n\nmat3 blur = mat3(\n0.111, 0.111, 0.111, // first column (not row!)\n0.111, 0.111, 0.111, // second column\n0.111, 0.111, 0.111 // third column\n);\n\nmat3 sharpen = mat3(\n0., -1, 0.0, // first column (not row!)\n-1, 5, -1, // second column\n0., -1, 0.0 // third column\n);\n\nmat3 emboss = mat3(\n-2, -2, 0, //first column\n-2, 6, 0, //second column\n0, 0, 0 //third column\n);\n\nmat3 outline = mat3(\n-1, -1, -1, //first column\n-1, 8, -1, //second column\n-1, -1, -1 //third column\n);\n\nmat3 leftSobel = mat3(\n1, 2, 1, //first column\n0, 0, 0, //second column\n-1, -2, -1 //third column\n);\n\nvec3 aSample(const int x, const int y, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n\tuv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n\treturn texture(iChannel0, uv).xyz;\n}\nvec3 aFilter(in vec2 fragCoord, mat3 kernel)\n{\n\tvec3 sum;\n\n\tint n = -1;\n\tfor(int i = 0; i < 3; i++, n++)\n\t{\n\n\t\tint m = -1;\n\t\tfor(int j = 0; j < 3; j++, m++)\n\t\t{\n\t\t\tsum += aSample(n, m, fragCoord) * kernel[i][j]; \n\t\t}\n\n\t}\n\treturn sum; \n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 fc = fragCoord.xy;\n    float aspect = iResolution.y/iResolution.x;\n    \n    \n    \n    uv.y *= aspect;\n    \n    MousePos = iMouse.xy/iResolution.xy;\n    MousePos.y *= aspect;\n    \n    \n    float circleBrush = step(Radius, length(MousePos-uv));\n    \n    Background = vec4(aFilter(fc, sharpen), 1.0);\n    \n    Layer1 = vec4(aFilter(fc, blur), 1.0);\n   \n    //Layer1 = vec4(aFilter(fc, emboss), 1.0);\n    //Layer1 = vec4(aFilter(fc, outline), 1.0);\n    //Layer1 = vec4(aFilter(fc, leftSobel), 1.0);\n    \n    Layer1 *= circleBrush;\n    vec4 composite = mix(Background, Layer1 , Layer1.a); \n    \n    fragColor = composite;\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}