{"ver":"0.1","info":{"id":"l3tXDr","date":"1718901125","viewed":95,"name":"London gets belousoved","username":"BearKirb","description":"London gets turned into three chemicals that form an oscillating reaction.","likes":11,"published":1,"flags":32,"usePreview":1,"tags":["diffusion","reaction","chemical","bz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float r(vec2 uv){\nreturn mix(vec3(0.8,0.6,0.4)/1.1,vec3(0.6,0.6,0.8)*1.4,(texture(iChannel0,uv).rrr+texture(iChannel0,uv).bbb/2.0-0.9)*3.0).b;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Output to screen\n    vec3 lightPos=vec3(0.5,0.5,1.0);\n    if(iMouse.x>0.1&&iMouse.y>0.1){\n    lightPos=vec3(iMouse.x/iResolution.x,iMouse.y/iResolution.y,1.0);\n    }\n    vec3 screenCoord=vec3(uv.x,uv.y,0.0);\n    vec3 light=screenCoord-lightPos;\n    vec3 normal=vec3(0.0,0.0,0.3);\n    vec2 eps=vec2(1.0/iResolution.xy);\n    normal.x+=r(uv)-r(uv+vec2(eps.x,0.0));\n    normal.y+=r(uv)-r(uv+vec2(0.0,eps.y));\n    normal=normalize(normal);\n    light=normalize(light);\n    float mult=-dot(light,normal)*0.75+0.25;\n    float spec=pow(mult,256.0)/2.0;\n    fragColor.rgb=mix(vec3(0.8,0.6,0.4)/1.1,vec3(0.5,0.5,0.9)*1.4,(texture(iChannel0,uv).rrr+texture(iChannel0,uv).bbb/2.0-0.9)*3.0)*mult+spec;\n    fragColor.a=1.0;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 n) { \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy;\n\nif(iFrame<10){\nfragColor.rgb=texture(iChannel1,uv).rgb;//normalize(vec3(rand(uv.xy+2.0),rand(uv.xy+1.0),rand(uv.xy)));\n}else{\nvec2 eps=vec2(1.0/iResolution.xy);\nvec3 col=texture(iChannel0,uv).rgb;\n\nvec3 sum=vec3(0.0);\nfor(int x=-7;x<=7;x++){\nfor(int y=-7;y<=7;y++){\nif(x!=0||y!=0){\nsum+=texture(iChannel0,uv+eps*vec2(x,y)).rgb;\n}\n}\n}\nsum/=(196.0);\nvec3 params=vec3(1.0,1.0,1.02);\ncol.r+=sum.r+sum.r*(sum.g*params.x-sum.b*params.z);\ncol.g+=sum.g+sum.g*(sum.b*params.y-sum.r*params.x);\ncol.b+=sum.b+sum.b*(sum.r*params.z-sum.g*params.y);\n\n\nfragColor.rgb=clamp(col/2.1,0.0,1.0);\n}\n    fragColor.a=1.0;\n}","name":"Buffer A","description":"","type":"buffer"}]}