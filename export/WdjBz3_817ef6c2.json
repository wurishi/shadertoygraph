{"ver":"0.1","info":{"id":"WdjBz3","date":"1590520262","viewed":84,"name":"gradney spears","username":"kloumpt","description":"Just remapping scenes through sidecuts","likes":1,"published":1,"flags":96,"usePreview":0,"tags":["in","gradients","gradients"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Mt23RK","filepath":"https://soundcloud.com/dijon17/britney-spears-toxic-dnb-remix","previewfilepath":"https://soundcloud.com/dijon17/britney-spears-toxic-dnb-remix","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0., 1., 0.);\n    \n    col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv_c = (uv * 2.0 - 1.0) * iResolution.xy / iResolution.yy;\n    vec2 p = uv_c;\n\n    vec3 col = vec3(0., 1., 0.);\n    \n    float t = time * BPM / 60.0;\n    float dA = sceneA(vec3(p.xy, 0.0), t - 1.0);\n    float dB = sceneA(vec3(p.xy, 0.0), t + 1.0);\n    \n    float dX = sceneB(vec3(dA - 0.5, dB, 0.0), t);\n    float dY = sceneB(vec3(dB + 0.5, dA, 0.0),-t);\n    \n    \n    float band_size = 1.0 + 4.0 * abs(fract(t / 32.0) * 2.0 - 1.0);\n    p = vec2(fract(abs(dX) * band_size), fract(abs(dY) * band_size));\n    \n    col = texture(iChannel0, p).rgb;\n    \n    \n    vec3 image = texture(iChannel0, abs(rot(abs(rot(uv_c, t / 64.0 * PI)) * 1., -t/8.0 * PI))).rgb;\n   \n    float mask = step(col.g, max(col.r, col.b));\n   \tfloat image_mask = step(image.g, max(image.r, image.b));\n    \n    vec3 bg = texture(iChannel1, fract(uv - floor(4.0 * uv_c) / iResolution.xy)).rgb;\n    \n    \n    vec3 tint = vec3(0.0, 0.0, 1.00);\n    col = col * (0.2 + 1.0 * step(image, vec3(0.5)));\n    col = mix(image, col, mask);\n    col = floor(col * (8.0 + 1.0)) / 8.0;\n        \n    \n    col = mix(abs(bg * 0.95 + 0.05 * tint), col, image_mask);\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define MAX 100.0\n#define EPS 0.001\n#define PI 3.141592\n\n\n#define BPM 174.50\n\n#define startTime 0.0\n#define loopTime 60.0\n#define time (mod(iTime, loopTime) + startTime)\n\n\nvec2 rot(vec2 p, float r) {\n    return vec2(\n        cos(r) * p.x - sin(r) * p.y,\n        cos(r) * p.y + sin(r) * p.x\n    );\n}\n\n\nfloat opU(float a, float b) {\n    return min(a, b);\n}\n\nfloat sphere(vec3 p, float r) {\n    return length(p) - r;\n}\n\nfloat box( vec3 p, vec3 b ) {\n  vec3 q = abs(p) - b;\n  return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\n\nfloat sceneA(vec3 p, float t) {\n    float d = MAX;\n    d = opU(d, sphere(p - vec3(cos(t * PI / 16.0), sin(t * PI / 4.0), 0.0), 0.5 + 0.05 * abs(sin(t * PI))));\n    d = opU(d, box(vec3(rot(p.xy, t * PI / 16.0), p.z) - vec3(0.0), vec3(0.5)));\n    \n    return d;\n}\n\nfloat sceneB(vec3 p, float t) {\n    float d = MAX;\n    d = opU(d, sphere(p - vec3(cos(t * PI / 4.0), sin(t * PI / 16.0), 0.0), 0.5 + 0.05 * abs(sin(t * PI))));\n    d = opU(d, box(p - vec3(0.0), vec3(0.5)));\n    \n    return d;\n}\n\nfloat sceneC(vec3 p, float t) {\n    float d = MAX;\n    d = opU(d, sphere(p - vec3(cos(t * PI / 4.0), sin(t * PI / 4.0), 0.0), 0.5 + 0.05 * (sin(t * PI * 4.0))));\n    d = opU(d, box(p - vec3(0.0), vec3(0.5)));\n    \n    return d;\n}\n    ","name":"Common","description":"","type":"common"}]}