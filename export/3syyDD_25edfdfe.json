{"ver":"0.1","info":{"id":"3syyDD","date":"1602814373","viewed":643,"name":"Acid Beach","username":"jarble","description":"Based on my [url=https://www.shadertoy.com/view/wsycD1]\"Neon Cells\"[/url] shader","likes":12,"published":3,"flags":8,"usePreview":0,"tags":["fractal","psychedelic","beach"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec3 col;\n    float t;\n    \n    for(int c=0;c<3;c++){\n\t    vec2 uv = (fragCoord*50.0-iResolution.xy)/iResolution.y;\n        t = iTime;\n        for(int i=0;i<10;i++)\n        {\n            uv /= 1.5;\n            uv += sin(col.yx);\n        \tuv += float(i) + (sin(uv.x)*cos(uv.y)+sin(uv.y)*cos(iTime)+sin(iTime)*cos(uv.x));\n        }\n     col[c] = (sin(uv.x+uv.y+iTime));\n\t}\n    \n    fragColor = vec4(col,1.0);\n    \n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// http://countercomplex.blogspot.jp/2011/10/algorithmic-symphonies-from-one-line-of.html\n// http://wurstcaptures.untergrund.net/music/\n\nvec2 sound1(int t)\n{\n    t = (t>>(24*(t/(4096))))|(t>>(8+(t/(131072))))|(t*2);\n    return vec2(float(t & 0xff - 128) / 128.);\n}\n\nvec2 mainSound( in int samp,float time){\n    time *= 4000.0;\n    float factor = 1.5;\n    vec2 result = vec2(0.0);\n    for(int i = 0; i < 4; i++){\n    \tresult += sound1(int(time*factor))*factor;\n        factor *= 1.5;\n    }\n    return result/100.0;\n}","name":"Sound","description":"","type":"sound"}]}