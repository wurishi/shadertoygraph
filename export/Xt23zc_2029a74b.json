{"ver":"0.1","info":{"id":"Xt23zc","date":"1431734825","viewed":1798,"name":"Hyperbolic Scaling","username":"NBickford","description":"This texture apparently shrinks endlessly on one axis, while stretching on the other - and somehow loops every three seconds. Try to figure out how it's done before looking at the code on the right.\nAdditionally, this can be done with < 200 characters!","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["2d","opart","15tc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//1.5TC challenge version - is it possible to do better? Currently 195 characters, with tons of illegal operations.\n/*\n#define p exp2(fract(iDate.w/3.)+float(i))\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    for(int i=-9;i<9;i++){\n        fragColor+=min(p,1./p)*texture(iChannel0,fragCoord*.004*vec2(1./p,p))/3.;\n    }\n}\n*/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Set up a coordinate system with the origin at the bottom-center.\n    vec2 uv=(fragCoord.xy-iResolution.xy*0.5)/iResolution.x+vec2(0.0,iResolution.y/iResolution.x*0.5);\n    uv*=4.0;\n    \n    float k=2.0;                // Scaling exponent for each layer\n    float t=mod(iTime/3.0,1.0); // Repeats every three seconds; 0 <= t < 1\n    \n    vec3 col=vec3(0.0);\n    float tot=0.0;\n    for(int i=-9;i<=9;i++){\n        // Compute scaling of the ith layer\n        float py=pow(k,t+float(i));\n        float px=pow(k,t+float(i));\n        // Sampling positions\n        float nx=uv.x/px;\n    \tfloat ny=uv.y*py;\n        // Compute blend of the ith layer\n        float sc=pow(2.0,-abs(float(i)+t));\n        col+=sc*texture(iChannel0,vec2(nx,ny)).rgb;\n        tot+=sc;\n    }\n    \n    col=col/tot;\n    \n    fragColor=vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}