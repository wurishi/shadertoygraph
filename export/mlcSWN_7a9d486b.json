{"ver":"0.1","info":{"id":"mlcSWN","date":"1685398410","viewed":111,"name":"squares effect 001","username":"catafest","description":"simple square effect","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["math","squares","romania","catafest"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Dimensiunile ecranului\n    vec2 resolution = iResolution.xy;\n\n    // Normalizarea coordonatelor\n    vec2 uv = ( fragCoord - resolution) / resolution.y;\n\n    // Redimensionarea la aspect ratio\n    uv.x *= resolution.x / resolution.y;\n\n    // Calculul coordonatelor 3D\n    float x = uv.x;\n    float y = uv.y;\n    float z = sin(uv.x * 5.0) * cos(uv.y * 5.0) *5.0 ;\n\n    // Calculul distanței față de centrul \n    float distance = sqrt(x * x + y * y + z * z);\n\n    // Calculul valorii fractalului în funcție de distanță\n    float l = clamp(uv.x,uv.y,0.0);\n    //float fractalValue = z + sin(distance * distance * cos(iTime));\n    float fractalValue = z*z*z*sin(distance *exp(l)/ (z*z * cos(iTime) * distance+sin(iTime) ));\n\n    // Setarea culorii în funcție de fractalValue\n    vec3 color = vec3(sin(fractalValue)/fractalValue);\n\n    // Afisarea culorii\n    fragColor = vec4(fractalValue+sin(iTime)/color.x,color.y/fractalValue-cos(iTime),fractalValue-sin(iTime)/color.z, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}