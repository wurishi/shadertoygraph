{"ver":"0.1","info":{"id":"WtVfzd","date":"1614922575","viewed":123,"name":"Parabola - Two-Point Control","username":"oneshade","description":"Parabola parametrized by two points. Useful as an intuitive way to control a parabola. Drag the points with the mouse.","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["2d","math","graph","parabola","parametrization","controlpoint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define draw(d, c) color = mix(color, c, smoothstep(unit, 0.0, d))\n#define TEST_COEFFICIENTS\n\n// Value of y at x of a parabola parametrized by points a and b\nfloat ParabolaFunction(in float x, in vec2 a, in vec2 b) {\n    float pa = x - a.x, ba = b.x - a.x;\n    return (b.y - a.y) * pa * pa / (ba * ba) + a.y;\n}\n\n// Derivative at x of a parabola parametrized by points a and b\nfloat ParabolaDerivative(in float x, in vec2 a, in vec2 b) {\n    float ba = b.x - a.x;\n    return 2.0 * (x - a.x) * (b.y - a.y) / (ba * ba);\n}\n\n// Coefficients a, b, and c of a parabola parametrized by points a and b\nvec3 ParabolaCoefficients(in vec2 a, in vec2 b) {\n    float ba = b.x - a.x;\n    float coeff1 = (b.y - a.y) / (ba * ba);\n    float coeff2 = -2.0 * a.x * coeff1;\n    float coeff3 = a.x * a.x * coeff1 + a.y;\n    return vec3(coeff1, coeff2, coeff3);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    float t = 0.25 * unit;\n    vec3 color = vec3(1.0);\n\n    // Load control points\n    vec2 p1 = texelFetch(iChannel0, ivec2(0, 0), 0).xy;\n    vec2 p2 = texelFetch(iChannel0, ivec2(1, 0), 0).xy;\n\n    // Grid\n    draw(abs(mod(uv.x + 0.125, 0.25) - 0.125) + t, vec3(0.0, 0.0, 1.0));\n    draw(abs(mod(uv.y + 0.125, 0.25) - 0.125) + t, vec3(0.0, 0.0, 1.0));\n    draw(abs(uv.x), vec3(1.0, 0.0, 0.0));\n    draw(abs(uv.y), vec3(1.0, 0.0, 0.0));\n\n    // Parabola\n    #ifdef TEST_COEFFICIENTS\n    vec3 coeffs = ParabolaCoefficients(p1, p2);\n    float f = coeffs[0] * uv.x * uv.x + coeffs[1] * uv.x + coeffs[2];\n    float d = 2.0 * coeffs[0] * uv.x + coeffs[1];\n\n    #else\n    float f = ParabolaFunction(uv.x, p1, p2);\n    float d = ParabolaDerivative(uv.x, p1, p2);\n    #endif\n\n    draw(abs(uv.y - f) / sqrt(1.0 + d * d) - t, vec3(0.6, 0.0, 0.6));\n\n    // Draw control points\n    draw(length(uv - p1) - 0.075, vec3(0.0));\n    draw(length(uv - p2) - 0.075, vec3(0.0));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SELECTION_RADIUS 0.2\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 iFragCoord = ivec2(fragCoord);\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    if (iFrame == 0) {\n        if (iFragCoord == ivec2(0, 0)) fragColor.xy = vec2(0.0, 0.0);\n        if (iFragCoord == ivec2(1, 0)) fragColor.xy = vec2(1.0, 1.0);\n    }\n\n    if (iFrame > 0) {\n        if (iFragCoord.x < 2 && iFragCoord.y == 0) {\n            vec2 mouse = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n            fragColor = texelFetch(iChannel0, iFragCoord, 0);\n            if (length(mouse - fragColor.xy) < SELECTION_RADIUS) {\n                fragColor.xy = mouse;\n            }\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}