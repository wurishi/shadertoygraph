{"ver":"0.1","info":{"id":"lsdBDB","date":"1526647239","viewed":119,"name":"light why1","username":"wanghy","description":"asdfasdf","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["light"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LIGHT_RANGE 90.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 light = vec2(.5,1.2);\n    \n    if(iMouse.z > 0.) {\n     \t//如果鼠标在画布上 设置光线的方向\n        light = iMouse.xy / iResolution.xy;\n        \n    } else {\n     \t//光线方向周期化\n        light = vec2(abs(sin(iTime)),1.2);\n        \n    }\n    \n    //根据uv向量乘以光线向量的大小确定光线密度\n    vec3 finalColor = vec3(.8,.8,.8) * pow(max(dot(normalize(light),normalize(uv)),0.),LIGHT_RANGE);\n    vec3 bg = texture(iChannel0, uv).xyz / 33.;\n    \n\tfragColor = vec4(bg*(finalColor.x*50.),1.);\n}","name":"Image","description":"","type":"image"}]}