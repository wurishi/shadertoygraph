{"ver":"0.1","info":{"id":"3d3XD7","date":"1673457825","viewed":86,"name":"Mandelbrot squid","username":"matistjati","description":"Doing an MRI scan of the buddhabrot (slicing it along the y axis)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 origin = vec2(0.);\nconst float escapeRadius = 1000000.;\n\nvec3 getColor(float v)\n{\n    /*vec3 col = vec3(0.1) * sin(v);\n    col = mix(col, vec3(0.1, 0.2, 0.4), sin(1.-v));\n    col = mix(col, vec3(0.1, 0.2, 0.7), pow(sin(1.-v),2.));\n    return col;*/\n\t\n    float a = 1.;\n    float b = 0.34004648219;  // 1/3*sqrt(2)\n    float c = 0.17965377284; // 1/7*3^(1/8)\n    return vec3((1.-cos(a*v))*0.5, (1.-cos(b*v))*0.5, (1.-cos(c*v))*0.5);\n}\n\nvec3 iterate(vec2 b)\n{\n    vec3 c = vec3(b.xy, sin(iTime));\n    vec3 z = c;\n    vec3 col = vec3(1.);\n\n    \n    //const float k = 0.69314718056;\n    const float maxIter = 200.;\n    float i=0.;\n    for(;i<maxIter;i++)\n    {\n        float r = length(z);\n        float theta = acos(z.z/r)*2.;\n        float phi = atan(z.y, z.x)*2.;\n        \n        z = r*r*vec3(sin(theta)*cos(phi), sin(theta)*sin(phi), cos(theta)) + c;\n        \n\n        if(dot(z,z)>escapeRadius)\n        {\n\t\t\tbreak;\n        }\n        \n    }\n    \n    return  cos( vec3(0.2,0.4,0.9) + vec3(0.2,0.0,0.9) * i* 0.05) * -0.5 + 0.5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = 2157.7;\n    float zoom = 1.;\n    \n\tvec2 uv = (2. * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    vec2 c = origin + uv*zoom;\n    \n    vec3 col = iterate(c);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}