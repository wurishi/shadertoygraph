{"ver":"0.1","info":{"id":"ctlGRS","date":"1671935627","viewed":102,"name":"Endless flight","username":"CynicRus","description":"just an experiments with toy shaders)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["effect","flight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITER 78\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\t//vec2 p = iResolution.xy / fragCoord.xy;\n    vec2 p = fragCoord.xy / iResolution.xy;\n    p = p * 2.0 - 1.0;\n\tvec2 i = p;\n\tfloat c = 2.0;\n\tfloat inten = 5.0;\n\n\tfor (int n = 0; n < ITER; n++) {\n\t\tfloat t = iTime * (2.0 - (2.0 / float(n+1)));\n\t\ti = p + vec2(\n\t\t\tatan(t - i.x) + atan(t + i.y), \n\t\t\tatan(t - i.y) + atan(t + i.x)\n\t\t);\n\t\tc += 1.0/length(vec2(\n\t\t\tp.x / (tan(i.x+t)/inten),\n\t\t\tp.y / (atan(i.y+t)/inten)\n\t\t\t)\n\t\t);\n\t}\n\tc /= float(ITER);\n\t\n\tfragColor = vec4(vec3(sqrt(c))*vec3(0.3, 0.4, 0.9), 1.0);\n}","name":"Image","description":"","type":"image"}]}