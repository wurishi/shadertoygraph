{"ver":"0.1","info":{"id":"XfcBRS","date":"1733194292","viewed":116,"name":"Shipwreck in a broken sea","username":"cheesefollowsyou","description":"The shipwreck fractal but it uses a gold FBM as its background. I added two layered sinewaves to make a ripple effect.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["fractal","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX 30\n#define H(v) fract( tan(length(v)*.75) *(v).x )\n\nfloat noise (vec2 p) {\n    vec2 i = floor(p),\n         f = fract(p);\n    f *= f * (3. - 2.*f);\n    return mix( mix( H(i)            , H(i + vec2(1,0)), f.x),\n                mix( H(i + vec2(0,1)), H(i + 1.)       , f.x),\n                f.y );\n}\n\nfloat fbm (vec2 p) {\n    float v,a = .5;\n    for (int i; i++ < 6; )\n        v += a * noise(p),\n        p += p,\n        a /= 2.;\n\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 SC = fragCoord/iResolution.y; // Screen coord\n    vec2 CC = SC*0.1+vec2(1.66,-.02); // Complex coord\n    CC += 0.005 * sin(CC.x*30. + iTime);\n    CC += 0.0001 * sin(CC.x*500. + iTime*10.);\n    SC += 0.01 * sin(SC.x*50. + iTime*10.);\n    \n    // Gold color gradient\n    \n    vec3 color1 = vec3(0.824,0.616,0.169); // also 3rd color\n    vec3 color2 = vec3(1.,1.,1.);\n    \n    float P = fbm(SC * 4.0);\n    \n    vec3 col = mix(color1, color2, smoothstep(0., .5, P)); // fbm(sUV)\n    col = mix(col, color1, smoothstep(.5, 1., P));\n    \n    vec2 Z = vec2(0.0);\n    vec2 C = CC;\n    \n    float B = 256.0; // Threshold ( the point that is begins to expand into infinity )\n    \n    float sn = 50.0;\n    \n    for (int i = 0; i < MAX; i++) {\n        if(dot(Z, Z) > (B * B)) {\n            sn = float(i) - log2(log2(dot(Z,Z))) + 4.0; // Smoothing\n            break;\n        }\n        Z = mat2(Z,-Z.y,Z.x)*Z; Z.y = abs(Z.y); Z -= C;\n    }\n    \n    col *= (sn *0.03) * (sn *0.04);\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}