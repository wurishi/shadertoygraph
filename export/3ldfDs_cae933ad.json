{"ver":"0.1","info":{"id":"3ldfDs","date":"1613688638","viewed":84,"name":"Jumpeter - Random Values","username":"Jumpeter","description":"Simple random generation","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// With the global variable the random result will be different at every call\nfloat RANDOM_SEED = 0.0;\n\n// The function takes in a seed and simply uses it for generating some high frequency and amplitude sinusoids\n// Then it returns only the fractional part of their sum\nfloat pseudoRandom(float seed)\n{\n    RANDOM_SEED += 1.0;\n    seed += RANDOM_SEED;\n    return fract(sin(seed)*75484.54352 + sin(seed*0.3821)*84932.4392 + sin(seed*1.349283)*3832.430);\n}\n\nfloat from2DTo1DIndex(vec2 inCoord, vec2 inDimension, float inScale)\n{\n    return floor(inCoord.x*inScale) + floor(inCoord.y*inScale)*floor(inDimension.x*inScale);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Here I'm using the pixel index as seed\n    fragColor = vec4(pseudoRandom(from2DTo1DIndex(fragCoord.xy, iResolution.xy, 0.2)));\n}","name":"Image","description":"","type":"image"}]}