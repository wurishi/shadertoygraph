{"ver":"0.1","info":{"id":"3lKfDc","date":"1615220319","viewed":145,"name":"Fish Eye Camera","username":"kithy","description":"raymarching,fish eye camera,rotate","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","rotate","fisheyecamera"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 64\n#define EPS 1e-5\n#define PI 3.141592\n\nvec3 rotate(vec3 p,float angle,vec3 axis){\n\tvec3 a=normalize(axis);\n\tfloat s=sin(angle);\n\tfloat c=cos(angle);\n\tfloat r=1.0-c;\n\tmat3 m=mat3(\n\t\ta.x*a.x*r+c,\n\t\ta.y*a.x*r+a.z*s,\n\t\ta.z*a.x*r-a.y*s,\n\t\ta.x*a.y*r-a.z*s,\n\t\ta.y*a.y*r+c,\n\t\ta.z*a.y*r+a.x*s,\n\t\ta.x*a.z*r+a.y*s,\n\t\ta.y*a.z*r-a.x*s,\n\t\ta.z*a.z*r+c\n\t\t);\n\treturn m*p;\n}\n\n\n\nfloat sphere(vec3 p){\n\treturn length(p)-0.3;\n}\n\nfloat cube(vec3 p){\n\tvec3 q=abs(p);\n\treturn length(max(q-0.23,0.0));\n}\n\nfloat map(vec3 p){\n\tvec3 q=rotate(p,radians(PI+iTime)*10.0,vec3(0.0,1.0,1.0));\n\tq=mod(q,0.8)-0.4;\n\tfloat s1=sphere(q);\n\tfloat c1=cube(q);\n\treturn max(c1,-s1);\n}\n\nvec3 calcNormal(in vec3 p,float d){\n\tconst vec2 e=vec2(0.01,0.0);\n\treturn normalize(vec3(d-map(p-e.xyy),d-map(p-e.yxy),d-map(p-e.yyx)));\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=(fragCoord.xy-iResolution.xy*0.5)/iResolution.y;\n\n\t\n\tvec3 ro=vec3(0.0,0.0,2.0+(iTime)*0.5);\n\t//vec3 rd=normalize(vec3(uv,1.0));//normal camera\n\tvec3 rd=normalize(vec3(uv,(1.0-dot(uv,uv)*0.5)*0.5));//fish eye\n\tvec3 col=vec3(0.0);\n\tfloat t,d;\n\tvec3 rp;\n\n\tfor(int i=0;i<MAX_STEPS;i++){\n\t\trp=ro+rd*t;\n\t\td=map(rp);\n\t\tif(d<EPS)break;\n\t\tt+=d;\n\t}\n\n\t//col=calcNormal(rp,EPS);\n\tcol=vec3(exp(-0.4*t));\n\tfragColor=vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}