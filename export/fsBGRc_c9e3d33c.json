{"ver":"0.1","info":{"id":"fsBGRc","date":"1617712822","viewed":388,"name":"Tutorial shader with Ray Tracing","username":"frankbolero","description":"Copy paste + modify etc etc.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","basic"],"hasliked":0,"parentid":"fdSGRV","parentname":"Tutorial shader - mod"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// stolen from https://www.shadertoy.com/view/ldS3DW and modified\nfloat sphere(vec3 ray, vec3 dir, vec3 center, float radius)\n{\n\tvec3 rc = ray-center * cos(atan(cos(dir.x), dir.y)*iTime);\n\tfloat c = dot(rc, rc) - (radius*radius);\n\tfloat b = dot(dir, rc);\n\tfloat d = b*b - c;\n\tfloat t = -b - sqrt(abs(d * cos(atan(cos(dir.x), dir.y)*iTime)));\n\tfloat st = step(0.0, min(t,d));\n    return mix(-1.0, t, st);\n}\n\nvec3 background(float t, vec3 rd)\n{\n\tvec3 light = normalize(vec3(sin(t), 0.6, cos(t)));\n\tfloat sun = max(0.0, dot(rd, light));\n\tfloat sky = max(0.0, dot(rd, vec3(0.0, 1.0, 0.0)));\n\tfloat ground = max(0.0, -dot(rd, vec3(0.0, 1.0, 0.0)));\n\treturn \n\t\t(pow(sun, 256.0)+0.2 * pow(sun, 2.0))*vec3(2.0, 1.6, 1.0) +\n\t\tpow(ground, 0.5) * vec3(0.4, 0.3, 0.2) +\n\t\tpow(sky, 1.0) * vec3(0.5, 0.6, 0.7);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-1.0 + 2.0*fragCoord.xy / iResolution.xy) * \n\t\tvec2(iResolution.x/iResolution.y, 1.0);\n\n\tvec3 ro = vec3(0.0, 0.0, -3.0);\n\tvec3 rd = normalize(vec3(uv, 1.0));\n\tvec3 p = vec3(0.0, 0.0, 0.0);\n\tfloat t = sphere(ro, rd, p, 2.0);\n\n    vec3 q = p - vec3(0.5,0.5,0.5);    \n        \n    vec3 axis = vec3(0.0, 1.0, 0.0);\n    vec3 nml = normalize(p - (ro+rd*t));\n    \n\tvec3 bgCol = background(iTime, rd);\n\trd = reflect(rd, nml);\n\n    float r = 0.2 + 0.15 * cos(atan(cos(q.y), q.x)*iTime);\n    \n    // Time varying pixel color\n    vec3 col = 0.8 + 0.2 * cos(iTime + uv.xyx + vec3(0,2,4));\n\n    col *= background(iTime, rd) * vec3(0.9, 0.8, 1.0);\n    col *= smoothstep(r, r+0.001, length(q));\n        \n    // Output to screen\n    fragColor = vec4( mix(bgCol, col, step(0.0, t)), 1.0 );\n}","name":"Image","description":"","type":"image"}]}