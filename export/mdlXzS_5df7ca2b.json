{"ver":"0.1","info":{"id":"mdlXzS","date":"1669143922","viewed":258,"name":"Gradient Loop","username":"blublublublucas","description":"Sampling of a coordinate moves on a loop tangent to the local gradient.\nClick to change the effect size.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["gradient","effect","loop","edge","motion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\n\nfloat loopRad = 10.0;\n\n\nfloat RGB2Luminosity(in vec3 color)\n{\n    return 0.3*color.r + 0.59*color.g + 0.11*color.b;\n}\n\nvec2 Gradient(in sampler2D u_tex, in vec2 st, in vec2 stepSize)\n{\n    float Gx = 0.0;\n    Gx += RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, -stepSize.y)).rbg);\n    Gx += 2.0 * RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, 0.0)).rbg);\n    Gx += RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, stepSize.y)).rbg);\n\n    Gx -= RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, -stepSize.y)).rbg);\n    Gx -= 2.0 * RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, 0.0)).rbg);\n    Gx -= RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, stepSize.y)).rbg);\n\n    float Gy = 0.0;\n    Gy -= RGB2Luminosity(texture(u_tex, st - vec2(-stepSize.x, stepSize.y)).rbg);\n    Gy -= 2.0 * RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, stepSize.y)).rbg);\n    Gy -= RGB2Luminosity(texture(u_tex, st - vec2(stepSize.x, stepSize.y)).rbg);\n\n    Gy += RGB2Luminosity(texture(u_tex, st + vec2(-stepSize.x, stepSize.y)).rbg);\n    Gy += 2.0 * RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, stepSize.y)).rbg);\n    Gy += RGB2Luminosity(texture(u_tex, st + vec2(stepSize.x, stepSize.y)).rbg);\n    return vec2(Gx, Gy);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 kernelStepSize = 1.0 / iResolution.xy;\n    \n\n    vec2 grad = Gradient(iChannel0, uv, kernelStepSize);\n    //grad = grad/length(grad);\n\n    loopRad = 5.0 * (iMouse.x / iResolution.x - 0.5);\n\n    vec2 grad_tan = vec2(-grad.y, grad.x);\n\n    vec2 loopedSample = uv + loopRad * kernelStepSize * grad * 2.0* sin(2.0 * iTime) + 2.0*loopRad * kernelStepSize *grad_tan * cos(2.0* iTime);\n     \n    fragColor = texture( iChannel0, loopedSample);\n}\n\n\n","name":"Image","description":"","type":"image"}]}