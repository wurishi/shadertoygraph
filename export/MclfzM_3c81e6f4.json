{"ver":"0.1","info":{"id":"MclfzM","date":"1723556601","viewed":41,"name":"Radial gradient attempt","username":"Mojomajor","description":"Trying to create a smooth circular gradient","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["radial","gradient"],"hasliked":0,"parentid":"XtXyWH","parentname":"Radial Gradient Steps"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define alpha  0.5\n\nvec4 Color1 = vec4(0.18039, 0.82745, 1.0, alpha);\nvec4 Color2 = vec4(0.09804, 0.38431, 0.95686, alpha);\n\nfloat Dither = 4.0;\n\n// <stop offset=\"0\" stop-color=\"#2ed3ff\" stop-opacity=\".3\"/>\n// (0.18039, 0.82745, 1.0)\n// <stop offset=\"1\" stop-color=\"#1962f4\" stop-opacity=\".4\"/>\n// 0.09804, 0.38431, 0.95686)\n\n//https://www.shadertoy.com/view/lscGDr\nvec3 dithered(in vec3 color, in vec2 uv, in float dither)\n{\n    if (dither > 0.0)\n    {\n        const vec3 magic = vec3( 0.06711056, 0.00583715, 52.9829189 );\n        float f = fract( magic.z * fract( dot( uv, magic.xy ) ) );\n        color = clamp(color + (dither/255.0) * f - ((dither*0.5)/255.0), vec3(0.0), vec3(1.0));\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat aspect = iResolution.x / iResolution.y; \n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 center = vec2(0.5, 0.5);\n    \n\tuv.x *= aspect;\n    center.x *= aspect;\n\tfloat dist = distance( uv, center); // 0..1\n    \n    float size = 1.0;\n    // size of circle in the middle\n\tfloat s = dist*0.5;\n    \n    vec4 color = mix(Color1, Color2, clamp(s, 0.0, alpha));\n\tcolor.rgb = dithered(color.rgb, fragCoord, Dither);\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}