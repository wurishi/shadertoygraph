{"ver":"0.1","info":{"id":"fdKBzc","date":"1658608803","viewed":83,"name":"Mandelbort Set Coloring","username":"temich","description":"Just some play with colors","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 imMul(vec2 lhs, vec2 rhs) {\n    return vec2(\n        lhs.x * rhs.x - lhs.y * rhs.y,\n        lhs.y * rhs.x + lhs.x * rhs.y\n    );\n}\n\nconst int ITERATIONS = 128;\n\nvec3 iterate(vec2 coord, vec2 root) {\n    vec2 z = vec2(0.);\n    vec2 theSum = vec2(0.);\n    vec2 pp = vec2(1., 0.);\n    for (int i = 0; i < ITERATIONS; ++i) {\n        theSum = theSum + imMul(z, pp);\n        pp = imMul(pp, root);\n        z = imMul(z, z) + coord;\n        float dd = z.x * z.x + z.y * z.y;\n        if (dd > 100.) {\n            return vec3(1.0);\n        }\n    }\n    \n    float dist = theSum.x * theSum.x + theSum.y * theSum.y;\n    float mixPart = log(dist);\n    return 0.5 + 0.5*cos( 3.0 + mixPart*0.15 + vec3(0.0,0.6,1.0));\n}\n\nvec2 uvFromFrag(vec2 fragCoord) {\n    vec2 center = vec2(0, 0);\n    float mx = max(iResolution.x, iResolution.y);\n    return center + 4. * (fragCoord - iResolution.xy * 0.5) / mx;\n}\n\nvec3 fragCoordToColor(vec2 fragCoord, vec2 mousePos) {\n    return iterate(uvFromFrag(fragCoord), mousePos);\n}\n\nbool shouldInvertColor(vec2 root, vec2 uv) {\n    vec2 dv = root - uv;\n    float dd = dv.x * dv.x + dv.y * dv.y;\n    return dd < 0.0001;\n}\n\nfloat PI = 3.14159265359;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = uvFromFrag(fragCoord);\n    vec2 mousePos2 = vec2(cos(iTime / 30. / PI), sin(iTime / 30. / PI));\n    vec3 clr = fragCoordToColor(fragCoord, mousePos2);\n    if (shouldInvertColor(mousePos2, uv)) {\n        fragColor = vec4(vec3(1.) - clr, 1.0);\n    } else {\n        fragColor = vec4(clr, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}