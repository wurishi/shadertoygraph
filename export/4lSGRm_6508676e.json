{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define ID_NONE         -1.0\n#define ID_RING_0        0.10\n#define ID_RING_1        0.11\n#define ID_RING_2        0.12\n#define ID_RING_3        0.13\n\nconst vec4 RING_0     = vec4(5.0, 0.0, 0.0, ID_RING_0);\nconst vec4 RING_1     = vec4(5.1, 0.0, 0.0, ID_RING_1);\nconst vec4 RING_2     = vec4(5.2, 0.0, 0.0, ID_RING_2);\nconst vec4 RING_3     = vec4(5.3, 0.0, 0.0, ID_RING_3);\n\nconst vec3 lightPos = vec3(-15.0, 0.0, -15.0);\nconst vec3 lightColor = vec3(1.0, 1.0, 1.0);\n\nfloat sdBox(in vec3 p, in vec3 box) {\n    vec3 d = abs(p) - box;\n    return min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat sdSphere(vec3 p, float s) {\n    return length(p) - s;\n}\n\nvec3 rotateY(in vec3 p, float an) {\n    float c = cos(an);\n    float s = sin(an);\n    return vec3(c * p.x + s * p.z, p.y, -s * p.x + c * p.z);\n}\n\nvec3 rotateZ(in vec3 p, float an) {\n    float c = cos(an);\n    float s = sin(an);\n    return vec3(c * p.x - s * p.y, s * p.x + c * p.y, p.z);\n}\n\nvec2 map(in vec3 p) {\n    // hit object ID is stored in res.x, distance to object is in res.y\n\n    float sz = 0.2;\n    float time = iTime;\n    float time2 = sin(iTime * 0.25) * 8.0;\n\n    float d1 = sdBox(rotateZ(rotateY(p, 0.75 + time), 0.0 - time2), vec3(sz, RING_0.x, RING_0.x));\n    float d2 = sdSphere(p, RING_0.x);\n    vec2 res = vec2(ID_RING_0, max(-d2, max(d1, sdSphere(p, RING_0.x))));\n\n    d1 = sdBox(rotateZ(rotateY(p, -0.75 + time), -0.75 - time2), vec3(sz, RING_1.x, RING_1.x));\n    d2 = sdSphere(p, RING_1.x);\n    vec2 obj = vec2(ID_RING_1, max(-d2, max(d1, sdSphere(p, RING_1.x))));\n    if (obj.y < res.y) res = obj;\n\n    d1 = sdBox(rotateZ(rotateY(p, 0.0 + time), -1.5 - time2), vec3(sz, RING_2.x, RING_2.x));\n    d2 = sdSphere(p, RING_2.x);\n    obj = vec2(ID_RING_2, max(-d2, max(d1, sdSphere(p, RING_2.x))));\n    if (obj.y < res.y) res = obj;\n\n    d1 = sdBox(rotateZ(rotateY(p, -0.75 + time), 0.75 - time2), vec3(sz, RING_3.x, RING_3.x));\n    d2 = sdSphere(p, RING_3.x);\n    obj = vec2(ID_RING_3, max(-d2, max(d1, sdSphere(p, RING_3.x))));\n    if (obj.y < res.y) res = obj;\n           \n    return res;\n}\n\nvec2 raymarchScene(in vec3 ro, in vec3 rd, in float tmin, in float tmax) {\n    vec3 res = vec3(ID_NONE);\n    float t = tmin;\n    for (int i = 0; i < 280; i++) {\n        vec3 p = ro + rd * t;\n        res = vec3(map(p), t);\n        float d = res.y;\n        if (d < (0.001 * t) || t > tmax)\n            break;\n        t += 0.75 * d;\n     }\n     return res.xz;\n}\n\nvec3 getNormal(in vec3 p) {\n    vec2 eps = vec2(0.00015, 0.0);\n    return normalize(vec3(map(p + eps.xyy).y - map(p - eps.xyy).y,\n                          map(p + eps.yxy).y - map(p - eps.yxy).y,\n                          map(p + eps.yyx).y - map(p - eps.yyx).y));\n}\n\nfloat raymarchAO(in vec3 ro, in vec3 rd, float tmin) {\n    float ao = 0.0;\n    for (float i = 0.0; i < 5.0; i++) {\n        float t = tmin + pow(i / 5.0, 2.0);\n        vec3 p = ro + rd * t;\n        float d = map(p).y;\n        ao += max(0.0, t - 0.5 * d - 0.05);\n    }\n    return 1.0 - 0.5 * ao;\n}\n\nfloat raymarchShadows(in vec3 ro, in vec3 rd, float tmin, float tmax) {\n    float sh = 1.0;\n    float t = tmin;\n    for(int i = 0; i < 40; i++) {\n        vec3 p = ro + rd * t;\n        float d = map(p).y;\n        sh = min(sh, 4.0 * d / t);\n        t += 0.75 * d;\n        if (d < (0.001 * t) || t > tmax)\n            break;\n    }\n    return sh;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;\n    vec3 ro = vec3(0.0, 0.05, -20.0);\n    vec3 rd = normalize(vec3(p.xy, 2.5));\n\n    // background\n    vec3 col = vec3(0.0);\n\n    float tmin = 0.1;\n    float tmax = 50.0;\n    vec2 obj = raymarchScene(ro, rd, tmin, tmax);\n    float id = obj.x;\n    float t = obj.y;\n    if (t < tmax) {\n        vec3 pos = ro + rd * t;\n        if (id == ID_RING_0) col = vec3(0.2);\n        if (id == ID_RING_1) col = vec3(0.0, 0.15, 0.5);\n        if (id == ID_RING_2) col = vec3(0.0, 0.5, 0.15);\n        if (id == ID_RING_3) col = vec3(0.5, 0.075, 0.075);\n\n        vec3 nor = getNormal(pos);\n        float occ = clamp(raymarchAO(pos, nor, tmin), 0.0, 1.0);\n\n        // point light\n        vec3 lDir = normalize(lightPos - pos);\n        float lDist = length(lightPos - pos);\n        float dif = 0.1 + max(0.0, dot(nor, lDir));\n        vec3 h = normalize(-rd + lDir);\n        float spe = pow(clamp(dot(h, nor), 0.0, 1.0), 16.0);\n        vec3 lightColor = dif * lightColor * (10.0 / lDist);\n        lightColor += 5.0 * dif * spe * vec3(1.0, 1.0, 1.0);\n\n        float sha = clamp(raymarchShadows(pos, lDir, tmin, tmax), 0.15, 1.0);\n        col *= lightColor * sha * occ;\n    }\n\n    // gamma correction\n    vec3 gamma = vec3(1.0 / 2.2);\n    fragColor = vec4(pow(col, gamma), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4lSGRm","date":"1427483803","viewed":181,"name":"Swirling rings","username":"jimmikaelkael","description":"Just my fun of the day.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["swirl","rings","swirling"],"hasliked":0,"parentid":"","parentname":""}}