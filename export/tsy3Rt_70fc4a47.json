{"ver":"0.1","info":{"id":"tsy3Rt","date":"1570823921","viewed":115,"name":"Multi Video/ChromaKey 3D","username":"rmmcal","description":"Just testing and experiencing many nonsense things with chromakey and 3d... ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d","chromakey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///////////////////////\n// Brasil/Amazonas/Manaus\n// Multi Video/ChromaKey 3D \n// Created by Rodrigo Cal (twitter: @rmmcal) - 2019/10\n///////////////////////\n//\n// inspired: \n//  - https://www.shadertoy.com/view/XsfGzn @iq\n//\n///////////////////////\n\nfloat t(float d)\n{\n    return abs(fract(iTime*d)*2.-1.);\n}\n \nfloat mapDistance(vec3 p) {\n    float d = 100.;\n    float y = 1.0;\n    float a = iTime*(.1)*10.;\n    float r = 6.;\n    float s = 3.*(abs(cos(t(.1)+t(.5)))+.3);\n    d = min(d, ((length(p+vec3( r*cos(a),y, 2.*r*sin(a)))-3.)));\n    return d;\n}\n\nvec3 raymarching(vec3 p, vec3 d)\n{\n    float total = 0., hitDistance = 0.;\n    for (int i = 0; i < 200; i++)\n    {        \n      \ttotal\t+= (hitDistance = mapDistance(p));          \n        p += d * hitDistance; \n        \n        if (total < .01) break;\t\t\t\t     // so close... performance otimization...\n        if (total > 100.) { return vec3(100.); } // so far..... performance otimization...\n    }\n    return p;\n}\n\nvec3 raymarching(vec2 p)\n{ \n\treturn raymarching( vec3(.0,.0,-20.), vec3(p.xy,1.));\n}\n\nfloat close(vec2 p)\n{\n    vec2 m = vec2(.001,.0);\n    vec3 p3d = raymarching( vec3(.0,.0,-20.), vec3(p.xy,1.));\n\tfloat x =  mapDistance(p3d+m.xyy);\n\tfloat y =  mapDistance(p3d+m.yxy);\n\tfloat z =  mapDistance(p3d+m.yyx);\n    return -normalize(vec3(x,y,z)).z;\n}\n\nvec3 normal3d(vec2 p)\n{\n  vec3 pos = raymarching(p);\n  vec3 eps = vec3(.001,0.0,0.0);\n  vec3 nor;\n  float ref;\n  nor.x = mapDistance(pos+eps.xyy) - mapDistance(pos-eps.xyy);\n  nor.y = mapDistance(pos+eps.yxy) - mapDistance(pos-eps.yxy);\n  nor.z = mapDistance(pos+eps.yyx) - mapDistance(pos-eps.yyx);\n  return -normalize(nor);\n}\n\nvec4 getTextureChromaKey(sampler2D s, vec2 uv){\n   vec4 tx1 = texture(s, uv);\n    vec3 g= vec3(5.,15.,5.);\n    float f =  distance(tx1.xyz*g, vec4(0.05078125,0.63671875,0.14453125,1.).xyz*g);\n    \n    float maxrb = max( tx1.r, tx1.b );\n    float k = clamp( (tx1.g-maxrb)*5.0, 0.0, 1.0 );\n\n    float dg = tx1.g; \n    tx1.g = min( tx1.g, maxrb*0.8 ); \n\n    \n    tx1.rgb *= (tx1.r+tx1.g+tx1.b);\n    \n    tx1.rgb = tx1.rgb*.3;\n    tx1.rgb = clamp(tx1.rgb, 0.,1.);\n    tx1.rgb = tx1.rgb / (1. -  tx1.rgb);\n    \n    tx1.w = step(.50,1.-k) ;\n    return tx1;\n}\n\nfloat hash(vec2 p)  \n{\n    p  = fract( -abs(p)*vec2(0.2357111317,0.31357321) )*77.;\n    return fract( p.x*p.y*(p.x+p.y)+iTime*1. );\n}\n\nvec2 hash2d(vec2 p) {                                                               \n   return fract((vec2(hash(p),hash(p+.1))));            \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 res = iResolution.xy;\n    vec3 aspectRatio = vec3(1., iResolution.y/iResolution.x, 0.);\n    vec2 p = (uv-.5)*aspectRatio.xy;\n  \n    ////////////////////////////////////////////////\n    float mat = abs(fract((iTime+16.)*.05)*2.-1.);\n \tmat = (mat*=mat)*(mat*=mat);\n    mat = (mat*=mat)*(mat*=mat);\n    \n    float matWav = abs(fract(abs(iTime-7.)*.01)*2.-1.);\n \tmatWav = (matWav*=matWav)*(matWav*=matWav);\n \tmatWav = (matWav*=matWav)*(matWav*=matWav);\n\n    vec2 cc= (vec2( uv.y*1.0,0.)+ (vec2(2.,2./((1.-uv.y*3.))))*abs(+.5-(uv+.5)*(1.+(hash2d(uv)*2.-1.)*mat)) +cos(uv*8.1+iTime*10.1)*matWav*.05);\n    vec4 tx11 = getTextureChromaKey(iChannel0, clamp(cc,0.,1.) )*(1.-uv.y*5.);\n\n    vec4 tx1 = getTextureChromaKey(iChannel0, cos(uv*8.1+iTime*10.1)*matWav*.05 +abs(+.5-(uv+.5)*(1.+(hash2d(uv)*2.-1.)*mat)));\n    tx1.w = max(tx1.w,tx11.w*.05);\n    tx1.w *= 1.-clamp(mat*5.,0.,1.);\n    \n    ////////////////////////////////////////////////\n\tvec2 tuv = (uv-vec2(.0,0.))*1.5;\n\tvec4 tx2 = getTextureChromaKey(iChannel1, clamp(tuv, 0.,1.));\n    tx2.a *= clamp(pow(abs(length(tuv-vec2(.6,0.4))-1.4),23.), 0., 1.); \n    ////////////////////////////////////////////////\n    fragColor = texture(iChannel2, uv);\n\tfragColor = mix(fragColor,  tx1,  tx1.w  );\n    fragColor = mix(fragColor,  tx2,  tx2.w * tx1.w);\n    ////////////////////////////////////////////////\n    \n    // 3D //\n\tvec4 ray = 1.-vec4(raymarching(p).z*.1);\n\tvec4 objs = vec4(close(p));\n\tvec4 normal3d = vec4(normal3d(p),1.);\n\n    // z-video\n    objs.w = step(-1.,+ray.z);\n    float tz = step(-1.,-ray.z);\n    objs.w *=  (1.-tz) + (tz) * (1.- tx1.w)  ;\n    \n    vec4 bgRef = texture(iChannel2, uv-(normal3d.xy+vec2(-1.)).xy*.1);\n    vec4 grayTx = texture(iChannel3, -(normal3d.xy+vec2(-1.)).xy*.5);\n\n    grayTx = max(mix(grayTx,fragColor,.2) , fragColor*.6);\n \tgrayTx = max(grayTx , bgRef*.7);\n  \n    fragColor = mix(fragColor, (objs.z+.51)*grayTx*vec4(1.,1.,1.1,1.),  objs.w);\n    ////////////////////////////////////////////////\n\t\n}\n\n ","name":"Image","description":"","type":"image"}]}