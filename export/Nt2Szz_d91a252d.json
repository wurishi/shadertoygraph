{"ver":"0.1","info":{"id":"Nt2Szz","date":"1626954055","viewed":77,"name":"Circle Grain","username":"ptrgags","description":"Was exploring stacking several shapes and coloring based on how many shapes overlap. I intended these to be solid color, but was lazy about texture access and made this happy accident instead.\n\nThis reminds me of rings on a tree but with more symmetry","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","interference","happyaccident"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CENTER (iResolution.xy / 2.0)\n\n// 8 circles arranged at the corners and midpoints of a square\nvec2 CIRCLES[8] = vec2[8](\n    vec2(1.0, 0.0),\n    vec2(1.0, 1.0),\n    vec2(0.0, 1.0),\n    vec2(-1.0, 1.0),\n    vec2(-1.0, 0.0),\n    vec2(-1.0, -1.0),\n    vec2(0.0, -1.0),\n    vec2(1.0, -1.0)\n);\n\n// These bits turn on/off the 8 circles\nfloat BITS[8] = float[8](\n    1.0, \n    0.0, \n    1.0,\n    1.0,\n    1.0,\n    0.0,\n    1.0,\n    1.0\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - CENTER) / iResolution.y;\n    float index = 0.0;\n    for (int i = 0; i < 8; i++) {\n        vec2 center = 0.5 * CIRCLES[i];\n        float bit = BITS[i];\n        vec2 from_center = uv - center;\n        float dist_sqr = dot(from_center, from_center);\n        \n        \n        // Originally I was going to do this with solid colors, but I soon realized that\n        // using smoothstep means my index is no longer an integer. I just rolled with it.\n        float thickness = 0.5 * sin(iTime);\n        const float RADIUS_SQUARED = 0.5 * 0.5;\n        float mask = smoothstep(RADIUS_SQUARED + thickness, RADIUS_SQUARED - thickness, dist_sqr);\n        index += mask * bit;\n    }\n    \n    \n    fragColor = texture(iChannel0, vec2(index / 8.0, 0.5));\n}","name":"Image","description":"","type":"image"}]}