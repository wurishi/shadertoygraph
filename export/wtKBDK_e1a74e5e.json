{"ver":"0.1","info":{"id":"wtKBDK","date":"1615110939","viewed":134,"name":"okota0306","username":"fotfla","description":"okota0306","likes":2,"published":1,"flags":96,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n\n    fragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtlXD8","filepath":"https://soundcloud.com/niko_14/forward_3","previewfilepath":"https://soundcloud.com/niko_14/forward_3","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI acos(-1.)\n\nmat2 rot(float a){\n  return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec2 pmod(vec2 p, float n){\n  float a = atan(p.y,p.x) + PI/n;\n  float r =2. * PI / n;\n  a = floor(a/r) * r;\n  return rot(-a) * p;\n}\n\nvec2 c(vec2 p){\n  return vec2(p.x * p.x - p.y * p.y, 2.0 * p.x * p.y);\n}\n\nfloat hash(float n){\n  return fract(4315.531 * sin(n * 12.5315));\n}\n\nfloat circle(vec2 p, float r){\n  return length(p) - r;\n}\n\nfloat box(vec2 p, vec2 s){\n  vec2 d = abs(p) - s;\n  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n    vec2 uv0 = uv;\n    float fft = texture(iChannel1,vec2(0.01,0.0)).r * 0.005;\n    // float ffti = texture(texFFTIntegrated,0.00).r;\n    float ffti = 0.0;\n    float t = iTime * 135./120.0;\n  \n  \n    float tf = fract(t * 2.0);\n    float ti = mod(floor(t * 2.0),4.0);\n    float a = pow(tf,2.5);\n    \n    \n  \n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 uv2 = uv;\n    uv *= 1.0 - pow(tf, -1.6) * 0.0125;\n    \n    vec2 uv1 = uv;\n    for(int i = 0;i < 6; i++){\n      uv1.x += 0.3;\n      uv1.x = abs(uv1.x);\n      uv1 *= rot(PI * 0.6 * ffti);\n      uv1 *= 0.85;\n    }\n    \n    vec3 p = vec3(uv * 2.0,0.0);\n    for(int j = 0; j < 7; j++){\n      p.xy *= rot(ti + a);\n      p.x = abs(p.x);\n      p.x -= 0.74;\n      \n      p.xy = c(p.xy);\n      p.zxy = p.xyz;\n      p *= 0.95;\n    }\n  \n    float x = 1.0;\n    float ux = uv1.x + 1.0;\n    for(int i = 0; i < 3; i++){\n      ux -= hash(float(i) + floor(t * 2.0));\n      x = min(abs(ux),x);\n      if(float(i)/8.0 > a)break;\n    }\n    \n    float x3 = uv1.x + 0.1;\n    float x4 = p.x + 0.1;\n    \n    float x0 = box(p.xy,vec2(0.25) * a);\n    \n    float x1 = circle(uv1,0.25 * a);\n    vec2 p0 = uv;\n    p0 = pmod(p0,3.);\n    float x2 = p0.x - 0.25 * a;\n     \n    float o = 0.0;\n    if(int(ti) == 0){\n      o = x;\n    } else if(int(ti) == 1){\n      o = x0;\n      x3 =x4;\n    } else if(int(ti) == 2){\n      o = x1;\n    } else if(int(ti) == 3){\n      o = x2;\n      x3 = x4;\n    }\n      \n    float c = pow(abs(1.0 - abs(x0) - fft) ,16.0);\n    float c2 = pow(abs(1.0 - abs(x3) - fft),16.0);\n    \n    c = clamp(c,0.0,1.0);\n    c2 = clamp(c2,0.0,1.0);\n    vec3 col = mix(vec3(0.05), vec3(0.8,0.95,1.0), c);\n    col += mix(vec3(0.0),vec3(0.9,0.8,1.0),c2);\n    \n    \n    float r0 = circle(uv2,a);\n    r0 = smoothstep(0.001,0.0,abs(r0) - 0.1);\n    float b2 = box(uv1,vec2(a));\n    float b3 = box(uv1,vec2(a *0.5));\n    b2 = smoothstep(0.001,0.0,max(b2,-b3));\n    \n    float h = hash(floor(uv0.x * 16.0) + ti * 8.0);\n    if(int(ti) == 0){\n       col = h < 0.75 ? col : 1.0 - col;\n    } else if(int(ti) == 1){  \n       col = r0 < 0.5 ? col : 1.0 - col;\n    } else if(int(ti) == 2){\n       col = b2 < 0.5 ? col : 1.0 - col;\n    }\n    \n    \n    \n    float r = length(uv0 - 0.5);\n    \n    col *= smoothstep(0.7,0.2,r);\n    \n    //uv0 -= 0.5;\n    //uv0 *= 0.98;\n    //uv0 += 0.5;\n    vec3 b = texture(iChannel0,uv0).rgb;\n    //col += b * 0.06;\n    vec3 d = vec3(0.0025,-0.0025,0.0);\n    float br = texture(iChannel0,uv0 + d.xz).r;\n    float bb = texture(iChannel0,uv0 + d.yz).b;\n    \n    col += vec3(br,b.g,bb)*0.5;\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}