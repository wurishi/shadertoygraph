{"ver":"0.1","info":{"id":"NllSzX","date":"1626348446","viewed":194,"name":"Distance Transform test","username":"RiceFields","description":"two pass euclidean distance transform","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["distancetransform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.x *= 3.0f;\n\n    int i = int(uv.x);\n    vec2 fuv = fract(uv);\n   \n    if(i == 0) {\n        float f = texture(iChannel0, fuv).r;\n        fragColor.rgb = vec3(sqrt(f)*10.0f);\n    } else if(i == 1){\n        fragColor.rgb = texture(iChannel0, fuv).rgb*10.0f;\n    } else {\n       fragColor.rgb = vec3(grayscale(texture(iChannel1, fuv).rgb));\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// D(p) = min(d(p) + f(q))\n// D(x,y) = min((x-x')^2 + Fx'(y))\n// Fx(y) = min((y-y')^2 + f(x', y')); \n// Ref: https://cs.brown.edu/people/pfelzens/papers/dt-final.pdf\n\n#define THRESHOLD_A 0.0\n#define THRESHOLD_B 0.5\n\n// Pass 1 - Fx'(y) calculation\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    float d = 1.0;\n    float texel = 1.0 / float(iResolution.y);  \n    \n    for (int i = 0; i < int(iResolution.y); ++i) { \n        float threshold = mix(THRESHOLD_A, THRESHOLD_B, abs(cos(iTime*0.4)));\n        vec2 q = p + vec2(0.0, float(i)*texel);\n        q.y = mod(q.y, 1.0);\n        vec2 dvec = p-q;\n        float f = dot(dvec,dvec) + step(threshold, grayscale(texture(iChannel0, q).rgb));    \n        d = min(d, f);\n    }\n    fragColor.rgb = vec3(d);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// D(p) = min(d(p) + f(q))\n// D(x,y) = min((x-x')^2 + Fx'(y))\n// Fx(y) = min((y-y')^2 + f(x', y')); \n// Ref: https://cs.brown.edu/people/pfelzens/papers/dt-final.pdf\n\n// Pass 2\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    float d = 1.0;\n    float texel = 1.0 / float(iResolution.x);  \n    \n    for (int i = 0; i < int(iResolution.x); ++i) {\n        vec2 q = p + vec2(float(i)*texel, 0.0);\n        q.x = mod(q.x, 1.0);\n        vec2 dvec = p-q;\n        float f = dot(dvec,dvec) + texture(iChannel0, q).r;\n        d = min(d, f);\n    }\n    fragColor.rgb = vec3(sqrt(d));\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float grayscale(vec3 color) {\n    return dot(color, vec3(0.299, 0.587, 0.114));\n}","name":"Common","description":"","type":"common"}]}