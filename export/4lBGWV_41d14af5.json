{"ver":"0.1","info":{"id":"4lBGWV","date":"1432309791","viewed":332,"name":"Tripping Triangles","username":"anastadunbar","description":"Thanks MG for anti-aliased triangle function.","likes":14,"published":1,"flags":8,"usePreview":0,"tags":["2d","music","stereo","functions"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323\n\nfloat aliasedtri(vec2 p, vec2 p0, vec2 p1, vec2 p2) {\n    float s = p0.y * p2.x - p0.x * p2.y + (p2.y - p0.y) * p.x + (p0.x - p2.x) * p.y;\n    float t = p0.x * p1.y - p0.y * p1.x + (p0.y - p1.y) * p.x + (p1.x - p0.x) * p.y;\n\n    //if ((s < 0.) != (t < 0.)) {\n    //return 0.;\n    //}\n\n    float A = -p1.y * p2.x + p0.y * (p2.x - p1.x) + p0.x * (p1.y - p2.y) + p1.x * p2.y;\n    if (A < 0.0)\n    {\n        s = -s;\n        t = -t;\n        A = -A;\n    }\n\t\n    return float(s > 0. && t > 0. && (s + t) < A);\n}\n\nvec3 HueShift (in vec3 Color, in float Shift)\n{\n    vec3 P = vec3(0.55735)*dot(vec3(0.55735),Color);\n    \n    vec3 U = Color-P;\n    \n    vec3 V = cross(vec3(0.55735),U);    \n\n    Color = U*cos(Shift*6.2832) + V*sin(Shift*6.2832) + P;\n    \n    return vec3(Color);\n}\n\n\nfloat tri(vec2 p, vec2 p0, vec2 p1, vec2 p2) {\n    float ret = 0.;\n    for (int i = 0; i < 16; i++) { \n    vec2 q = vec2(floor(mod(float(i), 4.0)) / 4.0, floor(float(i)) / 16.0);\n    vec2 uv = p+(q/iResolution.xy);\n    ret += aliasedtri(uv,p0,p1,p2);\n    }\n    return ret/16.;\n}\n\nvec3 draw(vec2 suv, float time){\n        vec2 uv3 = fract(suv*10.5);\n    float radius = 1.-(fract(time*2.)/2. +0.4);\n    float circle = 1.-clamp((length(uv3-0.5)-radius)*50.,0.,1.);\n    \n    vec2 p0 = (vec2(sin(time),cos(time*2.5))/2.)+0.5;\n    vec2 p1 = (vec2(sin(time*2.),cos(time*1.5))/2.)+0.5;\n    vec2 p2 = (vec2(sin(time*1.5),cos(time))/2.)+0.5;\n    float triangle1 = tri(suv,p0,p1,p2);\n    p0 = (vec2(sin(time*0.5),cos(time*2.2))/2.)+0.5;\n    p1 = (vec2(sin(time*2.2),cos(time*1.2))/2.)+0.5;\n    p2 = (vec2(sin(time*1.1),cos(time))/2.)+0.5;\n    float triangle2 = tri(suv,p0,p1,p2);\n    return clamp(vec3(circle,triangle1*circle+triangle2,triangle1),0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime*1.1;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 suv = vec2(((uv.x-0.5)*(iResolution.x / iResolution.y))+0.5,uv.y);\n    vec2 uv3 = suv+(sin(uv.x+(time*4.)+(uv.y*2.))*0.05);\n    vec3 drawing = draw(uv3,time);\n    for (int i = 0; i < 7; i++) { \n\tdrawing += draw(uv3,time-(float(i)*0.01));\n    }\n    drawing /= 4.;\n    drawing = HueShift(drawing, time/8. + uv.x/8.);\n\tfragColor = vec4(drawing,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"float rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand2(vec2 co,float res){\n    return fract(sin(dot(mix(floor(co.xy*res)/res,co.xy,0.0005) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat rand3(vec2 co){\n    return mix(mod(sin(dot(mod(co.xy,3.) ,vec2(12.9898,78.233))) * 43758.5453,1.5),fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453),0.5);\n}\n\n\nfloat music(float time) {\n    float stime = mod(time,4.);\n    float dtime = mod(time,16.);\n    float etime = mod(time,32.);\n    float test = rand(vec2(stime*0.001,floor(stime*8.)))*1.2;\n    if (dtime > 12.) {\n    test = rand(vec2(stime*0.021,floor(stime*8.)));\n    }\n    if (etime > 24.) {\n    test = (rand3(vec2(stime*0.001,floor(stime*8.)))*1.2)*0.8;\n    }\n    if (etime > 28.) {\n    test = (rand3(vec2(stime*0.001,floor(stime*8.)))*1.2)*step(fract(stime*8.),0.5);\n    }\n    test /= 2.;\n    float beat = mod(time*1.,0.5);\n    //Hi-Hat\n    float hihat = (rand2(vec2(stime,stime),1500.)/pow(mod(stime,0.125)+1.,20.))/3.;\n    //Kick\n    float kick = sin(beat*(700.*(1.-(beat*1.4))));\n    return test+kick+hihat;\n}\n\n\nvec2 mainSound( in int samp,float realtime)\n{\n    float time = realtime*1.1;\n    float music1 = music(time);\n    music1 += music(time-0.2)/4.;\n    music1 /= 3.;\n    float music2 = music(time-(sin(time/2.)*0.001));\n    music2 += music(time-0.2)/4.;\n    music2 /= 3.;\n\n    return vec2( vec2(music1,music2) );\n}","name":"Sound","description":"","type":"sound"}]}