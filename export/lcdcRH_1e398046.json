{"ver":"0.1","info":{"id":"lcdcRH","date":"1730714806","viewed":33,"name":"mandelbrot experimenting","username":"dokso","description":"Zoom based on mouse position","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITER 132\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n    vec3 pos = vec3(-0.77568377, 0.13646737, 0.75 + pow(2.0, 1.0 + mouse.x * 10.0) * pow(2.0, 1.0 + mouse.y * 10.0) - 4.0);\n    //-0.77568377 + 0.13646737i\n    vec2 z = vec2(0.0, 0.0);\n    float n = 0.0;\n    for (int i = 0; i < ITER; i++) {\n        // (a + bi)(a + bi) = a^2 + 2abi + (bi)^2 = a^2 - b^2 + 2abi\n        z = vec2(z.x*z.x - z.y*z.y, 2.0 * z.x * z.y) + uv / pos.z + pos.xy;\n        if (dot(z,z) > float(ITER*ITER)) break;\n        n += 1.0;\n    }\n    float sn = n - log2(log2(dot(z,z))) + 4.0;\n    \n    vec3 col = vec3(1.0, 0.25, 0.1) * pow(abs(mod(sn-iTime,2.0)-1.0),2.0);\n    if (dot(z,z) < 4.0) {\n        col = vec3(0.0);\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}