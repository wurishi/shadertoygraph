{"ver":"0.1","info":{"id":"tll3Rs","date":"1557384325","viewed":143,"name":"Offset printing","username":"shintalo","description":"Offset printing","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["posteffect","practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat PIX_GRID = 10.0;\nfloat POWER = 2.;\n\n\nvec4 rgb2cmyk( vec3 rgb )\n{\n\tvec4 cmyk;\n\tcmyk.w = min( min( 1.-rgb.r,1.-rgb.g ), 1.-rgb.b );\n\tcmyk.x = (1.-rgb.r-cmyk.w)/(1.-cmyk.w);\n\tcmyk.y = (1.-rgb.g-cmyk.w)/(1.-cmyk.w);\n\tcmyk.z = (1.-rgb.b-cmyk.w)/(1.-cmyk.w);\n\treturn cmyk;\n}\nvec3 cmyk2rgb( vec4 cmyk )\n{\n\tvec3 rgb;\n\trgb.r = 1.-min( 1., cmyk.x*(1.-cmyk.w)+cmyk.w);\n\trgb.g = 1.-min( 1., cmyk.y*(1.-cmyk.w)+cmyk.w);\n\trgb.b = 1.-min( 1., cmyk.z*(1.-cmyk.w)+cmyk.w);\n\treturn rgb;\n}\n\nfloat GetRgbValue(vec3 rgb)\n{\n\treturn max(rgb.r, max(rgb.g, rgb.b))*1.0;\n}\n\nbool IsInnerPoint( vec2 pos, int grid_offset_x,  int grid_offset_y, vec2 offset, int mode )\n{\n    float vRange = sqrt( pow( PIX_GRID/2.0, 2.0 ) + pow( PIX_GRID, 2.0 ) );\n    \n\tvec2 grid = floor( pos/PIX_GRID );\n\tfloat x_offset;\n    int gy = int(grid.y); \n\tif((( gy + grid_offset_y)&1)==1)\n\t{\n\t\tx_offset = PIX_GRID*0.5;\n\t}else{\n\t\tx_offset = 0.0;\n\t}\n\n\t// Grid Lup\n\tvec2 pix_lup = grid * PIX_GRID;\n\t// Complete Grid\n\tpix_lup += vec2( float(grid_offset_x) * PIX_GRID + x_offset, float(grid_offset_y) * PIX_GRID  );\n\t// Grid Center\n\tvec2 pix_center = pix_lup + (PIX_GRID*0.5) + offset;\n\n\t// Grid Value\n    vec3 col = texture( iChannel0, pix_lup/iResolution.xy ).xyz;\n\tfloat v = .0;\n\n    vec4 cmyk = rgb2cmyk( col );\n    switch( mode ){\n        case 0:\n\t    v = cmyk.w;\n        break;\n        case 1:\n\t    v = cmyk.r;\n        break;\n        case 2:\n\t    v = cmyk.g;\n        break;\n        case 3:\n\t    v = cmyk.b;\n        break;\n    }\n/*\n    switch( mode ){\n        case 0:\n\t    v = 1.0-GetRgbValue( col );\n        break;\n        case 1:\n\t    v = col.r;\n        break;\n        case 2:\n\t    v = col.g;\n        break;\n        case 3:\n\t    v = col.b;\n        break;\n    }\n*/    \n    \n    // Power!\n\tv = pow( v ,POWER );\n\treturn distance( pos, pix_center ) < ( v * vRange );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n//    vec2 uv = fragCoord/iResolution.xy;\n//\tvec4 col = texture( iChannel0, uv );\n    \n    fragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n    vec2 offset;\n#if 1   \n\tfloat pix_offset = PIX_GRID/4.0;\n\n    vec4 cmyk = vec4( 0.0, 0.0, 0.0, 0.0 );\n\t// R : C\n\toffset = vec2( -pix_offset, +pix_offset ); \n\tif( IsInnerPoint( fragCoord, -1, -1, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0, -1, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, -1,  0, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0,  0, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, +1,  0, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, -1, +1, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0, +1, offset, 1 ) )\n\t{\n\t\tcmyk.x = 1.0;\n\t}\n\n\t// G : M\n\toffset = vec2( +pix_offset, -pix_offset ); \n\tif( IsInnerPoint( fragCoord, -1, -1, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0, -1, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, -1,  0, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0,  0, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, +1,  0, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, -1, +1, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0, +1, offset, 2 ) )\n\t{\n\t\tcmyk.y = 1.0;\n\t}\n\n\t// B: Y\n\toffset = vec2( +pix_offset, +pix_offset ); \n\tif( IsInnerPoint( fragCoord, -1, -1, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0, -1, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, -1,  0, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0,  0, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, +1,  0, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord, -1, +1, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\tif( IsInnerPoint( fragCoord,  0, +1, offset, 3 ) )\n\t{\n\t\tcmyk.z = 1.0;\n\t}\n\n\toffset = vec2( -pix_offset, -pix_offset ); \n\t     if( IsInnerPoint( fragCoord, -1, -1, offset, 0 ) )cmyk.w = 1.0;\n    if( IsInnerPoint( fragCoord,  0, -1, offset,  0 ) )cmyk.w = 1.0;\n\tif( IsInnerPoint( fragCoord, -1,  0, offset,  0 ) )cmyk.w = 1.0;\n\tif( IsInnerPoint( fragCoord,  0,  0, offset,  0 ) )cmyk.w = 1.0;\n\tif( IsInnerPoint( fragCoord, +1,  0, offset,  0 ) )cmyk.w = 1.0;\n\tif( IsInnerPoint( fragCoord, -1, +1, offset,  0 ) )cmyk.w = 1.0;\n\tif( IsInnerPoint( fragCoord,  0, +1, offset,  0 ) )cmyk.w = 1.0;\n        \n     fragColor.xyz = cmyk2rgb( cmyk );\n#else\n       \n\t// R : C\n\toffset = vec2( PIX_GRID/2.0, PIX_GRID/2.0 ); \n\tif( IsInnerPoint( fragCoord, -1, -1, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0, -1, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, -1,  0, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0,  0, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, +1,  0, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, -1, +1, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0, +1, offset, 1 ) )\n\t{\n\t\tfragColor.r = 1.0;\n\t}\n\n\t// G : M\n\toffset = vec2( -PIX_GRID/2.0, PIX_GRID/2.0 ); \n\tif( IsInnerPoint( fragCoord, -1, -1, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0, -1, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, -1,  0, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0,  0, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, +1,  0, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, -1, +1, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0, +1, offset, 2 ) )\n\t{\n\t\tfragColor.g = 1.0;\n\t}\n\n\t// B: Y\n\toffset = vec2( 0.0, -PIX_GRID/2.0 ); \n\tif( IsInnerPoint( fragCoord, -1, -1, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0, -1, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, -1,  0, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0,  0, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, +1,  0, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord, -1, +1, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n\telse if( IsInnerPoint( fragCoord,  0, +1, offset, 3 ) )\n\t{\n\t\tfragColor.b = 1.0;\n\t}\n    offset = vec2( 0, 0 ); \n\t     if( IsInnerPoint( fragCoord, -1, -1, offset, 0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n    else if( IsInnerPoint( fragCoord,  0, -1, offset,  0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n\telse if( IsInnerPoint( fragCoord, -1,  0, offset,  0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n\telse if( IsInnerPoint( fragCoord,  0,  0, offset,  0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n\telse if( IsInnerPoint( fragCoord, +1,  0, offset,  0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n\telse if( IsInnerPoint( fragCoord, -1, +1, offset,  0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n\telse if( IsInnerPoint( fragCoord,  0, +1, offset,  0 ) )fragColor = vec4( 0.0, 0.0, 0.0, 1.0);\n#endif\n        \n        fragColor.w = 1.0;\n\n        \n        \n        \n        }","name":"Image","description":"","type":"image"}]}