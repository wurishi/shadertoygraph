{"ver":"0.1","info":{"id":"tlySRy","date":"1582994792","viewed":163,"name":"Hexagonal cells","username":"BingoBongo","description":"Simple version of grid","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","hexagon","cells"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// inspired from https://www.shadertoy.com/view/ldcXW8\n\n#define WIDTH (1.0/0.6)\n\nvoid mainImage(out vec4 fragColor, vec2 uv) \n{\n    uv = uv * 15.0 / iResolution.y; \n    uv += vec2(0.58, 0.15) * uv.y;\n\tvec2 f = fract(uv); \n    uv -= f;\n\tfloat v = fract((uv.x + uv.y) / 3.0);\n    \n    float alpha;\n    if(v > 0.6)\n    {\n        vec2 a = max(1.0 - f * WIDTH, 0.0);\n        alpha = max(a.x, a.y);\n    }\n    else\n    {\n        if(v > 0.3)\n        {\n        \tvec2 a = max((f - 1.0) * WIDTH + 1.0, 0.0);\n        \talpha = max(a.x, a.y);\n        }\n        else\n        {\n            float d = abs(f.x - f.y);\n          \talpha = max(1.0 - d * WIDTH, 0.0);\n        }\n    }\n    alpha *= alpha;\n    \n    fragColor = vec4(0.0, alpha, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}