{"ver":"0.1","info":{"id":"tlyXDw","date":"1582825023","viewed":573,"name":"Mipmap, Texture & TextureLod","username":"mla","description":"Mipmapped textures use implicit differentiation to select a mipmap level. If uv changes a lot between adjacent pixels we get artefacts at the join (lower right - zoom in with xmag or similar). To fix use textureLod, or use linear or nearest filters.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["texture","mipmap","texturelod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a) {\n  return mat2(sin(a), cos(a), -cos(a), sin(a));\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n  vec2 p = (fragCoord - .5*iResolution.xy )/iResolution.y;\n\n  float lod = log2(iChannelResolution[0].y/iResolution.y),\n    d = 55./6.283,\n    l = d* length(p) - 5.,\n    s = - (iTime+30.) * .01,\n    l0 = s * floor(l-.5) ,\n    l1 = s * floor (l+.5) ;\n\n  if (fragCoord.x < 0.5*iResolution.x) {\n    if (fragCoord.y < 0.5*iResolution.y) {\n      fragColor = texture(iChannel0, p*rot(l0));\n    } else \n      fragColor = textureLod(iChannel0, p*rot(l0),lod);\n  } else {\n    float k = smoothstep(-.8,.8, iResolution.y/d*(fract(l-.5)-.5)); \n    if (fragCoord.y < 0.5*iResolution.y) {\n      fragColor = mix( texture(iChannel0, p*rot(l0)),\n                       texture(iChannel0, p*rot(l1)),\n                       k);\n    } else {\n      fragColor = mix( textureLod(iChannel0, p*rot(l0), lod),\n                       textureLod(iChannel0, p*rot(l1), lod),\n                       k);\n    }\n  }\n}\n","name":"Image","description":"","type":"image"}]}