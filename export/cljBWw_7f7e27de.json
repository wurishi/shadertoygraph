{"ver":"0.1","info":{"id":"cljBWw","date":"1694107496","viewed":68,"name":"Fork SACI; Neon sleeplessm 345","username":"sleeplessmonk","description":"added audioreactivity","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["fractal","sdf","tutorial","intro","repetition","code","youtube","tuto","creative"],"hasliked":0,"parentid":"dtjfDR","parentname":"SACI; NeonRings"},"renderpass":[{"inputs":[{"id":"lsc3DM","filepath":"https://soundcloud.com/mindfulnomads/landr-feeling-the-vibration","previewfilepath":"https://soundcloud.com/mindfulnomads/landr-feeling-the-vibration","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n\n    return a + b * cos( 6.28318 * (c * t + d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    // Retrieve audio amplitude from iChannel0\n    float audioAmplitude = texture(iChannel0, vec2(1.5)).r;\n\n    for (float i = 0.0; i < 5.0; i++) {\n        uv = fract(uv * 1.5 * i) - 1.5;\n\n        float d = 1.0 * length(uv) * exp(-length(uv0));\n\n        // Audio-reactive color\n        vec3 col = palette(length(uv0) + i * 0.4 + iTime * 0.4) * audioAmplitude;\n\n        d = sin(d * 8.0 + iTime) / 8.0;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}