{"ver":"0.1","info":{"id":"Wd3Szn","date":"1571255848","viewed":282,"name":"x0008 - lines and dots","username":"xigh","description":"Still learning how to draw lines and dot, trying to have \"blurry solutions\" ... ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["lines","dots","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float segment(vec2 p, vec2 a, vec2 b)\n{\n\tvec2 ap = p - a;\n\tvec2 ab = b - a;\n    float u = dot(ap, ab); // |ap|.|ab|.cos<pab>\n    float v = dot(ab, ab); // |ab|^2\n    float z = u / v;\n\tfloat h = clamp(z, 0., 1.);\n\treturn smoothstep(.9, .7, 100.*length(ap - ab*h));\n}\n\nconst float count = 30.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\n    vec2 p0 = vec2(0);\n    float r = 0.0;\n    float g = 0.0;\n\tfloat b = smoothstep(1.0, 0.9, length(uv-p0)*25.);\n\n    for (float i = 0.0; i < count; i++) {\n    \tfloat s1 = sin(iTime*(1.0+i)/4.0);\n    \tfloat c1 = cos(iTime*(1.0+i)/4.0);\n    \tmat2 r1 = mat2(\n        \t+c1, -s1,\n        \t+s1, +c1);\n    \tvec2 p1 = r1 * vec2(0., (count-i)/(count+1.0));\n    \n\t\tr += segment(uv, p0, p1);\n        float t = smoothstep(1.0, 0.9, length(uv-p1)*25.);\n    \tg += t;\n        b += mix(0.3, 1.0, i / count) * t;\n    }\n    \n\tfragColor = vec4(r, g, b, 1.);\n}","name":"Image","description":"","type":"image"}]}