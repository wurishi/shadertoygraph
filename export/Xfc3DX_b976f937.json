{"ver":"0.1","info":{"id":"Xfc3DX","date":"1712175575","viewed":27,"name":"Прак 1","username":"Mashaaaaa","description":"111","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["111"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdStar(in vec2 p, in float r, in float rf)\n{\n  const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n  const vec2 k2 = vec2(-k1.x,k1.y);\n  p.x = abs(p.x);\n  p -= 2.0*max(dot(k1,p),0.0)*k1;\n  p -= 2.0*max(dot(k2,p),0.0)*k2;\n  p.x = abs(p.x);\n  p.y -= r;\n  vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n  float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n  return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nvec3 drawScene(vec2 uv) {\n  vec3 col = vec3(0);\n  float star = sdStar(uv, 0.12, 0.45);\n\n  col = mix(vec3(1, 1, 0), col, step(0., star));\n\n  return col;\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 resolution = iResolution.xy;\n    float squareSize = 0.06 * resolution.x;\n    float time = iTime;\n    \n    \n  vec2 uv = fragCoord/iResolution.xy;\n  uv -= 0.5;\n  uv.x *= iResolution.x/iResolution.y;\n\n  vec3 col = drawScene(uv);\n\n  fragColor = vec4(col,1.0);\n  \n    vec2 circle1 = vec2(0.6 + 0.352 * sin(time), 0.4 + 0.152 * sin(time)); \n    vec2 circle2 = vec2(0.5 + 0.212 * sin(time), 0.3 + 0.352 * cos(time));\n    vec2 square = vec2(0.5, 0.3);\n\n    vec3 color1 = vec3(0.9, 0.1, 0.1); \n    vec3 color2 = vec3(0.1, 0.2, 0.9);\n    vec3 color3 = vec3 (0.9, 0.5, 0.1); \n\n    \n    float distance3 = length(fragCoord - resolution * square);\n    float distance1 = length(fragCoord - resolution * circle1);  \n    float distance2 = length(fragCoord - resolution * circle2);\n    \n    float circleRadius = .07 * resolution.x;\n\n    vec3 finalColor = col;\n\n    if (distance1 < circleRadius) {\n        finalColor = color1;\n    }\n\n    if (distance2 < circleRadius) {\n        finalColor = color2;\n    }\n\n    if (abs(fragCoord.x - resolution.x * square.x) < squareSize && abs(fragCoord.y - resolution.y * square.y) < squareSize) {\n        finalColor = color3;\n    }\n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}