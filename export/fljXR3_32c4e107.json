{"ver":"0.1","info":{"id":"fljXR3","date":"1631255019","viewed":38,"name":"loka：【CRT3-1】蒸気機的隔行扫描","username":"LokaHer","description":"  1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int interlaced = 2;\nint interlacedLine = 20;\nfloat interlacedLight = 0.28;\n\nvec3 rgb2yuv(float r, float g, float b) {\n\treturn vec3(\n        floor(r *  .299000 + g *  .587000 + b *  .114000),\n        floor(r * -.168736 + g * -.331264 + b *  .500000 + 128.),\n        floor(r *  .500000 + g * -.418688 + b * -.081312 + 128.)\n    );\n}\n\nvec3 yuv2rgb(float y, float u, float v) {\n\treturn vec3(\n        clamp(floor(y + 1.4075 * (v - 128.)), 0., 255.),\n        clamp(floor(y - 0.3455 * (u - 128.) - (0.7169 * (v - 128.))), 0., 255.),\n        clamp(floor(y + 1.7790 * (u - 128.)), 0., 255.)\n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float interlacedLight2 = pow(interlacedLight, 2.);\n    \n    float h = float(iResolution.y);\n    float w = float(iResolution.x);\n\n    float interlacedRatio = 0.0;\n    if( w/h >= 720.0 / 1080.0) {\n        //interlacedRatio = float(interlacedLine) * 2.0 / (h / (w / 720.0));\n        interlacedRatio = float(interlacedLine) * 2.0 / h;//百分比\n    } else {\n        interlacedRatio = float(interlacedLine) * 2.0 / h;\n    }//40/720\n    \n    float interlacedPeriod = mod(uv.y, interlacedRatio) / interlacedRatio;//0~1\n    //fragColor = vec4(interlacedPeriod);\n    float interlacedPixel = abs(interlacedPeriod - .5) * 2.;//1~0~1\n    //fragColor = vec4(interlacedPixel);\n    float interlacedLightPeriod = min((interlacedPixel - .5) * 2., 0.0);//0~0~-1~0~0\n    //fragColor = vec4(1.+interlacedLightPeriod*interlacedLight );\n    \n    vec4 color = texture(iChannel0, uv);\n   \n    color.rgb *= 255.;\n    color.rgb = rgb2yuv(color.r, color.g, color.b);\n    //yuv的亮度\n    color.r *= (1. + interlacedLight * interlacedLightPeriod);\n    color.rgb = yuv2rgb(color.r, color.g, color.b) / 255.;\n    \n    fragColor = color;\n\n\n}","name":"Image","description":"","type":"image"}]}