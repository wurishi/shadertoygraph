{"ver":"0.1","info":{"id":"Nl2fzh","date":"1651784305","viewed":107,"name":"Iterated complex multiplication","username":"bentles","description":"Just played around with this for a few hours tweaking parameters. I think this looks cool.\n\nPlay around with the iteration value and the iter_mul function\n\nI guess these are Julia sets?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["satisfying"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 mul(in vec2 a, in vec2 b){\n    float comp = 2.0 * a.x * b.y;\n    float real = a.x * b.x - a.y * b.y;\n    \n    return vec2(real, comp);\n}\n\nvec2 iter_mul(in vec2 a, in vec2 b, in int iter) {\n    for (int i; i < iter; i++) {\n        //a = mul(a + b, b + a) + a;\n        \n        float f = .4;\n        float time = iTime / 2.0;\n        \n        a = mul(a - vec2(cos(time) * f, sin(time) * f), \n                a - vec2(cos(time) * f, sin(time) * f)) ;\n    }\n    return a;\n}\n\nvec2 static_position(in vec2 uv) {\n    float zoom = 4.0;\n    uv *= zoom;\n\n    //change to move the view:\n    uv += vec2(-0.0,-0.0);\n    return uv;\n}\n\nvec2 zoom(in vec2 uv) {\n    float zoom = 1000.0/(iTime * iTime * iTime * iTime);\n    uv *= zoom;\n    return uv;\n}\n\nvec2 pan(in vec2 uv) {\n        //change to move the view:\n    //uv += vec2(-0.25, -.5);\n    //uv += vec2(-1.0, -.0);\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n        float rat = iResolution.x/iResolution.y;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord /(iResolution.y) - vec2(0.5 * rat, 0.5);\n    \n    float time = iTime * 5.0;\n    \n   // uv = zoom(uv);\n    //uv = pan(uv);\n    uv = static_position(uv);\n\n    int iteration = 1 + int(iTime / (5.0));\n    //int iteration = 8;\n    \n    uv = iter_mul(uv , uv , iteration);\n    //vec2 f = vec2(sin(iTime), cos(iTime));\n    //uv = mul(uv, f);\n    \n    //vec3 col = vec3(4.0 * sin(mod(uv.x, 0.08))\n    //, 4.0 * cos(mod(uv.x, 0.08)), .1\n    //);\n    \n    \n    vec3 col = vec3(5.0 * sin(mod(uv.x, 0.2)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}