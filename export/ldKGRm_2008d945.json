{"ver":"0.1","info":{"id":"ldKGRm","date":"1455491802","viewed":126,"name":"mandelballs","username":"samuelotherion","description":"fractals, cat animation, balls, simple lights, mouse interaction, just playing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi            3.1415926535\n#define MB_MAX_ITERS  255\n#define factor        ( 1. / float( MB_MAX_ITERS ) )\nconst mat3\nid3x3 = mat3( 1., 0., 0., 0., 1., 0., 0., 0., 1. );\n\nfloat\ntime,\ngSR[ 7 ];\n\nvec2\nxy,\nmxy,\ntxy;\n\nvec3\nhit,\ngSP[ 7 ],\ncol[ 7 ];\n\nstruct Datas {\n\n\tvec3\n    eye,\n    rayN;\n};\n\nDatas\nrTD; //run time datas\n    \nmat3\nproj( in vec3 p_r ) {\n\n\treturn mat3( p_r.x * p_r, p_r.y * p_r, p_r.z * p_r );\n}\n\nmat3\nantiproj( in vec3 p_r ) {\n\n\treturn id3x3 - proj( p_r );\n}\n\nvoid\ninit( in vec2 p_xy ) {\n\n    time = 1. * iTime;\n\n    float\n    rxy = iResolution.x / iResolution.y;\n    \n    xy   = ( p_xy / iResolution.xy -.5 );\n    xy.x *= rxy;\n    \n    mxy  = ( iMouse.xy / iResolution.xy -.5 ); \n    mxy.x *= rxy;\n    \n    txy = p_xy / iResolution.xy;\n    txy.x /= 6.;\n    txy.x += mod( float( int( 6. * time ) ), 6. ) / 6.4;\n    //txy.x = fract( txy.x );\n    \n    rTD.eye  = vec3( 1. * mxy.x, 0., 10.5 + 20. *  mxy.y );\n    rTD.rayN = normalize( rTD.eye - vec3( xy, 0. ) );\n    \n\tgSP[ 0 ] = vec3( .5 * sin( time ), 0., cos( time ) - 2. );\n\tgSR[ 0 ] = 1. / 16.;\n\tcol[ 0 ] = vec3( 1., .15, .025 );\n    \n    gSP[ 1 ] = vec3( 0., .5 * cos( time ), sin( time ) - 2. );\n\tgSR[ 1 ] = 1. / 16.;\n\tcol[ 1 ] = vec3( .025, 1., .15 );\n\n    gSP[ 2 ] = vec3( .5 * cos( time ), .5 * sin( time ),  - 2. );\n\tgSR[ 2 ] = 1. / 16.;\n\tcol[ 2 ] = vec3( .15, .025, 1. );\n\n    gSP[ 3 ] = vec3( -.5 * sin( time ), 0., -cos( time ) - 2. );\n\tgSR[ 3 ] = 1. / 16.;\n\tcol[ 3 ] = vec3( 0., .85, .975 );\n    \n    gSP[ 4 ] = vec3( 0., -.5 * cos( time ), -sin( time ) - 2. );\n\tgSR[ 4 ] = 1. / 16.;\n\tcol[ 4 ] = vec3( .975, 0., .85 );\n\n    gSP[ 5 ] = vec3( -.5 * cos( time ), -.5 * sin( time ),  - 2. );\n\tgSR[ 5 ] = 1. / 16.;\n\tcol[ 5 ] = vec3( .85, .975, 0. );\n\n    gSP[ 6 ] = vec3( 0., 0.,  -2. );\n\tgSR[ 6 ] = 1. / 16.;\n\tcol[ 6 ] = vec3( 1., 1., 1. );\n}\n\nbool\nintersectSphere( in vec3 p_distCenterEye, in float p_radSqr ) {\n\n    float\n    lambda = dot( rTD.rayN, p_distCenterEye ),\n    radSqr = dot( p_distCenterEye, p_distCenterEye ) - lambda * lambda; \n    \n    if( p_radSqr < radSqr ) {\n    \n    \treturn false;\n    }\n    \n    hit = rTD.eye + ( sqrt( p_radSqr - radSqr ) - lambda ) * rTD.rayN;\n    \n    return true;\n}\n\nint\nmb( in vec2 p_ri ) {\n\n    vec2\n    c = p_ri;\n    \n    float\n    tmpR;\n    \n    for( int i = 0; i < 255; i++ ) {\n    \n        tmpR = c.x;\n        \n    \tc.x = c.x * c.x - c.y * c.y - p_ri.x; \n    \tc.y = 2. * tmpR * c.y - p_ri.y;\n        \n        if( 16. < c.x * c.x + c.y * c.y ) {\n        \n        \treturn i;\n        }\n    }\n    \n    return 255;\n}\n\nvec4\nrender( ) {\n\n    vec3\n    h = vec3( 0., 0., -1000000. ),\n    n = vec3( 0., 0., 1. ),\n    c = vec3( 0.025, 0.05, 0.0 ),\n    light1 = vec3( -1.5, +1.5, -2. ),\n    light2 = vec3( +1.5, -1.5, -2. ),\n    light3 = vec3( -3. * cos( 5. * time ), 0., -2. + 2. * sin( 5. * time ) );\n    \n    for( int i = 0; i < 7; i++ ) {\n    \n\t    if( intersectSphere( rTD.eye - gSP[ i ], gSR[ i ] ) ) { \n        \n    \t    if( h.z < hit.z ) {\n        \n        \t\th = hit;\n\t\t        n = h - gSP[ i ];\n\t\t        c = col[ i ];\n                \n                if( i == 1 ) {\n                \t\n //                   c *= 1. - float( mb( 5. * ( hit - gSP[ 1 ] ).xy - vec2( pi * sin( .5 * time ), 0. ) ) ) / 255.;\n                }\n                if( i == 5 ) {\n                \t\n          //          c *= float( mb( 5. * ( hit - gSP[ 5 ] ).xy - vec2( -.75 + .5 * sin( .5 * time ), 0. ) ) ) / 255.;\n                }\n        \t}\n        }\n    }\n    \n    if( h.z == -1000000. ) {\n    \n    \tvec2\n        xy_ = xy;\n        \n        xy_ += vec2( .05, -.05 );\n        xy_ = vec2( cos( 1.2 * time ) * xy_.x - sin( 1.2 * time ) * xy_.y, sin( 1.2 * time ) * xy_.x + cos( 1.2 * time ) * xy_.y );\n        xy_ += vec2( -.25, 0. );\n        xy_ = vec2( cos( 2.2 * time ) * xy_.x + sin( 2.2 * time ) * xy_.y, -sin( 2.2 * time ) * xy_.x + cos( 2.2 * time ) * xy_.y );\n        xy_ += vec2( +.25, 0. );\n        xy_ = vec2( cos( 3.2 * time ) * xy_.x - sin( 3.2 * time ) * xy_.y, sin( 3.2 * time ) * xy_.x + cos( 3.2 * time ) * xy_.y );\n        \n        c = vec3( ( 16. * factor * mod( float( mb( ( 5. + 5.7 * sin( .125 * time ) ) * xy_ ) ), 16. ) ) ) * texture( iChannel0, txy ).rgb;\n        return vec4( c, 1 );\n    }\n       \n    float\n    brt = clamp( 2. / pi * asin( ( clamp( -dot( normalize( n ), normalize( h - light1 ) ), 0., 1. ) ) ), 0., 1. ) + \n  \t\t  clamp( 2. / pi * asin( ( clamp( -dot( normalize( n ), normalize( h - light2 ) ), 0., 1. ) ) ), 0., 1. ) +\n          clamp( 2. / pi * asin( ( clamp( -dot( normalize( n ), normalize( h - light3 ) ), 0., 1. ) ) ), 0., 1. );\n//    brt = sqrt( ( 2. / pi * asin( -dot( normalize( n ), normalize( h - light1 ) ) ) ) ) + \n//          sqrt( ( 2. / pi * asin( -dot( normalize( n ), normalize( h - light2 ) ) ) ) ) +\n//          sqrt( ( 2. / pi * asin( -dot( normalize( n ), normalize( h - light3 ) ) ) ) );\n        \n\n    return vec4( .5 * brt * c, 1. );\n}\n\n\nvoid \nmainImage( out vec4 p_col, in vec2 p_xy ) {\n    \n    init( p_xy );\n\t\n    p_col = render( );    \n    \n    //p_col = vec4( .5 +  length( xy ) * vec3( sin( time ), sin( 2. * time ), sin( 3. * time ) ), 1. );\n}","name":"Image","description":"","type":"image"}]}