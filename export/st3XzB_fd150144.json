{"ver":"0.1","info":{"id":"st3XzB","date":"1639319555","viewed":170,"name":"rotate_shape","username":"newJasper","description":"rotate","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rectshape(vec2 position, vec2 scale){\n\tscale = vec2(0.5) - scale * 0.7;\n\tvec2 shaper = vec2(step(scale.x, position.x), step(scale.y, position.y));\n    shaper *= vec2(step(scale.x, 1.0 - position.x), step(scale.y, 1.0 - position.y));\n\treturn shaper.x * shaper.y; \n}\n\nmat2 rotate(float angle){\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 coord = fragCoord/iResolution.y;\n\n    vec3 color = vec3(0.0);\n\n\tcoord -= vec2(0.5);\n    coord = (fragCoord - .5* iResolution.xy ) /iResolution.y;\n\tcoord = rotate(0.3*sin(iTime))*coord ;\n\t//coord += vec2(0.5);\n\n\tcolor += vec3(rectshape(coord, vec2(0.3, 0.3)));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}