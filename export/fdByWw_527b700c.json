{"ver":"0.1","info":{"id":"fdByWw","date":"1644903893","viewed":147,"name":"Loading Animation fork","username":"c0rymcg","description":"A colorful variation of https://www.shadertoy.com/view/3ddcR4\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["metaballs","animation","loading"],"hasliked":0,"parentid":"3ddcR4","parentname":"loading animation 1"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original: https://www.shadertoy.com/view/3ddcR4\n//this is a slightly generalized/customizable version, with colors.\n\n#define PI 3.14159\n#define TAU 6.28318\n\n#define smallBlobR 0.5\n#define smallBlobOrbit 0.55\n#define largeBlobR 0.9\n#define largeBlobOrbit 0.4\n#define dotcount 7.\n\n\n\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0), 6.0)-3.0)-1.0, 0.0, 1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nfloat distToSmallBlobs(vec2 p, float i) {\n    float min_d =100.;\n    float a = TAU/dotcount*i-iTime;\n    min_d = min(min_d,distance(p,vec2(sin(a), cos(a))*smallBlobOrbit));\n    \n    return min_d;\n}\nfloat distToLargeBlob(vec2 p){\n\n    \n    //circle\n    if(iMouse.z>0.) {\n        \n        vec2 mPos = (iMouse.xy-iResolution.xy/2.0)/iResolution.y*2.;\n        return distance(p,mPos+vec2(.2,.1));\n    }\n    return distance(p,vec2(sin(iTime),cos(iTime))*largeBlobOrbit);\n    \n    //square\n    //p= p-vec2(sin(iTime),cos(iTime))*largeBlobOrbit;\n    //float theta = atan(p.y,p.x)- iTime/2.;\n    // p = length(p)*vec2(sin(theta),cos(theta));\n    // return abs(p.x)+abs(p.y);\n}\n\n\n#define AA 3\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.);\n      vec2 uv = ((fragCoord)-iResolution.xy/2.0)/iResolution.y*2.;\n      //rotate canvas around a bit\n      uv+=vec2(sin(iTime),cos(iTime))*0.2;\n\n      vec3 total=vec3(0.);\n      //add distance info for the five small blobs\n      for (float i=1.; i < dotcount+1.; i++){\n          vec3 dotcol = hsb2rgb(vec3(i/dotcount,1.,1.));\n          total+=dotcol*smallBlobR/distToSmallBlobs(uv,i);\n      }\n      vec3 dotcol = hsb2rgb(vec3(iTime/PI,1.,1.));\n      vec3 v = total+dotcol*largeBlobR/distToLargeBlob(uv);\n      float d = (length(v)-dotcount*1.4);\n     \n      v = normalize(v)*smoothstep(0., 1., d/min(fwidth(d),1.));\n      col+= v;\n      \n  \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}