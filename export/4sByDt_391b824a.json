{"ver":"0.1","info":{"id":"4sByDt","date":"1494273673","viewed":145,"name":"Game of Life : Plan","username":"JCDjcd","description":"The famous (yet another) Conway's game of life...\n\nClick on 'Enter' key to re-initialize the game.","likes":4,"published":1,"flags":48,"usePreview":0,"tags":["game","life","conway"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//--------------------------------------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv \t= fragCoord.xy / iResolution.xy;\n    fragColor \t= texture(iChannel0,uv);    \n} // mainImage()","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//--------------------------------------------------------------------------\n#define NX \t\t\t\tiChannelResolution[0].x\n#define NY \t\t\t\tiChannelResolution[0].y\n#define COLORIZATION(h)\tclamp(abs(fract(h+vec4(3.0,2.0,1.0,0.0)/3.0)*6.0-3.0)-1.0,0.0,1.0)\n\n//--------------------------------------------------------------------------\nvec4 get(float x,float y)\n{\n    float normalized_x = mod(x,NX)/iChannelResolution[0].x;\n    float normalized_y = mod(y,NY)/iChannelResolution[0].y;\n    return texture(iChannel0,vec2(normalized_x,normalized_y));\n} // get()\n\n//--------------------------------------------------------------------------\n// return 0 if dead and 1 if alive\nint is_alive(vec4 c)\n{\n    return c.x + c.y + c.z > 0.0 ? 1 : 0;\n} // is_alive()\n\n//--------------------------------------------------------------------------\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{    \n    if(fragCoord.x >= 0.0 && fragCoord.x < NX && fragCoord.y >= 0.0 && fragCoord.y < NY)\n    {\n        if(0 == iFrame || texelFetch(iChannel1,ivec2(13 /* SPACE KEY */,0),0).x > 0.0)\n        {\n            // initialization\n            float density \t= 0.4; // density of the initial random cells\n            float r \t\t= fract(iTime+12345.6789*(0.2+0.4*sin(fragCoord.x)+0.4*cos(fragCoord.y*1.732)));\n            fragColor \t\t= r < density ? vec4(0.0,0.0,0.0,1.0) : vec4(1.0,1.0,1.0,1.0);\n        }\n        else\n        {\n            // neighborhood of current point M\n            // A B C\n            // D M E\n            // F G H\n            float x = fragCoord.x;\n            float y = fragCoord.y;\n            \n            vec4 A = get(x-1.0,y-1.0);\n            vec4 B = get(x+0.0,y-1.0);\n            vec4 C = get(x+1.0,y-1.0);\n\n            vec4 D = get(x-1.0,y+0.0);\n            vec4 M = get(x+0.0,y+0.0);\n            vec4 E = get(x+1.0,y+0.0);\n\n            vec4 F = get(x-1.0,y+1.0);\n            vec4 G = get(x+0.0,y+1.0);\n            vec4 H = get(x+1.0,y+1.0);\n\n            int nb_neighbors \t= is_alive(A)\n                \t\t\t\t+ is_alive(B)\n                \t\t\t\t+ is_alive(C)\n                \t\t\t\t+ is_alive(D)\n                \t\t\t\t+ is_alive(E)\n                \t\t\t\t+ is_alive(F)\n                \t\t\t\t+ is_alive(G)\n                \t\t\t\t+ is_alive(H)\n                \t\t\t\t;\n            int is_alive_M = is_alive(M);\n            if(3 == nb_neighbors || 1 == is_alive_M && 2 == nb_neighbors)\n                // we just have to be sure that COLORIZATION is never black\n            \tfragColor = 1 == is_alive_M ? M : COLORIZATION(iTime/10.0);\n            else\n                fragColor = vec4(0.0,0.0,0.0,1.0);\n        }\n    }\n} // mainImage()","name":"Buf A","description":"","type":"buffer"}]}