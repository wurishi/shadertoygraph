{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define distortFocus .3\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat horizontDistance = abs(uv.y - distortFocus);\n\tfloat smallWaves = sin((uv.y+iTime*.01)*45.)*.06;\n\tfloat horizontalRipples = smallWaves / (horizontDistance*horizontDistance*1000. + 1.);\n\n\t\n\tfloat squiglyVerticalPoints = uv.x + smallWaves*.08;\n\tfloat verticalRipples = sin((squiglyVerticalPoints+iTime*.01)*60.) * .005;\n\t\n\tvec4 img = texture(iChannel0, vec2(uv.x + verticalRipples, -uv.y + horizontalRipples));\n\tfragColor = img;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdfXzf","date":"1404857878","viewed":710,"name":"Heat haze","username":"run","description":"Heat haze","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["heathaze"],"hasliked":0,"parentid":"","parentname":""}}