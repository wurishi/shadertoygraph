{"ver":"0.1","info":{"id":"43yXDy","date":"1720417762","viewed":32,"name":"Cloud from DeepSeek","username":"shiyuelai","description":"Cloud from DeepSeek","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cloudfromdeepseek"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// promote: 给我写一段生成云层的代码\n\n\n// 定义常量\n#define PI 3.141592653589793\n#define TWO_PI 6.283185307179586\n\n// 2D 噪声函数\nfloat noise(vec2 p) {\n    return fract(sin(dot(p, vec2(127.1, 311.7))) * 43758.5453);\n}\n\n// 2D Perlin 噪声函数\nfloat perlinNoise(vec2 p) {\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    float a = noise(i);\n    float b = noise(i + vec2(1.0, 0.0));\n    float c = noise(i + vec2(0.0, 1.0));\n    float d = noise(i + vec2(1.0, 1.0));\n\n    return mix(mix(a, b, u.x), mix(c, d, u.x), u.y);\n}\n\n// 主函数\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 归一化像素坐标\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0; // 将 uv 映射到 [-1, 1]\n    uv.x *= iResolution.x / iResolution.y; // 修正宽高比\n\n    // 初始化颜色\n    vec3 col = vec3(0.0);\n\n    // 计算时间相关的参数\n    float t = iTime * 0.1;\n\n    // 计算云层\n    float cloud = 0.0;\n    for (int i = 1; i <= 5; i++) {\n        float scale = pow(2.0, float(i));\n        cloud += perlinNoise(uv * scale + t) / scale;\n    }\n\n    // 调整云层的亮度和对比度\n    cloud = smoothstep(0.3, 0.7, cloud);\n\n    // 设置云层的颜色\n    vec3 cloudColor = vec3(0.8, 0.8, 0.9);\n\n    // 混合颜色\n    col = mix(col, cloudColor, cloud);\n\n    // 输出颜色\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}