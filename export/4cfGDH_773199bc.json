{"ver":"0.1","info":{"id":"4cfGDH","date":"1702987817","viewed":39,"name":"painting of kunkun","username":"yufengjie","description":"meme from china","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["draw","beginer","kunkun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nprecision mediump float;\n\n#define PI 3.1415926\n// https://www.shadertoy.com/view/lsXcWn\n#define S(a, b, t) smoothstep(a,b,t)\n#define B(a, b, blur, t) S(a-blur, a+blur, t)*S(b+blur, b-blur, t)\n\n\n// dot2 and sdBezier is from https://iquilezles.org/articles/distfunctions2d/\nfloat dot2(in vec2 v) {\n  return dot(v, v);\n}\nfloat sdBezier(in vec2 pos, in vec2 A, in vec2 B, in vec2 C) {\n  vec2 a = B - A;\n  vec2 b = A - 2.0 * B + C;\n  vec2 c = a * 2.0;\n  vec2 d = A - pos;\n  float kk = 1.0 / dot(b, b);\n  float kx = kk * dot(a, b);\n  float ky = kk * (2.0 * dot(a, a) + dot(d, b)) / 3.0;\n  float kz = kk * dot(d, a);\n  float res = 0.0;\n  float p = ky - kx * kx;\n  float p3 = p * p * p;\n  float q = kx * (2.0 * kx * kx - 3.0 * ky) + kz;\n  float h = q * q + 4.0 * p3;\n  if(h >= 0.0) {\n    h = sqrt(h);\n    vec2 x = (vec2(h, -h) - q) / 2.0;\n    vec2 uv = sign(x) * pow(abs(x), vec2(1.0 / 3.0));\n    float t = clamp(uv.x + uv.y - kx, 0.0, 1.0);\n    res = dot2(d + (c + b * t) * t);\n  } else {\n    float z = sqrt(-p);\n    float v = acos(q / (p * z * 2.0)) / 3.0;\n    float m = cos(v);\n    float n = sin(v) * 1.732050808;\n    vec3 t = clamp(vec3(m + m, -n - m, n - m) * z - kx, 0.0, 1.0);\n    res = min(dot2(d + (c + b * t.x) * t.x), dot2(d + (c + b * t.y) * t.y));\n        // the third root cannot be the closest\n        // res = min(res,dot2(d+(c+b*t.z)*t.z));\n  }\n  return sqrt(res);\n}\n\nmat2 rotate(float a) {\n  float theta = PI / 180. * a;\n  float s = sin(theta);\n  float c = cos(theta);\n  return mat2(c, -s, s, c);\n}\n\nvec4 Eye(vec2 uv) {\n  vec4 eye = vec4(1.);\n  eye.a = 1. - S(0., 0.01, distance(uv, vec2(-0.28, 0.3)) - 0.18);\n  eye.a += 1. - S(0., 0.01, distance(uv, vec2(0.12, 0.3)) - 0.18);\n\n  vec4 border = vec4(0.);\n  border.a = B(0., 0.03, 0.003, distance(uv, vec2(-0.28, 0.3)) - 0.18);\n  border.a += B(0., 0.03, 0.003, distance(uv, vec2(0.12, 0.3)) - 0.18);\n  eye = mix(eye, border, border.a);\n\n  vec4 eyeBall = vec4(0.);\n  eyeBall.a = 1. - S(0., 0.007, distance(uv, vec2(-0.34, 0.36)) - 0.035);\n  eyeBall.a += 1. - S(0., 0.007, distance(uv, vec2(0.03, 0.36)) - 0.035);\n  eye = mix(eye, eyeBall, eyeBall.a);\n\n  return eye;\n}\n\nvec4 Cheek(vec2 uv) {\n  vec4 cheek = vec4(0.76, 0.26, 0.13, 1.);\n\n  vec2 uv2 = uv * rotate(-30.);\n  uv2 = uv2 * vec2(1., 1. / 1.2);\n  cheek.a = 1. - S(0., 0.01, distance(uv2, vec2(-0.4, 0.2)) - 0.12);\n  cheek.a += 1. - S(0., 0.01, distance(uv, vec2(0.38, 0.03)) - 0.15);\n\n  return cheek;\n}\n\nvec4 Mouth(vec2 uv) {\n  vec2 uv2 = uv * vec2(0.65, 1.);\n  vec4 mouth = vec4(0.85, 0.46, 0.29, 1.);\n  mouth.a = 1. - S(0., 0.01, distance(uv2, vec2(-0.05, -0.03)) - 0.15);\n\n  vec4 border = vec4(0.);\n  border.a = B(0., 0.02, 0.003, distance(uv2, vec2(-0.05, -0.03)) - 0.15);\n\n  mouth = mix(mouth, border, border.a);\n\n  float lip = B(0., 0.03, 0.003, distance(uv2, vec2(-0.05, 0.13)) - 0.18);\n  mouth.rgb = mix(mouth.rgb, vec3(0.), lip);\n\n  return mouth;\n}\n\nvec4 Head(vec2 uv) {\n  vec4 head = vec4(0.9, 0.8, 0.3, 1.);\n\n  vec2 uv2 = uv * vec2(0.8, .85);\n  head.a = 1. - S(0.26, 0.28, distance(uv2, vec2(0., 0.1)) - 0.2);\n\n  vec4 border = vec4(0.);\n  border.a = B(0.26, 0.29, 0.003, (distance(uv2, vec2(0., 0.1)) - 0.2));\n  head = mix(head, border, border.a);\n\n  return head;\n}\n\nvec4 Hair(vec2 uv) {\n  vec4 hair = vec4(0.42, 0.39, 0.43, 1.);\n  float h1 = sdBezier(uv, vec2(-0.0, 0.7), vec2(0.5, 0.85), vec2(0.7, 0.2));\n  float h2 = sdBezier(uv, vec2(-0.2, 0.7), vec2(-0.5, 0.85), vec2(-0.7, 0.2));\n  float h = B(-1., 0.1, 0.01, h1) + B(-1., 0.1, 0.01, h2);\n  hair.a = h;\n  return hair;\n}\n\n\nvec4 Basketball(vec2 uv) {\n  vec4 basketball = vec4(0.96, 0.51, 0.14, 1.);\n  basketball.a = 1. - S(0., 0.01, distance(uv, vec2(0.8, -0.5)) - 0.3);\n\n  vec4 basketballBorder = vec4(0.,0.,0.,B(0., 0.03, 0.005,distance(uv, vec2(0.8, -0.5)) - 0.3));\n  basketball = mix(basketball, basketballBorder, basketballBorder.a);\n\n  // vec4 c = B(0.26, 0.29, 0.005, distance(uv*rotate(-26.)*vec2(1.,1.8),vec2(-.0,-1.06)) - 0.2) * vec4(0.,0.,0.,1.);\n  // basketball = mix(basketball, c, c.a);\n\n  vec3 color_b = vec3(0.,0.,0.);\n  float b1 = B(0.26, 0.29, 0.005, distance(uv*vec2(1.1,0.8), vec2(1.2, -0.5)) - 0.1);\n  float b2 = B(0.26, 0.29, 0.005, distance(uv*vec2(1.,1.), vec2(0.7, -0.85)) - 0.2);\n  float b3 =  B(0.26, 0.29, 0.005, distance(uv*rotate(26.)*vec2(1.,1.8),vec2(1.47, -0.06)) - 0.2);\n  float b4 =  B(0.26, 0.29, 0.005, distance(uv*rotate(-26.)*vec2(1.,1.8),vec2(-.0,-1.06)) - 0.2);\n  basketball.rgb = mix(basketball.rgb, color_b, b1+b2+b3+b4);\n\n  return basketball;\n}\n\nvec4 KunKun(vec2 uv) {\n  vec4 kk = vec4(0.47, 0.7, 0.93, 1.);\n\n  vec4 head = Head(uv);\n  kk = mix(kk, head, head.a);\n\n  vec4 eye = Eye(uv);\n  kk = mix(kk, eye, eye.a);\n\n  vec4 cheek = Cheek(uv);\n  kk = mix(kk, cheek, cheek.a);\n\n  vec4 mouth = Mouth(uv);\n  kk = mix(kk, mouth, mouth.a);\n\n  vec4 hair = Hair(uv);\n  kk = mix(kk, hair, hair.a);\n   \n  vec4 basketball = Basketball(uv);\n  kk = mix(kk, basketball, basketball.a);\n\n  return kk;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy * 2. - iResolution.xy) / iResolution.y;\n  vec4 kk = KunKun(uv);\n  \n  fragColor = mix(vec4(0.), kk, kk.a);\n}\n","name":"Image","description":"","type":"image"}]}