{"ver":"0.1","info":{"id":"4tlfWM","date":"1512069599","viewed":183,"name":"2D Checkers pattern","username":"Otringal","description":"A \"shortest version\" type of challenge for drawing a 2D chess/checkers pattern.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","pattern","checkers","chess","squares"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define mainImage(o,i) \\\no = vec4((int(i.x) ^ int(i.y)) & 64)\n\n/*\n//OR\nvoid mainImage(out vec4 c, vec2 p)\n{\n    p = ceil(p * .1);\n    c -= c - mod(p.x + p.y, 2.);\n}\n\n//OR\nvoid mainImage(out vec4 c, in vec2 p)\n{   \n    c -= c + sign(sin(p.x * .1 * sign(sin(p.y * .1))));\n}\n\n//OR\nvoid mainImage(out vec4 c, in vec2 p)\n{\n    vec2 m = sign(fract(p * .02) - .5);\n    c -= c + m.x * m.y;\n}\n*/","name":"Image","description":"","type":"image"}]}