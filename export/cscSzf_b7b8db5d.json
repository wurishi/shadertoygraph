{"ver":"0.1","info":{"id":"cscSzf","date":"1680159165","viewed":79,"name":"HW3 2D Interpolated value noise","username":"lukawa","description":"interpolated value noise.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin","random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R              iResolution\n#define Aspect         (R.x / R.y)\n#define UNIT           (1.0 / R.y)\n#define PI             3.1415926535\n#define coohomColor vec3(26.0/255.0,122.0/255.0,248.0/255.0) //背景颜色\n#define N              60.0\n#define theta       3.14 * 0.005 // 指针角度\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    // Smooth Interpolation\n    vec2 u = smoothstep(0.,1.0,f);\n\n    // Mix 4 coorners percentages\n    //return mix(a, b, u.x) +\n      //      (c - a)* u.y * (1.0 - u.x) +\n        //    (d - b) * u.x * u.y;\n            \n            // 双线性插值 等价于：\n    float x1 = mix(a,b,u.x);\n    float x2 = mix(c,d,u.x);\n    float y = mix(x1,x2,u.y);\n    return y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/R.y;\n    vec2 pos = vec2(uv*100.0);\n    float n = noise(pos);\n\n    // Output to screen\n    fragColor = vec4(vec3(n),1.0);\n}","name":"Image","description":"","type":"image"}]}