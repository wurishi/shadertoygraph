{"ver":"0.1","info":{"id":"3d3fWN","date":"1605063245","viewed":518,"name":"repeatable 3d worley noise","username":"hong1991","description":"Yet another worley noise. It's inverted, 3d and repeatable.\nBased on https://www.shadertoy.com/view/WddyW8","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["3dnoise","worley","repeatable"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 hash33(vec3 p3) {\n\tvec3 p = fract(p3 * vec3(.1031,.11369,.13787));\n    p += dot(p, p.yxz+19.19);\n    return -1.0 + 2.0 * fract(vec3((p.x + p.y)*p.z, (p.x+p.z)*p.y, (p.y+p.z)*p.x));\n}\n\nfloat worley(vec3 p, float scale){\n\n    vec3 id = floor(p*scale);\n    vec3 fd = fract(p*scale);\n\n    float n = 0.;\n\n    float minimalDist = 1.;\n\n\n    for(float x = -1.; x <=1.; x++){\n        for(float y = -1.; y <=1.; y++){\n            for(float z = -1.; z <=1.; z++){\n\n                vec3 coord = vec3(x,y,z);\n                vec3 rId = hash33(mod(id+coord,scale))*0.5+0.5;\n\n                vec3 r = coord + rId - fd; \n\n                float d = dot(r,r);\n\n                if(d < minimalDist){\n                    minimalDist = d;\n                }\n\n            }//z\n        }//y\n    }//x\n    \n    return 1.0-minimalDist;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    vec3 p = vec3(uv, iTime*0.1);\n    // Time varying pixel color\n    vec3 col = vec3(worley(p*2.0-1.0, 4.0));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}