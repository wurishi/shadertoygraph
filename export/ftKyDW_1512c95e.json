{"ver":"0.1","info":{"id":"ftKyDW","date":"1661479664","viewed":95,"name":"Purpy Fractalization","username":"spenceryonce","description":"Playing with some fun simple fractal techniques and exploring new ones with fract, floor and space warping over time. ","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","waves","math","sin","radial","cos","trippy","floor","trig","purple","science","algebra","fractalization"],"hasliked":0,"parentid":"NlVcWW","parentname":"Jordan's Fractal 03"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy*2.0-1.0;\n    float angle = 0.6 + iTime * 0.15;\n    \n    uv = uv/dot(uv,uv)+(sin(iTime*0.1));\n    for(float i = 1.0; i < 32.0; i += 1.0){\n        uv = abs(uv);\n        uv -= 0.5;\n        uv *= 1.01;\n        uv *= mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n        uv += 0.4;\n    }\n    uv*=floor(fract(uv*2.0)+uv);\n    \n    \n    vec3 color = vec3(0.0,0.0,0.0);//r,g,b\n    \n    vec3 circle = vec3(\n        length(uv+vec2(-0.4,0.2)),\n        length(uv+vec2(-0.2,0.1)),\n        length(uv+vec2(-0.3,0.6))\n    );\n    \n    color = color + circle*0.9;\n    \n    fragColor = vec4(color,1.0);//r,g,b,a\n}","name":"Image","description":"","type":"image"}]}