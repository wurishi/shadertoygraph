{"ver":"0.1","info":{"id":"wlB3Wy","date":"1560943728","viewed":622,"name":"study3_3dSample_clock","username":"firegump","description":"just leaning  Clock~~~~","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["studycubedraw"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define sat(x) clamp(x,0.,1.)\nfloat DistLine(vec3 ro, vec3 rd, vec3 p){\n\treturn length(cross((p - ro),rd))/length(rd);\n}\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p){//draw a smaller point if it is far\n\tfloat d = DistLine(ro,rd,p);\n    d = smoothstep(.012,.01, d);\n    return d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     float t = iTime*.5;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(2.+sin(t)*.5,sin(-t)*.5,cos(t)*.9);//camera point\n    \n    \n\n    float zoom = 1.;\n    const float a = 1.;\n\tfloat b = 0.;\n    float A = sin(t*7.);\n    float B = cos(t*7.);\n    float C = sin(t*1.)*.7;\n    float D = cos(t*1.)*.7;\n    \n    vec3 lookat = vec3(a*.5);//rect center point\n        \n    vec3 f = normalize(lookat - ro);\n    vec3 r = cross(vec3(0.,1.,0.),f);\n    vec3 u = cross(r,f);\n    \n    vec3 c = ro + f*zoom;\n    \n    vec3 i =  c + uv.x*r + uv.y*u; //c = ro + f*2.0\n    vec3 rd = i -  ro;//ray direction\n    \n   \n    \n    float d = 0.;\n    \n   \n\n    for(float i = 0.;i < a*10.+.01;i += 0.1){\n    \t\n        d += DrawPoint(ro, rd, vec3(a,a,i*2.-a))*(sin(t*16.)*.5+0.6);\n        d += DrawPoint(ro, rd, vec3(a,0.,i*2.-a))*(sin(t*16.)*.5+0.6);\n        \n        \n        d += DrawPoint(ro, rd, vec3(a,a,i*.1));\n        d += DrawPoint(ro, rd, vec3(b,b,i*.1));\n        d += DrawPoint(ro, rd, vec3(a,b,i*.1));\n        d += DrawPoint(ro, rd, vec3(b,a,i*.1));\n        d += DrawPoint(ro, rd, vec3(i*.1,a,a));\n        d += DrawPoint(ro, rd, vec3(i*.1,b,b));\n        d += DrawPoint(ro, rd, vec3(i*.1,b,a));\n        d += DrawPoint(ro, rd, vec3(i*.1,a,b));\n        d += DrawPoint(ro, rd, vec3(a,i*.1,a))*.1;\n        d += DrawPoint(ro, rd, vec3(a,i*.1,b))*.1;\n        d += DrawPoint(ro, rd, vec3(b,i*.1,a))*.1;\n        d += DrawPoint(ro, rd, vec3(b,i*.1,b))*.1;\n\n        d += DrawPoint(ro, rd, vec3(i*sat(sin(t*2.)*.1),a*.5,a*.5));//line\n        \n        d += DrawPoint(ro, rd, vec3(b+a ,i*B*.05+a*.5, A*i*.05 +a*.5));//quick pointer\n        d += DrawPoint(ro, rd, vec3(b+a,i*D*.05+a*.5, C*i*.05 +a*.5));//slow pointer\n        d += (DrawPoint(ro, rd, vec3(b ,i*cos(i*7.)*.05+a*.5, sin(i*7.)*i*.05 +a*.5)))*(sin(i*.5)*.5+0.6)*.5;\n        d += (DrawPoint(ro, rd, vec3(b+a ,i*cos(i*7.)*.05+a*.5, sin(i*7.)*i*.05 +a*.5)))*(sin(i*.5)*.5+0.6);\n        \n        \n    }\n    vec4 col = vec4 ((0.5 + 0.5*cos(t + uv.xyx + vec3(0,2,4))),1.);\n    col *= d;\n    \n    \n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}