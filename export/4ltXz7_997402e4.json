{"ver":"0.1","info":{"id":"4ltXz7","date":"1478789553","viewed":488,"name":"2D wave sandbox revisited","username":"guil","description":"Adapted from https://www.shadertoy.com/view/MtdSR4# by rory618\nDrag the mouse to draw a solid wall. W to reset boundary and r to reset waves.\n","likes":17,"published":1,"flags":48,"usePreview":0,"tags":["procedural","2d","wave","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uvd = uv-texture(iChannel0, uv).yy/iResolution.xy*10.;\n    vec4 t = vec4(.5,.5,.5,0.)*dot(texture(iChannel2, uvd),\n                      vec4(.8,.5,.38,0.))+vec4(0.01,0.2,0.3,1.);\n\t\n    fragColor = t*1.5+texture(iChannel1, uv);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nconst float KEY_W  = 87.5/256.0;\nconst float KEY_R  = 82.5/256.0;\n\nbool keyIsDown( float key ) {\n    return texture( iChannel3, vec2(key,0.25) ).x > .5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n    vec2 l = texture(iChannel0, (fragCoord-vec2(1.,0))/iResolution.xy).xy;\n    vec2 r = texture(iChannel0, (fragCoord+vec2(1.,0))/iResolution.xy).xy;\n    vec2 u = texture(iChannel0, (fragCoord-vec2(0,1.))/iResolution.xy).xy;\n    vec2 d = texture(iChannel0, (fragCoord+vec2(0,1.))/iResolution.xy).xy;\n    \n    vec2 t = texture(iChannel0, fragCoord/iResolution.xy).xy;\n        \n    t = mix(t,(l+r+u+d)/4.,.005);\n        \n\tfloat DL = l.x-t.x;\n\tfloat DR = r.x-t.x;\n\tfloat DU = u.x-t.x;\n\tfloat DD = d.x-t.x;\n    float c = 1.2;//wave propagation speed\n    t.y += c*(DL+DR+DU+DD)/4.;\n    t.x += t.y;\n    \n    float f = 4.;//wave source frequency\n    t = mix(t, 4.*vec2(sin(iTime*f), cos(iTime*f)), .5*exp(-.2*length(fragCoord-iResolution.xy/2.)));\n    \n    if(fragCoord.x<1. || fragCoord.y<1. || fragCoord.x>iResolution.x-1. || fragCoord.y>iResolution.y-1.){\n        t*=0.;\n    }\n    \n    if ( keyIsDown(KEY_R)) {\n        t *= 0.;\n    }\n    \n    t*=1.-texture(iChannel1, fragCoord/iResolution.xy).x;\n    \n    fragColor = vec4(t.x,t.y,0,1);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define _lineSegment(a, b, c, d) lineSegment(fragColor, fragCoord, a, b, c, d);\n\nvoid lineSegment(inout vec4 fragColor, vec2 z, vec2 a, vec2 b, vec4 c,  float w){\n    float d = dot(z-mix(a,b,.5),b-a);\n    if(abs(d)<dot(a-b,a-b)/2.){\n    \td=length(cross(normalize(vec3(a-b,0.)),vec3(z-b,0.)));\n    } else {\n        d=min(length(z-b),length(z-a));\n    }\n    fragColor.xyz = mix(fragColor.xyz, c.xyz,c.w *clamp(w-d,0.,1.));\n}\n\nconst float KEY_W  = 87.5/256.0;\nconst float KEY_E  = 69.5/256.0;\n\n\nbool keyIsDown( float key ) {\n    return texture( iChannel3, vec2(key,0.25) ).x > .5;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel1, fragCoord/iResolution.xy);\n    vec4 mo = texture(iChannel1, vec2(0));\n    if(iMouse.w>0. && mo.w>0. && length(mo.xy-iMouse.xy)>3.){\n    \tif ( keyIsDown(KEY_E)) {\n        \t_lineSegment(iMouse.xy, mo.xy, vec4(0,0,0,1),5.);\n        } else {\n        \t_lineSegment(iMouse.xy, mo.xy, vec4(1),2.);\n        }\n    }\n    if ( keyIsDown(KEY_W)) {\n        fragColor *= 0.;\n    }\n    if (length(fragCoord)<1.){\n        if(length(mo.xy-iMouse.xy)>3.){\n        \tfragColor = iMouse;\n        } else {\n            fragColor = vec4(mo.xy,iMouse.zw);\n        }\n    }\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n        \n    vec2 l = texture(iChannel0, (fragCoord-vec2(1.,0))/iResolution.xy).xy;\n    vec2 r = texture(iChannel0, (fragCoord+vec2(1.,0))/iResolution.xy).xy;\n    vec2 u = texture(iChannel0, (fragCoord-vec2(0,1.))/iResolution.xy).xy;\n    vec2 d = texture(iChannel0, (fragCoord+vec2(0,1.))/iResolution.xy).xy;\n    \n    vec2 t = texture(iChannel0, fragCoord/iResolution.xy).xy;\n        \n        \n\tfloat DL = l.x-t.x;\n\tfloat DR = r.x-t.x;\n\tfloat DU = u.x-t.x;\n\tfloat DD = d.x-t.x;\n    \n    fragColor = normalize(vec4((DL+DR),(DU+DD),2.,0));\n}","name":"Buf C","description":"","type":"buffer"}]}