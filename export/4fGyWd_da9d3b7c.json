{"ver":"0.1","info":{"id":"4fGyWd","date":"1732524325","viewed":85,"name":"Animation of Portal","username":"Majong562","description":"animation of portal","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["portal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 p) {\n    return fract(sin(vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)))) * 43758.5453);\n}\n\nfloat voronoi(vec2 x) {\n    vec2 n = floor(x), f = fract(x);\n    float distance_type = 1., F1 = 8.0;\n\n    for (int j = -1; j <= 1; j++) {\n        for(int i = -1; i <= 1; i++) {\n            vec2 g = vec2(i, j);\n            vec2 o = hash(n + g);\n            // o = 0.5 + 0.41 * sin(iTime + 6.2831 * o); // animate\n            vec2 r = g - f + o;\n            float d = distance_type < 1.0 ? dot(r, r)  :          // euclidean^2\n                      distance_type < 2.0 ? sqrt(dot(r, r)) :     // euclidean\n                      distance_type < 3.0 ? abs(r.x) + abs(r.y) : // manhattan\n                      max(abs(r.x), abs(r.y));                    // chebyshev\n\n            if (d < F1) F1 = d;\n        }\n    }\n    return F1;\n}\n\nvec2 twirl(vec2 UV, vec2 Center, float Strength, vec2 Offset) {\n    vec2 delta = UV - Center;\n    float angle = Strength * length(delta);\n    vec2 uv = delta * mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n    return uv + Center + Offset;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy - vec2(0.5);\n    uv.x *= iResolution.x / iResolution.y;\n    float time = iTime * 0.5;\n    vec2 Muv = uv * vec2(5., 5.);\n    Muv = twirl(Muv, vec2(0., 0.), 1.95, vec2(-time));\n\n    vec4 color = vec4(1., 0., 1., 1.);\n    float param = voronoi(Muv);\n    param *= smoothstep(0.1, 0.3, length(uv));\n    param *= smoothstep(0.95, 0.75, 2. * length(uv));\n    fragColor = color * param;\n}","name":"Image","description":"","type":"image"}]}