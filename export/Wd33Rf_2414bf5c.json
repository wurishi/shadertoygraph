{"ver":"0.1","info":{"id":"Wd33Rf","date":"1568935176","viewed":185,"name":"Emergent BehaviAAAAAA","username":"Cotterzz","description":"Trying to create lettering with a shader, led to some unexpected emergent behavior.\nSeizure warning with this one, sorry.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["typography","letters"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 vect2d(vec2 p1, vec2 p2) {\n    vec2 temp;\n    temp.x = (p2.x - p1.x);\n    temp.y = -1.0 * (p2.y - p1.y);\n    return temp;}\n\nbool pointInRectangle(in vec2 A, in vec2 B, in vec2 C, in vec2 D, in vec2 m ) {\n    vec2 AB = vect2d(A, B);  float C1 = -1.0 * (AB.y*A.x + AB.x*A.y); float  D1 = (AB.y*m.x + AB.x*m.y) + C1;\n    vec2 AD = vect2d(A, D);  float C2 = -1.0 * (AD.y*A.x + AD.x*A.y); float D2 = (AD.y*m.x + AD.x*m.y) + C2;\n    vec2 BC = vect2d(B, C);  float C3 = -1.0 * (BC.y*B.x + BC.x*B.y); float D3 = (BC.y*m.x + BC.x*m.y) + C3;\n    vec2 CD = vect2d(C, D);  float C4 = -1.0 * (CD.y*C.x + CD.x*C.y); float D4 = (CD.y*m.x + CD.x*m.y) + C4;\n    return     0.0 >= D1 && 0.0 >= D4 && 0.0 <= D2 && 0.0 >= D3;}\n\nfloat inCharacter ( in vec2 position, in int character){\n    if (character == 65){\n        vec2 tl = vec2(0.4,0.9);\n        vec2 tr = vec2(0.6,0.95);\n        vec2 br = vec2(0.9,0.1);\n        vec2 bl = vec2(0.1,0.1);\n        if (pointInRectangle(tl,tr,br,bl,position)){\n            vec2 itl = vec2(0.5,0.66);\n        \tvec2 itr = vec2(0.5,0.66);\n        \tvec2 ibr = vec2(0.7,0.1);\n        \tvec2 ibl = vec2(0.3,0.1);\n            if (pointInRectangle(itl,itr,ibr,ibl,position)){\n                \n                return step (0.1,abs(0.4-position.y));\n                    } else { return 0.0;}\n            \n        } else {return 1.0;}\n        //float l2 = step((position.x * 3.00),(position.y+0.4));\n        //float l1 = step((position.y+0.8),(position.x * 3.00));\n        //return l1+l2;\n    }\n}\n\nvoid mainImage ( out vec4 fragColor, in vec2 fragCoord ){\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    //if (((fragCoord.x * 2.00) + 5.00)>fragCoord.y){\n        //col = vec3 (0.0,0.0,0.0);\n    //}\n    float fcol = inCharacter(mod(fragCoord,iTime/100.00)/(iTime/100.00), 65);\n    col = vec3(fcol,fcol,fcol);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}