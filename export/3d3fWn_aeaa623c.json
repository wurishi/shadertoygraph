{"ver":"0.1","info":{"id":"3d3fWn","date":"1604735526","viewed":70,"name":"clothes 2d","username":"iuryBorgesRodrigues","description":"clothes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","iq","clothes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define AA 2\n#define ZERO (min(iFrame,0))\n\n\n\n\n\n\nmat2 Rot(float a) {\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(vec2(c, -s),vec2( s, c));\n}\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\nfloat sdHexagon( in vec2 p, in float r )\n{\n    const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n    p = abs(p);\n    p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n    p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n    return length(p)*sign(p.y);\n}\nfloat comp(float a,float b){\n    \n    return (a < b) ? a : b;\n}\nfloat opSmoothUnion( float d1, float d2, float k )\n{\n    float h = max(k-abs(d1-d2),0.0);\n    return min(d1, d2) - h*h*0.25/k;\n\t//float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n\t//return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\n\nvec3 scene(vec2 p){\n    vec3 col=vec3(1.0,0.5,0.1);\n    \n    vec2 p1=p;\n    vec2 p2=p;\n    vec2 p3=vec2(abs(p.x),p.y);\n    p3+=vec2(-0.5,0.1);\n    p3*=Rot(-0.5);\n    \n    p2+=vec2(0.0,0.5);\n    p2.x*=exp2(-p2.y*0.65);\n\tp2.x*=cos(p.y*0.8);\n    \n    \n    \n    float body[4];\n    \n    body[0]=sdHexagon(p1,0.3);\n    body[0]=max(body[0],-p1.y);\n    body[1]=sdBox(p2,vec2(0.3));\n   \tbody[0]=opSmoothUnion(body[0],body[1],0.2)-0.1;\n    body[2]=sdBox(p3,vec2(0.05,0.4))-0.1;\n    body[0]=opSmoothUnion(body[0],body[2],0.1);\n    \n    \n   if(body[0] < 0.0) col=vec3(0.0);\n   \n  \n   return col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 tot = vec3(0.0);\n  \n    for( int m=ZERO; m<AA; m++ )\n    for( int n=ZERO; n<AA; n++ )\n    {\n     // pixel coordinates\n      vec2 o = vec2(float(m),float(n)) / float(AA) - 0.5;\n     vec2 p = (-iResolution.xy + 2.0*(fragCoord+o))/iResolution.y;   \n \t vec3 col=vec3(0.0);\n  \n  \t  col *= 1.5 - 0.2*length(p);\n      col = col*vec3(1.11,0.89,0.79);\n    \n      col=scene(p);\n        \n         tot += col;\n    }\n    \n    tot /= float(AA*AA);\n  fragColor = vec4(tot,1.0);\n}","name":"Image","description":"","type":"image"}]}