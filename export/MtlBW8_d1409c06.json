{"ver":"0.1","info":{"id":"MtlBW8","date":"1511807388","viewed":666,"name":"Kernel - Edge detection","username":"diogotito","description":"My first experiment with Shadertoy, accessing textures in GLSL and convolution matrices.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["texture","imageprocessing","kernel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PERIOD 10.0 // in seconds\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 onePixel = vec2(1, 1) / iResolution.xy;\n    \n    float wave = 3.0 + 0.75*sin(1.0/PERIOD * iTime * 6.28); // Oscillates between 2.25 and 3.75\n    \n\tfragColor = texture(iChannel0, uv + vec2(-onePixel.x, -onePixel.y))\n              + texture(iChannel0, uv + vec2(          0, -onePixel.y))\n              + texture(iChannel0, uv + vec2( onePixel.x, -onePixel.y))\n              + texture(iChannel0, uv + vec2(-onePixel.x,           0))\n              + texture(iChannel0, uv + vec2(          0,           0)) * -wave;\n              + texture(iChannel0, uv + vec2( onePixel.x,           0))\n              + texture(iChannel0, uv + vec2(-onePixel.x,  onePixel.y))\n              + texture(iChannel0, uv + vec2(          0,  onePixel.y))\n              + texture(iChannel0, uv + vec2( onePixel.x,  onePixel.y));\n    fragColor = 1.0 - fragColor;\n}","name":"Image","description":"","type":"image"}]}