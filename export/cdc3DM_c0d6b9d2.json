{"ver":"0.1","info":{"id":"cdc3DM","date":"1677318165","viewed":463,"name":"20230225_hj_nyolfen","username":"0b5vr","description":"Played with Nyolfen's live set @ 1/2 Junction, 2023 Feb 24, MOGRA, Akihabara\n\nhttps://twitter.com/killu0_/status/1627187546097881093\n\nLive coded in 45 minutes.\nThe one I've done in live had more Bonzomatic specific features, this one lacks them.","likes":19,"published":1,"flags":64,"usePreview":0,"tags":["3d","fft","pathtracer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lljSDc","filepath":"https://soundcloud.com/nyolfen/far-north?si=675d1d2c87b44540972e42e0c01c3a7b&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/nyolfen/far-north?si=675d1d2c87b44540972e42e0c01c3a7b&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// literally the worst code I've ever written\n// Don't ask me anything\n\n#define saturate(x) clamp(x,0.,1.)\n#define linearstep(a,b,t) saturate( ((t)-(a)) / ((b)-(a)) )\n\nconst float FAR=1E2;\nconst float PI=acos(-1.);\nconst float TAU=2.*PI;\nconst float LOG10=log(10.);\n\nfloat fetchFFT( float x ) {\n  float xt = exp2( mix( -9.0, -1.0, x ) );\n  float v = texture( iChannel0, vec2( xt, 0.25 ) ).x;\n\n  v += 0.125 * x; // ??\n  \n  return v;\n}\n\nuvec3 pcg3d(uvec3 s){\n  s=s*1145141919u+1919810u;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  s^=s>>16;\n  s.x+=s.y*s.z;\n  s.y+=s.z*s.x;\n  s.z+=s.x*s.y;\n  return s;\n}\n\nvec3 pcg3df(vec3 s){\n  uvec3 r=pcg3d(floatBitsToUint(s));\n  return vec3(r)/float(0xffffffffu);\n}\n\nmat3 orthbas(vec3 z){\n  z=normalize(z);\n  vec3 up=abs(z.y)<.999?vec3(0,1,0):vec3(0,0,1);\n  vec3 x=normalize(cross(up,z));\n  return mat3(x,cross(z,x),z);\n}\n\n\nuvec3 seed;\nvec3 random3(){\n  seed=pcg3d(seed);\n  return vec3(seed)/float(0xffffffffu);\n}\n\nvec3 lamb(vec3 n){\n  vec3 dice=random3();\n  float phi16=TAU*dice.x;\n  float cost=sqrt(dice.y);\n  float sint=sqrt(1.-dice.y);\n  return orthbas(n)*vec3(\n  cost*cos(phi16),\n  cost*sin(phi16),\n  sint\n  );\n}\n\nvec3 cyclic(vec3 p){\n  mat3 b=orthbas(vec3(3,-5,7));\n  vec4 sum=vec4(0);\n  for(int i=0;i<5;i++){\n    p+=sin(p.zxy);\n    sum+=vec4(\n      cross(cos(p),sin(p.yzx)),\n      1\n    );\n    sum*=2.;\n    p*=2.;\n  }\n  return sum.xyz/sum.w;\n}\n\nvec4 isectbox(vec3 ro,vec3 rd,vec3 s){\n  vec3 src=-ro/rd;\n  vec3 dst=abs(s/rd);\n  vec3 fv=src-dst;\n  vec3 bv=src+dst;\n  float f=max(max(fv.x,fv.y),fv.z);\n  float b=min(min(bv.x,bv.y),bv.z);\n  if(f<0.||b<f){return vec4(FAR);}\n  vec3 n=-sign(rd)*step(f,fv);\n  return vec4(n,f);\n}\nvec4 isectibox(vec3 ro,vec3 rd,vec3 s){\n  vec3 src=-ro/rd;\n  vec3 dst=abs(s/rd);\n  vec3 bv=src+dst;\n  float b=min(min(bv.x,bv.y),bv.z);\n  if(b<0.){return vec4(FAR);}\n  vec3 n=-sign(rd)*step(bv,vec3(b));\n  return vec4(n,b);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  fragColor=vec4(0);\n  seed=uvec3(fragCoord.xy,iTime*100.);\n  \n  vec2 uv=fragCoord.xy/iResolution.xy;\n  vec2 p=uv*2.-1.;\n  p.x*=iResolution.x/iResolution.y;\n  \n  vec3 emi;\n  \n  for(int iS=0;iS<20;iS++){\n  vec3 ro=vec3(0,0,5);\n  vec3 rd=normalize(vec3(p,-6));\n  vec3 colrem=vec3(1);\n  for(int iR=0;iR<3;iR++){ // fuck youuuu\n    vec4 isect=vec4(FAR);;\n  vec4 isect2;\n  \n  isect2=isectibox(ro,rd,vec3(1,9./16.,5));\n  if(isect2.w<isect.w){\n    isect=isect2;\n    emi=vec3(0);\n  }\n\n    {\n    isect2=isectbox(ro,rd,vec3(100,100,.01));\n      \n      if(isect2.w<isect.w){\n        emi*=0.;\n      }\n    }\n    for(int i=0;i<10;i++){\n    vec4 isectt=isectbox(ro-vec3(0,0,1.-.02*float(i)),rd,vec3(100,100,.01));\n      if(isectt.w<isect.w){\n      float size=50.;\n    vec3 rp=ro+rd*isectt.w;\n      float row=floor(rp.y*size);\n      vec3 dice=pcg3df(vec3(row));\n      float scr=(dice.z-.5)*iTime;\n      vec2 aa=vec2(row,floor(rp.x*size+size*scr)/10.);\n      \n    float ha=fetchFFT(dice.x-.01*float(i));\n    ha=.01+linearstep(.8,1.,ha);\n      vec3 noise=cyclic(vec3(aa.xxy));\n        vec3 emit=ha*mix(vec3(0,0,0),vec3(1),step(.2,noise.x));\n      emit+=ha*mix(vec3(0,0,0),saturate(cos(iTime+float(i)+vec3(1,2,3))) ,step(noise.x,-.2));\n      float gu=fract(rp.y*size);\n      emit*=step(.2,gu)*step(gu,.8);\n        emit*=exp(-.5*float(i));\n        emi+=emit;\n      }\n    }\n\n    vec3 rp=ro+rd*isect.w;\n  vec3 n=isect.xyz;\n  ro=rp+n*1E-2;\n  rd=reflect(rd,n);\n  rd=mix(rd,lamb(rd),.1);\n  rd=mix(rd,lamb(n),step(random3().x,.5));\n  colrem*=.8;\n  \n  fragColor.xyz+=colrem*emi;\n  }\n  }\n  \n  fragColor.xyz/=20.;\n  fragColor.xyz=pow(fragColor.xyz,vec3(.4545));\n  fragColor.xyz=smoothstep(vec3(.1,0.,-.1),vec3(.9,1.,1.1),fragColor.xyz);\n  \n  //fragColor+=vec4(tex.www,1);\n\n  \n  //fragColor+=.1*ha3;\n  //fragColor+=.2*vec4(random3().x);\n}\n","name":"Image","description":"","type":"image"}]}