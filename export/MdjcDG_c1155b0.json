{"ver":"0.1","info":{"id":"MdjcDG","date":"1499025314","viewed":197,"name":"TrippySpin","username":"balkhan","description":" ","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define I_MAX\t150\n#define E\t\t0.001\n\n/*\n* License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n* Created by bal-khan\n*/\n\n//#define WOBBLY\n\nfloat\tsdTorus( vec3 p, vec2 t );\nvec2\tmarch(vec3 pos, vec3 dir);\nvec3\tcamera(vec2 uv);\nvec2\trot(vec2 p, vec2 ang);\nfloat\tt;\nvec3\th;\n\n// blackbody by aiekick : https://www.shadertoy.com/view/lttXDn\n\n// -------------blackbody----------------- //\n\n// return color from temperature \n//http://www.physics.sfasu.edu/astro/color/blackbody.html\n//http://www.vendian.org/mncharity/dir3/blackbody/\n//http://www.vendian.org/mncharity/dir3/blackbody/UnstableURLs/bbr_color.html\n\nvec3 blackbody(float Temp)\n{\n\tvec3 col = vec3(255.);\n    col.x = 56100000. * pow(Temp,(-3. / 2.)) + 148.;\n   \tcol.y = 100.04 * log(Temp) - 623.6;\n   \tif (Temp > 6500.) col.y = 35200000. * pow(Temp,(-3. / 2.)) + 184.;\n   \tcol.z = 194.18 * log(Temp) - 1448.6;\n   \tcol = clamp(col, 0., 255.)/255.;\n    if (Temp < 1000.) col *= Temp/1000.;\n   \treturn col;\n}\n\n// -------------blackbody----------------- //\n\n#define L1 vec3(-3.,2., -5.)\nconst vec3\tlightCol = vec3(1.,.7,.51);\nvec3 evaluateLight(vec3 pos)\n{\n    vec3\tdist = L1-pos-vec3(sin(t*8.)*3.,cos(t*8.)*3.,5. );\n    dist = (dist*dist*dist*dist*dist);\n    float distanceToL = pow(dist.x+dist.y*dist.z, 1./5.);\n    return (\n        \tlightCol * .250/(distanceToL*distanceToL)\n        \t);\n}\n\nvoid mainImage(out vec4 o, in vec2 f )\n{\n    h = vec3(0.);\n    t = iTime;\n    vec2 R = iResolution.xy,\n          uv  = vec2(f-R/2.) / R.y;\n\tvec3\tdir = camera(uv);\n    vec4\tcol = vec4(0.0);\n    vec3\tpos = vec3(.0, .0, 5.0);\n\n    vec2\tinter = (march(pos, dir));\n\n    col.xyz = blackbody((15.-inter.y*.06125+.1*inter.x)*100.);\n\n   \to = col+inter.y*.001*vec4(.0, 1.2, 1., 1.)*2.;\n}\n\nfloat\tscene(vec3 p)\n{\n    float\tmind = 1e5;\n    float\tlit  = 1e5;\n    lit = length(p-L1)-.0;\n\n    mind = -sdTorus(p, vec2(15.5, 3.5) );\n\n    p.y = max(\n        \t  ( (sin(+t+abs(p.y)-abs(p.x) ) +(+abs(p.x)-abs(p.y) ) ) )\n              ,\n              ( (sin(-t+abs(p.x)-abs(p.y) ) +(-abs(p.x)+abs(p.y) ) ) ) \n             )-30.5;\n\n\tp.x = max(60.0, abs(p.x)+20. );\n    p.x= abs(p.x-.0750*p.y)+.1251*p.z+.15*p.y;\n\n    p.yz *= mat2(cos(t*.25-p.z*.061+cos(-t*.25+p.z*.061+sin(t*1.+p.z*.1) )), sin(t*.25-p.z*.061+cos(-t*.25+p.z*.061+sin(t*1.+p.z*.1) )), -sin(t*.25-p.z*.061+cos(-t*.25+p.z*.061+sin(t*1.+p.z*.1) )), cos(t*.25-p.z*.061+cos(-t*.25+p.z*.061+sin(t*1.+p.z*.1) )) );\n\n    mind += sdTorus(p, vec2(5., 1.75) );\n    return(mind);\n}\n\nvoid rotate(inout vec2 v, float angle)\n{\n\tv = vec2(cos(angle)*v.x+sin(angle)*v.y,-sin(angle)*v.x+cos(angle)*v.y);\n}\n\nvec2\tmarch(vec3 pos, vec3 dir)\n{\n    vec2\tdist = vec2(0.0);\n    vec3\tp = vec3(0.0);\n    vec2\ts = vec2(0.0);\n\tvec3\tdirr;\n\n    for (int i = -1; i < I_MAX; ++i)\n    {\n        dirr = dir;\n        #ifdef WOBBLY\n        rotate(dirr.xz, sin(t*2.+dist.y*.07)*.07);\n        rotate(dirr.zy, sin(t*3.+dist.y*.07)*.07);\n        #endif\n        rotate(dirr.xy, (t+dist.y*.007) );\n    \tp = pos + dirr * dist.y;\n        dist.x = scene(p);\n        dist.y += dist.x;\n        h += evaluateLight(p);\n        if (dist.x < E)\n           break;\n        s.x++;\n    }\n    s.y = dist.y;\n    return (s);\n}\n\nfloat sdTorus( vec3 p, vec2 t )\n{\n\tvec2 q = vec2(length(p.xy)-t.x,p.z);\n\n    return length(q)-t.y;\n}\n\nvec3\tcamera(vec2 uv)\n{\n    float   fov = 1.;\n\tvec3    forw  = vec3(0.0, 0.0, -1.0);\n\tvec3    right = vec3(1.0, 0.0, 0.0);\n\tvec3    up    = vec3(0.0, 1.0, 0.0);\n\n    return (normalize((uv.x) * right + (uv.y) * up + fov * forw));\n}\n","name":"Image","description":"","type":"image"}]}