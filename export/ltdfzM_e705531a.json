{"ver":"0.1","info":{"id":"ltdfzM","date":"1539115685","viewed":270,"name":"Flowing neon lines","username":"Deadtotem","description":"Trying to figure out how canvas and length command works, happy with the final approach. ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["colors","lines","flow","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\t\t\tvec3 c;\n\t\t\t\tfloat time = iTime;\n\t\t\t\tfloat l;\n    \t\t\tvec2 res = iResolution.xy;\n\n    \t\t    vec3 color = 0.5 + 0.5*cos(time+vec3(2,4,4));\n    \n\t\t\t\tfor (int i=0;i<10;i++){\n\t\t\t\t\t \n                    \n\t\t\t\t\t\n\t\t\t\t\tvec2 uv;\n                    vec2 canvas = fragCoord.xy/res;\n\t\t\t\t\tcanvas.x *=res.x/res.y; \n                    \n\t\t\t\t\ttime+=0.175;\n\t\t\t\t\tl= length(canvas);\n                    l*=.22;\n\t\t\t\t\tuv+=canvas/l*(sin(time)+1.75)*abs(cos(l*19.-time*.17));\n                    \n                    c+=(.00175/length((mod(uv.x,sin(time*-.8)*1.85)-0.601)));\n\n\t\t\t\t}\n\n    // Output to screen\n    fragColor = vec4( c*color/l,1.);\n}","name":"Image","description":"","type":"image"}]}