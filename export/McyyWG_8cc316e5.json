{"ver":"0.1","info":{"id":"McyyWG","date":"1732300025","viewed":87,"name":"circuit way","username":"nayk","description":"source originals  https://www.shadertoy.com/view/7sX3WN","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal","circuit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float st=.025, maxdist=15.;\nvec3 ldir=vec3(0.,-1.,-1.),col=vec3(0.);\n\nmat2 rot(float a) {\n\tfloat s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nvec3 fractal(vec2 p) {\n    vec2 pos=p;\n\n    float d, ml=100.;\n    vec2 mc=vec2(100.);\n    p=abs(fract(p*.1)-.5);\n    vec2 c=p;\n    \n    \n    float v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\t\n\tfloat s = 0.0;\n\t\n    for(int i=0;i<15;i++) {\n        d=dot(p,p);\n        p=abs(p+1.)-abs(p-1.)-p;\n        \n    \tp=p*-1.5/clamp(d,0.5,1.)-c;\n        mc=min(mc,abs(p));\n        if (i>2) ml=min(ml*(1.+float(i)*.1),abs(p.y+cos(iTime*1.01)-.5));\n    }\n    mc=max(vec2(0.),1.-mc);\n    mc=normalize(mc)*.8;\n    ml=pow(max(0.,1.-ml),5.);\n    return vec3(mc,d*.4)*ml*(step(0.15*cos(iTime),fract(d*.1+1.5+pos.y*.02)))-ml*.1;\n}\n\nfloat map(vec2 p) {\n \n    vec2 pos=p;\n    float t=iTime;\n    col+=fractal(p);\n    vec2 p2=abs(2.5-fract(p*8.+4.)*cos(iTime));\n\tfloat h=0.;\n\n    p=floor(p*2.+1.);\n    float l=length(p2*p2);\n  \n  \n    p=p*2.+.2345;\n    t*=.5;\n\n    return h*l;\n}\n\nvec3 normal(vec2 p, float td) {\n\tvec2 eps=vec2(0.,.001);\n    return normalize(vec3(map(p+eps.yx)-map(p-eps.yx),2.*eps.y,map(p+eps.xy)-map(p-eps.xy)));\n}\n\nvec2 hit(vec3 p) {\n    float h=map(p.xz);\n    return vec2(step(p.y,h),h);\n}\n\nvec3 bsearch(vec3 from,vec3 dir,float td) {\n    vec3 p;\n    st*=-.5;\n    td+=st;\n    float h2=1.;\n    for (int i=0;i<20;i++) {\n        p=from+td*dir;\n        float h=hit(p).x;\n        if (abs(h-h2)>.001) {\n            st*=-.5;\n\t        h2=h;\n        }\n        td+=st;\n    }\n\treturn p;\n}\n\nvec3 shade(vec3 p,vec3 dir,float h,float td) {\n\n    ldir=normalize(ldir);\n\tcol=vec3(0.);\n    vec3 n=normal(p.xz,td);\n\tcol*=.25;\n    float dif=max(0.,dot(ldir,-n));\n    vec3 ref=reflect(ldir,dir);\n    float spe=pow(max(0.,dot(ref,-n)),8.);\n    return col+(dif*.5+.2+spe*vec3(1.,.8,.5))*.02;\n}\n\n\nvec3 march(vec3 from,vec3 dir) {\n\tvec3 p, col=vec3(0.);\n\n    float td=.5, k=0.;\n    vec2 h;\n    for (int i=0;i<600;i++) {\n    \tp=from+dir*td;\n        h=hit(p);\n        if (h.x>.5||td>maxdist) break;\n        td+=st;\n    }\n    if (h.x>.5) {\n        p=bsearch(from,dir,td);\n    \tcol=shade(p,dir,h.y,td);\n    } else {\n    }\n\tcol=mix(col,2.*vec3(mod(gl_FragCoord.y,4.)*.1),pow(td/maxdist,3.));\n    return col*vec3(0.9,.8,2.);\n}\n\nmat3 lookat(vec3 dir,vec3 up) {\n\tdir=normalize(dir);vec3 rt=normalize(cross(dir,normalize(up)));\n    return mat3(rt,cross(rt,dir),dir);\n}\n\nvec3 path(float t) {\n\treturn vec3(1.,2.,t)*3.5;\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n        vec2 uv2 = (fragCoord-iResolution.xy*.5)/iResolution.y;\n\n    float v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\t\n\tfloat s = 0.0;\n\tfor (int i = 0; i < 90; i++)\n\t{\n\t\tvec3 p = s * vec3(uv2, 0.0);\n\t\t\n\t\tp += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1);\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts  += .035;\n\t}\n\t\n\tfloat len = length(uv);\n\tv1 *= smoothstep(.7, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.9, .0, len);\n\t\n\tvec3 col2 = vec3( v3 * (1.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3;\n\n\t\n\tfloat t=iTime*0.10;\n    vec3 from=path(t);\n    vec3 dir=normalize(vec3(uv,2.7));\n    vec3 adv=path(t+.1)-from;\n    dir=lookat(adv+vec3(0.,-.5-(1.-(t*0.)),0.),vec3(adv.x*.1,1.,0.))*dir;\n    vec3 col=march(from, dir)*2.5;\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}