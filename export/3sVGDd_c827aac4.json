{"ver":"0.1","info":{"id":"3sVGDd","date":"1571386431","viewed":54,"name":"fract vs floor mismatch","username":"Jarazz","description":"i had some problems with a linearly growing step function because i used fract and caused floating point errors\nall the areas that light up are where the floor(x) and x-fract(x) dont match.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["testing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat linearstep(float x){\t\t\t//goes up linearly for 1 unit, then constant for 1 unit, then linear again   /_/_/_\n     x*=.5;\n return min( 2.*x-floor(x), 1.+floor(x)); \n //return min( x+fract(x),x+1.-fract(x)); //this is broken for some reason because fract and GPUs are weird i guess\n}\n\nfloat linearstepTEST(float x){\t\t\t//goes up linearly for 1 unit, then constant for 1 unit, then linear again   /_/_/_\n     x*=.5;\n //return min( 2.*x-floor(x), 1.+floor(x)); \n return min( x+fract(x),x+1.-fract(x)); //this is broken for some reason because fract and GPUs are weird i guess\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = 15.* (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n   if(abs(linearstep(uv.x)-uv.y)<.1) col = vec3(0.);\n    \n   if(abs(linearstep(uv.x)-linearstepTEST(uv.x))<.000001/(iTime)) col = vec3(0.);//shader consistency in a nutshell\n       \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}