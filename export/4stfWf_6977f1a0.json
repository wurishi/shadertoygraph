{"ver":"0.1","info":{"id":"4stfWf","date":"1527159847","viewed":670,"name":"test color raymarching","username":"louis_C","description":"abstract sketch","likes":13,"published":1,"flags":36,"usePreview":0,"tags":["raymarchingabstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sv(vec2 uv){return length(texture(iChannel0,uv).xyz);}    \nvec2 g(vec2 uv,float e){    \n    return vec2(sv(uv+vec2(e,0.))-sv(uv-vec2(e,0.)),sv(uv+vec2(0.,e))-sv(uv-vec2(0.,e)))/e;}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 n = vec3(g(uv,1./iResolution.y),500.0);\n    n=normalize(n);\n    vec3 li =vec3(0.5,0.5,1.);\n    float sha=clamp(dot(n,li),0.,1.0);\n\tfragColor = texture(iChannel0,uv)*vec4(sha);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float sph (vec3 pos,float r){\n return length(pos)-r;  \n}\nfloat rand (vec3 pos){return fract(sin(dot(floor(pos),vec3(72.365,15.34,28.34)))*4265.36+(iTime*0.4));}\nfloat noise (vec3 pos){\n    float a = rand (pos);\n    float b = rand (pos+vec3(1.,0.,0.));\n    float c = rand (pos+vec3(0.,1.,0.));\n    float d = rand (pos+vec3(1.,1.,0.));\n    float e = rand (pos+vec3(0.,0.,1.));\n    float f = rand (pos+vec3(1.,0.,1.));\n    float g = rand (pos+vec3(0.,1.,1.));\n    float h = rand (pos+vec3(1.,1.,1.));\n    vec3 u = smoothstep(0.,1.,fract(pos));\n                   \n    float m1 = mix(mix(a,c,u.y),mix(b,d,u.y),u.x);\n\tfloat m2 = mix(mix(e,g,u.y),mix(f,h,u.y),u.x);\n    return  mix(m1,m2,u.z);\n}\nvec3 rand3 (vec3 pos){return fract(sin(vec3(dot(floor(pos),vec3(12.325,248.365,78.325)), \n                                           dot(floor(pos),vec3(439.251,85.235,42.365)),   \n                                           dot(floor(pos),vec3(58.264,87.265,781.265))))*4587.326);}   \nfloat m  (vec3 pos){\n     float m_dist = 1.;\n    for (int j= -1; j <= 1; j++ ) {\n        for (int i= -1; i <= 1; i++ ) {\n            for (int k= -1; k <= 1; k++ ) {\n            vec3 neighbor = vec3(float(k),float(i),float(j));\n            vec3 offset = rand3(pos + neighbor);\n            offset = 0.5 + 0.5*sin(iTime*4. + 6.2831*offset);\n            vec3 po = neighbor + offset - fract(pos);\n            float dist = length(po);\n            m_dist = min(m_dist, m_dist*dist);\n        }\n    }\n    }\n    return m_dist;}\nvec4 scene (vec3 pos){\n    float a1 = distance(vec3(0.,0.,0.),\n                        vec3((noise(pos*mix(0.2,2.,noise(pos+vec3(58.36,21.365,128.32)))))))\n        -0.3;\n    float a2 = distance(vec3(0.,0.,0.),\n                        vec3((noise(pos*mix(0.2,2.,noise(pos+vec3(657.32,914.32,11.32)))))))\n        -0.3;\n    float a3 = min(a1,a2);\n    float a4 = distance(vec3(0.), vec3(m(pos)))-mix(0.,mix(0.,0.3,noise(pos*0.2)),\n                                                    noise(pos*4.+vec3(26.32,99.35,785.3)));\n    float a5 = distance(vec3(0.), vec3(m(pos+vec3(12.326,654.32,98.32))))-mix(0.,mix(0.,0.2,noise(pos*0.2)),\n                                                    noise(pos*4.+vec3(2657.32,94.32,17.32)));\n    float a7 = min(a4,a5);\n    float a6 = min(a7,a3);\n    float b2 =sph(pos,4.);\n    float b3 = max(a6,-b2);\n    vec3 mask = vec3(step(a1,a2),smoothstep(0.,1.,a5),step(a3,a7));\n    vec4 resu = vec4(mask,b3);\n    return resu;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    vec2 uv =1.-2.* fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    vec3 ray = normalize(vec3(uv,1.));\n    vec3 pos = vec3(0.);\n    for (int i=0;i<10;i++){\n        float dist = scene(pos).w;\n        if (dist<0.01){\n            break; }\n        pos += ray*dist;\n    }\n    vec3 col1 = mix(vec3(1.,1.,0.),vec3(0.,1.,1.),scene(pos).x);\n    vec3 col2 =  mix(mix(vec3(0.,0.,1.),vec3(0.,0.,0.),step(0.5,sin(scene(pos).y*10.)*0.5+0.5)),\n                     col1,scene(pos).z);\n\tvec3 col3 = mix(col2,1.-col2,smoothstep(0.09,0.1,scene(pos).w));\n    vec3 col4 = mix(vec3(1.,0.,0.),col3,clamp((col3.x+col3.y+col3.z),0.,1.));\n    fragColor = vec4(col4,1.);\n}","name":"Buf A","description":"","type":"buffer"}]}