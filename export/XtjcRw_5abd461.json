{"ver":"0.1","info":{"id":"XtjcRw","date":"1507923438","viewed":436,"name":"warp effect","username":"unnick","description":"a simple shader i wrote.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float amplitude = 0.1;\n\nvec2 shift(vec2 pos){\n    return vec2(0.0, sin((pos.x * 2.0 - 1.0) * 6.283 * (abs(sin(iTime)) * 8.0)) / 32.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 pos = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, pos + shift(pos));\n}","name":"Image","description":"","type":"image"}]}