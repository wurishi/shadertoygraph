{"ver":"0.1","info":{"id":"McjXR1","date":"1706049385","viewed":181,"name":"rudimenatry sphere","username":"NotSoGreeeen","description":"A new coder's attempts to learn how functions interact, thought this looked pretty cool and wanted to share it.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["newbie","sphere","shadertoy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Center the uv coordinates.                    v---- Makes the screen a proper square, taking into account for which axis is larger\n    vec2 uv = (2. * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // Add in a couple spheres to make it look \"shaded\"\n    uv += vec2(smoothstep(1., .5, length(uv)), smoothstep(.5, 1., length(uv)));\n\n    // Map out shading, change out the xyy for any combination of x's and y's\n    vec3 col = vec3(uv.xyy);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n} ","name":"Image","description":"","type":"image"}]}