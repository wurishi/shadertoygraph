{"ver":"0.1","info":{"id":"DtGXDw","date":"1686124319","viewed":223,"name":"Trippy neon patterns","username":"charlieamer","description":"Trippy fractal patterns.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["2d","fractal","patterns","trippy","screensaver","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t )\n{\n    vec3 a = vec3(0.878, 0.268, 0.658);\n    vec3 b = vec3(0.916, 0.609, 0.456);\n    vec3 c = vec3(0.497, 0.497, 0.379);\n    vec3 d = vec3(2.406, 2.346, 0.036);\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5f;\n    uv *= 2.0f;\n    uv.x *= iResolution.x / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 t = vec3(0.0f);\n    \n    for (float i=1.0f; i<=3.0f; i++) {\n        uv = vec2(fract(uv));\n        uv -= 0.5f;\n        uv *= -0.5f + (length(uv0) + sin(iTime * 0.7) + cos(iTime * 0.56) + 0.5f);\n        vec3 color = palette(length(uv * i * 0.3) + length(uv0) + iTime * 0.3f + i*0.4f);\n        float d = abs(sin(length(uv * i * 0.7) * i + length(uv0) * 0.3f + iTime * 0.5f));\n        d = pow(0.2 / d, 1.2f);\n        d *= smoothstep(0.9f, 3.0f, i);\n        d *= smoothstep(1.0f, 2.0f, 2.0f - length(uv0));\n        t += color * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(vec3(t), 1.0);\n}","name":"Image","description":"","type":"image"}]}