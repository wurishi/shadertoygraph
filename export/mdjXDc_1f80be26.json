{"ver":"0.1","info":{"id":"mdjXDc","date":"1671043812","viewed":183,"name":"Shifting Shader Fractal Fun","username":"trafficone","description":"Every once in a while I get the \"Mandelbrot Set\" by Jonathan Coulton stuck in my head and I get the desire to write an implementation.\nThis one shifts the constant *c* over time to create swirling patterns.\n\nThis one is my favorite so far! Enjoy!","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","fractal","colorful","juliaset","mandlebrotset","joco"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#define cx_mul(a,b) mat2(a,-a.y,a.x) * b\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord/iResolution.xy;\n    vec2 z = 2.* ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n  vec2 c = 0.36+0.02*vec2(sin(0.35*iTime),\n  \tcos(0.13*iTime));\n  for (int i=0;i<80;i++) {\n  \tz = cx_mul(z,z) + c;\n  }\n  vec3 color = fract(vec3(z.x/100.0,z.y,length(z)));\n  \n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}