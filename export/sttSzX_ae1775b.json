{"ver":"0.1","info":{"id":"sttSzX","date":"1639607648","viewed":94,"name":"Stitching Pattern","username":"t3knomanser","description":"A simple shader-based implementation of Hitomezashi Stitch Patterns, inspired by this video: https://www.youtube.com/watch?v=JbfhzlMk2eY\n\nClick and drag to alter the pattern.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["generative","fabric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f = 32.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 mouseUV = iMouse.xy/iResolution.y;\n    \n    float xpos = fract(mouseUV.x) * pow(10.,8.);\n    float ypos = fract(mouseUV.y) * pow(10.,8.);\n\n    vec3 col = vec3(0, 0, 0);\n    int bit = int(trunc(uv.x * f * 2.));\n    uint v = (uint(xpos) >> bit) & 1U;\n    if (fract(uv.x * f*2.) < 0.1 && sin(uv.y * f * 2. * 3.14 + float(v) * 3.14) > 0.0) {\n      col = vec3(1, 1, 1);\n    }\n    \n    bit = int(trunc(uv.y * f * 2.));\n    v = (uint(ypos) >> bit) & 1U;\n    if (fract(uv.y * f*2.) < 0.1 && sin(uv.x * f * 2. * 3.14 + float(v) * 3.14) > 0.0) {\n      col = vec3(1, 1, 1);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}