{"ver":"0.1","info":{"id":"Wl2XRz","date":"1564829016","viewed":87,"name":"rounded pentagone","username":"xigh","description":"2d experiments... should be self explained...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle","rounded","pentagone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 p,float a) \n{\n\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\n}\n\nconst float pi = 3.1415;\nconst float tau = pi * 2.0;\n\n// https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat rand2(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nvec3 rgb(int r, int g, int b)\n{\n    return vec3(float(r)/256.0, float(g)/256.0, float(b)/256.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;    \n    \n    vec3 col1 = 2.0*rgb(52, 20, 5);\n    vec3 col2 = 2.0*rgb(3, 3, 50);\n    // vec3 col3 = 2.0*rgb(1, 1, 24);\n    \n    float speed = 0.6;\n\n    uv = rotate(uv, iTime*speed);\n    \n    float radius = .5;\n    float size = 0.06;\n    \n    float angle = atan(uv.y, uv.x);\n    \n    uint count = 5u;\n    \n    float disp = sin(angle*float(count));\n    \n    float dist = length(uv) + disp / 48.0;\n    \n    float sigma = abs(dist-radius);\n    \n    float tor = smoothstep(size, size+0.01, sigma);\n    vec3 col = mix(col2, col1, tor);\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}