{"ver":"0.1","info":{"id":"XsdfRH","date":"1524070704","viewed":169,"name":"Induced Contrast Asynchrony","username":"fjavifabre","description":"Changing the background produces the effect that the circles are blinking asynchronously, although they are synchronized","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["illusion","perception"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define AVOID_DISTORSIONS 1\n\n#define PI 3.14159265359\n\nfloat circle( vec2 p, vec2 c, float radius) \n{\n    \n    return sqrt(pow(p.x-c.x, 2.) + pow(p.y-c.y, 2.)) - radius;\n        \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n#if AVOID_DISTORSIONS\n    vec2 uv = fragCoord/iResolution.y;\n   \tuv.x += (iResolution.y - iResolution.x) \n        / max(iResolution.x,iResolution.y) ;\n#else    \n    vec2 uv = fragCoord/iResolution.xy;\n#endif    \n\n    float c0 = circle(uv, vec2(.15, .5), 0.2);\n    float c1 = circle(uv, vec2(.85, .5), 0.2);\n    \n    float h = abs(mod(iTime * .1+ 10.2 , 1.)*2. - 1.);\n    \n    if(iMouse.z > 0.)\n        h = iMouse.y / iResolution.y;\n\n    vec3 circleColor = vec3(abs(mod(iTime, 1.)*2. - 1.)) * 0.6;\n    \n    if(c0 <=0. || c1 <= 0.)\n        fragColor = vec4(circleColor, 1.);\n    else if(uv.y < h)\n        fragColor = vec4((uv.x > 0.5) ? .6 : 0.);\n    \n    else\n        fragColor = vec4(1.);\n}","name":"Image","description":"","type":"image"}]}