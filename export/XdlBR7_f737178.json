{"ver":"0.1","info":{"id":"XdlBR7","date":"1495392504","viewed":116,"name":"Fractal Julia","username":"Benou_De_Nice","description":"source main code: https://en.wikibooks.org/wiki/Fractals/shadertoy\n\nClic = change fractal's center\n\nlink codepen: https://codepen.io/Benou_De_Nice/full/QvJBzW/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractaljulia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITER 500\n#define COLOR 1\n\nvec2 center = vec2(-0.72256,0.74486);\n\nfloat er2 = 8.0; // er= er*er escape radius\n\nvec2 complex_square( vec2 v ) {\n\treturn vec2(\n\t\tv.x * v.x - v.y * v.y,\n\t\tv.x * v.y * 2.0\n\t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\t\n\t// compute coordinate \n\tvec2 z = fragCoord.xy - iResolution.xy * 0.5;\n\n\n\t//translate\n\t//z.xy += (iMouse.xy+iResolution.xy*0.5)*vec2(1, -1);\n\t\n    //scale\n    float uFloatScale = 0.223;\n\tz /= uFloatScale*500.0;\n\t\n\t\n\tint count = 0;\n\n    vec2 mouse = vec2(iMouse.xy/iResolution.xy);\n\t//center effect anim\n    center = vec2(mouse.x,mouse.y);\n\tcenter.x += sin(iTime*0.4312)*0.5;\n    center.y += sin(iTime*0.2124)*0.5;\n\t\n    // iterations \n\tfor ( int i = 0 ; i < ITER; i++ ) {\n\t\tz = vec2(center + complex_square( z.xy ));\n\t\t//z = uVec2center + complex_square(z);\n\t\tcount = i;\n        //if ( dot(z,z) > er2 ) {  break; }\n\t\tif ( dot(z.xy,z.xy) > er2 ) {  break; }\n\t}\n\t\n    // color \n    if (count == (ITER-1)) {\n\t\t// filled-in Julia set color cyan\n\t\tfragColor = vec4(0.0,1.0,1.0,1.0);\n\t}else{\n\t\t// exterior\n\t\t\n        //color1\n        if(COLOR == 1){\n            vec3 f = fract(.5 + .5*cos( vec3(3,4,11) + .05*(float(count) - log2(log2(dot(z,z)))) ) );\n            fragColor.r = texture(iChannel0, vec2(f.x, 0.0)).r;\n            fragColor.g = texture(iChannel0, vec2(f.y, 0.0)).r;\n            fragColor.b = texture(iChannel0, vec2(f.z, 0.0)).r;\n        }else{\n           //color 2\n            vec3 f = fract(.5 + .5*cos( vec3(1,11,11) + .05*(float(count) - log2(log2(dot(z,z)))) ) );\n            fragColor.r = texture(iChannel0, vec2(f.x, 0.0)).r;\n            fragColor.g = texture(iChannel0, vec2(f.y, 0.0)).r;\n            fragColor.b = texture(iChannel0, vec2(f.z, 0.0)).r; \n        }\n\t\t\n\t\tfragColor.a = 1.0;\n\t}\n\t\n}","name":"Image","description":"","type":"image"}]}