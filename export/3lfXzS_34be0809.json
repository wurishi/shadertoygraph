{"ver":"0.1","info":{"id":"3lfXzS","date":"1563379012","viewed":68,"name":"RayMarchingBand002","username":"Hirai_worthless","description":"002","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n    p.xz *= mat2(cos(iTime),-sin(iTime)\n             ,sin(iTime),cos(iTime));\n\tfloat center = length(p) -1.0;\n    float left = length(p.yz - vec2(0.5,0)) - 0.5;\n    float right = length(p.yz - vec2(-0.5,0)) - 0.5;\n    float front = length(p.xy - vec2(0.5,0)) - 0.5;\n    float back = length(p.xy - vec2(-0.5,0)) - 0.5;\n    float mask = min(min(left,right),min(front,back));\n    return max(-mask,center);\n\n\n}\n\nfloat trace (vec3 o, vec3 r){\n\tfloat t = 0.0;\n    for(int i = 0; i < 32; ++i){\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.5;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float PI = 3.14159265;\n    vec2 uv = fragCoord.xy /iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv,1.0));\n    \n    vec3 o = vec3(0,0,-2.0);\n    float t = trace(o,r);\n    float fog = 1.0 / (1.0 + t * t * 0.2);\n    vec3 fc = vec3(fog);\n\n    // Output to screen\n    fragColor = vec4(fc,1.0);\n}","name":"Image","description":"","type":"image"}]}