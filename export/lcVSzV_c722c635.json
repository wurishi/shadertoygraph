{"ver":"0.1","info":{"id":"lcVSzV","date":"1715492518","viewed":171,"name":"4 styles of tailing","username":"rockhard","description":"tailing effect is widly used in game effects.this simplifyed version of frame is suitable for lots of situation and easy to port","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["shine","frame","tailing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rot(vec2 v,float r){\n float c=cos(r),s=sin(r); return vec2(v.x*c+v.y*s,-v.x*s+v.y*c);\n}\nfloat hash(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43.5453);\n}\n \nfloat noise( vec2 p ){  \n    vec2 i = floor(p),f = fract(p);\n\tvec2 u = f*f*(3.0-2.0*f);\n    return mix(mix(hash(i), \n                hash(vec2(i.x+1.0,i.y)), u.x),\n                mix(hash(vec2(i.x,i.y+1.0)), \n                hash(vec2(i.x+1.0,i.y+1.0) ),u.x), u.y)-0.5;\n}\n\nfloat fbm(vec2 uv)\n{   uv*=40.0;\n    float n =noise(uv)*0.5;\n    n +=noise(uv*2.0)*0.25;\n    n +=noise(uv*3.0)*0.125;\n\treturn n +0.5;\n}\n//https://www.shadertoy.com/view/4tXXRn\n// -----------------------------------------------\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 iColor=vec3(1.0,0.6,0.0);\n    if(uv.x>0.25) iColor = vec3(0.0,1.0,2.0);\n    if(uv.x>0.5) iColor = vec3(0.2,1.0,0.0);\n    if(uv.x>0.75) iColor = vec3(1.0,1.0,1.0);\n    \n    uv.x=mod(uv.x*4.0,1.0);//for 4 style demo only\n    vec2 _uv = uv;\n    uv -= 0.5;      \n   \n    vec2 offset = vec2(0.0, -iTime * 0.2);\n    \n    // flame turbulence\n    float f = fbm(uv * 0.2 + offset);\n    float l = max(0.1, length(uv)); \n    // rotation amount normalized over distance\n\tuv +=rot(uv,((f - 0.5) / l) * smoothstep(-0.2, .4, _uv.y) * 0.4);    \n    \n    // flame thickness\n    float flame =1.4 - length(uv.x);\n      \n    // flame\n    flame *=(0.96-_uv.y);//try 0.8-uv.y or smaller value to shorten the tail\n\tflame = clamp(flame, 0.0, 1.0);\n    flame *= flame;\n    flame /= smoothstep(1.0, -0.02, _uv.y);    \n\t\n    // colors\n    vec3 col = iColor*flame;\n    col.yz *= smoothstep(0.0, 1.6, flame);//single color is borning\n    \n    // clear bg outside of the flame\n    col *= flame;\n      \n    fragColor = vec4(sqrt(col),1.0);    \n}\n","name":"Image","description":"","type":"image"}]}