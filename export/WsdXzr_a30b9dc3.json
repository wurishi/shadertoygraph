{"ver":"0.1","info":{"id":"WsdXzr","date":"1571336832","viewed":227,"name":"Vortex in a wave function","username":"michael0884","description":"Explaining wyatt why you can have vortices even though the velocity is the gradient of the phase\nAt the discontinuities the gradient is infinite, but we take the 2*pi periodicity into account, so we can make the gradient continuous - and it is a vortex!\n\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["schrodinger"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float phase(vec2 pos)\n{\n    //number of windings, essentially the velocity\n    float n = 5.; //necessarily integer for the wave function to be continuous, thus vorticity is quantized\n\treturn n*( 0.5*iTime + atan(pos.x, pos.y));\n}\n\nvec2 vortex_psi(vec2 pos)\n{   \n    //it is zero at pos = 0, so it is continuos, even if atan(pos.x, pos.y) aka the phase is not\n    return 0.5*length(pos)*vec2(sin(phase(pos)), cos(phase(pos)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    if(mod(iTime,4.) < 2.)\n    {\n        //the wave function\n        vec2 psi = vortex_psi(4.*(uv - vec2(0.5)));\n\n        vec2 red = vec2(1,0), green = vec2(-0.5,sqrt(3.)*0.5), blue = vec2(-0.5,-sqrt(3.)*0.5);\n\n        vec3 RGB =  (0.5 + vec3(dot(psi, red),dot(psi, green),dot(psi, blue)))/1.5;\n        // Output to screen\n        fragColor = vec4(RGB*pow(abs(RGB),vec3(0.2)),1.0);\n    }\n    else\n    {\n         //the phase\n         float phase = mod(phase(4.*(uv - vec2(0.5))),2.*3.14159); //it is periodic\n          // Output to screen\n         fragColor = vec4(vec3(phase)/(2.*3.14159),1.0);\n    }\n   \n}","name":"Image","description":"","type":"image"}]}