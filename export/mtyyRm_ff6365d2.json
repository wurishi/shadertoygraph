{"ver":"0.1","info":{"id":"mtyyRm","date":"1700044026","viewed":33,"name":"SobelShader","username":"Altdelo","description":"Sobel Shader Exercise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sobel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Convert color to grayscale\nfloat sobelSample(vec2 uv, vec2 offset)\n{\n    vec3 color = texture(iChannel1, uv + offset).xyz;\n    \n    float lum = dot(color, vec3(0.299, 0.587, 0.114));\n    \n    return lum;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 stepSize = 1.0/iResolution.xy;\n    \n    //Kernal calc X\n    float xlt = -1.0 * sobelSample(uv, vec2(-stepSize.x , stepSize.y));\n    float xlc = -2.0 * sobelSample(uv, vec2(-stepSize.x , 0.0));\n    float xlb = -1.0 * sobelSample(uv, vec2(-stepSize.x , -stepSize.y));\n    \n    float xrt =1.0 * sobelSample(uv, vec2(stepSize.x , stepSize.y));\n    float xrc = 2.0 * sobelSample(uv, vec2(stepSize.x , 0.0));\n    float xrb = 1.0 * sobelSample(uv, vec2(stepSize.x , -stepSize.y));\n    \n    //Kernal calc Y\n    float ylt = -1.0 * sobelSample(uv, vec2(-stepSize.x , stepSize.y));\n    float ymt = -2.0 * sobelSample(uv, vec2(0.0, stepSize.y));\n    float yrt = -1.0 * sobelSample(uv, vec2(-stepSize.x , stepSize.y));\n    \n    float ylb =1.0 * sobelSample(uv, vec2(-stepSize.x , -stepSize.y));\n    float ymb = 2.0 * sobelSample(uv, vec2(0.0, -stepSize.y));\n    float yrb = 1.0 * sobelSample(uv, vec2(stepSize.x , -stepSize.y));\n    \n    float xSum = xlt + xlc + xlb + xrt + xrc + xrb;\n    float ySum = ylt + ymt + yrt + ylb + ymb + yrb;\n    \n    //Manitude sub int to remove artifacts\n    float magnitude = max(0.0, sqrt((xSum * xSum) + (ySum* ySum)) - 0.45);\n    \n    // Output to screen\n    fragColor = vec4(magnitude, magnitude, magnitude, 1.0);\n}","name":"Image","description":"","type":"image"}]}