{"ver":"0.1","info":{"id":"sdfcDj","date":"1642698200","viewed":87,"name":"Kochcurve (variable angles)","username":"Rxphi","description":"Play around with different abstractions of the Kochcurve","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["kochcurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle){\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    uv *= 1.3;\n    int recursionDepth = 5;\n    \n    vec3 col = vec3(0);\n    \n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*3.1415)*.5;\n    \n    vec2 n = N((5./6.)*3.1415);\n    \n    float d = dot(uv-vec2(.5, 0.), n);\n    uv -= n*max(0., d)*2.; \n    \n    //col += smoothstep(.01, .0, abs(d));\n    \n    //n = N((2./3.)*3.1415);\n    //n = N(iTime*.5);\n    n = N(mouse.y*3.1415);\n    \n    uv.x += .5;\n    \n    for(int i=0; i < recursionDepth; i++){\n        uv *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= 0.5;\n        uv -= n*min(0., dot(uv, n))*2.; \n\n    }\n\n    float scale = pow(3., float(recursionDepth));\n    d = length(uv-vec2(clamp(uv.x, -1., 1.), 0));\n    uv /= scale;\n    col += smoothstep(1./iResolution.y, .0, d/scale);\n    \n    \n    //col += texture(iChannel0, uv*2.-iTime*.03).rgb;\n    \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}