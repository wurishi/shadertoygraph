{"ver":"0.1","info":{"id":"fsjGDD","date":"1617442823","viewed":241,"name":"Revision 2021 Friday ShaderJam","username":"eimink","description":"Shadertoy version of my creation I did during Revision 2021 Friday Shader Jam. Huge shoutout to rimina whose shader royale code is the base for this!","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["fft","sdf","revision","shaderjam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int STEPS = 64;\nconst float E = 0.0001;\nconst float FAR = 40.0;\n \nvec3 glow = vec3(0);\nfloat fft1 = 0.;\nfloat fftx = 0.;\n \nvoid rot(inout vec2 p, float a) {\n  p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n \nfloat sphere (vec3 p, float s)\n{\n  return length(p)-s;\n}\n \nfloat box(vec3 p, vec3 r)\n{\n  vec3 d = abs(p) - r;\n  return length(max(d,0.) + min(max(d.x, max(d.y,d.z)),0.0));\n}\n\nfloat tun2(vec3 p){\n    vec3 pp = p;\n    vec3 t = vec3(2.) - abs(vec3(length(pp.xz),length(p.xy),1.0));\n    return max(t.x,t.y)+.1;\n    return min(max(t.x,t.y),0.0);\n}\n\nfloat scene(vec3 p)\n{\n  vec3 pp = p;\n  float m = fft1*5.;\n  float ms = fft1*.1;\n  for (int i = 0; i < 5; ++i)\n  {\n    pp = abs(pp) - vec3(1.,4.,5.);\n    rot(pp.xy, iTime+fftx*.5);\n    rot(pp.yz, iTime*0.1+fftx*.1);\n  }\n  float a = box(pp, vec3(1.,.4,4.));\n  float b = sphere(pp, m);\n  rot(pp.xz,iTime);\n  float c = box(pp, vec3(6.,8.,12.));\n  rot(p.xz,m);\n  rot(p.xy,iTime+ms);\n  float d = abs(box(p,vec3(3.+sin(m*4.),.5,.5)));\n  float e = abs(box(p,vec3(1.5,.5,3.+cos(ms))));\n  float f = abs(box(p,vec3(1.5,3.+sin(m)+tan(ms*2.),.5)));\n  float h = min(tun2(pp),.7);\n  float g = max(h,min(f,min(d,e)));\n  glow += vec3(.8,.4,.2)*0.025/(0.09+abs(a));\n  glow += vec3(.4,.8,.1)*0.01/(0.9+abs(c));\n  glow += vec3(.1,.2,.8)*0.1/(0.01+abs(g+h));\n  return max(g,min(c,min(a,b)));\n}\n \nvec3 march (vec3 ro, vec3 rd)\n{\n  vec3 p = ro;\n  float t = E;\n  vec3 col = vec3(0);\n  for (int i = 0; i < STEPS; ++i) {\n    float d = scene(p);\n    t += d;\n    if ( d < E || t > FAR) {\n      break;\n    }\n    p += rd*d;\n  }\n  if (t < FAR)\n  {\n    col = normalize(p)*vec3(.2,.2,.6)*.9;\n  }\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n    vec2 q = -1.0+2.0*uv;\n  q.x *= iResolution.x/iResolution.y;\n \n  int tx = int(abs(uv.x*512.0));\n  fft1 = texelFetch( iChannel0, ivec2(85,0), 0 ).x; \n  fftx = texelFetch( iChannel0, ivec2(tx,0), 0 ).x; \n \n  vec3 cp = vec3(0.,0.,10.);\n  vec3 ct = vec3(0.,0.,0.);\n   \n  vec3 cf = normalize(ct-cp);\n  vec3 cr = normalize(cross(vec3(0.,1.,0.),cf));\n  vec3 cu = normalize(cross(cf,cr));\n  vec3 rd = normalize(mat3(cr,cu,cf)*vec3(q,radians(60.0)));\n  rot(cp.xy,iTime);\n  vec3 c = march(cp,rd);\n  c += glow;\n     \n  fragColor = vec4(c,1);\n\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 bufB = texelFetch(iChannel1,ivec2(fragCoord),0);\n    vec4 bufA = texelFetch(iChannel0,ivec2(fragCoord),0);\n    fragColor = mix(bufB,bufA,0.125);\n}","name":"Buffer B","description":"","type":"buffer"}]}