{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float rand(vec2 n) {\n\t// we use a smaller constant than the usual 43758.5453, because otherwise \n\t// the function returns 0 most of the time on some shaders\n\treturn fract(sin(dot(30.0*n, vec2(12.9898, 4.1414))) * 137.585453);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 pos = vec2(fragCoord.x/iResolution.x,fragCoord.y/iResolution.y);\n\tfloat height = 0.5 +\n\t\t\t0.25*sin(7.0*pos.x+1.0*iTime)\n\t\t\t+0.02*sin(67.4*pos.x+0.82*iTime)\n\t\t\t+0.015*sin(91.4*pos.x-0.93*iTime);\n\tif (pos.y < height) {\n\t\tfloat relposx = pos.x + 0.3*(pos.y - height);\n\t\tfloat depth = height - pos.y;\n\t\tif (depth < 0.03) {\n\t\t\tfloat dist = 0.2 + 500000.0*depth*depth*depth + 0.5*rand(pos);\n\t\t\t//if (dist>0.5) dist *= 5.0;\n\t\t\t//if (dist>5.0) dist *= 5.0;\n\t\t\t// derivative of height function\n\t\t\t//  sin(w*x)  =>  w*cos(w*x)\n\t\t\tfloat slope = 0.3 + \n\t\t\t\t0.25*7.0*cos(7.0*relposx+1.0*iTime)\n\t\t\t\t+0.02*67.4*cos(67.4*relposx+0.82*iTime)\n\t\t\t\t+0.015*91.4*cos(91.4*relposx-0.93*iTime);\n\t\t\tif (slope<0.0) slope=0.0;\n\t\t\tfragColor = vec4(\n\t\t\t\t0.1+0.08*slope/dist + 0.3*pos.y,\n\t\t\t\t0.1+0.08*slope/dist + 0.3*pos.y,\n\t\t\t\t1.0,1.0);\n\t\t} else {\n\t\t\tfragColor = vec4(\n\t\t\t\t0.1 + 0.3*pos.y,\n\t\t\t\t0.1 + 0.3*pos.y,\n\t\t\t\t1.0,1.0);\n\t\t}\n\t} else {\n\t\tfragColor = vec4(0.8-0.3*pos.y,0.8-0.3*pos.y,1.0,1.0);\n\t}\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldfSWn","date":"1398954206","viewed":192,"name":"Waves1","username":"borisvanschooten","description":"waves for my game\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["wavesformygame"],"hasliked":0,"parentid":"","parentname":""}}