{"ver":"0.1","info":{"id":"wsSBWt","date":"1591091660","viewed":293,"name":"dancing messy circle-goo","username":"thefox231","description":"not sure where i was going with this. still looks neat","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["2d","goo","geometry","liquid","noisy","messy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.1415\n\nfloat inOutSine(float t) {\n  float b = 0.0;\n  float c = 1.0;\n  float d = 1.0;\n  return (-c / 2.0 * (cos(pi * t / d) - 1.0) + b);\n}\n\nfloat sum(vec2 vec) {return vec.x + vec.y;}\n\nfloat noise(float time, int seed) {\n    float convertRate = mod(time, 1.0);\n    \n    float noise1 = texture(iChannel0, vec2(floor(time) / 900.0 + float(seed), float(seed)))[seed % 3];\n    float noise2 = texture(iChannel0, vec2(ceil(time) / 900.0 + float(seed), float(seed)))[seed % 3];\n    \n    return noise2 * inOutSine(convertRate) + noise1 * (1.0 - inOutSine(convertRate));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float circDistance = length(\n        uv - vec2(\n            (noise(uv.x * 19.0 + iTime * 7.0, 1) * 1.0),\n        \t(noise(uv.x * 19.0 + iTime * 4.0, 1) * 1.5)\n        )) - 0.1;\n    \n    //vec4 col = vec4(vec3(sum(abs(uv - vec2(0.5))) * 0.1 + 0.1), 1.0);\n    vec4 col = texture(iChannel1, uv);  \n    \n    if (circDistance <= 0.4) {\n    \tcol = vec4(noise(iTime + uv.y * 2.0, 66), noise(iTime + uv.x + 90.0, 2), noise(iTime + uv.x + uv.y * 3.0 + 12.0, 12), 1.0);\n    }\n    if (circDistance > 0.4) {\n        col -= 0.1 - (circDistance * 0.1);\n    }\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}