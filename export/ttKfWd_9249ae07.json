{"ver":"0.1","info":{"id":"ttKfWd","date":"1617544440","viewed":115,"name":"Sinmix 2D SDF","username":"slerpy","description":"Here is the official SDF for the Sinmix logo!\n\nComment in the longer return for an exact version\n\nVisualizer adapted from blackles code","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","logo","sinmix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n\nfloat sinmix(vec2 p) {\n    float l=length(p),s=sqrt(.5),r=.25+.5*s-l;\n    mat2 m=mat2(s,s,-s,s);p=abs(m*p)*m;\n    //return min(max(max(l-1.,r),length(max(p-vec2(1,0),0.))+min(p.y,0.)),-min(r,p.y));\n    return min(max(max(l-1.,r),p.y),-min(r,p.y));\n}\n\nvec3 shadeDistance(float d) {\n    float dist = d*100.0;\n    float banding = max(sin(dist), 0.0);\n    float strength = sqrt(1.-exp(-abs(d)*3.));\n    float pattern = mix(strength, banding, (0.6-abs(strength-0.5))*0.3);\n    vec3 color = (d > 0.0 ? vec3(1.0,0.6,0.4) : vec3(0.4,0.9,1.0)) * pattern;\n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    const float scale = 1.6;\n    \n    vec2 uv = scale * (2.0 * fragCoord - R.xy) / R.y;\n\n    vec3 col = shadeDistance(sinmix(uv));\n    if (iMouse.z > 0.) {\n        vec2 mouse = scale * (2.0 * iMouse.xy - R.xy) / R.y;\n        float d = distance(mouse, uv) - abs(sinmix(mouse));\n        col *= 0.5 + 0.5 * smoothstep(-2.0, 2.0, R.y * d);\n    }\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}