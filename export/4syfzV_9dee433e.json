{"ver":"0.1","info":{"id":"4syfzV","date":"1529499017","viewed":459,"name":"Cocon","username":"Flopine","description":"It was supposed to be a nice and warm cocoon... And then life... ^^\"","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","beat","underwater","twisted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n// Thanks to wsmind, leon, lsdlive, lamogui, XT95 and Coyhot for teaching me <3\n// Cookie Collective rulz\n\n#define ITER 100.\n#define PI 3.141592\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat smin( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\n// from: https://beta.observablehq.com/@mattdesl/heartbeat-function\nfloat beat (float value, float intensity, float frequency) \n{\n    float v = atan(sin(value * 3.14 * frequency) * intensity);\n    return (v + 3.14 / 2.) / 3.14;\n}\n\nvec2 moda (vec2 p, float per)\n{\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    a = mod(a-per/2.,per)-per/2.;\n    return vec2(cos(a),sin(a))*l;\n}\n\n// iq's palette https://iquilezles.org/articles/palettes\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{\n    return a+b*cos(2.*PI*(c*t+d));\n}\n    \n\nfloat cyl (vec2 p, float r)\n{return length(p)-r;}\n\n\n// iq's formula https://iquilezles.org/articles/distfunctions\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - r;\n}\n\n\nfloat prim1(vec3 p)\n{\n    return sdCapsule(p, vec3(0.,-1.5,0.), vec3(0.,1.5,0.), 1.4+p.y*0.3);\n}\n\nfloat cocoon(vec3 p)\n{\n    \n    vec3 pp = p;\n    p.x += sin(p.y*0.7);\n    p *= 0.4+beat(iTime,.5,2.);\n    float cap = prim1(p);\n    \n    p.xz *= rot(iTime);\n    p.xz *= rot(p.y*0.5);\n    p.xz = moda(p.xz, 2.*PI/3.);\n   \tp.x -= (2.-abs(p.y-1.)*0.3);\n    float branch1 = cyl(p.xz, 0.4);\n    \n    p = pp;\n\n    p.xy *= rot(PI/3.);\n    p.xz *= rot(iTime*0.2);\n    p.xz *= rot(p.y*0.4);\n    p.xz = moda(p.xz, 2.*PI/2.);\n   \tp.x -= (1.+abs(p.y)*0.1);\n    float branch2 = cyl(p.xz, 0.3+abs(p.y)*0.03);\n    \n    p = pp;\n\n    p.xy *= rot(-PI/3.);\n    p.xz *= rot(iTime*0.2);\n    p.xz *= rot(p.y*0.4);\n    p.xz = moda(p.xz, 2.*PI/2.);\n   \tp.x -= (1.+abs(p.y)*0.1);\n    float branch3 = cyl(p.xz, 0.1+abs(p.y)*0.03);\n    \n    return smin(branch3,smin(branch2,smin(cap,branch1,3.), 3.),3.);\n}\n\n\nfloat g = 0.;\n\nvec4 SDF (vec3 p)\n{\n    vec4 d = vec4(cocoon(p),p);\n     // glow from lsdlive, originally from balkhan : https://www.shadertoy.com/view/4t2yW1\n    g += 0.01/(0.01+d.x*d.x);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(fragCoord/iResolution.xy)-1.;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    uv += texture(iChannel1, uv*0.3+iTime*0.1).r *0.08;\n    \n    vec3 ro = vec3(0.001,1.,-6.); vec3 p = ro;\n    vec3 dir = normalize(vec3 (uv,1.));\n    float shad = 0.;\n    vec3 c = vec3(0.);\n    \n    vec3 pal = palette(length(uv),\n                      vec3(0.2),\n                      vec3(0.2),\n                      vec3(-.12),\n                      vec3(0.5,0.,0.2));\n    \n    for (float i = 0.; i<ITER; i++)\n    {\n        float d = SDF(p).x;\n        if(d<0.001)\n        {\n            shad = i / ITER;\n            c = texture(iChannel0, SDF(p).yz*0.2).xyz\n                *vec3(shad)*3.\n                *vec3(length(p.z)*0.8,0.1,0.5) \n                + g*0.008*length(uv)*0.6;\n            break;\n        }\n        else c = pal;\n        p+= d*dir*0.6;\n    }\n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}