{"ver":"0.1","info":{"id":"DdfyDX","date":"1687236007","viewed":60,"name":"Editing Shake ","username":"ScratchDev","description":"Usually this type stuff is seen in tik tok edits I tried to recreate.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["edit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 rectangleSize = vec2(0.35, 0.55);\n\n    float shakeVibration = 0.01;\n    float shakeVibrationDiag = 0.01;\n    float shakeSpeed = 85.0;\n\n    float vibrationDecRate = 3.0;\n    float decreaseVib = shakeVibrationDiag + (vibrationDecRate * iTime + iTime * 300.0);\n    float decreaseVibDiag = shakeVibrationDiag + (vibrationDecRate * iTime + iTime * 300.0);\n\n    vec2 rectanglePos = vec2(sin(sin(-iTime * shakeSpeed) / decreaseVib + 0.5), sin(sin(iTime * shakeSpeed) / decreaseVibDiag + 0.5));\n\n    vec2 rectMin = rectanglePos - rectangleSize * 0.5;\n    vec2 rectMax = rectanglePos + rectangleSize * 0.5;\n\n    if (uv.x > rectMin.x && uv.x < rectMax.x && uv.y > rectMin.y && uv.y < rectMax.y)\n    {\n        // Apply shaking effect to the UV coordinates of the image\n        vec2 shakeUV = uv - rectanglePos;\n        shakeUV = vec2(shakeUV.x * 2.0, shakeUV.y * 1.7);\n        shakeUV += rectanglePos;\n\n        vec3 col;\n        \n        \n        //lighting and shit\n        float colNumR = 4.0;\n        float colNumG = 6.0;\n        float colNumB = 6.0;\n        float cnrDecRate = 11.0;\n        float corDecRate = 11.0;\n        float numR = colNumR - (cnrDecRate * iTime);\n        float numO = colNumG - (cnrDecRate* iTime);\n        numR = max(numR, 1.0);\n        numO = max(numO, 1.0);\n        col.r = texture(iChannel0, shakeUV).x * numO;\n        col.g = texture(iChannel0, shakeUV).y * numO;\n        col.b = texture(iChannel0, shakeUV).z * numO;\n       \n        fragColor = vec4(col, 1.0);\n    }\n    else\n    {\n        fragColor = vec4(0.0, 0.1, 0.3, 0.0);\n    }\n}\n","name":"Image","description":"","type":"image"}]}