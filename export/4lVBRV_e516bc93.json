{"ver":"0.1","info":{"id":"4lVBRV","date":"1543211162","viewed":211,"name":"cube dance","username":"ukeyshima","description":"cube dance","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nfloat random(vec3 p){\n    return fract(sin(dot(p.xyz,vec3(12.9898,0.0,78.233)))*36.253);\n}\nvec3 rotate(vec3 p, float angle, vec3 axis){\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    mat3 m = mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n    return m * p;\n}\nfloat boxDistFunc(vec3 p,float t,vec3 b){\n     vec3 i=vec3(p.x-mod(p.x,20.0),0.0,p.z-mod(p.z,20.0));\n     p.xz=t<5.0?p.xz:t<26.0?(sin(pow(t-5.0,1.2))>0.93?mod(p.xz,20.0)-10.0:p.xz):(length(p.xz)<pow(t-26.0,3.0)?mod(clamp(p.xz,-900.0,900.0),20.0)-10.0:p.xz);\n     p=rotate(p,t*3.0,vec3(1.0,0.3,0.5));\n    return length(max(abs(p)-b,0.0));\n}\nfloat boxDistFunc2(vec3 p,vec3 b,vec3 c){\n    return length(max(abs(p-c)-b,0.0));\n}\nfloat planeDistFunc(vec3 p,float t){\n    p=t<35.0?rotate(p,t,vec3(0.0,1.0,0.0)):p;\n    vec3 i=vec3(p.x-mod(p.x,10.0),0.0,p.z-mod(p.z,10.0));\n    p.xz=mod(clamp(p.xz,-2000.0,2000.0),10.0)-5.0;\n    return boxDistFunc2(p,vec3(4.7),vec3(0.0,-20.0,0.0));   \n}\nfloat distFunc(vec3 p,float t){\n    float obj1,obj2;\n    obj1=planeDistFunc(p,t);\n    obj2=boxDistFunc(p,t,vec3(5.0));\n    float c0,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35,c36,c37,c38,c39,c40,c41,c42,c43,c44;\n    float z=-1450.0;\n    c0=boxDistFunc2(p,vec3(5.0),vec3(-125.0,38.0,z));\n    c1=boxDistFunc2(p,vec3(5.0),vec3(-125.0,24.0,z));\n    c2=boxDistFunc2(p,vec3(5.0),vec3(-120.0,51.0,z));\n    c3=boxDistFunc2(p,vec3(5.0),vec3(-125.0,10.0,z));\n    c4=boxDistFunc2(p,vec3(5.0),vec3(-110.0,56.0,z));\n    c5=boxDistFunc2(p,vec3(5.0),vec3(-110.0,5.0,z));\n    c6=boxDistFunc2(p,vec3(5.0),vec3(-95.0,56.0,z));\n    c7=boxDistFunc2(p,vec3(5.0),vec3(-95.0,5.0,z));\n    c8=boxDistFunc2(p,vec3(5.0),vec3(-80.0,46.0,z));\n    c9=boxDistFunc2(p,vec3(5.0),vec3(-80.0,15.0,z));\n    \n    c10=boxDistFunc2(p,vec3(5.0),vec3(-55.0,57.0,z));\n    c11=boxDistFunc2(p,vec3(5.0),vec3(-55.0,44.0,z));\n    c12=boxDistFunc2(p,vec3(5.0),vec3(-55.0,31.0,z));\n    c13=boxDistFunc2(p,vec3(5.0),vec3(-50.0,18.0,z));\n    c14=boxDistFunc2(p,vec3(5.0),vec3(-40.0,5.0,z));\n    c15=boxDistFunc2(p,vec3(5.0),vec3(-25.0,5.0,z));\n    c16=boxDistFunc2(p,vec3(5.0),vec3(-15.0,18.0,z));\n    c17=boxDistFunc2(p,vec3(5.0),vec3(-10.0,31.0,z));\n    c18=boxDistFunc2(p,vec3(5.0),vec3(-10.0,44.0,z));\n    c19=boxDistFunc2(p,vec3(5.0),vec3(-10.0,57.0,z));\n    \n    c20=boxDistFunc2(p,vec3(5.0),vec3(15.0,57.0,z));\n    c21=boxDistFunc2(p,vec3(5.0),vec3(15.0,44.0,z));\n    c22=boxDistFunc2(p,vec3(5.0),vec3(15.0,31.0,z));\n    c23=boxDistFunc2(p,vec3(5.0),vec3(15.0,18.0,z));\n    c24=boxDistFunc2(p,vec3(5.0),vec3(15.0,5.0,z));\n    c25=boxDistFunc2(p,vec3(5.0),vec3(30.0,5.0,z));\n    c26=boxDistFunc2(p,vec3(5.0),vec3(30.0,57.0,z));\n    c27=boxDistFunc2(p,vec3(5.0),vec3(45.0,5.0,z));\n    c28=boxDistFunc2(p,vec3(5.0),vec3(45.0,57.0,z));\n    c29=boxDistFunc2(p,vec3(5.0),vec3(30.0,31.0,z));\n    c30=boxDistFunc2(p,vec3(5.0),vec3(45.0,31.0,z));\n    c31=boxDistFunc2(p,vec3(5.0),vec3(50.0,18.0,z));\n    c32=boxDistFunc2(p,vec3(5.0),vec3(50.0,44.0,z));\n    \n    c33=boxDistFunc2(p,vec3(5.0),vec3(75.0,57.0,z));\n    c34=boxDistFunc2(p,vec3(5.0),vec3(75.0,44.0,z));\n    c35=boxDistFunc2(p,vec3(5.0),vec3(75.0,31.0,z));\n    c36=boxDistFunc2(p,vec3(5.0),vec3(75.0,18.0,z));\n    c37=boxDistFunc2(p,vec3(5.0),vec3(75.0,5.0,z));\n    c38=boxDistFunc2(p,vec3(5.0),vec3(90.0,5.0,z));\n    c39=boxDistFunc2(p,vec3(5.0),vec3(90.0,57.0,z));\n    c40=boxDistFunc2(p,vec3(5.0),vec3(105.0,5.0,z));\n    c41=boxDistFunc2(p,vec3(5.0),vec3(105.0,57.0,z));\n    c42=boxDistFunc2(p,vec3(5.0),vec3(90.0,31.0,z));\n    c43=boxDistFunc2(p,vec3(5.0),vec3(105.0,31.0,z));\n\n    float a=min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(min(c0,c1),c2),c3),c4),c5),c6),c7),c8),c9),c10),c11),c12),c13),c14),c15),c16),c17),c18),c19),c20),c21),c22),c23),c24),c25),c26),c27),c28),c29),c30),c31),c32),c33),c34),c35),c36),c37),c38),c39),c40),c41),c42),c43);\n    return t>38.5?min(obj1,a):min(obj1,obj2);\n}\n\nvec3 genNormal(vec3 p,vec3 origin,float t){\n    float d=0.001;\n    return normalize(vec3(\n        distFunc(p+vec3(d,0.0,0.0),t)-distFunc(p+vec3(-d,0.0,0.0),t),\n        distFunc(p+vec3(0.0,d,0.0),t)-distFunc(p+vec3(0.0,-d,0.0),t),\n        distFunc(p+vec3(0.0,0.0,d),t)-distFunc(p+vec3(0.0,0.0,-d),t)\n        ));\n}\nvec3 getRayColor(inout vec3 ray,inout vec3 origin,float t,out bool hit){\n    float distance=0.0;\n    float rLen=0.0;\n    vec3 rPos=origin;\n    vec3 color=vec3(200.0/255.0);\n    float maxDist=300.0;\n    for(int i=0;i<80;i++){\n        distance=distFunc(rPos,t);\n        if(abs(distance)<0.25){\n             if(distance==boxDistFunc(rPos,t,vec3(5.0))){\n                color=vec3(0.2+t/100.0,0.,0.5);\n                break;\n            }else if(distance==planeDistFunc(rPos,t)){\n                vec3 p=t<35.0?rotate(rPos,t,vec3(0.0,1.0,0.0)):rPos;\n                vec3 i=vec3(p.x-mod(p.x,10.0),0.0,p.z-mod(p.z,10.0));\n                  p.xz=mod(clamp(p.xz,-500.0,500.0),10.0)-5.0;\n                color=vec3(0.3*random(i));\n                break;\n            }else {\n                color=vec3(0.1);\n                break;\n            }\n        }\n        rLen+=distance;\n        rPos=origin+rLen*ray;\n        if(rLen>maxDist){\n            break;\n        }\n    }\nif(abs(distance)<0.45){\n    vec3 normal=genNormal(rPos,origin,t);\n    origin=rPos+normal*0.46;\n    ray=normalize(reflect(ray,normal));\n    hit=true;\n}\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float t=mod(iTime,45.0);    \n    vec2 p=(fragCoord.xy*2.0-iResolution.xy)/min(iResolution.x,iResolution.y);\n    vec3 cPos=vec3(0.0,10.0,30.0);\n    vec3 cDir=normalize(vec3(0.0,t<36.0?-0.5:-0.5+clamp((t-36.0)*0.15,0.0,0.5),-1.0));\n    vec3 cUp=vec3(0.0,1.0,0.0);\n    vec3 cSide=cross(cDir,cUp);\n    float depth=1.0;\n    cPos+=t>32.0?vec3(0.0,clamp(20.0-(t-32.0)*7.0,0.0,20.0),clamp(90.0-pow((t-33.0),4.0),-1300.0,1000.0)):(t<15.0?vec3(0.0):vec3(0.0,clamp(pow((t-15.0),2.8),0.0,20.0),clamp(pow((t-15.0),4.0),0.0,90.0)));       \n    vec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*depth);\n    vec3 origin=cPos;\n    vec3 color=vec3(0.0);\n    float alpha=0.7;\n    bool hit;\n    for(int i=0;i<3;i++){\n        color+=alpha*getRayColor(ray,origin,t,hit);\n        alpha*=0.6;\n        if(!hit)break;\n    }\n    color=color.r>0.99?vec3(242.0/255.0,242.0/255.0,232.0/255.0):color;\n\n    fragColor=vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}