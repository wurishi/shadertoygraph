{"ver":"0.1","info":{"id":"mlfyWs","date":"1691324485","viewed":677,"name":"weather icons","username":"yasuo","description":"weather icons","likes":29,"published":3,"flags":0,"usePreview":1,"tags":["graphicdesign","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 128\n#define MAX_DIST 128.\n#define SURF_DIST .0005\n#define Rot(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(1.0),b,d)\n#define B(p,s) max(abs(p).x-s.x,abs(p).y-s.y)\n#define deg45 .707\n#define R45(p) (( p + vec2(p.y,-p.x) ) *deg45)\n#define Tri(p,s) max(R45(p).x,max(R45(p).y,B(p,s)))\n#define DF(a,b) length(a) * cos( mod( atan(a.y,a.x)+6.28/(b*8.0), 6.28/((b*8.0)*0.5))+(b-1.)*6.28/(b*8.0) + vec2(0,11) )\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SPEED 200.\n#define ZERO (min(iFrame,0))\n#define WIRE_SIZE 0.01\n#define WIRE_COLOR 0\n#define OBJECT_COLOR 1\n#define seg_0 0\n#define seg_1 1\n#define seg_2 2\n#define seg_3 3\n#define seg_4 4\n#define seg_5 5\n#define seg_6 6\n#define seg_7 7\n#define seg_8 8\n#define seg_9 9\n\n\n// thx iq! https://iquilezles.org/articles/distfunctions/\nfloat smin( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nvec2 combine(vec2 val1, vec2 val2 ){\n    return (val1.x < val2.x)?val1:val2;\n}\n\nfloat random (vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898,78.233)))* 43758.5453123);\n}\n\n\nfloat segBase(vec2 p){\n    vec2 prevP = p;\n    \n    float size = 0.02;\n    float padding = 0.05;\n\n    float w = padding*3.0;\n    float h = padding*5.0;\n\n    p = mod(p,0.05)-0.025;\n    float thickness = 0.005;\n    float gridMask = min(abs(p.x)-thickness,abs(p.y)-thickness);\n    \n    p = prevP;\n    float d = B(p,vec2(w*0.5,h*0.5));\n    return d;\n}\n\nfloat seg0(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    float mask = B(p,vec2(size,size*2.7));\n    d = max(-mask,d);\n    return d;\n}\n\nfloat seg1(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    \n    p = prevP;\n    \n    p.x+=size*1.9;\n    p.y-=size*3.2;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg2(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x-=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg3(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.x+=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=0.06;\n    mask = B(p,vec2(size,size+0.01));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg4(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    \n    p.x+=size;\n    p.y+=0.08;\n    float mask = B(p,vec2(size*2.,size*2.0));\n    d = max(-mask,d);\n\n    p = prevP;\n    \n    p.y-=0.08;\n    mask = B(p,vec2(size,size*2.0));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg5(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg6(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x-=size;\n    p.y-=0.05;\n    float mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.y+=0.05;\n    mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg7(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.x+=size;\n    p.y+=size;\n    float mask = B(p,vec2(size*2.,size*3.7));\n    d = max(-mask,d);\n    return d;\n}\n\n\nfloat seg8(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y = abs(p.y);\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat seg9(vec2 p){\n    vec2 prevP = p;\n    float d = segBase(p);\n    float size = 0.03;\n    p.y-=0.05;\n    float mask = B(p,vec2(size,size));\n    d = max(-mask,d);\n\n    p = prevP;\n    p.x+=size;\n    p.y+=0.05;\n    mask = B(p,vec2(size*2.,size));\n    d = max(-mask,d);\n    \n    return d;\n}\n\nfloat segDot(vec2 p){\n    vec2 prevP = p;\n    p*=SkewX(-0.4);\n    float size = 0.03;\n    p.y = abs(p.y)-0.07;\n    float d = B(p,vec2(size));\n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char){\n    p*=SkewX(-0.4);\n    float d = seg0(p)*checkChar(seg_0,char);\n    d += seg1(p)*checkChar(seg_1,char);\n    d += seg2(p)*checkChar(seg_2,char);\n    d += seg3(p)*checkChar(seg_3,char);\n    d += seg4(p)*checkChar(seg_4,char);\n    d += seg5(p)*checkChar(seg_5,char);\n    d += seg6(p)*checkChar(seg_6,char);\n    d += seg7(p)*checkChar(seg_7,char);\n    d += seg8(p)*checkChar(seg_8,char);\n    d += seg9(p)*checkChar(seg_9,char);\n    \n    return d;\n}\n\nfloat digitNumbers(vec2 p, float n){\n    vec2 prevP = p;\n    p*=0.6;\n    p.y+=sin(iTime*3.+n)*0.02;\n    p*=Rot(radians(sin(iTime*2.+n)*5.));\n    float d = drawFont(p-vec2(-0.35,0.0),int(mod(iTime,9.)));\n    float d2 = drawFont(p-vec2(-0.15,0.0),int(mod(iTime*2.,9.)));\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.15,0.0),int(mod(iTime*15.,9.)));\n    d = min(d,d2);\n    d2 = drawFont(p-vec2(0.35,0.0),int(mod(iTime*30.,9.)));\n    d = min(d,d2);\n    d2 = segDot(p);\n    d = min(d,d2);\n    return abs(d)-0.005;\n}\n\n// thx iq! https://iquilezles.org/articles/distfunctions/\nfloat sdBoxFrame( vec3 p, vec3 b, float e )\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\n\nfloat sun(vec2 p){\n    vec2 prevP = p;\n    float d = abs(length(p)-0.16)-0.01;\n    p*=Rot(radians(30.*iTime));\n    p = DF(p,2.0);\n    p-=vec2(0.2);\n    p*=Rot(radians(45.));\n    float d2 = B(p,vec2(0.02,0.06));\n    d = min(d,d2);\n    return d;\n}\n\nfloat cloud(vec2 p, float mask, float dir){\n    vec2 prevP = p;\n    p.x+=iTime*0.2*dir;\n    p.x+=0.6;\n    p.x = mod(p.x, 1.2)-0.6;\n    float d = length(p-vec2(0.04,0.1))-0.16;\n    p.x = abs(p.x)-0.22;\n    float d2 = length(p-vec2(0.0,-0.1))-0.16;\n    d = smin(d,d2,0.16);\n    p = prevP;\n    p.x+=iTime*0.2*dir;\n    p.x+=0.6;\n    p.x = mod(p.x, 1.2)-0.6;\n    d2 = B(p-vec2(0.0,-0.1),vec2(0.22,0.16));\n    d = mix(abs(min(d,d2))-0.01,min(d,d2),mask);\n\n    d = max((abs(prevP.x)-0.45),d);\n\n    return d;\n}\n\nfloat sunAndCloud(vec2 p){\n    vec2 prevP = p;\n    p.x+=0.15;\n    p.y-=0.1;\n    p*= 1.3;\n    float d = sun(p);\n    p = prevP;\n    p.y+=0.1;\n    float d2 = cloud(p,0.0,1.);\n    d = max(-cloud(p,1.,1.),d);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat wind(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(35.*iTime));\n    p.x*=-1.;\n    p = DF(p,2.);\n    p-=0.13;\n    p.y-=0.1;\n    p*=Rot(radians(-26.));\n    float d = Tri(p,vec2(0.1));\n    return abs(d)-0.01;\n}\n\nfloat umbrella(vec2 p, float outline){\n    p*=0.7;\n    p.y+=0.05;\n    vec2 prevP = p;\n    float d = length(p)-0.22;\n    d = max(-p.y,d);\n    p.x = abs(p.x)-0.145;\n    p.y+=0.03;\n    float size = ((0.22/3.)+0.01);\n    float d2 = length(p)-size;\n    d = max(-d2,d);\n    p = prevP;\n    p.y+=0.03;\n    d2 = length(p)-size;\n    d = mix(max(-d2,d),abs(max(-d2,d))-0.005,outline);\n    p = prevP;\n    d2 = B(p-vec2(0,0.05),vec2(0.005,0.2));\n    p.y-=0.135;\n    d2 = max(-(abs(p.y)-0.08),d2);\n    d = min(d,d2);\n    p = prevP;\n    d2 = abs(length(p-vec2(0.04,-0.15))-0.04)-0.01;\n    d2 = max(p.y+0.15,d2);\n    d = min(d,d2);\n    d2 = B(p-vec2(0,-0.13),vec2(0.01,0.02));\n    d = min(d,d2);\n    return d;\n}\n\nfloat rain(vec2 p){\n    vec2 prevP = p;\n    float d = umbrella(p,1.);\n    \n    p*=Rot(radians(20.));\n    p.y+=iTime*0.3;\n    p.x = mod(p.x,0.1)-0.05;\n    p.y=mod(p.y,0.14)-0.07;\n    float d2 = B(p, vec2(0.005,0.04));\n    d2 = max(-prevP.y+0.05,d2);\n    d2 = max(-umbrella(prevP,0.),d2);\n    d = min(d,d2);\n    \n    d = max((abs(prevP.x)-0.45),d);\n    d = max((abs(prevP.y)-0.45),d);\n    \n    return d;\n}\n\nfloat snowman(vec2 p, float outline){\n    vec2 prevP = p;\n    float d = length(p-vec2(0.0,-0.14))-0.24;\n    float d2 = length(p-vec2(0.0,0.14))-0.18;\n    d = min(d,d2);\n    d = mix(d,abs(d)-0.01,outline);\n    p.x = abs(p.x)-0.06;\n    d2 = length(p-vec2(0.0,0.16))-0.02;\n    d = min(d,d2);\n    return d;\n}\n\nfloat snow(vec2 p){\n    vec2 prevP = p;\n    float d = snowman(p,1.);\n    p*=Rot(radians(20.));\n    p.y+=iTime*0.1;\n    p = mod(p,0.14)-0.07;\n    float d2 = length(p)-0.02;\n    d2 = max(-snowman(prevP,0.),d2);\n    d = min(d,d2);\n    \n    d = max((abs(prevP.x)-0.45),d);\n    d = max((abs(prevP.y)-0.45),d);    \n    \n    return d;\n}\n\nfloat thunder(vec2 p){\n    vec2 prevP = p;\n    p.x-=0.01;\n    p.y-=0.15;\n    p.y*=0.5;\n    float d = Tri(p,vec2(0.09));\n    d = max(p.x,d);\n    \n    p = prevP;\n    p.x+=0.01;\n    p.y*=-1.;\n    p.y-=0.15;\n    p.y*=0.5;\n    float d2 = Tri(p,vec2(0.09));\n    d2 = max(-p.x,d2);\n    d = min(d,d2);\n    return abs(d)-0.005;    \n}\n\nfloat thunders(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(20.));\n    p.y+=iTime*0.3;\n    p.x = mod(p.x,0.26)-0.13;\n    p.y = mod(p.y,0.42)-0.21;\n    float d = thunder(p);\n    \n    d = max((abs(prevP.x)-0.45),d);\n    d = max((abs(prevP.y)-0.9),d);       \n    return d;\n}\n\nfloat snowflake(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(-30.*iTime));\n    p = DF(p,2.);\n    \n    p-=0.08;\n    \n    p*=0.8;\n    p*=Rot(radians(45.));\n    p.x*=2.;\n    p.y= abs(p.y)-0.05;\n    \n    float d = abs(Tri(p,vec2(0.3)))-0.01;\n    return d;\n}\n\nfloat snowflakes(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(20.));\n    p.y+=iTime*0.3;\n    p.x = mod(p.x,0.4)-0.2;\n    p.y = mod(p.y,0.42)-0.21;\n    float d = snowflake(p);\n    \n    d = max((abs(prevP.x)-0.45),d);\n    d = max((abs(prevP.y)-0.9),d);  \n    \n    return d;\n}\n\nfloat moon(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(-30.));\n    float d = length(p)-0.26;\n    p.y*=0.8;\n    float mask = length(p-vec2(0.12,0.0))-0.18;\n    d = max(-mask,d);\n    return abs(d)-0.01;\n}\n\nfloat moons(vec2 p){\n    vec2 prevP = p;\n    \n    p.x+=iTime*0.3;\n    p.x = mod(p.x,0.7)-0.35;\n    float d = moon(p);\n    \n    d = max((abs(prevP.x)-0.9),d);\n    d = max((abs(prevP.y)-0.45),d);      \n    \n    return d;\n}\n\nfloat arrow(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(radians(90.));\n    p.x*=1.7;\n    p.y-=0.2;\n    float d = Tri(p,vec2(0.4));\n    p.y+=0.25;\n    float d2 = Tri(p,vec2(0.4));\n    d = max(-d2,d);\n    return abs(d)-0.02;\n}\n\nfloat arrows(vec2 p){\n    vec2 prevP = p;\n        \n    p.x-=iTime*0.3;\n    p.x = mod(p.x,0.6)-0.3;\n    float d = arrow(p);\n    \n    d = max((abs(prevP.x)-0.9),d);\n    d = max((abs(prevP.y)-0.45),d);       \n    \n    return d;\n}\n\nfloat temparature(vec2 p){\n    vec2 prevP = p;\n    float d = B(p-vec2(0,0.1),vec2(0.04,0.15));\n    float d2 = length(p-vec2(0,-0.14))-0.12;\n    d = abs(min(d,d2))-0.005;\n    \n    d2 = B(p-vec2(0,0.02),vec2(0.003,0.1));\n    d = min(d,d2);\n    d2 = length(p-vec2(0,-0.14))-0.06;\n    d = min(d,d2);\n    \n    p.x-=0.06;\n    p.y-=iTime*0.05;\n    p.y = mod(p.y,0.04)-0.02;\n    d2 = B(p,vec2(0.02,0.005));\n    p = prevP;\n    p.y-=0.12;\n    d2 = max(abs(p.y)-0.08,d2);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat temparatures(vec2 p){\n    vec2 prevP = p;\n    \n    p.x+=iTime*0.3;\n    p.x = mod(p.x,0.4)-0.2;    \n    \n    float d = temparature(p);\n    \n    d = max((abs(prevP.x)-0.9),d);\n    d = max((abs(prevP.y)-0.45),d);           \n    \n    return d;\n}\n\nvec2 pattern1(vec3 p){\n    vec3 prevP = p;\n    p.y = abs(p.y)-0.5;\n    float d = sdBoxFrame(p, vec3(0.95,0.45,0.5),WIRE_SIZE);\n    \n    vec2 vd = vec2(d,WIRE_COLOR);\n    p = prevP;    \n    \n    float d2 = moons(p.xy-vec2(0.0,0.5));\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd2 = vec2(d2,OBJECT_COLOR);    \n    \n    p.xy-=vec2(0.0,-0.5);\n    p.yz*=Rot(radians(60.*iTime));\n    d2 = arrows(p.xy);\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd3 = vec2(d2,OBJECT_COLOR);\n    \n    return combine(combine(vd,vd2),vd3);\n}\n\nvec2 pattern2(vec3 p){\n    vec3 prevP = p;\n    p.x = abs(p.x)-0.5;\n    float d = sdBoxFrame(p, vec3(0.45,0.95,0.5),WIRE_SIZE);\n    vec2 vd = vec2(d,WIRE_COLOR);\n    p = prevP;\n    \n    float d2 = thunders(p.xy-vec2(0.5,0.0));\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd2 = vec2(d2,OBJECT_COLOR);\n    \n    d2 = snowflakes(p.xy-vec2(-0.5,0.0));\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd3 = vec2(d2,OBJECT_COLOR);\n    \n    return combine(combine(vd,vd2),vd3);\n}\n\nvec2 pattern3(vec3 p){\n    vec3 prevP = p;\n    float d = sdBoxFrame(p-vec3(0,0.5,0), vec3(0.95,0.45,0.5),WIRE_SIZE);\n    p.x = abs(p.x)-0.5;\n    p*= vec3(sign(prevP.x),1,1);\n    float d2 = sdBoxFrame(p-vec3(0,-0.5,0), vec3(0.45,0.45,0.5),WIRE_SIZE);\n    d = min(d,d2);\n    vec2 vd = vec2(d,WIRE_COLOR);\n    \n    d2 = rain(p.xy-vec2(0,-0.5));\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd2 = vec2(d2,OBJECT_COLOR);\n    \n    p = prevP;\n    d2 = temparatures(p.xy-vec2(0,0.5));\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd3 = vec2(d2,OBJECT_COLOR);    \n    \n    return combine(combine(vd,vd2),vd3);\n}\n\nvec2 pattern4(vec3 p, float n){\n    vec3 prevP = p;\n    float d = sdBoxFrame(p-vec3(0,-0.5,0), vec3(0.95,0.45,0.5),WIRE_SIZE);\n    p.x = abs(p.x)-0.5;\n    p*= vec3(sign(prevP.x),1,1);\n    float d2 = sdBoxFrame(p-vec3(0,0.5,0), vec3(0.45,0.45,0.5),WIRE_SIZE);\n    d = min(d,d2);\n    \n    d2 = snow(p.xy-vec2(0,0.5));\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd3 = vec2(d2,OBJECT_COLOR);\n    \n    \n    p = prevP;\n    vec2 vd = vec2(d,WIRE_COLOR);\n    \n    d2 = digitNumbers(p.xy-vec2(0,-0.5),n);\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd2 = vec2(d2,OBJECT_COLOR);\n    \n    return combine(combine(vd,vd2),vd3);\n}\n\nvec2 pattern5(vec3 p, float n){\n    vec3 prevP = p;\n    p.x = abs(p.x)-0.5;\n    p.y = abs(p.y)-0.5;\n    p*= vec3(sign(prevP.x),sign(prevP.y),1);\n    float d = sdBoxFrame(p, vec3(0.45,0.45,0.5),WIRE_SIZE);\n    vec2 vd = vec2(d,WIRE_COLOR);\n    \n    float d2 = sun(p.xy);\n    if(n>=0.8 && n<0.85){\n        d2 = cloud(p.xy,0.0,-1.);\n    } else if(n>=0.85 && n<0.9){\n        d2 = sunAndCloud(p.xy);\n    } else if(n>=0.9 && n<0.95){\n        d2 = wind(p.xy);\n    }\n    d2 = max(abs(p.z)-0.02,d2);\n    vec2 vd2 = vec2(d2,OBJECT_COLOR);\n    \n    return combine(vd,vd2);\n}\n\nvec2 GetDist(vec3 p) {\n    vec3 prevP = p;\n    \n    p.y-=0.5*iTime;\n    vec2 id = floor(p.xy*0.5);\n    p.z-=3.;\n    p.xy = mod(p.xy,2.0)-1.0;\n    float n = random(id); \n    \n    vec2 res = vec2(10,0.);\n    if(n<0.2){\n        res = pattern1(p);\n    } else if(n>=0.2 && n < 0.4){\n        res = pattern2(p);\n    } else if(n>=0.4 && n < 0.6){\n        res = pattern3(p);\n    } else if(n>=0.6 && n < 0.8){\n        res = pattern4(p,n);\n    } else {\n        res = pattern5(p,n);\n    }\n\n    return res;\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd,  int stepnum) {\n    vec2 dO = vec2(0.0);\n    \n    for(int i=0; i<stepnum; i++) {\n        vec3 p = ro + rd*dO.x;\n        vec2 dS = GetDist(p);\n        dO.y = dS.y;\n        \n        if(dO.x>MAX_DIST || abs(dS.x)<SURF_DIST) break;\n        \n        if(i<50){\n            dO.x += dS.x*0.38;\n        } else {\n            dO.x += dS.x;\n        }\n    }\n    \n    return dO;\n}\n\nvec3 GetNormal(vec3 p) {\n    float d = GetDist(p).x;\n    vec2 e = vec2(.001, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy).x,\n        GetDist(p-e.yxy).x,\n        GetDist(p-e.yyx).x);\n    \n    return normalize(n);\n}\n\nvec3 R(vec2 uv, vec3 p, vec3 l, float z) {\n    vec3 f = normalize(l-p),\n        r = normalize(cross(vec3(0,1,0), f)),\n        u = cross(f,r),\n        c = p+f*z,\n        i = c + uv.x*r + uv.y*u,\n        d = normalize(i-p);\n    return d;\n}\n\nvec3 diffuseMaterial(vec3 n, vec3 rd, vec3 p, vec3 col) {\n    vec3 diffCol = vec3(0.0);\n    vec3 lightDir = normalize(vec3(1,10,-10));\n    float diff = clamp(dot(n,lightDir),0.0,1.0);\n    float skyDiff = clamp(0.5+0.5*dot(n,vec3(0,1,0)),0.0,1.0);\n    float bounceDiff = clamp(0.5+0.5*dot(n,vec3(0,-1,0)),0.0,1.0);\n    diffCol = col*vec3(-0.5)*diff;\n    diffCol += col*vec3(1.0,1.0,1.0)*skyDiff;\n    diffCol += col*vec3(0.8)*bounceDiff;\n    diffCol += col*pow(max(dot(rd, reflect(lightDir, n)), 0.0), 60.); // spec\n        \n    return diffCol;\n}\n\nvec3 materials(int mat, vec3 n, vec3 rd, vec3 p, vec3 col){\n    if(mat == 0){\n        col = diffuseMaterial(n,rd,p,vec3(0.3));\n    } else {\n        col = diffuseMaterial(n,rd,p,vec3(1.0));\n    }\n    \n    return col;\n}\n\nvec3 ACESFilmic(vec3 x, float a, float b, float c, float d, float e){\n    return (x*(a*x+b))/(x*(c*x+d)+e);\n}\n\nfloat cubicInOut(float t) {\n  return t < 0.5\n    ? 4.0 * t * t * t\n    : 0.5 * pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\n\nfloat getTime(float t, float duration){\n    return clamp(t,0.0,duration)/duration;\n}\n\nvec3 cameraAnim(vec3 p){\n\n    float rotX = 0.;\n    float rotY = -10.;\n\n    float frame = mod(iTime,20.0);\n    float time = frame;\n\n    if(frame>=5. && frame<10.){\n        time = getTime(time-5.,0.6);\n\n        rotY = -10.+cubicInOut(time)*-10.;\n        rotX = cubicInOut(time)*-30.;\n    } else if(frame>=10. && frame<15.){\n        time = getTime(time-10.,0.6);\n        \n        rotY = -20.;\n        rotX = -30.+cubicInOut(time)*60.;\n    } else if(frame>=15.){\n        time = getTime(time-15.,0.6);\n\n        rotY = -20.+cubicInOut(time)*10.;\n        rotX = 30.+cubicInOut(time)*-30.;\n    }\n\n    p.xz*=Rot(radians(rotX));\n    p.yz*=Rot(radians(rotY));\n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 prevUV = uv;\n    \n    vec2 m =  iMouse.xy/iResolution.xy;\n    \n    vec3 ro = vec3(0, 0, -1.5);\n    if(iMouse.z>0.){\n        ro.yz *= Rot(m.y*3.14+1.);\n        ro.y = max(-0.9,ro.y);\n        ro.xz *= Rot(-m.x*6.2831);\n    } else {\n        ro = cameraAnim(ro);\n    }\n    \n    vec3 rd = R(uv, ro, vec3(0,0.0,0), 1.);\n    vec2 d = RayMarch(ro, rd, MAX_STEPS);\n    vec3 col = vec3(.0);\n    \n    if(d.x<MAX_DIST) {\n        vec3 p = ro + rd * d.x;\n        vec3 n = GetNormal(p);\n        int mat = int(d.y);\n        col = materials(mat,n,rd,p,col);\n    }\n    \n    col = ACESFilmic(col,3.,0.03,2.43,0.59,0.14);\n\n    /* // debug icons\n    col = vec3(0.);\n    d.x = temparatures(uv);\n    col = mix(col,vec3(1.),S(d.x,0.0));\n    */\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}