{"ver":"0.1","info":{"id":"cl2BR3","date":"1694372267","viewed":67,"name":"SSAA Pixel Sampling Viz","username":"mAmaro","description":"https://www.shadertoy.com/view/3lB3DR","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["viz","gpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    initRandom(vec2(0.0,0.0)+2.0, iFrame);\n\n    vec2 uv = fragCoord / iResolution.xy;\n    float ar = iResolution.y/iResolution.x;\n    //uv.y *= ar;\n    uv *= 4.0;\n    \n\n    vec3 col = vec3(0.04);  // Setting initial color to black for better grid visibility\n\n    float pixcenteroff = 0.5;\n    uvec2 res = uvec2(4u, 4u);\n    \n    \n    col += smoothstep(0.02,0.00, abs(uv.y-bob(uv.x, iTime)));\n    \n   \n    vec2 move = getmove(res.x, iTime);\n    vec2 fragcoord = vec2(1.0, move.y) + pixcenteroff;\n\n    vec2 ssaa = vec2(getRandom(), getRandom());\n    vec2 part1 = vec2(2.0 / float(res.x));\n    vec2 part2 = fragcoord + ssaa;\n    vec2 part3 = vec2(1.0, float(res.y) / float(res.x));\n    vec2 screencoord = part1 + part2 - part3;\n\n    float FRAME_WIDTH = 0.036;\n    vec2 projcoord = vec2(.5 * FRAME_WIDTH) * screencoord;\n\n    // Draw grid\n    col += vec3(0.6,0.2,0.0)*(1.0-drawGrid(uv, 10.0));\n    col += vec3(0.0,0.3,0.9)*vec3(1.0-smoothstep(0.00,0.04, min(fract(uv.x+0.015),fract(uv.y+0.015))));\n    col += vec3(0.9,0.0,0.0)*smoothstep(0.02,0.00,abs(rectSDF(uv-fragcoord, vec2(part1))));\n    // Plot points\n    col += plotpoint2D(fragcoord, 0.1, vec3(1.0, 0.0, 1.0), uv);\n    col += plotpoint2D(screencoord, 0.08, vec3(0.0, 0.5, 1.0), uv);\n    col += plotpoint2D(vec2(2.0, 0.0), 0.05, vec3(0.9,0.0,0.9), vec2(uv.x, uv.y-bob(0.0, iTime)));\n    col += vec3(0.00,1.0,0.0)*texture(iChannel0, fragCoord/iResolution.xy).xyz;\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI (3.14159265358979)\n#define TAU (PI*2.0)\n\n\n\nvec3 seed;\nvoid initRandom(in vec2 fragCoord, in int FrameId)\n{\n    seed = vec3(fragCoord, FrameId);\n}\n\nfloat getRandom()\n{\n\tseed = clamp(fract(sin(cross(seed, vec3(12.9898, 78.233, 43.1931))) * 43758.5453), 0., 1.);    \n    return seed.x;\n}\nvec3 plotpoint2D(vec2 point, float r, vec3 col, vec2 space)\n{\n    return col*vec3(smoothstep(0.001, 0.00, length(space - point) - r));\n}\n\nvec3 drawGrid(vec2 uv, float spacing)\n{\n    vec2 grid = fract(spacing * uv);\n    return vec3(smoothstep(0.0, 0.1, min(grid.x, grid.y)));\n}\n\nfloat rectSDF(vec2 p, vec2 size) {\n    vec2 d = abs(p) - size;\n    return length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0);\n}\n\nfloat smax(float a, float b, float k)\n{\n    return log(exp(k*a)+exp(k*b))/k;\n}\n\nfloat bob(float space, float time)\n{\n    float yoffset = 0.0;\n    float xoffset = 3.0*(PI*0.5);\n    float sin1 = 10.0*(-0.9+clamp(1.2*sin(4.0*xoffset+space*PI*2.0+time), 0.9,1.0));\n    float sin2 = 4.0*(0.25+clamp(sin(8.0*xoffset+space*PI*2.0+time), -0.25, 0.0));\n    float sin3 = 10.0*(1.0+clamp(1.1*sin(16.0*xoffset+space*PI*2.0+time), -1.0, -0.9));\n    return yoffset+(sin1+sin2+sin3)/3.0;\n}\n\nvec2 getmove(uint res, float time)\n{\n    return  vec2(1.0, (float(res)-float(res)*0.25)*bob(0.0, time));\n}\n    ","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    initRandom(vec2(0.0,0.0), iFrame);\n    vec2 uv = fragCoord / iResolution.xy;\n    uv *= 4.0;\n    //uv -= 0.0;\n    //uv /= 2.0;\n    //vec3 col = vec3(0.0);\n    //if(iFrame>1)\n    \n    vec3 col = 0.98*texture(iChannel0, fragCoord/iResolution.xy).xyz;  // Setting initial color to black for better grid visibility\n    \n\n    \n\n    float pixcenteroff = 0.5;\n    uvec2 res = uvec2(4u, 4u);\n    vec2 move = getmove(res.x, iTime);\n    vec2 fragcoord = vec2(1.0, move.y) + pixcenteroff;\n\n    vec2 ssaa = vec2(getRandom(), getRandom());\n    vec2 part1 = vec2(2.0 / float(res.x));\n    vec2 part2 = fragcoord + ssaa;\n    vec2 part3 = vec2(1.0, float(res.y) / float(res.x));\n    vec2 screencoord = part1 + part2 - part3;\n\n    float FRAME_WIDTH = 0.036;\n    vec2 projcoord = vec2(.5 * FRAME_WIDTH) * screencoord;\n    \n    vec2 intercoord = mix(screencoord, projcoord, 0.5+2.0*clamp(sin(iTime*0.5), -0.25,0.25));\n    // Draw grid\n    //col += drawGrid(uv, 10.0);\n    //col +=  0.4*vec3(smoothstep(0.0,0.06, fract(uv)),1.0);\n\n    // Plot points\n    //col = mix(col, plotpoint2D(projcoord + vec2(0.5), 0.02, vec3(0.3, 1.0, 0.0), uv), max(0.0,sin(iTime)));  // shift projcoord into [0, 1] range\n        col += plotpoint2D(intercoord, 0.02, vec3(0.0, 1.0, 0.0), uv);  // shift projcoord into [0, 1] range\n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}