{"ver":"0.1","info":{"id":"wl2fRD","date":"1603457946","viewed":139,"name":"Speed Lines","username":"DawCrash","description":"Speed lines","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lines"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 rectangle(vec2 xy, float x1, float y1, float x2, float y2) {\n\tvec4 result = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    if (xy.x >= x1 && xy.x <= x2 && xy.y >= y1 && xy.y <= y2) result = vec4(0.04, 0.04, 0.04, 1.0);\n    \n    return result;\n}\n\nvec4 rectangleSin(vec2 xy, float modx, float mody) {\n    float r1x1 = sin(iTime / modx) / 2.0 + 0.25;\n    float r1x2 = r1x1 + 0.5;\n    float r1y1 = sin(iTime / mody) / 2.0 + 0.25;\n    float r1y2 = r1y1 + 0.5;\n    \n    return rectangle(xy, r1x1, r1y1, r1x2, r1y2);\n}\n\nvec4 circle(vec2 xy, float x2, float y2, float r2) {\n\tvec4 result = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    float x1 = xy.x;\n    float y1 = xy.y;\n    float r1 = 0.1;\n    \n    float distance = sqrt(pow(x2-x1, 2.0) - pow(y2-y1, 4.0));\n    \n    if (distance <= 0.3) result = vec4(0.18, 0.18, 0.18, 1.0);\n    \n    return result;\n}\n\nvec4 circleSin(vec2 xy, float modx, float mody) {\n    float x2 = sin(iTime / modx) / 2.0 + 2.0;\n    float y2 = sin(iTime / mody) / 2.0 - 0.65;\n    float r2 = 0.2;\n    \n    return circle(xy, x2, y2, r2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy; //We obtain our coordinates for the current pixel\n    xy.x = xy.x / iResolution.x; //We divide the coordinates by the screen size\n    xy.y = xy.y / iResolution.y;\n    \n    //fragColor = circle(xy, 0.5, 0.5, 0.2);\n    fragColor = circleSin(xy, 1.0, 1.5);\n    \n    //fragColor = rectangleSin(xy, 1.0, 1.5);\n    \n    for (float i = 1.0; i < 2.0; i += 0.01) {\n        fragColor += circleSin(xy, i, 3.0-i);\n    }\n    \n    \n}","name":"Image","description":"","type":"image"}]}