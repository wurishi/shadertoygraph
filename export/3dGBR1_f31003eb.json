{"ver":"0.1","info":{"id":"3dGBR1","date":"1606509715","viewed":205,"name":"Colorblind cam demo v2 ","username":"dimonoid","description":"Demo\nBlinking black/grey to yellow = red\nBlinking grey to blue = green or light blue\nBlinking blue to grey = pink\nBlinking yellow to grey = light green ?\n\nNot blinking yellow = yellow\nNot blinking blue = blue","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["colorblind"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = texture(iChannel0, uv);\n    \n    float redVisibility = 10.0;//modify\n    float blueAmplify = 1.2;//modify\n    float hz = 1.0/0.1;// 0.1s or 0.5s between blinks\n    \n    float flash = ceil(iTime*hz)-(iTime*hz);//sawtooth wave down\n\n    float redGreenaAverage = \t(col.r*0.2126 + \n        \t\t \t\t\t\tcol.g*0.7152)/\n        \t\t\t\t\t\t(0.2126+\n                 \t\t\t\t0.7152);\n    \n    float improvedRed = \t\t(col.r*0.2126*redVisibility + \n        \t\t \t\t\t\tcol.g*0.7152)/\n        \t\t\t\t\t\t(0.2126*redVisibility+\n                 \t\t\t\t0.7152);\n    \n    float flashingRed = improvedRed*flash+redGreenaAverage*(1.0-flash);\n    \n    //uncomment to make only red shades flashing, easier to recognise but green info is lost\n    //aslo would suggest increasing speed to 0.1s when used\n    flashingRed = max(flashingRed,redGreenaAverage);\n    \n    vec4 greycol=vec4(flashingRed,flashingRed,min(col.b*blueAmplify,1.0), 0.0);//simulate daltonism\n\n    fragColor = vec4(greycol);\n}","name":"Image","description":"","type":"image"}]}