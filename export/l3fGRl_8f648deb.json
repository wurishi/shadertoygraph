{"ver":"0.1","info":{"id":"l3fGRl","date":"1707817780","viewed":84,"name":"my first shader guys","username":"destroyerman","description":"my first shader ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractlover"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cosine based palette, 4 vec3 params\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(0.00, 0.10, 0.20);\n\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord *2. - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    \n    \n    vec3 finalColor = vec3(0.);\n    \n    \n    for (float i = 0.; i < 4.; i++){\n\n        uv = fract(uv * 1.5) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n        \n        vec3 col = palette(length(uv0) + i*.4 + iTime * .4);\n        \n\n\n        d = sin(d * 8. + iTime) / 8.;\n        d = abs(d);\n        d = pow(0.01 / d, 1.2);\n\n\n        finalColor += col * d;\n    }\n    \n\n    // Output to screen\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}