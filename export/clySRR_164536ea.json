{"ver":"0.1","info":{"id":"clySRR","date":"1685947964","viewed":44,"name":"second_shader_alg","username":"dpanfilova","description":"1637","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["u"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int m = 6, n1 = 2, n2 = 3; \nconst int n = n1 + n2;\n\nconst float r[n2]=float[n2](0.2,0.25,0.13);\nconst vec3 colBG=vec3(1.0,0.8,0.3);\n//const int inds[n1];\n\nmat3 rotateX(float X){\n    return mat3(1.0,0.0,0.0,\n                0.0,cos(X),-sin(X),\n                0.0,sin(X),cos(X));\n}\n\nmat3 rotateZ(float X){\n    return mat3(cos(X), -sin(X), 0.0,\n                sin(X), cos(X), 0.0,\n                0.0, 0.0, 1.0);\n}\nconst vec3 polygons[m]=vec3[m](\n                vec3(0.9,0.8,0.6),\n                vec3(0.2,0.7,0.5),\n                vec3(0.8,0.5,0.6),\n                vec3(1.0,0.6,0.1),\n                vec3(0.2,0.4,0.4),\n                vec3(0.9,1.0,0.5)\n    );\n\nfloat turn(vec2 u, vec2 v, vec3 p){\n    float res=(p.x-u.x)*(v.y-u.y)-(v.x-u.x)*(p.y-u.y);\n    if(res>0.0) return 1.0;\n    if(res==0.0) return 0.0;\n    return -1.0;\n}\n\nbool inSphere(int num, vec3 p){  // num -- номер полигона\n    if(length(p)<r[num])\n        return true;\n    else return false;\n}\n\nfloat z_sph(int num,vec3 xy, vec3 p){\n    float z=sqrt(r[num]*r[num]-(p.x-xy.x)*(p.x-xy.x)-(p.y-xy.y)*(p.y-xy.y));\n    return xy.z-z;\n}\n\nbool inPolygon(int num, vec3 p){\n    int i;\n    for(i=num*3;i<num*3+3;i++){\n        if (turn(polygons[i+1].xy,polygons[i].xy,p)==-1.0)\n            return false;\n    }\n    return true;\n}\n// ибо есть внешние переменные int m, int inds[m], vec3 polygons[m], которые видно внутри функций\n\nfloat z_pol(int num, vec3 p){\n\treturn length(p-polygons[num]);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n\tvec2 xy = fragCoord/iResolution.xy-0.5;\n\txy.x*= iResolution.x/iResolution.y;\n\tvec3 col = colBG;\n    vec3 colAr[n]=vec3[n](\n            vec3(0.5,0.7,0.1)*cos(xy.xxx),\n            vec3(0.3,0.5,0.4)*cos(xy.xxx),\n            vec3(1.0,0.4,0.0),\n            vec3(0.8,0.8,0.8)*cos(xy.xxx),\n            vec3(0.2,0.3,0.2)*cos(xy.xxx)\n    );\n    vec3 centres[n2]=vec3[n2](\n        vec3(0.3*sin(iTime),0.3*sin(iTime),1.0),\n        vec3(0.2*cos(iTime),0.2*sin(iTime),1.0),\n        vec3(0.6*cos(iTime),0.7*sin(iTime),1.0)\n    ); \n\t//initScene(iTime); //работа с внешними переменными\n\tint i; float k=0.0;\n    \n\tfloat z1, z = 100.0;\n    if(inPolygon(0, vec3(xy,1.0)*rotateX(iTime*0.9))){\n\t\t\tz1 = z_pol(0, vec3(xy,1.0));\n\t\t\tif(z1<z){\n\t\t\t\tz=z1;\n\t\t\t\tcol=colAr[0]*z;\n\t\t\t}\n\t\t}\n    \n\tfor(i=0;i<n2;i++)\n\t\tif(inSphere(i, vec3(xy,1.0)-centres[i])){\n\t\t\tz1=z_sph(i,vec3(xy,1.0),centres[i])+k;\n\t\t\tif(z1<z){\n\t\t\t\tz=z1;\n\t\t\t\tcol=colAr[i+ n1];\n\t\t\t}\n            k=k+0.1;\n\t\t}\n        \n        \n     if(inPolygon(1, vec3(xy,1.0)*rotateZ(iTime*0.9))){\n\t\t\tz1 = z_pol(1, vec3(xy,1.0));\n\t\t\tif(z1<z){\n\t\t\t\tz=z1;\n\t\t\t\tcol=colAr[1]*(z);\n\t\t\t}\n\t\t}\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}