{"ver":"0.1","info":{"id":"wtK3DW","date":"1579010442","viewed":168,"name":"Hatching test - tmiya","username":"tmiya","description":"Hatching test.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hatching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float lineWidth = 0.3f;\n    float patternScale0 = 50.0f;\n    float patternScale1 = 50.0f;\n    float patternScale2 = 100.0f;\n    float levelThresholdWhite = 0.5f, levelThreshold0 = 0.4f, levelThreshold1 = 0.3f, levelThreshold2 = 0.2f;\n    float hatchingAlpha = 0.5f;\n\n    float level0 = 1.0f, level1 = 1.0f, level2 = 1.0f;\n    \n    // level0\n    {\n        float pattern = uv.x + uv.y;\n        pattern = fract(pattern * patternScale0);\n    \tlevel0 = pattern > lineWidth ? 1.0f : 0.0f; \n    }\n \t// level1\n    {\n        float pattern = uv.x - uv.y;\n        pattern = min(fract(pattern * patternScale1), level0);\n    \tlevel1 = pattern > lineWidth ? 1.0f : 0.0f;         \n    }\n \t// level2\n    {\n        float pattern = uv.y;\n        pattern = min(fract(pattern * patternScale2), level1);\n    \tlevel2= pattern > lineWidth ? 1.0f : 0.0f;         \n    }\n    \n    // sample texture\n    vec3 texCol = texture(iChannel0, uv).rgb;\n    // calculate luminance\n    float luminance = dot(texCol, vec3(0.2126f, 0.7152f, 0.0722f));\n\t\n    // hatching\n    float hatching = 1.0f;\n    if (luminance < levelThreshold2)\n    {\n        float rate = luminance / levelThreshold2;\n        hatching = mix(0.0f, level2, rate);\n    }\n    else if (luminance < levelThreshold1)\n    {\n        float rate = (luminance - levelThreshold2) / (levelThreshold1 - levelThreshold2);\n        hatching = mix(level2, level1, rate);\n    }\n    else if (luminance < levelThreshold0)\n    {\n        float rate = (luminance - levelThreshold1) / (levelThreshold0 - levelThreshold1);\n        hatching = mix(level1, level0, rate);\n    }\n    else if (luminance < levelThresholdWhite)\n    {\n        float rate = (luminance - levelThreshold0) / (levelThresholdWhite - levelThreshold0);\n        hatching = mix(level0, 1.0f, rate);   \n    }\n    \n    // blend\n    vec3 col = vec3(mix(luminance, hatching, hatchingAlpha));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}