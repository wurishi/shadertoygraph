{"ver":"0.1","info":{"id":"4lSGDc","date":"1432911591","viewed":508,"name":"metaballs pt.2","username":"the23","description":"some more metaballs, variation of earlier shader with animated color","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d","metaballs","glow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float speed = 13.0;\n\nconst float radius = 5.7;\nconst float thresholdFactor = 0.008;\nconst int ballCount = 6;\n\nconst vec3 backgroundColor = vec3(0.0);\n\nconst float capDistance = 0.8;\n\nfloat dstMetaball(vec2 pos, vec2 center, float radius)\n{\n  vec2 diff = pos - center;\n  return radius / dot(diff, diff);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{ \n  // create centered local positions\n  float aspect = iResolution.x / iResolution.y;\n  vec2 tex = fragCoord.xy / iResolution.xy;\n  tex.x *= aspect;\n  tex -= clamp(vec2(aspect, 1.0 / aspect) - 1.0, 0.0, 1.0)  * 0.5;\n    \n  vec3 color = backgroundColor;\n\n    \n  float dst = 0.0;\n  // add a fat ball in the middle\n  dst += dstMetaball(tex, vec2(0.5, 0.5), radius) * 20.0;\n\n  // init the vars for the other balls\n  vec2 ballPos = vec2(0.0);\n  float sinTime = sin(iTime * speed * 0.1);\n\n  vec2 dir1 = vec2(sin(radians(0.0)), cos(radians(0.0)));\n  vec2 dir2 = vec2(sin(radians(60.0)), cos(radians(60.0)));\n  vec2 dir3 = vec2(sin(radians(120.0)), cos(radians(120.0)));\n\n  for (int i=0; i < 2; ++i)\n  {\n    ballPos = sign(float(i) - 0.5) * sinTime * 0.5 * dir1 * capDistance;\n    dst += dstMetaball(tex, ballPos + 0.5/*center*/, radius);\n   \n    ballPos = sign(float(i) - 0.5) * sinTime * 0.55 * dir2 * capDistance;\n    dst += dstMetaball(tex, ballPos + 0.5/*center*/, radius);\n\n    ballPos = sign(float(i) - 0.5) * sinTime * 0.5 * dir3 * capDistance;\n    dst += dstMetaball(tex, ballPos + 0.5/*center*/, radius);\n  }\n    \n  // scale down the distance, don't forget the middle ball\n  dst /= float(ballCount) + 2.0;\n  \n  vec3 ballColor = vec3(sin(iTime * speed * 0.08), \n                        sin(iTime * speed * 0.07), \n                        sin(iTime * speed * 0.06));\n  ballColor = normalize(ballColor);\n  ballColor = ballColor * 0.5 + 0.5;\n  // blend between colors\n  color = mix(color, ballColor, dst * thresholdFactor);\n\n  fragColor = vec4(color, 1.0);\n}\n","name":"","description":"","type":"image"}]}