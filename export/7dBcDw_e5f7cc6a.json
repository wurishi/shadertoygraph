{"ver":"0.1","info":{"id":"7dBcDw","date":"1644613371","viewed":96,"name":"Beach Patterns","username":"mAmaro","description":"waah","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["patternmasks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Miguel Amarl\n// Title:\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI32 3.141592653589793\n\nfloat compmult2(vec2 v)\n{\n return v.x * v.y;\n}\n\n//TODO(): Figure how how to move rectangles after applying \n//        the aspect ratio.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3  u_resolution = iResolution;\n\tfloat u_time = iTime;\n    vec4  u_mouse = iMouse;\n    \n    ///SETUP\n    float aspectratio = u_resolution.x / u_resolution.y;\n \tvec2 st = gl_FragCoord.xy / u_resolution.xy;\n\tst.x *= aspectratio;\n    st -= (u_mouse.xy / u_resolution.xy) - 0.5;\n    \n    float bucketsize   = 20.0;\n \tfloat bucketindex  = floor(gl_FragCoord.y/bucketsize);\n \tfloat bucketoffset = (gl_FragCoord.y - (bucketsize * bucketindex)) / bucketsize;\n    float bucketgrid = step(1.0, bucketoffset) *\n   \t\t\t\t\t   step(1.0 - 0.1, 1.0 - bucketoffset);\n    ///RECT\n    st.x /= aspectratio;\n  \tvec2 rectsize = vec2(0.6, 0.6);\n    vec2 rectmargins = vec2((1.0 - rectsize.x) * 0.5,\n                    \t\t(1.0 - rectsize.y) * 0.5);\n    float rectmask = compmult2(step(vec2(rectmargins),st) *\n   \t\t\t\t\t\t\t   step(vec2(rectmargins), 1.0 - st));\n    ///WAVE\n    st.x *= aspectratio;\n    float wavetime = (u_time * 10.0);\n    float wavethickness = 0.4;\n    float waveamp  = min(0.5 - wavethickness,max(0.0, 0.05));\n    float wavetrans = 0.5;\n    float wavecount = -140.0;\n    float t = 1.4 * cos(u_time * 2.0);\n\tfloat wavesin   = sin(wavetime + abs(t)  + (st.x * wavecount)) * waveamp + wavetrans;\n \tfloat wavesin2  = sin(wavetime + PI32 + (st.x * wavecount)) * waveamp + wavetrans;\n \tfloat wavemask = step(wavesin, bucketoffset) *\n  \t\t\t\t  \t step(wavesin2 - wavethickness, 1.0 - bucketoffset)\n     \t\t\t  \t * (rectmask);\n\t\n    ///PAINTING\n    vec3 wave   = vec3(-0.6, -0.2, 0.0) * wavemask * rectmask;\n    vec3 square = vec3(0.4, 0.8, 1.0) * rectmask;\n    vec3 background = vec3(0.8, 0.8, 0.8) * (1.0 - rectmask);\n    \n \tvec3 color = background + square - wave;\n \t\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}