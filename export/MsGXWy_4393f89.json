{"ver":"0.1","info":{"id":"MsGXWy","date":"1466270651","viewed":621,"name":"Slowstars","username":"danb","description":"Simple star shader, but not too fast.","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["stars","iterative","rendering","starfield","slow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rnd(r) fract(4579.0 * sin(1957.0 * (r)))\n\nvoid mainImage(out vec4 col, in vec2 pos)\n{\n    float t = iTime;\n\tpos /= iResolution.x;\n    col = vec4(0.0);\n    \n    for (float i = 0.0; i < 200.0; i += 1.0)\n    {\n        float r = (0.5 + 0.5 * rnd(i)) * 0.003;\n        vec2 point = rnd(i + vec2(1.0, 2.0));\n        vec2 veloc =  rnd(i + vec2(3.0, 4.0)) - 0.5;\n        \n        vec2 point_real = fract(point + veloc * t * 0.05);\n        float dist = length(point_real - pos) / r;\n\n        if (dist < 1.0)\n        {\n            col += 1.0 - dist;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}