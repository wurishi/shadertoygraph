{"ver":"0.1","info":{"id":"DttfWs","date":"1701815866","viewed":25,"name":"Dither Shader","username":"the0neboy","description":"A simple dithering shader. Change \"RGB_CHANNELS\" to specify how many red, green and blue colors there are. In current state, vec3(2,2,2). That means that there are 2*2*2=8 different colors on the screen. Because of dithering, it looks like alot more.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["dither"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 ditherSize = vec2(8.,8.);\nvec3 RGB_CHANNELS = vec3(2,2,2);\nfloat _dither_f(float x, float c) {\n    x = min(x,0.999);\n    return floor(c*x)/c+1./(2.*c);\n}\nvec3 _dither(vec3 color, vec2 pixCoord) {\n    vec3 col = color;\n    vec3 col2 = color;\n    \n    \n    vec3 col3 = vec3(0.);\n    col3.r = _dither_f(col.r,RGB_CHANNELS.r-1.);\n    col3.g = _dither_f(col.g,RGB_CHANNELS.g-1.);\n    col3.b = _dither_f(col.b,RGB_CHANNELS.b-1.);\n\n    col2 = col3-1./(2.*(RGB_CHANNELS-1.));\n    col = col3+1./(2.*(RGB_CHANNELS-1.));\n    \n    \n    float lerpR = (color.r-col.r)/(col2.r-col.r);\n    float lerpG = (color.g-col.g)/(col2.g-col.g);\n    float lerpB = (color.b-col.b)/(col2.b-col.b);\n\n    vec2 ditherCoordinate = pixCoord/ditherSize;\n    \n    float ditherval = texture(iChannel1,ditherCoordinate).r;\n    \n    vec3 ditheredval = vec3(step(ditherval, lerpR),step(ditherval, lerpG),step(ditherval, lerpB));\n    \n    col = mix(col,col2,ditheredval);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0,uv);\n    //vec4 col = vec4(uv.x,uv.x,uv.x,1.0);\n    \n    col = vec4(_dither(col.rgb, fragCoord),1.0);\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}