{"ver":"0.1","info":{"id":"dsdSW7","date":"1679964379","viewed":75,"name":"Shifting Topology","username":"PGRacer","description":"Trying to do a topological separation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["topology"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define reach 0.0015\n#define tol 0.00001\n#define str 0.25\n\nfloat Intensity(vec3 col)\n{\n    return (col.r + col.g + col.b) / 3.0;\n}\n\nvec3 shift(vec3 col)\n{\n    float shiftval = 1.0 + (sin(iTime * 0.5) * 0.5 + 0.5) * 5.0;\n    col *= shiftval;\n    col = floor(col);\n    col /= shiftval;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    bool flip = false;\n    vec3 col1 = shift(col);\n    float intensity = Intensity(col1);\n    \n    for (int i = -1; i < 2; i++)\n    {\n        for (int j = -1; j < 2; j++)\n        {\n            if (i == 0 && j == 0) continue;\n            vec3 col2 = shift(texture(iChannel0, uv + reach * normalize(vec2(i, j))).rgb);\n            float intensity2 = Intensity(col2);\n            if (abs(intensity2 - intensity) > tol)\n            {\n                flip = true;\n                break;\n            }\n        }\n    }\n\n    if (flip) col = vec3(0.0);\n    //if (flip) col = vec3(str) + (1.0 - str) * col;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}