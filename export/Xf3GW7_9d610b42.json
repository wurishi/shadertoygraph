{"ver":"0.1","info":{"id":"Xf3GW7","date":"1711736350","viewed":19,"name":"Proj3-Hard","username":"coltonmo","description":"Project 3 hard shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["school"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Gradient colors\n    vec3 teal = vec3(0.0, 0.8, 0.5);\n    vec3 lightBlue = vec3(0.2, 0.5, 1.0);\n\n    // Gradient direction\n    vec2 gradientDir = normalize(vec2(1.0, 1.0));\n\n    // Calculate gradient factor\n    float gradientFactor = dot(uv, gradientDir);\n\n    // Interpolate between colors\n    vec3 gradientColor = mix(teal, lightBlue, gradientFactor);\n\n    // Calculate grid coordinates\n    vec2 gridCoords = fract(uv * 10.0);\n\n    // Check if inside grid squares\n    float gridFactor = step(0.50, gridCoords.x) * step(0.25, gridCoords.y);\n\n    // Final color with grid effect\n    vec3 finalColor = mix(gradientColor, vec3(1.0), gridFactor);\n\n    // Output final color\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}