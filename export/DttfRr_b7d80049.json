{"ver":"0.1","info":{"id":"DttfRr","date":"1700885286","viewed":53,"name":"just a remake of a yt tut","username":"Benzzz","description":"idk i remade something","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_LAYERS 4.\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    \n    return mat2(c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare) {\n    \n    float d = length(uv);\n    \n    float m = .05/d;\n    \n    \n    float rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    \n    m += rays*flare;\n    \n    uv *= Rot(3.1415/4.);\n    \n    rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    \n    m += rays*.3*flare;\n    \n    \n    m *= smoothstep(1., .2, d);\n    \n    return m;\n    \n}\n\nfloat Hash21(vec2 p) {\n\n    p = fract(p*vec2(123.34, 456.21));\n    \n    p += dot(p, p+45.32);\n    \n    return fract(p.x*p.y);\n    \n}\n\nvec3 StarLayer(vec2 uv) {\n\n    vec3 col = vec3(0);\n    \n    vec2 gv = fract(uv)-.5;\n    \n    vec2 id = floor(uv);\n    \n        for(int y=-1;y<=1;y++) {\n        \n            for(int x=-1;x<=1;x++) {\n            \n                vec2 offs = vec2(x, y);\n                \n                float n = Hash21(id+offs); //defaults to 0-1\n                \n                float size = fract(n*345.32);\n                \n                float star = Star(gv-offs-vec2(n, fract(n*34.))+.5, smoothstep(.9, 1., size)*.6);\n                \n                \n                vec3 color = sin(vec3(.2, .3, .9)*fract(n*2345.2)*123.2)*.5+.5;\n                \n                color = color*vec3(1, .25,1.+size)+vec3(.2, .2, .1)*2.;\n                \n                \n               star *= sin(iTime*3.+n*6.2831)*.5+1.;\n                col += star*size*color;\n             }\n             \n          }\n          \n          return col;\n          \n       }\n       \n       void mainImage( out vec4 fragColor, in vec2 fragCoord )\n       \n       {\n       \n           vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n           \n           vec2 M = (iMouse.xy-iResolution.xy*.5)/iResolution.y;\n           \n           \n           float t = iTime*.02;\n           \n           \n           uv +=M*4.;\n           \n           \n           uv *= Rot(t);\n           \n               vec3 col = vec3(0);\n               \n           for(float i=0.; i<1.; i+=1./NUM_LAYERS) {\n               float depth = fract(i+t);\n               \n               \n               float scale = mix(20., .5, depth);\n               \n               float fade = depth*smoothstep(1., .9, depth);\n               \n               col += StarLayer(uv*scale+i*453.2-M)*fade;\n               \n           }\n           \n           col = pow(col, vec3(.4545));\n           \n           fragColor = vec4(col,1.0);\n}\n      \n           \n           \n//all credit goes to the art of code on yt (thanks for being a good teacher)        \n        \n    \n    \n    \n    ","name":"Image","description":"","type":"image"}]}