{"ver":"0.1","info":{"id":"MstfRj","date":"1525985492","viewed":383,"name":"Rosaic","username":"hu9o","description":".","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["mosaic","rose","rosace","mandala"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int rayCount = 12;\n    vec3 color1 = vec3(1.,.9,0.);\n    vec3 color2 = vec3(0.,0.4,.3);\n    \n    // center\n    vec2 c = (fragCoord - vec2(iResolution) * .5) / iResolution.y;\n    \n    // cartesian to polar\n\tfloat angle = atan(c.y, c.x);\n    float dist = length(c);\n    \n    // normalize angle\n    angle /= (2.*PI);\n    \n    // fraction angle\n    float mask = 1.;\n    \n    // radial gradient\n    float distRound = (1. - ceil(dist*10.*.5+.25)*.1);\n    float time2 = (fract(dist*10.*.5+.25) > 0.5 ? -iTime : iTime) * distRound; // cw/ccw alternatively\n    float ngfract = fract(angle * round(10. / (distRound * distRound)) + time2 * .6);\n    ngfract = abs(ngfract*2. - 1.);\n    ngfract *= fract(dist*10.) > .5 ? -1. : 1.;\n    mask -= ceil(dist*10. + .5 + ngfract*.5)*.1;\n    \n    //mask *= .8 + .2 * fract(dist*10.*.5+.25);\n    \n    // output\n    fragColor = vec4(mix(vec3(.7, .0, .9)*.3,mix(color2, color1, mask),distRound),1.0);\n}","name":"Image","description":"","type":"image"}]}