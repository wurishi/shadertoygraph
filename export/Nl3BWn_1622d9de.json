{"ver":"0.1","info":{"id":"Nl3BWn","date":"1662871246","viewed":210,"name":"Fractal mosaic 16","username":"jarble","description":"Yet another fractal mosaic pattern.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","mosaic","rug"],"hasliked":0,"parentid":"stdBzM","parentname":"Fractal mosaic 15 (music)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define fmod(x,y) mod(floor(x),y)\nvec2 f1(vec2 a){\n    return\n        fract(a)\n        //fract(a+floor(a.y*2.+.5)/2.)\n    ;\n}\n\nvec2 triangle_wave(vec2 a){\n    vec2 a2 = //change this constant to get other interesting patterns\n        vec2(1.,0.5)\n        //vec2(-2.,.5+mod(floor(a.x),2.))\n        //vec2(1.5,0.5)\n        //vec2(1.5,0.)\n        //vec2(2.,0.)\n        //vec2(2.5,0.)\n        //vec2(1.25,1.75)\n        //vec2(abs(mod(a.x-.5,2.)-1.),abs(mod(a.y-.5,2.)-1.))\n    ,\n    \n    a1 = a+a2;\n    //a1 *= (1. + fmod(abs(a1/2.),2.));\n\n    //a1 *= (1. + fmod(abs(a1/2.),2.));\n    return\n        abs(f1((a1)*(a2.x+a2.y))-.5)\n        //abs(fract(a+vec2(floor(a.x),floor(a.y)))-.5)\n    ;\n}\n\n#define triwave_(p) abs(fract(.5+p/4.0)-.5)*2.\n#define triwave1_(p) (abs(fract(p/8.0)-.5)-abs(fract(p/2.0)-.5)/2.)\nfloat t1_(vec2 c, vec2 p){\n    return triwave_((.5 - length( min(p=fract(p*sign(triwave1_(c*c.y))), 1.-p.yx) )));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0);\n    vec3 col = vec3(0.);\n    float t1 = 8.*8.;\n    vec2 uv = (fragCoord)/iResolution.y/t1/2.0;\n    uv.y += iTime/t1/12.0;\n    if(iMouse.z>.5)\n    uv = uv.xy + iMouse.xy / iResolution.xy/t1;\n    float scale = 1.5;\n    vec2 t2 = vec2(0.);\n    vec3 col1 = col;\n\n    for(int k = 0; k < 12; k++){\n    \n        //uv.y += t1_(floor(uv),floor(uv));\n    \n        bool c1 = t2.x < uv.x;\n        uv =\n            (uv+t2)/scale\n            //(uv+t2)/scale*(1.+mod(floor(uv.y),2.)/2.)\n        ;\n        //uv *= max(sign(uv),sign(uv-uv.yx));\n        t2 = triangle_wave(uv-.5);\n        uv = t2-triangle_wave(uv.yx);\n        \n        //uv.x -= max(uv.y,uv.x);\n        //uv.x -= floor(uv.x-uv.y)*2.;\n\n        \n        float z1 =\n            //Several interesting variants here:\n            abs(uv.x-uv.y)-t2.x-t2.y\n            //abs(uv.x-uv.y-.5*sign(uv.x-uv.y))\n            //length(uv-t2)\n            //max(abs(t2.y),abs(uv.y))\n            //max(abs(t2.x),abs(uv.x))\n            //abs(uv.y)-t2.y\n            //abs(uv.x)-t2.x\n            //max(abs(uv.x-t2.x),abs(uv.y-t2.y))\n            //uv.x-t2.x\n            //t2.y\n            //abs(uv.x+uv.y)-t2.x-t2.y\n            //t2.x+uv.x\n            //uv.x+t2.x\n            \n            //max(abs(t2.y-uv.y),abs(t2.x-uv.x))\n\n            //max(abs(uv.y),abs(uv.x))\n        ;\n\n        col.x = max((abs(z1))/3.,col.x);\n        col =\n            abs(col-(1.-col.x));\n            //abs(col.yzx-(1.-col.x));\n        col1 =\n            abs(col1-col-1.).yzx;\n            //col1 = abs(abs(col1-1.)-col).yzx;\n        //if(uv.y>uv.x) uv *= 1.5;\n        \n        //if(c1) col =\n            //col.yzx;\n            //abs(col.yzx-col);\n        //if(uv.x<uv.y) col=col.yzx;\n        //if(uv.x < .5) uv.x += .5;\n        //if(uv.y < .5) uv.y += .5;\n    }\n    fragColor = vec4(col1/2.,1.0);\n}\n","name":"Image","description":"","type":"image"}]}