{"ver":"0.1","info":{"id":"MfXcWn","date":"1720992503","viewed":23,"name":"Vortex Math","username":"edgeofnowhere","description":"Simple Vortex math shader.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["vortex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float vortexPattern(float radius, float time) {\n    float pattern = mod(floor(radius * 10.0 - time * 5.0), 6.0);\n    return pattern == 0.0 ? 1.0 :\n           pattern == 1.0 ? 2.0 :\n           pattern == 2.0 ? 4.0 :\n           pattern == 3.0 ? 8.0 :\n           pattern == 4.0 ? 7.0 :\n           5.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    // Animate the vortex pattern using iTime\n    float vortex = vortexPattern(radius, iTime) / 10.0;\n    \n    // Create color based on the vortex pattern\n    vec3 color = vec3(vortex, 0.0, 1.0 - vortex);\n    \n    fragColor = vec4(color, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}