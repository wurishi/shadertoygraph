{"ver":"0.1","info":{"id":"XfjfDz","date":"1724819208","viewed":7,"name":"Mondrian with zoom","username":"changjin2211","description":"practice","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["zoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Mondrian with zoom anim\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalize the coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Center the coordinate system\n    uv = uv * 2.0 - 1.0;\n    \n    // Create a zoom effect\n    float zoom = sin(iTime * 0.5) * 0.5 + 1.5; // Oscillates between 1 and 2\n    uv /= zoom;\n    \n    // Move back to 0-1 range\n    uv = (uv + 1.0) / 2.0;\n    \n    // Define the colors\n    vec3 red = vec3(0.86, 0.08, 0.24);\n    vec3 blue = vec3(0.10, 0.09, 0.72);\n    vec3 yellow = vec3(0.93, 0.75, 0.0);\n    vec3 white = vec3(0.96, 0.96, 0.96);\n    vec3 black = vec3(0.0, 0.0, 0.0);\n    \n    // Start with white background\n    vec3 color = white;\n    \n    // Red rectangle on the left\n    if (uv.x < 0.25) {\n        color = red;\n    }\n    \n    // Blue rectangle on the bottom right\n    if (uv.x > 0.25 && uv.x < 0.75 && uv.y > 0.8) {\n        color = blue;\n    }\n    \n    // Yellow rectangle on the top right\n    if (uv.x > 0.75 && uv.y < 0.4) {\n        color = yellow;\n    }\n    \n    // Animated black lines\n    float lineWidth = 0.01 / zoom; // Line width changes with zoom\n    if (abs(uv.x - 0.25) < lineWidth || abs(uv.x - 0.75) < lineWidth ||\n        abs(uv.y - 0.4) < lineWidth || abs(uv.y - 0.8) < lineWidth) {\n        color = black;\n    }\n    \n    // Add a border effect\n    if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0) {\n        color = black;\n    }\n    \n    // Output the color\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}