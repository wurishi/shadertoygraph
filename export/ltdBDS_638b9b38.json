{"ver":"0.1","info":{"id":"ltdBDS","date":"1540918943","viewed":123,"name":"dot_test_2","username":"prl","description":"a","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["s"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159265359;\n\nfloat rand(vec2 co){\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n//-----------------------------------------------------------------\n// Digit drawing function by P_Malin (https://www.shadertoy.com/view/4sf3RN)\n\nfloat SampleDigit(const in float n, const in vec2 vUV)\n{\t\t\n\tif(vUV.x  < 0.0) return 0.0;\n\tif(vUV.y  < 0.0) return 0.0;\n\tif(vUV.x >= 1.0) return 0.0;\n\tif(vUV.y >= 1.0) return 0.0;\n\t\n\tfloat data = 0.0;\n\t\n\t     if(n < 0.5) data = 7.0 + 5.0*16.0 + 5.0*256.0 + 5.0*4096.0 + 7.0*65536.0;\n\telse if(n < 1.5) data = 2.0 + 2.0*16.0 + 2.0*256.0 + 2.0*4096.0 + 2.0*65536.0;\n\telse if(n < 2.5) data = 7.0 + 1.0*16.0 + 7.0*256.0 + 4.0*4096.0 + 7.0*65536.0;\n\telse if(n < 3.5) data = 7.0 + 4.0*16.0 + 7.0*256.0 + 4.0*4096.0 + 7.0*65536.0;\n\telse if(n < 4.5) data = 4.0 + 7.0*16.0 + 5.0*256.0 + 1.0*4096.0 + 1.0*65536.0;\n\telse if(n < 5.5) data = 7.0 + 4.0*16.0 + 7.0*256.0 + 1.0*4096.0 + 7.0*65536.0;\n\telse if(n < 6.5) data = 7.0 + 5.0*16.0 + 7.0*256.0 + 1.0*4096.0 + 7.0*65536.0;\n\telse if(n < 7.5) data = 4.0 + 4.0*16.0 + 4.0*256.0 + 4.0*4096.0 + 7.0*65536.0;\n\telse if(n < 8.5) data = 7.0 + 5.0*16.0 + 7.0*256.0 + 5.0*4096.0 + 7.0*65536.0;\n\telse if(n < 9.5) data = 7.0 + 4.0*16.0 + 7.0*256.0 + 5.0*4096.0 + 7.0*65536.0;\n\t\n\tvec2 vPixel = floor(vUV * vec2(4.0, 5.0));\n\tfloat fIndex = vPixel.x + (vPixel.y * 4.0);\n\t\n\treturn mod(floor(data / pow(2.0, fIndex)), 2.0);\n}\n\nfloat PrintInt(const in vec2 uv, const in float value )\n{\n\tfloat res = 0.0;\n\tfloat maxDigits = 1.0+ceil(log2(value)/log2(10.0));\n\tfloat digitID = floor(uv.x);\n\tif( digitID>0.0 && digitID<maxDigits )\n\t{\n        float digitVa = mod( floor( value/pow(10.0,maxDigits-1.0-digitID) ), 10.0 );\n        res = SampleDigit( digitVa, vec2(fract(uv.x), uv.y) );\n\t}\n\n\treturn res;\t\n}\n\nvec4 circle(vec2 p, vec2 center, float radius)\n{\n\treturn mix(vec4(1,1,1,0), vec4(1,0,0,1), smoothstep(radius + 0.005, radius - 0.005, length(p - center)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 xy = uv;\n    vec2 dDim = vec2(135,62);  \n    vec2 PDxy = vec2(135.0,10.0)/dDim;\n    float m_fps = 2.0;\n    float d0 = round(fract(float(iFrame)/2.0/m_fps)+0.001);\n    float d1 = round(fract(float(iFrame-1)/2.0/m_fps)+0.001);\n    float d2 = round(fract(float(iFrame-1)/2.0/(m_fps/2.0))+0.001);\n    float v = 0.85;  \n    float p = 0.02;  \n    float w = 0.9;\n    float mag = 0.5;\n    vec2 parity = -sign(uv.x-0.5)*vec2(1.0,0.0);\t\n    vec2 dxdy = iMouse.xy/iResolution.xy-0.5;\n    float verg = 0.0;//-0.01+dxdy.x;    \n\n    if(true)\n        uv.x = fract(uv.x*2.0);\t\t\n      \tdDim = dDim*vec2(0.5,1.0);\t\n    \tp *= 2.0;\n    \n    uv.x += parity.x*verg;\n    uv -= 0.5;\n    \n    fragColor = vec4(0,0,0,1);\n\n    \n    float r = 0.02*mag;\n\n    float s = 1.0;\n    float l = .02;\n    float d = -0.6;\n    float vOffset = -0.05*mag;\n    \n\n   /*\n    if(circle(uv,vec2(0.0,-vOffset),r).x>0.5 && circle(uv,vec2(0.0,-vOffset),r).y<0.5){\n        \tfragColor = vec4(1,1,1,1);\n    }\n*/\n\n    if ( fragCoord.x == 119.5 && fragCoord.y == 133.5)\n    {\n\t\tfragColor = vec4(d0,d0,d0,1.0);\n    }\n    \n    uv += 0.5;\n    uv.x -= parity.x*verg;\n    \n    if((1.0-uv.x)<2.0*PDxy.x && (uv.x)>0.0 && (uv.y)<0.3*PDxy.y && (uv.y)>0.0 && xy.x >0.0){\t\t\n        fragColor = vec4(d0,d0,d0,1.0);\n    }\n/*\n    if((1.0-uv.x)<PDxy.x && (uv.x)>0.0 && (uv.y)<PDxy.y && (uv.y)>0.0 && xy.x >0.5){\t\t\n        fragColor = vec4(d0,d0,d0,1.0);\n    }\n*/\n    if ( xy.y < .1 ){\n       fragColor = vec4(1.0,1.0,1.0,1.0);\n    }else\n    {\n            fragColor = vec4(0.0,0.0,0.0,1.0);\n    }\n    \n    //Red dominant colors\n    \n    //fragColor = vec4(227.0,153.0,90.0,255.0)/255.0;\n   fragColor = vec4(224.0,152.0,89.0,255.0)/255.0;\n    \n    \n   // fragColor = .16*vec4(255.0,0.0,0.0,255.0)/255.0;\n    // fragColor = .16*vec4(0.0,255.0,0.0,255.0)/255.0;\n   // fragColor = .16*vec4(0.0,0.0,255.0,255.0)/255.0;\n\n    fragColor = 1.0*vec4(255.0,255.0,255.0,255.0)/255.0;\n\n    \n   //fragColor = vec4(204.0,148.0,97.0,255.0)/255.0;\n\n    //fragColor = vec4(192.0,64.0,64.0,255.0)/255.0;\n    //fragColor = vec4(193.0,63,63,255.0)/255.0;\t\t//4 degrees\n    //fragColor = vec4(197,60,60,255.0)/255.0;\t\t//10 degrees\n    //fragColor = vec4(204,57,57,255.0)/255.0;\t\t\t\t//15 degrees\n    //fragColor = vec4(219,54,54,255.0)/255.0;\t\t\t\t//20 degrees\n    //fragColor = vec4(241,53,53,255.0)/255.0;\t\t\t\t//25 degrees\n    //fragColor = vec4(252,52,52,255.0)/255.0;\t\t\t\t//28 degrees\n    //fragColor = vec4(255,50,50,255.0)/255.0;\t\t\t\t//30 degrees\n    \n    //These ones are outside the dynamic range of the display and must be corrected in the luminance domain...\n    //fragColor = vec4(255,47,47,255.0)/255.0;\t\t\t\t//30 degrees\n    //fragColor = vec4(255,40,40,255.0)/255.0;\t\t\t\t//35 degrees\n    //fragColor = vec4(255,35,35,255.0)/255.0;\t\t\t\t//40 degrees\n\n    \n     //Green dominant colors\n    \n    //fragColor = vec4(64.0,192.0,64.0,255.0)/255.0/2.0;\n    //fragColor = vec4(63,193.0,63,255.0)/255.0;\t\t//4 degrees\n    //fragColor = vec4(60,197,60,255.0)/255.0;\t\t//10 degrees\n    //fragColor = vec4(57,204,57,255.0)/255.0;\t\t\t\t//15 degrees\n    //fragColor = vec4(54,219,54,255.0)/255.0;\t\t\t\t//20 degrees\n    //fragColor = vec4(53,241,53,255.0)/255.0;\t\t\t\t//25 degrees\n    //fragColor = vec4(52,252,52,255.0)/255.0;\t\t\t\t//28 degrees\n    //fragColor = vec4(50,255,50,255.0)/255.0;\t\t\t\t//30 degrees\n    \n    //These ones are outside the dynamic range of the display and must be corrected in the luminance domain...\n    //fragColor = vec4(47,255,47,255.0)/255.0;\t\t\t\t//30 degrees\n    //fragColor = vec4(40,255,40,255.0)/255.0;\t\t\t\t//35 degrees\n    //fragColor = vec4(35,255,35,255.0)/255.0;\t\t\t\t//40 degrees\n    \n    \n        //Blue dominant colors\n    \n    //fragColor = vec4(64.0,64.0,192.0,255.0)/255.0;\n    //fragColor = vec4(63,63,193.0,255.0)/255.0;\t\t//4 degrees\n    //fragColor = vec4(60,60,197,255.0)/255.0;\t\t//10 degrees\n    //fragColor = vec4(57,57,204,255.0)/255.0;\t\t\t\t//15 degrees\n    //fragColor = vec4(54,54,219,255.0)/255.0;\t\t\t\t//20 degrees\n    //fragColor = vec4(53,53,241,255.0)/255.0;\t\t\t\t//25 degrees\n    //fragColor = vec4(52,52,252,255.0)/255.0;\t\t\t\t//28 degrees\n    //fragColor = vec4(50,50,255,255.0)/255.0;\t\t\t\t//30 degrees\n    \n    //These ones are outside the dynamic range of the display and must be corrected in the luminance domain...\n    //fragColor = vec4(47,47,255,255.0)/255.0;\t\t\t\t//30 degrees\n    //fragColor = vec4(40,40,255,255.0)/255.0;\t\t\t\t//35 degrees\n    //fragColor = vec4(35,35,255,255.0)/255.0;\t\t\t\t//40 degrees\n    \n    \n    \n    \n    \n    \n    \n    \n    //fragColor = vec4(195.0,52.0,49.0,255.0)/255.0;\t //10 degrees\n\n    //fragColor = vec4(196.0,60.0,59.0,255.0)/255.0;\t //10 degrees\n    //fragColor = vec4(199.0,49.0,45.0,255.0)/255.0;\t //13 degrees\n\n    //fragColor = vec4(211.0,55.0,55.0,255.0)/255.0;\t// 20 degrees (\n    //fragColor = vec4(216.0,44.0,41.0,255.0)/255.0;\t// 20 degrees (new theory)\n\n    //fragColor = vec4(255.0,42.0,40.0,255.0)/255.0;\t// 30 degrees (new theory, .02 off.)\n    //fragColor = vec4(255.0,38.0,36.0,255.0)/255.0;\t// 40 degrees (new theory)\n\t//fragColor = vec4(0.0,0.75,0.0,1.0);\n    //fragColor = vec4(.8902,.6,.3529,1.0);\n    fragColor = vec4(1.0,1.0,1.0,1.0)*1.0;\n    //fragColor = vec4(rand(fragCoord)/255.0 + .5,0.0,0.0,1.0);\n\n}","name":"Image","description":"","type":"image"}]}