{"ver":"0.1","info":{"id":"4ssfWM","date":"1496429062","viewed":934,"name":"analytical bayer matrix dither","username":"Jodie","description":"calculating bayer matrices with math","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["gradient","dither","matrix","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n0 2\n3 1\n\n00->00\n01->11\n10->10\n11->01\n\n*/\n\nuint bitfieldReverse(uint x){\n    x = ((x >> 1u) & 0x55555555u) | ((x & 0x55555555u) << 1u);\n    x = ((x >> 2u) & 0x33333333u) | ((x & 0x33333333u) << 2u);\n    x = ((x >> 4u) & 0x0f0f0f0fu) | ((x & 0x0f0f0f0fu) << 4u);\n    x = ((x >> 8u) & 0x00ff00ffu) | ((x & 0x00ff00ffu) << 8u);\n    x = ((x >> 16u) & 0xffffu) | ((x & 0xffffu) << 16u);\n    return x;\n}\n\nuint bitfieldInterleave(uint x,uint y){\n\n    x = (x | (x << 8u)) & 0x00FF00FFu;\n    x = (x | (x << 4u)) & 0x0F0F0F0Fu;\n    x = (x | (x << 2u)) & 0x33333333u;\n    x = (x | (x << 1u)) & 0x55555555u;\n\n    y = (y | (y << 8u)) & 0x00FF00FFu;\n    y = (y | (y << 4u)) & 0x0F0F0F0Fu;\n    y = (y | (y << 2u)) & 0x33333333u;\n    y = (y | (y << 1u)) & 0x55555555u;\n\n    return x | (y << 1u);\n}\n\nuint bitfieldInterleaveReverse(uint x,uint y){\n\t\n    x = ((x>>8u) | (x << 16u)) & 0x00FF00FFu;\n    x = ((x>>4u) | (x <<  8u)) & 0x0F0F0F0Fu;\n    x = ((x>>2u) | (x <<  4u)) & 0x33333333u;\n    x = ((x>>1u) | (x <<  2u)) & 0x55555555u;\n\n    y = ((y>>8u) | (y << 16u)) & 0x00FF00FFu;\n    y = ((y>>4u) | (y <<  8u)) & 0x0F0F0F0Fu;\n    y = ((y>>2u) | (y <<  4u)) & 0x33333333u;\n    y = ((y>>1u) | (y <<  2u)) & 0x55555555u;\n\n    return y | (x << 1u);\n}\n\nuint bitfieldInterleaveReverse16(uint x,uint y){\n\n    uint z = ((x&0xffu)<<16) | (y &0xffu);\n    \n    z = (z | (z << 12u)) & 0xF0F0F0F0u;\n    z = (z | (z >>  6u)) & 0x33333333u;\n    z = (z | (z <<  3u)) & 0xaaaaaaaau;\n    \n    return (z>>16)|((z>>1)&0xffffu); //17 ops\n}\n\nuint bitfieldInterleaveReverse8(uint x,uint y){\n    uint z = ((x&0xfu)<<8) | (y &0xfu);\n    \n    z = (z | (z<<6)) & 0xccccu;\n    z = (z | (z>>3)) & 0x5555u;\n    \n    return (z>>7)|(z&0xffu); //13 ops\n}\n\nfloat bayer256(vec2 fragCoord){\n    const float rcpMaxInt = 1./exp2(16.);\n    uvec2 x = uvec2(fragCoord);\n\treturn float(\n        bitfieldInterleaveReverse16(x.x^x.y, x.y)\n    ) * rcpMaxInt;\n}\n\nfloat bayerMax(vec2 fragCoord){\n    const float rcpMaxInt = 1./exp2(32.);\n    uvec2 x = uvec2(fragCoord);\n\treturn float(\n        //bitfieldReverse(\n        //    bitfieldInterleave(x.x^x.y, x.y)\n        //)\n        bitfieldInterleaveReverse(x.x^x.y, x.y)\n    ) * rcpMaxInt;\n}\n\n\n\nfloat bayer2(vec2 a){\n    uvec2 b = uvec2(a);\n    uint c = (b.x^b.y)<<1u;\n    return float(\n        (c&2u)|(b.y&1u)\n    )/2./2.;\n}\nfloat bayer4(vec2 a){\n    uvec2 b = uvec2(a);\n    uint c = (b.x^b.y)<<1u;\n    return float(\n        ((c&4u|b.y&2u)>>1u)|\n        ((c&2u|b.y&1u)<<2u)  //10 ops\n    )/4./4.;\n}\nfloat bayer8(vec2 a){\n    uvec2 b = uvec2(a);\n    uint c = (b.x^b.y)<<1u;\n    return float(\n        ((c&8u|b.y&4u)>>2u)|\n        ((c&4u|b.y&2u)<<1u)|\n        ((c&2u|b.y&1u)<<4u)  //15 ops\n    )/8./8.;\n}\n\nfloat bayer16(vec2 a){\n    uvec2 b = uvec2(a);\n    return float(\n        bitfieldInterleaveReverse8(b.x^b.y,b.y)\n    )/16./16.;\n}\nfloat bayer32(vec2 a){\n    uvec2 b = uvec2(a);\n    uint x = ((b.x^b.y)&0x1fu) | b.y<<5;\n    \n    x = (x & 0x048u)\n  | ((x & 0x024u) << 3)\n  | ((x & 0x002u) << 6)\n  | ((x & 0x001u) << 9)\n  | ((x & 0x200u) >> 9)\n  | ((x & 0x100u) >> 6)\n  | ((x & 0x090u) >> 3); // 22 ops\n  \n    return float(\n        x\n    )/32./32.;\n}\n\n#define dither2(p)   (bayer2(  p)-.375      )\n#define dither4(p)   (bayer4(  p)-.46875    )\n#define dither8(p)   (bayer8(  p)-.4921875  )\n#define dither16(p)  (bayer16( p)-.498046875)\n#define dither32(p)  (bayer32( p)-.499511719)\n#define dither256(p) (bayer256(p)-.5)\n#define ditherMax(p) (bayerMax(p)-.5)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor.rgb = vec3(uv.x);\n    \n    fragColor.rgb += dither32(fragCoord);\n\n    fragColor.rgb = floor(fragColor.rgb+.5);\n    \n    //fragColor.rgb = vec3(bayer4(fragCoord));\n}","name":"Image","description":"","type":"image"}]}