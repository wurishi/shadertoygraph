{"ver":"0.1","info":{"id":"WtjcWR","date":"1596660692","viewed":81,"name":"Distributed noise","username":"erikthalen","description":"normal distributed noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.14159265359;\nfloat e = 2.7182818284590452353602;\n\n// https://www.itl.nist.gov/div898/handbook/eda/section3/eda3661.htm\nfloat normal(float x) {\n\treturn (pow(e, (pow(-x, 2.)/2.))) / sqrt(2.*pi);\n}\n\nvec3 hsl2rgb( in vec3 c ){\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0,1.0);\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))* 43758.5453123);\n}\n\nfloat random11 (float x) {\n    return fract(sin(x*78.233)* 43758.5453123);\n}\n        \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime * 0.1;\n    vec2 uv = (fragCoord / .5 -iResolution.xy)/iResolution.y;\n    vec2 mouse = (iMouse.xy / .5 -iResolution.xy)/iResolution.y;\n    \n    float normalRandom = normal(vec2(random(uv)).y) * normal(vec2(random(uv)).x) * 1.5;\n    \n    float hue = normalRandom;\n    \n    float fromMouse = length(vec2(mouse) - vec2(uv));\n    \n    hue += uv.x * .0001;\n    \n    hue += time;\n    \n    float lightness = fromMouse;\n\n    fragColor = vec4(hsl2rgb( vec3(hue, .9, .5)), 1.0);\n}","name":"Image","description":"","type":"image"}]}