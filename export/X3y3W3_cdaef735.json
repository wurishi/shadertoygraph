{"ver":"0.1","info":{"id":"X3y3W3","date":"1718290211","viewed":31,"name":"Sample:fbm x image","username":"karakure178","description":"基本的なシェーダーテスト5: fbmを使って画像を歪ませる","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fbm"],"hasliked":0,"parentid":"4XKGWR","parentname":"Sample:polygon"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI  = 3.141592653589793;\nconst float PI2 = PI * 2.;\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n#define OCTAVES 6\nfloat fbm (in vec2 st) {\n    // Initial values\n    float value = 0.0;\n    float amplitud = .5;\n    float frequency = 0.;\n    //\n    // Loop of octaves\n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitud * noise(st);\n        st *= 2.;\n        amplitud *= .5;\n    }\n    return value;\n}\n\n\n// 実装参考：https://thebookofshaders.com/07/?lan=jp\n// 実装参考：https://30min-processing.hatenablog.com/entry/2017/04/19/000000\n// https://trap.jp/post/142/\n// https://nogson2.hatenablog.com/entry/2018/09/20/011346\n// https://thebookofshaders.com/edit.php?log=161127200549\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n  vec2 uv = fragCoord/iResolution.xy;\n    \n  float m = min(iResolution.x, iResolution.y);\n  \n  vec2 st = fragCoord/iResolution.xy;  \n  st = fragCoord/iResolution.xy;\n  st.x *= iResolution.x/iResolution.y;\n\n  // ノイズ画像作成 \n  vec3 color = vec3(0.0);\n  color += fbm(st*10.0);\n  fragColor = vec4(color,1.);\n  float sinX = sin(iTime*0.5); // sin wave分歪ませる用の値\n  \n  // ノイズ画像から歪み用の値を作成\n  float d = map(color.x+sinX, 0., 1., 0.3, 1.);\n  \n  vec4 tex = texture(iChannel0,fract(uv*d));\n  fragColor = tex;\n}","name":"Image","description":"","type":"image"}]}