{"ver":"0.1","info":{"id":"7dj3WG","date":"1617907569","viewed":113,"name":"voronoi tesselation","username":"speediplayz","description":"voronoi tesselation with different effects\n\ncomment out 1 of the distance variables for different effects","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tesselation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float seed){\n    return fract(sin(seed * 5892.234) * 12423.412);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float pointCount = 128.0;\n    vec2[int(pointCount)] points;\n    \n    for(float i = 0.0; i < pointCount; i += 1.0){\n        float x = random((i+1.0)*(i+1.0) + 0.1) * iResolution.x;\n        float y = random(i+1.1) * iResolution.y;\n        vec2 point = vec2(x, y);\n        \n        points[int(i)] = point;\n        if(int(point.x) == int(fragCoord.x) && int(point.y) == int(fragCoord.y)){\n            fragColor = vec4(1,1,1,1);\n            return;\n        }\n    }\n    \n    float minDist = sqrt(iResolution.x * iResolution.x + iResolution.y * iResolution.y);\n    vec2 minVec = vec2(0, 0);\n    \n    for(float i = 0.0; i < pointCount; i += 1.0){\n        float dx = points[int(i)].x - fragCoord.x, dy = points[int(i)].y - fragCoord.y;\n        \n        float dist = sqrt(dx*dx+dy*dy) * (random(fragCoord.x + random(fragCoord.y)));\n        //float dist = sqrt(dx*dx+dy*dy) * (random(fragCoord.y));\n        //float dist = sqrt(dx*dx+dy*dy) * (random(fragCoord.x));\n        //float dist = sqrt(dx*dx+dy*dy) * (random(fragCoord.x) + random(fragCoord.y)) / 2.0;\n        \n        if(dist < minDist){\n            minDist = dist;\n            minVec = points[int(i)];\n        }\n    }\n    \n    if(minDist <= ((sin(iTime)+1.0)/2.0) * 128.0){\n        fragColor = vec4(minVec.x / iResolution.x, minVec.y / iResolution.y, (sin(iTime+45.0)+1.0)/2.0, 1);\n    } else fragColor = vec4(0, 0, 0, 1);\n}","name":"Image","description":"","type":"image"}]}