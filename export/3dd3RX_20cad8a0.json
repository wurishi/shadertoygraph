{"ver":"0.1","info":{"id":"3dd3RX","date":"1568986454","viewed":84,"name":"first shader, wow","username":"Newbobplus","description":"wow","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(float radius, float blur, float dist){\n    return smoothstep(radius + blur, radius, dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(.5);\n    float ratio = iResolution.x / iResolution.y;\n    uv.x *= ratio;\n    float value;\n    float l = length(uv);\n    float radius = .1;\n    float blur = .04;\n   \tvec3 centerCircle = vec3(circle(radius, blur, l));\n    \n    vec3 color = vec3(0.);\n    float shake = .03;\n    float speed = 8.;\n    float offset = .05;\n    vec2 secUv = uv + vec2(sin(iTime * speed), cos(iTime * speed)) * shake;\n    l = length(secUv);\n    color.r += circle(radius, blur, l);\n    secUv = uv + vec2(sin((iTime + offset) * speed), cos((iTime + offset) * speed)) * shake;\n    l = length(secUv);\n    color.b += circle(radius, blur, l);\n    color -= centerCircle;\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}