{"ver":"0.1","info":{"id":"ttX3Rj","date":"1556881578","viewed":199,"name":"Marching Windows","username":"peterszerzo","description":"Some marching windows with complementary colors.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["intersection","halo","sigmoid","squares","complementary","elusive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float doubleCircleSigmoid (float x, float a) {\n  float min_param_a = 0.0;\n  float max_param_a = 1.0;\n  a = max(min_param_a, min(max_param_a, a)); \n\n  float y = 0.0;\n  if (x <= a){\n    y = a - sqrt(a * a - x * x);\n  } else {\n    y = a + sqrt((1.0 - a)*(1.0 - a) - (x - 1.0)*(x - 1.0));\n  }\n  return y;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  // Normalized pixel coordinates (from 0 to 1)\n  vec2 st = fragCoord / iResolution.x;\n    \n  const float units = 15.0;\n  \n  float time = iTime * 1000.0 + 2500.0;\n\n  float r = 0.5 + 0.5 * sin(st.x * units + time / 2000.0) * sin(st.y * units - time / 10000.0);\n  float b = 0.5 + 0.5 * sin(st.x * units + time / 10000.0) * sin(st.y * units - time / 2000.0);\n\n  r = doubleCircleSigmoid(r, 0.5);\n  b = doubleCircleSigmoid(b, 0.5);\n\n  fragColor = vec4(r, mix(r, b, 0.5 + 0.5 * sin(time / 1000.0)), b, 1.0);\n}","name":"Image","description":"","type":"image"}]}