{"ver":"0.1","info":{"id":"7td3W7","date":"1636210114","viewed":251,"name":"Syracuse problem / Collatz conje","username":"FabriceNeyret2","description":"https://en.wikipedia.org/wiki/Collatz_conjecture\nn even → n/2\nn odd → 3n+1\nconjecture: always reach 1 ? \nside questions: orbits, time before stop...\n\nHere: each pixel rasterize integers.\nShow current Syracuse value during 5\". then show convergence length.","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["collatzconjecture","syracuseproblem","ulamconjecture","hailstonesequence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hue(v)  ( .6 + .6 * cos( 6.3*(v)  + vec4(0,23,21,0)  ) )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float i;\n    if (iMouse.z > 0.) {     // if mouse click show curves for first numbers (i.e. 1st line)\n        O = T(vec2(U.x,0));\n        i = round(O.y);\n        O = vec4( U.y < i );\n    }\n    else {\n        O = T(U/1.);\n        i = round( iFrame < 300 ? O.x : O.y ); // show numbers, then convergence length\n        O = hue(i);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n    U -= .5;\n    if (iFrame==0) {            // --- initialization\n        O.x = U.x + U.y*R.x;    // each pixel represent one integer\n        O.y = 0.;               // step count\n        return;\n    }\n                                // --- Syracuse steps\n    O = T(U);                   // previous state\n    int i = int(O.x+.5);\n    if ( i==1 ) return;         // already converged\n    \n    i = i/2*2==i ? i/2 : 3*i+1; // hearth of the model\n    O.x = float(i);             // store current value\n    O.y++;                      // increment steps as long as not converged\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(U) texelFetch( iChannel0, ivec2(U), 0 )","name":"Common","description":"","type":"common"}]}