{"ver":"0.1","info":{"id":"XddBzX","date":"1526163763","viewed":1712,"name":"Easy sphere distortion","username":"FreeFull","description":"Texture mapping with pseudo-spherical distortion.","likes":35,"published":3,"flags":0,"usePreview":1,"tags":["2d","distortion","sphere","texturemapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float dist = sqrt(abs(1.0-dot(uv,uv)));\n    \n    //vec3 col = vec3(dist);\n    vec3 col = texture(iChannel0, iTime/8.0 + uv/dist).rgb*(0.3 + dist*0.7);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}