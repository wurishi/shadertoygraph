{"ver":"0.1","info":{"id":"4dGSDh","date":"1463953404","viewed":392,"name":"Basic Gaussian Grid","username":"myke","description":"Basic 2D tron looking grid using gaussian, still need to figure out intersections\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","blur","line","gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float p2 = 3.14159265359 * 2.0;\n    float t = float(iTime);\n    float rot = mod(t * 0.03, p2);\n    float glow = 0.3 * sin(mod(t * 4.0 - 1.5, p2)) + 0.2 * sin(mod(t * 2.0, p2));\n\tvec2 uv = fragCoord.xy / iResolution.xy; \n    float width = 150.0;\n    float gridspace = 10.0;\n    vec2 step = vec2((iResolution.x + iResolution.y) / 2.0 / gridspace);\n    vec2 rotfrag = fragCoord * rotate2d(rot);\n    vec2 relpos = mod(rotfrag, step) - step / 2.0;\n    vec2 g1 = (glow + vec2(2.0)) * 0.3 * exp(-1.0 * relpos * relpos / width); \n    vec2 g2 = 2.0 * exp(-1.0 * relpos * relpos / 2.0); \n  \n    float o1 = max(g1.x, g1.y);\n    float o2 = max(g2.x, g2.y);  // gives a weird X effect at intersections\n     //float o = max(g2.x + g2.y, min(0.5, g1.x + g1.y));  // overly bright spot at intersections\n    \n    fragColor = vec4(0.3, 0.0, 0.7, 0.0) * o1 + vec4(-0.3, 1.0, -0.5, 1.0) * o2;\n}","name":"Image","description":"","type":"image"}]}