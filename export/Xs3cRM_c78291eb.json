{"ver":"0.1","info":{"id":"Xs3cRM","date":"1518118047","viewed":77,"name":"goobreyscale","username":"kaminate","description":"asdf","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define USE_LOOP 0\n#define DIV_COUNT 10.0\n\nfloat ShadeLoop( float x )\n{\n    for( float iDiv = 1.0; iDiv <= DIV_COUNT; ++iDiv )\n    {\n        float y = iDiv / DIV_COUNT;\n        if( x > y )\n            continue;\n        x = y;\n        break;\n    }\n    return x;\n}\n\nfloat ShadeBrains( float x )\n{\n    // divCount = 5\n\t// x = [ 0                             1 ]\n    // x = [ 0                             5 ]\n    x *= DIV_COUNT;\n    // x = [ 000 ][ 111 ][ 222 ][ 333 ][ 444 ][ 555 ][ 666 ]...\n\tx = floor( x );\n    // x = [ 0/4 ][ 1/4 ][ 2/4 ][ 3/4 ][ 4/4 ]\n\tx /= DIV_COUNT - 1.0;\n\treturn x;\n}\n\n#if USE_LOOP\n#define Shade ShadeLoop\n#else\n#define Shade ShadeBrains\n#endif\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float x = uv.x;\n    x = Shade( x );\n    vec3 col = vec3( 1, 1, 1 ) * x;\n    fragColor = vec4( col, 1.0 );\n}\n","name":"Image","description":"","type":"image"}]}