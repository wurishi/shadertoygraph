{"ver":"0.1","info":{"id":"wdK3Wy","date":"1570895500","viewed":111,"name":"fast antialiasing","username":"Angramme","description":"simple and fast antialiasing","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["antialiasing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 at(vec2 uv){\n    return textureLod(iChannel0, uv, 0.).xyz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0);\n    \n    vec2 px = 1./iResolution.xy;\n    \n    const float N = 1.;\n    for(float x=-N; x<=N; x++){\n        for(float y=-N; y<=N; y++){\n            col += at(uv + vec2(x,y)*px);\n        }\n    }\n    col /= pow(N*2.+1., 2.);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    vec3 col = vec3(0);\n    \n    col += step(.3, distance(vec2(0), uv));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}