{"ver":"0.1","info":{"id":"NdyyWz","date":"1654706525","viewed":60,"name":"rainbow practice 6/8/22","username":"aliiscript","description":"rainbow exercise from book of shaders","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["learnig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\nvec3 colorA = vec3(0.0);\nvec3 colorB = vec3(0.0);\n\nfloat plot (vec2 st, float pct){\n  return  smoothstep( pct-0.01, pct, st.y) -\n          smoothstep( pct, pct+0.01, st.y);\n}\n\nvec3 rainbow(float lvl) {\n    // r\n    float r = 0.0;\n    if(lvl <= 2.0) {\n        r = 1.0;\n    }\n    if(lvl > 4.0) {\n        r+= .5;\n    }\n    \n    // g\n    float g = 0.0;\n    g = 1.0 - abs(lvl - 2.0) * .5;\n    \n    // b \n    float b = 0.0;\n    \n    b = step(4.0, lvl);\n    \n    return vec3(r, g, b);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n    \n    float lvl = floor(st.x*6.0);\n    // 2nd lvl to so wee can smoothstep and make a smooth rainbow\n    // \n    float lvl2 = floor(st.x*6.0) + 1.0;\n    float stepsVisual = fract(st.x*6.0);\n    \n    // Step will return 0.0 unless the value is over 0.5,\n    // in that case it will return 1.0\n    float y = step(0.5,st.x);\n    \n    vec3 rainbow1 = rainbow(lvl);\n    vec3 rainbow2 = rainbow(lvl2);\n\n       \n    vec3 smoothRainbow = mix(rainbow1, rainbow2, fract(st.x*6.0)); \n\n    fragColor = vec4(smoothRainbow,1.0);\n}","name":"Image","description":"","type":"image"}]}