{"ver":"0.1","info":{"id":"ttfyzn","date":"1591426667","viewed":390,"name":"cocos creator 3d","username":"zhengxiangkui","description":"This shader shows how to draw the logo by rasterizer and SDF function\nAbout CocosCreator: https://www.cocos.com/en/creator","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sdf","text","logo","rasterization"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R 0.26\n#define OUTLINE 0.23\n#define PI    3.14159265359\n#define TWOPI 6.28318530718\n\nfloat remap(float a, float b, float s1, float s2, float f) {\n\treturn (f - a)/(b - a)*(s2 - s1) + s1;\n}\n\nmat2 rotate2d(float _angle) {\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\n\n// draw text\n\nfloat circle(vec2 pt, vec2 center, float radius)\n{\n    pt -= center;\n    return length(pt) - radius;\n}\n\nfloat line(vec2 pt, vec2 start, vec2 end)\n{\n    vec2 pa = pt - start;\n    vec2 ba = end - start;\n    vec2 q = start + ba * clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    \n    return distance(pt, q);\n}\n\nfloat pie(vec2 pt, float radius, float angle)\n{    \n    vec2 dir = normalize(pt);\n    \n    float theta = PI-atan(dir.y, -dir.x);\n    theta = clamp(theta, angle, TWOPI - angle);\n    \n    vec2 q = vec2(cos(theta), sin(theta)) * radius; \n    return distance(pt, q);\n}\n\nfloat letter(vec2 pt, vec2 center, float r, float radian) {\n\tfloat radius = r;\n    float theta = radians(radian);\n    \n    pt -= center;\n    return pie(pt, radius, theta);\n}\n\nfloat letterRotate(vec2 pt, vec2 center, float r, float angle, float rotate) {\n\tpt -= center;\n    pt = rotate2d(radians(rotate)) * pt;\n    pt += center;\n    float st = letter(pt, center, r, angle);\n    return st;\n}\n\nfloat letterST(vec2 pt, vec2 center, float r, float angle)\n{\n    pt -= center;\n    pt = mat2(0.8, 0.,0.,1.3) * pt;\n    pt += center;\n    return letterRotate(pt, center, r, angle, -40.);\n}\n\nfloat letterSB(vec2 pt, vec2 center, float r, float angle) {\n    pt -= center;\n    pt = mat2(-0.8, 0.,0.,1.3) * pt;\n    pt += center;\n    return letterRotate(pt, center, r, angle, 40.);\n}\n\nfloat letterS(vec2 pt) {\n\tfloat distST = letterST(pt, vec2(-0.2, -.303), 0.017, 52.3);\n    float distSB = letterSB(pt, vec2(-0.2, -0.33), 0.017, 52.3);\n    return min(distST, distSB);\n}\n\nfloat letterR(vec2 pt, vec2 center) {\n\tconst vec2 vertex00 = vec2(-0.03, 0.015);\n    const vec2 vertex01 = vec2(0.007, 0.025);\n    const vec2 vertex03 = vec2(-0.03, 0.03);\n    const vec2 vertex02 = vec2(-0.03, -0.025);\n    \n    pt -= center;\n    float dist0 = line(pt, vertex03, vertex00);\n    float dist1 = line(pt, vertex00, vertex02);\n    float dist2 = line(pt, vertex00, vertex01);\n    \n    return min(dist0,min(dist1, dist2));\n}\n\nfloat letterE(vec2 pt, vec2 center, float r, float angle) {\n\tfloat et = letterRotate(pt, center, r, angle, -10.);\n    const vec2 vertex00 = vec2(-0.023, 0.005);\n    const vec2 vertex01 = vec2(0.021, 0.005);\n    pt -= center;\n    float l = line(pt, vertex00, vertex01);\n    return min(et, l);\n}\n\nfloat letterA(vec2 pt, vec2 center, float r, float angle) {\n\tfloat et = letterRotate(pt, center, r, angle, 10.);\n    const vec2 vertex00 = vec2(0.022, 0.01);\n    const vec2 vertex01 = vec2(0.032, -0.027);\n    pt -= center;\n    float l = line(pt, vertex00, vertex01);\n    return min(et, l);\n}\n\n\nfloat letterT(vec2 pt, vec2 center, float r, float angle){\n    float tb = letterRotate(pt, center, r, angle, 90.);\n    const vec2 vertex00 = vec2(-0.013, 0.05);\n    const vec2 vertex01 = vec2(-0.013, -0.006);\n    const vec2 vertex02 = vec2(-0.03, 0.03);\n    const vec2 vertex03 = vec2(0.016, 0.03);\n    pt -= center;\n    float l = line(pt, vertex00, vertex01);\n    float l2 = line(pt, vertex02, vertex03);\n    return min(l2,min(l,tb));\n}\n\nfloat letter3T(vec2 pt, vec2 center, float r, float angle) {\n\treturn letterRotate(pt, center, r, angle, 200.);\n}\n\nfloat letter3B(vec2 pt, vec2 center, float r, float angle) {\n    return letterRotate(pt, center, r, angle, 165.);\n}\n\nfloat letter3(vec2 pt) {\n\tfloat dist3T = letter3T(pt, vec2(0.375, -.291), 0.021, 50.3);\n    float dist3B = letter3B(pt, vec2(0.375, -.332), 0.021, 70.3);\n    return min(dist3T, dist3B);\n}\n\nfloat letterD(vec2 pt, vec2 center, float r, float angle) {\n\tfloat dr = letterRotate(pt, center, r, angle, 180.);\n    const vec2 vertex00 = vec2(-0.005, 0.04);\n    const vec2 vertex01 = vec2(-0.005, -0.04);\n    pt -= center;\n    float l = line(pt, vertex00, vertex01);\n    return min(dr, l);\n}\n\nfloat outline(float dist, float thickness)\n{\n    float h = 0.5 * fwidth(dist);\n    return 1.0 - smoothstep(thickness - h, thickness + h, abs(dist));    \n}\n\nvec4 getFragColor(vec2 bary) {\n\tvec4 col_1 = vec4(.6,.6,.6,1.);\n    vec4 col_2 = vec4(0.4,0.4,0.4,1.);\n    vec4 col_3 = vec4(0.2,0.2,0.2,1.);\n    vec3 baryV = vec3(1.-bary.x-bary.y, bary.x, bary.y);\n    vec4 color = baryV.x * col_1 + baryV.y * col_2 + baryV.z * col_3;\n    return color;\n}\n\n// draw logo\nvec2 bary(vec2 v1, vec2 v2, vec2 v3, vec2 p) {\n\tvec2 v1_2 = v2 - v1;\n    vec2 v1_3 = v3 - v1;\n    vec2 vp_1 = v1 - p;\n    \n    vec3 v_x = vec3(v1_2.x, v1_3.x, vp_1.x);\n    vec3 v_y = vec3(v1_2.y, v1_3.y, vp_1.y);\n    \n    vec3 u = cross(v_x, v_y);\n    \n    return vec2(u.x/u.z, u.y/u.z);\n}\n\nvec4 l_top(vec4 col, vec2 uv) {\n\tvec2 v1 = vec2(-0.02, 0.17);\n    vec2 v2 = vec2(-0.13, 0.02);\n    vec2 v3 = vec2(-.12, -0.03);\n    vec2 p = vec2(uv.x, uv.y);\n    \n    vec2 by = bary(v1,v2,v3,p);\n    if(by.x >= 0. && by.y >=0. && (by.x + by.y) <= 1.) {\n    \treturn getFragColor(by);\n    }\n    return col;\n    \n}\n\nvec4 l_center(vec4 col, vec2 uv) {\n\tvec2 v1 = vec2(-0.142, 0.06);\n    vec2 v2 = vec2(-0.14, -0.1);\n    vec2 v3 = vec2(-.08, -0.14);\n    vec2 p = vec2(uv.x, uv.y);\n    \n    vec2 by = bary(v1,v2,v3,p);\n    if(by.x >= 0. && by.y >=0. && (by.x + by.y) <= 1.) {\n    \treturn getFragColor(by);\n    }\n    return col;\n}\n\nvec4 l_bottom(vec4 col, vec2 uv) {\n\tvec2 v1 = vec2(-0.14, -0.1);\n    vec2 v2 = vec2(-0.05, -0.2);\n    vec2 v3 = vec2(0., -0.18);\n    vec2 p = vec2(uv.x, uv.y);\n    \n    vec2 by = bary(v1,v2,v3,p);\n    if(by.x >= 0. && by.y >=0. && (by.x + by.y) <= 1.) {\n    \treturn getFragColor(by);\n    }\n    return col;\n}\n\nvec4 r_bottom(vec4 col, vec2 uv) {\n\tvec2 v2 = vec2(-0.05, -0.2);\n    vec2 v3 = vec2(0.05, -0.2);\n    vec2 v1 = vec2(0.17, -0.07);\n    vec2 p = vec2(uv.x, uv.y);\n    vec2 by = bary(v1,v2,v3,p);\n    if(by.x >= 0. && by.y >=0. && (by.x + by.y) <= 1.) {\n    \treturn getFragColor(by);\n    }\n    return col;\n\n}\n\nvec4 r_center(vec4 col, vec2 uv) {\n\tvec2 v2 = vec2(.08, -0.1234);\n    vec2 v3 = vec2(0.14, -0.0872);\n    vec2 v1 = vec2(0.145, 0.08);\n    vec2 p = vec2(uv.x, uv.y);\n    vec2 by = bary(v1,v2,v3,p);\n    if(by.x >= 0. && by.y >=0. && (by.x + by.y) <= 1.) {\n    \treturn getFragColor(by);\n    }\n    return col;\n}\n\nvec4 r_top(vec4 col, vec2 uv) {\n\tvec2 v3 = vec2(.12, -0.02);\n    vec2 v2 = vec2(0.13, 0.03);\n    vec2 v1 = vec2(-0.05, 0.22);\n    vec2 p = vec2(uv.x, uv.y);\n    vec2 by = bary(v1,v2,v3,p);\n    if(by.x >= 0. && by.y >=0. && (by.x + by.y) <= 1.) {\n    \treturn getFragColor(by);\n    }\n    return col;\n}\n\n\nvec4 drawLogo(vec2 uv) {\n\tvec2 coord = uv;\n    coord.y -=0.1;\n    float l = smoothstep(R, OUTLINE,length(coord));\n    float mapCol = remap(-0.25, 0.2, 0.1, 0.3, coord.y);\n    vec4 col = mix(vec4(1.,1.,1.,1.), vec4(mapCol),l);\n    col = mix(vec4(0.2,0.2,0.2,1.), col, l);\n    col = l_top(col, coord);\n    col = l_center(col, coord);\n    col = l_bottom(col, coord);\n    col = r_top(col, coord);\n    col = r_center(col, coord);\n    col += r_bottom(col, coord);\n    \n    return col;\n}\n\nvec4 drawText(vec2 uv, vec4 col) {\n    // draw CocosCreator3D Text\n    float distC1 = letter(uv, vec2(-0.5, -.301), 0.04, 52.3);\n    float distO1 = min(distC1, circle(uv, vec2(-0.42, -.312), 0.027));\n    float distC2 = min(distO1, letter(uv, vec2(-0.34, -.312), 0.028, 52.3));\n    float distO2 = min(distC2, circle(uv, vec2(-0.27, -.315), 0.027));\n    float distS = min(distO2, letterS(uv));\n    float distC3 = min(distS, letter(uv, vec2(-0.115, -.305), 0.04, 52.3));\n    float distR1 = min(distC3, letterR(uv, vec2(-0.03, -.315)));\n    float distE = min(distR1, letterE(uv, vec2(0.02, -.317), 0.025,30.));\n    float distA = min(distE, letterA(uv, vec2(0.1, -.317), 0.025,30.));\n    float distT = min(distA, letterT(uv, vec2(0.18, -.335), 0.013,90.));\n    float distO3 = min(distT, circle(uv, vec2(0.245, -.323), 0.027));\n    float distR2 = min(distO3, letterR(uv, vec2(0.33, -.322)));\n    float dist3 = min(distR2, letter3(uv));\n    float distD = min(dist3, letterD(uv, vec2(0.43, -.314), 0.04,90.));\n    float outDist = distD;\n    float outlineCc = outline(outDist, .005);\n    col = mix(col, vec4(.9), outlineCc);\n    return col;\n}\n\n// main func\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec4 logo = drawLogo(uv);\n    vec4 col = drawText(uv, logo);\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}