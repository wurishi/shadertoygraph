{"ver":"0.1","info":{"id":"Xsyczc","date":"1685094954","viewed":57,"name":"Displacement test 2","username":"francoestrubia","description":"A rework of Endesga shader  to work with one texture on a ffgl.\nhttps://www.shadertoy.com/view/4lKSDz","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["displacement","chromatic","aberration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float AB_SCALE=0.95;\nfloat factor=0.25; //mixval, default 0.25\nfloat stepA=0.1; //0.2;\nfloat stepB=0.9; //2.0;\n\n    \nvec2 displace(vec2 uv, vec2 offset)\n{   \n  //float d = smoothstep(0.2,2.0,texture(iChannel1, (uv*1.0 - vec2(iTime /8.0,0)) + offset).r) * 0.25;\n    float d = smoothstep(stepA,stepB,texture(iChannel0,uv + offset).r) * factor;\n    \n    return vec2(d);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\t\n    const int samples = 10;\n\tconst float desplillValue = 0.1;\n\tfloat rad = 0.02;\n\t\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    \n\n    vec4 fg = texture(iChannel0,uv);\n\tvec4 bg = texture(iChannel0,-uv);\n    // bg.a = 0.0;\n    \n\t\n\t// Blurred image (using Box Blur from 4rknova ... thx !!!!)\n\tvec3 blurredImage = vec3(0.0);\n\t\t\n\tfor (int i = -samples; i < samples; i++)\n\t{\n\t\tfor (int j = -samples; j < samples; j++)\n\t\t{\n\t\t\tblurredImage += texture(iChannel0, uv + vec2(i, j) * (rad/float(samples))).xyz\n\t\t\t\t / pow(float(samples) * 2.0, 2.0);\n\t\t}\n\t}\n\t\n\t// Simple difference keying between Green and Red\n\tvec4 rawKey = vec4 (vec3(blurredImage[1]-blurredImage[0]),1.0);\n\t\n\t// Normalize Key (not auto-detected but tweaked manually)\n\tvec4 normalizeKey = clamp((1.0-(rawKey*10.0)),0.0,1.0);\n\n\t// Despill  (by clamping green channel by the red one).\n\tfg.g = clamp (fg.g, 0.0, fg.r-desplillValue);\n\n\n\tvec4 Keyer =(normalizeKey * fg)+((1.0-normalizeKey) * (bg.rgb,0.0));\n    vec3 Key3 =  vec3(Keyer.rgb);\n    \n    //_________________________________________________________\n    \n   \n \n    \n    vec2 dr = displace(uv, vec2(0   , 0.02) * AB_SCALE),\n         dg = displace(uv, vec2(0.01, 0.01) * AB_SCALE),\n         db = displace(uv, vec2(0.01, 0   ) * AB_SCALE);\n    \n    vec3 color = vec3(0);\n    color += vec3(1, 0, 0)*texture(iChannel0, uv - dr).r;\n    color += vec3(0, 1, 0)*texture(iChannel0, uv - dg).g;\n    color += vec3(0, 0, 1)*texture(iChannel0, uv - db).b;\n    \n    fragColor = vec4(color, 1.0)*(Keyer*1.6);\n    //fragColor = (normalizeKey * fg)+((1.0-normalizeKey) * (bg.rgb,0.0));\n}\n","name":"Image","description":"","type":"image"}]}