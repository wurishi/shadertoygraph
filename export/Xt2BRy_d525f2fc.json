{"ver":"0.1","info":{"id":"Xt2BRy","date":"1516305603","viewed":189,"name":"reciprocal distortion","username":"khlorghaal","description":"umu","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["distortion","lens"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv= fragCoord.xy / iResolution.xy;\n    uv-= .5;\n    float d= .5*(1.+cos(iTime));\n    uv= (length(uv)-d)*normalize(uv);\n    uv+= .5;\n\tfragColor= texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}