{"ver":"0.1","info":{"id":"3scXWM","date":"1572046155","viewed":105,"name":"Red and white spirals","username":"dyseterboy","description":"A useless shader designed to annoy people","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["music","spiral","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 circleMid = vec2(0, 0);\nfloat circleSize = 0.2;\n\nvec3 col = vec3(0,0,0);\n\nfloat hash1(uint n) \n{\n    // integer hash copied from Hugo Elias\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    return float( n & uvec3(0x7fffffffU))/float(0x7fffffff);\n}\n\nfloat lerpNoise(float value){\n    float val1 = hash1(uint(value))*20. + hash1(uint(value+200.));\n    float val2 = hash1(uint(value+1.))*20. + hash1(uint(value+201.));\n    float decimal = value - floor(value);\n    return (val1 + (val2 - val1)*decimal)/21.;\n}\n\nfloat getCircleRot(vec2 DistVec){\n    if (DistVec.y > 0.)\n    \treturn atan(DistVec.x / DistVec.y);\n    else\n        return atan(DistVec.x / DistVec.y) + 3.1415;\n}\n\nvec3 viewAnim(){\n    float time = iTime;\n    if (time < 1.3)\n        return vec3(time*0.8, 0., 0.);\n    if (time < 1.7)\n    {\n        time -= 1.3;\n        return vec3(0.8-time*2., 0., 0.);\n    }\n        \n    return vec3((lerpNoise(time*3.+30.)/20.+(sin(iTime)+1.)/4.), (lerpNoise(time*12.)-0.5)/20., (lerpNoise(time*11.+1000.)-0.5)/20.);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.y *= iResolution.y / iResolution.x;\n\n    float beatEffect = texture(iChannel0, vec2(iTime)).x;\n    \n\n    vec3 animState = viewAnim();\n    \n    float zoomOut = (sin(iTime/20.)+5.) / animState.x / 20.;\n    \n    circleSize = animState.x * zoomOut;\n    circleMid = animState.yz*beatEffect;\n    \n    vec2 circleDiff = circleMid - uv;\n    \n    float circleDist = length(circleDiff);\n    \n    float normCircleDist = circleDist / circleSize / zoomOut;\n    \n\tfloat normCircleRot = getCircleRot(circleDiff)+normCircleDist*animState.x*sin(iTime*2.)+cos(sqrt(normCircleDist+beatEffect/5.)*20.)/4.;\n    \n    \n    float circleDisplaced = normCircleDist*(sin(normCircleRot*10.-cos(iTime)*10.)+1.)/1.;\n\n    float fadeFactor = clamp(((clamp(circleDisplaced, 0.8*zoomOut, 1.2))-0.8*zoomOut)*5./zoomOut * (animState.x)+1., 0., 1.5);\n    \n    col = vec3(0.5+beatEffect/2.,1,1. - fadeFactor*0.2)*fadeFactor;\n    col.g = sin(normCircleRot*10.+sin(iTime)*10.)*lerpNoise(iTime*3.+30.) * clamp(normCircleDist, 0., 0.1)*10.;\n    \n    float clampBanding = clamp(circleDisplaced*sin((circleDist+iTime/3.)*20.)*(sin(iTime)+1.3)*12.0, 0., 3.)/3.;\n    vec2 bandCol = vec2(sin(normCircleDist*beatEffect*5.)*animState.x);\n    bandCol.x *= sin(iTime)/2. + 1. - sin(circleDisplaced);\n    col.gb = bandCol + clampBanding*(col.b - bandCol);// * fadeFactor;\n\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}