{"ver":"0.1","info":{"id":"lfXXz2","date":"1705443920","viewed":58,"name":"Aurora Cósmica","username":"Vicente","description":"En este código, he utilizado funciones como pow, sin, y cos para crear efectos más dinámicos.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["auroracosmica"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Efecto de onda\n    float wave = 0.5 + 0.5 * sin(uv.x * 10.0 + iTime * 2.0);\n\n    // Colores futuristas\n    vec3 baseColor = vec3(\n        0.5 + 0.5 * cos(wave * 5.0),\n        0.2 + 0.3 * sin(wave * 8.0),\n        0.6 + 0.4 * cos(wave * 3.0)\n    );\n\n    // Añadir efecto de destello de luz\n    float flare = pow(smoothstep(0.95, 1.0, wave), 2.0);\n    vec3 flareColor = vec3(1.0, 1.0, 0.8);\n    vec3 color = mix(baseColor, baseColor + flareColor * flare, flare);\n\n    // Añadir destellos de luz\n    float streaks = 0.2 * sin(uv.y * 50.0) * cos(iTime * 2.0);\n    vec3 streakColor = vec3(1.0, 0.8, 0.6);\n    color += streakColor * streaks;\n\n    // Salida del shader\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}