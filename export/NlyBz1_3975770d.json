{"ver":"0.1","info":{"id":"NlyBz1","date":"1663995760","viewed":48,"name":"Transformations - Gavin","username":"whereisgavin","description":"2D transformation utility","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","utility","transform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415927;\n\nmat2 rotation(float angle)\n{\n    return mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n}\nmat2 scale(float scale)\n{\n    return mat2(scale, 0.0, 0.0, scale);\n}\nmat2 scale(float x, float y)\n{\n    return mat2(x, 0.0, 0.0, y);\n}\nmat2 shear(float x, float y)\n{\n    return mat2(1.0, x, y, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Aspect Ration Scaled UV [-1.0 < y < 1.0]\n    vec2 uv = ( 2.* fragCoord - iResolution.xy ) / iResolution.y;\n    \n    //Transform\n    mat2 transform = rotation(iTime) * scale(sin(1.29 * iTime)+1.0);\n    vec2 translation = vec2 (cos(0.4* iTime),sin(0.4* iTime));\n    uv *= transform;\n    uv += translation;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*vec3(uv.x, uv.y, -1.0);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}