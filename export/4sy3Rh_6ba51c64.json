{"ver":"0.1","info":{"id":"4sy3Rh","date":"1453155705","viewed":327,"name":"Psycadelik","username":"Emil","description":"Kinda neat","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","abstract","flying"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float map(vec3 p){\n    vec3 pn = p;\n    p.x = mod(p.x, 3.0)-1.5;\n    p.z = mod(p.z*0.2+p.x, 3.0)-1.5;\n    p.y += (pn.x*sin(iTime*0.2))*0.2;\n    \n    return length(p) - 1.5*abs(cos(iTime*0.2))+0.7*sin(pn.x*pn.z*0.000001);// - 1.0+(0.12*sin(p.x*(cos(iTime))*p.y*15.0+iTime*15.0)) ;\n}\n\nfloat trace(vec3 o, vec3 r){\n    float t = 0.0;\n    for (int i = 0; i < 32; i++){ \n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d * 0.8;\n    }\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv*2.0 -1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv.y = abs(uv.y-0.1);\n    uv.x = abs(uv.x-0.1);\n    \n    \n    vec3 r = normalize(vec3(uv+vec2(0.0,-0.05*cos(iTime*1.0)), 1.0));\n    vec3 o = vec3(2.0,-10.0+13.0*cos(iTime*0.2),-1.0+iTime*30.0);\n    \n    \n    float t = trace(o,r);\n    float fog = 1.0 / (0.0 + t * t * 0.002);\n    vec3 fc = 1.0/vec3(t/20.0)+fog;\n    \n\tfragColor = vec4(abs(fc*0.8*vec3(1.2,0.3,cos(iTime*0.2))-0.1),1.0);\n}","name":"","description":"","type":"image"}]}