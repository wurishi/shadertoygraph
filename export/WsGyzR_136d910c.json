{"ver":"0.1","info":{"id":"WsGyzR","date":"1602062772","viewed":110,"name":"Voronoi Simple","username":"treize","description":"Simple","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 voronoi_noise_randomVector(vec2 UV, vec2 offset)\n{\n\tmat2 m = mat2(15.27, 47.63, 99.41, 89.98);\n\tUV = fract(sin(UV* m) * 46839.32);\n\treturn vec2(sin(UV.y * +offset.x) * 0.5 + 0.5, cos(UV.x * offset.y) * 0.5 + 0.5);\n}\n\nvoid SimpleVoronoi(vec2 UV, vec2 AngleOffset, vec2 CellDensity, out float Out, out float Cells)\n{\n\tvec2 g = floor(UV * CellDensity);\n\tvec2 f = fract(UV * CellDensity);\n\t\n\tfloat res = 8.0;\n\tfloat md=8.0;\n\tfor (int y = -1; y <= 1; y++)\n \t{\n\t    for (int x = -1; x <= 1; x++)\n\t\t{\n\t\t    vec2 lattice = vec2(x, y);\n            vec2 offset = voronoi_noise_randomVector(lattice + g, AngleOffset);\n            vec2 r = lattice +offset -f;\n\t\t    float d = dot(r,r);\n\n\t\t\tif (d < res)\n\t\t\t{\n                res = d;\n\t\t\t \tOut = res;\n\t\t\t    Cells = offset.x;\n\t\t\t}\n\t\t}\n\t}\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv =  ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n\n\tvec3 col;\n    float a,b;\n\tSimpleVoronoi(uv,vec2(14.0),vec2(7.0),a,b);\n    col=vec3(b);\n    col.r-=a;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}