{"ver":"0.1","info":{"id":"Ms3GWH","date":"1449260370","viewed":668,"name":"Clock (anastadunbar)","username":"anastadunbar","description":"This is a clock. I spend time on the tick lines around the clock making it linear and not distorted. I was actually going to make clocks inside clock as the tick lines but maybe later. But actually I did it here: http://pastebin.com/CkEK7PBk","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","time","clock","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHARPNESS 450.\n\nfloat PI = 3.141592653589793238462;\n#define clamps(x) clamp(x,0.,1.)\nvec2 rotation(in float angle,in vec2 position) //Rotation (Not by me but edited it)\n{\n    float rot = radians(angle*360.);\n    mat2 rotation = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n    return vec2(position*rotation);\n}\nfloat distshape(vec2 uv, float sides) { //http://patriciogonzalezvivo.com/2015/thebookofshaders/07/\n    float angle = atan(uv.x,uv.y)+PI;\n    float r = (PI*2.)/sides;\n    return cos(floor(.5+angle/r)*r-angle)*length(uv);\n}\nfloat distanceToSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    //Iq's function (I use this for smooth lines)\n\tvec2 pa = p-a;\n\tvec2 ba = b-a;\n\tfloat h = clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0);\n\treturn length( pa - ba*h );\n}\nvec2 cossin(float a) //Circle\n{\n\treturn vec2(-sin(a*2.*PI),cos(a*2.*PI));\n}\n\n//Clock drawing function\nfloat clock(vec2 suv,float sharp) {\n    float atans = (atan(suv.x,suv.y)+PI)/(PI*2.); //Degrees in 0 to 1\n    float drawing = clamps(1.-((length(suv)-0.45)*sharp)); //Make circle\n    drawing -= clamps(1.-((length(suv)-0.4)*sharp)); //Remove inner\n    drawing += clamps(1.-((length(suv)-0.01)*sharp)); //Middle joint circle\n    //Set thickness\n    float dist = 0.35;\n    //Second hand\n    drawing += clamps(1.-((distanceToSegment(suv,vec2(0.),cossin(-(iDate.w/60.))*dist)-0.002)*sharp));\n    //Thin thickness\n    dist -= 0.05;\n    //Minute hand\n    drawing += clamps(1.-((distanceToSegment(suv,vec2(0.),cossin(-(iDate.w/3600.))*dist)-0.003)*sharp));\n    //Thin thickness\n    dist -= 0.05;\n    //Hour hand\n    drawing += clamps(1.-((distanceToSegment(suv,vec2(0.),cossin(-(iDate.w/43200.))*dist)-0.005)*sharp));\n    //5 minutes lines\n    //float ats = fract((atans*12.)-.5)-0.5;\n    float sides = 12.;\n    float a1 = floor((atans*sides)-.5)/sides;\n    float ats = rotation(a1+(1./sides),suv*sides).x*.1;\n\tfloat ats2 = distshape(suv,sides);    \n    drawing += clamps(1.-((distanceToSegment(vec2(ats,ats2),vec2(0.,0.30),vec2(0.,0.37))-0.003)*sharp));\n    //Secounds lines\n    sides = 12.*5.;\n    a1 = floor((atans*sides)-.5)/sides;\n    ats = rotation(a1+(1./sides),suv*sides).x*.02;\n\tats2 = distshape(suv,sides);    \n    float ats3 = step((1./12.)*2.,fract((atans*12.)+(1./12.)));\n    if (ats3 == 1.) { //Do not draw on 5 minutes lines.\n    drawing += clamps(1.-((distanceToSegment(vec2(ats,ats2),vec2(0.,0.35),vec2(0.,0.37))-0.003)*sharp));\n    }\n    return clamps(drawing);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color1 = vec3(1.1,1.04-((1.-uv.y)*.05),1.-((1.-uv.y)*.1));\n\tvec3 color2 = vec3(1.,0.2,.3);\n    vec2 suv = vec2(((uv.x-0.5)*(iResolution.x / iResolution.y))+0.5,uv.y)-.5; //I subtracted with -.5 so it'll be easier.\n\tfloat shadow = clamps(clock(suv+vec2(0.,0.01),90.)-clock(suv,SHARPNESS));\n\tfragColor = vec4(mix(color1,color2,clock(suv,SHARPNESS))-(shadow*.2),1.0);\n}","name":"Image","description":"","type":"image"}]}