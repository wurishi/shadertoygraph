{"ver":"0.1","info":{"id":"3tf3R4","date":"1555696657","viewed":1245,"name":"buf test r58127","username":"avin","description":"My first attempt to use buffers :)\nThanks a lot to @FabriceNeyret2 for his tutorial\nhttps://shadertoyunofficial.wordpress.com/2016/07/20/special-shadertoy-features/","likes":10,"published":3,"flags":32,"usePreview":0,"tags":["study","learn","buffers","buf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 backCol = texture(iChannel0, uv).rgb;\n    \n    \n    uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    float t = iTime*2.;\n    uv += vec2(sin(t), cos(t))*.3;    \n    \n    float d = 0.05/length(uv);\n    float m = smoothstep(.06, .05, d);            \n       \n    vec3 col = backCol + vec3(1.)*d;\n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define hue(h) clamp( abs( fract(h + vec4(3,2,1,0)/3.) * 6. - 3.) -1. , 0., 1.)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy;    \n    \n    uv = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    \n    float t = iTime*2.;\n    uv += vec2(sin(t), cos(t))*.3;    \n    \n    float d = length(uv);\n    float m = smoothstep(.11 + (sin(iTime*.5)*.5+.5)*.1, .10, d);            \n       \n    vec3 col = hue(iTime).xyz * m;\n        \n    fragColor = vec4(col,1.0);\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;     \n    \n    vec3 col = texture(iChannel1, uv).rgb * .98;\n            \n    if(mod(float(iFrame), 12.) == 0.){\n    \tcol += texture(iChannel0, uv).rgb;\t\n    }        \n    \n    fragColor = vec4(col,1.0);\n}","name":"Buf B","description":"","type":"buffer"}]}