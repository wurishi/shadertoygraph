{"ver":"0.1","info":{"id":"XscSzs","date":"1460767008","viewed":300,"name":"BoxZoom","username":"dila","description":"It's not perfect, but I think it's quite a convincing effect. Let me know what you think :)","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( vec3 p, vec3 b )\n{\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) +\n         length(max(d,0.0));\n}\n\nfloat map(vec3 p)\n{\n    float outside = sdBox(p, vec3(1.0));\n    float inside = sdBox(p, vec3(0.9));\n    float w = 0.7;\n    float hole = sdBox(p, vec3(w, w, 1.5));\n    hole = min(hole, sdBox(p, vec3(w, 1.5, w)));\n    hole = min(hole, sdBox(p, vec3(1.5, w, w)));\n\treturn max(max(outside, -inside), -hole);\n}\n\nvec3 normal(vec3 p)\n{\n\tvec3 o = vec3(0.01, 0.0, 0.0);\n    return normalize(vec3(map(p+o.xyy) - map(p-o.xyy),\n                          map(p+o.yxy) - map(p-o.yxy),\n                          map(p+o.yyx) - map(p-o.yyx)));\n}\n\nfloat trace(vec3 o, vec3 r)\n{\n    float t = 0.0;\n    for (int i = 0; i < 32; ++i) {\n        vec3 p = o + r * t;\n        float d = map(p);\n        t += d;\n    }\n\treturn t;\n}\n\nmat2 rot(float t)\n{\n \treturn mat2(cos(t), sin(t), -sin(t), cos(t)); \n}\n\nvec3 tex(vec3 p)\n{\n    vec3 ta = texture(iChannel0, p.yz).xyz;\n    vec3 tb = texture(iChannel0, p.xz).xyz;\n    vec3 tc = texture(iChannel0, p.xy).xyz;\n    return (ta*ta + tb*tb + tc*tc) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float mt = 1000.0;\n    vec3 fs = vec3(0.0);\n    \n    for (int i = 0; i < 6; ++i) {\n    \n        float fi = float(i) / 6.0;\n        \n        float it = pow(fract(iTime * 0.125 + fi), 2.5);\n        \n        float ra = mix(2.0, 0.0, 1.0 - pow(1.0 - it, 12.0));\n        float as = mod(float(i), 2.0) * 2.0 - 1.0;\n        \n        mat2 k = rot(as * ra);\n        mat2 l = rot(as * ra + as * iTime);\n        \n    \tvec3 r = normalize(vec3(uv, it * 4.0));\n  \t\tr.xz *= k;\n        r.yz *= k;\n        r.xy *= l;\n        \n        vec3 o = vec3(0.0, 0.0, -2.0 - it * 0.05);\n        o.xz *= k;\n        o.yz *= k;\n        o.xy *= l;\n\n        float t = trace(o, r);\n        \n        if (t < mt)\n        {\n            mt = t;\n            \n            vec3 w = o + r * t;\n\n            vec3 n = normal(w);\n\n            float s = max(dot(r, -n), 0.0);\n            \n            vec3 rf = reflect(r, n);\n            \n            vec3 rt = texture(iChannel1, r).xyz;\n\n            float fog = s / (1.0 + t * t * 0.01) * pow(it, 0.5);\n            \n            vec3 lit = vec3(1.0, 1.0, 1.0) * abs(n.y);\n\n            fs = tex(w) * s * fog + rt * (1.0 - s) * lit;\n        }\n    }\n    \n    vec3 bg = vec3(0.0);\n    \n    for (int i = 0; i < 4; ++i) {\n        float fi = float(i) / 4.0;\n        float ds = fract(-iTime + fi);\n    \tvec3 r = normalize(vec3(uv * vec2(1.0,-1.0), ds));\n        vec3 tc = texture(iChannel1, r).xyz;\n        bg += tc * tc * (1.0 - ds) * ds * 4.0;\n    }\n    \n    if (mt > 5.0) {\n\t\tfs = bg;\n    }\n\n\tfragColor = vec4(sqrt(fs), 1.0);\n}","name":"Image","description":"","type":"image"}]}