{"ver":"0.1","info":{"id":"mdjXz3","date":"1670662718","viewed":95,"name":"ychen_grid_leafColorChange","username":"ychen","description":"curve","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Hash21(vec2 p){\n    p = fract(p*vec2(234.34,435.345));\n    p += dot(p, p+34.23);\n    return fract(p.x*p.y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;//change starting point to center\n    //uv += iTime*.2;//move with time\n    uv *= 10.;\n    vec3 col = vec3(0);\n    vec2 gv = fract(uv)-.5;//grid uv; fract(x)= x - floor(x);-.5 move to center\n    vec2 id = floor(uv);\n    //col.rg = gv;\n    \n    float n = Hash21(id);//random number between 0 and 1\n    \n    \n    //float mask = abs(gv.x +gv.y);\n    float width = .1;\n    if(n<.5) gv.x*= -1.;//reverse direction\n    float d = abs(abs(gv.x +gv.y)-.5);\n    \n    /*\n    d = length(gv-vec2(.5))-.5;// length(vec):the distance to center\n    float mask = smoothstep(.01, -.01, abs(d)-width);//-width,thickness,diagonal gradient smoothstep(min,max,x)\n    //duplicate reversed curves\n    d = length(gv-vec2(-.5))-.5;\n    mask += smoothstep(.01, -.01, abs(d)-width);\n    */\n    \n    //alternative of above curves\n    \n    vec2 cUv = gv - sign(gv.x-gv.y+.001)*.5;//sign(gv.x-gv.y)=>half 0 half 1, try to calculate to -.5&.5\n    d = length(cUv-.9);\n    float mask = smoothstep(.01, -.01, abs(d)-width);//-width,thickness,diagonal gradient smoothstep(min,max,x)\n    float angle = atan(cUv.x,cUv.y);//-pi to pi\n   \n   float checker = mod(id.x+id.y,2.)*2.-1.;\n   float flow = sin(iTime*.5-checker*angle*10.);\n   \n   \n   //float x = fract(angle/1.57);//x/(pi/2)\n   \n   col.g += flow*mask;\n   col.gb += n;\n   //col+= checker;\n   \n\n   \n   //if(gv.x>.48||gv.y>.48) col = vec3(.5,.5,.8);//draw grid\n    fragColor = vec4(col,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}