{"ver":"0.1","info":{"id":"Xcc3WM","date":"1711733877","viewed":21,"name":"Proj3-med","username":"coltonmo","description":"Project 3 medium shader","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["school"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r){\n    \n    float d = length(uv-p);\n    float c = smoothstep(r, r, d);\n    \n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    // Gradient colors\n    vec3 teal = vec3(0.0, 0.5, 0.5);\n    vec3 orange = vec3(1.0, 0.64, 0.0);\n\n    // Gradient direction\n    vec2 gradientDir = normalize(vec2(1.0, 1.0));\n\n    // Calculate gradient factor\n    float gradientFactor = dot(uv, gradientDir);\n\n    // Interpolate between colors\n    vec3 gradientColor = mix(teal, orange, gradientFactor);\n        \n    vec3 col = vec3(1.0);\n    \n    float inRadius = 1.1 - 0.3 * iTime;\n    float outRadius = 1.0 - 0.3 * iTime;\n    \n    float mask = Circle(uv, vec2(0.0), outRadius);\n    mask -= Circle(uv, vec2(0.0), inRadius);\n\n    col = gradientColor - mask;\n    fragColor = vec4(col, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}