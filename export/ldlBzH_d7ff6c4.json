{"ver":"0.1","info":{"id":"ldlBzH","date":"1494920584","viewed":110,"name":"paints drops","username":"Torumu106","description":"Please wait 21seconds to rotate.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shader2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 r = 2.0 * vec2(uv.x - 0.5, uv.y - 0.5);\n    r.x *= iResolution.x / iResolution.y;\n    r.y *= sin(r.x * 6.0 + 1.0) / 4.0 + sin(r.x * 11.0 + 2.0) / 4.0 + 2.0;\n    //r.x *= abs(sin(r.y * 3.0 + 1.0) / 4.0 + sin(r.y * 5.0 - 2.0) / 4.0) + 1.0;\n    //r.y *= sin(r.x * 4.0 - 1.0) / 4.0 + sin(r.x * 9.0 + 2.0) / 4.0 + 1.0;\n    \n    //rotate\n    const float RotateTime = 21.0;\n    if(iTime >= RotateTime){\n        float the = (3.0 - length(r)) * (iTime - RotateTime) / 10.0;\n    \tr.xy *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    }\n    \n    vec3 ret = vec3(0.0, 0.0, 0.0);\n    \n    float x[3] = float[](-1.2, 0.9, 0.0);\n    float y[3] = float[](-0.9, 0.0, 0.8);\n    vec3 cols[3] = vec3[](vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0));\n    float dis = 10.0;\n        \n    for(int i = 0; i < 3; i++){\n        float disi = length(r - vec2(x[i], y[i])) ;\n        if(disi <= iTime * 0.1 && disi < dis){\n        \tret = cols[i];\n            dis = disi;\n        }\n    }\n    \n\tfragColor = vec4(ret,1.0);\n}","name":"Image","description":"","type":"image"}]}