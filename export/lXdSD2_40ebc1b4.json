{"ver":"0.1","info":{"id":"lXdSD2","date":"1719624836","viewed":57,"name":"chromatic singularity","username":"pb","description":"another attempt at poking around 4d for something new","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["4d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//logic taken from gaz: https://www.shadertoy.com/view/ftKBzt\n//and made more verbose and tweaked\n\n#define rot(x) mat2(cos(x+vec4(0,11,33,0)))\n\n//Rodrigues-Euler axis angle rotation\n#define ROT(p,axis,t) mix(axis*dot(p,axis),p,cos(t))+sin(t)*cross(p,axis)\n\n//formula for creating colors;\n#define H(h,d)  (  cos(  h + vec3(30,1,3)   )*.8   )\n\n//formula for mapping scale factor \n#define M(c)  2.*log(1.+c)\n\n#define R iResolution\n\n\nvoid mainImage( out vec4 O, vec2 U) {\n  \n    O = vec4(0);\n    \n    vec3 c=vec3(0);\n    vec4 rd = normalize( vec4(U-.5*R.xy, R.y, R.y))*400.;  //4d ray\n    \n    float sc,dotp,totdist=0., t=.5; //iTime/2.;\n    \n    for (float i=0.; i<200.; i++) {\n        \n        vec4 p = vec4( rd*totdist);\n        \n      \n        p.xyz += vec3(0,0,-.2);       \n        p.yzw = ROT(p.xyz, normalize( vec3(sin(t/2.), sin(t), cos(t/3.) )  ),t);\n        \n        p.yz *= rot(iTime/2.);\n        \n        sc = 1.;  //scale factor\n        \n        \n        for (float j=0.; j<7.; j++) {\n                \n            p = abs(p)*.7;\n            \n            dotp = max(1./dot(p,p),.1);\n            sc *= dotp*4. ;\n          \n            p.xyz += length(p.xyz)<length(p.yzw)?\n                cross(p.xyz,p.yzw)/dot(p.xyz,p.xyz)\n                :cross(p.zyx,p.wzy)/dot(p.yzw,p.yzw) ;  \n                \n            p = abs(p) * dotp  - .6  ;\n        }\n         \n        float dist = abs( length(p)-.2)/sc ;  //funky distance estimate\n        float stepsize = dist/6. + 1e-6 ;     \n        totdist += stepsize;              //move the distance along rd\n        \n        //accumulate color, fading with distance and iteration count\n        c += mix( vec3(1), H(M(sc),id),.8) *.01*  exp(-i*i*stepsize*stepsize*1e5);\n    }\n    \n    //c*=c;\n    c = clamp(c,0.,1.);\n    c = 1. - exp(-c);\n    O = ( vec4(c,0) );\n               \n}","name":"Image","description":"","type":"image"}]}