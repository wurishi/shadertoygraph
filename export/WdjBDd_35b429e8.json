{"ver":"0.1","info":{"id":"WdjBDd","date":"1591149117","viewed":103,"name":"polar coordinates, animation tex","username":"ligaobo","description":"用于研究极坐标的使用","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["texture2d","polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = float(3.14159265359);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / (iResolution.y);\n    \n    float r = 1.0;\n    float z = -sqrt(max(r * r - dot(p, p), 0.0));\n\t//uv.x ∈ [1, 0]. uv.y ∈ [1.0, 0.0] (x从左至右；y从下至上)\n    //uv = vec2(1.0 + atan(z, p.x) / PI, 0.5 + asin(p.y) / PI);\n    p *= 2.0;\n\n    if(p.x < 0.0)\n    {\n        if(p.y > 0.0)\n        {\n            vec2 q = p - vec2(-1.0, 1.0);\n            float theta = atan(q.x, q.y);\n            theta += sin(pow(length(q), 3.0) * 15.0 - iTime * 3.0) * 0.5;\n\n            float veins = sin(theta * 20.0) * 0.5 + 0.5;\n            veins *= veins;\n            veins *= (sin(theta * 13.0) * 0.5 + 0.5);\n            veins *= smoothstep( 0.0, 0.2, length(uv.xy - 0.5));\n            veins *= veins;\n            veins *= 0.5;\n            fragColor = vec4(veins); return;\n        }\n        else\n        {\n            vec2 q = p - vec2(-1.0, -1.0);\n            float qLen = length(q);\n            float theta = atan(q.y, q.x);\n            \n            float mode = mod(iTime, 10.0);\n            if(mode < 2.0)\n            {\n                float sfunc = 0.5 +(sin(theta * 14.0) * 2.0);\n                fragColor = vec4(sfunc); return;\n            }\n            else if(mode < 4.0)\n            {\n                float sfunc = 0.5 + 0.05*exp(sin(theta * 14.0) * 2.0);\n                fragColor = vec4(sfunc); return;\n            }\n            else if(mode < 6.0)\n            {\n                float sfunc = 0.5 + 0.05*exp(sin(theta * 14.0) * 2.0);\n                float shape = 1. - smoothstep(sfunc, sfunc + 0.1, qLen);\n                fragColor = vec4(shape); return;\n            }\n            else if(mode < 10.0)\n            {\n                float sfunc = 0.5 + 0.05*exp(sin(theta * 14.0) * 2.0);\n                float shape = 1. - smoothstep(sfunc, sfunc + 0.1, qLen);\n                fragColor = texture(iChannel0, vec2(shape, qLen)); return;\n            }\n        }\n    }\n    else\n    {\n        if(p.y > 0.0)\n        {\n            vec2 q = p - vec2(1.0, 1.0);\n            q *= 0.8;\n            float qLen = length(q);\n            float theta = atan(q.y, q.x) - iTime;\n\n            q = qLen * vec2(cos(theta), sin(theta));\n\t        float sfunc = 0.01 * exp(sin(atan(q.y, q.x) * 10.) * 0.5);\n\n            fragColor = texture(iChannel2, vec2(sfunc * (10.0 * sin(iTime * 0.5) + 22.0), qLen));\n        }\n        \n    }\n}\n","name":"Image","description":"","type":"image"}]}