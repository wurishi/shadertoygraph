{"ver":"0.1","info":{"id":"7sBcR3","date":"1643842411","viewed":64,"name":"Orbiting circle","username":"hamberge","description":"Learning shaders.  Made a circle moving around in a circle (probably an ellipse actually).","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner","circle","circularmotion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pow2(vec3 invec3)\n{\n    return vec3(pow(invec3.x, 2.), pow(invec3.y, 2.), pow(invec3.z, 2.));\n}\n\nvec2 circlepos(vec2 inpos)\n{\n    return vec2(sqrt(1. - pow(inpos.y, 2.)), sqrt(1.-pow(inpos.x, 2.)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float csize = 5.;\n    float xoffset = .1;\n    float yoffset = -3.;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 cuv = (uv - .5) * 2.;\n    vec2 scaledcuv = cuv * csize;\n    \n    vec2 offsetscaledcuv = vec2(scaledcuv.x + sin(iTime), scaledcuv.y + sin(iTime+1.57));\n\n    float circle = pow(offsetscaledcuv.x*iResolution.x/iResolution.y, 2.0) + pow(offsetscaledcuv.y, 2.0);\n    \n    float smoothcircle = smoothstep(.9, .921, circle);\n    \n    vec3 col = vec3(smoothcircle);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}