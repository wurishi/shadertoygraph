{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define R2D(a) mat2( cos( a + vec4(0,11,33,0 )))\n\nmat3 rotate3D(float angle, vec3 axis){\n    vec3 a = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float r = 1.0 - c;\n    return mat3(\n        a.x * a.x * r + c,\n        a.y * a.x * r + a.z * s,\n        a.z * a.x * r - a.y * s,\n        a.x * a.y * r - a.z * s,\n        a.y * a.y * r + c,\n        a.z * a.y * r + a.x * s,\n        a.x * a.z * r + a.y * s,\n        a.y * a.z * r - a.x * s,\n        a.z * a.z * r + c\n    );\n}\n\nvoid mainImage( out vec4 o, in vec2 FC )\n{\nfloat i,j,d=4.,e,t=iTime; vec3 p,q=vec3(-2,0,1),r=iResolution;\no=vec4(0.);\n\nfor(i=0.;i++<64.&&d>1e-4;){\n    p=vec3((FC.xy-.5*r.xy)/r.y,1);\n    p.xz*=R2D(t*.3);\n    \n    for(j=0.;j++<24.;)\n        p=abs(p*rotate3D(dot(p,p),q-.3))-.01,\n        d=min(max(p.x,p.y), p.z)/d,\n        d-=dot(p,q)/1e4;\n        \n    e+=d;\n    \n}o+=vec4(sqrt(p),1)*3./i;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"43tyW8","date":"1735011162","viewed":47,"name":"Recyclic absorption","username":"zadgy5534","description":"Forms coming up and spreading away","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sqrt","2drotation","3drotation"],"hasliked":0,"parentid":"","parentname":""}}