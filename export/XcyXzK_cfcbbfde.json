{"ver":"0.1","info":{"id":"XcyXzK","date":"1715421073","viewed":35,"name":"spooky palette","username":"i1abnrk","description":"experiments with time and mouse and gradients, try clicking a corner","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mouse","texture","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*this was just a first experiment with the language, mostly hacked together by google searching\nand lucky guesses. WTFPL- just do what you want.*/\n\nfloat invexp = 1.0 / exp(1.0);//e^-1\nfloat sharper = pow(2.0, pow(12.0,-1.0));//half-step on the chromatic scale\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 tex = texture(iChannel0,vec2(fract(uv.x+(iTime/14.0)),fract(uv.y+(iTime/-10.0))));\n    // Time varying pixel color, scroll speed\n    \n    vec3 col = invexp * cos(iTime+uv.xyx+mix(tex.rgb,vec3(sharper,pow(sharper,4.0),pow(sharper,7.0)),invexp));\n    \n    float ticker = sin(3.14 * float((int(floor(iTime))%24)/12));//roughly circular color phase\n    \n    vec3 ramp = vec3(iMouse.x/iResolution.x, iMouse.y/iResolution.y, ticker);\n    //changes color (blue channel) by time unless you click somewhere (red-green)\n    \n    float spear = dot(normalize(tex.rgb), normalize(ramp));\n    //probably always 1 idk\n   \n    // Output to screen\n    fragColor = vec4(col+ramp, spear);\n}","name":"Image","description":"","type":"image"}]}