{"ver":"0.1","info":{"id":"XtXXR8","date":"1434249084","viewed":300,"name":"RayCast rehabilitation","username":"gyabo","description":"rehabilitation...","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["rehabilitation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define REP  256\n#define STEP 0.125\n\nvec2 rot(vec2 p, float a) {\n\treturn vec2(\n\t\tp.x * cos(a) - p.y * sin(a),\n\t\tp.x * sin(a) + p.y * cos(a));\n}\n\nvec3 toCol(float t) {\n\tvec3 col = vec3(0.0);\n\tcol.r += 0.1;\n\tif(t < 0.3)  col.r += 1.5;\n\tif(t < 0.5)  col.g += 1.2;\n\tif(t < 0.7)  col.b += 1.0;\n\treturn vec3(col);\n}\n\nfloat map(vec3 p) { return abs(cos(p.x * 0.9) + sin(p.y * 0.9) + cos(p.z * 0.9)); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float time = iTime;\n\tvec2 uv   = -1.0 + 2.0 * (  fragCoord.xy / iResolution.xy );\n\tuv.x     *= iResolution.x / iResolution.y;\n\tvec3 dir  = normalize(vec3(uv, 0.5 + sin(time) * 0.2));\n\tdir.yz    = rot(dir.yz, time * 0.03);\n\tdir.xy    = rot(dir.xy, time * 0.05);\n\tvec3 pos  = vec3(time, 0, time * 5.0);\n\tfloat d   = 0.0;\n\tvec3 col  = vec3(0.0);\n\tfor(int i = 0 ; i < REP; i++) {\n\t\tfloat temp = map(pos + dir * d);\n\t\tcol += toCol(temp);\n\t\td   += STEP;\n\t}\n\tcol *= 0.007;\n\tcol = pow(col, vec3(2.2));\n\tfragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}