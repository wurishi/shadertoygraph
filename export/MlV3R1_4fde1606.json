{"ver":"0.1","info":{"id":"MlV3R1","date":"1473311971","viewed":3387,"name":"Banding and dithering","username":"Reedbeta","description":"Demonstrates 8-bit gradient banding (left) and how it can be corrected with dithering (right).","likes":23,"published":3,"flags":0,"usePreview":1,"tags":["2d","banding","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Create a gradient that will show banding\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float gray = mix(0.30, 0.22,\n                 .5 + dot(uv - .5, vec2(sin(iTime), 1.0)));\n\tfragColor = vec4(gray,gray,gray,1.0);\n    \n    // Right half of the screen gets dithering\n    if (uv.x > .5)\n    {\n        // Look up noise from texture\n        float noise = texture(iChannel0,\n                      fragCoord.xy/iChannelResolution[0].xy).r;\n\n        fragColor.rgb += mix(-0.5/255.0, 0.5/255.0, noise);\n    }\n}\n","name":"Image","description":"","type":"image"}]}