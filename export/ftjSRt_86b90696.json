{"ver":"0.1","info":{"id":"ftjSRt","date":"1628376988","viewed":51,"name":"Rounded Square - ifurkend","username":"ifurkend","description":"How to implement softmax/argmax on ShaderToy?","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 c, in vec2 u )\n{\n    u /= iResolution.xy;\n    u = abs(u * 2. - 1.);\n    u.x *= max(iResolution.x,iResolution.y)/min(iResolution.x,iResolution.y);\n    u *= cos(iTime*.33)*6.+7.;\n    vec2 g = floor(u);\n    u = fract(u);\n    u.x = fract(g.x*.5)==0.?u.x:1.-u.x;\n    u.y = fract(g.y*.5)==0.?u.y:1.-u.y;\n    u *= 1.13;\n    \n    //rounded corner radius:\n    float r = sin(iTime)*.5+.5;\n    \n    float oor  = 1./r;\n    float omr  = 1.-r;\n    float cir  = length(u*oor-oor+1.);\n    float rec1 = max(u.x/omr,u.y);\n    float rec2 = max(u.y/omr,u.x);\n    float rec  = min(rec1,rec2);\n    float less = min(cir,rec);\n    float rs   = less > 1.? 0.:1.;\n\n    c = vec4(1.-rs,rec,cir,1.);\n}","name":"Image","description":"","type":"image"}]}