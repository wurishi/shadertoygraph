{"ver":"0.1","info":{"id":"3dtczH","date":"1600396966","viewed":604,"name":"simple UV bending","username":"meteotrix","description":"I made another shader a while back to bend UVs using orthographic projection onto the inside of a cylinder and whatnot. That was silly, surely I could do simpler x). Well there, it's simpler now :D","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["uv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 x_range = vec2(-1,1);\n    \n    uv.x = mix(x_range.x, x_range.y, uv.x);\n    uv.y -= cos(uv.x) * cos(iTime);\n    \n    vec3 col = texture(iChannel0, uv).rrr;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}