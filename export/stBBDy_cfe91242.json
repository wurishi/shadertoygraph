{"ver":"0.1","info":{"id":"stBBDy","date":"1662606352","viewed":92,"name":"circle wave s","username":"pumpjam","description":"circle wave","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C_R 0.5\n#define SUB 4\n#define BARS 24.\n#define gap 24.\n#define radius .8\n\nconst float pi = 3.14159265358979323;\n\nfloat drawCurve(vec2 uv, float freq) {\n    return sin(freq * 2. * pi * uv.x + iTime) / (float(SUB) * 3.);\n}\n\nfloat drawWave(vec2 st) {\n    float r = 0.;\n    for (int i = 0; i < SUB; i++) {\n        r += drawCurve(st, float(i) + sin(iTime));\n    }\n    return r;\n}\n\nvec2 convertPolar (vec2 uv) {\n    uv -= 0.5;\n    uv *= 2.;\n    return vec2(atan(uv.y, uv.x), length(uv));\n}\n\nfloat drawRect(vec2 uv) {\n    float w = 1. / BARS;\n    float factor = step(w - mod(uv.x, w), (gap / iResolution.x));\n    return (1. - factor) * drawWave(vec2(floor(uv.x * BARS) / BARS, 0.)) / 2.;\n}\n\nvec3 grab(vec2 st, vec3 bg_c, vec3 w_c, vec3 r_c) {\n    float r = drawWave(st) + C_R;\n\n    float d = distance(st, vec2(st.x, r));\n    float factor = step(r, st.y) * step(C_R, st.y);\n    vec3 col = mix(w_c, bg_c, pow(d / radius * 4., 0.3)) * factor + (1. - factor) * bg_c;\n\n    factor = step(C_R, st.y) * step(st.y, r);\n    col = w_c * factor + (1. - factor) * col;\n\n    float h = drawRect(st) + C_R;\n    d = distance(st, vec2(st.x, h));\n    factor = step(st.y, C_R);\n    col = mix(r_c, bg_c, pow(d / radius * 4., 0.3)) * factor + (1. - factor) * col;\n    factor = step(st.y, C_R) * step(h, st.y);\n    col = r_c * factor + (1. - factor) * col;\n\n    return col;\n}\n\nvec3 rainbow(float level)\n{\n\tfloat r = float(level <= 2.0) + float(level > 4.0) * 0.5;\n\tfloat g = max(1.0 - abs(level - 2.0) * 0.5, 0.0);\n\tfloat b = (1.0 - (level - 4.0) * 0.5) * float(level >= 4.0);\n\treturn vec3(r, g, b);\n}\n\nvec3 grabColor(float x) {\n    float level1 = floor(x*6.0);\n    float level2 = min(6.0, floor(x*6.0) + 1.0);\n    \n    vec3 a = rainbow(mod(level1, 6.));\n    vec3 b = rainbow(mod(level2, 6.));\n    \n    return mix(a, b, fract(x*6.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = convertPolar(fragCoord.xy / iResolution.xy);\n    vec3 col = vec3(0.);\n    \n    vec3 k_c = grabColor(fragCoord.x / iResolution.x);\n    \n    col = grab(st, col, k_c, k_c);\n    \n    col = grab(vec2(-st.x, st.y), col, k_c, k_c);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}