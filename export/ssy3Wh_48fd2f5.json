{"ver":"0.1","info":{"id":"ssy3Wh","date":"1631437197","viewed":93,"name":"Heart of Sufi ","username":"Radical_Ed","description":"Heart of the Sufi\n\n\"In your light I learn how to love. In your beauty, how to make poems. You dance inside my chest where no-one sees you, but sometimes I do, and that sight becomes this art.\" Rumi","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["universe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XtsXW2","filepath":"https://soundcloud.com/bz-akira-santjago/and-that-sight-becomes-this-art-bz-akira-santjago","previewfilepath":"https://soundcloud.com/bz-akira-santjago/and-that-sight-becomes-this-art-bz-akira-santjago","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// rework of this GLSL Shader https://glslsandbox.com/e#67349.0\n\n\nprecision mediump float;\n\n\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n#define MAX 4.0\n#define NUM_LAYERS 2.\n\nmat2 rot(float angle){\n    float s=sin(angle),c=cos(angle);\n    return mat2(c,-s,s,c);\n}\n\nfloat hash21(vec2 p){\n    p=fract(p*vec2(52.34,5.21));\n    p+=dot(p,p+45.32);\n    return fract(p.x*p.y);\n}\n\nfloat star(vec2 uv,float flare){\n    float d=length(uv);\n    float m=.04/d;\n    float rays=max(0.,1.-abs(uv.x*uv.y*1000.));\n    m+=rays*flare;\n    uv*=rot(3.1415/4.);\n    rays=max(0.,1.-abs(uv.x*uv.y*1000.));\n    m+=rays*.3*flare;\n    m*=smoothstep(1.,.2,d);\n    return m;\n}\n\nvec3 universe(vec2 uv){\n    vec3 col=vec3(0);\n    vec2 gv=fract(uv)-.5;\n    vec2 id=floor(uv);\n    for(int y=-1;y<=1;y++){\n        for(int x=-1;x<=1;x++){\n            vec2 offs=vec2(x,y);\n            float n=hash21(id+offs);// random [0,1]\n            float size=fract(n*354.32);\n            float st=star(gv-offs-vec2(n,fract(n*34.))+.5,smoothstep(.9,1.,size)*.6);\n            vec3 color=sin(vec3(1.3392,.2882,.0988))*.8+.5;\n            st*=sin(iTime*3.+n*6.2831)*.5+1.;\n            col+=st*size*color;\n        }\n    }\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    int j = 0;\n    \n   \n    //vec2 p = (fragColor.xy * 2.0 - iResolution) / min(iResolution.x, iResolution.y);\n    vec2 p = (fragCoord.xy*2.0 - iResolution.xy)  / min(iResolution.x, iResolution.y);\n    \n    //p = p*0.1. ;\n    p = rotate (p, 1.6);\n\t\t\n    vec2  x = p + vec2(-0.3, -0.1); \n    float y = 1.5; \n    vec2  z = vec2(0.0, 0.0);      \n    \n    for(int i = 0; i < 360; i++){\n        j++;\n        if(length(z) > 1.0) {break;}\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * (sin(iTime*6.7)*0.3+1.) * z.x * z.y) +  x * 0.4* y;\n\t\n    }\n\t\n     vec3 rgb = vec3(0.2,0.0,0.0);\n   \n    for(float i=0.;i<1.;i+=1./NUM_LAYERS){\n        float depth=fract(i+iTime);\n        float scale=mix(20.,.5,depth);\n        float fade=depth*smoothstep(1.,0.9*abs(sin(iTime)),depth);\n        rgb+=universe(p*rot(iTime*sin(i*30.))*scale+i*453.2)*fade;\n    }\n\t\n    \n\t\n    \n    \n    float t = float(j) / 130.0 ;\n    \n    \n    fragColor = vec4(rgb * t , 1.0);\n\t\n}","name":"Image","description":"","type":"image"}]}