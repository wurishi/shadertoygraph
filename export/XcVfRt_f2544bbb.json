{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    //set consts\n    const float str = -0.6;\n    const vec3 color = vec3(0.500,1.000,0.328);\n\n    //get fragments pixel position and mouse position vects and normalise to 0-1 values\n\tvec2 posVec = fragCoord.xy / iResolution.xy;\n    vec2 mouseVec = iMouse.xy / iResolution.xy;\n    \n    //calculate euclidian distance from pixel to mouse\n    float xDiff = (posVec.x - mouseVec.x);\n    float yDiff = (posVec.y - mouseVec.y);\n    float fragDistFromMouse = sqrt((xDiff*xDiff)+(yDiff*yDiff));\n    \n    //correct luminosity value to inverse of distance and change intensity based on strength const\n    float fragDistCorrected = (1.0-fragDistFromMouse)+str;\n    \n    //scale pixel RGB channels based on calculated luminosity + predetermined color\n    vec3 colCorrected = vec3(fragDistCorrected*color.x,fragDistCorrected*color.y,fragDistCorrected*color.z);\n    \n    //assign final pixel color value + alpha channel\n\tfragColor = vec4(colCorrected,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XcVfRt","date":"1734355900","viewed":55,"name":"Mouse Distance Gradient Light","username":"JadeTheNeko","description":"just a silly little learning thingie that makes a circle that follows your mouse!!, you get to choose the color :3 - set STR to the radius (strength) you want and color to the color vec3 you want!!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","interactive","silly","gradient"],"hasliked":0,"parentid":"","parentname":""}}