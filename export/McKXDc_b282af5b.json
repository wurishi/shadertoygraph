{"ver":"0.1","info":{"id":"McKXDc","date":"1715929516","viewed":90,"name":"Simple Grass Field","username":"triggthediscovery","description":"Simple pseudo 3D grass effect. Eventually I'll start doing proper 3D, but I like these simple layer/modulo effects.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","grass","field"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 blade(vec2 uv, float col, float wave, float layer) {\n    // This provides the curve of the hill.\n    uv.y += pow((uv.x-0.5),2.0)/1.2;\n    // This is the common wave, affecting the entire layer.\n    uv.x -= (uv.y*uv.y)/wave;\n    \n    // The round allows all calls to reference th same blade\n    // of grass. This is used to provide per blade sway.\n    float wave_adj = round(uv.x * 30.0) + layer;\n    \n    float prand = mod((wave_adj*2347.1923), 4.0);\n    \n    wave_adj = prand + (sin(iTime*1.0*prand)/5.0);\n    \n    uv.x -= 1.0/(wave_adj+18.2);\n\n    // modded determines the blade collision.\n    float modded = float(mod((uv.x * 30.0)+(uv.y/2.0), 1.0));\n    \n    modded -= uv.y/1.0;\n    \n    modded *= 4.0;\n\n    if (modded > 1.0) {\n        // Make grass darker as you go down the screen.\n        return vec3(0,col*((uv.y+0.7)/1.7),0);\n    } else {\n        return vec3(0);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Adjust the uv by \"depth\" to give a psuedo 3d effect.\n    float depth = (uv.x/-3.0)+1.0;\n\n    vec2 nuv =  uv/depth;\n    \n    nuv.x *= 2.0;\n    nuv.y *= 10.0;\n    nuv.y -= 4.5;\n\n    // Sky gradient.\n    vec3 col = mix(vec3(0.7,0.9,1), vec3(0.4,0.6,1), uv.y);\n\n    int layer_count = 30;\n\n    for (int i=0; i<layer_count; i++) {\n        nuv.y += 0.16;\n        nuv.x += mod(float(i)*4563.2465, 0.06221);\n        nuv.x *= 0.97;\n        nuv.y *= 0.97;\n        float prand = mod((float(i+9))*27464.241, 1.0);\n        float wave_dir = (prand*4.0) + 12.0 + (sin((iTime*3.0*prand)+(prand*1.0))*2.0);\n\n        vec3 ncol = blade(nuv, (float(i)/-80.0)+0.9, wave_dir, float(i));\n        \n        if (ncol != vec3(0)) {\n            col = ncol;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}