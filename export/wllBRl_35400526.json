{"ver":"0.1","info":{"id":"wllBRl","date":"1598863441","viewed":94,"name":"TFG 3-4 Segmento Exacta","username":"lukasharing","description":"Funci√≥n de distancia con signo para un segmento","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tfg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.01\n\nvec2 proy01(in vec2 a, in vec2 b){\n    return b * clamp(dot(b, a) / dot(b, b), 0., 1.);\n}\n\nfloat SDFSegmento(vec2 p, vec2 a, vec2 b){\n    vec2 v = p - a;\n    vec2 w = b - a;\n    return length(v -  proy01(v, w));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Preservamos el ratio aspecto y re-centramos\n    vec2 uv = (fragCoord-iResolution.xy * 0.5)/min(iResolution.x, iResolution.y);\n    // Para cada punto p (uv), aplicamos la funcion de distancia con signo\n    float d = SDFSegmento(uv, vec2(-0.2, -0.2), vec2(0.3, 0.4));\n\n    vec3 col;\n    if(abs(d) < EPSILON){\n        col = vec3(1.0);\n    }else{\n        if(d < 0.0){\n    \t\tcol = vec3(1.0, 0., 0.);\n    \t}else{\n    \t\tcol = vec3(0., 0., 1.0);\n    \t}\n        // Numero de repeticiones\n        float k = 30.0;\n        // Tomamos la distancia en valor absoluto y nos quedamos con la parte fraccional\n        // Este valor esta [0,1].\n        col = col * (0.5 + 0.5 * (fract(abs(d) * k)));\n    }\n    \n    // Devolvemos el color asignado\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}