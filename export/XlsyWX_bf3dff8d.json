{"ver":"0.1","info":{"id":"XlsyWX","date":"1506672058","viewed":1752,"name":"shortest rotation dot (91 chars)","username":"FabriceNeyret2","description":" sin( iTime  + vec2(33,0) ) ~= vec2(cos,sin)   \n33 is a twice better approximation of pi/2[2pi] than 1.6  while saving 1 char (but 1.57 occur to be very better... at the cost of +2 chars ;-) )","likes":25,"published":3,"flags":0,"usePreview":0,"tags":["rotation","trigonometry","short","onetweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// self: https://www.shadertoy.com/view/XlsyWX\n\n// --- shortest rotation matrix:\n        \n// #define rot(a)  mat2(cos( a + vec4(0,33,11,0)))  //33,55\n// U *= rot(a);\n\n// --- 3D rot:  \n// P.xy*= rot(a.z), P.yz *= rot(a.x), P.xz *= rot(a.y);\n\n// --- axial rotation:\n// #define rotA(P,A,a)   dot(P, A)*A * (1.-cos(a)) + P * cos(a) -  cross(A,P) * sin(a)\n\n\n// --- shortest direct 2D rotation of an object:\n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 R = iResolution.xy;\n    O += .1 / length( (U+U-R)/R.y - sin( iTime  + vec2(33,0) ) ) - O; \n    }","name":"Image","description":"","type":"image"}]}