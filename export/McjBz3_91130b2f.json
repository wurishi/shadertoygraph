{"ver":"0.1","info":{"id":"McjBz3","date":"1725302675","viewed":27,"name":"perlin in process","username":"kofi","description":"another attempt in creating perlin noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926f\n#define CELLS 9.\nfloat rand(vec2 pos) {\n    return \n        fract(sin(dot(pos, vec2(23.2342, 82.29561))) * 82931.1857193);\n    \n}\nfloat fade(float t) {\n    return 6.*t*t*t*t*t - 15.*t*t*t*t + 10.*t*t*t;\n}\nfloat lerp(float a, float b, float k) {\n    return a + k * (b - a);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    //uv -= .5;\n    uv *= CELLS;\n    vec2 b = floor(uv)/CELLS;\n    vec2 randVec = vec2(sin(fract(rand(b))*(360. + iTime)), cos(fract(rand(b))*(360. + iTime)));\n    float dotProd = dot(randVec, normalize(b));\n    vec3 col = vec3(\n            //1./dot(uv, vector), -1./dot(uv, vector)\n            fade(dotProd), fade(-dotProd)\n            //rand(b), rand(b)\n            , 0.5\n          );\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}