{"ver":"0.1","info":{"id":"tdS3Dw","date":"1548998559","viewed":354,"name":"Cloud Soft Shadows","username":"scratch13764","description":"A little experiment I was doing with making clouds that could cast good soft shadows. It works by distorting a smoothstep blurred ellipse with fractal noise, so the farther a shadow ray is, the more blurred the cloud can be made.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","cloud","perlin","shadows"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//returns a 0-1 density value for a smoothstep blurred circle\nfloat BlurCircle(vec2 p,float r, float b)\n{\n    float l = length(p)-r+b*.5;\n    return smoothstep(b,-.001,l);\n}\n\nvec2 Hash (vec2 p)\n{\n    p = round(p - .5) + .5;\n    return fract(vec2(\n        sin(p.x*89.2832 + p.y*32.4687),\n        sin(p.x*34.7427 + p.y*37.9275)\n        )*35.673);\n}\n\nvec2 Perlin (vec2 p)\n{\n    vec4 a = vec4(\n    Hash(vec2(floor(p.x),floor(p.y))).x,\n    Hash(vec2(floor(p.x),ceil(p.y))).x,\n    Hash(vec2(ceil(p.x),floor(p.y))).x,\n    Hash(vec2(ceil(p.x),ceil(p.y))).x\n    );\n    \n    vec4 b = vec4(\n    Hash(vec2(floor(p.x),floor(p.y))).y,\n    Hash(vec2(floor(p.x),ceil(p.y))).y,\n    Hash(vec2(ceil(p.x),floor(p.y))).y,\n    Hash(vec2(ceil(p.x),ceil(p.y))).y\n    );\n    \n    vec2 m = smoothstep(0.,1., fract(p));\n    \n    vec2 r;\n    r.x = mix(mix(a.x,a.y,m.y), mix(a.z,a.w,m.y), m.x) - .5;\n    \n    return r;\n}\n\nfloat GetCloud (vec2 p, float s)\n{\n    vec2 b = vec2(0);\n    float amp = 1.3;\n    float freq = 1.;\n    for (int i = 0; i <= 5; i++)\n    {\n        b += Perlin((iTime*.1+p)*freq*3.)*amp;\n        amp *= .5;\n        freq *= 2.;\n    }\n\n    return BlurCircle((p*vec2(.6,1.))+b/5.,.25,s);\n}\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    vec2 a = (f-iResolution.xy*.5)/iResolution.y;\n    \n    float soft = (sin(iTime*.64)+1.)/8.;\n    \n    float Cloud = GetCloud(a,soft);\n    float Light = 1.;\n    vec2 LightP = 2.*(iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    for (float i = 0.; i <= .5; i += .05)\n    {\n        Light *= 1.-GetCloud(a + i*LightP, soft + i/length(LightP))/10.;\n        //Light = min(Light, 1. - GetCloud(a + i*LightP, 0. + i/length(LightP)/5.));\n        //Comment line 67 and uncomment line 68 to see a more informational view.\n    }\n    \n    c = mix(vec4(.6,.6,1,1), vec4(Light+.4), Cloud)*(.5+Light*.5);\n}","name":"Image","description":"","type":"image"}]}