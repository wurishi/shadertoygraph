{"ver":"0.1","info":{"id":"7ldcD4","date":"1660416778","viewed":70,"name":"autogen 52","username":"asynth","description":"Generated by a program written in Rust.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["generative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 bi(vec3 x) { return 2. * x - 1.; }\nvec3 uni(vec3 x) { return 0.5 + 0.5 * x; }\n\nfloat tri(float x) { // triangle wave\n    float p = fract(x * .25 + .25) * 2. - 1.;\n    return 1. - 2.0 * abs(p);\n}\nvec3 tri(vec3 x) { // triangle wave\n    vec3 p = fract(x * .25 + .25) * vec3(2.) - vec3(1.);\n    return vec3(1.) - vec3(2.0) * abs(p);\n}\n\nvec3 well(vec3 x) { // a function that dips in the middle\n    return 1. - 2. / pow(1. + x*x, vec3(8.));\n}\n\nfloat quant(float a, float b) {\n    return b == 0.0 ? a : floor(a/b) * b;\n}\nvec2 quant(vec2 a, vec2 b) {\n    return vec2(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y\n    );\n}\n\nvec3 quant(vec3 a, vec3 b) {\n    return vec3(\n        b.x == 0.0 ? a.x : floor(a.x/b.x) * b.x,\n        b.y == 0.0 ? a.y : floor(a.y/b.y) * b.y,\n        b.z == 0.0 ? a.z : floor(a.z/b.z) * b.z\n    );\n}\n\n\nvec3 sq(vec3 a) {\n    return a*a;\n}\n\nfloat sq(float a) {\n    return a*a;\n}\n\nvec3 sigmoid(vec3 a) {\n    return a / sqrt(1.0 + sq(a));\n}\n\nvec2 circ_inv(vec2 uv, vec2 center, float radius) {\n    float d = distance(uv, center);\n    if (d < radius) {\n        return uv;\n    } else {\n        float scale = sq(radius / d);\n        return (uv - center) * scale + center;\n    }\n}\n\n\nvec3 pthresh(float thresh, vec3 a, vec3 b, vec3 c) {\n    return vec3(\n        a.x < thresh ? b.x : c.x,\n        a.y < thresh ? b.y : c.y,\n        a.z < thresh ? b.z : c.z\n    );\n}\n\nvec2 xywarp(vec2 uv, vec2 a, vec2 b) {\n    return vec2(\n        uv.x + a.x * b.x,\n        uv.y + a.y * b.y\n    );\n}\n\nvec3 mix2(vec2 uv, vec3 a, vec3 b, vec3 c, vec3 d) {\n    return mix(mix(a, b, uv.xxx), mix(c, d, uv.xxx), uv.yyy);\n}\n\nvec2 mix2(vec2 uv, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return mix(mix(a, b, uv.xx), mix(c, d, uv.xx), uv.yy);\n}\n\nfloat mix2(vec2 uv, float a, float b, float c, float d) {\n    return mix(mix(a, b, uv.x), mix(c, d, uv.x), uv.y);\n}\n\nfloat hash12(vec2 p)\n{\n    vec3 p3  = fract(p.xyx * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 noise(vec2 uv, vec2 period, float seed) {\n    vec2 quv = floor(uv / period) + seed;\n    vec2 fuv = mod(uv, period) / period;\n    float a = hash12(quv);\n    float b = hash12(quv + vec2(1.,0.));\n    float c = hash12(quv + vec2(0., 1.));\n    float d = hash12(quv + vec2(1.,1.));\n    \n    return vec3(mix2(smoothstep(0.,1.,fuv), a, b, c, d));\n} \n\nvec2 reflect_0(vec2 uv) { return vec2(uv.x, abs(uv.y)); }\nvec2 reflect_1(vec2 uv) { return vec2(abs(uv.x), uv.y); }\nvec2 reflect_2(vec2 uv) { return vec2(abs(uv.x), abs(uv.y)); }\nvec2 reflect_3(vec2 uv) { return uv.x > -uv.y ? uv : vec2(uv.y, uv.x); }\nvec2 reflect_4(vec2 uv) { return uv.x > uv.y ? uv : vec2(uv.y, uv.x); }\n\nvec2 repeat_0(vec2 uv, float q) { return vec2(quant(uv.x, q), uv.y); }\nvec2 repeat_1(vec2 uv, float q) { return vec2(uv.x, quant(uv.y, q)); }\nvec2 repeat_2(vec2 uv, float q) { return vec2(quant(uv.x, q), quant(uv.y, q)); }\nvec2 repeat_3(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, uv.y); }\nvec2 repeat_4(vec2 uv, float q) { return vec2(uv.x, tri(uv.y / q) * q); }\nvec2 repeat_5(vec2 uv, float q) { return vec2(tri(uv.x / q) * q, tri(uv.y / q) * q); }\n\nvec2 rect_to_polar(vec2 uv) { return vec2(length(uv), atan(uv.y, uv.x)/1.570796); }\nvec2 polar_to_rect(vec2 uv) { float angle = uv.y*1.570796; return vec2(uv.x * cos(angle), uv.x * sin(angle)); }\n\nvec3 node_1(vec2 uv) {\n\tuv = repeat_2(uv, 0.5679);\n\tvec3 a1 = vec3(0.3941, 0.8780, 0.9734);\n\treturn mix(vec3(uv.y), a1, vec3(uv.x));\n}\n\nvec3 node_2(vec2 uv) {\n\tuv = xywarp(uv, vec2(-0.3036, 0.4318), vec3(uv.x).xy);\n\tvec3 b1 = noise(uv, vec2(3.7573068, 0.18648171), 0.163494);\n\treturn mod(b1, uni(node_1(uv)));\n}\n\nvec3 node_3(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.0902, 0.5211, 0.1080), vec3(0.2287, 0.1063, 0.7567), vec3(0.2913, 0.6053, 0.1483), vec3(0.5396, 0.0479, 0.2404));\n\tvec3 a2 = noise(uv, vec2(0.13644445, 0.50612366), 0.320111);\n\tvec3 a3 = noise(uv, vec2(2.1033037, 2.5316849), 0.664786);\n\tvec3 a4 = sin(a3*5.8177 + 0.1000 + iTime*0.1179);\n\tvec3 a5 = sin(quant((vec3(length(uv)) * a2), a4)*1.6275 + 0.7329 + iTime*0.1334);\n\tvec3 a6 = mix2(uv, vec3(0.8440, 0.8082, 0.0718), vec3(0.7552, 0.8760, 0.7611), vec3(0.9626, 0.7538, 0.7122), vec3(0.7581, 0.1578, 0.8872));\n\tvec3 a7 = sin(vec3(uv.y)*5.8580 + 0.5720 + iTime*0.2413);\n\tvec3 a8 = mix2(uv, vec3(0.0791, 0.5375, 0.7406), vec3(0.5571, 0.8091, 0.0322), vec3(0.0375, 0.9727, 0.6027), vec3(0.7087, 0.0202, 0.4091));\n\tvec3 a9 = mix2(uv, vec3(0.6474, 0.6904, 0.5400), vec3(0.5807, 0.4438, 0.8386), vec3(0.4106, 0.6620, 0.8202), vec3(0.5937, 0.4204, 0.6353));\n\tvec3 a10 = tri(quant(a8, (-a9))*4.2887 + 0.0941 + iTime*0.1343);\n\tvec3 a11 = tri((uni(max(sq(quant(vec3(length(uv)), a1)), a5)) / mod(vec3(uv.x), mix(quant(mix(vec3(uv.y), a6, vec3(uv.x)), vec3(uv.y)), min(a7, abs(vec3(length(uv)))), a10)))*2.2900 + 0.1246 + iTime*0.2463);\n\tvec3 a12 = vec3(0.1590, 0.7517, 0.5075);\n\tvec3 a13 = vec3(0.5084, 0.8149, 0.6922);\n\tuv = xywarp(uv, vec2(-0.3872, 0.4888), quant((a11 / a12), (vec3(uv.y) / (vec3(length(uv)) / a13))).xy);\n\tvec3 b1 = mix2(uv, vec3(0.4623, 0.2938, 0.5835), vec3(0.0056, 0.8050, 0.8022), vec3(0.9696, 0.6770, 0.7984), vec3(0.7678, 0.2747, 0.9654));\n\tvec3 b2 = noise(uv, vec2(1.7431055, 2.9920092), 0.349074);\n\tvec3 b3 = sin(pthresh(0.1569, b1, vec3(length(uv)), b2)*3.0435 + 0.1728 + iTime*0.2860);\n\tvec3 b4 = tri(sigmoid(b3)*1.6059 + 0.5143 + iTime*0.2161);\n\tvec3 b5 = tri(b4*3.5174 + 0.0772 + iTime*0.1646);\n\tvec3 b6 = mix2(uv, vec3(0.8810, 0.3710, 0.4704), vec3(0.2575, 0.8860, 0.9450), vec3(0.9351, 0.3203, 0.3998), vec3(0.5544, 0.3261, 0.1984));\n\treturn abs(max(mod(b5, b6), node_2(uv)));\n}\n\nvec3 node_4(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.6306, 0.5023, 0.1436), vec3(0.0938, 0.9981, 0.0827), vec3(0.3656, 0.6852, 0.2432), vec3(0.5210, 0.4213, 0.4001));\n\tvec3 a2 = vec3(0.7269, 0.9708, 0.6512);\n\tuv = xywarp(uv, vec2(-0.0809, -0.7375), min(bi((a1 / vec3(uv.y))), a2).xy);\n\treturn bi(vec3(length(uv)));\n}\n\nvec3 node_5(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.1596, -0.0173), node_3(uv).xy);\n\tvec3 b1 = tri(node_4(uv)*4.9806 + 0.2711 + iTime*0.1823);\n\tvec3 b2 = sin(b1*1.6755 + 0.2356 + iTime*0.2096);\n\treturn b2;\n}\n\nvec3 node_6(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.8952, 0.9641), vec3(length(uv)).xy);\n\tvec3 b1 = vec3(0.5668, 0.8344, 0.1554);\n\treturn b1;\n}\n\nvec3 node_7(vec2 uv) {\n\tvec3 a1 = mix2(uv, vec3(0.3427, 0.9029, 0.3851), vec3(0.0776, 0.5295, 0.2009), vec3(0.6975, 0.8525, 0.1453), vec3(0.5838, 0.8870, 0.1570));\n\tuv = xywarp(uv, vec2(0.5587, -0.7916), (sq(a1) * vec3(length(uv))).xy);\n\tvec3 b1 = vec3(0.5684, 0.8454, 0.7495);\n\tvec3 b2 = sin(min(b1, sq(vec3(length(uv))))*2.9108 + 0.0866 + iTime*0.0614);\n\treturn sigmoid(b2);\n}\n\nvec3 node_8(vec2 uv) {\n\tuv = xywarp(uv, vec2(0.7854, -0.8485), node_6(uv).xy);\n\treturn node_7(uv);\n}\n\nvec3 node_9(vec2 uv) {\n\tuv = repeat_4(uv, 0.5514);\n\treturn vec3(uv.y);\n}\n\nvec3 node_10(vec2 uv) {\n\tuv = repeat_0(uv, 0.3034);\n\tvec3 a1 = mix2(uv, vec3(0.7414, 0.3544, 0.8156), vec3(0.9385, 0.5646, 0.4990), vec3(0.7848, 0.4686, 0.4173), vec3(0.8522, 0.0301, 0.0083));\n\tvec3 a2 = noise(uv, vec2(0.13848412, 0.8284944), 0.919846);\n\tvec3 a3 = mix2(uv, vec3(0.4119, 0.9520, 0.9790), vec3(0.6553, 0.5515, 0.6269), vec3(0.4329, 0.8895, 0.9712), vec3(0.4247, 0.0336, 0.9436));\n\tvec3 a4 = noise(uv, vec2(2.4516532, 2.4386942), 0.474594);\n\treturn pthresh(0.0590, abs(quant(vec3(uv.x), vec3(uv.x))), sigmoid((node_9(uv) + (mod(a1, a2) * a3))), quant(vec3(uv.x), a4));\n}\n\nvec3 node_11(vec2 uv) {\n\tuv = reflect_3(uv);\n\treturn vec3(length(uv));\n}\n\nvec3 top(vec2 uv) {\n\tvec3 a1 = vec3(0.9724, 0.1760, 0.4029);\n\tvec3 a2 = mix2(uv, vec3(0.8778, 0.0900, 0.6887), vec3(0.6456, 0.1284, 0.3192), vec3(0.8157, 0.7592, 0.1927), vec3(0.4459, 0.9718, 0.9613));\n\tvec3 a3 = noise(uv, vec2(0.8530959, 3.2501538), 0.562995);\n\tvec3 a4 = sin((((max(vec3(uv.y), vec3(length(uv))) + a1) * pthresh(0.8200, a2, min(vec3(length(uv)), vec3(uv.x)), a3)) / vec3(uv.y))*1.8117 + 0.9139 + iTime*0.1787);\n\tvec3 a5 = noise(uv, vec2(1.5573967, 3.0287716), 0.709640);\n\tvec3 a6 = mix2(uv, vec3(0.0502, 0.9819, 0.9763), vec3(0.3187, 0.3883, 0.6498), vec3(0.0321, 0.6450, 0.8816), vec3(0.4855, 0.9886, 0.6078));\n\tvec3 a7 = tri(mix((-a5), ((-vec3(uv.y)) / a6), vec3(length(uv)))*1.9223 + 0.9006 + iTime*0.3338);\n\tvec3 a8 = mix2(uv, vec3(0.6356, 0.1799, 0.4133), vec3(0.4736, 0.4939, 0.7831), vec3(0.2529, 0.4643, 0.5293), vec3(0.9526, 0.5124, 0.9675));\n\tvec3 a9 = mix2(uv, vec3(0.9570, 0.0722, 0.3233), vec3(0.3200, 0.3254, 0.8009), vec3(0.0478, 0.0018, 0.6710), vec3(0.5964, 0.1649, 0.2894));\n\tvec3 a10 = tri(node_10(uv)*1.4982 + 0.5527 + iTime*0.1677);\n\tvec3 a11 = vec3(0.3074, 0.9451, 0.6293);\n\tvec3 a12 = tri(a11*1.2875 + 0.7274 + iTime*0.1840);\n\tvec3 a13 = vec3(0.9088, 0.6372, 0.3199);\n\tvec3 a14 = mix2(uv, vec3(0.6546, 0.0510, 0.3200), vec3(0.0573, 0.9188, 0.8537), vec3(0.8208, 0.7929, 0.0845), vec3(0.0608, 0.3583, 0.9441));\n\treturn ((node_5(uv) / bi(a4)) * sq(min(pthresh(0.2288, a7, uni(abs(mix(vec3(length(uv)), vec3(uv.x), a8))), quant(a9, sigmoid((-node_8(uv))))), (a10 * sigmoid(sigmoid(uni((-sigmoid((a12 * min(max(abs(min(vec3(uv.x), abs(node_11(uv)))), max(mod(vec3(uv.y), a13), (vec3(uv.y) + a14))), quant(vec3(uv.y), uni(quant(uni(vec3(uv.x)), vec3(length(uv))))))))))))))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = abs(sin(top(uv)));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}