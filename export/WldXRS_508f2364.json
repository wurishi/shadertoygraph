{"ver":"0.1","info":{"id":"WldXRS","date":"1581210019","viewed":184,"name":"super funky lines","username":"domorin","description":"super funky lines","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lines","funky","super"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LINE_FUNKINESS 23.23\n\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nvec3 makeLine(vec2 uv, vec2 r_uv, float row_id, float scale, float i, float n)\n{    \n    float direction = sign(n * 2. - 1.);\n\n    vec2 current_uv = vec2(r_uv);\n    \n    current_uv.y += sin(r_uv.x + iTime * direction * 2.23 * n + row_id * 2.3623) * LINE_FUNKINESS * n * (sin(iTime + n * 80.932) * 0.5 + 0.5) * (sin(iTime) * 0.5 + 0.5);\n\n\n    vec3 current_col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4) + row_id * 23.61232);   \n    return scale / pow(abs(current_uv.y - i * 2.), (1.5 + n*2.) * (1. + sin(iTime + 3.14159*0.5) * 0.5)) * current_col;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float rows = 25.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.y += iTime * 0.05;\n    \n    float a = iTime * 0.1;// + length(uv) * 3.141592653589 * sin(iTime * 0.12316);\n    float s = sin(a);\n    float c = cos(a);\n        \n    uv *= mat2(c, -s, s, c);\n    \n    \n    uv.x *= iResolution.x / iResolution.y;;\n    \n    uv.y *= rows;\n\n    float row_id = floor(uv.y);\n    vec2 r_uv = vec2(uv.x, fract(uv.y));\n    r_uv = r_uv * 2.0 - 1.0;   \n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) * c;   \n\n    \n    float mag = 0.005 * rows;\n\tvec3 col = vec3(0.0);\n    for(float i = -rows; i <= rows; i++)\n    {                \n        float current_row_id = row_id + i;\n        float n = Hash21(vec2(current_row_id, mag));\n        col += makeLine(uv, r_uv, current_row_id, mag + sin(iTime * 0.5 + n * 6.1412) * 0.1, i, n);\n    }\n    \n    for(float i = -rows; i <= rows; i++)\n    {\n        float current_row_id = row_id + i;\n        float n = Hash21(vec2(current_row_id, mag * 0.1));\n        col += makeLine(uv, r_uv, current_row_id, mag * 0.1 + sin(iTime * 0.5 + n * 14.6875) * 0.01, i, n);\n    }\n    \n    for(float i = -rows; i <= rows; i++)\n    {\n        float current_row_id = row_id + i;\n        float n = Hash21(vec2(current_row_id, mag * 0.05));\n        col += makeLine(uv, r_uv, current_row_id, mag * 0.05 + sin(iTime * 0.5 + n * 23.78563) * 0.01, i, n);\n    }\n\n\n    \n\n\n    float power = 2.0;\n    col = vec3(pow(col.x, power), pow(col.y, power), pow(col.z, power));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}