{"ver":"0.1","info":{"id":"tdcSWB","date":"1575251438","viewed":50,"name":"Checkerboard for graphics class","username":"gogetavegan","description":"checker","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["checker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float columns = 5.0;\nfloat rows = 5.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n\tuv.x *= columns;\n    uv.y *= rows;\n\n    //colors for squares\n    vec3 whiteSquare = vec3(0.0,0.0,0.0);\n    vec3 blackSquare = vec3(1.0,1.0,1.0);\n    \n    float t = mod(floor(uv.x) + floor(uv.y), 2.0); // calculate checkerboard\n    \n    //layers \n    vec4 Layer = vec4(whiteSquare ,1.0);\n    vec4 Layer1 = vec4(blackSquare,0.0);\n    \n    Layer.a = t * step(1.0, uv.x);\n    Layer1.a = t * step(1.0,step(1.0, uv.x) + step(1.0, uv.y));\n    \n    vec4 Composite = mix(Layer,Layer1,Layer1.a);\n    \n    // Output to screen\n    fragColor = vec4(Composite);\n}\n","name":"Image","description":"","type":"image"}]}