{"ver":"0.1","info":{"id":"dd2GDc","date":"1668277094","viewed":86,"name":"mandelbrot+_+julia","username":"DLord","description":"mandelbrot+julia","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotjulia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gcol(in float k){\nreturn min(vec3(k*0.3201082288192,k*0.0951552145511,k*0.9425901585451)*11.,1.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv=uv*2.-1.;\n    uv.y=uv.y*iResolution.y/iResolution.x;\n    uv*=3.;\n    float a=1.*uv.x+0.*uv.y+0.2;\n    float b=0.*uv.x+1.*uv.y+0.97;\n    float c=0.*uv.x+0.*uv.y+0.;\n    float d=0.*uv.x+0.*uv.y+0.;\n    float x=1.*uv.x+0.2*uv.y+0.8;\n    float y=0.*uv.x+1.*uv.y+0.3;\n    \n    int maxiter=10000;\n    float stop=a*a+(b*b)+(c*c)+(d*d)+(x*x)+(y*y)+4.;\n    stop=stop*stop;\n    //stop=4.;\n    // Time varying pixel color\n    int i=0;float zr=x;float zi=y;float zrr=zr;\n    while(i<maxiter){\n        zrr=zr;\n        zr=zr*zr-(zi*zi)+a+(c*x)-(d*y);\n        zi=2.*zrr*zi+b+(c*y)+(d*x);\n        i=i+1;\n        if(stop<(zr*zr+(zi*zi))){\n        fragColor = vec4(gcol(float(i)/255.),1.0);\n        return;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(0.,0.,0.,1.0);\n}\n","name":"Image","description":"","type":"image"}]}