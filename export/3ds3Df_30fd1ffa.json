{"ver":"0.1","info":{"id":"3ds3Df","date":"1547686593","viewed":147,"name":"Cinema","username":"KaiBowers","description":"just started - feedback welcome!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["cinema","kino"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //UV MAP\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //CURTAIN MOVEMENT\n\tfloat p = (sin((iTime * 1.3f) + ((uv.x + uv.y))) + 1.f) / 2.f; \n    \n    //DRAW SIDE CURTAINS\n    if(uv.x - (p * 0.08f) < 0.15f || uv.x + (p * 0.08f) > 0.85)\n    {\n        //CURTAIN COLOR\n        float w = 0.f;   \n        \n        //CHECK DIRECTION/SIDE\n        if(uv.x > 0.5f)\n    \t{\n            //RIGHT\n    \t\tuv.x = ((uv.x) + (p * 0.08f));\n    \t\tuv.y = ((uv.y) + (p * 0.03f));\n        \tw = mod(1.f - uv.x, 0.05f) * 20.f;\n    \t}\n    \telse      \n    \t{\n            //LEFT\n    \t\tuv.x = ((uv.x) - (p * 0.08f));\n    \t\tuv.y = ((uv.y) - (p * 0.03f));\n        \tw = mod(uv.x , 0.05f) * 20.f;\n    \t}\n        \n        //SET COLOR\n        vec3 col = vec3(w, 0, 0);  \n    \tfragColor = vec4(col, 1.0);\n       \treturn;\n    }\n    \n    //ADD MOVIE OFFSET\n    uv.y += sin(24.1f * iTime) * 0.001f;\n    \n    //DRAW SCREEN\n    if(uv.y > 0.2f && uv.y < 0.8f)\n    {    \n      \n        //SCREEN FLICKER\n        float v = ((sin(iTime * 20.f) * 0.175f + 1.f) / 2.f) + 0.2f;     \n        float d = 2.4f * pow(abs(uv.x - 0.5f), 2.f) + pow(abs(uv.y - 0.5f), 2.f);     \n        v = (v * 0.5f) - (v * sqrt(d) * 0.5f);         \n\t\tfragColor = vec4(vec3(v, v, v), 1.0);\n        \n        //TRIANGLE \n        float tx = (sin(iTime * 5.f) * 0.2f);\n        float ty = (sin(iTime * 2.1f) * 0.2f);\n        if(0.5f - uv.y - ty > 2.25f * abs(uv.x + tx - 0.5) && (uv.y + ty) > 0.45)\n        {\n            fragColor += fragColor;\n        }      \n        \n        //LIGHT\n        float md = pow(abs(uv.x + tx - 0.5f), 2.f) + pow(abs(uv.y + ty - 0.5f), 2.f);\n        float ti = iTime * 4.f;\n        if(md > sin(ti) && md < sin(ti + 0.5f))\n        {\n            fragColor += (fragColor * 1.f);\n        }\n        \n        return;\n    }\n    \n    //BACKGROUND\n    fragColor = vec4(vec3(pow(abs(0.5f - uv.y), 3.f) * 0.5f, 0, 0), 1.0);       \n    return;           \n}\n","name":"Image","description":"","type":"image"}]}