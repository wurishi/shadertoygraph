{"ver":"0.1","info":{"id":"4d3GWS","date":"1451910472","viewed":2189,"name":"Gray Scott Reaction Diffusion","username":"Eybor","description":"An implementation of Gray Scott Model of Reaction Diffusion using multipass shaders . When your display is resized you can use the space bar in order for the image to be resized too.","likes":24,"published":3,"flags":48,"usePreview":0,"tags":["2d","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n        \n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(texture(iChannel0, vec2(0.)).w == 0. || texture(iChannel2,  vec2(0.126953125, .25)).x > 0.)\n   \t{\n        if(fragCoord.x > iResolution.x/4. && fragCoord.x < 3.*iResolution.x/4. &&\n           fragCoord.y > iResolution.y/4. && fragCoord.y < 3.*iResolution.y/4.)\n        {\n            fragColor.xyz = vec3(.5);\n        }\n        else\n        { \n            fragColor.xyz = vec3(1.);\n        }\n        fragColor.w = 1.; \n    }\n\telse\n    {\n        vec3 laplacian =    texture(iChannel0, (fragCoord-vec2(0., 1.))/iResolution.xy).rgb +\n                            texture(iChannel0, (fragCoord-vec2(1., 0.))/iResolution.xy).rgb -\n                         4.*texture(iChannel0, fragCoord/iResolution.xy).rgb +\n            \t\t\t \ttexture(iChannel0, (fragCoord+vec2(1., 0.))/iResolution.xy).rgb +\n            \t\t\t \ttexture(iChannel0, (fragCoord+vec2(0., 1.))/iResolution.xy).rgb;\n                \n        vec3 vu = texture(iChannel0, fragCoord/iResolution.xy).xyz;\n        vec3 vv = texture(iChannel1, fragCoord/iResolution.xy).xyz;\n               \n        fragColor = vec4(vu + params.z*laplacian+params.x*(1.-vu)-vu*vv*vv, 1.);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(texture(iChannel1, vec2(0.)).w == 0. || texture(iChannel2,  vec2(0.126953125, .25)).x > 0.)\n   \t{\n        if(fragCoord.x > iResolution.x/4. && fragCoord.x < 3.*iResolution.x/4. &&\n           fragCoord.y > iResolution.y/4. && fragCoord.y < 3.*iResolution.y/4.)\n        {\n            fragColor.xyz = vec3(.25);\n        }\n        else\n        {\n            fragColor.xyz = vec3(0.);\n        }\n        fragColor.w = 1.;\n    }\n    else\n    {\n        vec3 laplacian =    texture(iChannel1, (fragCoord-vec2(0., 1.))/iResolution.xy).rgb +\n                         \ttexture(iChannel1, (fragCoord-vec2(1., 0.))/iResolution.xy).rgb -\n                         4.*texture(iChannel1, fragCoord/iResolution.xy).rgb +\n            \t\t\t \ttexture(iChannel1, (fragCoord+vec2(1., 0.))/iResolution.xy).rgb +\n            \t\t\t \ttexture(iChannel1, (fragCoord+vec2(0., 1.))/iResolution.xy).rgb;\n\n        vec3 vu = texture(iChannel0, fragCoord/iResolution.xy).xyz;\n        vec3 vv = texture(iChannel1, fragCoord/iResolution.xy).xyz;\n        \n        fragColor = vec4(vv + params.w*laplacian-(params.x+params.y)*vv+vu*vv*vv, 1.);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec4 params = vec4(.04,.06,.2,.1);","name":"Common","description":"","type":"common"}]}