{"ver":"0.1","info":{"id":"4fXBz7","date":"1723665224","viewed":28,"name":"[wip] metal shader","username":"palszasz","description":"trying to get a metal material effect","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["metal","material"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat2 m = mat2(0.6, 0.8, -0.8, 0.6);\nconst mat2 dir2 = mat2(0.9, 0.2, -0.2, 0.9);\nconst mat2 dir1 = mat2(0.9, -0.2, 0.2, 0.9);\nconst vec3 light = normalize(vec3(1, -1, 1));\n\n// Noise from: https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat rand(vec2 n) \n{ \n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\nfloat noise(vec2 p)\n{\n\tvec2 ip = floor(p);\n\tvec2 u = fract(p);\n\tu = u*u*(3.0-2.0*u);\n\t\n\tfloat res = mix(\n\t\tmix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n\t\tmix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n\treturn res*res;\n}\n// ---\n\nfloat fractal_noise(vec2 p)\n{\n    float ret = 0.0, amp = 0.5;\n    for (int i = 0; i < 8; i++)\n    {\n        ret += noise(p) * amp;\n        amp *= 0.75;\n        p = m * p * 1.415;\n    }\n    return ret;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 seed = fragCoord;\n    seed += 0.2 * iResolution.xy * cos(iTime * vec2(0.12, 0.078)) * cos(iTime * vec2(0.02, 0.0178) + vec2(2.34, 3.45));\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Choose between normal metal and rust\n    float m = 0.6; // Higher value result in more metal (and less rust)\n    float e = 0.025; // Sharpness of the metal/rust border\n    float t =  fractal_noise(seed * 0.01);\n    float s = smoothstep(m - e, m + e, t);\n    vec3 col = mix(vec3(0.5, 0.55, 0.6), vec3(0.6, 0.45, 0.4), s);\n    \n    // Add some noise (nm: metal; nr = rust)\n    float nm = 0.1 * (noise(dir1 * seed * vec2(0.5, 0.01)) + (noise(seed * vec2(0.005, 0.02)) - 0.5));\n    float nr = 0.5 * fractal_noise(seed * 0.031);\n    float n = mix(nm, nr, s);\n    col *= 0.5 + n;\n    \n    // Add some emboss effect on the metal/rust boundary\n    vec3 ds = normalize(vec3(dFdx(s), dFdy(s), 0.1));\n    col *= 1.0 + max(0., dot(ds, light));\n\n    // Add the pattern onto the metal\n    vec2 pdir = vec2(2.0, 0.5);\n    float h = abs(dot(cos(dir2 * seed * 0.1), pdir));\n    h = smoothstep(1.5, 2.5, h); // Seightmap\n    vec3 hdir = normalize(vec3(dFdx(h), dFdy(h), 0.2)); // Surface normal\n    vec3 vdir = normalize(vec3(uv, -1.));\n    float hspec = pow(max(0., dot(vdir, reflect(light, hdir))), mix(2., 2., s)) * mix(5., 1., s);\n    float hdiff = dot(hdir, light) * 2.0;\n    col *= 1.0 + hdiff + hspec;\n    \n    // Vignette effect\n    col *= 0.5 * max(0., 1. - length(uv - 0.5) * 1.4);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}