{"ver":"0.1","info":{"id":"fs23Wt","date":"1618123603","viewed":3785,"name":"membrane game","username":"4eckme","description":"to be continued...","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["mouse","game","math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// click mouse and move\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float N = 60.0; //cell size\n    vec2 coord = fragCoord - (iResolution.xy / vec2(2.0)); //simmetric\n    float x = float(coord.x); //pixel x from center\n    float y = float(coord.y); //pixel y from center\n    float t = pow(1.02, iTime); //equal animate with speed 1.02;\n    float dx = iMouse.x-iResolution.x/2.0;//mouse move x\n    float dy = iMouse.y-iResolution.y/2.0;//mouse move y\n    float f = float((x-dx)*(x-dx)*t+(y-dy)*(y-dy)*t); //LOGIC, it can be changed\n    float F = abs(f*sin((x)/N)*sin((y)/N));//do MEMBRANE for game LOGIC\n    int R = int(floor(F*pow(16.0, 6.0-ceil(log2(F)/4.0))));//adapt COLOR for X11\n    fragColor = vec4(\n        float(((R) >> 16)& 255) / 255.0, //red\n        float(((R) >> 8) & 255) / 255.0, //green\n        float(((R) >> 0) & 255) / 255.0, //blue\n        1.0\n    );\n}","name":"Image","description":"","type":"image"}]}