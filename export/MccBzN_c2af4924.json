{"ver":"0.1","info":{"id":"MccBzN","date":"1732771699","viewed":74,"name":"Psychedelic Vortex Shader","username":"Shag420","description":"Made By: Shag420\nPsychedelic Vortex Shader ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","shader","trippy","vortex","acid","trip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Psychedelic Vortex Shader \n// Created by Shag420\n\n#define PI 3.14159265359\n#define TAU 6.28318530718\n\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nmat2 rotate2D(float angle) {\n    return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat sdHexagram(vec2 p, float r) {\n    const vec4 k = vec4(-0.5, 0.8660254038, 0.5773502692, 1.7320508076);\n    p = abs(p);\n    p -= 2.0 * min(dot(k.xy, p), 0.0) * k.xy;\n    p -= 2.0 * min(dot(k.yx, p), 0.0) * k.yx;\n    p -= vec2(clamp(p.x, r * k.z, r * k.w), r);\n    return length(p) * sign(p.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n        \n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n        \n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n        \n        d = pow(0.01 / d, 1.2);\n        \n        finalColor += col * d;\n    }\n    \n    float hexD = sdHexagram(uv0 * rotate2D(iTime * 0.2), 0.5);\n    vec3 hexColor = palette(hexD + iTime * 0.1);\n    finalColor += hexColor * (0.01 / abs(hexD));\n    \n    float angle = atan(uv0.y, uv0.x);\n    float radius = length(uv0);\n    float swirl = sin(angle * 5.0 + iTime + radius * 10.0) * 0.5 + 0.5;\n    finalColor *= mix(vec3(1.0), palette(swirl + iTime * 0.2), 0.5);\n    \n    for (float i = 0.0; i < 3.0; i++) {\n        vec2 circlePos = vec2(cos(iTime * (0.1 + i * 0.1)), sin(iTime * (0.2 + i * 0.1))) * 0.5;\n        float circleDist = length(uv0 - circlePos);\n        float circle = 0.01 / abs(circleDist - 0.2 - 0.1 * sin(iTime * 2.0 + i * PI * 2.0 / 3.0));\n        finalColor += palette(circleDist + iTime * 0.3 + i * 0.2) * circle;\n    }\n    \n    // Audio reactivity\n    float audioIntensity = texture(iChannel0, vec2(0.1, 0.0)).x;\n    finalColor *= 1.0 + audioIntensity * 0.5;\n    \n    finalColor = finalColor / (1.0 + finalColor);\n    finalColor = pow(finalColor, vec3(0.4545));\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}