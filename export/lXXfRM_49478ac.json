{"ver":"0.1","info":{"id":"lXXfRM","date":"1728154863","viewed":49,"name":"Neon Pulse Kraken","username":"nilberlin","description":"This shader, \"Neon Pulse Kraken,\" is an audio-reactive, vibrant visual experience inspired by the fluid movements of an octopus. Every 7 seconds, the entire color palette shifts to a different neon hue, creating an ever-changing, electric vibe. :)","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["glslshadershadertoyneoncolorsbeatsyncelasticeffectaudioreactivewebglpsychedelicvisualart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float time = iTime * 0.5;\n\n    // Octopus body and arms with more variation\n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    float armPattern = sin(12.0 * angle + time * 4.0 - radius * 10.0);\n\n    // Add more rhythmic wave-like movement to the arms\n    float waveMovement = sin(time * 1.5 + radius * 5.0 + angle * 3.0) * cos(time * 2.0 - angle * 4.0);\n    armPattern += 0.1 * waveMovement;\n\n    // Add reverse movement for more dynamic variation\n    float reverseWave = cos(time * 2.0 - radius * 3.0 - angle * 2.0);\n    armPattern += 0.05 * reverseWave;\n\n    // Create dots for tentacles (suckers) with additional variation\n    float dotPattern = smoothstep(0.015, 0.035, cos(radius * 40.0 + armPattern * 6.0 + waveMovement));\n\n    // Color shifting to introduce a 7-second full color change with neon colors\n    float colorCycle = mod(floor(iTime / 7.0), 6.0);\n    vec3 baseColor;\n    if (colorCycle == 0.0) baseColor = vec3(1.0, 0.0, 0.5); // Neon Pink\n    else if (colorCycle == 1.0) baseColor = vec3(0.0, 1.0, 0.5); // Neon Green\n    else if (colorCycle == 2.0) baseColor = vec3(0.0, 0.5, 1.0); // Neon Blue\n    else if (colorCycle == 3.0) baseColor = vec3(1.0, 1.0, 0.0); // Neon Yellow\n    else if (colorCycle == 4.0) baseColor = vec3(1.0, 0.5, 0.0); // Neon Orange\n    else baseColor = vec3(0.5, 0.0, 1.0); // Neon Purple\n\n    // Color modulation based on armPattern and sound input for more dynamic hues\n    float sound = texture(iChannel0, vec2(angle * 0.1 + time * 0.05, 0.5)).r;\n    vec3 color = baseColor * (0.7 + 0.3 * sin(armPattern * 12.0 + time * 1.5 + sound * 5.0));\n\n    // Introduce pulsing and elasticity effect to make the entire mass feel elastic\n    float elasticity = 0.05 * sin(time * 2.0 + radius * 8.0 + sound * 10.0);\n    armPattern += elasticity;\n\n    // Apply dot pattern to simulate tentacle suckers\n    color *= dotPattern;\n\n    // Add glow effect with more dynamic range\n    float glow = smoothstep(0.1, 0.25, armPattern + waveMovement * 0.5);\n    color += glow * 0.5;\n\n    // Add a stronger pulsing effect synced with the beat\n    float beatPulse = 0.4 * sin(iTime * 3.0 + radius * 10.0 + sound * 15.0);\n    color += beatPulse;\n\n    // Add more rhythmic and opposing movement effects\n    float rhythmEffect = 0.2 * sin(time * 4.0 + radius * 4.0) * cos(time * 2.5 - radius * 5.0);\n    color += rhythmEffect;\n\n    // Final blending for the octopus effect, enhancing brightness and contrast\n    color = pow(color, vec3(1.4)); // Increase contrast slightly for more punch\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}