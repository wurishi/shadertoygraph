{"ver":"0.1","info":{"id":"wtsBzH","date":"1596057262","viewed":353,"name":"Simplex Noise 2D","username":"sotrh","description":"GLSL implementation of Simplex Noise in 2D.\nAdapted from https://catlikecoding.com/unity/tutorials/simplex-noise/#a-equalities","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","simplexnoise","proceduralgenration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SQUARES_TO_TRIANGLES = (3.0 - sqrt(3.0)) / 6.0;\nfloat TRIANGLES_TO_SQUARES = (sqrt(3.0) - 1.0) / 2.0;\n\nfloat random (vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat simplexValue2DPart(vec2 uv, vec2 iuv) {\n    float unskew = (iuv.x + iuv.y) * SQUARES_TO_TRIANGLES;\n    float x = uv.x - iuv.x + unskew;\n    float y = uv.y - iuv.y + unskew;\n    float f = 0.5 - x * x - y * y;\n    return f * f * f * random(iuv);\n}\n\nfloat simplexValue2D(in vec2 uv) {\n    float skew = (uv.x + uv.y) * TRIANGLES_TO_SQUARES;\n    vec2 skewUV = uv + skew;\n    vec2 iuv = floor(skewUV);\n    \n    // Get bottom left corner\n    float n = simplexValue2DPart(uv, iuv);\n    \n    // Get top right corner\n    n += simplexValue2DPart(uv, iuv + 1.0);\n    \n    if (skewUV.x - iuv.x >= skewUV.y - iuv.y) {\n    \t// Get bottom right corner\n        n += simplexValue2DPart(uv, iuv + vec2(1.0, 0.0));\n    } else {\n        // Get top left corner\n        n += simplexValue2DPart(uv, iuv + vec2(0.0, 1.0));\n    }\n    \n    return n * (8.0 * 2.0) - 1.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / max(iResolution.x, iResolution.y) * 1.5f;\n    \n    // Use a higher frequency to see the lattice\n    uv *= 8.0;\n    \n    float n = simplexValue2D(uv);\n  \n    // Get the results from [-1, 1] to [0, 1]\n    n = n * 0.5 + 0.5;\n    \n    vec3 col = vec3(n, n, n);\n    \n    // Gamma correction\n    col = pow(col, vec3(1.0/2.2));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}