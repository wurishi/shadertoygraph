{"ver":"0.1","info":{"id":"MtdXW4","date":"1479717104","viewed":1664,"name":"Convolution feedback","username":"aferriss","description":"Running convolution kernel in a feedback loop, alternating blur and sharpen. The poor mans rd :D","likes":45,"published":3,"flags":32,"usePreview":0,"tags":["convolution","feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 offset [9];\nfloat kernel [9];\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 step = 1.0 / res;\n    vec2 uv = fragCoord / res;\n    vec2 coord = -1.0 + 2.0 * uv;\n    coord *= 0.995;\n    coord = coord * 0.5 + 0.5;\n\n    float r = rand(uv + iTime*0.01);\n    r = -1.0 + 2.0*r;\n    \n    offset[0] = vec2(-step.x, -step.y);\n    offset[1] = vec2(0.0, -step.y);\n    offset[2] = vec2(step.x, -step.y);\n    \n    offset[3] = vec2(-step.x, 0.0);\n    offset[4] = vec2(0.0, 0.0);\n    offset[5] = vec2(step.x, 0.0);\n    \n    offset[6] = vec2(-step.x, step.y);\n    offset[7] = vec2(0.0, step.y);\n    offset[8] = vec2(step.x, step.y);\n    \n    kernel[0] = 0.0; kernel[1] = -0.25; kernel[2] = 0.0;\n    kernel[3] = -0.25; kernel[4] = 1.0; kernel[5] = -0.25;\n    kernel[6] = 0.0; kernel[7] = -0.25; kernel[8] = 0.0;\n    \n    vec4 sum = texture(iChannel0, coord);\n    \n    for (int i = 0; i < 9; i++) {\n        vec4 color = texture(iChannel0, coord + offset[i]);\n        sum += color * kernel[i];\n    }\n\n    if(iFrame < 10 || iMouse.z > 0.0){\n    \tfragColor = texture(iChannel1, uv);\n    } else {\n    \tfragColor = clamp(sum+ r*0.025, vec4(0.0), vec4(1.0));//texture(iChannel0, uv);\n        fragColor.a = 1.0;\n    }\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 offset [9];\nfloat kernel [9];\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 res = iResolution.xy;\n    vec2 step = 0.5 / res;\n    vec2 uv = fragCoord / res;\n    vec2 coord = uv;\n    \n   \n    offset[0] = vec2(-step.x, -step.y);\n    offset[1] = vec2(0.0, -step.y);\n    offset[2] = vec2(step.x, -step.y);\n    \n    offset[3] = vec2(-step.x, 0.0);\n    offset[4] = vec2(0.0, 0.0);\n    offset[5] = vec2(step.x, 0.0);\n    \n    offset[6] = vec2(-step.x, step.y);\n    offset[7] = vec2(0.0, step.y);\n    offset[8] = vec2(step.x, step.y);\n    \n    \n    kernel[0] = 1.0; kernel[1] = 1.0; kernel[2] = 1.0;\n    kernel[3] = 1.0; kernel[4] = 1.0; kernel[5] = 1.0;\n    kernel[6] = 1.0; kernel[7] = 1.0; kernel[8] = 1.0;\n    \n    vec4 sum = vec4(0.0);\n    \n    for (int i = 0; i < 9; i++) {\n        vec4 color = texture(iChannel0, coord + offset[i]);\n        sum += color * kernel[i];\n    }\n\tsum /= 9.0;\n    \n    fragColor = clamp(sum , vec4(0.0), vec4(1.0));\n    fragColor.a = 1.0;\n}\n\n","name":"Buf B","description":"","type":"buffer"}]}