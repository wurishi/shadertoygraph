{"ver":"0.1","info":{"id":"DltXWj","date":"1685790361","viewed":58,"name":"idk - Voidbyte","username":"Voidbyte","description":"crystals?","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","stars","shiny"],"hasliked":0,"parentid":"cl3SDj","parentname":"my second shader! -voidbyte"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define palettea vec3(0.250, 0.500, 0.500)\n#define paletteb vec3(0.666, 0.500, 0.666)\n#define palettec vec3(1.000, 1.000, 1.000)\n#define paletted vec3(0.000, 0.333, 0.667)\n\nvec3 palette(float t) {\n    return palettea + paletteb*cos(6.28318*(palettec*t*paletted));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 1.0; i++) {\n        uv = fract(uv * 15.0) - 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n        vec3 col = palette(length(uv0) + i*0.1 + iTime);\n\n        d = sin(d*128.0 + iTime)/128.0;\n        d = abs(d);\n        d = pow(0.002 / d, 2.0);\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}