{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Code stolen from pouet.net and adapted\n// I rewrote this to help a friend understand why it wasn't working with his version.\n// Not intended to be a published shader at all in the first place! ^^\n//\n#define t iTime\n\nfloat spikeball(vec3 p, vec3 v)\n{\nvec3 c[19];\nc[0] = vec3(1,0,0);\nc[1] = vec3(0,1,0);\nc[2] = vec3(0,0,1);\nc[3] = vec3(.577,.577,.577);\nc[4] = vec3(-.577,.577,.577);\nc[5] = vec3(.577,-.577,.577);\nc[6] = vec3(.577,.577,-.577);\nc[7] = vec3(0,.357,.934);\nc[8] = vec3(0,-.357,.934);\nc[9] = vec3(.934,0,.357);\nc[10] = vec3(-.934,0,.357);\nc[11] = vec3(.357,.934,0);\nc[12] = vec3(-.357,.934,0);\nc[13] = vec3(0,.851,.526);\nc[14] = vec3(0,-.851,.526);\nc[15] = vec3(.526,0,.851);\nc[16] = vec3(-.526,0,.851);\nc[17] = vec3(.851,.526,0);\nc[18] = vec3(-.851,.526,0);\n\n\tfloat\tMinDistance = 1e4;\n\tfor ( int i=3; i < 19; i++ )\n\t{\n\t\tfloat\td = clamp( dot( p, c[i] ), -1.0, 1.0 );\n\t\tvec3\tproj = d * c[i];\n\t\td = abs( d );\n\t\t\n\t\tfloat\tDistance2Spike = length( p - proj );\n\t\tfloat\tSpikeThickness = 0.25 * exp( -5.0*d ) + 0.0;\n\t\tfloat\tDistance = Distance2Spike - SpikeThickness;\n\t\t\n\t\tMinDistance = min( MinDistance, Distance );\n\t}\n\t\n\treturn MinDistance;\t\n}\n\n// Rotation\n#define R(p, a) p=cos(a)*p+sin(a)*vec2(p.y,-p.x)\n\nfloat Distance( vec3 p, vec3 v )\n{\n//\tp.z += 10.0;\n//\tp.y += 0.5;\n\tvec3 q = p;\n\tR( p.yz, t );\n\tR( p.xz, 2.0*t + p.x*sin(t)*0.2 );\n\tfloat d = spikeball(p, v);\n//return d;\n\t\n\tfloat nd = dot( q + vec3(0.0,3.0, 0.0), vec3(0.0, 1.0,0.0));\n\treturn min( nd, d ) * 0.8;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec3 p = vec3( 0, 0, 20 );\n\tvec3 v = vec3( (2.0 * uv - 1.0) * vec2( iResolution.x / iResolution.y, 1 ), 0 ) - p;\n\tv = normalize(v);\n  \n  \t// Raymarching loop\n\tfloat r, l, a, s, ml=0.001;\n\tfor ( int i=0; i < 64; i++ )\n\t{\n\t\tl = Distance(p, v);\n\t\tp += l*v;\n\t\tl = abs(l);\n\t\tr += l;\n\t\tif (l < ml*r) break;\n  }    \n\t\n  // Compute normal\n  vec2 epsilon = vec2( 0.01,0.0 );\n  vec3 n=normalize(\n    vec3(\n      Distance(p+epsilon.xyy, v) - Distance(p-epsilon.xyy, v),\n      Distance(p+epsilon.yxy, v) - Distance(p-epsilon.yxy, v),\n      Distance(p+epsilon.yyx, v) - Distance(p-epsilon.yyx, v)\n      )\n    );\n\n  fragColor = vec4( 1.0+dot(n,v) );\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lds3WH","date":"1369324301","viewed":976,"name":"Spikeball Test","username":"Patapom","description":"Small test...","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["spikeball"],"hasliked":0,"parentid":"","parentname":""}}