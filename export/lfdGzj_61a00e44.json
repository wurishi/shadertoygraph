{"ver":"0.1","info":{"id":"lfdGzj","date":"1711912952","viewed":70,"name":"pointy-top hex grid","username":"SouldSol","description":"Adapted from rtsonneveld's shader: https://www.shadertoy.com/view/wdycW1\nwhich was, in turn,\nExtracted from mattz's shader: Hex grid traversal, https://www.shadertoy.com/view/XdSyzK","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gridhexhexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float hex_factor = 0.8660254037844386;\n\n// stretch the y axis (for pointy-top hexes)\n#define HEX_FROM_CART(p) vec2(p.x, p.y / hex_factor)\n#define CART_FROM_HEX(g) vec2(g.x, g.y * hex_factor)\n#define LINECOLOR vec3(0.75, 0.75, 0.75)\n\nvec2 nearestHexCell(in vec2 pos) {\n    \n    // integer coords in hex center grid -- will need to be adjusted\n    vec2 gpos = HEX_FROM_CART(pos);\n    vec2 hex_int = floor(gpos);\n\n    // adjust integer coords\n    float sx = step(2.0, mod(hex_int.y+1.0, 4.0));\n    hex_int += mod(vec2(hex_int.x + sx, hex_int.y), 2.0);\n\n    // difference vector\n    vec2 gdiff = gpos - hex_int;\n\n    // figure out which side of line we are on and modify\n    // hex center if necessary\n    if (dot(abs(gdiff), vec2(0.5, hex_factor*hex_factor)) > 1.0) {\n        vec2 delta = sign(gdiff) * vec2(1.0, 2.0);\n        hex_int += delta;\n    }\n\n    return hex_int;\n    \n}\n\n//////////////////////////////////////////////////////////////////////\n// Used only for visualization\n\nfloat hexDist(vec2 p) {\n    p = abs(p);\n    return max(dot(p, vec2(0.5, hex_factor)), p.x) - 1.0;\n}\n\n//////////////////////////////////////////////////////////////////////\n// Main function\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    float scale = iResolution.x / 20.0;\n\n    float gridline_width = max(0.05, 0.125 / scale);\n\n    //////////////////////////////////////////////////\n    // get fragment position\n    vec2 pos = (fragCoord.xy + 0.5 - .5*iResolution.xy) / scale;\n\n\n    //////////////////////////////////////////////////\n    // visualization\n\n    vec2 pos_cell = nearestHexCell(pos);\n    \n    float d = abs(hexDist(pos - CART_FROM_HEX(pos_cell)));\n\n    vec3 c;\n\n    c = LINECOLOR;\n\n    // grid lines\n    c *= smoothstep(0.0, 1.0/scale, d-gridline_width);\n\n    fragColor = vec4(c, 1.0);\n            \n}","name":"Image","description":"","type":"image"}]}