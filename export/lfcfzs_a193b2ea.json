{"ver":"0.1","info":{"id":"lfcfzs","date":"1733380953","viewed":52,"name":"Truchet pattern :)","username":"vanshika","description":"colorful truchet tiling pattern that I can't stop playing around with.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["colorful","animation","truchettiling"],"hasliked":0,"parentid":"lfGcRG","parentname":"Truchet tiling Basic"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Built from tutorial by The Art Of Code: https://youtu.be/2R7h76GoIJM?si=noFB-47cRYlyPvF6\n\nfloat Hash21(vec2 p){\n    p = fract(p*vec2(237.21,656.56));\n    p += dot(p, p+32.23);\n    return fract(p.x*p.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    uv.x += iTime * .2;\n    uv *= 5.;\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    float n = Hash21(id);\n    float width = .4;\n    \n    if(n<.5) gv.x *= -1.;\n    vec2 cUv = gv-.5*sign(gv.x + gv.y+.001);\n    float d = abs(abs(gv.x + gv.y)-.5);\n    d = length(cUv);\n    \n    float mask = smoothstep(.01, -.01, abs(d-.5)-width);\n    \n    float angle = atan(cUv.x, cUv.y);\n    float checker = mod(id.x+id.y, 2.)*2.-1.;\n    \n    float x = fract(checker*angle*5./1.57-iTime);\n    float y = (d-(.5-width))/(2.*width);\n    y = abs(y - .5)*2.;\n    \n    // messing with numbers here gives lots of cool patterns\n    vec2 tUv = vec2(x, y); // try setting y to 0 or multiplying it with different numbers.\n    float pattern = .4/length(tUv-.3);//can experiment with thickness and brightness of the pattern.\n    //vec3 color = sin(.2*iTime*vec3(.134+tUv.x, .673-tUv.y, .234));\n    //col += color;\n    col.gb += tan(tUv*mask+2.)+2.*pattern*(abs(gv.x)); //can experiment with colors\n    col.r += tUv.y*.7;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}