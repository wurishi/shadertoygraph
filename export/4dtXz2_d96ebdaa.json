{"ver":"0.1","info":{"id":"4dtXz2","date":"1460344457","viewed":172,"name":"Complex Function Plotting","username":"Dodecaplex","description":"Fun with complex numbers!","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["2d","graph","function","plot","complex","phase"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n////////////////////////////////////////////////////////////////////////////////\n// Complex Operations\nvec2 ccon(in vec2 z) {\n\treturn vec2(z.x, -z.y);   \n}\n\nvec2 cmul(in vec2 u, in vec2 v) {\n\treturn vec2(u.x*v.x - u.y*v.y, u.y*v.x + u.x*v.y);\n}\n\nvec2 cdiv(in vec2 u, in vec2 v) {\n\treturn vec2(u.x*v.x + u.y*v.y, u.y*v.x - u.x*v.y) / (v.x*v.x + v.y*v.y);\n}\n\nfloat cabs(in vec2 z) { return length(z);      }\nfloat carg(in vec2 z) { return atan(z.y, z.x); }\n\nvec2 cpow(vec2 b, vec2 e) {\n\tfloat ab = carg(b);\n\tfloat lgb = log(b.x*b.x + b.y*b.y) / 2.0;\n\tfloat lr = exp(lgb*e.x - ab*e.y);\n\tfloat cis = lgb*e.y + ab*e.x;\n\treturn vec2(cos(cis)*lr, sin(cis)*lr);\n}\n\nvec2 cexp(vec2 z) {\n\treturn exp(z.x) * vec2(cos(z.y),sin(z.y));\n}\n\nvec2 clog(vec2 z) {\n\treturn vec2(log(z.x*z.x + z.y*z.y) / 2.0, carg(z));\n}\n\nvec2 cmobius(vec2 z, vec2 a, vec2 b, vec2 c, vec2 d) {\n    return cdiv(cmul(a,z) + b, cmul(c,z) + d);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HCL Colorspace: https://www.shadertoy.com/view/ls2yzy\nfloat lab_xyz(float t) {\n    const float t0 = 4.0 / 29.0;\n\tconst float t1 = 6.0 / 29.0;\n\tconst float t2 = 3.0 * t1 * t1;\n\tconst float t3 = t1 * t1 * t1;\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfloat xyz_rgb(float x) {\n    return x <= 0.0031308 ? 12.92 * x : 1.055 * pow(x, 1.0 / 2.4) - 0.055;\n}\n\nvec3 lab2rgb(vec3 lab) {\n    const float X = 0.950470;\n\tconst float Y = 1.0;\n\tconst float Z = 1.088830;\n    \n    float l = lab.x;\n    float a = lab.y;\n    float b = lab.z;\n    float y = (l + 16.0) / 116.0;\n    float x = y + a / 500.0;\n    float z = y - b / 200.0;\n    x = lab_xyz(x) * X;\n    y = lab_xyz(y) * Y;\n    z = lab_xyz(z) * Z;\n    return vec3(\n        xyz_rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z),\n\t\txyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz_rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n}\n\nvec3 hcl2lab(vec3 hcl) {\n    float h = hcl.x;\n    float c = hcl.y;\n    float l = hcl.z;\n    h = radians(h);\n    return vec3(l, cos(h) * c, sin(h) * c);\n}\n\nvec3 hcl2rgb(vec3 hcl) {\n    return lab2rgb(hcl2lab(hcl));\n}\n\nvec3 hcl(float h, float c, float l)\n{\n\treturn hcl2rgb(vec3(h * 360.0, c * 128.0, l * 100.0));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n#define SCALE 1.0\nvec2 rectify(vec2 v) { return SCALE*(v+v-iResolution.xy)/iResolution.y; }\n\n#define SHOW_dR 1.0\n#define SHOW_R1 1.0\n#define SHOW_dT 8.0\n\n#define GRID_W 0.01\n#define SHOW_dx 1.0\n#define SHOW_dy 1.0\n\n// the complex function to plot\nvec2 f(in vec2 z) { // EDIT ME!! ðŸ¥º\n    vec2 m = rectify(iMouse.xy);\n        \n\tz = cpow(z, vec2(3, 0)) - 0.5 * z + cmul(m, vec2(0.2 + 0.5*cos(iTime*0.2), 0.8*sin(iTime*0.46)));\n    z = cmul(z, cexp(vec2(0, iTime)));\n    \n    vec2 c = z;\n    for (int i = 0; i < 4; ++i) {\n        z = cmul(z,z) + c;\n    }\n    \n    return z;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = rectify(fragCoord);\n    vec2 q = p;\n    \n\tp = f(p);\n    \n    float r = cabs(p);\n    float t = carg(p) / TAU;\n    \n    float cr = SHOW_dR!=0.0 ? mix(0.25,0.5,fract(log(r)*SHOW_dR)) : 0.4;\n    float rr = SHOW_R1!=0.0 ? 1.0-step(SHOW_R1, r)+0.5 : 1.0;\n    float ct = SHOW_dT>0.0 ? mix(0.9, 1.1,fract(t*SHOW_dT)) : 1.0;\n    \n    float grid = 1.0 - max(\n        step(fract(abs(q.x*SHOW_dx)), GRID_W*SHOW_dx),\n        step(fract(abs(q.y*SHOW_dy)), GRID_W*SHOW_dy)\n    );\n    \n    fragColor = vec4(\n        hcl(\n            t,\n            0.5 * grid,\n            rr * cr * ct\n        ),\n        1.0\n    );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    fragCoord -= iResolution.xy / 2.0;\n    fragColor = vec4(length(fragCoord)/100.0 - 1.0,mod(atan(fragCoord.y, fragCoord.x)/3.14 + iTime/2.0, 1.0),0.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}