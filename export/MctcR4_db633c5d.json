{"ver":"0.1","info":{"id":"MctcR4","date":"1730344391","viewed":16,"name":"polar_coord_","username":"rntrn","description":"#5","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\nfloat atan2(float x, float y){\n    if(x == 0.0){\n        return sign(y)*PI/2.0;\n    }\n    else{\n        return atan(y,x);\n    }\n}\n\nvec2 coord2pol(vec2 xy){\n    return vec2(atan2(xy.x, xy.y), length(xy));    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = coord2pol(uv);\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}