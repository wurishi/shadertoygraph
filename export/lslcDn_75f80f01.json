{"ver":"0.1","info":{"id":"lslcDn","date":"1487770924","viewed":863,"name":"Sinwave glitch effect","username":"skell","description":"Inspired by Narita Boy's glitch effect from the kickstarter, it creates a changing and complex sine wave by displacing the rows of the image, it's slightly like some of the VHS playback glitches","likes":12,"published":1,"flags":0,"usePreview":1,"tags":["2d","crt","glitch","sinus","vhs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float POWER = 0.04; // How much the effect can spread horizontally\n    float VERTICAL_SPREAD = 7.0; // How vertically is the sin wave spread\n    float ANIM_SPEED = 0.4f; // Animation speed\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float y = (uv.y + iTime * ANIM_SPEED) * VERTICAL_SPREAD;\n    \n    uv.x += ( \n        // This is the heart of the effect, feel free to modify\n        // The sin functions here or add more to make it more complex \n        // and less regular\n        sin(y) \n        + sin(y * 10.0) * 0.2 \n        + sin(y * 50.0) * 0.03\n    ) \n        * POWER // Limit by maximum spread\n        * sin(uv.y * 3.14) // Disable on edges / make the spread a bell curve\n        * sin(iTime); // And make the power change in time\n    \n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}