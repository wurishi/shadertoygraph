{"ver":"0.1","info":{"id":"cdlcDN","date":"1686828229","viewed":55,"name":"field of hearts","username":"Vexatious","description":"hearts","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hearts"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fade(float value, float start, float end)\n{\n    return (clamp(value,start,end)-start)/(end-start);\n}\n\nfloat N21(vec2 p) {\n\tvec3 a = fract(vec3(p.xyx) * vec3(213.897, 653.453, 253.098));\n    a += dot(a, a.yzx + 79.76);\n    return fract((a.x + a.y) * a.z);\n}\n\nvec2 GetPos(vec2 id, vec2 offs, float t) {\n    float n = N21(id+offs);\n    float n1 = fract(n*10.);\n    float n2 = fract(n*100.);\n    float a = t+n;\n    return offs + vec2(sin(a*n1), cos(a*n2))*.4;\n}\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\nfloat Layer(vec2 uv0){\n\n    uv0 *=10.;\n    vec2 uv = uv0;\n    uv*=.1;\n    vec2 id = floor(uv);\n\n    uv = fract(uv)-.5;\n   \n    \n    float t = iTime *.1;\n    vec2 p[9];\n    float m = 0.;\n    float sparkle = 0.;\n    \n    int i = 0;\n    for(float y = -1.; y <= 1.; y += 1.){\n     for(float x = -1.; x <= 1.; x += 1.){\n         p[i++] = GetPos(floor(id),vec2(x,y),t);   \n       \n      }\n    }\n    \n    for(int i = 0; i < 9; i++){\n        float d = -sdHeart((uv  - p[i])* 3.);\n        //d=smoothstep(0.,.3,d);\n        //d = 1./d;\n        //d= (sin(iTime*0.2)*.05) + 0.01/d;\n        \n        //float s = (.005/(d*d));\n        float s = smoothstep(0.,.2, d);\n        float pulse = sin((fract(p[i].x)+fract(p[i].y)+iTime*.5)*3.)*.5+1.;\n        pulse = pow(pulse, 3.);\n\n        s *= pulse;\n        sparkle += s;\n    }\n    \n    m += sparkle;//(*.5+.5);\n    \n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    vec2 uv0 = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n    vec2 M = iMouse.xy/iResolution.xy-.5;\n    \n    float t = iTime*.2 + 200.;\n    \n    float s = sin(t);\n    float c = cos(t);\n    mat2 rot = mat2(c, -s, s, c);\n    vec2 st = uv0; \n\tM *= rot*2.;\n    \n    float m = 0.;\n   \n    for(float i=0.; i < 3.; i+= 1./4.){\n        float z = fract(i+t);\n        float size = mix(10.,.5,z);\n        float fade = smoothstep(0.,.5,z) * smoothstep(1.,0.8,z);\n        m += Layer(st*size-M*z+ i*30. + z) * fade;\n    \n    }\n\n    \n    fragColor = vec4(vec3(0.957,0.384,0.631) * m,1.);\n}","name":"Image","description":"","type":"image"}]}