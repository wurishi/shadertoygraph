{"ver":"0.1","info":{"id":"4ldczX","date":"1563778036","viewed":167,"name":"Ripple Outward","username":"OtoriScorp","description":"simple ripple outwards","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 bubble(vec2 uv, vec2 pos, float radius, float center, float strength) {    \n    vec2 dir = pos-uv;    \n    dir.x *=iResolution.x/iResolution.y;    \n    \n    \n    // could substitute smoothstep with other equation for a different curve\n    vec2 factor = dir * strength* smoothstep(radius, center, length(dir));\n    return factor;\n}\n\nvec2 ripple(vec2 uv, vec2 pos, float t, float aspect){\n    \n    uv.x *= aspect;\n    pos.x *= aspect;\n    \n\tvec3 WaveParams = vec3(10.5, 0.5, mix(0.,0.1,t));\n    \n    float Dist = distance(uv,pos);    \n    \n    \n    //Only distort the pixels within the parameter distance from the centre\n\tif ((Dist <= ((t) + (WaveParams.z))) && \n\t\t(Dist >= ((t) - (WaveParams.z)))) \n\t{\n        //The pixel offset distance based on the input parameters\n\t\tfloat Diff = (Dist - t); \n\t\tfloat ScaleDiff = (1.0 - pow(abs(Diff * WaveParams.x), WaveParams.y)); \n\t\tfloat DiffTime = (Diff  * ScaleDiff);\n        \n        //The direction of the distortion\n\t\tvec2 offset = (uv - pos);    \n    \n        \n        //Perform the distortion and reduce the effect over time\n\t\treturn (normalize(offset) * DiffTime) / (t * Dist * 10.0);\n        \n        //Blow out the color and reduce the effect over time\n\t\t//Color += (Color * ScaleDiff) / (CurrentTime * Dist * 40.0);\n\t} \n    return vec2(0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n    float aspect = iResolution.x/iResolution.y;\n    vec2 m = iMouse.xy / iResolution.xy;\n    float radius=0.2;\n    float center=0.05;\n    float strength = 2.;\t\n    \n    float t = clamp((sin(iTime*3.)+1.)*0.5, 0., 1.);\n    float bt = clamp( (1.-t) * t * 4., 0., 1.);\n    vec2 b1 = bubble(uv, m, radius*bt, center*bt, strength*bt);\n    b1.x /= aspect;\n    \n    //vec2 b2 = bubble(uv, vec2(0.3, 0.7), radius, center, strength);\n    //b2.x /= aspect;\n    \n    \n    vec2 r1 = ripple(uv, m, t, aspect);\n    r1 /= aspect;\n    \n    uv += b1;\n    uv += r1;\n    //uv += b2;\n    vec4 col = texture(iChannel0, uv);\n\t\n\tfragColor = col;\n\n}","name":"Image","description":"","type":"image"}]}