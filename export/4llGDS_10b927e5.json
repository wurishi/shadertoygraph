{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nfloat pi = 3.14159265359;\nfloat t0 = 7.0/4.0 * 3.14159265359;\nfloat t1 = 13.0/4.0 * 3.14159265359;\nvec3 black = vec3(0.0,0.0,0.0);\nvec3 yellow = vec3(1.0,1.0,0.0);\nvec3 gray50 = vec3(.5,.5,.5);\n\n// Returns distance to the outline of the knob.\nfloat knobDistance(vec2 p, float r) {\n    \n    float costheta = dot(normalize(p), vec2(0,1));\n    \n    float t = 5.0/4.0 * pi;\n    \n    if(costheta > cos(t))\n        return abs(length(p)-r);\n    \n    // Return minimum distance to endpoints.\n    vec2 p0 = vec2(cos(t0), sin(t0)) * r;\n    vec2 p1 = vec2(cos(t1), sin(t1)) * r;\n    \n    float d0 = length(p - p0);\n    float d1 = length(p - p1);\n    \n    return min(d0, d1);\n    \n}\n\n// SRC_ALPHA, ONE_MINUS_SRC_ALPHA\nvec3 blend(vec3 fb, vec4 c) {\n    return mix(fb, c.rgb, c.a);\n}\n    \nvec3 knob(vec2 p, float r, float value) {\n    \n    value = clamp(value, 0.0, 1.0);\n    \n    // Color of the background layer.\n    vec3 bgColor = gray50;\n    \n    // theta for the knob's value.\n    float tValue = mix(t1, t0, value);\n    \n    vec2 valueP = vec2(cos(tValue), sin(tValue)) * r;\n    float vd = length(p-valueP);\n   \n    // Make some sort of blobby thing out of the value dot\n    // distance and the outline.\n    float d = sqrt(knobDistance(p, r) * vd);\n    \n    // Start with black.\n    vec3 c = black;\n    \n    // Calculate the color for the background layer.\n    vec4 bg = vec4(bgColor, 1.0-smoothstep(30.0, 35.0, d));\n    c = blend(c, bg);\n    \n    // Calculate the color for the value dot layer.\n    vec4 vdc = vec4(yellow, 1.0-smoothstep(19.0, 20.0, vd));\n    c = blend(c, vdc);\n    \n    return c;\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - .5 * iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    vec3 c = knob(uv, 100.0, iMouse.x/400.0);\n    // c.rgb = c.rgb * c.a;\n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4llGDS","date":"1424826147","viewed":250,"name":"Organic Knob","username":"tayholliday","description":"Drag the mouse horizontally to turn the knob.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}