{"ver":"0.1","info":{"id":"XtGGWG","date":"1476331957","viewed":444,"name":"See-Through","username":"jackdavenport","description":"Uses iq's \"Trick!\" shader to create a full raytracer with a transparent background. Also added some fake reflection/refraction to make it seem more like an object drawn over the page background. :)\n\nBackground shader and source in Buf A.","likes":5,"published":1,"flags":32,"usePreview":1,"tags":["raytracer","refraction","transparent","seethrough"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LIGHT_DIR vec3(0.639602, 0.426401, -0.639602) // (45.,30.,-45.) normalized\n\nvec2 rot2D(vec2 p, float angle) {\n    angle = radians(angle);\n    float s = sin(angle), c = cos(angle);\n    return mat2(c,s,-s,c)*p;\n}\n\nvec2 intSphere(vec3 ro, vec3 rd, vec3 p, float r) {\n    float a = dot(rd,rd);\n    float b = 2.*dot(rd,ro-p);\n    float c = dot(ro-p,ro-p)-(r*r);\n    float d = (b*b)-4.*a*c;\n    float l = (-b-sqrt(d))/(2.*a);\n    return vec2(l,(l >= 0. && d >= 0.)?0.:-1.);\n}\n\nvec3 shade(vec2 uv, vec3 ro, vec3 rd) {\n    vec3  sp = vec3(((iMouse.xy/iResolution.xy)*2.-1.)*.25,0.);\n    vec2 scn = intSphere(ro,rd,sp,1.);\n    vec3 col = texture(iChannel0, uv).xyz;\n    if(scn.y == 0.) {\n        vec3 p = ro+rd*scn.x;\n        vec3 n = normalize(p-sp);\n        vec3 rl = normalize(reflect(rd,n));\n        vec3 rf = normalize(refract(rd,n,.6));\n        \n        col = texture(iChannel0, (rf.xy/rf.z)/2.+.5).xyz;\n        \n        float d = max(dot(LIGHT_DIR,n),0.);\n        float s = pow(max(dot(LIGHT_DIR,rl),0.),60.);\n        col = (col*d)+s;\n        \n        vec3 rc = texture(iChannel0, (rl.xy/rl.z)/2.+.5).xyz;\n        float f = 1.-pow(max(-dot(rd,n),0.),.5);\n        col = mix(col, rc, f);\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * .5) / iResolution.y;\n    \n    vec3 ori = vec3(0.,0.,-3.);\n    vec3 dir = vec3(uv, 1.);\n    \n    fragColor.xyz = shade(fragCoord/iResolution.xy,ori,normalize(dir));\n    fragColor.w   = 1.;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Background pattern by iq\n// Source: https://www.shadertoy.com/view/XljSRK\nfloat pattern( in vec2 p )\n{\n    vec2 uv = p + 0.1*texture( iChannel1, 0.05*p ).xy;\n    return texture( iChannel0, 16.0*uv ).x;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float fa = pattern( (fragCoord+0.0)/iChannelResolution[0].xy );\n    float fb = pattern( (fragCoord-0.5)/iChannelResolution[0].xy );\n    \n    vec3 col = vec3( 0.822 + 0.4*(fa-fb) );\n    fragColor = vec4(col, 1);\n}","name":"Buf A","description":"","type":"buffer"}]}