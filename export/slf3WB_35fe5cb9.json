{"ver":"0.1","info":{"id":"slf3WB","date":"1622728017","viewed":64,"name":"Value noise 2D __","username":"Envy24","description":"value, noise, random","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","random","value"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* playlist: https://www.shadertoy.com/playlist/sXfSDS */\n\n/*\n    Returns hash in range [0.0; 1.0].\n*/\nfloat sample2DHashUI32(uint x, uint y)\n{\n    // Pick some enthropy source values.\n    // Try different values.\n    const uint enthropy0 = 123u;\n    const uint enthropy1 = 456u;\n    const uint enthropy2 = 789u;\n\n    // Use linear offset method to mix coordinates.\n    uint value = y * enthropy2 + x;\n\n    // Calculate hash.\n\tvalue += enthropy1;\n\tvalue *= 445593459u;\n\tvalue ^= enthropy0;\n    \n    // 1.0f / 4294967295.0f = 2.32830644e-10\n\n    return float(value * value * value) * 2.32830644e-10;\n}\n\nfloat valuetNoise2D(float u, float v)\n{\n    // Fractial part.\n    float fractU = u - floor(u);\n    float fractV = v - floor(v);\n\n    // Integer part.\n    u = floor(u);\n    v = floor(v);\n    \n    // Smoothstep.\n    float tU = fractU * fractU * (3.0 - 2.0 * fractU);\n    float tV = fractV * fractV * (3.0 - 2.0 * fractV);\n    \n    // Pseudorandom samples.\n    float sample0 = sample2DHashUI32(uint(u),       uint(v));\n    float sample1 = sample2DHashUI32(uint(u + 1.0), uint(v));\n    float sample2 = sample2DHashUI32(uint(u),       uint(v + 1.0));\n    float sample3 = sample2DHashUI32(uint(u + 1.0), uint(v + 1.0));\n\n    // Bilinear interpolation.\n    return \n        sample0 * (1.0 - tU) * (1.0 - tV) + \n        sample1 * tU         * (1.0 - tV) +\n        sample2 * (1.0 - tU) * tV +\n        sample3 * tU         * tV;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 6.0f;\n    \n    float _u = uv.x + iMouse.x * 0.1f + iTime * 0.1f;\n    float _v = uv.y + iMouse.x * 0.1f + iTime * 0.1f;\n\n    float gray = valuetNoise2D(_u, _v) * 0.25f;\n    gray += valuetNoise2D(_u * 2.054f, _v * 2.354f) * 0.125f;\n    gray += valuetNoise2D(_u * 4.554f, _v * 4.254f) * 0.125f;\n    gray += valuetNoise2D(_u * 8.554f, _v * 8.754f) * 0.0625f;\n    gray += valuetNoise2D(_u * 9.554f, _v * 9.154f) * 0.025f;\n    gray += valuetNoise2D(_u * 16.554f, _v * 16.854f) * 0.025f;\n    gray += valuetNoise2D(_u * 32.554f, _v * 32.354f) * 0.025f;\n      \n    // Output to screen\n    fragColor = vec4(vec3(gray),1.0);\n}","name":"Image","description":"","type":"image"}]}