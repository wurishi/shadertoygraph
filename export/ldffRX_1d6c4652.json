{"ver":"0.1","info":{"id":"ldffRX","date":"1500429002","viewed":104,"name":"Coprime number map","username":"aadeon","description":"Uses Euclid's algorithm to find greatest common denominators.\nNumbers with coprime coordinates (gcd = 1) are colored black.\nHigher gcd -> lighter color.\nVertical mouse movement = raise gcd threshold\nHorizontal mouse movement = zoom in/out.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["coprime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int gcd(float x, float y)\n{\n    int a = int(x);\n    int b = int(y);\n    int t;\n    while (0!=b)\n    {\n     \tt=b;\n        b=a%b;\n        a=t;\n    }\n    return a;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec4 BLACK = vec4(0.0,0.0,0.0,0.0);\n\tvec4 WHITE = vec4(1.0,1.0,1.0,0.0);\n    vec4 GREY = vec4(0.5,0.5,0.5,0.0);\n    vec4 RED = vec4(1.0,0.0,0.0,0.0);\n    vec4 GREEN = vec4(0.0,1.0,0.0,0.0);\n    vec4 BLUE = vec4(0.0,0.0,1.0,0.0);\n   \n    \n    vec2 muv = iMouse.xy / iResolution.xy;\n    float scale = clamp((muv.x)+0.1,0.0,1.0);\n    \n    float x = floor(fragCoord.x*scale);\n    float y = floor(fragCoord.y*scale);\n\t\n\n    \n    \n    int z = gcd(x,y);\n\n\n    //tick marks on the edges every 10 squares\n\tif ((y==0.0 && mod(x,100.0)==0.0)||(x==0.0 && mod(y,100.0)==0.0))\n    {\n        fragColor = RED;\n    }\n    else if ((y==0.0 && mod(x,10.0)==0.0)||(x==0.0 && mod(y,10.0)==0.0))\n    {\n        fragColor = BLUE;\n    }\n\telse if (1 == z)\n    {\n       fragColor = BLACK;\n    }\n\telse\n    {        \n        \n        float w = 1.5-(1.0/muv.y)/float(z);\n        \n\t\tfragColor = WHITE*w;\n    }\n}\n\n","name":"Image","description":"","type":"image"}]}