{"ver":"0.1","info":{"id":"slyfDm","date":"1664616852","viewed":112,"name":"rgb pie","username":"mvlabat","description":"Audition for a macos loading cursor","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circle","macoscursor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (to have (0,0) as a circle center)\n    vec2 uv = fragCoord/iResolution.xy - vec2(0.5);\n    uv.x = uv.x * (iResolution.x / iResolution.y);\n    \n    float lenSq = 0.5 * 0.5;\n    float rSq = dot(uv, uv);\n    float isCircle = smoothstep(lenSq, lenSq * 0.9, rSq);\n    \n    vec3 slices[] = vec3[](\n        vec3(1.0, 0.0, 1.0),\n        vec3(1.0, 0.0, 0.0),\n        vec3(1.0, 1.0, 0.0),\n        vec3(0.0, 1.0, 0.0),\n        vec3(0.0, 1.0, 1.0),\n        vec3(0.0, 0.0, 1.0)\n    );\n    float slicesLenF = float(slices.length());\n    \n    float iAngle = (atan(uv.y, uv.x) + M_PI) * slicesLenF / M_PI / 2.0;\n    float diedForOurSins = -sin(rSq) * 2.0;\n    float waved = iAngle + diedForOurSins;\n    float iFloat = mod(waved + mod(iTime * 2.0, slicesLenF) + slicesLenF, slicesLenF);\n    \n    int i = int(iFloat);\n    int prevI = (i + slices.length() - 1) % slices.length();\n    int nextI = (i + 1) % slices.length();\n    \n    // from 0 to 1\n    float sliceAngle = mod(iFloat, 1.0);\n    float blendAngle = 0.05;\n    \n    float prevColorA = 1.0 - smoothstep(-blendAngle, blendAngle, sliceAngle);\n    float nextColorA = smoothstep(1.0 - blendAngle, 1.0 + blendAngle, sliceAngle);\n    float colorA = 1.0 - prevColorA - nextColorA;\n    vec3 blendSliceColor =\n        slices[prevI] * prevColorA\n        + slices[i] * colorA\n        + slices[nextI] * nextColorA;\n\n    // Output to screen\n    fragColor = vec4(blendSliceColor * isCircle, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}