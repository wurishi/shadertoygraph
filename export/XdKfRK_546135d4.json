{"ver":"0.1","info":{"id":"XdKfRK","date":"1529555022","viewed":195,"name":"Smart Grass","username":"Veggiebob","description":"mouse.x = bend left and right\nmouse.y = bend more and more","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grass","trig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nPorted from here (a little bit):\nhttps://www.khanacademy.org/computer-programming/interactive-grass/5343144160591872\nif (frameCount%5===0){\n        loadPixels();\n        for(var y = 0; y<height; y++){\n            for(var x = 0; x<width; x++){\n                if (sin((x+sin(y*(mouseY/400)*4)*((400-mouseX)/200-1)*10)*9)>y/103-1){\n                    imageData.data[400*(height-y)*4+x*4] = 25;\n                    imageData.data[400*(height-y)*4+x*4+1] = 255;\n                    imageData.data[400*(height-y)*4+x*4+2] = 0;\n                    imageData.data[400*(height-y)*4+x*4+3] = 255-sin((x+sin(y*(mouseY/400)*4)*((400-mouseX)/200-1)*10)*9)*98;\n                } else {\n                    set(x, height-y, color(0, y/400*255, 255));\n                }\n            }\n        }\n        updatePixels();\n    }\nmy original program from Khanacademy . . . yes, I could only it every 5 frames. It was that slow.\n*/\nconst float PI = 3.1415926535;\nvec3 blend (vec3 col1, vec3 col2, float k){\n    return col1*(1.-k)+col2*k;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    mouse.x*=0.5;\n    if(iMouse.xy==vec2(0.)){\n        mouse = vec2(1., 0.8);\n    }\n    float music = texture(iChannel1, vec2(0.02, 0.)).r;\n    vec2 control = mouse;\n    control.x+=sin(iTime);\n    //control.x = mod(control.x, 0.5);\n    vec3 col = vec3(1.);\n    float blades = 8.;\n    float bladeBendY = 15.*control.y;\n    float bladeDiminish = 1./music;\n    float threshold = 0.5;\n    float bend = sin(uv.y*bladeBendY-control.x*15.);\n    float s = abs(sin(uv.x*PI*blades+bend))-(uv.y-0.45)*bladeDiminish;\n    float grassTex = -texture(iChannel0, vec2(sin(uv.x*PI*blades+bend)+uv.x+iTime*0.01, uv.y*0.2+uv.x)).r*0.1;\n    \n    vec2 b = vec2(uv.x, uv.y);\n    b.x += texture(iChannel0, b*0.1).r;\n    b.y+=texture(iChannel0, vec2(iTime*0.01, b.x*0.05)).r*0.8;\n    vec3 back = vec3(0., b.y, b.y);\n    if(s>threshold){\n    \ts+=grassTex;\n    \tcol = vec3(s/(sqrt(-grassTex))*0.07, s, 0.);\n    \tcol = blend(col, back, clamp(1.-s, 0.2, 0.3));\n    } else {\n        col = back;\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}