{"ver":"0.1","info":{"id":"cdVfWD","date":"1698240008","viewed":51,"name":"inversion wipe","username":"GeoKureli","description":"for broster","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["invert","wipe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 invert(vec3 color)\n{\n    return vec3(1.0, 1.0, 1.0) - color;\n}\n\nfloat looplerp (float time, float period)\n{\n    float t = time / period * 2.0;\n    return 1.0 - abs(mod(t, 2.0) - 1.0);\n}\n\nfloat distanceToCenter(vec2 uv)\n{\n    \n    vec2 coord = uv * 2.0 - 1.0;\n    return length(vec2(coord.x * iResolution.x / iResolution.y, coord.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n    \n    float aspectRatio = iResolution.x / iResolution.y;;\n    // distance from center screen to corner\n\tfloat maxRadius = sqrt(1.0 + aspectRatio * aspectRatio);\n    \n    float filled = looplerp(iTime, 2.0);\n    \n\tif(distanceToCenter(uv) < maxRadius * filled)\n    {\n\t\tfragColor.rgb = invert(fragColor.rgb);\n    }\n}","name":"Image","description":"","type":"image"}]}