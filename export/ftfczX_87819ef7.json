{"ver":"0.1","info":{"id":"ftfczX","date":"1648389741","viewed":196,"name":"crazy ca","username":"Carandiru","description":"forked from cellular automaton with a single convolution - a really interesting ca by \" icantcomeupwithausername\"","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["convolution","ca"],"hasliked":0,"parentid":"7lsyRj","parentname":"convolutional CA"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// forked from cellular automaton with a single convolution - a really interesting ca by \" icantcomeupwithausername\"\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;  \n    fragColor = sqrt(texture(iChannel0, uv));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat3 kernel = mat3(\n    0.618, -0.9, 0.618,\n    -0.9, -0.1, -0.9,\n    0.618, -0.9, 0.618\n);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    if(iFrame < 10){\n        fragColor = texture(iChannel1, uv);\n    }else{ \n        //convolution\n        float count = 0.0f;\n        vec3 sum = vec3(0);\n        for(int y = -2; y <= 2; y++){\n            for(int x = -2; x <= 2; x++){\n                sum += texture(iChannel0, uv + vec2(float(x), float(y)) / iResolution.xy).xyz * kernel[y][x];\n                ++count;\n            }\n        }\n        \n        //inverse gaussian\n        sum = 1.0f - exp2(-0.287f * sum * sum);\n        sum -= 0.5f * sum / count;\n\n        if(iMouse.z > 0.0){\n            uv = uv * 2.0 - 1.0;\n            uv.x *= iResolution.x / iResolution.y;\n            \n            vec2 m = iMouse.xy / iResolution.xy * 2.0 - 1.0;\n            m.x *= iResolution.x/iResolution.y;\n            if((uv.x-m.x)*(uv.x-m.x) + (uv.y-m.y)*(uv.y-m.y) < 0.01) {\n                sum++;\n            } \n        }\n        \n        fragColor = vec4(sum, 1.0);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = mix(texture(iChannel0, uv), texture(iChannel1, uv), 0.05); //smooth out flickering\n}","name":"Buffer B","description":"","type":"buffer"}]}