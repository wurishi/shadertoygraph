{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\nfloat SCurve (float value, float amount, float correction) {\n\n\tfloat curve = 1.0; \n\n    if (value < 0.5)\n    {\n\n        curve = pow(value, amount) * pow(2.0, amount) * 0.5; \n    }\n        \n    else\n    { \t\n    \tcurve = 1.0 - pow(1.0 - value, amount) * pow(2.0, amount) * 0.5; \n    }\n\n    return pow(curve, correction);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    vec4 C = texture(iChannel0, uv);\n   \tvec4 A = C; \n    \n    \t// Writing this as a sort of 'note to self' \n    \n    \t// Applies an S curve to the image, you can adjust the steepness\n    \t// of the curve with the control values SCurve(input, steepness, gamma)\n    \n    \tC = vec4(SCurve(C.r, 4.0, 1.0), SCurve(C.g, 3.7, 0.7), SCurve(C.b, 2.6, 0.6), 1.0); \n    \n    fragColor = C;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MlXGRf","date":"1423752699","viewed":1237,"name":"Sigmoid Contrast (Adjustable)","username":"Loadus","description":"Addition to the sigmoid contrast shader posted before - I needed one where I can directly adjust the steepness of the curve, so I cooked up this version. ","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["curve","cubic","sigmoid","lut","exposure"],"hasliked":0,"parentid":"","parentname":""}}