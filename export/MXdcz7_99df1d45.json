{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Main Image: Display Final Output\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Final output from Buffer B\n    vec4 trails = texture(iChannel0, uv);\n\n    // Optional: Add slight vignette for effect\n    vec2 center = vec2(0.5, 0.5);\n    float vignette = smoothstep(0.8, 0.2, length(uv - center));\n    trails.rgb *= vignette;\n\n    fragColor = trails;\n}\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[],"code":"// Buffer A: Vibrant Scene Generation\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Center position and movement\n    vec2 center = vec2(0.5 + 0.3 * cos(iTime), 0.5 + 0.3 * sin(iTime * 1.2));\n    float dist = length(uv - center);\n    \n    // Create smooth shapes\n    float shape = smoothstep(0.05, 0.03, dist);\n\n    // Add distortion to shapes\n    uv += 0.02 * vec2(sin(uv.y * 10.0 + iTime), cos(uv.x * 10.0 - iTime));\n    float distortion = smoothstep(0.04, 0.03, length(uv - center));\n    shape *= distortion;\n\n    // Assign vibrant colors\n    vec3 color = 0.5 + 0.5 * cos(vec3(uv.x * 10.0, uv.y * 10.0, iTime) + vec3(0.0, 2.0, 4.0));\n    color *= shape;\n\n    fragColor = vec4(color, 1.0); // Shape with vibrant colors\n}\n","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Buffer B: Feedback with Persistent Trails\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Current frame from Buffer A\n    vec4 currentFrame = texture(iChannel0, uv);\n\n    // Previous frame (feedback loop)\n    vec4 previousFrame = texture(iChannel1, uv);\n\n    // Dynamic decay based on distance to the center\n    vec2 center = vec2(0.5, 0.5);\n    float decay = 1.95 - 0.04 * length(uv - center);\n\n    // Blend current frame with previous frame\n    fragColor = mix(previousFrame * decay, currentFrame, 0.5);\n}\n","name":"Buffer B","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"MXdcz7","date":"1734968867","viewed":91,"name":"Screensavz","username":"profmitchell","description":"Someone teach me about feedback pls","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"","parentname":""}}