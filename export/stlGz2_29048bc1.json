{"ver":"0.1","info":{"id":"stlGz2","date":"1622471791","viewed":97,"name":"Lorenz attractor for colours","username":"codecontemplator","description":"Just playing around with the formulas for the Lorenz attractor","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["lorenzattractor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CONST_A  10.0\n#define CONST_B  28.0\n#define CONST_C  (8.0/3.0)\n\n#define NUM_ITERATIONS 12\n#define DT 0.01\n\nvec3 f(in vec3 p, float a, float b, float c)\n{\n    for (int i = 0; i < NUM_ITERATIONS; i++ )\n    {\n        vec3 dp;\n        dp.x = a * (p.y - p.x);\n        dp.y = p.x * (b - p.z) - p.y;\n        dp.z = p.x * p.y - c * p.z;\n        p += DT * dp;\n    } \n    \n    return p;\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    \n    vec3 p = vec3(uv, 0.0) * 150.0;\n    p.z = 150.0 * sin(p.x*0.05+iTime) * cos(p.y * 0.05 + iTime * 0.5);\n    vec3 q = f(p, CONST_A + 5.0* sin(iTime + 0.4), CONST_B * sin(iTime-1.5), CONST_C * sin(iTime));\n    vec3 col = hsv2rgb(normalize(q));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}