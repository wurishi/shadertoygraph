{"ver":"0.1","info":{"id":"3lcXzN","date":"1580473357","viewed":95,"name":"The Art of Code - Crewce","username":"crewce","description":"The Art of Code First Challenge","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["theartofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R_BIG 0.44\n#define R_MIDDLE 0.2\n#define R_SMALL 0.05\n#define MID_CENTER vec2(0.0, R_MIDDLE)\n#define EPS 0.001\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= mat2(cos(iTime), sin(iTime), -sin(iTime), cos(iTime)); // rotate\n    uv.y *= 1. + sin(iTime*2.0)*0.2; // morph - comment out for normal looking yy\n\n    vec2 uuv = vec2(uv.x, abs(uv.y));\n    float left = step(0.0, -uv.x);\n    float up = step(0.0, uv.y);\n    float bigDist = length(uv);\n    float smallDist = length(uuv - MID_CENTER);\n    \n    float big = smoothstep(R_BIG, R_BIG - EPS, bigDist);\n    float small = smoothstep(R_SMALL, R_SMALL - EPS, smallDist);\n    float middle = smoothstep(R_MIDDLE, R_MIDDLE - EPS, smallDist);\n    \n    float light = smoothstep(R_MIDDLE * 2. + EPS, R_MIDDLE * 2., bigDist);\n    light *= left;\n    light -= (middle - 2. * small) * up;\n    light += middle * (1.0 - up) * (1.0 - left); // (1.0 - left) because left part is already white\n    light -= small * (1.0 - up);\n    \n    // generate final color\n    vec3 col = vec3(1.0 - big + light);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n/*\n\n    float big = 1. - step(R_BIG, length(uv));\n    float smallUp = 1. - step(R_SMALL, length(uv - MID_CENTER));\n    float smallDown = 1. - step(R_SMALL, length(uv + MID_CENTER));\n    float middleUp = 1. - step(R_MIDDLE, length(uv - MID_CENTER));\n    float middleDown = 1. - step(R_MIDDLE, length(uv + MID_CENTER));\n    \n    float light = 1. - step(R_MIDDLE * 2., length(uv));\n*/","name":"Image","description":"","type":"image"}]}