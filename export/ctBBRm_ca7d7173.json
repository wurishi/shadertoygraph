{"ver":"0.1","info":{"id":"ctBBRm","date":"1703940792","viewed":31,"name":"testing2.0","username":"ghost59","description":"Using code and testing it out. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.6,0.5,0.5);    \n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1.0,1.0,1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n    \n    return a + b*cos(6.28318*(c*t+d) );\n\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.2);\n    // Time varying pixel color\n    float d = length(uv) * exp(-length(uv0));\n    float c = length(uv) * exp(-length(uv0));\n    vec3 col = palette(length(uv) * .9 + iTime * .4);\n    vec3 col2 = 0.8 + 0.8 * cos(iTime+uv.xyx+vec3(10,20,40));\n    c = sin(c*10. + iTime)/5.;\n    c = c * cos(4.556565);\n    c = abs(c * 2.3)/c;\n    \n    d = sin(d*8. + iTime)/8.;\n    d = abs(d); \n    \n    d = 0.01 / d;\n    finalColor += col * d * c * col2; \n    // Output to screen\n    fragColor = vec4(finalColor,col2);\n}","name":"Image","description":"","type":"image"}]}