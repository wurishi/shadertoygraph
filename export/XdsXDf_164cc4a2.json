{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float message(vec2 uv) { // to alert in the icon : click too see\n    uv-=vec2(1.,16.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iResolution.y<200.) {float c=message(O.xy/8.);if(c>=0.){O=vec4(c);return;}} // msg for icon view\n    // the real shader:\n\n    U /= iResolution.xy;\n    O -= O;     \n\n    // temporal signal \n    float v = 0., f, time=iTime; \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( base + i*df ) * j,\n\t\t    v += sin(2.*3.1415927*f*(.1*U.x-time)); \n    \n    O.g = smoothstep(.05,0.,abs(2.*U.y-1. -v/(N*harmon)));    \n\n    // spectrum\n    v = 0.; \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++) {\n            float freq = ( base + i*df ) * j,\n                     p = (freq - U.x*600.) / .2;\n\t\t    v += exp(-.5*p*p);\n        }\n\n    O += v*smoothstep(.8,.1,U.y);\n}","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"XsfGRr"}],"inputs":[],"code":"// see http://en.wikipedia.org/wiki/Constant_spectrum_melody\n\nvec2 mainSound( in int samp,float time)\n{\n\tfloat v = 0., f; \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( base + i*df ) * j,\n\t\t    v += sin(2.*3.1415927*f*time); \n    \n    return vec2( v / (N*harmon));  \n}","name":"Sound","description":"","type":"sound"},{"outputs":[],"inputs":[],"code":"#define N      10.\n#define harmon 10.\n#define df     0.1\n#define base   55.\n//#define base   55.*exp2(3.*floor(2.*mod(time/8.,2.))/12.) // akohdr variant\n","name":"Common","description":"","type":"common"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdsXDf","date":"1407409988","viewed":4172,"name":"Constant spectrum melody","username":"FabriceNeyret2","description":"This melody is just made of constant tunes interfering with each others (see fullscreen). It is paradoxical in that you perceive low frequency variation and windowed spectrum variations despite the spectrum is still and without low frequency.","likes":48,"published":3,"flags":8,"usePreview":0,"tags":["sound","illusion"],"hasliked":0,"parentid":"","parentname":""}}