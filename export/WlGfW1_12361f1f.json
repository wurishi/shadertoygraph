{"ver":"0.1","info":{"id":"WlGfW1","date":"1614223852","viewed":73,"name":"Color Wars","username":"baksej","description":"Color Wars, adapted from Munro Hoberman's Color Wars Tweetcart","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["2d","life"],"hasliked":0,"parentid":"4s3GDf","parentname":"Conway's Game of Life (mod)"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//\tadded color and initialization to https://www.shadertoy.com/view/lddGWj -- can use the mouse\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tfragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"/*\n#define T true\n#define F false\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec4 b = texture(iChannel0,fragCoord/iResolution.xy);\n   \n    bool a  = bool(b.r);\n    vec4 c = texture(iChannel0,(fragCoord+vec2( 0, 1))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2( 0,-1))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2( 1,-1))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2( 1, 0))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2( 1, 1))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2(-1,-1))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2(-1, 0))/iResolution.xy)+\n             texture(iChannel0,(fragCoord+vec2(-1, 1))/iResolution.xy);\n\tint n = int(c.r);\n    b.gb = a ? b.gb * .99 : vec2( 1 );\n    a = a?n>3?F:n<2?F:T:n==3?T:F || distance(fragCoord,iMouse.xy)<9.&&iMouse.z>0. || iFrame == 0 && r < .05;\n    fragColor = float( a ) * vec4( 1, b.gb, 1 );\n}\n*/\n\n\nfloat rnd(vec2 xy){\n   return fract( 1e5 * sin( dot( xy, vec2( 7.1, 9.1 ) ) ) ); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n            \n    \n\t\n    \n    \n    //float r = rnd(fragCoord *.01+ vec2(iTime, iTime));\n    \n    \n    if (iFrame == 0){\n        float r = rnd(fragCoord *.01+ vec2(0, 1));\n        float g = rnd(fragCoord *.01+ vec2(0, 2));\n        float b = rnd(fragCoord *.01+ vec2(0, 3));\n        fragColor = vec4(r < .5, g < .5, b < .5, 1);\n    }else{\n        vec2 left = fragCoord+vec2(-1,0);\n        vec2 right = fragCoord+vec2(1,0);\n        vec2 above = fragCoord+vec2(0,-1);\n        vec2 below = fragCoord+vec2(0,1);\n        \n        vec4 b = texture(iChannel0, fragCoord/iResolution.xy);\n        \n        float freq = .1;\n        if (rnd(left + vec2(iTime)) < freq) {\n            b = texture(iChannel0, left/iResolution.xy);\n        }\n        if (rnd(right + vec2(iTime)) < freq) {\n            b = texture(iChannel0, right/iResolution.xy);\n        }\n        if (rnd(above + vec2(iTime)) < freq) {\n            b = texture(iChannel0, above/iResolution.xy);\n        }\n        if (rnd(below + vec2(iTime)) < freq) {\n            b = texture(iChannel0, below/iResolution.xy);\n        }\n        \n        \n        // vec4 right = texture(iChannel0,(fragCoord+vec2( 0, 1))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2( 0,-1))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2( 1,-1))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2( 1, 0))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2( 1, 1))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2(-1,-1))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2(-1, 0))/iResolution.xy);\n             //texture(iChannel0,(fragCoord+vec2(-1, 1))/iResolution.xy);\n        fragColor = b;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}