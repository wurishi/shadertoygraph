{"ver":"0.1","info":{"id":"Ddf3D8","date":"1666026659","viewed":99,"name":"Hexagonal sierpinski triangle","username":"legoushque","description":"Move your mouse to increase detail","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","ifs","kifs","sierpinski"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28319\n#define PI 3.141593\n\n\nvec2 N(float angle){\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    vec2 mouse = (iMouse.xy-iResolution.xy*0.5)/iResolution.y;\n    uv *= 3.;\n    uv.x = abs(uv.x);\n    \n    uv.y += sqrt(3.)/4.;\n    \n    vec3 col = vec3(0);\n    float angle = PI/6.;\n    vec2 n;\n    \n    \n    for(int i=0; i<int(iMouse.x/iResolution.x*10.)+1; i++){\n    \n        n = N(angle);\n        uv -= 2.*n*min(0., dot(n, uv));\n        n = N(-angle);\n        uv -= 2.*n*min(0., dot(n, uv));\n\n\n        uv *= 2.;\n        uv -= vec2(0, tan(PI/3.));\n\n        uv.x = abs(uv.x);\n    \n    }\n    float d = length(uv-vec2(0, clamp(uv.y, -1., 2.)));\n    d = smoothstep(1.0, 1.01, d);\n    \n    col += d;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}