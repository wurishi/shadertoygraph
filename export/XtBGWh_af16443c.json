{"ver":"0.1","info":{"id":"XtBGWh","date":"1428351886","viewed":300,"name":"Waving Flag With SDF Text","username":"joeedh","description":"signed distance field text","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["text","signeddistancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define TVAL 0.075\n\nfloat vbar(vec2 uv, vec2 p, vec2 s) {\n   float ux = (uv[0]-p[0])/s[0];\n  \n   ux = (1.0 - 2.0*abs(ux-0.5)) * float(uv[0] >= p[0] && uv[0] <= p[0]+s[0] && uv[1] >= p[1] && uv[1] <= p[1]+s[1]);\n    \n   return ux;\n}\n\nfloat vbar_cap(vec2 uv, vec2 p, vec2 s) {\n   float ux = (uv[0]-p[0])/s[0];\n   float uy = (uv[1]-p[1])/s[1];\n   float vis =  float(ux >= 0.0 && ux <= 1.0 && uy >= 0.0 && uy <= 1.0);\n      \n   float l = (1.0 - 2.0*abs(ux-0.5));\n   \n   float t = TVAL/s[1];\n    \n   l = uy > 1.0-t ? 1.0 - 2.0*length(vec2((uy-(1.0-t))*(0.5/t), abs(ux-0.5))) : l;\n   l = uy < t ? 1.0 - 2.0*length(vec2((t-uy)*(0.5/t), abs(ux-0.5))) : l;\n\n   return l*vis;\n}\n\nfloat hbar(vec2 uv, vec2 p, vec2 s) {\n   float ux = (uv[1]-p[1])/s[1];\n  \n   ux = (1.0 - 2.0*abs(ux-0.5)) * float(uv[0] >= p[0] && uv[0] <= p[0]+s[0] && uv[1] >= p[1] && uv[1] <= p[1]+s[1]);\n   \n   return ux;\n}\n\nfloat hbar_cap(vec2 uv, vec2 p, vec2 s) {\n   float ux = (uv[0]-p[0])/s[0];\n   float uy = (uv[1]-p[1])/s[1];\n    \n   float l;\n   float vis = float(uv[0] >= p[0] && uv[0] <= p[0]+s[0] && uv[1] >= p[1] && uv[1] <= p[1]+s[1]);\n    \n   l = (1.0 - 2.0*abs(uy-0.5));\n    \n   float t = TVAL/s[0];\n    \n   l = ux > 1.0-t ? 1.0 - 2.0*length(vec2((ux-(1.0-t))*(0.5/t), abs(uy-0.5))) : l;\n   l = ux < t ? 1.0 - 2.0*length(vec2((t-ux)*(0.5/t), abs(uy-0.5))) : l;\n   \n   return l*vis;\n}\n\nfloat hbar_cap1(vec2 uv, vec2 p, vec2 s) {\n   float ux = (uv[0]-p[0])/s[0];\n   float uy = (uv[1]-p[1])/s[1];\n    \n   float l;\n   float vis = float(uv[0] >= p[0] && uv[0] <= p[0]+s[0] && uv[1] >= p[1] && uv[1] <= p[1]+s[1]);\n    \n   l = (1.0 - 2.0*abs(uy-0.5));\n    \n   float t = TVAL/s[0];\n    \n   l = ux > 1.0-t ? 1.0 - 2.0*length(vec2((ux-(1.0-t))*(0.5/t), abs(uy-0.5))) : l;\n   \n   return l*vis;\n}\n\nfloat arc(vec2 uv, vec2 p, vec2 s, vec2 c, vec2 arc, float rad) {\n   float ux = (uv[0]-p[0])/s[0] -c[0];\n   float uy = (uv[1]-p[1])/s[1] -c[1];\n\n   float vis = float(uv[0] >= p[0] && uv[0] <= p[0]+s[0] && uv[1] >= p[1] && uv[1] <= p[1]+s[1]);\n   float angle = atan(ux, uy);\n   float r = sqrt(ux*ux + uy*uy);\n   float v2 = vis;\n   vis *= max(1.0-abs(r-rad)*9.0, 0.0);\n   vis *= float(angle >= arc[0] && angle <= arc[1]);\n    \n   return vis;\n}\n\nfloat text(vec2 uv) {\n\tfloat l = vbar_cap(uv, vec2(0.025, -0.15), vec2(0.15, 0.85));\n    float l2 = hbar_cap1(uv, vec2(0.12, 0.5), vec2(0.5, 0.15));\n    float l3 = arc(uv, vec2(0.1, 0.1), vec2(0.5, 0.5), vec2(0.3, 0.7), vec2(-3.141, 5.141), 0.5);\n    \n    float ret = l+l2 - l*l2*1.43;\n    ret = ret+l3 - ret*l3*1.3;\n    \n    //ret = l3;\n    //ret = smoothstep(0.7, 0.65, ret);\n    float sfac = -length(uv-vec2(100, 100))*20.0 + iTime*10.0;\n    \n    float dt = (sin(sfac)*0.5+0.5)*0.4 + 0.3;\n    float dt2 = (sin(sfac)*0.5+0.5)*0.4 + 0.1;\n    \n    dt = 0.7;\n    dt2 = 0.1;\n    float r1 = smoothstep(dt2, dt2-0.05, ret);\n    ret = r1 + (1.0 - smoothstep(dt, dt-0.03, ret));\n    \n    /*\n    float sin2 = (sin(sfac)*0.5+0.5)*0.4+0.3;\n    float scale = 0.0675;\n    \n    if (uv[0] > 0.6+sin2*scale)\n    \treturn 0.0;\n    if (uv[0] < -0.07+sin2*scale)\n    \treturn 0.0;\n    if (uv[1] < -0.1+sin2*scale)\n    \treturn 0.0;\n    if (uv[1] > 0.65+sin2*scale)\n    \treturn 0.0;\n    return ret*0.3 + ret*sin2;\n    */\n    return ret;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv[1] *= 0.6;\n    uv[1] -= 0.1;\n    uv[0] -= 0.1;\n    uv *= 1.5;\n\n    float t = iTime/10.0;\n    vec2 scent = 10.0 + vec2(sin(t) - cos(t), sin(t)+cos(t))*100.0;\n    float phasefac = cos(iTime*0.00105);\n    phasefac = phasefac*0.5+0.5;\n    phasefac *= 1.0;\n    \n    float sfac = -length(uv-scent)*20.0;\n    sfac += iTime*10.0*phasefac;\n    \n    float sin2 = (sin(sfac)*0.5+0.5)*0.4+0.3;\n    float scale = 0.0375;\n    \n    float tfac = uv[1];\n    \n    scale *= 1.0-tfac; //length(vec2(uv[0], 1.0-uv[1]));\n    \n    uv[0] += sin2*scale;\n    uv[1] += sin2*scale;\n    \n    //uv[0] -= uv[1]*0.05;\n    float l = text(uv);\n    float vis = float(uv[0] >= -0.05 && uv[0] <= 0.65 && uv[1] >= -0.1 && uv[1] <= 0.7);\n    \n    sin2 = sin2*1.5 - 0.2;\n    if (sin2 > 1.0) sin2 = 1.0;\n    \n    sin2 = sin2 + (1.0 - sin2)*tfac;\n    sin2 *= vis;\n   \t\n    \n\tfragColor = vec4(l*sin2, l*sin2*0.5 + 0.5*sin2, l*sin2, 1.0);\n}","name":"","description":"","type":"image"}]}