{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// http://www.fractalforums.com/new-theories-and-research/very-simple-formula-for-fractal-patterns/\n\nconst int iterations=20;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 z=fragCoord.xy / iResolution.xy-.5;\n\tz.y*=iResolution.y/iResolution.x;\n\t\n\tz.x += sin(z.y*2.0+iTime * .2)/10.0;\n\tz*=.6+pow(sin(iTime*.05),10.)*10.;\n\tz+=vec2(sin(iTime*.08),cos(iTime*.01));\n\tz=abs(vec2(z.x*cos(iTime*.12)-z.y*sin(iTime*.12)\n\t\t\t  ,z.y*cos(iTime*.12)+z.x*sin(iTime*.12)));\n\t\n\tvec2 c=vec2(.2, 0.188);\n\t\n\tfloat expsmooth=0.;\n\tfloat average=0.;\n\tfloat l=length(z);\n\tfloat prevl;\n\t\n\tfor (int i=0; i<iterations; i++) \n\t{\n\t\tz = abs(z * (2.2 + cos(iTime*0.2)))/(z.x*z.y)-c;\t\n\n\t\tprevl=l;\n\t\tl=length(z);\n\t\texpsmooth+=exp(-.2/abs(l-prevl));\n\t\taverage+=abs(l-prevl);\n\t}\n\t\n\tfloat brightness = expsmooth*.002;\n\t\n\taverage/=float(iterations) * 22.87;\n\t\n\tvec3 myColor=vec3(max(abs(sin(iTime)), 0.45),max(abs(cos(iTime * 0.2)), 0.45),max(abs(sin(iTime* 2.)), 0.45));\n\tvec3 finalColor;\n\n\tfinalColor.r = (float(average)/myColor.r);\n\tfinalColor.g = (float(average)/myColor.g);\n\tfinalColor.b = (float(average)/myColor.b);\n\n\tfragColor = vec4(finalColor*brightness,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4s23Wc","date":"1394505895","viewed":829,"name":"pfhrector","username":"pfhunk","description":"80s vector graphics inspired kaliset","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","kaliset"],"hasliked":0,"parentid":"","parentname":""}}