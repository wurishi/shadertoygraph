{"ver":"0.1","info":{"id":"XtGyzD","date":"1535212363","viewed":132,"name":"color crown","username":"nabr","description":"what should i say i the king of colors ....","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["color","rgb","rotation","simpel","scetch","crown"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// nabr\n// https://www.shadertoy.com/view/XtGyzD\n// License: public\n\n// see also: https://iquilezles.org/articles/palettes\n\n\n#define pi  3.14159265359\n#define tau 6.28318530718\n\n#define R(a) mat2(cos(a), sin(a), -sin(a), cos(a))\n\n\n// smoothfactor\n#define sf 0.7\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// vec2 uv = ( 2.0 * fragCoord.xy - iResolution.xy )/min(iResolution.x,iResolution.y);\n    // uv *= R( pi ); // -uv.y becourse it's fun\n\t\n    // changed after comment from FabriceNeyret2\n    vec2 uv = (iResolution.xy - 2.0 * fragCoord.xy)/min(iResolution.x,iResolution.y);\n    \n    \n    vec4 finalColor = vec4(0, 0, 0, 1);\n    \n    vec3 color = uv.y + 0.5 * cos(iTime - (tau * acos(uv.x)) + vec3(0.0, pi * 0.5, pi));\n\t\n    finalColor.rgb = pow( sf - sqrt(color), vec3(1.0/2.2));\n\n    fragColor = finalColor; \n\t\n\t\n    // -------- FabriceNeyret2\n    \n\tvec2 u = fragCoord;\n    vec2 R = iResolution.xy ,             \n         U = ( R - u-u ) / min(R.x,R.y);  \n    finalColor = sf - sqrt( U.y + .5 * cos(iTime - 6.28 *( acos(U.x) + vec4(0, .25, .5, 0))));\n\n\tif(U.x > 0.001)\n      fragColor = finalColor; \n\t\n}","name":"Image","description":"","type":"image"}]}