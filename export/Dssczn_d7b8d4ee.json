{"ver":"0.1","info":{"id":"Dssczn","date":"1686517490","viewed":40,"name":"StrangEElevaToR","username":"deep2universe","description":"I'm learning and experimenting. This thing looks strange. Probably unusable.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.500, 0.500, 0.500);\n    vec3 b = vec3(0.500, 0.500, 0.500);\n    vec3 c = vec3(1.000, 0.555, 0.333);\n    vec3 d = vec3(0.000, 0.333, 0.667);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalCol = vec3(0.0);\n    \n    float startRadius = 0.0;\n    float endRadius = 3.0;\n    float angle = 5.0;\n    \n    for (float i = 0.0; i < 13.0; i++) {\n        uv = fract(uv * 2. * smoothstep(3.0, 8.0, i)) - 1.5;\n\n        float d = length(uv * 3.0);\n        \n        float pixelAngle = atan(uv.y, uv.x)+iTime;\n     \n        vec3 col = palette(length(uv0) + i + iTime/3.0);\n\n        d *= cos(d+uv0.y+-tan(iTime/angle))/tan(uv0.x);\n        \n        float radius = smoothstep(startRadius, endRadius, 5.0001);\n        float rotatedAngle = pixelAngle+angle* radius+i;\n        d *= cos(rotatedAngle)*sin(rotatedAngle)+radius;\n        //d *= smoothstep(3.0, 13.0, i/radius);\n        d = abs(d);\n        d =  0.8 / d;\n\n        finalCol = col * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalCol, 1.0);\n}","name":"Image","description":"","type":"image"}]}