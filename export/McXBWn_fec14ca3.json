{"ver":"0.1","info":{"id":"McXBWn","date":"1723583288","viewed":26,"name":"90 Abstract Dance","username":"ShaderDizzle","description":"its the first sheader of the 90 season, with vairuts takt climbing visuals","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["abstractsounddrawing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Lese die Audiodaten aus dem Sound-Input (iChannel0 ist das Audio-Input)\n    float sound = texture(iChannel0, vec2(uv.x, 0.0)).r;\n\n    // Dynamische Farben basierend auf den Audiodaten\n    vec3 color = vec3(\n        0.8 + 5.0 * sin(iTime + uv.x * 5.0 + sound * 10.0),\n        0.8 + 5.0 * sin(iTime + uv.y * 5.0 + sound * 0.0),\n        0.8 + 5.0 * sin(iTime + uv.x * 5.0 + uv.y * 5.0 + sound * 30.0)\n    );\n\n    // Ausgabe der Farbe des Pixels\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}