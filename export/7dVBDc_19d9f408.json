{"ver":"0.1","info":{"id":"7dVBDc","date":"1658959185","viewed":381,"name":"gradient color grading","username":"morisil","description":"I wanted to understand how some image post-processing is made, for example in instagram filters.\n\nInspired by Matrix Color Grading by Inigo Quilez:\nhttps://twitter.com/iquilezles/status/1440847977560494084\n","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["filter","color","grading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float GRADING_INTENSITY = .8;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 color = texture(iChannel0, uv).rgb;\n    vec3 topGrading = vec3(\n        1. - sin(iTime * 1.1) * GRADING_INTENSITY,\n        1. - sin(iTime * 1.2) * GRADING_INTENSITY,\n        1. - sin(iTime * 1.3) * GRADING_INTENSITY\n    );\n    vec3 bottomGrading = vec3(\n        1. + cos(iTime * 1.4) * GRADING_INTENSITY,\n        1. - cos(iTime * 1.5) * GRADING_INTENSITY,\n        1. - cos(iTime * 1.6) * GRADING_INTENSITY\n    );\n    vec3 colorGrading = mix(topGrading, bottomGrading, fragCoord.y / iResolution.y);\n    color = pow(color, colorGrading);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}