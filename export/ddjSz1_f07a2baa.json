{"ver":"0.1","info":{"id":"ddjSz1","date":"1669926259","viewed":1360,"name":"Pixel waves.","username":"OzoneOnYou","description":"I really do like it, especially because this was the first time I actually created the thing I wanted to. Also I recomend checking this out on cineshader.","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["waves","effect","rgb","pixels","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define xPixels 20. //how many horizontal pixels are there\n#define yPixels 45. //how many vertical pixels are there\n#define xSpeed 8. //speed of horiozontal wave movement\n#define ySpeed 1. //speed of vertical movement, lower = faster\n#define yRange 60. //how much will the waves change height, everything above 50 vill result in mirroring (but that's kinda cool)\n\nvec3 hsvToRgb(float h, float s, float v){\n    h = mod(h, 360.);\n    float M = 255. * v;\n    float m = M * (1.-s);\n    float z = (M - m) * (1.- abs(mod(h/60., 2.)-1.));\n    if (h < 60.) return vec3(M/255., (z+m)/255., m/255.);\n    else if (h >= 60. && h<120.) return vec3((z+m)/255., M/255., m/255.);\n    else if (h >= 120. && h<180.) return vec3(m/255., M/255., (z+m)/255.);\n    else if (h >= 180. && h<240.) return vec3(m/255., (m+z)/255., M/255.);\n    else if (h >= 240. && h<300.) return vec3((z+m)/255., m/255., M/255.);\n    else if (h >= 300. && h<360.) return vec3(M/255., m/255., (z+m)/255.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = hsvToRgb(10.*(time*2.+(uv.x+uv.y)), 1., 1.); //makes a hue scroll\n    \n    float sine = ceil(uv.y*yPixels)/yPixels*(25.+sin(time*3.+3.14)*yRange)-(25.+sin(time*3.+3.14)*yRange)/2.+sin(time/ySpeed)*3. - sin(ceil(uv.x*xPixels)/(xPixels*0.083)+time*xSpeed); //creates pixel effect by making a sine and taking a ceil of that\n    \n    col = mix(col, vec3(1), step(sine, 0.5));\n\n    // Output to screen\n    fragColor = vec4(col,sine*sin(time)+cos(time));\n}","name":"Image","description":"","type":"image"}]}