{"ver":"0.1","info":{"id":"MsffzX","date":"1497197931","viewed":363,"name":"Console","username":"cthutu","description":"Outputs ASCII text","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dfontascii"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":3,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Channel 0 = font texture\n// Channel 1 = foreground texture (64x23)\n// Channel 2 = background texture (64x23)\n// Channel 3 = character texture (64x24 greyscale)\n\nconst int fontCharW = 10;\nconst int fontCharH = 16;\n\nvoid calcCoords(in vec2 fxy, out int x, out int y, out int cx, out int cy)\n{\n\tvec2 res = iResolution.xy;\n    \n    x = int(fxy.x);\n    y = int(res.y) - int(fxy.y);\n    \n    cx = x / fontCharW;\n    cy = y / fontCharH;\n    \n    x = x % fontCharW;\n    y = y % fontCharH;\n}\n\n//void grid(out vec4 fragColor, in vec2 fragCoord)\n//{\n//    int x, y, cx, cy;\n//    calcCoords(fragCoord, x, y, cx, cy);\n//    \n//    fragColor = ((cx % 2)^(cy % 2)) != 0 ? vec4(1, 1, 1, 1) : vec4(0, 0, 0, 1);\n//}\n\nvec2 calcTextureCoords(in int x, in int y, in int w, in int h)\n{\n\treturn (vec2(float(x), float(y)) + vec2(0.5, 0.5)) / vec2(float(w), float(h));\n}\n\nvoid letterGrid(out vec4 fragColor, in vec2 fragCoord)\n{\n    int x, y, cx, cy;\n    calcCoords(fragCoord, x, y, cx, cy);\n    \n    vec2 p = calcTextureCoords(cx, cy, 64, 23);\n    \n    vec4 fore = texture(iChannel1, p);\n    vec4 back = texture(iChannel2, p);\n    vec4 text = texture(iChannel3, p);\n    \n    int c = int(text.x * 256.0);\n    int fx = c % 16;\n    int fy = c / 16;\n    int lx = fx * fontCharW + x;\n    int ly = fy * fontCharH + y;   \n    \n    vec2 pixXY = calcTextureCoords(lx, ly, fontCharW*16, fontCharH*16);\n    vec4 charPixel = texture(iChannel0, pixXY);\n    if (charPixel.x < 0.5)\n    {\n        fragColor = back;\n    }\n    else\n    {\n\t\tfragColor = fore;\n    }\n}    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //grid(fragColor, fragCoord);\n    letterGrid(fragColor, fragCoord);\n}","name":"Image","description":"","type":"image"}]}