{"ver":"0.1","info":{"id":"4lfBRf","date":"1512601925","viewed":318,"name":"Doom Screen Melt effect","username":"neur0sys","description":"Doom screen melt effect with mandatory listen: https://www.youtube.com/watch?v=Celrs8uSQk8\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["doom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Mandatory listen: https://www.youtube.com/watch?v=Celrs8uSQk8\n\n/* \n    You may as well copy paste this into your browser's console:\n\n    gShaderToy.SetTexture(0, {mSrc:'https://i.imgur.com/itQQHlV.png', mType:'texture', mID:1, mSampler:{ filter: 'mipmap', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }});\n    gShaderToy.SetTexture(1, {mSrc:'https://i.imgur.com/oxYZmRG.png', mType:'texture', mID:1, mSampler:{ filter: 'mipmap', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }});\n\n\tOR, copy it to your browser's address bar after first typing: \"javascript:\" without quote marks.\n*/\n\nfloat textureWidth = 800.0f;\nfloat numOfColumns = 320.0f;\nfloat amplitude = 200.0f;\nfloat speed = 75.0f;\n\n// This is based on the original doom prng\nint offsets[] = int[](\n    -8, -9, -7, -9, -10, -7, -4, -3, -3, -3, -3, -1, -3, -3, -2, -3, 0, 0, 0, -27, -28, -28, -25, -22, -19, -21, -18, -18, -19, -21, -21, -21, -22, -21, -19, -20, -20, -20, -18, -18, -16, -16, -14, -16, -16, -17, -17, -15, -13, -11, -12, -9, -9, -9, -6, -6, -7, -5, -7, -7, -5, -5, -4, -1, -1, -2, -2, -3, -5, -4, -1, -3, -5, -4, -5, -4, -3, -3, -4, -3, -5, -6, -3, -1, -6, -8, -9, -6, -7, -8, -10, -9, -9, -10, -11, -11, -11, -12, -14, -11, -10, -8, -10, -10, -7, -7, -5, -2, 0, -1, -1, -9, -8, -8, -6, -8, -8, -9, -8, -7, -5, -7, -4, -4, -6, -6, -8, -9, -10, -10, -7, -8, -8, -6, -5, -3, -2, -35, -35, -37, -34, -31, -28, -28, -29, -30, -27, -27, -25, -27, -28, -27, -26, -25, -23, -24, -21, -19, -17, -18\n);\n\nvec4 melt(in sampler2D tex1, in sampler2D tex2, in int cur_offset, in vec2 fragCoord)\n{\n    if (cur_offset < int(iResolution.y - fragCoord.y)) \n        return texture(tex1, (vec2(0, cur_offset) + fragCoord.xy) / iResolution.xy);\n    \n    return texture(tex2, fragCoord / iResolution.xy); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int y_counter = -100 + int(iTime * speed) % 200;\n    int ystep = int(iResolution.y / amplitude);\n    int x_index = int(fragCoord.x * (numOfColumns / iResolution.x));\n    int cur_offset = max(0, (offsets[x_index % 160] + y_counter) * ystep * 4);\n    bool flipTexture = (int(iTime * speed) / 200) % 2 == 0;\n\n    if (flipTexture) {\n\t\tfragColor = melt(iChannel0, iChannel1, cur_offset, fragCoord);      \n    \treturn;\n    }\n    \n    fragColor = melt(iChannel1, iChannel0, cur_offset, fragCoord);\n}\n","name":"Image","description":"","type":"image"}]}