{"ver":"0.1","info":{"id":"dtGBDG","date":"1702424103","viewed":71,"name":"MC Ripple Pool 2","username":"Real_NC","description":"Use the mouse to agitate the wave.","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["wave","simulation","feedback","montecarlo","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 U )\n{\n    O = tex(U).rrrr;\n    O.g *= sign(O.r)*.2+.8;\n    O = pow(abs(O)*22., vec4(.6));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Here red channel stores value and green channel stores delta\n\n#define DMPG 0.99\n#define RC(r) vec2(cos(r.x*6.2831853), sin(r.x*6.2831853))*sqrt(r.y)\n#define SAMPLES 80.\n\nvoid mainImage( out vec4 O, in vec2 U )\n{\n    O *= 0.;\n    \n    if(iFrame > 0)\n    {\n        O = tex(U);\n        \n        // mouse monopole\n        if(length((iMouse.xy - U)/R.y) <= .01 && iMouse.z > 0.5) O.g = cos(iTime*16.)*6.;\n        \n        // starting dipole\n        if(length((U + U - R.xy)/R.y + vec2(0.4, 0.0)) <= .05) O.g = cos(iTime*16.1);\n        if(length((U + U - R.xy)/R.y - vec2(0.4, 0.0)) <= .05) O.g = cos(iTime*16.);\n        \n        \n        float v = 0.;\n        for(float n = 0.; n < SAMPLES; n++)\n        {\n            vec2 t = tex(U + R.y*.03*RC(pcg2(U + n*R.xy + float(iFrame*10)))).rg;\n            v += t.r + t.g - O.r - O.g*DMPG;\n        }\n        O.g += v/SAMPLES;\n        O.rg *= vec2(DMPG, DMPG); // damp\n        O.r += O.g; // change wave value by delta\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define tex(u) texelFetch(iChannel0, ivec2(u), 0)\n#define R iResolution\n\n// https://www.pcg-random.org/\nvec2 pcg2(vec2 p)\n{\n    uvec2 v = floatBitsToUint(p);// modified to accept float\n    v = v * 1664525u + 1013904223u;\n\n    v.x += v.y * 1664525u;\n    v.y += v.x * 1664525u;\n\n    v = v ^ (v>>16u);\n\n    v.x += v.y * 1664525u;\n    v.y += v.x * 1664525u;\n\n    v = v ^ (v>>16u);\n\n    return vec2(v)*(1.0/float(0xffffffffU)); // modified to return float\n}","name":"Common","description":"","type":"common"}]}