{"ver":"0.1","info":{"id":"MfVcDK","date":"1732428830","viewed":33,"name":"CoordinateGrid_DrawMathFunction2","username":"miyu","description":"Draw mathematical functions2.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","subsampling","coordinate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define grid_subdivision 7.\n#define AA 4\n\nvec2 UV(vec2 uv)\n{\n    return grid_subdivision*(uv-.5*iResolution.xy)/min(iResolution.x,iResolution.y);\n}\n\nvec3 CoordinateGrid(vec2 uv)\n{\n    vec3 col=vec3(0.4);   \n    vec2 grid = floor(mod(uv,2.));\n    if(grid.x==grid.y) col=vec3(.6);\n    \n    col = mix(col,vec3(1.,0.,0.),smoothstep(1.1*fwidth(uv.x),fwidth(uv.x),abs(uv.x)));\n    col = mix(col,vec3(0.,1.,0.),smoothstep(1.1*fwidth(uv.y),fwidth(uv.y),abs(uv.y)));\n    \n    return col;\n}\n\n\nfloat func(float x)\n{\n    return sin(x);\n}\n\nfloat func(float x,float d)\n{\n    d=max(0.001,d);\n    float t=x/d;\n    float a = mod(ceil(t),2.);\n    return (1.-a)*(ceil(t)-t)+mod(x,d)/d*a;\n}\n\nfloat plot_func(vec2 uv)\n{\n    float y = func(uv.x,1.);\n   //float y = func(uv.x);\n    return smoothstep(y-0.01,y+0.01,uv.y);\n}\n\nfloat draw_func(vec2 uv)\n{\n    float f=0.;\n    for(int i=0;i<AA;i++)\n    {\n        for(int j=0;j<AA;j++)\n        {\n            vec2 offset = (vec2(float(i),float(j))-.5*float(AA))/float(AA)*2.;\n            f+=plot_func(UV(uv+offset));\n        }\n    }\n    if(f>float(AA*AA)/2.)\n        f=float(AA*AA)-f;\n    f=f*2./float(AA*AA);\n    return f;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=UV(fragCoord);\n    \n    vec3 col = vec3(0.);\n    \n    col =CoordinateGrid(uv);\n\n    float se = draw_func(fragCoord);\n    col=mix(col,vec3(1.),se);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}