{"ver":"0.1","info":{"id":"3ssBR7","date":"1587927091","viewed":146,"name":"Sonido-FabriceNeyret2-And-IQ ","username":"jorge2017a1","description":"Sonido-FabriceNeyret2-And-IQ ","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["sonidofabriceneyret2andiq"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///MOdificado por Jorge F.p....jorge2017a1\n///Referecia  \n//Created by FabriceNeyret2 \n//https://www.shadertoy.com/view/XdsXDf    ..... Constant spectrum melody\n\n///https://www.shadertoy.com/view/XsjSzV   ..... Synth - FM\n///Created by iq \n\n\n\n#define N      5.\n#define harmon 5.\n#define df     0.1\n#define base   55.\n\nfloat message(vec2 uv) { // to alert in the icon : click too see\n    uv-=vec2(1.,16.); if ((uv.x<0.)||(uv.x>=32.)||(uv.y<0.)||(uv.y>=3.)) return -1.; \n    int i=1, bit=int(pow(2.,floor(32.-uv.x)));\n    if (int(uv.y)==2) i=  928473456/bit; // 00110111 01010111 01100001 01110000\n    if (int(uv.y)==1) i=  626348112/bit; // 00100101 01010101 01010000 01010000\n    if (int(uv.y)==0) i= 1735745872/bit; // 01100111 01110101 01100001 01010000\n \treturn float(i-2*(i/2));\n}\n\n//------------------------------------------------------\n\n///-------------------------------------------------------\nvoid mainImage( out vec4 O, vec2 U )\n{\n    if (iResolution.y<200.) {float c=message(O.xy/8.);if(c>=0.){O=vec4(c);return;}} // msg for icon view\n    // the real shader:\n\n    U /= iResolution.xy;\n    O -= O;     \n\n    // temporal signal \n    float v = 0., f; \n    \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( base + i*df ) * j,\n        \tv += tan(2.0*mainSoundv2iQPar(.1*U.x-iTime,2.*3.1415927*f)); \n    \n    O.g = smoothstep(.05,0.,abs(2.*U.y-1. -v/(N*harmon)));    \n\n    // spectrum\n    v = 0.; \n\tfor (float i = 0.; i <= N; i++) \n        for (float j=1.; j <= harmon; j++) {\n            float freq = ( base + i*df ) * j,\n                     p = (freq - U.x*600.) / .2;\n\t\t    v += exp(-.5*p*p);\n        }\n\n    O += v*smoothstep(.8,.1,U.y);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n///MOdificado por Jorge F.p....jorge2017a1\n///Referecia  \n//Created by FabriceNeyret2 \n//https://www.shadertoy.com/view/XdsXDf    ..... Constant spectrum melody\n\n///https://www.shadertoy.com/view/XsjSzV   ..... Synth - FM\n///Created by iq \n\n//----------------------------------------------------------\n// see http://en.wikipedia.org/wiki/Constant_spectrum_melody\n\n#define Numi    5.\n#define harmon 5.\n#define df     0.1\n#define base   55.\n\nfloat Sound2Fabrycet(float ptime)\n{\n\tfloat v = 0., f; \n    //float time = pow(0.5, ptime / 1000.0);\n    float time = ptime;\n    \n\tfor (float i = 0.; i <= Numi; i++) \n        for (float j=1.; j <= harmon; j++)\n            f = ( base + i*df ) * j,\n        \tv += tan(2.0*mainSoundv2iQPar(time,2.*3.1415927*f)); \n    \n    v = v / (Numi*harmon*0.25); \n    \n    return v;\n}\n\n\nvec2 mainSound( in int samp, float time )\n{\n    \n    float s  =Sound2Fabrycet(time);\n     return vec2(s );\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"///=========================================================\nfloat mainSoundv2iQPar( float time, float pf )\n{\n    float f = pf;\n                  \n    float im = 20.0 + 18.0*sin(0.21*6.2831*time);\n    float y = sin( 6.2831*f*time + im*sin(0.25*6.2831*f*time) );\n        \n    y *= exp(-2.0*fract(8.0*time));\n    \n    return y;\n}\n\n\n///=========================================================","name":"Common","description":"","type":"common"}]}