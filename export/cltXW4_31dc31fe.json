{"ver":"0.1","info":{"id":"cltXW4","date":"1685408427","viewed":118,"name":"spinny triangles ","username":"satorielectronics","description":"used [url]https://www.shadertoy.com/view/3lVGWt]zhek's simple rotation matrix[/url]","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["neon"],"hasliked":0,"parentid":"dtcSD4","parentname":"spirits of the computer"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define UV_ORIGIN 0.5\n#define ZOOM 2.33\n#define SPEED -3.33\nconst float PI = 4. * atan(1.), TAU = 2. * PI;\nmat2 r(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\n\nfloat b( in vec2 p, in float r )\n{\n    const float k = sqrt(3.0);\n    p.x = abs(p.x) - r;\n    p.y = p.y + r/k;\n    if( p.x+k*p.y>0.0 ) p = vec2(p.x-k*p.y,-k*p.x-p.y)/2.0;\n    p.x -= clamp( p.x, -2.0*r, 0.0 );\n    return -length(p)*sign(p.y);\n}\nvoid mainImage( out vec4 O, in vec2 F )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 R = iResolution.xy,\n         u = (F+F-R) / R.y;\n    vec2 u0 = u;\n    float i, l = length(u);\n    \n    for(O *= i ; i++ < 3.;\n        O += pow(.02 /\n                 abs(\n                     cos(\n                         3. * ( length ( u = fract( u *= r( SPEED * iTime ) * ZOOM) - .5 ) + b(u0*i , 3.) / exp(l) )\n                         + iTime*0.5\n                         )//tan\n                    )//abs\n              , 1.25)//pow\n              * (1. + cos(6. * ( l + (i + iTime)*.4 + vec4(6.5,.5,6.9,0) )))\n              \n    );              \n}","name":"Image","description":"","type":"image"}]}