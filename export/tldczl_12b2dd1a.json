{"ver":"0.1","info":{"id":"tldczl","date":"1609751241","viewed":61,"name":"Simple FS&GA Noise ","username":"Kivvi","description":"Simple noise based on fibonacci sequence & golden angle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","noise","simple","pattern","angle","sequence","phi","fibonacci","golden"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float pi = 3.141592653589793;\n\nmat2 rot(float ang){\n\n    return mat2(cos(ang), -sin(ang), sin(ang), cos(ang));\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x /= iResolution.y / iResolution.x;\t\n    uv *= 20.0;\n    float sc = sin(iTime / 50.) * 5.;\n    //uv *= sc;\n    //uv *= rot(iTime / 50.);\n    \n    float kk = iTime / 3.;\n    \n    float ar = 0.;\n    \n    for(float j = 1.; j < ((sin(iTime / 4.) + 1.) / 2. + 0.5) * 5.; j += 1.){\n        \n        uv *= j;\n    \n        float ok = 0.;\n        float a = 1.;\n        float b = 0.;\n        float c = 0.;    \t\n\n        for(float i = 0.; i < 8.; i += 1.){\n    \n            a += c;\n            c = b;\n            b = a;        \t\n\n            uv *= rot(i * (pi / 180. * 137.5));\n        \n            ok += sin(uv.x + a + kk);\n            ok += sin(uv.y + a + kk);\n    \n        }\n        ar += ok;\n    }\n    ar = (ar + 1.) / 2.;\n    vec3 col = vec3(ar, ar, ar);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0); \n    \n}\n","name":"Image","description":"","type":"image"}]}