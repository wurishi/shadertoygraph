{"ver":"0.1","info":{"id":"llt3Ws","date":"1472546198","viewed":206,"name":"PerlinLava","username":"10098","description":"practicing perlin noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gradient_at(vec3 lattice_point) {\n\tfloat u = (lattice_point.x + lattice_point.z) / 256.0;\n    float v = (lattice_point.y - lattice_point.z) / 256.0;\n    return normalize(vec3(2.0) * (texture(iChannel0, vec2(float(u), float(v))).rgb - vec3(0.5)));\n}\n\nfloat gradient_dot_dir(vec3 lattice_point, vec3 p) {\n\treturn dot(gradient_at(lattice_point), p - lattice_point);\n}\n\nfloat lerp(float a, float b, float t) {\n\treturn (1.0-t) * a + t * b;\n}\n\nfloat fade(float t) {\n\treturn t*t*t*(t*(t*6.0 - 15.0) + 10.0);\n}\n\nvec3 fade(vec3 p) {\n\treturn vec3(fade(p.x), fade(p.y), fade(p.z));\n}\n\nfloat noise(vec3 p) {\n    vec3 p0 = floor(p);\n\tvec3 p1 = p0 + vec3(1.0);\n    vec3 pw = fade(p - p0);\n\n    float x1, x2, y1, y2;\n\n    x1 = lerp(gradient_dot_dir(vec3(p0.x, p0.y, p0.z), p),\n              gradient_dot_dir(vec3(p1.x, p0.y, p0.z), p),\n              pw.x);\n    x2 = lerp(gradient_dot_dir(vec3(p0.x, p1.y, p0.z), p),\n              gradient_dot_dir(vec3(p1.x, p1.y, p0.z), p),\n              pw.x);\n    y1 = lerp(x1, x2, pw.y);\n    x1 = lerp(gradient_dot_dir(vec3(p0.x, p0.y, p1.z), p),\n              gradient_dot_dir(vec3(p1.x, p0.y, p1.z), p),\n              pw.x);\n    x2 = lerp(gradient_dot_dir(vec3(p0.x, p1.y, p1.z), p),\n              gradient_dot_dir(vec3(p1.x, p1.y, p1.z), p),\n              pw.x);\n    y2 = lerp(x1, x2, pw.y);\n              \n\treturn lerp(y1, y2, pw.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 coord = vec3(fragCoord.x, fragCoord.y, iTime * 4.0);\n    float v = noise(coord / 64.0) + 0.25 * noise(coord/32.0) + 0.1*noise(coord/16.0); \n\tv = 0.5 * (v + 1.0);\n    vec3 color;\n    if (v > 0.7) {\n    \tcolor = vec3(v, v/1.3, 0.0); \n    } else if (v > 0.6) {\n        color = vec3(v, v/2.0, 0.0);\n    } else if (v > 0.5) {\n        color = vec3(v, v/4.0, 0.0);\n    } else {\n    \tcolor = vec3(v, 0, 0);\n    }\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}