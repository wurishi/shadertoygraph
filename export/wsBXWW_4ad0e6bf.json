{"ver":"0.1","info":{"id":"wsBXWW","date":"1553779262","viewed":502,"name":"Screenshake","username":"flyingrub","description":"SHAKE ME Screenshake me! https://www.shadertoy.com/view/wsBXWW #ffgl #resolume #shader #glsl #postprocessing #tv #shader #shadertoy","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["screenshake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float amount = 0.2;\nconst float rotationAmount = .1;\nconst float speed = .1;\n\n\nvec2 rotate2D(vec2 _uv, float _angle){\n    _uv =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _uv;\n    return _uv;\n}\n\nvec3 random3(vec3 c) {\n\tfloat j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n\tvec3 r;\n\tr.z = fract(512.0*j);\n\tj *= .125;\n\tr.x = fract(512.0*j);\n\tj *= .125;\n\tr.y = fract(512.0*j);\n\treturn r;\n}\nconst float F3 =  0.3333333;\nconst float G3 =  0.1666667;\n\nfloat simplex3d(vec3 p) {\n\t vec3 s = floor(p + dot(p, vec3(F3)));\n\t vec3 x = p - s + dot(s, vec3(G3));\n\t \n\t vec3 e = step(vec3(0.0), x - x.yzx);\n\t vec3 i1 = e*(1.0 - e.zxy);\n\t vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n\t \t\n\t vec3 x1 = x - i1 + G3;\n\t vec3 x2 = x - i2 + 2.0*G3;\n\t vec3 x3 = x - 1.0 + 3.0*G3;\n\t \n\t vec4 w, d;\n\t \n\t w.x = dot(x, x);\n\t w.y = dot(x1, x1);\n\t w.z = dot(x2, x2);\n\t w.w = dot(x3, x3);\n\t \n\t w = max(0.6 - w, 0.0);\n\t \n\t d.x = dot(random3(s)-.5, x);\n\t d.y = dot(random3(s + i1)-.5, x1);\n\t d.z = dot(random3(s + i2)-.5, x2);\n\t d.w = dot(random3(s + 1.0)-.5, x3);\n\t \n\t w *= w;\n\t w *= w;\n\t d *= w;\n\t \n\t return dot(d, vec4(52.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv = uv*2.-1.;\n   \tvec3 p3 = vec3(0,0, iTime*speed)*8.0+8.0;\n    vec3 noise = vec3(simplex3d(p3),simplex3d(p3+10.),simplex3d(p3+20.));\n    uv = rotate2D(uv, noise.z*rotationAmount*.1);\n\tuv = (uv+1.)/2.;\n\tfragColor = vec4(texture( iChannel0, uv+noise.xy*amount*0.1 ).rgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}