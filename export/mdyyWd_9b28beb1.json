{"ver":"0.1","info":{"id":"mdyyWd","date":"1697165747","viewed":57,"name":"Weird metalic smoke thing","username":"DwayneBrah","description":"Weird metalic smoke thing. - Wait for it!\n\nI'm not sure what I'm trying to acheive here, but this is certainly a fun toy . \n\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["smoke","weird","relaxing","thing","soothing","calming","unusual","metalic","ambience","whisps"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    if (uv.x > 1.00) {\n        \n        fragColor = texture(iChannel0, uv);\n        \n    } else {\n    \n        fragColor = texture(iChannel1, uv);\n        vec4 col = fragColor * texture(iChannel0, uv);\n        fragColor = mix(fragColor, col, 0.1);\n\n        \n    };\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//////////////////////////////////////////////////////////////////////\nuint seed = 0u;\nvoid hash(){\n    seed ^= 2747636419u;\n    seed *= 2654435769u;\n    seed ^= seed >> 16;\n    seed *= 2654435769u;\n    seed ^= seed >> 16;\n    seed *= 2654435769u;\n}\nvoid initRandomGenerator(vec2 fragCoord){\n    seed = uint(fragCoord.y*iResolution.x + fragCoord.x)+uint(iFrame)*uint(iResolution.x)*uint(iResolution.y);\n}\n\nfloat random(){\n    hash();\n    return float(seed)/4294967295.0;\n}\n/////////////////////////////////////////////////////////////////////\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    initRandomGenerator( vec2 (float(iFrame), float(iFrame)) );\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x/iResolution.y;\n    \n    fragColor = texture(iChannel0, uv);\n    vec4 this_z1 = texture(iChannel0, uv*0.999+0.0005);\n    vec4 this_z2 = texture(iChannel0, uv*(1.0+sin(iTime*0.06)*0.002));\n    \n    \n    //warp stuff\n    fragColor = mix(fragColor, this_z1, 0.7);\n    fragColor.g = mix(fragColor, this_z2, 0.6).g;\n    \n    //age stuff\n    fragColor.r *= 0.999;\n    \n    fragColor.g *= 0.999;\n    \n    fragColor.b *= 0.998;\n\n    fragColor.r += fragColor.g * fragColor.g * 0.012;\n\n    \n    \n    vec2 uv_rand = vec2(mod(random(), 1.0)*ar, mod(random(), 1.0));\n    float dist = distance(uv_rand, vec2(uv.x*ar, uv.y));\n     \n    \n    float dot_size = mod(random(), 0.70)+0.10;\n    vec4 dot_color = vec4(1.0, 0.0, 0.0, 1.0);\n    \n    if (dist < dot_size && mod(float(iFrame), 100.0) < 1.00) {\n        \n        float dot_closeness = 1.0 - dist/dot_size;\n        //float dot_closeness_square = abs(0.0-uv_rand.x) + abs(0.0-uv_rand.y);\n        if (dot_size < 0.60) {\n            fragColor.g -= dot_closeness*dot_closeness*(1.0);\n        } else {\n            fragColor.g += dot_closeness*dot_closeness*(1.0);\n        };\n        \n        \n        fragColor.g = clamp(fragColor.g, 0.0, 1.0);\n        \n        \n    };  \n    \n    fragColor.b = clamp(fragColor.b, 0.0, 1.8);\n    if (mod(fragColor.r*1.60+(0.02), 1.0) > 0.85) {\n        \n       fragColor.b += 0.0800;\n        \n        \n    };\n    \n    fragColor.r = clamp(fragColor.r, -0.5, 2.0);\n    \n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x/iResolution.y;\n    \n    fragColor = texture(iChannel0, uv);\n    \n    float sample_dist = 0.02;\n    vec4 col_left = texture(iChannel0, uv + vec2(0.0-sample_dist, 0.0));\n    vec4 col_bottom = texture(iChannel0, uv + vec2(0.0, 0.0+sample_dist));\n    \n    vec2 face_vec = vec2(fragColor.r - col_left.r, fragColor.r - col_bottom.r);\n    \n    \n    vec4 t_sample = texture(iChannel1, uv*0.22 + face_vec*2.00);\n    \n    \n    //fragColor.b += 0.001;\n    vec4 gray_color = vec4(\n        fragColor.b,\n        fragColor.b,\n        fragColor.b,\n        1.0\n    );\n    \n    //gray_color -= clamp(face_vec.x*4.00, 0.0, 1.0);\n    gray_color *= face_vec.x*4.00+0.85;\n    gray_color *= face_vec.y*2.00+0.85;\n    \n    float reflect_amount = abs(face_vec.x)+abs(face_vec.y);\n    reflect_amount = (reflect_amount)*10.29;\n    reflect_amount = clamp(reflect_amount-0.3, 0.0, 0.5) * 0.50;\n   \n    float shade = t_sample.r*reflect_amount;\n    \n    fragColor = clamp(gray_color, 0.0, 1.92) * (0.5 + shade);    \n    \n}","name":"Buffer B","description":"","type":"buffer"}]}