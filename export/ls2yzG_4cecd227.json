{"ver":"0.1","info":{"id":"ls2yzG","date":"1571167818","viewed":302,"name":"tv noise","username":"tamasaur","description":"tv noise shader with chromatic aberration\n\n\n\n","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","tv","shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define noiselevel 0.4\n#define rgbshiftlevel 0.01\n#define ghostreflectionlevel 0.03\n#define bypass false\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float randomValue = rand(vec2(uv.x+sin(iTime), uv.y+cos(iTime)));\n    float rgbShift = sin(iTime+randomValue)*rgbshiftlevel;\n    \n    if(randomValue > 0.95-ghostreflectionlevel)\n    \tuv.x+=sin(iTime/5.0)*0.5;\n   \n    uv.y += (cos(iTime*randomValue)+0.5) * (randomValue*0.01);\n    \n    float colorr = texture(iChannel0, vec2(uv.x+rgbShift, uv.y)).r;\n    float colorg = texture(iChannel0, vec2(uv.x, uv.y)).g;\n    float colorb = texture(iChannel0, vec2(uv.x-rgbShift, uv.y)).b;\n    \n  \tvec4 movieColor = vec4(colorr,colorg,colorb, 1.0);\n    vec4 noiseColor = vec4(randomValue,randomValue,randomValue,1.0);\n \n    if(randomValue > 0.55-ghostreflectionlevel)\n    \tnoiseColor = abs(noiseColor - 0.2);\n \n    if(bypass)\n        fragColor = texture(iChannel0, fragCoord.xy / iResolution.xy); \n    else\n      \tfragColor = mix(movieColor, noiseColor, noiselevel);  \n    \n\t\n}\n","name":"Image","description":"","type":"image"}]}