{"ver":"0.1","info":{"id":"ctsfR7","date":"1692749712","viewed":33,"name":"Animação mundo primitivo","username":"CesarJMJr","description":"animação de arvores","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep (a, b, t)\n\nfloat TaperBox (vec2 p, float wb, float wt, float yb, float yt) {\n    float m = S(-.01, .01, p.y-yb);\n     m *= S(.01, -.01, p.y-yt);\n     \n     p.x = abs(p.x);\n     \n     float w = mix(wb, wt, (p.y-yb) /(yt-yb));\n     m *= S(.01, -.01, p.x-w);\n     \n     \n    return m;\n}\n\nvec4 Arvore(vec2 uv, vec3 col ){\n   \n   \n    //Tronco (retangulo)\n    float m = TaperBox (uv, .03, .03, -.05, .25);\n    //PrimeiraCamada (Trapezio)\n     m += TaperBox (uv, .2, .1, .25, .5);\n     //SegundaCamada (Trapezio)\n     m += TaperBox (uv, .15, .05, .5, .75);\n     //TerceiraCamada (Triangulo)\n     m += TaperBox (uv, .1, .0, .75, 1.);\n     \n     return vec4(col, m);\n\n}\n\nfloat GetHeight(float x){\n    return sin (x*.423)+sin(x)*.3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    uv.x +=iTime*.15;\n    //uv.y += .5; \n    uv *= 5.;\n    \n    vec4 col = vec4 ( 0);\n    \n    \n    float id = floor(uv.x);\n    float n = fract(sin(id*234.12)*5463.3)*2.-1.; //Onda\n    float x = n*.3;\n    float y = GetHeight(uv.x);\n    uv.x = fract(uv.x)-.5;\n    \n    col += S(0.0, 0.0, uv.y+y);  //chao\n    \n    y = GetHeight(id+.5+ x);\n    \n    \n    vec4 arvore = Arvore((uv-vec2(x, -y))*vec2(1,1.+n*.2), vec3(.0, 0, .0));   \n        \n    col = mix(col, arvore, arvore.a);\n    \n    //col.rg += uv;\n    \n    \n\n    float grossura = 1./iResolution.y;\n    //if(abs(uv.x)<grossura) col.g = 1.;     //eixo x\n    //if(abs(uv.y)<grossura) col.r = 1.;     //eixo y\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}