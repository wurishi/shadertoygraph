{"ver":"0.1","info":{"id":"mstBDn","date":"1697057827","viewed":161,"name":"Farol","username":"Elsio","description":"Fractais! precisamos experimentar mais e mais. As possibilidades s√£o literalmente infinitas!","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["waves","clouds","water","ondas","northern","boreal"],"hasliked":0,"parentid":"Ddtfzn","parentname":"Brumas"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// with @fabrice notes\n\nvoid mainImage(out vec4 o, vec2 u) {\n    float d, l, x, \n          i = 12., \n          s = .4, \n          t = iTime * .5;\n          \n    vec3 r = iResolution, p, \n         D = vec3((u - r.xy / 2.) / r.y, 1), \n         q = vec3(.3 * cos(3. * t), .3 * sin(2. * t), -1);\n         \n    while(i++ < 90.){\n        if(length(q) > s) { //fluid\n            p = q;     \n            l = max(0., .8 - max(0., length(p) - s) / s) / .8, x = l * max(.6, p.x) * 7.;\n            p.y *= 2. + max(0., -p.x - s * .5), p -= l * p * .3, p.x += iTime * .5, p = (p + vec3(1.5, 2., -1.5)) * .18, p = abs(fract(p) - .5);\n            \n            int j; \n            while(j++ < 15) \n                p = abs(p) / dot(p, p) - .6;\n                \n            d += i * length(p) * (x + 3.) / 5e4;\n        }\n        \n        q += D * .01;\n    }\n\n    o.rgb = pow(abs(  // farol\n                    dot(\n                        normalize(q), \n                        normalize(   \n                            vec3(cos(12. * t), cos(6. * t), sin(t))\n                        )\n                    )\n                ),\n                4.\n            ) * vec3(4, 6, 8) / 6.\n            \n            // fluid\n            + d * vec3(.5, d, .1 * d);\n}\n\n\n/* original @elsio\n\n#define r iResolution.xy\n#define t iTime * .5\n#define farol vec3(4, 6, 8) / 6.;\n\nfloat fluid(vec3 p, float s) {\n\tfloat \n        d = max(0., .8 - max(0., length(p) - s) / s) / .8, \n        x = d * max(1.2, p.x * 2.) * 3.5;\n\t\n    p.y *= 2. + max(0., -p.x - s * .5),\n\tp -= d * p * .3,\n\tp.x += t,\n\tp = (p + vec3(1.5, 2., -1.5)) * .18,\n    \n    p = abs(fract(p) - .5);\n\t\n    int i = 0;\n    while(i++ < 15) \n\t\tp = abs(p) / dot(p, p) - .6;\n\t\n\treturn length(p) * (x + 3.) * 2e-5;\n}\n\n\nvoid mainImage( out vec4 o, vec2 u){\n\tu = (u - r / 2.) / r.y;\n    o *= .0;\n\t\n    vec3 D = vec3(u, 1), \n         p = vec3(0, 0, -1),\n         k = vec3(cos(3. * t) * .3, sin(2. * t) * .3, 0),\n         q = vec3(cos(t), cos(6.*t), sin(t));\n                  \n\tfloat d, lum, i = 12., s = .4;\n    \n    while(i++ < 90.) \n        d += length(p + k) > s\n            ? fluid(p + k, s) * i\n            : 0.,\n        p += D * .01;\n   \n    lum = \n        pow(abs(dot(normalize(p + k), normalize(q))), 4.);\n        \n\to.rgb += \n        vec3(.5 * d, d * d, 3. * d * d * d)\n            + lum * farol;\n}\n\n*/","name":"Image","description":"","type":"image"}]}