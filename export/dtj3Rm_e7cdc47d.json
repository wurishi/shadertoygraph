{"ver":"0.1","info":{"id":"dtj3Rm","date":"1673063829","viewed":195,"name":"Seamless noise tiling test","username":"kass","description":"Rotate tiling texture in a circle\nRight click to rotate","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float uvrand(vec2 uv)\n{\n    return fract(sin(dot(uv, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nmat2 rotate(float angle)\n{\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\n\n// Check UV is in Circle\nfloat circledist(vec2 uv)\n{\n    float RADIUS = 1.0;\n    \n    float l = length(uv);\n    return l-RADIUS;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iMouse.x;\n    float TILENUM = 15.0;\n    \n    vec2 uv    = fragCoord/iResolution.xy;\n    \n    // Tiling and Normalize\n    vec2 mUV         = mod(uv * TILENUM,1.0)*2.0f -1.0f;\n    vec2 index        = floor(uv * TILENUM);\n    \n    // RandomValue per Tile\n    float randValue = uvrand(index) - 0.5;\n   \n    //ã€€Rotation\n    float px = 2.0*TILENUM/iResolution.y;\n    vec2 st0 = mUV;\n    vec2 st1 = st0 * rotate(iMouse.x * randValue);\n    vec4 tex0 = textureGrad(iChannel0,st0.xy,vec2(px,0),vec2(0,px));\n    vec4 tex1 = textureGrad(iChannel0,st1.xy,vec2(px,0),vec2(0,px));\n    vec4 tex = mix(tex1,tex0,smoothstep(-px,px,circledist(st0)));\n    \n    // Output to screen\n    fragColor = vec4(tex.x,tex.x,tex.x,1.0);\n}","name":"Image","description":"","type":"image"}]}