{"ver":"0.1","info":{"id":"DdScWR","date":"1720087648","viewed":44,"name":"SeaCoast","username":"YanaZh","description":"seacoast","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cartoon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 GetGradient(vec2 intPos, float t) {\n    \n    // Uncomment for calculated rand\n    //float rand = fract(sin(dot(intPos, vec2(12.9898, 78.233))) * 43758.5453);;\n    \n    // Texture-based rand (a bit faster on my GPU)\n    float rand = texture(iChannel0, intPos / 64.0).r;\n    \n    // Rotate gradient: random starting rotation, random rotation rate\n    float angle = 6.283185 * rand + 4.0 * t * rand;\n    return vec2(cos(angle), sin(angle));\n}\n\n\nfloat Pseudo3dNoise(vec3 pos) {\n    vec2 i = floor(pos.xy);\n    vec2 f = pos.xy - i;\n    vec2 blend = f * f * (3.0 - 2.0 * f);\n    float noiseVal = \n        mix(\n            mix(\n                dot(GetGradient(i + vec2(0, 0), pos.z), f - vec2(0, 0)),\n                dot(GetGradient(i + vec2(1, 0), pos.z), f - vec2(1, 0)),\n                blend.x),\n            mix(\n                dot(GetGradient(i + vec2(0, 1), pos.z), f - vec2(0, 1)),\n                dot(GetGradient(i + vec2(1, 1), pos.z), f - vec2(1, 1)),\n                blend.x),\n        blend.y\n    );\n    return noiseVal / 0.7; // normalize to about [-1..1]\n}\n\nvec3 rgb2rgb(vec3 col)\n{\n    col = col/255. ;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    //vec3 noiseV3 = texture(iChannel0, uv*0.1 + iTime*0.01).rgb;\n    \n    float n1= Pseudo3dNoise(vec3(uv.x*32.0,uv.y*32.0,2311.813))*0.5+0.5;\n    float n2= Pseudo3dNoise(vec3(uv.x*16.0,uv.y*16.0,2311.813))*0.8+0.5;\n    \n    float strength = 0.05;\n    float noise = mix(1.0-strength,1.0+strength,n1);\n\tvec2 uvoffset = (uv.xy-0.5)*noise;\n\tvec2 cir = uvoffset*uvoffset + sin(uv.x*12. + iTime)*sin(uv.y*12. + iTime)/25.0;\n    cir += sin(1.75)*uvoffset;\n\t\n    \n    //float circles = sqrt(abs(cir.x+cir.y)*50.); \n    \n    float mask = clamp((cir.x+cir.y)*5.,0.,1.);\n    vec3 seaCol = rgb2rgb(vec3(127.,255.,212.));\n    vec3 sandCol = rgb2rgb(vec3(245.,222.,179.));\n    vec3 col = mix(seaCol,sandCol,mask);\n\tfragColor = vec4(col,1.0);\n    \n    //Waving\n    float width = 3.0;\n    float negMask = (1.0-mask);\n    float seaMask = clamp(negMask*10.0,0.0,1.0)*mask;\n    float gx = 6.28318*width*(negMask+iTime*0.5);\n    float coastWave = 0.5-0.5*cos(gx-1.2*clamp(sin(gx),0.0,10.0));\n    coastWave *= seaMask;\n     \n       \n    //fragColor = mix(fragColor, vec4(1), clamp(vec4(coastWave*n2),0.0,1.0));\n    //fragColor = vec4(mask);\n    fragColor = vec4(coastWave*n2);\n}","name":"Image","description":"","type":"image"}]}