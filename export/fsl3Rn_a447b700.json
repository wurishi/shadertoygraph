{"ver":"0.1","info":{"id":"fsl3Rn","date":"1615388665","viewed":55,"name":"Exaggerated Color","username":"jy483752","description":"A random idea I came up, the exaggerate functions are made mainly by CaveHex, the main idea is, human can't tell dark colors apart very well, so we can spent less digits on darker colors, PRESS MOUSE DOWN TO SEE EXAGGERATED COLOR.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float exaggerate(float n) {\n  return pow(n, 0.5);\n}\n\nvec3 exaggerate(vec3 col) {\n  float r = exaggerate(col.r);\n  float g = exaggerate(col.g);\n  float b = exaggerate(col.b);\n\n  return vec3(r, g, b);\n}\n\n//  Function from IÃ±igo Quiles\n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\n//I'm not sure if this is anywhere applicable tbh\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = hsb2rgb(vec3(uv.x,smoothstep(-0.2, 0.2, sin(iTime*1.5)),uv.y));\n\n    float flick = 0.0;\n    if(iMouse.z>0.0){\n        flick = 1.0;\n    }\n\n    // Output to screen\n    fragColor = vec4(mix(col, exaggerate(col), flick),1.0);\n}","name":"Image","description":"","type":"image"}]}