{"ver":"0.1","info":{"id":"3d23Rc","date":"1551653590","viewed":21488,"name":"penrose flower","username":"spleenooname","description":"(1st shader on shadertoy. advance thanks for any advice!!)\n\na code rumination after Escher's exhibition.","likes":20,"published":3,"flags":0,"usePreview":0,"tags":["triangle","flower","escher","red","penrose","black","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define luma( rgba ) ( dot( rgba, vec4(0.2126, 0.7152, 0.0722, 1.0) ) )\n\n#define R iResolution\n#define t iTime\n\nvoid mainImage( out vec4 O, in vec2 XY ) {\n    \n    // get normalized texture coordinates\n    vec2 p = (XY * 2. - R.xy ) /R.y;\n    \n    float a = -.5 + max( abs(p.x) + p.y, -p.y);\n    //float a = 0.15 + min( 1.0 * abs(p.x) + p.y * 0.75, -p.y); //like this variation:\n   \n    p = vec2( a, atan(p.x, p.y) );\n    \n    float c = 25. * log(t) * sin(t * .25 ) / t;\n    \n    vec4 s = .25 * cos( vec4(c, 1., 2., 0.) + t - p.y );\n    \n    vec4 e = s.yzxy;\n       \n    vec4 f = min(p.x - s, e - p.x); \n    \n    vec4 col = dot( clamp( f * 100., 0., 1.), 20. * (s - e) ) * (e -.1) ;\n    \n    // output color with luma subtract\n    O = vec4(1.0, 0.0, 0.0, 1.0) - luma(col);\n}","name":"Image","description":"","type":"image"}]}