{"ver":"0.1","info":{"id":"XfBfWG","date":"1725410955","viewed":25,"name":"Diamond Test","username":"ndash","description":"Diamond drop","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["diamond"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    Diamond with Pulsating Waves\n    ----------------------------\n*/\n\n#define PI 3.14159265\n\n// Function to get frequency data\nfloat getFreq(float f) {\n    return texture(iChannel0, vec2(f, 0.25)).x;\n}\n\n// Function to create the diamond shape\nfloat diamond(vec2 uv, float size) {\n    return abs(uv.x) + abs(uv.y) - size;\n}\n\n// Function to create the pulsating waves\nfloat waves(vec2 uv, float time, float freq) {\n    float dist = length(uv);\n    float wave = sin(dist * 10.0 - time * 5.0) * 0.1;\n    return wave * getFreq(freq) * 5.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;  // Center UV coordinates\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Diamond shape\n    float diamondSize = 0.2;\n    float shape = diamond(uv, diamondSize);\n    \n    // Pulsating waves\n    float time = iTime;\n    float freq = 0.1;  // Frequency to sample from music\n    float waveEffect = waves(uv, time, freq);\n    \n    // Color the diamond and waves\n    vec3 color = vec3(1.0, 0.5, 1.0) * smoothstep(0.02, 0.0, shape + waveEffect);\n    \n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}