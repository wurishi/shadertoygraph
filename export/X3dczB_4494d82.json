{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"vec2 getDistanceAngle(vec2 uv){\n    return vec2(\n        length(uv)/2.0,\n        atan(uv.x/uv.y)+(uv.y<0.0?radians(180.0):0.0)\n    );\n}\n\nvec2 getXYFromDA(vec2 da){\n    return vec2(\n        da[0]*sin(da[1]),\n        da[0]*cos(da[1])\n    );\n}\n\nfloat powU(float value, float power){\n    return pow(abs(value),power)*sign(value);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 da = getDistanceAngle(uv*2.0-1.0);\n    da[1]+=sqrt(da[0])*6.0*powU(sin(iTime/2.0),1.5);\n    \n    vec2 uv2 = getXYFromDA(da);\n\n    // Time varying pixel color\n    float x = abs(mod(uv2.x*8.0+iTime/1.5,2.0)-1.0);\n    float y = abs(mod(uv2.y*8.0+iTime,2.0)-1.0);\n\n    // Output to screen\n    fragColor = vec4(pow(vec3(1.0-max(x,y),x,y),vec3(0.4,0.6,0.8)),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"X3dczB","date":"1735289251","viewed":78,"name":"Whirl effect demo","username":"Ponali","description":"This shader converts the current X and Y position to a distance and angle from the canvas center, changes the angle based on the distance, and converts it back into an X and Y position.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["whirl"],"hasliked":0,"parentid":"","parentname":""}}