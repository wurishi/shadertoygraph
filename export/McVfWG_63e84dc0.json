{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define RT(X) mat2(cos(X), -sin(X), sin(X), cos(X))\n\nvoid mainImage(out vec4 c_out, in vec2 uu)\n{\n\tvec2 rr = iResolution.xy;\n    vec2 uv = (uu + uu - rr) / rr.y;\n\tuv *= 0.25;\n\tfloat t = mod(iTime, 3.141592 * 2.0) * 0.01;\n\tfloat l = sin((length(uv) + t) * 13.0) * 0.25;\n\tuv *= 1.0 + clamp(t * 50.0 - 1.0, 0.0, 1.0) * 10.0;\n\tuv *= RT(l);\n\tuv *= RT(t * 100.0);\n\tuv = abs(uv) - vec2(0.25 + (sin(t) * 0.5 + 0.5) * 0.5, 0.25 + (sin(t) * 0.5 + 0.5) * 0.5);\n\t\t\n\tfor (int i = 0; i < 11; i++)\n\t{\n\t\tuv = abs(uv) - vec2(0.1 + sin(t), 0.14 + cos(t) * 0.25) * abs(sin(t) * 40.0);\n\t\tuv *= RT(float(i) * 4.1 + t);\n\t\tuv *= 1.3 + l * 0.1;\n\t\t\n\t}\n\t\n\tvec3 clr = vec3(0);\n\tclr.r = 0.025 / ((sin(uv.x + t) * 0.65) - uv.y + l);\n\tclr.g = 0.025 / ((sin(uv.x + t * 0.5) * 0.25) - uv.y + l);\n\tclr.b = 0.025 / ((sin(uv.x * 1.0 + t * 0.25) * 0.45) - uv.y + l);\n\t\n\tc_out = vec4(clr, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"McVfWG","date":"1734422867","viewed":41,"name":"Fractal Amoeba","username":"akr51","description":"Playing around","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","trig"],"hasliked":0,"parentid":"","parentname":""}}