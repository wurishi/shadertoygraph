{"ver":"0.1","info":{"id":"7sjGzm","date":"1617371596","viewed":190,"name":"RetroRay","username":"Haper","description":"Its a retroraytracing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["synthwave","retrowave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    cam.z=iTime*3.0;\n\n    vec3 sun = vec3(0.0,-1.0,-30.0);\n    sun = norm(sun);\n    \n    dist=iResolution.x/2.0;\n    xy=fragCoord;\n    \n    ray=vec3(xy.x-iResolution.x/2.0,xy.y-iResolution.y/2.0,dist);\n    ray=norm(ray);\n    ray2=ray;\n    ray.y=ray2.y*cos(anA)+ray2.z*sin(anA);\n    ray.z=-ray2.y*sin(anA)+ray2.z*cos(anA);\n    ray=norm(ray);\n \n    ray2=ray;\n    ray.x=ray2.x*cos(anB)+ray2.z*sin(anB);\n    ray.z=-ray2.x*sin(anB)+ray2.z*cos(anB);\n    ray=norm(ray);\n    ray2=ray;\n    cam2=cam;\n    \n    l=flortrig();\n    \n    if(l>0.0)\n    {\n        vec3 n = vec3(0.0,1.0,0.0);\n        cord = cam+ray*l;\n        vec2 uv = vec2(cord.x,cord.z);\n        nois = texture(iChannel0, uv)*1.0;\n        n+=vec3(nois.x-0.5,nois.y-0.5,nois.z-0.5)*0.4;\n        n=norm(n);\n        \n        \n        ray2=reflect(ray,n);\n        cam2 = cord;\n        bright*=0.6;\n    }\n  \n    fragColor=vec4(0.08*bright.x,0.0,pow(0.1-dot(ray2,sun)*0.5,2.0)*bright.y,1.0*bright.z);\n    if(dot(ray2,sun)<-0.98)\n    fragColor=vec4((2.0-ray2.y)*bright.x,(ray2.y+0.5)*bright.y,0.0,1.0);\n    if(l>0.0)\n    {\n        vec3 a=vec3(fragColor.xyz);\n        vec3 b=vec3(1.0,0.0,1.0)*(1.0-abs(cord.x-float(int(cord.x+0.5)))*10.0) ;\n        \n        if((1.0-abs(cord.x-float(int(cord.x+0.5)))*10.0>0.0))\n        fragColor=vec4(1.0-(1.0-a.r)*(1.0-b.r),1.0-(1.0-a.g)*(1.0-b.g),1.0-(1.0-a.b)*(1.0-b.b),1.0);\n        \n        b=vec3(1.0,0.0,1.0)*(1.0-abs(cord.z-float(int(cord.z+0.5)))*5.0)+vec3(max(0.0,b.r),max(0.0,b.g),max(0.0,b.b));\n        \n        if(abs(cord.z-float(int(cord.z)))<0.2)\n        fragColor=vec4(1.0-(1.0-a.r)*(1.0-b.r),1.0-(1.0-a.g)*(1.0-b.g),1.0-(1.0-a.b)*(1.0-b.b),1.0);\n    }\n    if(int(fragCoord.y/5.0)%3==0)\n    {\n        if(int(iTime*31.0)%2==0) \n        fragColor*=0.3;\n        else\n        fragColor*=0.6;\n    }\n  \n    \n    float time = iTime;\n    float fading = (fade(time,-2.,4.));\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 noise = vec3(rand(uv*(time+1.)));\n    if(fragCoord.y/iResolution.y>0.1 && fragCoord.y/iResolution.y<0.16)\n\tfragColor += (cos(iTime)+1.2)*vec4(noise*fading,1.0)*(1.0-cos(fragCoord.x/iResolution.x*3.0-1.2));\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float dist,l;\nvec3 cord;\nvec4 nois;\nvec3 bright = vec3(1.0,1.0,1.0);\nvec3 cam =vec3(10.0,1.0,0.0);\nvec3 cam2;\nvec3 ray,ray2;\nvec2 xy;\nfloat anA=0.0,anB=0.0;\n\nvec3 norm(vec3 a) \n{\n    float l=sqrt(a.x*a.x+a.y*a.y+a.z*a.z);\n    a/=l;\n    return a;\n}\n\nfloat flortrig()\n{\n    float l=-cam.y/ray.y;\n    if(l*ray.z<=10.0)\n    return l;\n    else\n    return -1.0;\n}\nfloat fade(float value, float start, float end)\n{\n    return (clamp(value,start,end)-start)/(end-start);\n}\n\nfloat rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\nfloat rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\nfloat rand(vec3 co){ return rand(co.xy+rand(co.z)); }\n\n","name":"Common","description":"","type":"common"}]}