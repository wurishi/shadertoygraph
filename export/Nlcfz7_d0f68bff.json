{"ver":"0.1","info":{"id":"Nlcfz7","date":"1662791987","viewed":182,"name":"dissection song 2 (spooky)","username":"grom12345","description":"This reminded me of earlier works of experimental animation, like those of Norman McLaren and others, where they often used avant-garde jazz or other uncommon audio.","likes":11,"published":1,"flags":8,"usePreview":0,"tags":["sound","sdf","square","pattern","rotation","rythm","dissection"],"hasliked":0,"parentid":"sl3fR8","parentname":"dissection song"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / iResolution.y;\n    float r = .5;\n    float maxDis = .02;//(sin(iTime-pi*.5)*.5+.5)*.05;\n  //  float maxShift = 5.;\n    vec2 shift = vec2(0);\n    float dLine = 100000.;\n    \n    float t = iTime*speed;\n    float stage = floor(t/(maxN*2.));\n    float mm = mod(t, maxN*2.);\n    float m = floor(mm);\n    float dir = floor(m/maxN);\n    float fr = dir==0. ? fract(t) : 1.;\n    //fr = dir==0. ? fr : 1.-fr;\n    float ii = dir==0. ? m : maxN;//maxN*2.-m;\n    ii+=1.;//-dir;\n    //uv*=Rot(t*pi*.0625);\n    float fade = 1.-fract(t);\n    bool ending = m==maxN*2.-1.;\n    if(ii>0.){\n        for(float i=0.;i<ii;i++){\n            //vec2 h = N(i*cos(iTime*pi*2.)*.05)*vec2(.05, .001);//hash(vec2(i));\n            float step = (i<ii-1. ? 1.: dir==0. ? fr : 1.-fr);\n            float dis = maxDis*step;\n            vec2 d = vec2(-dis, .03);//-dis, sin(t*pi)*maxShift)/ii;\n            d*= step;\n            float a1 = ii-1.+dir;\n            float a2 = ii-dir;\n            float a = 0.;// mix(a1==0. ? 0. : (i+1.)*pi/(a1), a2==0. ? 0. : (i+1.)*pi/(a2), fr);\n            //a*=.1;\n            a+=hash1(vec2((i+1.)*.001)+stage).x*2.*pi;\n            mat2 rot = Rot(a);\n            mat2 rot1 = Rot(-a);\n            d*=rot1;\n            vec2 uv1 = uv;\n            //uv1 += hash(vec2(i))*i/maxN*(i<ii-1. ? 1.: dir==0. ? fr : 1.-fr);//(2.*(i+.5)*r/ii-r)*.5;//hash1(vec2(i))*.1;\n            //uv1+=sin(t*pi*.25)*vec2(N(t*.25))*.05;\n            uv1*=rot;\n            \n            dis = ending ? fade*dis : dis;\n            float newLine = abs(uv1.x)-dis;\n            float cut = uv.y+(step-.5);\n            newLine = max(newLine, -cut);\n            dLine = min(dLine, newLine);\n            \n            shift += uv1.x<.0 ? -d : d;\n        }\n    }\n    uv*=1.5;\n    uv += dir<1. ? shift : shift*((maxN-mod(t, maxN))/maxN);\n    vec3 col = vec3(.2, .2, 1.);\n    //float d = circle(uv, r);\n    \n    float d = sdBox(uv, vec2(r));\n    d = max(d, -dLine);\n    \n    vec3 addCol = vec3((abs(shift))*5.,-length(shift)*5.);\n    \n    col+= ending ? addCol*fade : addCol;\n    \n    if(dir>0.&&!ending){\n        float id = floor(t);\n        \n        vec2 rnd=hash1(vec2(id));\n        col+= abs(rnd.x-length(addCol))>.7||abs(rnd.y-addCol.x)<.2 ? 1.*fade : 0.;\n    }\n\n    col*=col*smoothstep(.01,.0, d);\n    col = pow(abs(1.-col)+.0, vec3(2.2));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.1415926535\n#define speed 1.\n#define maxN 8.\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0);\n    return mix(a, b, h) - k*h*(1.0-h);\n}\n\nfloat circle(vec2 p, float r){\n   return length(p)-r;\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nvec2 N(float angle) {\n// angle to vector\n    return vec2(sin(angle), cos(angle));\n}\n\nvec2 hash( vec2 p ) // replace this by something better\n{\n\tp = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) );\n\treturn -1.0 + 2.0*fract(sin(p)*43758.5453123);\n}\nvec2 hash1( vec2 p )\n{\n    //p = mod(p, 4.0); // tile\n    p = vec2(dot(p,vec2(127.1,311.7)),\n             dot(p,vec2(269.5,183.3)));\n    return fract(sin(p)*18.5453);\n}\n","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[],"code":"vec2 sound(float freq, float dis, float t, float time){\n   float x = 0.;\n   float mm = mod(t, maxN*2.);\n   float m = floor(mm);\n   float dir = floor(m/maxN);\n   bool ending = m==maxN*2.-1.;\n   float fr = ending ? 0. : fract(t);\n   float vol = pow(1.-fr, dir==0. ? .001 : .03);\n   vol*=clamp(fr*(dir==0. ? 5. : 40.), 0., 1.);\n   vol*=clamp((1.-fr)*10., 0., 1.);\n   vol*=dir==0. ? .96 : .99;\n   float id = floor(t);\n   \n   float voices = dir==0. ? m : maxN;\n   voices+=1.;\n   for(float i=1.;i<=voices;i++){\n       vec2 hh = hash1(vec2(id, i))*.5+.5;\n       float h = hh.x;\n       float l = hh.y;\n       //h=floor(h*5.);\n       //l=floor(l*3.);\n       //h=2./h;\n       float w = sin(2.*pi*(freq*h*l)*time);\n       x+=sign(w)*pow(abs(w)*vol, dis*70.+dir*10.);\n       \n   }\n   //x=sign(x)*pow(abs(x), 1.01);\n   return vec2(x/voices);\n}\n\nvec2 mainSound( int samp, float time )\n{\n   float freq =440.;\n   float t=time*speed;\n   vec2 x = vec2(0.);\n   x+=sound(freq, 1., t, time); \n   \n   vec2 dl = sound(freq, .07, t-.25, time);\n   dl=sign(dl)*pow(abs(dl), vec2(.8));\n    \n   vec2 dr = sound(freq, .05, t-.125, time);\n   dr=sign(dr)*pow(abs(dr), vec2(.9));\n   \n   x+=dl*vec2(1., .2)*.2;\n   x+=dr*vec2(.2, 1.)*.1;\n   \n   float mm = mod(t, maxN*2.);\n   float m = floor(mm);\n   float dir = floor(m/maxN);\n   float bb = dir==0. ? 4. : 8.;\n   \n   //float b=sin(2.*pi*freq*time/bb)*(1.-fract(t/8.));\n   //x+=sign(b)*pow(abs(b), 2.5)*.05;\n   \n   return x/.5;\n}","name":"Sound","description":"","type":"sound"}]}