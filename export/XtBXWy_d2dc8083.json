{"ver":"0.1","info":{"id":"XtBXWy","date":"1446101621","viewed":213,"name":"My Clock","username":"Dermenslof","description":"weeeeeeeeeeeeeeeeeeeee","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["myclock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 rotate(in vec2 uv, float a)\n{\n    a = radians(a);\n\treturn (vec2(uv.x * cos(a) - uv.y * sin(a), uv.x * sin(a) + uv.y * cos(a)));\n}\n\nbool isInCircle(vec2 uv, vec2 c, float r)\n{\n    return length(uv - c) <= r;\n}\n\nbool isOnCircle(vec2 uv, vec2 c, float r)\n{\n    return isInCircle(uv, c, r) && length(uv - c) > r - 0.005;\n}\n\nbool isNeedle(vec2 no, float w, float h, float a, float offset)\n{\n    no = rotate(no, a);\n    w /= 2.0;\n    return (no.x > -w && no.x < w && no.y > offset && no.y - offset < h);\n}\n\n#define V(X, Y) vec2(X.0, Y.0)\n\nstruct CHAR\n{\n    bool l00;bool l01;bool l02;bool l03;bool l04;bool l05;bool l06;\n    bool l10;bool l11;bool l12;bool l13;bool l14;bool l15;bool l16;\n    bool l20;bool l21;bool l22;bool l23;bool l24;bool l25;bool l26;\n    bool l30;bool l31;bool l32;bool l33;bool l34;bool l35;bool l36;\n    bool l40;bool l41;bool l42;bool l43;bool l44;bool l45;bool l46;\n    bool l50;bool l51;bool l52;bool l53;bool l54;bool l55;bool l56;\n    bool l60;bool l61;bool l62;bool l63;bool l64;bool l65;bool l66;\n};\n    \nCHAR zero = CHAR(\n    false,\ttrue,\ttrue,\ttrue,\ttrue,\ttrue,\tfalse,\n    true, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\ttrue,\n    true, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse ,\ttrue,\n    true, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse, \ttrue,\n    true, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse, \ttrue,\n    true, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse\n);\n\nCHAR one = CHAR(\n    false, \tfalse, \tfalse, \tfalse,\ttrue, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \ttrue,\ttrue, \tfalse, \tfalse,\n    false, \tfalse, \ttrue, \tfalse,\ttrue, \tfalse ,\tfalse,\n    false, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue\n);\n\nCHAR two = CHAR(\n\tfalse, \tfalse, \ttrue, \ttrue, \ttrue, \tfalse, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse ,\ttrue, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse\n);\n\nCHAR three = CHAR(\n\tfalse, \tfalse, \ttrue, \ttrue, \ttrue, \tfalse, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse ,\ttrue, \tfalse,\n    false, \tfalse, \tfalse, \ttrue, \ttrue, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \tfalse, \tfalse\n);\n\nCHAR four = CHAR(\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \ttrue ,\ttrue, \tfalse,\n    false, \tfalse, \tfalse, \ttrue, \tfalse, \ttrue, \tfalse,\n    false, \tfalse, \ttrue, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse,\n    false, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse\n);\n\nCHAR five = CHAR(\n    false, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse ,\tfalse, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse\n);\n\nCHAR six = CHAR(\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse ,\tfalse, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse\n);\n\nCHAR seven = CHAR(\n    false, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \tfalse, \tfalse, \tfalse ,\ttrue, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse\n);\n\nCHAR eight = CHAR(\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse ,\tfalse, \ttrue,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse\n);\n\nCHAR nine = CHAR(\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse,\n    false, \ttrue, \tfalse, \tfalse, \tfalse ,\tfalse, \ttrue,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \ttrue,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \ttrue, \tfalse, \tfalse, \tfalse, \tfalse, \ttrue,\n    false, \tfalse, \ttrue, \ttrue, \ttrue, \ttrue, \tfalse\n);\n\nCHAR colon = CHAR(\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \ttrue, \tfalse, \tfalse, \tfalse,\n    false, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse, \tfalse\n);\n\nCHAR num[11];\n\nvec3 drawChar(vec2 xy, vec2 pos, CHAR c, vec3 c1, vec3 c2, float height)\n{\n    vec2 p = (pos + height - xy) / (height / 7.0);\n\tp.x = 7.0 - p.x;\n    \n    if (p.y < 0.0 || p.x < 0.0) return c1;\n\tif (p.x < 1.0 && p.y < 1.0) return (c.l00 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 1.0) return (c.l01 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 1.0) return (c.l02 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 1.0) return (c.l03 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 1.0) return (c.l04 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 1.0) return (c.l05 ? c2 : c1);\n    if (p.x < 7.0 && p.y < 1.0) return (c.l06 ? c2 : c1);\n\tif (p.x < 1.0 && p.y < 2.0) return (c.l10 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 2.0) return (c.l11 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 2.0) return (c.l12 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 2.0) return (c.l13 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 2.0) return (c.l14 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 2.0) return (c.l15 ? c2 : c1);\n\tif (p.x < 7.0 && p.y < 2.0) return (c.l16 ? c2 : c1);\n    if (p.x < 1.0 && p.y < 3.0) return (c.l20 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 3.0) return (c.l21 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 3.0) return (c.l22 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 3.0) return (c.l23 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 3.0) return (c.l24 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 3.0) return (c.l25 ? c2 : c1);\n\tif (p.x < 7.0 && p.y < 3.0) return (c.l26 ? c2 : c1);\n    if (p.x < 1.0 && p.y < 4.0) return (c.l30 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 4.0) return (c.l31 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 4.0) return (c.l32 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 4.0) return (c.l33 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 4.0) return (c.l34 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 4.0) return (c.l35 ? c2 : c1);\n\tif (p.x < 7.0 && p.y < 4.0) return (c.l36 ? c2 : c1);\n    if (p.x < 1.0 && p.y < 5.0) return (c.l40 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 5.0) return (c.l41 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 5.0) return (c.l42 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 5.0) return (c.l43 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 5.0) return (c.l44 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 5.0) return (c.l45 ? c2 : c1);\n\tif (p.x < 7.0 && p.y < 5.0) return (c.l46 ? c2 : c1);\n    if (p.x < 1.0 && p.y < 6.0) return (c.l50 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 6.0) return (c.l51 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 6.0) return (c.l52 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 6.0) return (c.l53 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 6.0) return (c.l54 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 6.0) return (c.l55 ? c2 : c1);\n\tif (p.x < 7.0 && p.y < 6.0) return (c.l56 ? c2 : c1);\n    if (p.x < 1.0 && p.y < 7.0) return (c.l60 ? c2 : c1);\n\tif (p.x < 2.0 && p.y < 7.0) return (c.l61 ? c2 : c1);\n\tif (p.x < 3.0 && p.y < 7.0) return (c.l62 ? c2 : c1);\n\tif (p.x < 4.0 && p.y < 7.0) return (c.l63 ? c2 : c1);\n\tif (p.x < 5.0 && p.y < 7.0) return (c.l64 ? c2 : c1);\n\tif (p.x < 6.0 && p.y < 7.0) return (c.l65 ? c2 : c1);\n    if (p.x < 7.0 && p.y < 7.0) return (c.l66 ? c2 : c1);\n    return (c1);\n}\n\nvoid init_nums()\n{\n    num[0] = zero;\n    num[1] = one;\n    num[2] = two;\n    num[3] = three;\n    num[4] = four;\n    num[5] = five;\n    num[6] = six;\n    num[7] = seven;\n    num[8] = eight;\n    num[9] = nine;\n    num[10] = colon;\n}\n\nvec3 putNbr(vec2 uv, vec2 p, float size, vec3 c, vec3 c2, float n)\n{\n    if (c.y != 0.0)\n        return c;\n    float div = 1.0;\n    if (n > 0.0)\n        n = -n;\n    for (float d=1.0; d > 0.0; ++d)\n    {\n        if (floor(n / div) > -10.0)\n            break;\n        div *= 10.0;\n    }\n    vec3 color = c;\n    for (float d=1.0; d > 0.0; d++)\n    {\n        int N = int(mod(abs(n / div), 10.0));\n        for (int i = 0; i < 10; ++i)\n        {\n            if (i == N)\n            {\n                color = drawChar(uv, p, num[i], c, c2, size);\n            \tbreak;\n            }\n        }\n        if (div == 1.0 || color.y != 0.0)\n            break;\n\t\tdiv /= 10.0;\n        p.x += size;\n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iTime <= 0.1)\n    \tinit_nums();\n    vec2 xy = fragCoord.xy;\n\tvec2 uv = 2.0 * fragCoord.xy / iResolution.xy - 1.0;\n    uv.x = uv.x * iResolution.x / iResolution.y;\n    vec3 c = vec3(0.0);\n    vec3 c2 = vec3(0,1,0);\n    float s = mod(iDate.w, 60.0);\n    float m = mod(iDate.w / 60.0, 60.0);\n    float h = mod(iDate.w / 3600.0, 12.0);\n    if (isNeedle(uv, 0.03, 0.6, m * 360.0 / 60.0, 0.0))\n        c = vec3(0.0, 0.0, 1.0);\n    if (isNeedle(uv, 0.03, 0.4, h * 360.0 / 12.0, 0.0))\n        c = vec3(0.0, 1.0, 0.0);\n   \tif (isNeedle(uv, 0.02, 0.75, floor(floor(s) * 360.0 / 60.0), 0.0))\n  \t\tc = vec3(1.0, 0.0, 0.0);\n\tfor (float i = 0.0; i < 360.0; i += 6.0)\n    {\n        float m = mod(i, 30.0);\n        float l = m > -0.01 && m < 0.01 ? 0.2 : 0.1;\n    \tif (isNeedle(uv, 0.025, l, i, 1.0 - l))\n    \t    c = vec3(1.0);\n    }\n    if (xy.x > iResolution.x - 169.0 && xy.y < 22.0)\n    {\n    \tc = drawChar(xy, vec2(iResolution.x - 63.0, 0), num[10], c, c2, 21.0);\n   \t\tc = drawChar(xy, vec2(iResolution.x - 126.0, 0), num[10], c, c2, 21.0);\n    \tif (s < 10.0)\n    \t\tc = putNbr(xy, vec2(iResolution.x - 42.0, 0), 21.0, c, c2, 0.0);\n    \tif (m < 10.0)\n    \t\tc = putNbr(xy, vec2(iResolution.x - 105.0, 0), 21.0, c, c2, 0.0);\n    \tc = putNbr(xy, vec2(iResolution.x - (s < 10.0 ? 21.0 : 42.0), 0), 21.0, c,c2, s);\n    \tc = putNbr(xy, vec2(iResolution.x - (m < 10.0 ? 84.0 : 105.0), 0), 21.0, c, c2, m);\n    \tc = putNbr(xy, vec2(iResolution.x - (h < 10.0 ? 147.0 : 168.0), 0), 21.0, c, c2, h);\n    }\n    fragColor = vec4(c, 1.0);\n}","name":"","description":"","type":"image"}]}