{"ver":"0.1","info":{"id":"Ds2BRD","date":"1689502988","viewed":114,"name":"dead easy spong","username":"ronwnor","description":"port from desmos ofc\nprobably not the right way to do this, it works doe","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rot(float a,float b){           // spinni boi\n    return mat3(cos(a)*cos(b), -sin(a), cos(a)*sin(b),\n                cos(b)*sin(a),  cos(a), sin(a)*sin(b),\n               -sin(b)       ,  0     , cos(b)       );\n}\n\nfloat m(vec3 p){                     // median my beloved\n    return p.x + p.y + p.z \n  -min(min(p.x , p.y), p.z) \n  -max(max(p.x , p.y), p.z);\n}\n\nfloat h(vec3 p, float n){            // hole\n    n = 1./n;\n    return m(abs(mod(p, n) - n*.5)) - n*.333;\n}\n\nfloat f(vec3 p){                     // main\n    p *= rot(cos(iTime*.5)*.5, iTime);\n    vec3 q = abs(p) - .5;\n    \n    return max(max(max(max(max(max(\n           q.x, q.y), q.z), // box\n           h(p, 1.)),\n           h(p, 3.)),       // holes\n           h(p, 9.)),\n           h(p, 27.));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec3 rd = normalize(vec3((2.*fragCoord - iResolution.xy)/iResolution.y, 2));\n    vec3 r = vec3(0,0,-2);\n    float d, c;\n    \n    for(int i=0; i<32; ++i){\n        \n        d = f(r);\n        c += smoothstep(-.03, .01, -d)*.03;\n        r += d*rd;\n    }\n    \n    fragColor = vec4(c, c, c, 0);\n}","name":"Image","description":"","type":"image"}]}