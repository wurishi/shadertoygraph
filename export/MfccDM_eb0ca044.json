{"ver":"0.1","info":{"id":"MfccDM","date":"1730885118","viewed":60,"name":"Vaporwave-ivkoneli","username":"ivkoneli","description":"Vaporwave wave ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["vaporwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv , float r , float blur){\n    \n    uv -= vec2(0.5,0.5); // Center at (0.5, 0.5)\n    uv.x *= iResolution.x / iResolution.y; \n    uv.y += sin(iTime * 2.0) * 0.02; \n\n    float d = length(uv); // Distance from center\n    float c = smoothstep(r, r - blur, d); // Smooth circle edge\n    return c;\n}\n\nfloat neonLine(vec2 uv, float lineY, float lineWidth, float blurStrength) {\n    // Calculate the distance from the current pixel's y-coordinate to the specified lineY\n    float distance = abs(uv.y - lineY);  \n    \n    // Create a sharp line with smoothstep\n    float line = smoothstep(lineWidth * 0.5, 0.0, distance); // Make a sharp line\n    \n    // Apply a glow effect at the edges using another smoothstep\n    float glow = smoothstep(lineWidth * 0.5, 0.0, distance);\n    \n    // Return a combination of sharp line and glow (neon effect)\n    return line;// * (1.0 - glow) + glow *  0.5;  // Blend the sharp line with the glow\n}\n\n\nvec4 layerOnTop(vec4 bottom, vec4 top)\n{\n    float alpha = min(1.0, top.a);\n    return top * alpha + bottom*(1. - alpha);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy; // Normalize coordinates\n    float aspectRatio = iResolution.x / iResolution.y;\n    \n    float squareCount = 7.0;\n    float squareSize = aspectRatio / squareCount;\n    vec3 viewDir = vec3(abs(uv.xy - 0.5), 0.5); // Move X and Y to center and add fake Z\n    vec2 planarUV = viewDir.xz / viewDir.y; // Drop XZ into Y: XYZ -> XY\n    planarUV -= vec2(0.0, iTime * 0.3); // Add time-based movement\n    \n    vec3 backgroundColor = vec3(1.0, 0.0, 1.0);\n    vec3 squareColor = vec3(0.1, 0.0, 0.1); \n    vec3 col = vec3(0,0,0.15);\n    vec3 darkBlack = vec3(0.0, 0.0, 0.0); // Dark black at the top\n    vec3 darkBlue = vec3(0.0, 0.0, 0.45);  // Dark blue at the bottom\n    \n    // Interpolate between black and blue based on the vertical position (uv.y)\n    col = mix(darkBlue, darkBlack, uv.y); // Linear interpolation\n    \n    //float fog =  min(max(abs(uv.y - 0.42) * 50.0 - 5.0, 0.0), 0.75 );\n    //col *= fog;\n   \n\n    // Define circle and gradient properties\n    float radius = 0.25;\n    float circle = Circle(uv, radius, 0.002);\n\n    // Gradient color range\n    vec3 neonYellow = vec3(1.0, 1.0, 0.0); \n    vec3 brightOrange = vec3(1.0, 0.5, 0.0); \n    vec3 neonPink = vec3(1.0, 0.0, 1.0); \n\n    // Map the y-coordinate to a range from 0 to 1 within the circle's vertical span\n    float gradientPosition = smoothstep(0.3 - radius / 2.0, 0.8 + radius / 2.0, uv.y);\n\n    // Create a linear gradient along the y-axis within the circle\n    vec3 circleColor = mix(neonPink, brightOrange, gradientPosition);\n    circleColor = mix(circleColor, neonYellow, gradientPosition);\n    col = mix(col, circleColor, circle); \n\n    // Apply the effect to the lower half of the screen\n    if (uv.y <= 0.33) {\n        vec2 gridUV = mod(planarUV / squareSize, 1.375); \n        float square = step(0.0375, gridUV.x) * step(0.0375, gridUV.y); \n        col = mix(backgroundColor, squareColor, square);\n    }\n        // Parameters for the neon line\n    float lineY = 0.33;  // Line position (middle of the screen)\n    float lineWidth = 0.02;  // Width of the line (adjust to suit your needs)\n    float blurStrength = 0.03;  // Amount of blur for the glow effect\n    \n    // Call the neonLine function to get the line with the glow effect\n    float neonLineEffect = neonLine(uv, lineY, lineWidth, blurStrength);\n\n    // Apply the neon glow color (neon yellow or green)\n    col = mix(col, vec3(1.0, 1.0, 0.0), neonLineEffect); \n\n    fragColor = vec4(col, 1.0); // Set final fragment color\n}","name":"Image","description":"","type":"image"}]}