{"ver":"0.1","info":{"id":"XstXD2","date":"1461613415","viewed":1785,"name":"Darksine","username":"finalman","description":"Experimented with iq's method for estimating the distance to an isoline when suddenly unintentional glitch art happened.","likes":13,"published":3,"flags":8,"usePreview":0,"tags":["glitch","numericalerror","zalgo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float iso(vec2 v)\n{\n    v.y += 0.001;\n    v.x += sin(v.y * 20.0 + iTime * 0.1) * 0.2;\n    return length(v) - 0.4;\n}\n\nvec2 grad(vec2 v)\n{\n    float E = 0.00000002 * exp(1.25 * sin(iTime * 5.0));\n    float c = iso(v);\n    float x = iso(v + vec2(E, 0)) - iso(v - vec2(E, 0));\n    float y = iso(v + vec2(0, E)) - iso(v - vec2(0, E));\n    return vec2(x, y) / E;\n}\n\nfloat dist(vec2 v)\n{\n    float i = iso(v);\n    vec2 g = grad(v);\n    return abs(i) / length(g);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / iResolution.y;\n    float d = dist(uv);\n    vec3 color = mix(vec3(0, 0, 0), vec3(1, 0, 0), smoothstep(0.02, 0.022, d));\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"float glitch(float t)\n{\n    float E = 0.000002 * exp(2.0 * sin(t * 5.0));\n    \n    t *= 35.72; // Tweak here :D\n    \n    float a = cos(t);\n    float b = cos(t + E);\n    return (b - a) / E;\n}\n\nfloat bass(float t)\n{\n    t = mod(t, 3.1416);\n    return atan(sin(t * 300.0 + sin(t * 200.0)));\n}\n\nvec2 mainSound( in int samp,float time)\n{\n    return atan(vec2(glitch(time), glitch(time + 0.0001))) * 0.05 + bass(time) * 0.15;\n}","name":"Sound","description":"","type":"sound"}]}