{"ver":"0.1","info":{"id":"MsfcWn","date":"1487654830","viewed":1884,"name":"Neon Sines","username":"lherm","description":"Making my own plasma(ish) thing.","likes":16,"published":3,"flags":0,"usePreview":0,"tags":["plasma","2tweets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fabrice's 2nd optomization\nvoid mainImage( out vec4 O,  vec2 p )\n{\n\tp *= 5. / iResolution.xy;\n\n    vec4 a = vec4(.1,.4,.222,0) + iTime + atan(p.y, p.x), \n         b = a; b.y+=.4;\n    a = cos( sin(p.x)-cos(p.y) +a ),\n    b = sin( a*p.x*p.y - p.y   +b );\n\n    a =  abs(b*b-a*a);\n\n    O =  1.6 * pow(1.-a+a*a,  16.+a-a);\n}\n\n/*\n// Fabrice's optimization\nvoid mainImage( out vec4 O,  vec2 p )\n{\n\tp *= 5. / iResolution.xy;\n\n    float  T = iTime + atan(p.y, p.x);\n    vec4 a = cos(sin(p.x)-cos(p.y)+vec4(.1,.4,.222,0)+T),\n         b = sin(a*p.x*p.y - p.y  +vec4(.1,.8,.222,0)+T);\n\n    a =  abs(b*b-a*a);\n    O =  1.6 * pow(1.-a+a*a, vec4(16.));\n}\n*/\n\n/*\nOriginal implementation\n------------------------\n\n#define PI 3.1415926\n#define T iTime\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = uv * 5.;\n    float phi = atan(p.y, p.x);\n    vec3 a = cos(sin(p.x)-cos(p.y)+vec3(.1,.4,.222)+T+phi);\n    vec3 b = sin(a*p.x*p.y-p.y+T+vec3(.1,.8,.222)+phi);\n    vec3 col = vec3(0.);\n    for (int i = 0; i < 3; i++)\n    {\n        col = 1.-abs(b*b-a*a)*col;\n    }\n    col = pow(col, vec3(8.));\n    col = smoothstep(0., 1., col);\n\tfragColor = vec4(col,1.0);\n}\n*/","name":"Image","description":"","type":"image"}]}