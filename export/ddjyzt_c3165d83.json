{"ver":"0.1","info":{"id":"ddjyzt","date":"1688096925","viewed":56,"name":"blog_profile","username":"bronson113","description":"Cool!\nModified from shader tutorial video URL: https://youtu.be/f4s1h2YETNY","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n     Modified from shader tutorial video URL: https://youtu.be/f4s1h2YETNY\n*/\n\n//https://iquilezles.org/articles/palettes/\n//[[0.439 0.034 0.411] [0.742 0.658 0.198] [1.271 1.503 0.636] [1.615 2.178 1.561]]\nvec3 palette( float t ) {\n    vec3 a = vec3(.439, .034, .411);\n    vec3 b = vec3(.742, .658, .198);\n    vec3 c = vec3(1.271, 1.503, .636);\n    vec3 d = vec3(1.615, 2.178, 1.561);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n//https://iquilezles.org/articles/distfunctions2d/\nfloat sdRoundedX( in vec2 p, in float w, in float r )\n{\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*0.5) - r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.5; i < 4.5; i++) {\n        uv = fract(uv*i-0.5) - 0.5;\n\n        float d = sdRoundedX(uv, i*.5, i*.1);\n\n        vec3 col = palette(length(uv0) + i + iTime);\n\n        d = sin(d*12. + iTime);\n        d = abs(d);\n\n        d = pow(.1 / d, 2.);\n\n        finalColor += col * d;\n    }\n        \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}