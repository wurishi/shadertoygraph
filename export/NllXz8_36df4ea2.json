{"ver":"0.1","info":{"id":"NllXz8","date":"1625143430","viewed":44,"name":"Nikolay_Profile2","username":"ndzaitsev","description":"Profile","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _(float a, float b, float c){\n  return max(a,max(b,c));\n}\nfloat L(vec2 p, vec2 P0, vec2 P1){\n  float a = -(P1.y-P0.y);\n  float b =  (P1.x-P0.x);\n  float d =  P0.x*P1.y- P0.y*P1.x; \n  float x = p.x;\n  float y = p.y;\n    return a*x + b*y + d;\n}\n    \n  float T(vec2 p, vec2 P0, vec2 P1, vec2 P2){\n      return  _(\n                 L(p, P0, P1),\n                 L(p, P1, P2), \n                 L(p, P2, P0)\n               );   \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//  digitalized profile                      \n vec2 P[57];\n       P[ 0] = vec2(0.28     ,  0.84800);\n       P[ 1] = vec2(0.142    ,   0.88200);\n       P[ 2] = vec2(0.036    ,   0.86600);\n       P[ 3] = vec2(-0.014   ,    0.87200);\n       P[ 4] = vec2(-0.062   ,    0.85400);\n       P[ 5] = vec2(-0.11    ,   0.82800);\n       P[ 6] = vec2(-0.22    ,   0.83400);\n       P[ 7] = vec2(-0.328   ,    0.83200);\n       P[ 8] = vec2(-0.446   ,    0.78600);\n       P[ 9] = vec2(-0.558   ,    0.72200);\n       P[10] = vec2(-0.664   ,    0.62600);\n       P[11] = vec2(-0.712   ,    0.48000);\n       P[12] = vec2(-0.748   ,    0.33800);\n       P[13] = vec2(-0.726   ,    0.23000);\n       P[14] = vec2(-0.69    ,   0.11200);\n       P[15] = vec2(-0.622   ,    0.048000);\n       P[16] = vec2(-0.616   ,    0.022000);\n       P[17] = vec2(-0.594   ,    -0.026000);\n       P[18] = vec2(-0.556   ,    -0.074000);\n       P[19] = vec2(-0.574   ,    -0.14200);\n       P[20] = vec2(-0.606   ,    -0.19600);\n       P[21] = vec2(-0.642   ,    -0.27200);\n       P[22] = vec2(-0.668   ,    -0.33000);\n       P[23] = vec2(-0.646   ,    -0.38400);\n       P[24] = vec2(-0.606   ,    -0.40000);\n       P[25] = vec2(-0.54    ,   -0.40800);\n       P[26] = vec2(-0.504   ,    -0.49600);\n       P[27] = vec2(-0.488   ,    -0.52200);\n       P[28] = vec2(-0.462   ,    -0.53800);\n       P[29] = vec2(-0.466   ,    -0.55400);\n       P[30] = vec2(-0.46    ,   -0.58000);\n       P[31] = vec2(-0.412    ,   -0.59600);\n       P[32] = vec2(-0.39     ,  -0.65600);\n       P[33] = vec2(-0.398    ,   -0.69200);\n       P[34] = vec2(-0.38     ,  -0.74600);\n       P[35] = vec2(-0.35     ,  -0.76800);\n       P[36] = vec2(-0.274    ,   -0.78800);   \n       P[37] = vec2(-0.174    ,   -0.78800);\n       P[38] = vec2(-0.086    ,   -0.79800);\n       P[39] = vec2(-0.044    ,   -0.82600);\n       P[40] = vec2(0.042     ,  -0.90000);\n       P[41] = vec2(0.114     ,  -1.0020);\n       P[42] = vec2(0.234     ,  -0.91200);\n       P[43] = vec2(0.382     ,  -0.80800);\n       P[44] = vec2(0.53      , -0.69200);\n       P[45] = vec2(0.644     ,  -0.65000);\n       P[46] = vec2(0.738     ,  -0.52200);\n       P[47] = vec2(0.802     ,  -0.40800);\n       P[48] = vec2(0.788      , -0.29600);\n       P[49] = vec2(0.798      , -0.088000);\n       P[50] = vec2(0.814      , -0.014000);\n       P[51] = vec2(0.804      , 0.13400);\n       P[52] = vec2(0.804      , 0.31600);\n       P[53] = vec2(0.74      , 0.53400);\n       P[54] = vec2(0.66      , 0.71600);\n       P[55] = vec2(0.546     ,  0.82200);\n       P[56] = vec2(0.282     ,  0.86000);\n   \n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 p = 1.0 - 2.0* fragCoord/iResolution.xy;\n    vec2 m = 1.0 - 2.0* iMouse.xy/iResolution.xy;\n\n     float x = p.x * iResolution.x/iResolution.y;\n     float y = p.y ;\n     \n     float mx = m.x * iResolution.x/iResolution.y;\n     float my = m.y ;\n           \n            x/=mx;\n            y/=my;\n            \n            p.x=x;\n            p.y=y;\n   \n\n      float  z = 1.0e25; //infinity\n              for(int i=0;i<57-3;i++)\n                z = min(z, T(p,  P[i],P[i+1], P[i+3]) );   \n       float     f = 1.25/z; \n\n    // Time varying pixel color\n               vec3 col = vec3(1.0, 1.0, 1.0);\n                if(f >= 0.0)col.g = f;\n                   else     col.r = f; col.g = f; col.b = f;\n                \n\n    // Output to screen\n                   fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}