{"ver":"0.1","info":{"id":"tsjGDh","date":"1548780049","viewed":116,"name":"Silent night","username":"Canysway","description":"made house by using shape","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["star","moon","night","house"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  vec2 big_uv = uv;\n  vec2 sun_uv = uv;\n  big_uv -= vec2(0.5);\n  big_uv /= vec2(0.5);\n  big_uv += vec2(0.0, 1.);\n    \n  sun_uv -= vec2(0.5);\n  sun_uv /= vec2(0.3);\n  sun_uv += vec2(1.5, 0.);\n  vec4 sunColor = texture(iChannel1, sun_uv);\n  vec4 bigColor = texture(iChannel0, big_uv);\n  fragColor = vec4(min(1., sunColor.a + bigColor.a));\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.1415923693\n#define PI_2 6.28318530718\n\nfloat getMainBody(vec2 uv){\n  vec2 bl = step(vec2(0.3, 0.1), uv);\n  vec2 tr = step(vec2(0.3, 0.5), vec2(1.) - uv);\n  return bl.x * bl.y * tr.x * tr.y;\n}\n\nfloat getTriRoof(vec2 uv, vec2 scale, vec2 trans){\n  uv -= vec2(0.5);\n  uv /= scale;\n  uv += vec2(trans.x, 1.- trans.y);\n  uv = uv* 2. -1.;\n  int N = 3;\n  float angle = atan(uv.x, uv.y) + PI;\n  float r = PI_2/float(N);\n  float d = cos(floor(.5 + angle/r) * r - angle)*length(uv);\n  return 1.0 - smoothstep(.4, .41, d);\n}\n\nfloat getWindow(vec2 uv, vec2 scale, vec2 trans){\n  vec2 bl = step(vec2(trans.x, trans.y), uv);\n  vec2 tr = 1. - step(vec2(trans.x + scale.x, trans.y + scale.y), uv);\n  return bl.x * bl.y * tr.x * tr.y;\n}\n\nfloat getBox(vec2 uv, vec2 scale){\n  scale = vec2(0.5) - scale * 0.5;\n  vec2 bl = smoothstep(scale, scale + vec2(0.001), uv);\n  vec2 tr = smoothstep(scale, scale + vec2(0.001), vec2(1.) - uv);\n  vec2 result = bl * tr;\n  return result.x * result.y;\n}\n\nmat2 rotate2d(float angle){\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\nfloat makeRotateCross(vec2 uv, vec2 scale, vec2 trans){\n  uv -= trans;\n  uv = rotate2d(iTime) * uv;\n  uv += vec2(0.5);\n  return min(1., (getBox(uv, scale) + getBox(uv, vec2(scale.y, scale.x))));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  float mainBody = getMainBody(uv);\n  float triRoof = getTriRoof(uv, vec2(1., 0.7), vec2(0.5, 0.5));\n  float leftWindow = getWindow(uv, vec2(0.1, 0.2), vec2(0.395, 0.27));\n  float rightWindow = getWindow(uv, vec2(0.1, 0.2), vec2(0.505, 0.27));\n  float stick = getWindow(uv, vec2(0.03, 0.22), vec2(0.28, 0.5));\n  float rotateCross = makeRotateCross(uv, vec2(0.03, 0.2), vec2(0.293, 0.7));\n  float sum = (min(1.0,(mainBody + triRoof)) - leftWindow - rightWindow + stick + rotateCross);\n  fragColor = vec4(min(sum, 1.));\n}\n","name":"Buf A","description":"","type":"buffer"},{"inputs":[],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float ratio = iResolution.x/iResolution.y;\n    uv.x *= ratio;\n    uv -= vec2(0.5*ratio, 0.5);\n    uv /= vec2(abs(sin(iTime)) * 0.2 + 0.7);\n    uv += vec2(0.5*ratio, 0.5);\n    float dis = abs(distance(vec2(0.5*ratio, 0.5), uv));\n    float r = smoothstep(.4 , .40001, dis);\n    float dis2 = abs(distance(vec2(0.6*ratio, 0.6), uv));\n    float r2 = smoothstep(.4 , .40001, dis2);\n    float result = (1. -r) - (1. -r2);\n    fragColor = vec4(result);\n}\n","name":"Buf B","description":"","type":"buffer"}]}