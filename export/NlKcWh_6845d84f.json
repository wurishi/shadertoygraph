{"ver":"0.1","info":{"id":"NlKcWh","date":"1661383264","viewed":94,"name":"Doodle Aug 19","username":"scry","description":"Torus Stuff","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/////////////////////////////////////////////////////////\n#define time iTime*0.1\n#define pi acos(-1.)\n#define deg pi/180.\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvec3 cpos(void) {\n    vec3 c = vec3(0.,2.,-2.);\n    return c;\n}\n\nmat4 eye(void) {\n    vec3 c = cpos();\n    vec3 l = vec3(0.);\n    vec3 f = normalize(l-c);\n    vec3 r = normalize(cross(vec3(0.,1.,0.),f));\n    vec3 u = cross(f,r);\n    return mat4(r.x,r.y,r.z,0.,\n                u.x,u.y,u.z,0.,\n                f.x,f.y,f.z,0.,\n                0.,0.,0.,1.);\n}\n\nfloat smin(float a, float b, float k) {\n    float h = a-b;\n    return 0.5*((a+b)-(sqrt(h*h+k)));\n}\n\nfloat smax(float a, float b, float k) {\n    float h = a-b;\n    return 0.5*((a+b)+(sqrt(h*h+k)));\n}\n\nvec3 sabs(vec3 p,float k) {\n    return sqrt(p*p+k);\n}\n\nfloat sdTorus(vec3 p, vec2 s) {\n    return length(vec2(length(p.xz)-s.x,p.y))-s.y;\n}\n\nfloat wp(vec3 p) {\n    float d = 1000.;\n    float s = 0.5;\n    p.y -= 1.;\n    vec3 pf = floor(p*0.1-0.5);\n    float ph = sin(pf.x*30.5)+sin(pf.z*90.5)+pf.x+pf.z;\n    p.xz = (fract(p.xz*0.1-0.5)-0.5)/0.1;\n    //p.xy *= r2d(time*20.);\n    //p.xz = abs(p.xz)-1.;\n    //p.xz = abs(p.xz)-1.;\n    for (int i=0;i<5;i++) {\n        p.xz *= r2d(deg*45.+time*1.+ph);\n        p.xy *= r2d(sin(deg*45.-time*0.2+ph*20.));\n        //p = abs(p)-sin(float(i)+time)*0.5;\n        d = smin(d,length(p)-s,s*s*0.3);\n        p.y -= s*1.5;\n        s *= 0.5;\n    }\n    s = 0.5;\n    for (int i=0;i<5;i++) {\n        p.xz *= r2d(deg*45.+time*0.2+ph*20.);\n        p.xy *= r2d(deg*45.-time*0.1-ph*10.);\n        p = sabs(p,0.02)-sin(float(i)+time*10.1+ph*10.)*0.5;\n        d = smin(d,length(p)-s,s*2.);\n        p.y -= s*1.5;\n        s *= 0.5;\n    }\n    d *= 0.85;\n    //d = smax(-d,(op.y-1.),1.);\n    //p = op;\n    //d = min(d,sdTorus(p,vec2(10.,2.)));\n    //d = smin(d,op.y-2.,0.2);\n    //d = smin(d,op.y-4.,0.1);\n    return d;\n}\n\nfloat tfield(vec3 p, float s, float t) {\n    //float d = 10000.;\n    float ps = 1.;\n    vec2 fp = floor(p.xz*s-0.5);\n    p.xz = (fract(p.xz*s-0.5)-0.5)/s;\n    p.xy *= r2d(t+fp.y+fp.x);\n    return (sdTorus(p,vec2(0.2,0.01)/s));\n}\n\nvec4 map(vec3 p) {\n    vec3 o = p;\n    p = (eye()*vec4(p,1.)).xyz;\n    p += cpos();\n    float d = p.y+0.;\n    p.y -= 0.;\n    float ps = 1.;\n    vec2 fp = floor(p.xz-0.5);\n    float s = 1.;\n    for (int i=0;i<10;i++) {\n        p.xz *= r2d(deg*45.+time*0.1);\n        d = smin(d,tfield(p,s,time+s+float(i)),0.001/s);\n        //p.y += 0.2;\n        p.xz *= r2d(deg*14.+time*0.1);\n        d = smax(d,-tfield(p,s+0.5,time+s),0.001/s);\n        //p.y -= 0.2;\n        //s += sin(time*20.)*.5+0.5;\n    }\n    //d = smin(d,op.y-2.,0.2);\n    //d = smin(d,op.y-4.,0.1);\n    \n    return vec4(p,d);\n}\n\nvec2 RM(vec3 ro, vec3 rd) {\n    float dO = 0.;\n    float ii = 0.;\n    for (int i=0;i<193;i++) {\n        vec3 p = ro+rd*dO;\n        float dS = map(p).w;\n        dO += dS;\n        ii += 0.01;\n        if (dO > 1000. || dS < 0.001) {break;}\n    }\n    return vec2(dO,ii);\n}\n\nvec3 calcNorm(vec3 p) {\n    vec2 h = vec2(0.001,0.);\n    return normalize(vec3(\n        map(p-h.xyy).w-map(p+h.xyy).w,\n        map(p-h.yxy).w-map(p+h.yxy).w,\n        map(p-h.yyx).w-map(p+h.yyx).w\n    ));\n}\n\nvec3 sh(vec3 p, vec3 n, vec3 rd, vec3 l) {\n    l += cpos();\n    l = (inverse(eye())*vec4(l,1.)).xyz;\n    vec3 ld = normalize(l-p);\n    vec2 d = RM(p-n*0.003,ld);\n    float s = 1.;\n    if (length(l-p) > d.x) {\n        s = 0.;\n    }\n    float dif = clamp(dot(ld,-n),0.,1.);\n    float k = 0.5;\n    float a = 5.;\n    vec3 r = reflect(ld,-n);\n    vec3 v = rd;\n    float sp = clamp(k*pow(dot(r,v),a),0.,1.);\n    return vec3(s,dif,sp);\n}\n\nvec3 colo(vec3 p, vec3 n, vec3 ro, vec3 rd, vec2 d) {\n    vec3 col = clamp(1.-d.xxx*0.1,0.,1.);\n    vec3 sky = vec3(0.2,0.2,0.4);\n    vec3 es = exp(-0.001*d.xxx);\n    vec3 spos = vec3(25.);\n    vec3 ssh = sh(p,n,rd,spos);\n    col *= 0.1;\n    col += (ssh.x*ssh.y+ssh.z*(ssh.x+0.1));\n    col = (col*(es))+((1.-es)*sky);\n    //col = sky*(1.-d.x*0.01);\n    col = clamp(col,0.,1.);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec2 d = RM(ro,rd);\n    vec3 p = ro+rd*d.x;\n    vec3 n = calcNorm(p);\n    col = colo(p,n,ro,rd,d);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}