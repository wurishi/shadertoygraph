{"ver":"0.1","info":{"id":"MftfzH","date":"1732734666","viewed":30,"name":"POM demo culegamer","username":"CuleGamer","description":"3d pom effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const uint pomSteps = 32u;\n\nfloat height(vec2 p)\n{\n    float h = 0.;\n    p *= 0.2;\n    for(float i = 1.; i < 32.; i++)\n    {\n        h += (cos(p.x * i + i * i) + sin(p.y * i + i * i)) / sqrt(i);\n    }\n    return h * h * 0.1;\n}\n\nvec3 normal(vec2 p)\n{\n    float d = 0.03;\n    float h = height(p);\n    float dx = (height(p + vec2(d, 0.)) - h) / d;\n    float dy = (height(p + vec2(0., d)) - h) / d;\n    vec3 t = normalize(vec3(d, dx, 0.));\n    vec3 bt = normalize(vec3(0., dy, d));\n    return normalize(cross(t, bt));\n}\n\nmat2 rot(float t)\n{\n    float c = cos(t);\n    float s = sin(t);\n    return mat2(c, -s, s, c);\n}\nvoid mainImage(out vec4 O, in vec2 I)\n{\n    vec2 uv = (2. * I - iResolution.xy) / iResolution.y;\n    vec2 uvMouse = (2. * iMouse.xy - iResolution.xy) / iResolution.y;\n    vec3 camPos = vec3(0., 3., iTime);\n    vec3 camVec = normalize(vec3(uv, 1.5));\n    if(iMouse.xy != vec2(0.))\n    {\n        camVec.zx *= rot(uvMouse.x);\n        camVec.zy *= rot(uvMouse.y);\n    }\n    vec2 uvFloor = (camPos.y * camVec.xz / camVec.y) - camPos.xz;\n    vec3 sunDir = vec3(cos(iTime), 1., sin(iTime));\n    float d = 0.;\n    float stepSize = 1. / float(pomSteps);\n    for(uint i; i < pomSteps; i++)\n    {\n        if(d > height(uvFloor))\n        {\n            break;\n        }\n        uvFloor += stepSize * camVec.xz;\n        d += stepSize;\n    }\n    float floorDist = distance(-vec3(uvFloor.x, 0., uvFloor.y), camPos);\n    vec3 floorCol = vec3(0.9, 0.6, 0.6);\n    floorCol *= 0.5 + height(uvFloor);\n    floorCol *= (0.5 * dot(normal(uvFloor), -sunDir) + 0.5);\n    vec3 skyCol = vec3(0.2, 0.3, 0.8);\n    vec3 col = mix(floorCol, skyCol, 0.5 * sign(camVec.y) + 0.5);\n    col = mix(col, skyCol, min(0.0005 * floorDist * floorDist, 1.));\n    O = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}