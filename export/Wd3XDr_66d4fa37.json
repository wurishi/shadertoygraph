{"ver":"0.1","info":{"id":"Wd3XDr","date":"1571755007","viewed":1267,"name":"Inverse Barrel Distortion","username":"reinder","description":"The inverse of a Barrel Distortion.\n\nI couldn't find this function online, so I derived it myself. A surprisingly complex formula ;-)","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["distortion","barrel","inverse"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Inverse Barrel Distortion. Created by Reinder Nijhoff 2019\n// The MIT License\n// @reindernijhoff\n//\n// https://www.shadertoy.com/view/Wd3XDr\n//\n// The inverse of a Barrel Distortion. \n//\n// I couldn't find this function online, so I derived it myself. \n// A surprisingly complex formula ;-).\n//\n// ```\n// uv -= .5;\n//    \n// float b = distortion;\n// float l = length(uv);\n//    \n// float x0 = pow(9.*b*b*l + sqrt(3.) * sqrt(27.*b*b*b*b*l*l + 4.*b*b*b), 1./3.);\n// float x = x0 / (pow(2., 1./3.) * pow(3., 2./3.) * b) - pow(2./3., 1./3.) / x0;\n//    \n// return uv * (x / l) + .5;\n// ```\n//\n\n#define BARREL_DISTORTION 1.5\n\nvec2 barrelDistortion(vec2 uv, float distortion) {    \n    uv -= .5;\n    uv *= 1. + dot(uv, uv) * distortion;\n    return uv + .5;\n}\n\nvec2 inverseBarrelDistortion(vec2 uv, float distortion) {    \n    uv -= .5;\n    \n    float b = distortion;\n    float l = length(uv);\n    \n    float x0 = pow(9.*b*b*l + sqrt(3.) * sqrt(27.*b*b*b*b*l*l + 4.*b*b*b), 1./3.);\n    float x = x0 / (pow(2., 1./3.) * pow(3., 2./3.) * b) - pow(2./3., 1./3.) / x0;\n       \n    return uv * (x / l) + .5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 uvDist = barrelDistortion(uv, BARREL_DISTORTION);\n    vec2 uvInv  = inverseBarrelDistortion(uvDist, BARREL_DISTORTION);\n        \n    vec3 col = texture(iChannel0, fract(iTime*.5) > .5 ? uvDist : uvInv).rgb;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}