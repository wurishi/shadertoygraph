{"ver":"0.1","info":{"id":"XstBR8","date":"1524074432","viewed":847,"name":"A beautiful fractal loop","username":"Pr0fed","description":"First attempts on getting the nature of fractals. Here is just one from https://www.shadertoy.com/view/lslGWr and tweaked to have loop and nice colors and else..","likes":32,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fractal base used taken from https://www.shadertoy.com/view/lslGWr and tweaked.\n// 407 chars made by: Aaron1924\n// 383 left with removed define\nfloat f(vec3 p) \n{\n\tfloat a, l, t, i;\n\n\tfor (;++i < 32.;) \n    {\n\t\tfloat m = dot(p, p);\n\t\tp = abs(p) / m + .4 * vec2(cos(iTime/4.), sin(iTime/4.)).xxy - .5;\n        \n\t\tfloat w = exp(-.2*i);\n\t\ta += w * exp(-9.5 * pow(abs(m - l), 2.3));\n\t\tt += w, l = m;\n\t}\n    \n\treturn max(0., 5. * a / t - .7);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 R = iResolution, p = (vec3(fragCoord, 0) - .5 * R) / R.y;\n    fragColor = pow(vec4(f(p)),vec4(1,2,3,0)) * pow(vec4(f(p*2.5)),vec4(3,2,1,0));\n}","name":"Image","description":"","type":"image"}]}