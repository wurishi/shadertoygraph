{"ver":"0.1","info":{"id":"wdsXW2","date":"1552323183","viewed":87,"name":"Mandelbrot Test 10.03.","username":"Wheyerstrass","description":"Mandelbrot Shader Test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy; // [0, 1]\n    \n    float outerBoundary = 2.;\n    float maxsteps = 1500.;\n    \n    // start parameter\n    vec2 c0 = vec2(\n        mix(-2., 1., uv.x),\n        mix(-1., 1., uv.y)\n    ); \n    \n    vec2 c = c0;\n    \n    vec2 z = vec2(0.);\n    \n    float steps;\n    for(steps = 0.; steps <= maxsteps; steps++) {\n\t\tz = vec2(z.x*z.x-z.y*z.y, 2.*z.x*z.y) + c;\n        if (length(z) > outerBoundary) {\n        \tbreak;   \n        }\n    }\n\n    float ss = 1.0;\n    if (steps < maxsteps) {\n        float log_zn = log(z.x*z.x + z.y*z.y) / outerBoundary;\n        float nu = log(log_zn / log(outerBoundary)) / log(outerBoundary);\n        ss = (steps + 1. - nu) / maxsteps;\n    }\n    \n    vec3 color = texture(iChannel0, vec2(ss, mod(0.0005*iTime, 1.0))).xyz;\n    \n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}