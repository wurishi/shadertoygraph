{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float noise2D(vec2 uv)\n{\n\tuv = fract(uv)*1e3;\n\tvec2 f = fract(uv);\n\tuv = floor(uv);\n\tfloat v = uv.x+uv.y*1e3;\n\tvec4 r = vec4(v, v+1., v+1e3, v+1e3+1.);\n\tr = fract(1e5*sin(r*1e-2));\n\tf = f*f*(3.0-2.0*f);\n\treturn (mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y));\t\n}\n\nfloat fractal(vec2 p) {\n\tfloat v = 0.5;\n\tv += noise2D(p*16.); v*=.5;\n\tv += noise2D(p*8.); v*=.5;\n\tv += noise2D(p*4.); v*=.5;\n\tv += noise2D(p*2.); v*=.5;\n\tv += noise2D(p*1.); v*=.5;\n\treturn v;\n}\n\nvec3 func( vec2  p) {\n\tp = p*.1+.5;\n\tvec3 c = vec3(.0, .0, .1);\n\tvec2 d = vec2(iTime*.0001, 0.);\n\tc = mix(c, vec3(.8, .1, .1), pow(fractal(p*.20-d), 3.)*2.);\n\tc = mix(c, vec3(.9, .6, .6), pow(fractal(p.y*p*.10+d)*1.3, 3.));\n\tc = mix(c, vec3(1., 1., 1.), pow(fractal(p.y*p*.05+d*2.)*1.2, 1.5));\n\treturn c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = 2.*(fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n\tfloat d = length(p);\n\tp *= (acos(d) - 1.57079632)/d;\n\tfragColor = vec4(func(p)*max(1.-d*d*d, 0.), 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lssGRH","date":"1362963847","viewed":751,"name":"Red Planet","username":"Trisomie21","description":"3 layers of Perlin noise","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["2d","perlinnoise"],"hasliked":0,"parentid":"","parentname":""}}