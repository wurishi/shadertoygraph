{"ver":"0.1","info":{"id":"X3SGWV","date":"1708868323","viewed":57,"name":"Gamma adjustment","username":"vegardno","description":"Analytic color blending needs to take gamma into account to produce the right result.\nWe can also dither in a 2x2 pattern to blend colors.\nBy toggling between these two blending methods we can tune the gamma values until they match perceptually.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blending","gamma","dithering","ega"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I found this value provide the most accurate blending\n// on my monitor, typically higher values will tend to favour\n// stability in the brighter colors while lower values will\n// tend to favour the darker ones. You can also provide\n// separate values for each R/G/B channel which can optimize\n// for blending of certain color combinations.\nconst vec3 gamma = vec3(2.5);\n\nivec3 cols[16] = ivec3[](\n    ivec3(0x00, 0x00, 0x00),\n    ivec3(0x00, 0x00, 0xAA),\n    ivec3(0x00, 0xAA, 0x00),\n    ivec3(0x00, 0xAA, 0xAA),\n    ivec3(0xAA, 0x00, 0x00),\n    ivec3(0xAA, 0x00, 0xAA),\n    ivec3(0xAA, 0x55, 0x00),\n    ivec3(0xAA, 0xAA, 0xAA),\n    ivec3(0x55, 0x55, 0x55),\n    ivec3(0x55, 0x55, 0xFF),\n    ivec3(0x55, 0xFF, 0x55),\n    ivec3(0x55, 0xFF, 0xFF),\n    ivec3(0xFF, 0x55, 0x55),\n    ivec3(0xFF, 0x55, 0xFF),\n    ivec3(0xFF, 0xFF, 0x55),\n    ivec3(0xFF, 0xFF, 0xFF)\n);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 iFragCoord = ivec2(fragCoord);\n    vec2 uv = fragCoord / iResolution.xy;\n    ivec2 iuv = ivec2(16. * uv);\n    vec3 col0 = pow(vec3(cols[iuv.x]) / vec3(255.), gamma);\n    vec3 col1 = pow(vec3(cols[iuv.y]) / vec3(255.), gamma);\n\n    vec3 col_mix = mix(col0, col1, .5);\n    vec3 col_dither = (iFragCoord.x + iFragCoord.y) % 2 == 0 ? col0 : col1;\n\n    float t = clamp(.5 + 1. * sin(radians(360.) * iTime), 0., 1.);\n    vec3 col = mix(col_mix, col_dither, t);\n\n    col = pow(col, 1. / gamma);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}