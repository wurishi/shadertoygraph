{"ver":"0.1","info":{"id":"mdtXRs","date":"1680288085","viewed":121,"name":"ChatGPT generated shader 1","username":"Marius4560","description":"I asked it what it is supposed to be. It responded:\nThe code I provided generates a 2D noise pattern using a Perlin noise algorithm. It is created by sampling a random value at each point in space and then interpolating those values to produce a gradient.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float mix(float x, float y, float a)\n{\n    return x * (1.0 - a) + y * a;\n}\n\nvec2 mix(vec2 x, vec2 y, float a)\n{\n    return x * (1.0 - a) + y * a;\n}\n\nvec3 mix(vec3 x, vec3 y, float a)\n{\n    return x * (1.0 - a) + y * a;\n}\n\nvec4 mix(vec4 x, vec4 y, float a)\n{\n    return x * (1.0 - a) + y * a;\n}\n\nfloat rand(vec2 co)\n{\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec3 p)\n{\n    vec3 i = floor(p);\n    vec3 f = fract(p);\n\n    f = f * f * (3.0 - 2.0 * f);\n    float n = i.x + i.y * 57.0 + i.z * 113.0;\n\n    float n0 = mix(mix(mix(rand(vec2(n,         n)), \n                             rand(vec2(n + 1.0, n)), f.x),\n                         mix(rand(vec2(n,         n + 1.0)), \n                             rand(vec2(n + 1.0, n + 1.0)), f.x), f.y),\n                   mix(mix(rand(vec2(n,         n)), \n                             rand(vec2(n + 1.0, n)), f.x),\n                         mix(rand(vec2(n,         n + 1.0)), \n                             rand(vec2(n + 1.0, n + 1.0)), f.x), f.y), f.z);\n\n    float n1 = mix(mix(mix(rand(vec2(n,         n)), \n                             rand(vec2(n + 1.0, n)), f.x),\n                         mix(rand(vec2(n,         n + 1.0)), \n                             rand(vec2(n + 1.0, n + 1.0)), f.x), f.y),\n                   mix(mix(rand(vec2(n,         n)), \n                             rand(vec2(n + 1.0, n)), f.x),\n                         mix(rand(vec2(n,         n + 1.0)), \n                             rand(vec2(n + 1.0, n + 1.0)), f.x), f.y), f.z - 1.0);\n\n    return mix(n0, n1, f.z);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;\n    float noiseValue = noise(vec3(p * 10.0, iTime * 0.1));\n    fragColor = vec4(noiseValue);\n}\n","name":"Image","description":"","type":"image"}]}