{"ver":"0.1","info":{"id":"43BSzD","date":"1710298167","viewed":74,"name":"mario-madness-OldTvShader","username":"jonnycat","description":"shader link: https://github.com/Dewott2501/Mario-Madness/blob/main/source/OldTVShader.hx ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["coolshit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"        #define id vec2(0.,1.)\n        #define k 1103515245U\n        #define PI 3.141592653\n        #define TAU PI * 2.\n        #define bitmap iChannel0\n        #define flixel_texture2D texture \n        #define gl_FragColor fragColor \n\n        //prng func, from https://stackoverflow.com/a/52207531\n        vec3 hash(uvec3 x) {\n            x = ((x>>8U)^x.yzx)*k;\n            x = ((x>>8U)^x.yzx)*k;\n            x = ((x>>8U)^x.yzx)*k;         \n            return vec3(x)*(1.0/float(0xffffffffU));\n        }\n\n        void mainImage( out vec4 fragColor, in vec2 fragCoord )\n        {\n            bool flag = false;\n            bool flag2 = false;\n\n            vec2 uv = fragCoord/iResolution.xy;\n            \n            //picture offset\n            float time = 2.0;\n            float timeMod = 2.5;\n            float repeatTime = 1.25;\n            float lineSize = 50.0;\n            float offsetMul = 0.01;\n            float updateRate2 = 50.0;\n            float uvyMul = 100.0;\n            \n            float realSize = lineSize / iResolution.y / 2.0;\n            float position = mod(iTime, timeMod) / time;\n            float position2 = 99.;\n            if (iTime > repeatTime) {\n                position2 = mod(iTime - repeatTime, timeMod) / time;\n            }\n            if (!(uv.y - position > realSize || uv.y - position < -realSize)) {\n                uv.x -= hash(uvec3(0., uv.y * uvyMul, iTime * updateRate2)).x * offsetMul;\n                flag = true;\n            } else if (position2 != 99.) {\n                if (!(uv.y - position2 > realSize || uv.y - position2 < -realSize)) {\n                    uv.x -= hash(uvec3(0., uv.y * uvyMul, iTime * updateRate2)).x * offsetMul;\n                    flag = true;\n                }\n            }\n            \n            vec4 col = flixel_texture2D(bitmap, uv);\n            \n            //blur, from https://www.shadertoy.com/view/Xltfzj\n            float directions = 16.0;\n            float quality = 3.0;\n            float size = 4.0;\n\n            vec2 radius = size / iResolution.xy;\n            for(float d = 0.0; d < TAU; d += TAU / directions) {\n                for(float i= 1.0 / quality; i <= 1.0; i += 1.0 / quality) {\n                    col += flixel_texture2D(bitmap, uv + vec2(cos(d), sin(d)) * radius * i);\t\n                }\n            }\n            col /= quality * directions - 14.0;\n            \n            //for the black on the left\n            if (uv.x < 0.) {\n                col = id.xxxy;\n                flag = false;\n                flag2 = true;\n            }\n            \n            //randomized black shit and sploches\n            float updateRate4 = 100.0;\n            float uvyMul3 = 100.0;\n            float cutoff2 = 0.92;\n            float valMul2 = 0.007;\n            \n            float val2 = hash(uvec3(uv.y * uvyMul3, 0., iTime * updateRate4)).x;\n            if (val2 > cutoff2) {\n                float adjVal2 = (val2 - cutoff2) * valMul2 * (1. / (1. - cutoff2));\n                if (uv.x < adjVal2) {\n                    col = id.xxxy;\n                    flag2 = true;\n                } else {\n                    flag = true;\n                }\n            }\n\n            //static\n            if (!flag2) {\n                float updateRate = 100.0;\n                float mixPercent = 0.05; \n                col = mix(col, vec4(hash(uvec3(uv * iResolution.xy, iTime * updateRate)).rrr, 1.), mixPercent);\n            }\n            \n            //white sploches\n            float updateRate3 = 75.0;\n            float uvyMul2 = 400.0;\n            float uvxMul = 20.0;\n            float cutoff = 0.95;\n            float valMul = 0.7;\n            float falloffMul = 0.7;\n            \n            if (flag) {\n                float val = hash(uvec3(uv.x * uvxMul, uv.y * uvyMul2, iTime * updateRate3)).x;\n                if (val > cutoff) {\n                    float offset = hash(uvec3(uv.y * uvyMul2, uv.x * uvxMul, iTime * updateRate3)).x;\n                    float adjVal = (val - cutoff) * valMul * (1. / (1. - cutoff));\n                    adjVal -= abs((uv.x * uvxMul - (floor(uv.x * uvxMul) + offset)) * falloffMul);\n                    adjVal = clamp(adjVal, 0., 1.);\n                    col = vec4(mix(col.rgb, id.yyy, adjVal), col.a);\n                }\n            }\n            \n            gl_FragColor = col;\n        }","name":"Image","description":"","type":"image"}]}