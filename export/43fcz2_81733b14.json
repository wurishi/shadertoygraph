{"ver":"0.1","info":{"id":"43fcz2","date":"1726436700","viewed":24,"name":"СмиЩЩная игра про кружок ","username":"donerfornothing","description":"ok so there is a sphere and it moves around i guess","likes":0,"published":1,"flags":48,"usePreview":0,"tags":["minigame"],"hasliked":0,"parentid":"XXsyDn","parentname":"circle goes brbrbrbrbrb"},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//для круга\nfloat make_circle(in vec2 position, in vec2 cur_pixel)\n{\n    float R = 0.2f;\n    float d = length(position - cur_pixel);\n    \n    return abs(d - R); // модуль шоб было милое колечко, а не этот ваш полнотелый увалень\n}\n\n//для платформы\nfloat make_platform(in vec2 position, in vec2 cur_pixel, in vec2 size)\n{\n   vec2 D = cur_pixel - position;\n   vec2 k = abs(D) - size;\n   return length(max(k,0.0)) + min(max(k.x,k.y),0.0);\n}\n\n// для переливашек\nvec3 acid_trip(float time)\n{\n    vec3 g = vec3(0.278, 0.668, 0.718);\n    vec3 dg = vec3(0.638, 0.308, 0.468);\n    vec3 w = vec3(-0.332, 1.058, 1.668);\n    vec3 p = vec3(0.198, -0.032, 1.138);\n    \n    return g + dg * cos(6.28318 * (w * time + p));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n     // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.0f * fragCoord - iResolution.xy) / iResolution.y;\n\n    float coins = texelFetch(iChannel1, ivec2(3, 0), 0).x;\n    \n    vec2 circle_pos = vec2(texelFetch(iChannel1, ivec2(0, 0), 0).x, -0.49f);\n    vec2 platform_pos = vec2(texelFetch(iChannel1, ivec2(2,0), 0).xy);\n    vec2 platform_size = vec2(0.4, 0.05);\n    \n    vec3 circle_color = acid_trip(iTime / 4.f);\n    vec3 platform_color = acid_trip(platform_pos.y / 8.f + iTime / 6.f);\n    float value = sin(iTime * 5.f) * coins / 40.f;\n    vec3 col = vec3(value, value, value);\n    \n    //создаем объедки\n    float circle = make_circle(circle_pos, uv);\n    float platform = make_platform(platform_pos, uv, platform_size);\n    \n   \n    // Output to screen\n    if(circle < 0.02f)\n    {\n        fragColor = vec4(circle_color, 1.0);\n    }\n    else if (platform < 0.f)\n    {\n        fragColor = vec4(platform_color, 1.0);\n    }\n    else\n    {\n        fragColor = vec4(col,1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void save_at_ivec(in ivec2 desired_pos, in vec4 data, inout vec4 fragColor, in ivec2 current_pos)\n{\n    fragColor = (desired_pos.x==current_pos.x && desired_pos.y==current_pos.y ) ? data : fragColor;\n}\n\nfloat hash_pos(in float a)\n{\n    return 0.3 * sin(a*7.0 / 3.0 + iTime / 5.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //целочисленные координаты для сохранения\n    ivec2 int_fc = ivec2(fragCoord);\n    \n    \n    vec4 p_velocity =  texelFetch(iChannel1, ivec2(1, 0), 0);\n    p_velocity.x = p_velocity.z = 0.0f;\n    if (p_velocity.y < 0.01)\n    {\n        p_velocity.y = 0.01;\n    }\n    \n    //vars\n    vec4 position = texelFetch(iChannel1, ivec2(0, 0), 0);\n    vec4 platform = texelFetch(iChannel1, ivec2(2, 0), 0);\n    vec4 points = texelFetch(iChannel1, ivec2(3, 0), 0);\n    \n    // consts\n    vec4 velocity = vec4(0.03, 0.f, 0.f, 0.f);\n\n    const int a_key = 65;\n    const int d_key = 68;\n    const float move_speed = 0.05f;\n    \n    \n    \n    \n    // движение платформы и телепорт, если она слишком низко\n    platform -= p_velocity;\n    if(platform.y <= -1.5)\n    {\n        points.x += 1.f;\n        platform.y = 1.5;\n        platform.x = position.x + hash_pos(iTime);\n        if (p_velocity.y < 0.04)\n        {\n            p_velocity.y += 0.002;\n        }\n    }\n    \n    \n    //считываем ввод\n    if(texelFetch(iChannel0, ivec2(d_key, 0), 0).x != 0.f)\n    {\n        position += velocity;\n    }\n    else if (texelFetch(iChannel0, ivec2(a_key, 0), 0).x != 0.f)\n    {\n        position -= velocity;\n    }\n    \n    //коллизия через костыли\n    if (platform.y >= position.y && platform.y - position.y <= 0.1f && abs(platform.x - position.x) <= 0.6)\n    {\n        position = vec4(0.0, -0.49, 0.0, 0.0);\n        p_velocity.y = 0.01;\n        platform.y = -1.5;\n        points.x = 0.f;\n    }\n    \n    //пути наружу нет\n    if(position.x >= 2.f)\n    {\n        position.x = -1.99;\n    }\n    else if(position.x <= -2.f)\n    {\n        position.x = 1.99;\n    }\n\n\n    save_at_ivec(ivec2(0, 0), position, fragColor, int_fc);\n    save_at_ivec(ivec2(2, 0), platform, fragColor, int_fc);\n    save_at_ivec(ivec2(1, 0), p_velocity, fragColor, int_fc);\n    save_at_ivec(ivec2(3, 0), points, fragColor, int_fc);\n}","name":"Buffer A","description":"","type":"buffer"}]}