{"ver":"0.1","info":{"id":"cdjXWm","date":"1670404420","viewed":63,"name":"Happy Birthday Pema","username":"Three","description":"cake","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cake"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\n// If you want to easily generate SDFs for any text (a-z, A-Z, 0-9 and spaces only), use this Javascript code.\n\nvar widths = {\n\t\"a\": 4, \"b\": 4, \"c\": 4, \"d\": 4,\n\t\"e\": 4, \"f\": 4, \"g\": 4, \"h\": 4,\n\t\"i\": 0, \"j\": 4, \"k\": 4, \"l\": 0,\n\t\"m\": 8, \"n\": 4, \"o\": 4, \"p\": 4,\n\t\"q\": 4, \"r\": 4, \"s\": 4, \"t\": 4,\n\t\"u\": 4, \"v\": 4, \"w\": 8, \"x\": 4,\n\t\"y\": 4, \"z\": 4, \"A\": 4, \"B\": 4,\n\t\"C\": 4, \"D\": 4, \"E\": 4, \"F\": 4,\n\t\"G\": 4, \"H\": 4, \"I\": 4, \"J\": 4,\n\t\"K\": 4, \"L\": 4, \"M\": 8, \"N\": 4,\n\t\"O\": 4, \"P\": 4, \"Q\": 4, \"R\": 4,\n\t\"S\": 4, \"T\": 4, \"U\": 4, \"V\": 4,\n\t\"W\": 8, \"X\": 4, \"Y\": 4, \"Z\": 4,\n\t\"0\": 4, \"1\": 4, \"2\": 4, \"3\": 4,\n\t\"4\": 4, \"5\": 4, \"6\": 4, \"7\": 4,\n\t\"8\": 4, \"9\": 4\n};\n\nfunction measureText(text) {\n\tvar length = 0;\n\tfor (var i = 0; i < text.length; i++) {\n\t\tif (text[i] == \" \") {\n\t\t\tlength += 3;\n\t\t} else {\n\t\t\tif (text[i] in widths) {\n\t\t\t\tlength += widths[text[i]];\n\t\t\t\tif (i != text.length - 1) {\n\t\t\t\t\tlength += 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Bad character '\" + text[i] + \"' at index \" + i + \" in string \\\"\" + text + \"\\\"\");\n\t\t\t}\n\t\t}\n\t}\n\treturn length;\n}\n\nfunction generateSDF(text) {\n\tvar length = measureText(text);\n\tvar lines = [];\n\tlines.push(\"// SDF of the scene.\");\n\tlines.push(\"float z_offset = float(\" + (length / 2) + \");\");\n\tlines.push(\"float sdf(in vec3 pos) {\");\n\tlines.push(\"\tfloat t = 1000.0;\");\n\tlines.push(\"\tvec3 offset = vec3(\" + (-length / 2) + \", 4, \" + Math.ceil(-length * 0.65) + \");\");\n\tvar x = 0;\n\tfor (var i = 0; i < text.length; i++) {\n\t\tif (text[i] == ' ') {\n\t\t\tx += 3;\n\t\t} else {\n\t\t\tif (text[i] in widths) {\n\t\t\t\tlines.push(\"\tt = min(t, sdf_\" + text[i] + \"(pos, vec3(\" + x + \", 0, 0) + offset));\");\n\t\t\t\tx += widths[text[i]];\n\t\t\t\tif (i != text.length - 1) {\n\t\t\t\t\tx += 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error(\"Bad character '\" + text[i] + \"' at index \" + i + \" in string \\\"\" + text + \"\\\"\");\n\t\t\t}\n\t\t}\n\t}\n\tlines.push(\"\treturn t;\");\n\tlines.push(\"}\");\n\treturn lines.join('\\n');\n}\n\n*/\n\n#define THICKNESS 0.5\n\n// **************************************************************** //\n// **************************************************************** //\n// **** PRIMITIVES                                             **** //\n// **************************************************************** //\n// **************************************************************** //\n\n// Constant torus definition.\nconst vec2 torus = vec2(2.0, THICKNESS);\n\n// SDF of a torus.\nfloat sdf_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return length(q) - torus.y;\n}\n\n// SDF of the top half of a torus.\nfloat sdf_half0_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, -pos.y);\n}\n\n// SDF of the bottom half of a torus.\nfloat sdf_half1_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, pos.y);\n}\n\n// SDF of the left half of a torus.\nfloat sdf_half2_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, pos.x);\n}\n\n// SDF of the right half of a torus.\nfloat sdf_half3_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, -pos.x);\n}\n\n// SDF of the top-left quarter of a torus.\nfloat sdf_quarter0_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, max(-pos.y, pos.x));\n}\n\n// SDF of the top-right quarter of a torus.\nfloat sdf_quarter1_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, max(-pos.y, -pos.x));\n}\n\n// SDF of the bottom-left quarter of a torus.\nfloat sdf_quarter2_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, max(pos.y, pos.x));\n}\n\n// SDF of the bottom-right quarter of a torus.\nfloat sdf_quarter3_torus(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    vec2 q = vec2(length(pos.xy) - torus.x, pos.z);\n    return max(length(q) - torus.y, max(pos.y, -pos.x));\n}\n\n// SDF of a capsule.\nfloat sdf_capsule(in vec3 pos, in vec3 a, in vec3 b) {\n    vec3 pa = pos - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba , ba), 0.0, 1.0);\n    return length(pa - ba * h) - THICKNESS;\n}\n\n// SDF of a sphere.\nfloat sdf_sphere(in vec3 pos, in vec3 offset) {\n    return length(pos - offset) - THICKNESS;\n}\n\n// **************************************************************** //\n// **************************************************************** //\n// **** LOWERCASE                                              **** //\n// **************************************************************** //\n// **************************************************************** //\n\n// SDF for the letter A.\nfloat sdf_a(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter B.\nfloat sdf_b(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter C.\nfloat sdf_c(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -4, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter D.\nfloat sdf_d(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter E.\nfloat sdf_e(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4.5, 0), vec3(4, -4.5, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4.5, 0), vec3(4, -4, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter F.\nfloat sdf_f(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(2, -2, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_quarter0_torus(pos, vec3(4, -2, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4.5, 0), vec3(4, -4.5, 0)));\n    return t;\n}\n\n// SDF for the letter G.\nfloat sdf_g(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_quarter3_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter H.\nfloat sdf_h(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter I.\nfloat sdf_i(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -0.5, 0)));\n    return t;\n}\n\n// SDF for the letter J.\nfloat sdf_j(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -0.5, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -6, 0)));\n    return t;\n}\n\n// SDF for the letter K.\nfloat sdf_k(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -6, 0), vec3(4, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -6, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter L.\nfloat sdf_l(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// SDF for the letter M.\nfloat sdf_m(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half0_torus(pos, vec3(6, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(8, -4, 0), vec3(8, -8, 0)));\n    \n    return t;\n}\n\n// SDF for the letter N.\nfloat sdf_n(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter O.\nfloat sdf_o(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter P.\nfloat sdf_p(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// SDF for the letter Q.\nfloat sdf_q(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter R.\nfloat sdf_r(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -4, 0)));\n    return t;\n}\n\n// SDF for the letter S.\nfloat sdf_s(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -4, 0)));\n    return t;\n}\n\n// SDF for the letter T.\nfloat sdf_t(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(2, 0, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(4, -2, 0)));\n    return t;\n}\n\n// SDF for the letter U.\nfloat sdf_u(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    return t;\n}\n\n// SDF for the letter V.\nfloat sdf_v(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter W.\nfloat sdf_w(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(6, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(8, -2, 0), vec3(6, -8, 0)));\n    return t;\n}\n\n// SDF for the letter X.\nfloat sdf_x(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// SDF for the letter Y.\nfloat sdf_y(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half1_torus(pos, vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -4, 0)));\n    t = min(t, sdf_quarter3_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter Z.\nfloat sdf_z(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(4, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// **************************************************************** //\n// **************************************************************** //\n// **** UPPERCASE                                              **** //\n// **************************************************************** //\n// **************************************************************** //\n\n// SDF for the letter A.\nfloat sdf_A(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(4, -4, 0)));\n    return t;\n}\n\n// SDF for the letter B.\nfloat sdf_B(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(2, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -6, 0)));\n    return t;\n}\n\n// SDF for the letter C.\nfloat sdf_C(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -2, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter D.\nfloat sdf_D(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_quarter1_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_quarter3_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(2, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter E.\nfloat sdf_E(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_quarter0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_quarter2_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(4, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, 0, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, -8, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter F.\nfloat sdf_F(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_quarter0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(4, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, 0, 0), vec3(4, 0, 0)));\n    return t;\n}\n\n// SDF for the letter G.\nfloat sdf_G(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -4, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, -4, 0), vec3(4, -4, 0)));\n    return t;\n}\n\n// SDF for the letter H.\nfloat sdf_H(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(4, -4, 0)));\n    return t;\n}\n\n// SDF for the letter I.\nfloat sdf_I(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, 0, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter J.\nfloat sdf_J(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -6, 0)));\n    return t;\n}\n\n// SDF for the letter K.\nfloat sdf_K(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(2, -4, 0)));\n    t = min(t, sdf_quarter1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_quarter3_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -6, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter L.\nfloat sdf_L(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_quarter2_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, -8, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter M.\nfloat sdf_M(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half0_torus(pos, vec3(6, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(8, -2, 0), vec3(8, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// SDF for the letter N.\nfloat sdf_N(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter O.\nfloat sdf_O(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter P.\nfloat sdf_P(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(2, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(2, -4, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -2, 0)));\n    return t;\n}\n\n// SDF for the letter Q.\nfloat sdf_Q(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, -6, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter R.\nfloat sdf_R(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(2, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(2, -4, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_quarter1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -6, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// SDF for the letter S.\nfloat sdf_S(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_quarter2_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_quarter1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -2, 0)));\n    return t;\n}\n\n// SDF for the letter T.\nfloat sdf_T(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, 0, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter U.\nfloat sdf_U(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the letter V.\nfloat sdf_V(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter W.\nfloat sdf_W(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(6, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(8, 0, 0), vec3(8, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -6, 0)));\n    return t;\n}\n\n// SDF for the letter X.\nfloat sdf_X(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// SDF for the letter Y.\nfloat sdf_Y(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, -4, 0), vec3(2, -8, 0)));\n    return t;\n}\n\n// SDF for the letter Z.\nfloat sdf_Z(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(0, -8, 0)));\n    return t;\n}\n\n// **************************************************************** //\n// **************************************************************** //\n// **** NUMBERS                                                **** //\n// **************************************************************** //\n// **************************************************************** //\n\n// SDF for the number 0.\nfloat sdf_0(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -2, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -6, 0)));\n    return t;\n}\n\n// SDF for the number 1.\nfloat sdf_1(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, 0, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_quarter0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -2, 0)));\n    return t;\n}\n\n// SDF for the number 2.\nfloat sdf_2(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, -2, 0)));\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_sphere(pos, vec3(0, -2, 0)));\n    return t;\n}\n\n// SDF for the number 3.\nfloat sdf_3(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(2, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -6, 0)));\n    return t;\n}\n\n// SDF for the number 4.\nfloat sdf_4(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(4, 0, 0), vec3(4, -8, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -2, 0)));\n    t = min(t, sdf_capsule(pos, vec3(2, -4, 0), vec3(4, -4, 0)));\n    t = min(t, sdf_quarter2_torus(pos, vec3(2, -2, 0)));\n    return t;\n}\n\n// SDF for the number 5.\nfloat sdf_5(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(0, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -4, 0), vec3(2, -4, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(2, -8, 0)));\n    t = min(t, sdf_half3_torus(pos, vec3(2, -6, 0)));\n    return t;\n}\n\n// SDF for the number 6.\nfloat sdf_6(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_half0_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_half1_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_half0_torus(pos, vec3(2, -6, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, -2, 0), vec3(0, -6, 0)));\n    t = min(t, sdf_sphere(pos, vec3(4, -2, 0)));\n    return t;\n}\n\n// SDF for the number 7.\nfloat sdf_7(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_capsule(pos, vec3(0, -8, 0), vec3(4, 0, 0)));\n    t = min(t, sdf_capsule(pos, vec3(0, 0, 0), vec3(4, 0, 0)));\n    return t;\n}\n\n// SDF for the number 8.\nfloat sdf_8(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_torus(pos, vec3(2, -2, 0)));\n    t = min(t, sdf_torus(pos, vec3(2, -6, 0)));\n    return t;\n}\n\n// SDF for the number 9.\nfloat sdf_9(in vec3 pos, in vec3 offset) {\n    pos -= offset;\n    float t = 1000.0;\n    t = min(t, sdf_torus(pos, vec3(2, -2, 0)));\n\tt = min(t, sdf_capsule(pos, vec3(4, -2, 0), vec3(4, -8, 0)));\n    return t;\n}\n\n// **************************************************************** //\n// **************************************************************** //\n// **** SCENE                                                  **** //\n// **************************************************************** //\n// **************************************************************** //\n\n// SDF of the scene.\nfloat z_offset = float(24);\nfloat sdf(in vec3 pos) {\n\tfloat t = 1000.0;\n\tvec3 offset = vec3(-24, 4, 0);\n\tt = min(t, sdf_P(pos, vec3(4, 0, 0) + offset));\n\tt = min(t, sdf_e(pos, vec3(10, 0, 0) + offset));\n\tt = min(t, sdf_m(pos, vec3(16, 0, 0) + offset));\n\tt = min(t, sdf_a(pos, vec3(26, 0, 0) + offset));\n\treturn t;\n}\n\nfloat sdf2(in vec3 pos)\n{\n\tfloat t = 1000.;\n\tvec3 offset = vec3(-24, 4, 0);\n\tt = min(t, sdf_H(pos, vec3(-14, 0, 0) + offset));\n\tt = min(t, sdf_a(pos, vec3(-7.75, 0, 0) + offset));\n\tt = min(t, sdf_p(pos, vec3(-1.5, 0, 0) + offset));\n\tt = min(t, sdf_p(pos, vec3(4, 0, 0) + offset));\n\tt = min(t, sdf_y(pos, vec3(10, 0, 0) + offset));\n\n\tt = min(t, sdf_B(pos, vec3(20, 0, 0) + offset));\n\tt = min(t, sdf_i(pos, vec3(26.5, 0, 0) + offset));\n\tt = min(t, sdf_r(pos, vec3(29.5, 0, 0) + offset));\n\tt = min(t, sdf_t(pos, vec3(35.25, 0, 0) + offset));\n\tt = min(t, sdf_h(pos, vec3(41.5, 0, 0) + offset));\n\tt = min(t, sdf_d(pos, vec3(48.5, 0, 0) + offset));\n\tt = min(t, sdf_a(pos, vec3(55, 0, 0) + offset));\n\tt = min(t, sdf_y(pos, vec3(62, 0, 0) + offset));\n\treturn t;\n}\n\nfloat sphere(vec3 p, vec3 c, float r)\n{\n    return length(p - c) - r;\n}\n\nvec2 objectUnion(vec2 ob1, vec2 ob2)\n{\n    return (ob1.x < ob2.x) ? ob1 : ob2;\n}\n\nvec3 waveDeform(vec3 p)\n{\n    p.y = p.y + (sin(p.x * 15.) * cos(p.z * 15.) * .05) * (p.y > 0. ? 0. : 1.);\n    return p;\n}\n\nfloat length2( vec2 p )\n{\n\treturn sqrt( p.x*p.x + p.y*p.y );\n}\n\nfloat length6( vec2 p )\n{\n\tp = p*p*p; p = p*p;\n\treturn pow( p.x + p.y, 1.0/6.0 );\n}\n\nfloat length8( vec2 p )\n{\n\tp = p*p; p = p*p; p = p*p;\n\treturn pow( p.x + p.y, 1.0/8.0 );\n}\n\nfloat sdCappedCylinder( vec3 p, vec2 h )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat sdRoundCappedCylinder( vec3 p, vec2 h, float r )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - h;\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0)) - r;\n}\n\nmat2 rot(float angle)\n{\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}\n\n\nvec2 mapog(vec3 p) {\n    vec2 d = objectUnion(vec2(sdCappedCylinder(p - vec3(0, -.7, -3), vec2(1, 0.3)), 1),\n                         vec2(sdCappedCylinder(p - vec3(0, -.05, -3), vec2(1, 0.3)), 1)); \n    d = objectUnion(d, vec2(sdRoundCappedCylinder(waveDeform(p - vec3(0, 0, -3)), vec2(1, 0.25), 0.05), 2));\n    d = objectUnion(d, vec2(sdRoundCappedCylinder(p - vec3(0, -.45, -3), vec2(0.95, 0.015), 0.05), 3));\n    \n    vec3 b = (p/.03 + vec3(-2,-22,35)).xzy;\n  \n    b.x = b.x;\n    \n    b.y = -b.y;\n    \n    b += vec3(2,-64,10);\n  \n    float a = sdf(b)*.03;\n   \n    d = objectUnion(d, vec2(a,1.0)); \n   \n    d = objectUnion(d, vec2(sdCappedCylinder(p - vec3(0, 0.5, -3), vec2(0.03, 0.25)), 5));\n   \n    d = objectUnion(d, vec2(p.y + 1., 4));                            // horizontal plane at y = -1\n    return d;\n}\n\nvec2 map(vec3 p)\n{\n\t//p.z -= 3.0;\n\tvec2 d = vec2(sdCappedCylinder(p - vec3(0, -0.7, -3), vec2(1, 0.3)), 1);\n\td = objectUnion(d, vec2(sdCappedCylinder(p - vec3(0, -0.05, -3), vec2(1, 0.3)), 1));\n\td = objectUnion(\n\t\td, vec2(sdRoundCappedCylinder(waveDeform(p - vec3(0, 0, -3)), vec2(1, 0.25), 0.05), 2));\n\td = objectUnion(\n\t\td, vec2(sdRoundCappedCylinder(p - vec3(0, -0.45, -3), vec2(0.95, 0.015), 0.05), 3));\n\tvec3 b = (p / 0.03 + vec3(-2, -22, 35)).xzy;\n\tb.x = b.x + 3.0;\n\tb.y = -b.y + 3.0;\n\tb += vec3(-2, -65, 10);\n\tfloat a = sdf(b) * 0.03;\n\td = objectUnion(d, vec2(a, 6));\n\t\n\tb += vec3(0, -10, 0);\n\tb /= 0.5;\n\tfloat c = sdf2(b) * 0.03 * 0.5;\n\td = objectUnion(d, vec2(c, 6));\n\t//d = objectUnion(d, vec2(sdCappedCylinder(p - vec3(0, 0.5, -3), vec2(0.03, 0.25)), 5));\n\td = objectUnion(d, vec2(p.y + 1., 4));\n\treturn d;\n}\n\n//\n// Calculate the normal by taking the central differences on the distance field.\n//\nvec3 calcNormal(in vec3 p) {\n    vec2 e = vec2(1.0, -1.0) * 0.0005;\n    return normalize(\n        e.xyy * map(p + e.xyy).x +\n        e.yyx * map(p + e.yyx).x +\n        e.yxy * map(p + e.yxy).x +\n        e.xxx * map(p + e.xxx).x);\n}\n\nfloat calcShadow(in vec3 ro, in vec3 rd, float maxDist, float k){\n    float res = 1.;\n    float t = 0.1;\n    \n\tfor (int i = 0; i < 32; i++)\n    {\n        vec2 h = map(ro + rd * t);\n        \n        if (h.x < 0.01)\n            break;\n    \t\n        res = min(res, k*h.x/t);\n        t += clamp(h.x, 0.02, 0.1);\n    }\n    \n    return res;\n}\n\nmat3 setCamera( in vec3 ro, in vec3 ta, float cr )\n{\n\tvec3 cw = normalize(ta-ro);\n\tvec3 cp = vec3(sin(cr), cos(cr),0.0);\n\tvec3 cu = normalize( cross(cw,cp) );\n\tvec3 cv = normalize( cross(cu,cw) );\n    return mat3( cu, cv, cw );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 ro = vec3(0, 5, 1);                           // ray origin\n\n    vec2 q = (fragCoord.xy - .5 * iResolution.xy ) / iResolution.y;\n    \n    vec3 ta = vec3(0, 3.5, 0 );\n        // camera-to-world transformation\n    mat3 ca = setCamera( ro, ta, 0.0 );\n    // ray direction\n    vec3 rd = ca * normalize( vec3(q.xy,2.0) );\n    \n    // March the distance field until a surface is hit.\n    vec2 h; \n    float t = 1.;\n    int i;\n    for (i = 0; i < 256; i++) {\n        h = map(ro + rd * t);\n        t += h.x;\n        if (h.x < 0.01) break;\n    }\n\tfloat AO = float(i)/256.0;\n\tAO = pow(AO,0.5);\n    if (h.x < 0.01) {\n        vec3 p = ro + rd * t;\n        vec3 normal = calcNormal(p);\n        vec3 light = vec3(0, 2, 0);\n        \n        float shadow = calcShadow(p, normalize(light - p), length(light - p), 6.);\n        shadow = 1.0;\n        // Calculate diffuse lighting by taking the dot product of \n        // the light direction (light-p) and the normal.\n        float dif = clamp(dot(normal, normalize(light - p)), 0., 1.);\n\t\t\n        // Multiply by light intensity (5) and divide by the square\n        // of the distance to the light.\n        //dif *= 5. / dot(light - p, light - p);\n        \n        vec3 objectColor;\n        if (h.y == 1.)\n            objectColor = vec3(1., 1., 1);\n        else if (h.y == 2.)\n            objectColor = vec3(1., 0., 0.);\n        else if (h.y == 3.)\n            objectColor = vec3(1., 1., 1.);\n        else if (h.y == 4.)\n        {\n            vec2 uv = floor(3. * p.xz);\n            objectColor = vec3(0.976, 1, 0.647);\n        }\n        else if (h.y == 5.)\n        {\n            vec3 stripeColor = vec3(0.929, 0.568, 0.129);\n         \tvec2 uv = floor(15. * p.xz);\n            float factor = mod(uv.x, 2.);\n            objectColor = factor > 0.5 ? stripeColor : vec3(1);\n        }\n        else\n            objectColor = vec3(1);\n            \n        objectColor *= shadow;\n        \n        fragColor = vec4(pow(dif, 0.4545) * (1.0-AO) * objectColor, 1);     // Gamma correction\n    } else {\n        fragColor = vec4(0.588, 0.588, 0.588, 1);\n    }\n}","name":"Image","description":"","type":"image"}]}