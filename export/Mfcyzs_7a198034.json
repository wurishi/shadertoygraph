{"ver":"0.1","info":{"id":"Mfcyzs","date":"1731018962","viewed":111,"name":"SDF Waves","username":"alecmolloy","description":"SDF Waves","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["2d","perlin","optimization","flownoise"],"hasliked":0,"parentid":"MtcGRl","parentname":"Fast pseudo-3d Perlin noise"},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 GetGradient(vec2 intPos, float t) {\n    float rand = fract(sin(dot(intPos, vec2(12.9898, 78.233))) * 43758.5453);;\n    float angle = 6.283185 * rand + 4.0 * t * rand;\n    return vec2(cos(angle), sin(angle));\n}\n\n\nfloat Pseudo3dNoise(vec3 pos) {\n    vec2 i = floor(pos.xy);\n    vec2 f = pos.xy - i;\n    vec2 blend = f * f * (3.0 - 2.0 * f);\n    float noiseVal = \n        mix(\n            mix(\n                dot(GetGradient(i + vec2(0, 0), pos.z), f - vec2(0, 0)),\n                dot(GetGradient(i + vec2(1, 0), pos.z), f - vec2(1, 0)),\n                blend.x),\n            mix(\n                dot(GetGradient(i + vec2(0, 1), pos.z), f - vec2(0, 1)),\n                dot(GetGradient(i + vec2(1, 1), pos.z), f - vec2(1, 1)),\n                blend.x),\n        blend.y\n    );\n\nreturn noiseVal;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.y;\n    \n    const float SMOOTHSTEP_WIDTH = 0.015;\n    const float BAND_WIDTH = 0.25;\n    const float LOWER_BAND_START = 0.5 - BAND_WIDTH;\n    const float UPPER_BAND_START = 0.5 + BAND_WIDTH;\n    const float NUM_BANDS = 10.0;\n    const float SIZE = 1.0;\n\n    float t = iTime * 0.0125;\n\n    float noiseVal = 0.5 + 0.5 * Pseudo3dNoise(vec3(uv * SIZE, t));\n\n    float waves = 1.0 - \n      smoothstep(LOWER_BAND_START - SMOOTHSTEP_WIDTH, LOWER_BAND_START + SMOOTHSTEP_WIDTH, fract((abs(noiseVal) * NUM_BANDS) + t)) *\n      smoothstep(UPPER_BAND_START + SMOOTHSTEP_WIDTH, UPPER_BAND_START - SMOOTHSTEP_WIDTH, fract((abs(noiseVal) * NUM_BANDS) + t));\n\n\n    fragColor.rgb = vec3(waves);\n}\n","name":"Image","description":"","type":"image"}]}