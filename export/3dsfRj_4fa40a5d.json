{"ver":"0.1","info":{"id":"3dsfRj","date":"1588620976","viewed":862,"name":"ShATI - Bouquet","username":"Flopine","description":"My former school named ATI decided to launch an everyday challenge from 4th may to 24th may, here is the first subject: bouquet :) ","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","flower","everydaychallenge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Shader made for Everyday ATI challenge\n\n#define PI 3.141592\n#define TAU (2.*PI)\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nvoid mo (inout vec2 p , vec2 d)\n{\n    p = abs(p)-d;\n    if (p.y>p.x) p = p.yx;\n}\n\nvoid moda(inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = atan(p.y,p.x);\n    float l = length(p);\n    a = mod(a,per)-per*0.5;\n    p = vec2(cos(a),sin(a))*l;\n}\n\nfloat cyl (vec3 p, float r, float h)\n{return max(length(p.xy)-r,abs(p.z)-h);}\n\nfloat plane (vec3 p, vec3 n)\n{return dot(p,normalize(n));}\n\nfloat stack (vec3 p)\n{\n    p.y += 4.;\n    p.xz *= rot(sin(p.y+iTime));\n    moda(p.xz,6.);\n    p.x -= 0.15+abs(p.y)*0.5 ;\n    return cyl(p.xzy, 0.1+abs(p.y+5.5)*0.03, 3.);\n}\n\nfloat st, flower;\nvec3 new_p;\nfloat SDF (vec3 p)\n{ \n    mo(p.xz, vec2(1.5));\n    p.xz*=rot(p.y*0.5);\n\n    vec3 pp = p+0.3;\n    st = stack(pp);\n\n    mo(p.xz,vec2(.5));    \n    p.yz *= rot(sin(length(p)-iTime)*2.);    \n    mo(p.yz, vec2(0.9));\n    mo(p.xy, vec2(0.5));\n    new_p = p;\n    flower = plane(p, vec3(.2,.2,0.2));\n\n    return min(st,flower);\n}\n\nvec3 getcam (vec3 ro, vec3 tar, vec2 uv)\n{\n    vec3 f = normalize(tar-ro);\n    vec3 l = normalize(cross(vec3(0.,1.,0.),f));\n    vec3 u = normalize(cross(f,l));\n    return normalize(f + uv.x*l + uv.y*u);\n}\n\nvec3 getnorm (vec3 p)\n{\n    vec2 eps = vec2(0.001,0.);\n    return normalize(vec3(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx))));\n}\n\nvec3 palette (float t, vec3 a, vec3 b, vec3 c, vec3 d)\n{return a+b*cos(TAU*(c*t+d));}\n\nvec3 background (vec2 uv)\n{\n    float mask = smoothstep(0.15,0.1,fract(abs(abs(uv.x-uv.y)-0.2)-0.1));\n    return (mask >= 0.99) ? vec3(0.8,0.6,0.8) : vec3(0.9);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(2.5,3.,-6.),\n        rd = getcam(ro, vec3(0.,-1.5,0.), uv),\n        p = ro,\n        col = background(uv);\n\n    float shad,d = 0.;\n    bool hit = false;\n\n    for (float i=0.; i<64.; i++)\n    {\n        d = SDF(p);\n        if (d<0.01)\n        {\n            hit = true;\n            shad = i/64.;\n            break;\n        }\n        p+=d*rd*0.4;\n    }\n\n    if (hit)\n    {\n        if (d == flower) col = palette(length(p),vec3(0.5), vec3(0.4),vec3(0.3), vec3(0.7,0.5,0.3));\n        if (d == st) col = vec3(0.5,1.,new_p.y);\n        vec3 n = getnorm(p);\n        col *= smoothstep(0.15,0.25,pow(abs(n.z), 0.8));\n    }\n\n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}