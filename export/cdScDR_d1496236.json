{"ver":"0.1","info":{"id":"cdScDR","date":"1699203516","viewed":45,"name":"Into the squares","username":"panoramicdream","description":"Zooming into an array of squares","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 normalized_coord = (fragCoord * 2.0 - iResolution.xy)/iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n\n    float x = normalized_coord.x;\n    float y = normalized_coord.y;\n    float d = length(normalized_coord);\n    float angOff;\n    if(sign(x)>0.0 && sign(y)>0.0){ \n        angOff = 0.0;\n    } else if (sign(x)> 0.0 && sign(y) < 0.0) {\n        angOff = 2.*PI;\n    } else if(sign(x)<0.0){\n        angOff = PI;\n    }\n    \n    float ang = atan(y/x) + angOff;\n\n    float fracTime = fract(iTime*0.05);\n    float g = 1. - fracTime;\n    float n = 5.;\n    for (float i = 1.0;i<(n+1.);i++) {\n        g = fract(g + 1./(n));\n        float gi = 1. - g;\n\n        float ang = ang + iTime*0.1;\n        float x1 = d*cos(ang)+0.1;\n        float y1 = d*sin(ang);\n\n        float f1 = cos(50.*x1*g + 20.*2.*PI*fracTime) + sin(50.*y1*g+20.*2.*PI*fracTime);\n        \n        //vec3 colm = vec3(smoothstep(-0.05,0.0,f1) * (1. - smoothstep(0.0,0.05,f1)));\n        vec3 colm = vec3(abs(0.1/f1 * gi));\n        col += gi*(colm)*(0.5 + 0.5*cos(iTime+vec3(0,2,4) * 1.*gi));\n    }\n\n    col = col  ;\n    fragColor = vec4(col,1.0); \n}\n","name":"Image","description":"","type":"image"}]}