{"ver":"0.1","info":{"id":"ssVfD3","date":"1658949648","viewed":131,"name":"Funky Clouds","username":"terkel","description":"Found on https://electricdreams.ust.hk/","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["clouds","pink"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\n    precision highp float;\n#endif\n\nvec4 rgb(float r, float g, float b) {\n    return vec4(r / 255.0, g / 255.0, b / 255.0, 1.0);\n}\n#define NUM_OCTAVES 5\n\n//helper function for random\nfloat rand(vec2 n) {\n    return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);\n}\n\n//helper function for noise\nfloat noise(vec2 p) {\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n    float res = mix(\n    mix(rand(ip), rand(ip+vec2(1.0, 0.0)), u.x), mix(rand(ip+vec2(0.0, 1.0)), rand(ip+vec2(1.0, 1.0)), u.x), u.y);\n    return res*res;\n}\n\n//helper function for FBM\nfloat fbm(vec2 x) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100);\n    // Rotate to reduce axial bias\n    \n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n        v += a * noise(x);\n        x = rot * x * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //colours 1\n    \n    vec4 color1 = rgb(232.0, 211.0, 255.0);\n    vec4 color2 = rgb(220.0, 193.0, 197.0);\n    vec4 color3 = rgb(239.0, 147.0, 252.0);\n    vec4 color4 = rgb(0.0, 221.0, 255.0);\n    float grain = mix(-0.1, 0.2, rand(uv * 100.0));\n    \n    //make movement for fbm\n    \n    float scrollposition = iTime * 0.2;\n    \n    vec2 mouse = iMouse.xy / iResolution.xy;\n    \n    vec2 movement = vec2(mouse.x * 0.2 * mouse.y, mouse.y * -0.2 * mouse.x);\n    movement += vec2(0, scrollposition * 0.0002);\n    float f = fbm(uv + movement);\n    f *= 2.3;\n    f += mouse.x * 0.9;\n    f += mouse.y * -0.8;\n    f += scrollposition;// * -0.0004;\n    f = fract(f);\n    f += grain;\n    float mixer = smoothstep(0.05, 0.14, f) - smoothstep(0.7, 0.95, f);\n    float mixer2 = smoothstep(0.02, 0.1, f) - smoothstep(0.0, 0.9, f);\n    float mixer3 = smoothstep(0.04, 0.08, f) - smoothstep(0.1, 0.2, f);\n    vec4 color = mix(\n    mix(color1, color2, mixer3), mix(color3, color4, mixer2), mixer);\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}