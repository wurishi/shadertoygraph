{"ver":"0.1","info":{"id":"M3yGzc","date":"1718067109","viewed":30,"name":"A dead star","username":"vexeo","description":"The title","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 center, float radius, float blur) {\n      float dist = length(uv-center);\n      return smoothstep(radius, radius - blur, dist);\n}\n\nfloat Moon(vec2 uv, vec2 pos, float size) {\n    // translation\n    uv -= pos;\n    // scaling\n    uv /= size;\n    \n    float mask = Circle(uv, vec2(0.), 0.38, abs(sin(iTime)*0.35)+0.3);\n    mask -= Circle(uv, vec2(0., 0.), 0.2, abs(sin(iTime)*0.05)+0.04);\n    return mask;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n     vec2 uv = fragCoord/iResolution.xy;\n     uv -= 0.5;\n     uv.x *= iResolution.x/iResolution.y;\n    \n    float t = iTime;\n    float mask = Moon(uv, vec2(sin(t/2.)*0.5,cos(t/2.)*0.1), 1.0);\n    // color\n    vec3 col = mask * vec3(abs(cos(t/2.)),abs(sin(t*2.)),abs(sin(t/2.)));\n    \n   \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}