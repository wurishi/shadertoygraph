{"ver":"0.1","info":{"id":"dltyzN","date":"1698965603","viewed":57,"name":"interference tiling","username":"OscarSaharoy","description":"The pattern comes from sine waves in different directions interfering, it looks nicer than I thought it would!","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["fourier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sines( in vec3 p ) {\n    return (\n        sin(dot(vec3(0,1,1),p)) +\n        sin(dot(vec3(.866,-.5,1.),p)) +\n        sin(dot(vec3(-0.866,-0.5,1),p)) +\n        sin(dot(vec3(1,0,1),p)) +\n        sin(dot(vec3(-.5,.866,1),p)) +\n        sin(dot(vec3(-.5,-.866,1),p)) +\n        6.\n    ) / 12.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec3 uvt = vec3(fragCoord / iResolution.x * 80., iTime);\n    uvt.xy += vec2(1, 1.5) * uvt.z;\n    vec3 col = pow(vec3(sines(uvt)),vec3(4,5,3));\n    fragColor = vec4(3. * col,1.0);\n}","name":"Image","description":"","type":"image"}]}