{"ver":"0.1","info":{"id":"XldcDn","date":"1532254485","viewed":528,"name":"Moebius Spiral 1","username":"emh","description":"Moebius Spiral 1","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["spiral","moebius"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define M_PI atan(1.0) * 4.0\n\n// uniform float time;\n// uniform vec2 mouse;\n// uniform vec2 resolution;\n#define time iTime\n#define resolution iResolution.xy\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\n#define nfloor(v) vec2(ivec2(v))\n#define nfract(v) ( v - nfloor(v) )\n\n/*\nvec2 nfract(vec2 co) {\n\tfloat x = co.x;\n\tfloat y = co.y;\n\treturn vec2(x >= 0.0 ? x - floor(x) : x - ceil(x), y >= 0.0 ? y - floor(y) : y - ceil(y));\n}\n\nvec2 nfloor(vec2 co) {\n\tfloat x = co.x;\n\tfloat y = co.y;\n\treturn vec2(x >= 0.0 ? floor(x) : ceil(x), y >= 0.0 ? floor(y) : ceil(y));\n}\n*/\n\nfloat sinc(float t) {\n\treturn (sin(t) + 1.0) / 2.0;\n}\n\nfloat cosc(float t) {\n\treturn (cos(t) + 1.0) / 2.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n\tfloat t;\n\tt = time + 8.0;\n\tvec2 r = vec2(resolution.y);\n\t\n\tvec2 no = (fragCoord.xy - .5 * resolution) / resolution.y + .5;\n    // vec2 no = fragCoord.xy / resolution;\n\tvec2 o = vec2(0.0);\n\t// vec2 aspect = vec2(1.0, r.y / r.x);\n    vec2 aspect = vec2(1.0, 1.0) / 1.8;\n\tfloat sz = 0.0;\n\tfloat t2 = t;\n\tvec2 idx = vec2(0.0);\n\tvec2 boxOffset = vec2(0.0);\n\t\n\tconst int maxi = 6;\n\tfor (int i = 0; i <= maxi; i++) {\n\t\tfloat sc = exp2(float(i));\n\t\tfloat sc2 = pow(2.0, float(maxi - i + 1));\n\t\tfloat j = float(i);\n\t\tfloat maxj = float(maxi);\n\t\t\n\t\tbool gotOne = false;\n\t\t\n\t\tfor (int dx = -1; dx <= 1; dx++) {\n\t\t\tfor (int dy = -1; dy <= 1; dy++) {\n\t\t\n\t\t\t\t// vec2 to2o = nfloor(no * sc) + vec2(float(1), float(1));\n\t\t\t\tvec2 delta = vec2(float(dx), float(dy));\n\t\t\t\tvec2 to2 = nfloor(no * sc) + delta;\n\t\t\t\t\n\t\t\t\tfloat tslow = t  / 100.0;\n\t\t\t\t\n\t\t\t\tvec2 to3 = to2;\n\t\t\t\tfloat rndMove = mix(rand(to3 + floor(tslow)), rand(to3 + floor(tslow) + 1.0), fract(tslow));\n\t\t\t\tfloat rnd = rand(to2);\n\t\t\t\t\n\t\t\t\tfloat tsc = .1 * t * j / sc + rnd * 1000.0;\n\t\t\t\tvec2 bo = (i > 0 ? vec2(cosc(tsc), sinc(tsc)) : vec2(0.0));\n\t\t\t\t\n\t\t\t\tvec2 to = nfract((no + bo) * sc);\n\t\t\t\tvec2 tbo = nfract(bo * sc);\n\t\t\t\t\n\t\t\t\t// big on top\n\t\t\t\tbool check1 = length((o - 0.5) * aspect) < 0.15;\n\t\t\t\t// small on top\n\t\t\t\tbool check2 = length((to - 0.5) * aspect) > 0.15;\n\n\t\t\t\tfloat prob = 0.0;\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tprob = 1.0;\n\t\t\t\t} else if (i >= 3) {\n\t\t\t\t\tprob = 0.5 / j;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbool check = rnd < prob && sz > 1.0 && length(to - 0.5) < sinc(t * 2.5 + 1000.0 * rnd) ? check2 : check1;\n\t\t\t\t// check = check1;\n\t\t\t\tbool cutCircle = false;\n\t\t\t\tif (check) {\n\t\t\t\t\tif ((dx == 0 && dy == 0)) {\n\t\t\t\t\t\tcutCircle = false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcutCircle = length((tbo - 0.5) * aspect) <= 0.51;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t// bool visible = rand(to2 + vec2(0.254, 0.2342543)) < prob;\n\t\t\t\tbool visible = !cutCircle;\n\t\t\t\tif (!visible) continue;\n\t\t\t\t\n\t\t\t\to = check ? o : to;\n\t\t\t\tsz = check ? sz : float(i + 1);\n\t\t\t\tt2 = check ? t2 : t * (rnd + 0.5) + rnd * 1000.0;\n\t\t\t\tidx = check ? idx : to2;\n\t\t\t\tboxOffset = check ? boxOffset : to;\n\t\t\t\tgotOne = gotOne || check;\n\t\t\t}\n\t\t}\n\t\tif (gotOne) {\n\t\t\t// break;\n\t\t}\n\t}\n\to = o * r - r / 2.0;\n\tt = t2;\n\t\n\t// bool cutCircle = length(boxOffset)\n\tvec2 or = o / r;\n\t\n\tif (sz > 6.0) {\n\t\tt = 8.0;\n\t}\n\t\t\n\to = vec2(length(o) / r.y - .3, atan(o.y,o.x) + fract(-t / 100.0) * 2.0 * M_PI);\n\t\n\tvec2 o2 = o;\n\t\n\tfloat width = 20.0;\n\tfloat scale = 20.0;\n\tfloat offset = 0.02;\n\t\n\to.x += 0.3;\n\t\n\tfloat y0to1 = (o.y + M_PI) / (2.0 * M_PI); // + floor(o2.x * scale);\n\to.x = (fract(o.x * scale + y0to1) + 1.0 + y0to1) / width;\n\to.x = (o.x - 0.05 * 1.5) / 0.2;\n\to.x -= (o.y + M_PI) / (8.0 * M_PI);\n\to.y *= M_PI / 2.0 + offset;\n\to.y = sin(M_PI * o.y);\n\t\n\tfloat dir = mod(floor(o2.x * scale), 2.0) == 0.0 ? 1.0 : -1.0;\n\tdir *= floor(o2.x * scale / 2.0);\n\tvec4 s = 0.08 * cos(1.5*vec4(0,1,2,3) + dir * t + o.y + cos(o.y) * cos(8.0));\n\t// s = sz > 6.0 ? vec4(1.0) : s;\n\tvec4 e = s.yzwx;\n\tvec4 f = max(o.x-s,e-o.x);\n\tvec4 color = o.x > -0.1 ? dot(clamp(f*r.y,0.,1.), 80.*(s-e)) * (s-.1) + (e - o.x) : vec4(0.0);\n\t\n\tfloat cutoff = 0.15;\n\tfragColor = o2.x + y0to1 / scale < cutoff ? color : vec4(1.0);\n\t\n\tvec2 ot = boxOffset;\n\t// gl_FragColor = vec4(ot.x, ot.y, 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}