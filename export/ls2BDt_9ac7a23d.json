{"ver":"0.1","info":{"id":"ls2BDt","date":"1502895059","viewed":749,"name":"Texture curvature (Laplacian)","username":"FabriceNeyret2","description":"Curvature considering different radius (correct way with textureLod is very close).\nNote that this can be well approximated by MIPmap(0)-MIPmap(r).  (commented version)\n\nStrangely, the different textures react very differenly. Try also videos.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["texture","curvature","laplacian","differential"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// inspired by https://www.shadertoy.com/view/4sjfDt\n\n\n/**/ //--- using 3x3 filter\n\n#define T(U)    length( texture( iChannel0, U ).rgb )\n#define V(U,d)  T( U/R ) - T( U/R + d* vec2( k%3 -1 , k/3 -1)/iChannelResolution[0].xy )\n\nvoid mainImage(out vec4 O, vec2 U) {\n    vec2 R =  iResolution.xy;\n    for (int k = 0; k < 9; k++)\n        O += vec4 ( V(U,4.),V(U,2.),V(U,1.),0 );\n    O = .5 + 100. * O /8. ; } //  O *= T(U/R)   // variant\n\n/**/\n\n\n\n\n/**  //--- using MIP-map\n\n#define T(U,d)  length( textureLod( iChannel0, U , log2(d)).rgb )\n#define V(U,d)  (T( U/R ,1.) - T( U/R, d*2.)) \n\n#define mainImage( O, U )                 \\\n    vec2 R =  iResolution.xy;             \\\n    O = vec4 ( V(U,4.),V(U,2.),V(U,1.),0 );  \\\n\tO = .5 + 50. * O  ; //  O *= T(U/R,1.)   // variant\n\n/**/","name":"Image","description":"","type":"image"}]}