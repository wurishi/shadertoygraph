{"ver":"0.1","info":{"id":"tsByzc","date":"1587059047","viewed":149,"name":"Dithered gradient B&W","username":"dmmn","description":"Dithered gradient noise","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["noise","gradient","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( uvec2 x )\n{\n    uvec2 q = 1103515245U * ( (x>>1U) ^ (x.yx   ) );\n    uint  n = 1103515245U * ( (q.x  ) ^ (q.y>>3U) );\n    return float(n) * (1.0/float(0xffffffffU));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float noiseValue = hash(uvec2(fragCoord.xy));\n\n    float value = step(noiseValue + (uv.x - .5), .5);\n\n    // Output to screen\n    fragColor = vec4(vec3(value),1.0);\n}","name":"Image","description":"","type":"image"}]}