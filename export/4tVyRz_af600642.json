{"ver":"0.1","info":{"id":"4tVyRz","date":"1534872555","viewed":540,"name":"Sine Grid Warping","username":"coler706","description":"Discovered While Playing around in Desmos","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["2d","grid","sine","hexagons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float q(vec2 pos,float angle){\n    return pos.x*cos(angle)+pos.y*sin(angle);\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float pi=atan(1.0,0.0)*2.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec2 pos=(uv-vec2(0.5))*iResolution.xy/iResolution.y*100.0;\n    float s=iTime/5.0;\n    float angle=atan(pos.y,pos.x)+s/2.0;\n    pos=length(pos)*vec2(cos(angle),sin(angle));\n    float c=cos(q(pos,pi/3.0))+cos(q(pos,0.0))+cos(q(pos,s+pi/3.0))+cos(q(pos,s+0.0))+cos(q(pos,pi/3.0*2.0))+cos(q(pos,s+pi/3.0*2.0));\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+c+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col*(-c),1.0);\n}","name":"Image","description":"","type":"image"}]}