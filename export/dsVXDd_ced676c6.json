{"ver":"0.1","info":{"id":"dsVXDd","date":"1681826183","viewed":374,"name":"Dunnos: Cemetery of Spirits","username":"z0rg","description":"The dunnos are looking at you !","likes":41,"published":3,"flags":32,"usePreview":0,"tags":["2d","ghost","dunnos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy/iResolution.xy;\n  vec3 col = texture(iChannel0, uv).xyz;\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n// Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ \n// or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.\n// =========================================================================================================\n\nfloat _seed;\nfloat hash11(float seed)\n{\n  return fract(sin(seed*123.456)*123.456);\n}\nfloat rand()\n{\n  return hash11(_seed++);\n}\nmat2 r2d(float a)\n{\n  float c = cos(a), s= sin(a);\n   return mat2(c,-s,s,c);\n}\nfloat _sqr(vec2 uv, vec2 s)\n{\n  vec2 l = abs(uv)-s;\n  return max(l.x,l.y);\n}\n#define sat(a) clamp(a,0.,1.)\n// thx iq :)\nfloat _seg( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvec3 rdrpass(vec2 uv, vec3 col, float i)\n{\n  vec2 rep = vec2(.3,.7);\n  float id = floor((uv.x+rep.x*.5)/rep.x);\n  uv.x= mod(uv.x+rep.x*.5,rep.x)-rep.x*.5;\n  uv.x+=sin(id*30.+i)*.05;\n  uv.x+=sin(id+i+iTime+uv.y*4.)*.02;\n  uv.y+=sin(id*30.+i*10.+iTime)*.02;\n  float th = mix(0.07,0.04,sin(id*3.3+i*2.2)*.5+.5);\n  float shape = _seg(uv,\n    vec2(0.,0.),vec2(0.,.2))-th;\n    vec3 rgb = mix(vec3(1.),vec3(.1,.5,.7),\n      sat((shape+.1)*5.));\n  col = mix(col, rgb*sat(uv.y*5.), 1.-sat(shape*400.));\n//  col += sat(rgb)*.01;\n  vec2 peye = uv;\n  peye.x = abs(peye.x);\n  float d = mix(0.035,0.02,sin(id+i)*.5+.5);\n  float eyes = length(peye-vec2(d,0.2))-.01;\n  col = mix(col, vec3(0.), 1.-sat(eyes*400.));\n  return col;\n}\nvec3 rdr(vec2 uv)\n{\n  vec3 col = vec3(0.);\n\n  for (float i = 0.; i<22.;i++)\n  {\n    col = rdrpass(uv+vec2(0.1*i,.1*i-.9), col,i);\n  }\n\n\n\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = (fragCoord.xy-.5*iResolution.xy)\n   / iResolution.xx;\n   _seed= iTime+texture(iChannel0,uv).x;\n  vec3 col = rdr(uv*2.);\n  col+= rdr(uv+(vec2(rand(),rand())-.5)*.1)*.7;\n  if (iFrame != 0)\n  { \n      col = mix(col, \n      texture(iChannel1, fragCoord.xy/iResolution.xy).xyz, .9);\n  }\n  fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}