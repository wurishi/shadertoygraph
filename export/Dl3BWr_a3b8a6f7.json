{"ver":"0.1","info":{"id":"Dl3BWr","date":"1701114019","viewed":21,"name":"Raymarched rotating 3D-heart","username":"DingoDoggins","description":"Raymarched rotating 3D-heart","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float heartSDF(float x, float y) {\n  return sqrt(x*x + (2.0*y - sqrt(abs(x)))*(2.0*y - sqrt(abs(x)))) - 1.5;\n}\nstruct rayHit{\n    bool hit;\n    vec3 point;\n    vec3 normal;\n};\n\n\nfloat heart_3d(mat3 transform,float x,float y,float z){\n       \n       vec3 p=vec3(x,y,z)*transform;\n       p.y+=sin(iTime);\n     float h=0.3;\n    float d = heartSDF(p.x,p.y);\n    vec2 w = vec2( d, abs(p.z) - h );\n    \n    \n    \n    return min(max(w.x,w.y),0.0) + length(max(w,0.0));\n\n    \n    }\nmat3 rotateX(float theta){\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(1, 0, 0),\n        vec3(0, c, -s),\n        vec3(0, s, c)\n    );\n\n\n}\nmat3 rotateY(float theta){\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, 0, s),\n        vec3(0, 1, 0),\n        vec3(-s, 0, c)\n    );\n    }\nmat3 rotateZ(float theta){\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, -s, 0),\n        vec3(s, c, 0),\n        vec3(0, 0, 1)\n    );}\n\nfloat heart_3d(mat3 transform,vec3 pos){\n    return heart_3d(transform,pos.x,pos.y,pos.z);\n}\nfloat ballSDF(mat3 transform,vec3 pos){\n     vec3 p=pos*transform;\n    return -3.0 + length(p);\n\n}\nvec3 calcBallNormal(mat3 transform,vec3 p){\n    float eps=0.02;\n    float x = ballSDF(transform,p + vec3(eps, 0, 0)) - ballSDF(transform,p - vec3(eps, 0, 0));\n    float y = ballSDF(transform,p + vec3(0, eps, 0)) - ballSDF(transform,p - vec3(0, eps, 0));\n    float z = ballSDF(transform,p + vec3(0, 0, eps)) - ballSDF(transform,p - vec3(0, 0, eps));\n    return normalize(vec3(x, y, z));\n\n\n\n}\nvec3 calcHeartNormal(mat3 transform,vec3 p){\n    float eps=0.02;\n    float x = heart_3d( transform,p + vec3(eps, 0, 0)) - heart_3d(transform,p - vec3(eps, 0, 0));\n    float y = heart_3d(transform,p + vec3(0, eps, 0)) - heart_3d(transform,p - vec3(0, eps, 0));\n    float z = heart_3d(transform,p + vec3(0, 0, eps)) - heart_3d(transform,p - vec3(0, 0, eps));\n    return normalize(vec3(x, y, z));\n\n\n\n}\nrayHit HeartHitTest(mat3 transform,vec3 pos){\n    bool hit=false;\n    vec3 normal;\n    vec3 col;\n     if(heart_3d(transform,pos)<0.010){\n         hit=true;\n         normal=calcHeartNormal(transform,pos);\n         col=pos;\n     }\n     return rayHit(hit,normal,col);\n    \n}\n\nrayHit BallHitTest(mat3 transform,vec3 pos){\n    bool hit=false;\n    vec3 normal;\n    vec3 col;\n     if(ballSDF(transform,pos)<=0.010){\n         hit=true;\n         normal=calcBallNormal(transform,pos);\n         col=pos;\n     }\n     return rayHit(hit,normal,col);\n    \n}\nvec4 lambert(vec3 surfNormal,vec3 lightDir,vec3 color){\n\nfloat intensity = dot(surfNormal,lightDir);\nreturn vec4(max(color.x*intensity,0.2),max(color.y*intensity,0.1),max(color.z*intensity,0.1),1);\n\n}\nstruct ray{\n    vec3 pos;\n    vec3 dir;\n};\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ((1.0*fragCoord)/iResolution.xy-0.5);\n    float aspect = iResolution.x / iResolution.y;\n    ray shoot=ray(vec3(0,0,-10.0),vec3(uv.x,uv.y/aspect,1));\n    mat3 transform=rotateZ(sin(iTime*2.0)/3.0);\n     transform*=rotateY(iTime);\n    float epsilon=0.1f;\n    bool hit=false;\n    float raylen=heart_3d( transform,shoot.pos);\n    rayHit rh;\n    for(int i=0; i<30; i++){\n        rh=HeartHitTest( transform,shoot.pos+raylen*shoot.dir);\n        if(rh.hit){\n         hit=true;\n         break;\n        }\n        raylen+=heart_3d( transform,shoot.pos+raylen*shoot.dir);\n    }\n    if(hit){\n    fragColor = (vec4(0.3,0.0,0.0,1.0)+lambert(rh.normal,vec3(0,0,-1),vec3(2,0.2,0.2)));\n    \n    }else{\n    fragColor = vec4(0.5,0.5,0.5,1.0);\n    \n    }\n}\n","name":"Image","description":"","type":"image"}]}