{"ver":"0.1","info":{"id":"4cBfDm","date":"1724987892","viewed":17,"name":"_g_Sector","username":"_gamma_001","description":"sdf of sector","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","sector"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\n\nfloat sdSector(vec2 pos, vec2 origin, float r, float theta) {\n    // symmetry around y-axis\n    theta = theta * 0.5;\n    vec2 cPos = vec2(abs(pos.x - origin.x), pos.y - origin.y);\n    \n    // distance to the sector circumfrence (arc and line)\n    vec2 lDir = normalize(vec2(cos(PI / 2.0 - theta), sin(PI / 2.0 - theta)));\n    float d1 = length(cPos) - r;\n    float d2 = length(cPos - (clamp(dot(cPos, lDir), 0.0, r) * lDir));\n    \n    if (normalize(cPos).y > cos(theta)) return max(-d2, d1);\n    return d2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float fac = 0.5 * sin(iTime) + 0.5;\n    int offset = int(floor(iTime / 3.0)) % 3;\n\n    vec3 color = vec3(1.0);\n    float dist = sdSector(uv, vec2(0.0, 0.0), 0.35, fract(iTime * 0.5) * PI * 2.0);\n    color = mix(vec3(1.0, 1.0, 1.0), vec3(0.25, 0.6, 1.0), sin(fract(dist) * 175.0));\n    color *= mix(vec3(1.0, 0.5, 0.4), vec3(1.0), smoothstep(0.0, 0.003, dist));\n    color *= smoothstep(0.0, 0.02, abs(dist * 0.8));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}