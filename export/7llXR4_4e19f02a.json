{"ver":"0.1","info":{"id":"7llXR4","date":"1625267112","viewed":158,"name":"broken glass worley","username":"ejosiah","description":"worley noise generated using difference between 1st and 2nd order distance","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["worley","glass","cellnoise","broken"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358979323\n\nvec2 grid[9] = vec2[](\n    vec2(-1, -1),\n    vec2(0, -1),\n    vec2(1, - 1),\n    vec2(-1, 0),\n    vec2(0, 0),\n    vec2(1, 0),\n    vec2(-1, 1),\n    vec2(0, 1),\n    vec2(1, 1)\n);\n\nvoid sort(inout float array[9]){\n    for(int i = 1; i < 9; i++){\n        for(int j = 0; j < 9 - i; j++){\n            if(array[j] > array[j + 1]){\n                float temp = array[j];\n                array[j] = array[j+1];\n                array[j + 1] = temp;\n            }\n        }\n    }\n}\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 10.0;\n    vec2 f = fract(uv);\n    vec2 uv_i = floor(uv);\n    \n   float distances[9]; \n   for(int i = 0; i < 9; i++){\n       vec2 p = hash22(uv_i + grid[i]);\n       p = 0.5 + 0.5 * sin(2.0 * PI * p + iTime);\n       vec2 dist = f - (p + grid[i]);\n       float d = distance(f, p + grid[i]); \n     // float d = abs(dist.x) + abs(dist.y);  \n       distances[i] = d;\n   }\n    sort(distances);\n    float d = distances[1] - distances[0];\n\n    vec3 col = vec3(d);\n   // col.r += step(0.99, f.x) + step(0.99, f.y);\n    col += 1.0 - step(0.01, d);\n\n    // Output to screen\n    fragColor = vec4( col,1.0);\n}","name":"Image","description":"","type":"image"}]}