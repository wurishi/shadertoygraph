{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"const float PI=3.14159265358979323846;\n\n#define speed (iTime*0.2975)\n#define ground_x (1.0-0.325*sin(PI*speed*0.25))\nfloat ground_y=1.0;\nfloat ground_z=0.5;\n\nvec2 rotate(vec2 k,float t)\n\t{\n\treturn vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n\t}\n\nfloat draw_scene(vec3 p)\n\t{\n\tfloat tunnel_m=0.125*cos(PI*p.z*1.0+speed*4.0-PI);\n\tfloat tunnel1_p=2.0;\n\tfloat tunnel1_w=tunnel1_p*0.225;\n\tfloat tunnel1=length(mod(p.xy,tunnel1_p)-tunnel1_p*0.5)-tunnel1_w;\t// tunnel1\n\tfloat tunnel2_p=2.0;\n\tfloat tunnel2_w=tunnel2_p*0.2125+tunnel2_p*0.0125*cos(PI*p.y*8.0)+tunnel2_p*0.0125*cos(PI*p.z*8.0);\n\tfloat tunnel2=length(mod(p.xy,tunnel2_p)-tunnel2_p*0.5)-tunnel2_w;\t// tunnel2\n\tfloat hole1_p=1.0;\n\tfloat hole1_w=hole1_p*0.5;\n\tfloat hole1=length(mod(p.xz,hole1_p).xy-hole1_p*0.5)-hole1_w;\t// hole1\n\tfloat hole2_p=0.25;\n\tfloat hole2_w=hole2_p*0.375;\n\tfloat hole2=length(mod(p.yz,hole2_p).xy-hole2_p*0.5)-hole2_w;\t// hole2\n\tfloat hole3_p=0.5;\n\tfloat hole3_w=hole3_p*0.25+0.125*sin(PI*p.z*2.0);\n\tfloat hole3=length(mod(p.xy,hole3_p).xy-hole3_p*0.5)-hole3_w;\t// hole3\n\tfloat tube_m=0.075*sin(PI*p.z*1.0);\n\tfloat tube_p=0.5+tube_m;\n\tfloat tube_w=tube_p*0.025+0.00125*cos(PI*p.z*128.0);\n\tfloat tube=length(mod(p.xy,tube_p)-tube_p*0.5)-tube_w;\t\t\t// tube\n\tfloat bubble_p=0.05;\n\tfloat bubble_w=bubble_p*0.5+0.025*cos(PI*p.z*2.0);\n\tfloat bubble=length(mod(p.yz,bubble_p)-bubble_p*0.5)-bubble_w;\t// bubble\n\treturn max(min(min(-tunnel1,mix(tunnel2,-bubble,0.375)),max(min(-hole1,hole2),-hole3)),-tube);\n\t}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\t{\n\tvec2 position=(fragCoord.xy/iResolution.xy);\n\tvec2 p=-1.0+2.0*position;\n\tvec3 dir=normalize(vec3(p*vec2(1.77,1.0),1.0));\t\t// screen ratio (x,y) fov (z)\n\t//dir.yz=rotate(dir.yz,PI*0.5*sin(PI*speed*0.125));\t// rotation x\n\tdir.zx=rotate(dir.zx,-PI*speed*0.25);\t\t\t\t// rotation y\n\tdir.xy=rotate(dir.xy,-speed*0.5);\t\t\t\t\t// rotation z\n\tvec3 ray=vec3(ground_x,ground_y,ground_z-speed*2.5);\n\tfloat t=0.0;\n\tconst int ray_n=96;\n\tfor(int i=0;i<ray_n;i++)\n\t\t{\n\t\tfloat k=draw_scene(ray+dir*t);\n\t\tt+=k*0.75;\n\t\t}\n\tvec3 hit=ray+dir*t;\n\tvec2 h=vec2(-0.0025,0.002); // light\n\tvec3 n=normalize(vec3(draw_scene(hit+h.xyx),draw_scene(hit+h.yxy),draw_scene(hit+h.yyx)));\n\tfloat c=(n.x+n.y+n.z)*0.35;\n\tvec3 color=vec3(c,c,c)+t*0.0625;\n\tfragColor=vec4(vec3(c-t*0.0375+p.y*0.05,c-t*0.025-p.y*0.0625,c+t*0.025-p.y*0.025)+color*color,1.0);\n\t}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mds3Rn","date":"1361832213","viewed":16954,"name":"The road to Hell","username":"rez","description":"A pixel shader I did for Razor 1911's \"The Scene Is Dead\" 64k intro.\nIt's a pretty simple mix of boolean operations on various tubes and spheres but I'm pretty statisfied with the final result :D","likes":151,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","tunnel"],"hasliked":0,"parentid":"","parentname":""}}