{"ver":"0.1","info":{"id":"NlVXWR","date":"1640495131","viewed":95,"name":"MadelbrotFractal","username":"tarunrx","description":"Trying out fractals (formula used : f(z) = z ^ 2 + c)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float MAX_ITER = 1000.0f;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalize uv and place 0, 0 in the center of the screen\n    vec2 uv = (fragCoord.xy - 0.5f * iResolution.xy) / iResolution.y;\n    \n    vec2 mousePos = iMouse.xy / iResolution.xy;\n    float zoom = pow(10.0f, -mousePos.x * 30.0f);\n    \n    vec2 c = uv;\n    c *=  0.01f/ (iTime);\n    \n    c += vec2(-0.699, 0.377);\n    vec2 z = vec2(0.0f);\n    \n    float iter = 0.0f;\n    for (float i = 0.0f; i < MAX_ITER; i++)\n    {\n        z = vec2(z.x * z.x - z.y * z.y,  2.0f * z.y * z.x) + c;\n        if (length(z) > 2.0f) \n        {\n            break;\n        }\n        iter++;\n    }\n    \n    float f = iter / MAX_ITER;\n    vec3 col = vec3(f);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}