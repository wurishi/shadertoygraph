{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"mat3 rotate(vec3 axis, float angle)\n{\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat3(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c);\n}\n\nvec3 hyper_pow(vec3 c, float n)\n{\n    float x2 = c.x * c.x;\n    float y2 = c.y * c.y;\n    float z2 = c.z * c.z;\n    float r = sqrt(x2 + y2 + z2);\n    float theta = atan(c.y / c.x);\n    float phi = asin(c.z / r);\n    float ntheta = n * theta;\n    float nphi = n * phi;\n    return pow(r, n) * vec3(cos(ntheta) * cos(nphi), sin(ntheta) * cos(nphi), sin(nphi));\n}\n\nbool inside(vec3 c)\n{\n    vec3 z = c;\n\n    for(int i = 0; i < 3; ++i)\n\t{\n\t\tz = hyper_pow(z, 8.0) + c;\n\t}\n\n\treturn length(z) < 4.0;\n}\n\nvec3 solve(vec2 coord)\n{\n    vec2 uv = coord / iResolution.xx - vec2(0.5, 0.5 * iResolution.y / iResolution.x);\n    vec3 eye = vec3(0.0, 0.0, 0.0);\n    vec3 dir = vec3(uv, 1.0) - eye;\n    vec3 p;\n    \n    float t1 = 0.001;\n    float t3 = 16.0;\n    float t2 = (t1 + t3) / 2.0;\n    \n    for(int n = 0; n < 16; ++n)\n    {\n        p = rotate(vec3(1.0, 1.0, 1.0), iTime / 4.0) * (eye + t2 * dir);\n        \n        if(inside(p))\n        {\n            t1 = t2;\n        }\n        else\n        {\n            t3 = t2;\n        }\n        \n        t2 = (t1 + t3) / 2.0;\n    }\n    \n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 p = solve(fragCoord.xy);\n    vec3 pa = solve(fragCoord.xy + vec2(1.0, 0.0));\n    vec3 pb = solve(fragCoord.xy + vec2(0.0, 1.0));\n    \n    vec3 n = normalize(cross(pa - p, pb - p));\n    \n    float color = max(0.0, dot(n, p)) / (dot(p, p) + 0.5);\n    \n\tfragColor = vec4(color, color, color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltl3zs","date":"1424528750","viewed":188,"name":"Inside Mandelbulb","username":"den","description":"Inside of this shit","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbulb"],"hasliked":0,"parentid":"","parentname":""}}