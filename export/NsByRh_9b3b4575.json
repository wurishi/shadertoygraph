{"ver":"0.1","info":{"id":"NsByRh","date":"1643042265","viewed":82,"name":"thing wefaef","username":"jy483752","description":"w","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["w"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.2831853071\n#define quarter TAU/4.\nmat2 rot(in float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat square(in vec2 st, \n    in float thiccness){\n    return smoothstep(-1.0, 1.0,\n    thiccness-abs(dot(st, vec2(1., 0.)*100.))+\n    thiccness-abs(dot(st, vec2(0., 1.)*100.))\n    );\n}\nfloat box(in vec2 st, in float out_size, in float in_size){\n    st *= rot(quarter/2.+iTime);\n    return square(st, out_size)-square(st, in_size);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    float scale = 1.;\n    \n    uv*=5.; scale*=5.;\n    uv /= dot(uv, uv); scale/=scale*scale;\n    uv = abs(uv);\n    \n    float size = 160.;\n    float brightness; \n    brightness += box(uv, size, size*0.8);\n    \n    for(float i=0.; i<9.; i++){\n        uv-=0.1*sin(iTime);\n        uv /= dot(uv, uv); scale/=scale*scale;\n        uv = abs(uv);\n        uv*=0.1+sin(iTime/2.)/3.; scale*=0.1+sin(iTime/2.)/3.;\n        uv /= scale;\n        brightness += box(uv, size, size*0.8);\n    }\n    vec3 col = vec3(brightness);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}