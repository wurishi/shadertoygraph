{"ver":"0.1","info":{"id":"4tfcW7","date":"1504987486","viewed":322,"name":"2D Audio Visualizer","username":"Polygon","description":"I was curious to see what this would look like. I split the visualizer into 8 lines, each line representing one octave. It's not much, but it's pretty cool to see where notes go in a 2d space.","likes":9,"published":1,"flags":64,"usePreview":0,"tags":["2d","audio","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dsSDX","filepath":"https://soundcloud.com/subsoundproductions/subsound-out-of-reach","previewfilepath":"https://soundcloud.com/subsoundproductions/subsound-out-of-reach","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tf(float x) {\n    return (pow(2., x + 1.));\n}\n\nfloat s(float x) {return x*x;}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    fragColor = vec4(s(texture(iChannel0, vec2(tf(uv.x + floor(8. * uv.y + .5)) / 512., 0.)).x * fract(8. * uv.y + .5) + texture(iChannel0, vec2(tf(uv.x - 1. + floor(8. * uv.y + .5)) / 512., 0.)).x * (1. - fract(8. * uv.y + .5))));\n    //fragColor = vec4(s(texelFetch(iChannel0, ivec2(tf(uv.x + floor(8. * uv.y)), 0), 0).x));\n    \n    //Uncomment the last line to remove smoothing.\n}","name":"Image","description":"","type":"image"}]}