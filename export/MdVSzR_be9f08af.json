{"ver":"0.1","info":{"id":"MdVSzR","date":"1463028628","viewed":1488,"name":"Audio Feedback Landscape","username":"weyland","description":"Tweaked version of my feedback shader, just messing around to fit the audio, feel free to use your own audio in iChannel0 of buf A ..\n\nNote: 'frame dependent effect': 60fps vsync pls, also: 'feedback' errors show up as cyan squares, awesome","likes":18,"published":3,"flags":96,"usePreview":0,"tags":["audio","feedback","neon","backbuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvDist = fragCoord / vec2(iResolution.x,iResolution.y)+vec2(0.005,0.025+sin(time/6.)/1000.);\n    if(iFrame == 0) {\n        fragColor = vec4(0.0,0.0,0.0,1.0);\n    } else {\n        vec3 prev = texture(iChannel1, uvDist).rgb;\n        vec4 acol = texture(iChannel0, uv);\n        float alpha = acol.a;\n        vec3 bias = vec3(0.919,0.989,0.999);\n        fragColor = vec4(acol.rgb + prev*(1.0-alpha)*bias, 1.0);\n    }\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"4sfGDl","filepath":"https://soundcloud.com/orangemilk/nico-niquo-pandimension","previewfilepath":"https://soundcloud.com/orangemilk/nico-niquo-pandimension","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n\tvec3 colorq = vec3(0.0, 0.0, 0.0);\n\tfloat piikit  = texture(iChannel0, vec2(uv.x/7.5, 0.25)).r;\n\t\n\tfloat flash = texture(iChannel0, vec2(0.12, 0.0)).r;\n\tfloat glow = (0.01 + flash*0.0012)/abs(piikit - uv.y + 0.05);\n\tcolorq = vec3(0.0, glow*0.15, glow);\n\tcolorq += vec3(sqrt(glow*0.05*(piikit+0.1)));\n\n    vec4 color= vec4(colorq,0.2);\n\n\tfragColor = color;\n}","name":"Buf A","description":"","type":"buffer"}]}