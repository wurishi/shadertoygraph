{"ver":"0.1","info":{"id":"msVXDt","date":"1681820603","viewed":41,"name":"scanline+random background","username":"DM","description":"Scanline + random","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["scanline"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float line(vec2 st) {    \n    return smoothstep(0.02, 0.0, abs(st.y - st.x));\n}\n\nfloat line_curve(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    float speed = 0.5;\n    vec2 st = fragCoord.xy/iResolution.xy;\n    //plus la coordoner x est elver plus s'est rouge \n    //plus la coordoner y est elever plus s'est vert\n    //bleu change en fonction de la position de la souris\n    //coordoner entre 0.0 et 1.0\n    //cycliquement en fonction du temps les valeur rouge et vert sont changer\n    \n    // dessine une ligne courber : Smooth interpolation between 0.1 and 0.9\n    float courbe = abs(sin(iTime));\n    float pct = line_curve(st,courbe);\n    vec3 color = vec3(st.x*abs(sin(iTime)),st.y*abs(cos(iTime)),iMouse.x/iResolution.x); //shader de base\n    color = (1.0-pct)*color+pct*vec3(0.0,1.0,0.0); //ajout de la ligne de couleur verte 0.0 1.0 0.0 \n    \n    fragColor = vec4(color,0.1);\n}","name":"Image","description":"","type":"image"}]}