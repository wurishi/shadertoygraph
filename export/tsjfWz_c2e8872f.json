{"ver":"0.1","info":{"id":"tsjfWz","date":"1590046870","viewed":113,"name":"Game of life boom pew","username":"TheGreatMurloc","description":"Tak pif paf neasi","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 centerImageTiled(vec2 res, float xMult, float yMult, float neg, vec2 fragCoord)\n{\n    vec3 col = vec3(texelFetch(iChannel0,ivec2(fragCoord),0).rg,.15);\n    vec2 textCoord = fragCoord/res*float(textureSize(iChannel1,0));\n    textCoord.x += iResolution.x*-xMult;\n    textCoord.y += iResolution.y*yMult;\n    textCoord = vec2(vec2(textCoord)/500.);\n    textCoord = fract(textCoord);\n    textCoord = vec2(vec2(textCoord)*1500.);\n    //col.rg *= abs(texelFetch(iChannel1,ivec2(textCoord),0).r-neg);\n    col.rg *= round(abs(texelFetch(iChannel1,ivec2(textCoord),0).r-neg));\n    return col;\n}\n\nvec3 centerImage(vec2 res, float xMult, float yMult, float neg, vec2 fragCoord)\n{\n    vec3 col = vec3(texelFetch(iChannel0,ivec2(fragCoord),0).rg,.15);\n    vec2 textCoord = fragCoord/res*float(textureSize(iChannel1,0));\n    textCoord.x += iResolution.x*-xMult;\n    textCoord.y += iResolution.y*yMult;\n    col.rg *= abs(round(texelFetch(iChannel1,ivec2(textCoord),0).r-neg));\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(texelFetch(iChannel0,ivec2(fragCoord),0).rg,.15);\n    //Stitch\n    //col = centerImage(iResolution.yy,.1,.14,1.,fragCoord);\n    \n    //Discord windowed\n    //col = centerImage(iResolution.xx,-.0,.5,1.,fragCoord);\n    \n    //Discord mini\n    //col = centerImage(iResolution.xx*.2,2.,-2.5,1.,fragCoord);\n    \n    //GMS2\n    //col = centerImage(iResolution.xx*.7,.1,.1,0.,fragCoord);\n    \n    //Haha!\n    //col = centerImage(iResolution.xx*.45,.5,.2,0.,fragCoord);\n    \n    //Haha! tiled\n    //col = centerImageTiled(iResolution.xx*.45,.5,.1,0.,fragCoord);\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float hash1( float n )\n{\n    return fract(sin(n)*138.5453123+(iDate.w));\n}\n\nvec3 centerImage(vec2 res, float xMult, float yMult, float neg, vec2 fragCoord)\n{\n    vec3 col = vec3(step(0.5, hash1(fragCoord.x*13.0+hash1(fragCoord.y*71.1))));\n    vec2 textCoord = fragCoord/res*float(textureSize(iChannel1,0));\n    textCoord.x += iResolution.x*-xMult;\n    textCoord.y += iResolution.y*yMult;\n    col *= abs(texelFetch(iChannel1,ivec2(textCoord),0).r-neg);\n    return col;\n}\n\nvec3 centerImageTiled(vec2 res, float xMult, float yMult, float neg, vec2 fragCoord)\n{\n    vec3 col = vec3(step(0.5, hash1(fragCoord.x*13.0+hash1(fragCoord.y*71.1))));\n    vec2 textCoord = fragCoord/res*float(textureSize(iChannel1,0));\n    textCoord.x += iResolution.x*-xMult;\n    textCoord.y += iResolution.y*yMult;\n    textCoord = vec2(vec2(textCoord)/500.);\n    textCoord = fract(textCoord);\n    textCoord = vec2(vec2(textCoord)*1500.);\n    col *= abs(texelFetch(iChannel1,ivec2(textCoord),0).r-neg);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    ivec2 uv = ivec2(fragCoord);\n    vec3 col = texelFetch(iChannel0,uv,0).rgb;\n    ivec2 textSize = ivec2(textureSize(iChannel0,0));\n    \n    int neighbors = 0;\n    for (int i = -1; i <= 1; i++)\n    {\n        for (int j = -1; j <= 1; j++)\n        {\n            neighbors += int(texelFetch(iChannel0,(uv+ivec2(i,j)+textSize)%textSize,0).b);\n        }\n    }\n    neighbors -= int(col.b);\n    \n\tif (neighbors == 3) col.rgb += vec3(.2,.3,1.);\n    else if (neighbors < 2 || neighbors > 3) col.rgb -= vec3(.0,.01,1.);\n    col.r = max(col.r*.998,.1*sign(col.r));\n    col.g *= .995;\n        \n    if(iFrame == 0)\n    {\n        //Noise\n        col = vec3(step(0.5, hash1(fragCoord.x*13.0+hash1(fragCoord.y*71.1))));\n        \n        //Make a circle on start\n        vec2 uv_ = fragCoord/iResolution.xy;\n        uv_ -= .5;\n        uv_.x = uv_.x/9.*16.;\n        col *= 1.-smoothstep(.4,.4,length(uv_));\n        \n        //Masks for custom textures in iChannel1\n        \n        //Stitch\n        //col = centerImage(iResolution.yy,.1,.14,0.,fragCoord);\n\n        //Discord windowed\n        //col = centerImage(iResolution.xx,-.0,.5,0.,fragCoord);\n\n        //Discord mini\n        //col = centerImage(iResolution.xx*.2,2.,-2.5,1.,fragCoord);\n\n        //GMS2\n        //col = centerImage(iResolution.xx*.7,.1,.1,1.,fragCoord);\n        \n        //Haha!\n        //col = round(centerImage(iResolution.xx*.45,.5,.1,0.,fragCoord));\n        \n        //Haha! tiled\n        //col = round(centerImageTiled(iResolution.xx*.45,.5,.1,1.,fragCoord));\n    }\n    if (length(iMouse.xy*(sign(iMouse.w))-fragCoord)<50.0)\n    {\n        col = vec3(step(0.5, hash1(fragCoord.x*13.0+hash1(fragCoord.y*71.1))));\n    }\n    \n    col = clamp(col.rgb,0.,1.);\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}