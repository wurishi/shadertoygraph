{"ver":"0.1","info":{"id":"MdSyRt","date":"1493342206","viewed":186,"name":"loading thingy","username":"rytone","description":"test","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SMOOTH(r) (mix(1.0, 0.0, smoothstep(0.9,1.0, r)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float len = length(fragCoord - vec2(iResolution.x - 60.0, 60.0));\n    if (len < 30.0) {\n        float angle = dot(vec2(sin(iTime*10.0), cos(iTime*10.0)), normalize(fragCoord - vec2(iResolution.x - 60.0, 60.0)));\n        if (angle > sin(iTime*3.0)*0.74+0.25) {\n            fragColor = vec4(0.8, 0.8, 0.8, 1.0);\n        } else {\n        \tfragColor = vec4(0.15, 0.15, 0.15, 1.0);\n        }\n    } else {\n        fragColor = vec4(0.1, 0.1, 0.1, 1.0);\n    }\n    len = length(fragCoord - vec2(iResolution.x - 60.0, 60.0));\n    if (len < 20.0) {\n        fragColor = vec4(0.1, 0.1, 0.1, 1.0);\n    }\n    fragColor *= min(iTime, 1.0);\n}","name":"Image","description":"","type":"image"}]}