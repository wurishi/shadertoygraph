{"ver":"0.1","info":{"id":"stl3DN","date":"1622147090","viewed":96,"name":"an animated distorted circle","username":"nebbul","description":"a circle distorted with some noise","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circle","distorted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// background grid from https://www.shadertoy.com/view/XtBfzz\n\nconst float N = 2.0; // grid ratio\nfloat gridTexture( in vec2 p )\n{\n    // coordinates\n    vec2 i = step( fract(p), vec2(1.0/N) );\n    //pattern\n    //return (1.0-i.x)*(1.0-i.y);   // grid (N=10)\n    \n    // other possible patterns are these\n    //return 1.0-i.x*i.y;           // squares (N=4)\n    return 1.0-i.x-i.y+2.0*i.x*i.y; // checker (N=2)\n}\n\n\n// base code taken from:\n// https://www.shadertoy.com/view/XsjGDt\n//\n\n// Draw a circle at \"pos\" with radius \"rad\"\nfloat circle(vec2 uv, vec2 pos, float rad) {\n\tfloat d = length(pos - uv) - rad;\n    // anti aliasing\n    float t = smoothstep(-0.75, 0.75, d);\n    \n\treturn t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    // define our UVs\n\tvec2 uv = fragCoord.xy;\n    // get center of image\n\tvec2 center = iResolution.xy * 0.5;\n    // set radius of circle\n\tfloat radius = 0.25 * iResolution.y * ((sin(iTime)+1.0)/2.0 + 0.5);//sin(length(iResolution.y-center)*(iTime*0.02))*1.0;\n    float radius_distorted = radius;\n\n    // Background color\n    vec4 bg_color = 0.2 * vec4(1., 1., 1., 1.) * gridTexture(fragCoord.xy/iResolution.xx * vec2(5., 5.)) + 0.6;\n    // foreground color\n\tvec4 fg_color = vec4(1.0, 1.0, 1.0, 1.0);\n\n\t// Circle A\n\tfloat circle_normal = circle(uv, center, radius);\n    \n    // Distorted circle B\n    vec2 uvtex = fragCoord.xy/iResolution.xy;\n    radius_distorted += (texture(iChannel0, uvtex).r - 0.5) * iResolution.x * 0.05;\n    float circle_distorted = circle(uv, center, radius_distorted);\n    \n    float line = (sin(iTime * 2.) + 1.0) / 2.0;\n    // compare a and b\n    if(uvtex.x < line - 0.001) fragColor = vec4(mix(fg_color, bg_color, circle_normal));\n    if(uvtex.x > line + 0.001) fragColor = vec4(mix(fg_color, bg_color, circle_distorted));\n\n}","name":"Image","description":"","type":"image"}]}