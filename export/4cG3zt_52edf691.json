{"ver":"0.1","info":{"id":"4cG3zt","date":"1713194082","viewed":54,"name":"day 10 - circular lines","username":"dave22153","description":"trying to make a clock while learning shaders","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float maskCircle2R(vec2 uv, vec2 c, float r1, float r2) {\n    return float(abs(distance(uv, c) - mix(r1, r2, .5)) < abs(r2 - r1) / 2.);\n}\n\nfloat sinTime(float multiplier) {\n    return sin(iTime * multiplier)*.5+.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 size = vec2(iResolution.x/iResolution.y, 1.);\n    uv *= size;\n    \n    // basic circle\n    vec2 c = size / 2.;\n    float r1 = mix(.1, .2, sinTime(.775));\n    float r2 = r1 + mix(.05, .24, sinTime(.4983));\n    float circleMask = maskCircle2R(uv, c, r1, r2); \n    \n    // split into fractions\n    vec2 a = uv - c;\n    float n = mix(3., 80., sinTime(.5345));\n    float fraction = mix(.96, .1, sinTime(1.842));\n    circleMask *= step(mod(atan(a.x, a.y) + (3.14*2./n*fraction/2.), 2. * 3.14 / n), 3.14 * (2./n) * fraction);\n    \n    \n    vec3 col = mix(vec3(.2), vec3(.9, .3, .4), circleMask);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}