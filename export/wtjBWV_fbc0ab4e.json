{"ver":"0.1","info":{"id":"wtjBWV","date":"1599927183","viewed":136,"name":"Zooming hexagons","username":"julianlumia","description":"Almost perfect.. :p","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["droste"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//slightly edited droste zoom effect from: roywig\n//https://shadertoy.com/view/Xs3SWj\n\n#define PI 3.14159\n\nvec2 cInverse(vec2 a) { return\tvec2(a.x,-a.y)/dot(a,a); }\nvec2 cMul(vec2 a, vec2 b) {\treturn vec2( a.x*b.x -  a.y*b.y,a.x*b.y + a.y * b.x); }\nvec2 cDiv(vec2 a, vec2 b) {\treturn cMul( a,cInverse(b)); }\nvec2 cExp(vec2 z) {\treturn vec2(exp(z.x) * cos(z.y), exp(z.x) * sin(z.y)); }\nvec2 cLog(vec2 a) {\tfloat b =  atan(a.y,a.x); if (b>0.0) b-=2.0*PI;return vec2(log(length(a)),b);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 z = (fragCoord-.5*iResolution.xy);\n    float r1 =3., r2 =.495,\n\tscale = log(r2/r1),angle = atan(scale/(0.+2.*PI));\n    z = cLog(z);\n\tz.y -= iTime/2.;\n    z = cDiv(z, cExp(vec2(.0,angle))*cos(angle)); \n    z.x = mod(z.x-iTime,scale);\n    z = cExp(z)*r1;\n    fragColor = texture(iChannel0,.5+.5*z); \n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// code from youtube video about hextiling by bigwings\n\nfloat hexdist (vec2 p)\n{\n    p = abs(p);\n    //dotproduct of uv coord and ratio in vector\n    float c = dot(p,normalize(vec2(1,1.73)));\n    c = max(c,p.x);\n    return c;\n}\n\nvec4 hexcoord(vec2 uv)\n{\n     vec2 r = vec2(1.,1.75); \n     vec2 h = r*.5;\n\n   vec2 a = mod(uv,r)-h;\n   vec2 b = mod(uv -h,r)-h;\n    \n    \n\tvec2 gv;\n    if (length(a)<length(b))\n        gv = a;\n    else\n        gv = b;\n    float x = atan(gv.x,gv.y);\n    float y = 0.5-hexdist(gv);\n    vec2 id = uv - gv;\n    return vec4(x,y,id.x,id.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xy;\n    vec3 col = vec3(0);\n    \n    uv *=2.;\n\n    \n   vec4 hc = hexcoord(uv);\n    \n    float c = hc.y;\n\n    col += smoothstep(0.0061,0.006,hc.y*sin(hc.z*hc.w+(.9)));\n    \n\n    fragColor = vec4(col,1.);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}