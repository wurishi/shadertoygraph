{"ver":"0.1","info":{"id":"4sKfz1","date":"1527626931","viewed":89,"name":"Glowing Sines","username":"lokmeinmatz","description":"glows in the dark","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math","glow","sinus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n\tvec3 l = vec3(0.1, 0.05, 0.2);\n    l *= iTime;\n    l += uv.x;\n    l = sin(l);\n    l *= 0.5;\n    l += 0.5;\n    \n    vec3 lineborders =  clamp(step(uv.y, l + 0.001) - step(uv.y, l - 0.001), 0.0, 1.0);\n    vec3 softLineBorders = clamp(smoothstep(uv.y - 0.1, uv.y, l + 0.001) - smoothstep(uv.y, uv.y + 0.1, l - 0.001), 0.0, 1.0);\n    \n    float in1 = clamp(step(uv.y, l.x + 0.001) - step(uv.y, l.x - 0.001), 0.0, 1.0);\n    // Time varying pixel color\n    vec3 col = mix(vec3(0.0, 0.0, 0.0), vec3(0.0, 1.0, 0.0), in1);\n\n    // Output to screen\n    fragColor = vec4(lineborders + softLineBorders * 0.5,1.0);\n}","name":"Image","description":"","type":"image"}]}