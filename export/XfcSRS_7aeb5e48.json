{"ver":"0.1","info":{"id":"XfcSRS","date":"1714039795","viewed":76,"name":"turbulence soup","username":"nikk_ca","description":"turbulence soup","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","turbulence","soup"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat3 rotateY(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat3(\n        c, 0,-s,\n        0, 1, 0,\n        s, 0, c\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.yy;\n    \n    vec3 p = vec3(textureSize(iChannel0, 0)) * 0.5;\n    p.z += iTime / 128.0;\n    \n    vec3 d = normalize(vec3(uv, 1.0));\n    d *= rotateY(iTime / 16.0);\n\n    for (int i = 0; i < 64; i++) {\n        d += normalize(texture(iChannel0, p).xyz * 2.0 - 1.0) / 8.0;\n        d = normalize(d);\n        p += d / 512.0;\n    }\n\n    fragColor = texture(iChannel0, p);\n}","name":"Image","description":"","type":"image"}]}