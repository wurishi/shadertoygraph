{"ver":"0.1","info":{"id":"tdXfWs","date":"1589264050","viewed":74,"name":"loading_circle","username":"linkwwj","description":"loading circle","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\t//coord\n    uv = uv*2.0-1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv = rotate2d(iTime*3.0)*uv;\n    \n    float r = length(uv - vec2(0.0));\n    float theta = atan(uv.y,uv.x)+PI*1.25;\n    \n   \t\n    vec3 col = vec3(0.0);\n    col = vec3(step(0.15,r)*step(r,0.4)*sin(0.25*theta));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}