{"ver":"0.1","info":{"id":"mtGSRD","date":"1686051374","viewed":36,"name":"Experiments_1_tp","username":"ShadowedNinja","description":"random","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bad"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 ACESFilm(vec3 x)\n{\n    float a = 2.51;\n    float b = 0.03;\n    float c = 2.43;\n    float d = 0.59;\n    float e = 0.14;\n    return clamp((x*(a*x+b))/(x*(c*x+d)+e), 0.,1.);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 normalized_coord = abs(uv * 2.0 - 1.0);\n    vec2 normalized_coord2 = abs(uv * 2.0 - 1.0);\n    \n    float angle = (iTime) * 0.1 + 9.;\n    \n    for (float i = 0.0; i < 32.0; i += 0.5) {\n        normalized_coord = abs(normalized_coord);\n        normalized_coord -= 1.5;\n        normalized_coord *= 1.1;\n        normalized_coord += 0.0 * fract(iTime);\n        normalized_coord += fract(iTime);\n        normalized_coord *= mat2(\n            cos(angle), -sin(angle),\n            sin(angle), cos(angle)\n        );\n    }\n    \n    normalized_coord2 *= fract(iTime) * 2. - 1.;\n\n    // Time varying pixel color\n    vec3 col = vec3(fract(length(normalized_coord)/4.));\n    \n    col *= vec3(fract(iTime) * 1., fract(iTime) * uv.x, uv.y) * vec3(4.);\n    col = mix(col, vec3(fract(iTime*1.)), vec3(fract(abs(length(normalized_coord2) * 1.5)))*4.);\n    \n    // Output to screen\n    fragColor = vec4(ACESFilm(col),1.0);\n}","name":"Image","description":"","type":"image"}]}