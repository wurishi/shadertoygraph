{"ver":"0.1","info":{"id":"NdsSDM","date":"1618702359","viewed":86,"name":"Running Interference ","username":"bignobody","description":"Started as an attempt to make an Archimedes Spiral and ended up here.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["interference"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float as(vec2 uv, float v, float w)\n{\n    float t = length(uv);\n    float wt = w * t;\n    float vt = v * t;\n    vec2 s = vec2 ( ( vt + uv.x ) * cos(wt), (vt + uv.y) * sin(wt) );\n    return length(s);\n    \n}\n\nfloat spr(vec2 uv)\n{\n    return (((smoothstep(as(uv, 0.01, 20.0*(sin(iTime*0.1)*10.0)), 0.001, 0.2)*1.75)-1.0)*-1.0);\n}\n\nmat2 rot(float a)\n{\n\treturn mat2(cos(a),-sin(a),sin(a),cos(a));    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    uv = uv * rot(iTime*0.5);\n    vec3 col = vec3(0.0);\n    float t = iTime * 0.2;\n    float r = sin(t)*0.95;\n    float m = spr(uv-vec2(sin(t), cos(t))*r);\n    float n = spr(uv-vec2(cos(t), sin(t))*r);\n    float o = spr(uv+vec2(sin(t), cos(t))*r);\n    float p = spr(uv+vec2(cos(t), sin(t))*r);\n \n\tcol = vec3(m*n*o*p) * vec3(max(0.001,sin(t+123.0)*0.69), max(0.01,sin(t+1300.0)*0.50), max(0.001,cos(t)*0.88));\n    fragColor = vec4( pow(col,vec3(0.4545)),1.0);\n}","name":"Image","description":"","type":"image"}]}