{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define PI\t3.14159265359\n#define PI2\tPI*2.0\n\nmat2 rotate(float a)\n{\n\treturn mat2(cos(a), sin(a), -sin(a), cos(a));\t\n}\n\nvec3 hsv(float h, float s, float v)\n{\n  return mix( vec3( 1.0 ), clamp( ( abs( fract(\n    h + vec3( 3.0, 2.0, 1.0 ) / 3.0 ) * 6.0 - 3.0 ) - 1.0 ), 0.0, 1.0 ), s ) * v;\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n    p.y -= p.x * (p.x - 1.0) * (p.x + 1.0);\n    p.x -= 3.0 * sin(p.y + iTime * 0.3);\n    float n = PI2 / 120.0;\n    p *= rotate(floor(atan(-p.x, p.y) / n) * n);\n    p.x = abs(p.x);\n    p.y -= 0.3;\n    vec3 col = vec3(0.0);\n    col = mix(col, hsv(sin(iTime * 0.1)+ 0.3, 0.6, 0.5), smoothstep(0.1, 0.0, abs(p.x)));\n    col = mix(col, hsv(sin(iTime * 0.1)+ 0.0, 1.0, 1.0), smoothstep(0.5, 0.0, abs(p.y)));\n    col = mix(col, hsv(sin(iTime * 0.1)+ 0.6, 0.7, 0.3), smoothstep(0.0, 5.0, length(p)));\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltfGDf","date":"1425657363","viewed":217,"name":"Cubic function Curve","username":"gaz","description":"2d","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}