{"ver":"0.1","info":{"id":"ld3fDM","date":"1525357013","viewed":99,"name":"MovingGradients","username":"gilesruscoe","description":"grads","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Shadertoy code//\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    float aspectRatio = iResolution.y / iResolution.x;\n    uv.y *= aspectRatio;\n\n    //Matrix shader code//\n    \n    float tiles = 200.0; //number of tiles\n    float xGrad = fract(uv.x * tiles); //x patches\n    float yGrad = fract(0.5+uv.y * tiles); //y patches\n    float cellWidth = 0.75; //width of cells\n    \n    //Colours to blend between\n    vec3 colA = vec3(0.5, 0.82, 0.0);\n    vec3 colB = vec3(0.750, 0.65, 0.15);\n    vec3 colC = vec3(0.5, 0.25, 0.86);\n    \n    //Grid shape\n    vec2 grid = vec2(step(xGrad, cellWidth), step(yGrad, cellWidth)); //the grid x and y stripes\n    float gridMask = grid.x - (1.0-grid.y); //make grid pattern from x and y stripes\n    float cellIdX = floor(uv.x * tiles) / tiles; //create a 0 to 1 stepped index for each tile to vary X gradients\n    \n    //Quick hash function for semi-random X tiles\n    float randMask = fract(sin(cellIdX * 15234.23491) * 252312.523491292);\n\n    float tailSize = 2.5; //Length of vertical gradients\n    float randomness = 22.0; //Amount of X variation\n    float speedRandomness = 0.5;\n    float speed = 0.5 + randMask * speedRandomness; //Scroll speed\n    float animWave = fract(iTime * speed + (uv.y * tailSize) + randMask * randomness); //The animation controller\n    \n    \n    //Colour blending masks\n    float ABMask = min(1.0, animWave * 2.0);\n    float BCMask = max(0.0, animWave - 0.5) * 1.5;\n    \n    //Blend Colours\n    vec3 cellCol = mix(mix(colA, colB, ABMask), colC, BCMask);\n\tcellCol *= gridMask;\n    \n    //final output\n\tvec3 col = cellCol;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}