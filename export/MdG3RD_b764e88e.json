{"ver":"0.1","info":{"id":"MdG3RD","date":"1453437760","viewed":6473,"name":"Blue Dream","username":"Passion","description":"Testing out the new back-buffer/multipass rendering feature. Reference: https://medium.com/community-play-3d/god-rays-whats-that-5a67f26aeac2#.g4qq9i1rk - Also used some code from the user/member 'Dila' in the raymarcher.","likes":87,"published":1,"flags":96,"usePreview":0,"tags":["raymarch","godrays","postprocess"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dfGW8","filepath":"https://soundcloud.com/devolverdigital/el-huervo-feat-shelby-cinca","previewfilepath":"https://soundcloud.com/devolverdigital/el-huervo-feat-shelby-cinca","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int NUM_SAMPLES = 55;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    //vec4 buffer = texture(iChannel0,uv);\n    float decay=0.96815;\n    float exposure=0.21;\n    float density=0.926;\n    float weight=0.58767;\n    \n    vec2 tc = uv;\n    vec2 lightPos = iMouse.xy;\n    vec2 deltaTexCoord = tc;\n    \n    deltaTexCoord =  uv+vec2(sin(iTime*.7)*.3,-cos(iTime*.2)*.3)-.5;\n    deltaTexCoord *= 1.0 / float(NUM_SAMPLES)  * density;\n    \n    float illuminationDecay = 1.0;\n    vec4 color =texture(iChannel0, tc.xy)*0.305104;\n    \n    tc += deltaTexCoord * fract( sin(dot(uv.xy+fract(iTime), \n                                         vec2(12.9898, 78.233)))* 43758.5453 );\n    \n    for(int i=0; i < NUM_SAMPLES; i++)\n    {\n        tc -= deltaTexCoord;\n        vec4 sampleTex = texture(iChannel0, tc)*0.305104;\n        sampleTex *= illuminationDecay * weight;\n        color += sampleTex;\n        illuminationDecay *= decay;\n    }\n    fragColor = color*exposure;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// sphere's\nfloat map(vec3 p){\n    p=mod(p,8.)-4.;\n    return length(p) - 2.;\n}\n// rotation\nmat2 rot(float deg){    \n    return mat2(cos(deg),-sin(deg),\n                sin(deg), cos(deg));\n        \n}\n// raymarch\nfloat trace(vec3 o, vec3 r, inout vec3 hitPos){\n    float t = 0.0;\n    for(int i = 0; i<20; i++){\n        vec3 p = o+r * t;\n        float d = map(p);\n        t += d*0.5;\n    }\n    return t;\n}\n// main\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //screen coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //init to avoid errors\n    fragColor = vec4(0.0);\n    //cam origin\n    vec3 o = vec3(0.0, 0.0,-9.0);\n    o.xz*=rot(iTime*.2);\n    o.yz*=rot(iTime*.575);\n    //ray\n    vec3 r = normalize(vec3(uv, 1.0 - dot(uv, uv)*.25));\n    r.xy*=rot(iTime*.33); //.25\n    r.xz*=rot(-iTime*.5); //.15\n    //unused for now\n    vec3 hitPos = vec3(0.0);\n    //raymarch\n    float t = trace(o, r, hitPos);\n    \n    float fog = 1.0 / (1.0 + t * t * 0.075);\n    vec3 fc = vec3(fog);\n    float d = map(o+r*t);\n    \n    if(abs(d)<.5)\n        fragColor = vec4(fc,1.0);\n    else{\n        float lp = length(.5*uv+vec2(sin(iTime*.7)*.3,-cos(iTime*.2)*.3))-.5;\n        fragColor = vec4(-lp*2.5)*vec4(.5,.69,1.,1.);      //vec4(.4,.8,.3,1.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}