{"ver":"0.1","info":{"id":"lfdfD2","date":"1733520213","viewed":26,"name":"Syrian Republic flag","username":"ArthurTent","description":"The flag of Syrian Republic","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["flag","palestine"],"hasliked":0,"parentid":"cd3fWX","parentname":"Flag of Palestine"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// signed distance to a n-star polygon, with external angle w\nfloat sdStar(in vec2 p, in float r, in float n, in float w)\n{\n   \n    // these 5 lines can be precomputed for a given shape\n    //float m = n*(1.0-w) + w*2.0;\n    float m = n + w*(2.0-n);\n    \n    float an = 3.1415927/n;\n    float en = 3.1415927/m;\n    vec2  racs = r*vec2(cos(an),sin(an));\n    vec2   ecs =   vec2(cos(en),sin(en)); // ecs=vec2(0,1) and simplify, for regular polygon,\n\n    // symmetry (optional)\n    p.x = abs(p.x);\n    \n    // reduce to first sector\n    float bn = mod(atan(p.x,p.y),2.0*an) - an;\n    p = length(p)*vec2(cos(bn),abs(sin(bn)));\n\n    // line sdf\n    p -= racs;\n    p += ecs*clamp( -dot(p,ecs), 0.0, racs.y/ecs.y);\n    return length(p)*sign(p.x);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 black = vec3(0.,0.,0.);\n    vec3 white = vec3(1.,1.,1.);\n    vec3 green = vec3(0.157,0.498,0.141);\n    vec3 red = vec3(0.898,0.196,0.173);\n    if (uv.y < 0.333)\n        fragColor = vec4(black, 1.);\n    else if (uv.y < 0.666)\n        fragColor = vec4(white, 1.);\n    else\n        fragColor = vec4(green, 1.);\n    \n    // sdf\n    vec2 center = -1.+2.*uv;\n    center*=3.5;\n    float d = sdStar( center, 0.7, 5., .61 );\n    center.x +=1.5;\n    float left_star = sdStar(center, 0.7, 5., .61);\n    \n    center.x -=3.;\n    float right_star = sdStar(center, 0.7, 5., .61);\n    \n    vec3 col = (d>0.0) ? fragColor.xyz : vec3(1.,0.,0.);\n    col = (left_star>0.0)? col.xyz: vec3(1.,0.,0.);\n    col = (right_star>0.0)? col.xyz: vec3(1.,0.,0.);\n    \n    fragColor = vec4(col, 1.);\n\n    \n}\n\n\n\n\n","name":"Image","description":"","type":"image"}]}