{"ver":"0.1","info":{"id":"tdt3RX","date":"1569007868","viewed":1076,"name":"RetroWave","username":"StarikTenger","description":"RetroWave","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n// Normalized pixel coordinates (from 0 to 1)\nvec2 uv = fragCoord/iResolution.xy;\n\n// Time varying pixel color\nfloat x = fragCoord.x/100.0;\nfloat phase = iTime*1.0;\n\nfloat ass = 0.0;\nfloat arr[10];\n\narr[0] = -0.55;\narr[1] = 0.77;\narr[2] = 0.15;\narr[3] = -0.45;\narr[4] = -0.3;\narr[5] = 0.42;\narr[6] = 0.433;\narr[7] = -0.13;\narr[8] = 0.55;\narr[9] = 0.65;\n\nfor(float i=0.0; i<10.0; i+=1.0){\nfloat k = pow(2.0, i);\nass += sin(iTime + arr[int(i)] * x ) * sin((x+ arr[int(i)] * phase)*k/2.0) / k / 4.0;\n}\n\nvec3 col = vec3(sin(iTime), distance(vec2(0, 0), fragCoord)/500.0, 0);\n\nfloat val = 1.0- pow(abs(0.55 + sin(fragCoord.y*1.0 + 0.567)*0.05 - uv.y), 1.0) * (ass + 0.4)/(sin(iTime*2.0 + 1.11*x)*0.5+1.0)*32.0 ;\nfloat val1 = 1.0- pow(abs(0.5 + sin(fragCoord.y*1.123 + 1.111)*0.05 - uv.y), 1.0) * (ass + 0.4)/(sin(iTime*2.0 - 2.0*x)*0.5+1.0)*32.0 ;\nfloat val2 = 1.0- pow(abs(0.45 + sin(fragCoord.y*0.984 + 5.123)*0.05 - uv.y), 1.0) * (ass + 0.4)/(sin(iTime*5.1 - 0.67*x)*0.5+1.0) *32.0;\nif(val > 0.0 || val1 > 0.0 || val2 > 0.0){\ncol = vec3 (1.0 - val, 1.0 - val1, 1.0 - val2);\n}\nelse\ncol = vec3(0.0, 0.0, 0.0);\n\n// Output to screen\nfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}