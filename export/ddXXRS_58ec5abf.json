{"ver":"0.1","info":{"id":"ddXXRS","date":"1669113508","viewed":150,"name":"Rotation illusion __","username":"Envy24","description":"inspired by: https://bigblueboo.tumblr.com/tagged/illusion    no|rotation","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["sdf","illusion","square","rotation","l2"],"hasliked":0,"parentid":"DssGR2","parentname":"Square, Rectangle SDF L1,L2,Linf"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R                           iResolution\n#define SCENE_SCALE                 1.0\n#define TAU                         6.2831853071795862\n#define UNIT                      ( 2.5*SCENE_SCALE / R.y  )\n#define SMAA(x)                   ( smoothstep(UNIT, 0., x) )\n\nfloat squareSDF_L2(in vec2 NDC, in vec2 C, in float size, in float r, in float rad)\n{\n    float c = cos(rad), s = sin(rad);\n    vec2 P = abs(mat2(c, s, -s, c) * (NDC-C)) - size*0.5;\n    \n    return \n        (P.x > 0. && P.y > 0. ?\n            length(P) :\n            max(P.x, P.y)) - r;       \n}\n\n#define MOUSE_OFFSET ( iMouse.z > 0. ? iMouse.xy - iResolution.xy * 0.5 : vec2(0) )\nvec2 map_to_centered_ndc(in vec2 SC, in float scale, in vec2 origin, in bool mouse_drag)\n{\n    vec2 M = MOUSE_OFFSET * (mouse_drag == true ? 1. : 0.);\n    return ((2. * (SC - M) - iResolution.xy) / iResolution.y) * scale + origin;\n}\n\nvoid mainImage( out vec4 O, in vec2 SC )\n{\n    vec2 NDC = map_to_centered_ndc(SC, SCENE_SCALE, vec2(0), false);\n    vec3 color = vec3(1);    \n    float count = 64.,\n          da = TAU/count,\n          T = iTime*1.;\n    \n    for (float i = 0.; i < count; i += 1.)\n    //float k = 0.; for (float i = k; i < k+1.; i+= 1.) // shows only one square\n    {\n        float rad = TAU * 0.125 + i * da,               // static angle\n              s = (1. + sin(rad+T)) * 0.5,\n              size = 1.4*s,                             // dynamic square size\n              dist = squareSDF_L2(NDC, vec2(0), size, 0., rad);\n        \n        color = \n            i == 0. ?\n                mix(color, vec3(0), SMAA(abs(dist*0.5))) :\n                mix(color, vec3(0,0,1), SMAA(abs(dist)));           \n    }\n\n    O = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}