{"ver":"0.1","info":{"id":"XcyyWc","date":"1732460110","viewed":63,"name":"ProjetGLSL_1-AlexandreBOUDINAR","username":"Alexandre_bdr","description":"ProjetGLSL Fractale","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float M_PI = 3.14159265358979323846264338327950288;\n\nvec2 fc(vec2 z, vec2 c){\n    //(z.y*i + z.x)*(z.y*i + z.x)\n    //z.y²*(-1) 2*z.yi * z.x + z.x²\n    //2z.y * z.x * i + z.y²*(-1) + z.x²\n    vec2 result = vec2(-z.y*z.y + z.x*z.x, 2.0*z.y * z.x) + c;\n    return result;\n}\n\nvec2 rotate(vec2 v, float theta){\n    float x = v.x * cos(theta) - v.y * sin(theta);\n    float y = v.x * sin(theta) + v.y * cos(theta);\n    return vec2(x,y);\n}\n\nfloat Repeat(float t, float l)\n{\n    return clamp(t - floor(t / l) * l, 0.0, l);\n}\n\n// PingPongs the value t, so that it is never larger than length and never smaller than 0.\nfloat PingPong(float t, float l)\n{\n    t = Repeat(t, l * 2.0);\n    return l - abs(t - l);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 uv2 = fragCoord/iResolution.xy;\n    float zoom = 2.0;\n    vec2 center = vec2(-0.8,0);\n    vec2 scale = vec2(1.0,1.0) + vec2(PingPong(iTime/5.0,0.2),PingPong(iTime/5.0,0.2));\n    vec2 c = (uv-0.5) * zoom * scale;\n    c = center + c;\n    c = rotate(c,M_PI/2.0*iTime);\n    int maxIteration = 1000;\n    vec2 z = vec2(0.0);\n    bool isOnSet = true;\n    int iteration = 0;\n    for(int i=0; i<maxIteration; i++){\n        iteration = i;\n        z = fc(z,c);\n        if(length(z) > 2.0){\n            isOnSet = false;\n            break;\n        }\n        \n           \n    }; \n    float exposure = 70.0;\n    vec3 cola = texture(iChannel0,uv2).rgb;\n    vec3 colb = texture(iChannel1,uv2).rgb;\n    \n    \n    vec3 col = isOnSet ? colb : mix(cola,colb,float(iteration)/float(maxIteration)*exposure);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}