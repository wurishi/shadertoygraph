{"ver":"0.1","info":{"id":"WdVXDW","date":"1574084851","viewed":145,"name":"Highway To The Sun","username":"Soleam","description":"Rotation achieved","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["colors","rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define c0 vec3(1.,.81,.41)\n#define c1 vec3(1.,.64,.45)\n#define c2 vec3(.92,.4,.39)\n#define c3 vec3(.7,.16,.4)\n#define c4 vec3(.38,.06,.37)\n#define PI 3.1415926535897932384626433832795\n\nfloat getAngle(vec2 uv)\n{\n    float a = atan(uv.y,uv.x);\n    if(a<0.)\n    {\n        a = 2.*PI+a;\n    }\n    return a;\n}\nfloat clipAngle(float a)\n{\n    return mod(a,2.*PI);\n}\nfloat bar(vec2 uv, float a, float L, float R, float h)\n{\n    float angle = getAngle(uv);\n    float r = length(uv);\n    float radiusValue = (h-abs(R-r))/h;\n    float midAngle = 0.;\n    float angleValue = abs(a-angle);\n    if(angleValue>PI)\n    {\n        angleValue=2.*PI-angleValue;\n    }\n    \n    angleValue = smoothstep(0.,fwidth(angleValue),L-angleValue); \n    radiusValue = smoothstep(0.,fwidth(radiusValue),radiusValue); \n\t\n    return angleValue*radiusValue;\n    //return smoothstep(0.,.1,radiusValue);\n}\nfloat rond(vec2 uv, float R)\n{\n    float r = length(uv);\n    return smoothstep(0.,.05,(R-r)/R);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n   \n    \n    //first bar\n    float a1 = -iTime*6.;\n    float l1 = 2.;\n    float R1 = .25;\n    float h1 = .07;\n    \n   \tfloat alpha1 = bar(uv,clipAngle(a1),clipAngle(l1),R1,h1);\n    \n    //second bar\n    float a2 = iTime*4.;\n    float l2 = 1.5;\n    float R2 = .5;\n    float h2 = .14;\n    \n    float alpha2 = bar(uv,clipAngle(a2),clipAngle(l2),R2,h2);\n    \n    //third bar\n    float a3 = -iTime*2.;\n    float l3 = 1.;\n    float R3 = 1.;\n    float h3 = .32;\n    \n    float alpha3 = bar(uv,clipAngle(a3),clipAngle(l3),R3,h3);\n    \n    //center circle\n    float alpha4 = rond(uv,0.14);\n    \n    vec3 col = c1*alpha1+c2*alpha2+c3*alpha3+c0*alpha4;\n    \n    col+= (1.-alpha1 - alpha2 - alpha3 - alpha4)*c4;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}