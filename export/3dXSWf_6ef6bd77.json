{"ver":"0.1","info":{"id":"3dXSWf","date":"1552302413","viewed":142,"name":"Portfolio Shader 2","username":"LCVillafania23","description":"Clouds achieved through a combinations of random, noise, and a light blue background for the sky.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["clouds"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash(vec2 x){\n    const vec2 k = vec2(0.3183099, 0.3678794);\n    x = x * k + k.yx;\n    return -1.0 + 2.0 * fract(16.0 * k * fract(x.x * x.y * (x.x + x.y)));\n}\n\nfloat gnoise( in vec2 p){\n    vec2 i = floor(p);\n    vec2 f = fract(p);\n\t\n\tvec2 u = f * f *(3.0 - 2.0 * f);\n\n    return mix(mix(dot(hash(i + vec2(0.0,0.0)), f - vec2(0.0,0.0)), \n                     dot( hash(i + vec2(1.0,0.0)), f - vec2(1.0,0.0)), u.x),\n                mix( dot( hash(i + vec2(0.0,1.0)), f - vec2(0.0,1.0)), \n                     dot( hash(i + vec2(1.0,1.0)), f - vec2(1.0,1.0)), u.x), u.y);\n}\n\nfloat random(in vec2 uv) {\n    return fract(sin(dot(uv.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat noise(in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + \n            (c - a) * u.y * (1.0 - u.x) + \n            (d - b) * u.x * u.y;\n}\n\n#define OCTAVES 8\nfloat fbm (in vec2 uv) {\n    float value = 0.0;\n    float amplitude = .5;\n    float frequency = 0.;\n    \n    for (int i = 0; i < OCTAVES; i++) {\n        value += amplitude * noise(uv);\n        uv *= 2.;\n        amplitude *= .5;\n    }\n    return value;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float ratio = iResolution.x / iResolution.y;\n    \n    vec3 white = vec3(1.0, 1.0, 1.0);\n    vec3 blue = vec3(0.3, 0.5, 1.0);\n\n    float offset = gnoise(uv + iTime / 6.0);\n\n    vec3 clouds = vec3(fbm((uv) * 5.0)) * 0.3;\n    vec3 finalColor = mix(blue, white, smoothstep(0.0 - offset, 0.4 - offset, clouds) - smoothstep(0.5 - offset, 0.7 - offset, clouds));\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}