{"ver":"0.1","info":{"id":"DsdBRH","date":"1696863588","viewed":159,"name":"3d worley noise","username":"Mik0","description":"An efficient worley function.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["noise","worley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Feel free to copy all functions used. No credits are needed.\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy + p3.yxx)*p3.zyx);\n\n}\n\nfloat worley(vec3 p)\n{\n    float finalDist = 9999999.0;\n    for(int x = -1; x <= 1; x++)\n    {\n        for(int y = -1; y <= 1; y++)\n        {\n            for(int z = -1; z <= 1; z++)\n            {\n                vec3 offset = vec3(x, y, z);\n                float dist = distance(p, floor(p)+offset+hash33(floor(p)+offset));\n                finalDist = min(finalDist, dist);\n            }\n        }\n    }\n   return finalDist;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Pixel coordinates\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n\n    // Output to screen\n    fragColor = vec4(vec3(1.0-worley(vec3(uv*16.0, 0)+iTime)),1.0);\n}","name":"Image","description":"","type":"image"}]}