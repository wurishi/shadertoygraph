{"ver":"0.1","info":{"id":"ttXXDX","date":"1564473582","viewed":1049,"name":"simple smooth circle","username":"gcj2450","description":"draw a simple circle","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circlelenght"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uv,circle pos , circle radius,circle edge feather\nfloat circle(vec2 uv,vec2 pos,float radius,float feather)\n{\n    vec2 uvDist=uv-pos;\n    return 1.0-smoothstep(radius-feather,radius+feather, length(uvDist));\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n  return length(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\tcol+=circle(uv,vec2(0.5,0.5),0.2,0.002);\n    \n    col*=vec3(sdCircle( uv-vec2(0.7,0.8), 0.1 ));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}