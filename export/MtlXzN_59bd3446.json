{"ver":"0.1","info":{"id":"MtlXzN","date":"1435062415","viewed":245,"name":"Study IQ's 2D Deformation Effect","username":"tyleeer","description":"Explore different mapping between two 2D parameter spaces","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"\n// multply two complex number\nvec2 mul(vec2 a,vec2 b) {\n    return vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\n\n/* NO RECURSION...\nvec2 power(vec2 a, int n) {\n\tif (n == 0)\n        return vec2(1.0,0.0);\n    else if (mod(float(n),2.0) == 0.0)\n        return mul(power(a,n/2),power(a,n/2));\n    else \n        return mul(power(a,n-1),a); \n}\n*/\n\nvec2 power(vec2 a, int n) {\n \n    vec2 result = vec2(1.0,0.0);\n    for (int i = 0; i < 10000; i++) {\n        if (i >= n) {\n        \tbreak;    \n        }\n    \tresult = mul(result,a);\n\n    }\n    return result;\n}\n\n// This is a parameter mapping\n// p -> q\nvec2 G(vec2 p) {\n    vec2 q;\n    \n    // Identity mapping\n    q.x = p.x;\n    q.y = p.y;\n    \n    // radiant\n    q.x = p.x/length(p);\n    q.y = p.y/length(p);\n    \n    // treat p as 2D complex number\n    //q.x = mul(p,p).x;\n    //q.y = mul(p,p).y;\n   \n    // power in complex arithmetic\n    //q.x = power(p,2).x;\n    //q.y = power(p,2).y;\n    \n    return q;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    p.y = 1.0-p.y;\n    p = 1.0-2.0*p;\n    \n    vec2 q = G(p);\n    \n    fragColor = texture(iChannel0,q);\n\t\n}","name":"","description":"","type":"image"}]}