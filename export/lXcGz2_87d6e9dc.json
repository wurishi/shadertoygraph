{"ver":"0.1","info":{"id":"lXcGz2","date":"1716749516","viewed":52,"name":"tapir2342: Blubb","username":"tapir2342","description":"Polar","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["atan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float rad) {\n    return mat2(-sin(rad), cos(rad), cos(rad), sin(rad));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n    uv *= rot(iTime *.3);\n    float a = atan(uv.x, uv.y);\n    float f = cos(a * 5. + iTime) * sin(a * 3.) * .4 + .1;\n\n    vec3 col = vec3(0);\n    // Old version:\n    // col += smoothstep(f - 0.005, f + 0.005, 1. - length(uv * 4.));\n  \n    // Version based on input from Fabrice (thanks!):\n    float v = 1. - length(uv * 4.) - f;\n    col += smoothstep(-1., 1., v / fwidth(v));\n\n    fragColor = vec4(1. - col, 1.0);\n}","name":"Image","description":"","type":"image"}]}