{"ver":"0.1","info":{"id":"3tlXR8","date":"1562063453","viewed":408,"name":"Alpha Levels Transition","username":"nebbul","description":"A more pleasing way to transition between textures or simply useful to fade things in / out.\n\nBest results if fade mask is in a linear color space. Could also use mathematical noise instead of a texture.\n\nHardness controlled by alphaRange.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["transition","alpha","levels","clipping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// hardness of alpha clipping\n// lower = harder edge\n// higher = softer edge\n#define AlphaRange 0.2f\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    // define the UVs, make them square by using the same iRes dimension\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n    \n    // color textures\n    vec4 clrA = texture(iChannel0, uv);\n    vec4 clrB = texture(iChannel1, uv);\n    \n    // fade mask\n    vec4 alphaTex = texture(iChannel2, uv);\n    float a = alphaTex.r;\n    \n    float myAlpha = (sin(iTime) + 1.) / 2.; // set this to fade the alpha (0-1)\n    float alphaStart = mix(0., 1. + AlphaRange, myAlpha);\n\tfloat aMin = alphaStart - AlphaRange;\n    float aMinRangInv = 1.0 / AlphaRange;\n\n\ta = a * aMinRangInv + (-aMin * aMinRangInv);\n\tfloat alpha = clamp(a, 0., 1.);\n\n    fragColor = mix(clrA, clrB, alpha);\n}","name":"Image","description":"","type":"image"}]}