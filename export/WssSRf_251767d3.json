{"ver":"0.1","info":{"id":"WssSRf","date":"1551788432","viewed":202,"name":"Lorem ipsum","username":"postrediori","description":"A text rendering study using the font texture.\n\nP.S. Widths of characters should be taken into account to make pretty output.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["texture","font","loremipsum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iFont iChannel0\n\nint GetPhrase(int idx)\n{\n    // ASCII codes of 'Lorem ipsum'\n    const int phraseLen = 445;\n    const int phraseCodes[445] = int[445](\n        76, 111, 114, 101, 109, 32, 105, 112, 115, 117, 109, 32,\n        100, 111, 108, 111, 114, 32, 115, 105, 116, 32, 97, 109,\n        101, 116, 44, 32, 99, 111, 110, 115, 101, 99, 116, 101,\n        116, 117, 114, 32, 97, 100, 105, 112, 105, 115, 99, 105,\n        110, 103, 32, 101, 108, 105, 116, 44, 32, 115, 101, 100,\n        32, 100, 111, 32, 101, 105, 117, 115, 109, 111, 100, 32,\n        116, 101, 109, 112, 111, 114, 32, 105, 110, 99, 105, 100,\n        105, 100, 117, 110, 116, 32, 117, 116, 32, 108, 97, 98,\n        111, 114, 101, 32, 101, 116, 32, 100, 111, 108, 111, 114,\n        101, 32, 109, 97, 103, 110, 97, 32, 97, 108, 105, 113, 117,\n        97, 46, 32, 85, 116, 32, 101, 110, 105, 109, 32, 97, 100,\n        32, 109, 105, 110, 105, 109, 32, 118, 101, 110, 105, 97,\n        109, 44, 32, 113, 117, 105, 115, 32, 110, 111, 115, 116,\n        114, 117, 100, 32, 101, 120, 101, 114, 99, 105, 116, 97,\n        116, 105, 111, 110, 32, 117, 108, 108, 97, 109, 99, 111,\n        32, 108, 97, 98, 111, 114, 105, 115, 32, 110, 105, 115,\n        105, 32, 117, 116, 32, 97, 108, 105, 113, 117, 105, 112,\n        32, 101, 120, 32, 101, 97, 32, 99, 111, 109, 109, 111,\n        100, 111, 32, 99, 111, 110, 115, 101, 113, 117, 97, 116,\n        46, 32, 68, 117, 105, 115, 32, 97, 117, 116, 101, 32, 105,\n        114, 117, 114, 101, 32, 100, 111, 108, 111, 114, 32, 105,\n        110, 32, 114, 101, 112, 114, 101, 104, 101, 110, 100, 101,\n        114, 105, 116, 32, 105, 110, 32, 118, 111, 108, 117, 112,\n        116, 97, 116, 101, 32, 118, 101, 108, 105, 116, 32, 101,\n        115, 115, 101, 32, 99, 105, 108, 108, 117, 109, 32, 100,\n        111, 108, 111, 114, 101, 32, 101, 117, 32, 102, 117, 103,\n        105, 97, 116, 32, 110, 117, 108, 108, 97, 32, 112, 97, 114,\n        105, 97, 116, 117, 114, 46, 32, 69, 120, 99, 101, 112, 116,\n        101, 117, 114, 32, 115, 105, 110, 116, 32, 111, 99, 99, 97,\n        101, 99, 97, 116, 32, 99, 117, 112, 105, 100, 97, 116, 97,\n        116, 32, 110, 111, 110, 32, 112, 114, 111, 105, 100, 101,\n        110, 116, 44, 32, 115, 117, 110, 116, 32, 105, 110, 32, 99,\n        117, 108, 112, 97, 32, 113, 117, 105, 32, 111, 102, 102,\n        105, 99, 105, 97, 32, 100, 101, 115, 101, 114, 117, 110,\n        116, 32, 109, 111, 108, 108, 105, 116, 32, 97, 110, 105,\n        109, 32, 105, 100, 32, 101, 115, 116, 32, 108, 97, 98, 111,\n        114, 117, 109, 46);\n    return phraseCodes[idx];\n}\n\n// Get coordinates of a character 'ord' in the font texture\nfloat Character(vec2 uv, int ord)\n{\n    vec2 cc = trunc(vec2(ord % 16, 15 - ord / 16))/16.\n        + fract(uv) / 16.;\n    \n    return texture(iFont, cc).a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = .5+(fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    // Size of the text grid\n    int iGridSize = int(12.5 + sin(iTime) * 3.);\n    float gridSize = float(iGridSize);\n    \n    // Convert screen coordinate to linear text position\n    ivec2 iuv = ivec2(uv * gridSize);\n    int idx = iuv.x + (iGridSize - 1 - iuv.y) * iGridSize;\n    \n    // Get ASCII code of a character at the position idx\n    int ord = GetPhrase(idx);\n            \n    // Draw only in a square in the screen center\n    float viewport = step(abs(uv.x-.5),.5);\n    \n    // Get pixel of a letter\n    uv *= gridSize;\n    \n    float letter = Character(uv, ord) * viewport;\n    \n    // smoothstep adjusts weight\n    vec3 col = smoothstep(1.2*gridSize/iResolution.y,0.,letter-.5)\n        * vec3(viewport);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}