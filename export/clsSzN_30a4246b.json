{"ver":"0.1","info":{"id":"clsSzN","date":"1674412783","viewed":60,"name":"Some paint program","username":"ianertson","description":"Paint program","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["paint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col =  texture(iChannel0, uv).rgb;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float snap(float v, float w) {\n    return ceil(v / w) * w;\n}\n\nvec2 snap(vec2 v, vec2 w) {\n    return vec2(snap(v.x, w.x), snap(v.y, w.y));\n}\n\nfloat circle(vec2 fc, vec2 pos) {\n    float dist = distance(fc, pos);\n    float radius = 3.5;\n    float feather = radius*0.2;\n    \n    return 1.0 - smoothstep(radius-feather, radius+feather, dist);\n}\n\nvec4 getFakeMouse() {\n    float rnd1 = fract(tan(iTime*3.32891)) * 10.0;\n    vec2 dir = (vec2(cos(rnd1*iTime), sin(rnd1*iTime)));\n    vec2 pos = iResolution.xy * 0.5;\n    float rnd = fract(sin(iTime*3.0)*tan(dir.x + dir.y) * 10.0) * 10.0;\n    dir *= cos(rnd1) * rnd1;\n    return vec4(pos + (dir * (iResolution.xy/3.0)), float(sin(iTime*0.5) > 0.25 || rnd > 0.5), 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 old = texture(iChannel0, uv).rgb;\n    vec4 m = iMouse.z > 0.01 ? iMouse : getFakeMouse();\n    vec2 offset = ((1.0 / 60.0) * vec2(cos(old.x*60.0), sin(old.y*60.0)) * float(length(old) > 0.001));\n    offset *= float(m.z < 0.01);\n    \n    \n    uv += offset * 0.1;\n    \n    old = texture(iChannel0, uv).rgb;\n    vec3 col = old*1.1;\n    \n    \n    \n    if (m.z > 0.01) {\n        vec2 pos = m.xy;\n        pos = snap(pos, vec2(16.0));\n        col += vec3(cos(iTime*60.0), sin(iTime*60.0), 1.0)*circle(fragCoord, pos);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}