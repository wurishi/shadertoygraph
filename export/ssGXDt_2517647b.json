{"ver":"0.1","info":{"id":"ssGXDt","date":"1635562106","viewed":76,"name":"Polar Pattern ","username":"Silas_Wang","description":"Watched BigWIngs Space GIF video and tested on polar coordinate.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// modification based on BigWIngs shader\n// https://www.shadertoy.com/view/wdlGRM\n\n#define PI 3.1415926535\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord.xy-iResolution.xy*.5)/iResolution.y;\n\t\n    uv *= 10.;\n    \n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv) * 2.;\n    \n    // convert to polar coordinate\n    vec2 gv = mod(vec2(angle, radius), PI/3.); \n\tvec2 id = floor(vec2(angle, radius)/PI/1.) ;\n    \n\tfloat m = 0.;\n    float t;\n    for(float y=-1.; y<=1.; y++) {\n    \tfor(float x=-1.; x<=1.; x++) {\n            vec2 offs = vec2(x, y);\n            t = -iTime+length(id.y)*.2+4.; \n            float r = mix(.45, 2., sin(t)*.5+.5);\n    \t\tfloat c = smoothstep(r, r*.9, length(gv+offs));\n    \t\tm = m*(1.-c) + c*(1.-m);\n        }\n    }\n       \n    \n    fragColor = vec4(m );\n}\n","name":"Image","description":"","type":"image"}]}