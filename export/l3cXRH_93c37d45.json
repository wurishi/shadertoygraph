{"ver":"0.1","info":{"id":"l3cXRH","date":"1718604632","viewed":38,"name":"bae #020 ~ Geometric Ascent","username":"BretHudson","description":"Climb the mountain","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    uv *= 3.;\n    \n    vec3 col = vec3(0);\n    \n    float y = 1. - fract(uv.y) * .5;\n    y -= floor(uv.y) * 1.;\n    float d = abs(uv.x) - y - .5;\n    d = smoothstep(.01, .0, d);\n    \n    if (abs(uv.x) - .5 < y)\n        col += vec3(0.176,0.690,0.110) + floor(uv.y + 3.) * .13;\n    else\n    {\n        float bands = 7.;\n        float offset = sin(iTime + ceil(uv.x / 3.)) * 20.;\n        float alpha = floor((fragCoord.y - floor(uv.x / 3.) * 50. + offset) / iResolution.y * (bands - 3.)) / bands;\n        alpha *= .7;\n        alpha += .5;\n        col = vec3(0.224,0.498,0.753) * alpha;\n    }\n    \n    vec2 gv = 1. - fract(uv * 1.5 - iTime * .5 * vec2(-1., .5)) * .5;\n    if (max(gv.x / gv.y, gv.y) > 1.)\n        col += vec3(0.918,0.612,0.325) * .2 * d;\n    \n    float circle = length(uv + vec2(3.25, 3. + sin(iTime * 1.7 + 3.) * .15)) - 2.5;\n    circle = min(circle, length(uv + vec2(.75, 3.5 + sin(iTime) * .1)) - 2.);\n    circle = smoothstep(.01, .0, circle);\n    col += circle * .3;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}