{"ver":"0.1","info":{"id":"4l23Dw","date":"1429571295","viewed":778,"name":"Clarity","username":"brainfucker","description":"looks like clarity but texture bias used instead of blur","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["simpleclarityemulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 xy = vec2(uv.x,1.0-uv.y);\n\t\n\tfloat clarity = (3.0*sin( iTime ));\n\t\n    vec3 col1 = texture( iChannel0, xy).rgb;\n    vec3 col2 = texture( iChannel0, xy, abs(clarity)).rgb;\n\t\n    if (clarity > 0.0) {\n\t\tfragColor = vec4( (col1 + col2)/2.0, 1.0 ); // -clarity\n    } else {\n    \tfragColor = vec4( col1 * 2.0 - col2, 1.0 ); // -clarity\n    }\n}","name":"","description":"","type":"image"}]}