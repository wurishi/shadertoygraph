{"ver":"0.1","info":{"id":"MXSSz3","date":"1710859514","viewed":34,"name":"frist test","username":"ckarakas","description":"This is my frist test.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    //Hash\n    //float h = fract(sin(uv.x*54.3)*3.3);\n    //float rand = fract (sin(dot(floor(uv.xy),vec2(12.9898,74.233))));\n    \n//couleur     \n    vec3 rouge = vec3(0.0,1.0,2.0);\n    vec3 vert = vec3(2.0,0.0,1.0);\n    \n    vec3 c1 = vec3(0.0,1.0,1.0);\n    vec3 c2 = vec3(1.0,0.0,0.0);\n    \n//forme general\n    //uv.x += sin(iTime+uv.y*10.)*.1;\n    vec3 couleur = (mix(rouge,vert,uv.x))+iTime/2.+\n    cos(length (uv.y*4.)) +\n    step(length(uv),4.)+\n    \n    tan(length (uv.x/2. + fract(cos(iTime/15.)))) ;\n   \n    \n// finition ? \n    couleur = fract(couleur+iTime) ;\n    \n   \n // test des differents calcules\n    float a = sin(uv.x*100.);\n    float b = step (uv.x,0.5);\n    float c = floor(uv.x*10.)/10.;\n    float d = ((floor(uv.y*10.)/10.)+ ((floor(uv.x*10.)/10.)*.4));\n    float e = abs(uv.x*2.0-1.0);\n    float f = fract(uv.x*10.);\n    \n    float size = 0.2 + sin(iTime*5.0)*0.1;\n    float g = step (uv.x, size) * step (uv.y,size);\n    \n    float h = length(uv.y);\n    h = fract(h+iTime);\n    h = step (h, 0.5 );\n    \n    float i = cos(abs (uv.x*2.));\n\n    \n    \n    // Time varying pixel color\n// affichage du resultats\n    vec3 col = vec3 (couleur);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}