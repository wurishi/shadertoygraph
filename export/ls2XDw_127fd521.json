{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"mat3 worldRotation() {\n\tfloat xang = iTime * 0.5;\n    float yang = iTime * 0.0;\n    float zang = iTime * 0.5;\n    \n\tmat3 zrot = mat3(\n    \tcos(zang), -sin(zang), 0.0,\n        sin(zang), cos(zang), 0.0,\n        0.0, 0.0, 1.0);\n    \n    mat3 yrot = mat3(\n        cos(yang), 0.0, -sin(yang),\n        0.0, 1.0, 0.0,\n        sin(yang), 0.0, cos(yang));\n\n    mat3 xrot = mat3(\n        1.0, 0.0, 0.0,\n        0.0, cos(xang), -sin(xang),\n        0.0, sin(xang), cos(xang));\n    \n    return zrot * yrot * xrot;\n}\n\nvec3 viewToWorld(vec3 pos) {\n\tvec3 world = worldRotation() * pos;\n    world.z += iTime * 10.0;\n    return world;\n}\n\nvec3 worldToView(vec3 pos) {\n\tvec3 view = pos;\n    view.z -= iTime * 10.0;\n\treturn view * worldRotation();\n}\n\nvec2 dist(vec3 pos) {\n\tpos = viewToWorld(pos);\n    \n    float len = length(pos.xy);\n    float tun = len - 6.0;\n    \n    float theta = atan(pos.y, pos.x) * 20.0;\n    float phi =  (pos.z + theta) * 0.5;\n    \n    float disp = sin(phi) * sin(pos.z);\n    \n    float damp = pow(1.0 / (1.0 + abs(pos.z) * 0.1), 1.0);\n\n    tun += disp * (1.0 - damp);\n    \n    return vec2(tun,disp);\n}\n\nvec2 trace(vec3 ray) {\n    float t = 0.0;\n    vec2 disp;\n    for(int i = 0; i < 16; ++i){\n        disp = dist(ray * t);\n        t += abs(disp.x) * 0.5;\n    }\n    return vec2(t, disp.y);\n}\n\nvec3 normal(vec2 coord) {\n\tvec3 ray = vec3(coord.xy, 1.0);\n    float delta = 1.0 / iResolution.x;\n    \n    vec3 rhl = normalize(ray + vec3(-delta, 0.0, 0.0));\n    vec3 hl = rhl * trace(rhl).x;\n    \n    vec3 rhr = normalize(ray + vec3(delta, 0.0, 0.0));\n    vec3 hr = rhr * trace(rhr).x;\n    \n    vec3 rvl = normalize(ray + vec3(0.0, -delta, 0.0));\n    vec3 vl = rvl * trace(rvl).x;\n    \n    vec3 rvr = normalize(ray + vec3(0.0, delta, 0.0));\n    vec3 vr = rvr * trace(rvr).x;\n    \n    return normalize(cross(hr-hl, vr-vl));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 coord = (fragCoord.xy + 0.5) / iResolution.xy * 2.0 - 1.0;\n    coord.y *= iResolution.y / iResolution.x;\n    vec3 eye = normalize(vec3(coord.xy, 1.0));\n\n    vec2 alpha = trace(eye);\n    vec3 norm = normal(coord);\n    \n    vec3 view = eye * alpha.x;\n    vec3 world = viewToWorld(view);\n    \n    vec3 lighting = vec3(0.1,0.1,0.1);\n    vec3 glow = vec3(0.0,0.0,0.0);\n    \n    for (int i=-1; i<2; ++i) {\n        float lang = world.z * 0.5 + iTime * 3.0;\n        vec3 lpos = vec3(cos(lang)*sin(lang*2.0), sin(lang), 0.0) * 3.0;\n        float lightz = (floor(world.z/50.0)+float(i))* 50.0;\n        vec3 light = vec3(lpos.x, lpos.y, lightz);\n        vec3 surfaceToLight = light - world;\n        float lightDist = dot(surfaceToLight, surfaceToLight);\n        surfaceToLight = normalize(surfaceToLight);\n        float shine = 1.0 / (1.0 + lightDist * 0.01);\n        vec3 ref = surfaceToLight - 2.0 * norm * dot(surfaceToLight, norm);\n\n\t\tvec3 lcol = vec3(cos(world.z+iTime), sin(world.z), cos(world.z)) * 0.5 + 0.5;\n        \n        float spec = pow(0.3 + max(dot(eye, -ref),0.0), 8.0);\n        vec3 diff = vec3(sin(world.x), cos(world.x), sin(world.x)) * 0.5 + 0.5;\n        diff *= alpha.y * 0.5 + 0.5;    \n        \n        lighting += (diff + spec) * lcol * shine;\n        \n        vec3 viewLight = worldToView(light);\n        if (viewLight.z > 0.0) {\n            viewLight /= viewLight.z;\n            vec2 orbdiff = coord - viewLight.xy;\n        \tfloat dist = dot(orbdiff, orbdiff);\n        \tfloat orb = 1.0 / (1.0 + dist * 100.0);\n            orb = pow(0.1 + orb, 4.0);\n        \tglow += orb * lcol;\n        }\n    }\n    \n    float fog = 1.0 / (1.0 + alpha.x * 0.1);\n   \n    vec3 col = clamp(lighting * fog + glow, 0.0, 1.0);\n    \n\tfragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ls2XDw","date":"1412865870","viewed":862,"name":"ShaderToyTest","username":"dila","description":"A test shader :)","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}