{"ver":"0.1","info":{"id":"X32XWK","date":"1724630541","viewed":19,"name":"cy_simle_linear_background","username":"cyj1116","description":"linear_background","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["linearbackground"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\nvec2 within(vec2 uv, vec4 rect) {\n    return (uv - rect.xy) / (rect.zw - rect.xy);\n}\n\nvec4 oval (vec2 uv) {\n    uv -= .5;\n    \n    vec4 col = vec4(1., 1., 1., 1.);\n    \n    float d = length(uv);\n    col.a = S(3., .1, d);\n    return col;\n}\n\nvec4 circle(vec2 uv) {\n    vec4 col = vec4(0.);\n    \n    uv.x = abs(uv.x);\n    float m = iMouse.x / iResolution.x / 10.;\n    vec4 o = oval(within(uv, vec4(-.7-m*5., -.5-m*5., .7+m*5., -.1+m*5.)) );\n    \n    \n    col = mix(col, o, o.a);\n    \n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float m = sin(iTime) / 5.;\n\n    uv.y+=2.;\n    uv.y-=m*15.;\n    //-0.5 - 0.5\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Output to screen\n    fragColor = circle(uv);\n}","name":"Image","description":"","type":"image"}]}