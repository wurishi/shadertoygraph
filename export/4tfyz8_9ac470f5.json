{"ver":"0.1","info":{"id":"4tfyz8","date":"1503852478","viewed":425,"name":"wormhole","username":"kylejensen","description":"planedistortion","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","planedistortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t// normalized coordinates (-1 to 1 vertically)\n    vec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n\n    // angle of each pixel to the center of the screen\n    float a = atan(p.y,p.x);\n\n    // cylindrical tunnel\n    float r = length(p);\n    \n    // index texture by (animated inverse) radius and angle\n    vec2 uv = vec2( 0.3/r + 0.2*iTime, a/3.14 );\n\n    vec2 uv2 = vec2( uv.x, atan(p.y,abs(p.x))/3.14 );\n    vec3 col = textureGrad( iChannel0, uv, dFdx(uv2), dFdy(uv2) ).xyz;\n    \n    // darken at the center    \n    col = col*r;\n    \n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}