{"ver":"0.1","info":{"id":"NdsyD7","date":"1642187045","viewed":735,"name":"Basic Dithering","username":"fydrenak","description":"Applying a simple dithering approximation to iChannel0.","likes":6,"published":1,"flags":0,"usePreview":1,"tags":["dither","colour","1bit"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float getMat2(vec2 uv) {\n    int ix = int(uv.x) % 4;\n    int iy = int(uv.y) % 4;\n    \n    mat4x4 vals = mat4x4(\n        0.,  8.,  2.,  10.,\n        12., 4.,  14., 6.,\n        3.,  11., 1.,  9.,\n        15., 7.,  13., 5.\n    ) / 16.;\n    \n    return vals[ix][iy];\n}\n\n//Alternative smaller matrix\nfloat getMat(vec2 uv) {\n    int ix = int(uv.x) % 3;\n    int iy = int(uv.y) % 3;\n    \n    mat2x2 vals = mat2x2(\n        0., 3., 2., 1.\n    ) / 4.;\n    \n    return vals[ix][iy];\n}\n\nvec3 dither(vec2 uv, vec3 col) {\n    float m = getMat(uv);\n    \n    return vec3(\n        col.r > m ? 1. : 0.,\n        col.g > m ? 1. : 0.,\n        col.b > m ? 1. : 0.\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = abs(sin(iTime * 0.1 + 3.1415/2.));\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv * scale).rgb;\n    \n    vec3 r = dither(fragCoord * scale, col);\n    \n    fragColor = vec4(r, 1.0);\n}","name":"Image","description":"","type":"image"}]}