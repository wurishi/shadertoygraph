{"ver":"0.1","info":{"id":"lcVGRd","date":"1713185716","viewed":104,"name":"Text spoiler effect","username":"terrysahaidak","description":"Text spoiler effect based on https://www.shadertoy.com/view/NssBWS","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["textspoiler"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\n\n// #define SCALE\n#define SCALE * .5\n#define SPEED * hex(17.)\n#define AA 4\n#define DENSITY 16 /* out of 256 */\n\n// #define crop\n\n#define LINE_WIDTH 500.0\n#define LINE_HEIGHT 40.0\n#define EDGE_X 40.0\n#define EDGE_Y 40.0\n\nfloat hex(in float v) {\n    return v / 256.0;\n}\n\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p){\n    vec2 ip = floor(p);\n    vec2 u = fract(p);\n    u = u*u*(3.0-2.0*u);\n\n    float res = mix(\n        mix(rand(ip),rand(ip+vec2(1.0,0.0)),u.x),\n        mix(rand(ip+vec2(0.0,1.0)),rand(ip+vec2(1.0,1.0)),u.x),u.y);\n    return res*res;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float s = min(iResolution.x, iResolution.y);\n    float si = 1.0 / s;\n\n    float aa_off = 0.0;\n    vec4 col = vec4(0.);\n    for (int aa = 0; aa < AA; aa++) {\n        vec2 uv = (fragCoord + fract(vec2(hex(160. + 5.), hex(80. + 9.)) * aa_off)) * si;\n        aa_off += 1.0;\n        float vy = 0.0;\n        float vd = hex(176. + 3.);\n        vec2 pp = vec2(0.0);\n        float tt = iTime SPEED;\n        float h1 = hex(96. + 1.);\n        float h2 = hex(24. + 13.);\n        for (int i = 0; i < DENSITY; i++) {\n            vy = fract(vy + vd);\n            tt += vy;\n            float py = trunc(fract(uv.y - (vy - .5) * tt) * s SCALE);\n            float vx = fract(py * h1);\n            float px = trunc(fract(uv.x - (vx - .5) * (tt + py)) * s SCALE);\n            if (vy == fract(px * h2))\n                pp = vec2(px, py);\n        }\n\n        float midY = iResolution.y * 0.5;\n        float edgeSoftnessY = 10.0 + noise(fragCoord * 0.1) * EDGE_Y; // Noise-modulated edge softness\n        float edgeSoftnessX = 20.0 + noise(fragCoord * 0.1) * EDGE_Y; // Noise-modulated edge softness\n        float alphaY = smoothstep(midY - LINE_HEIGHT / 2.0 - edgeSoftnessY, midY - LINE_HEIGHT / 2.0, fragCoord.y) *\n                       (1.0 - smoothstep(midY + LINE_HEIGHT / 2.0, midY + LINE_HEIGHT / 2.0 + edgeSoftnessY, fragCoord.y));\n        float alphaX = smoothstep((iResolution.x - LINE_WIDTH) * 0.5 - edgeSoftnessX, (iResolution.x - LINE_WIDTH) * 0.5, fragCoord.x) *\n                       (1.0 - smoothstep((iResolution.x + LINE_WIDTH) * 0.5, (iResolution.x + LINE_WIDTH) * 0.5 + edgeSoftnessX, fragCoord.x));\n        \n        col.a += 1.0;\n        if (pp != vec2(0.0)) {\n            float dotAlpha = alphaY * alphaX;\n            col.rgb += vec3(1.0, 1.0, 1.0) * dotAlpha;\n        }\n    }\n\n    fragColor = vec4(col.rgb / col.a, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}