{"ver":"0.1","info":{"id":"tttfW7","date":"1612890946","viewed":92,"name":"Mandelbrot time iterations","username":"ptemoche","description":"I testing with fractals, today tested with mandelbrot.\nI used the palette color function from https://iquilezles.org/articles/palettes/palettes.htm","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot","iterations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/palettes\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat mandelbrot(vec2 uv){\n    \n    float iterations = 100.*(sin(iTime*0.5)*0.5+0.5);\n    vec2 st = vec2(0.);\n    for(float i = 0. ;i < iterations;++i){\n        //zn = (zn-1)^2+c\n        \n        //(a+bi)^2 = a^2+(bi)^2 + 2.0*a*bi\n        st = uv+vec2(st.x*st.x-st.y*st.y,2.0*st.x*st.y);\n        if(length(st)>4.)\n            return i/iterations;\n    \n    }\n    return 1.0;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.5*(fragCoord-iResolution.xy*0.5)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 1.0-palette(mandelbrot(uv),vec3(0.5),vec3(0.5),vec3(1.0),vec3(0.,0.1,0.2));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}