{"ver":"0.1","info":{"id":"WdjfDD","date":"1590083891","viewed":105,"name":"HaiYi Jelly","username":"PolyEDR","description":"medium 5 haiyi Jelly","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["cartoon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define maxstep 100\n#define maxl 100.\n#define minsr 0.01\n\nfloat makeface(vec2 uv){\n    vec2 eye = vec2(.15,.02);\n\tfloat deye = smoothstep(.04,.034,length(eye-vec2(abs(uv.x*1.5),uv.y*.8)));\n    float dmt =\tsmoothstep(.01,.01,(abs(7.*uv.x)-.5)*abs(7.*uv.x)-4.*uv.y-.13),\n        dmb = smoothstep(.05,.01,(abs(7.*uv.x)-.5)*abs(7.*uv.x)-4.*uv.y-.15),\n        dmouse = min(dmt,dmb);\n        dmouse = min(dmouse,step(abs(uv.x),.06));\n    \n    \n    return clamp(dmouse+deye,0.,1.);\n}\nfloat sm(float a,float b,float k)\n{\n    float h = clamp(.5+.5*(b-a)/k,0.,1.);\n    return h*a+(1.-h)*b-h*(1.-h)*k;\n}\nfloat GetDist(vec3 p){\n   \n \n vec2 offs= vec2(0);\n float ft =maxl\n     ,s=1.;\n    \n    float angle = 6.29/20.;\n\t  for(int i = 0;i<20;i++){\n        offs = vec2(cos(s*angle+iTime*1.5),sin(s*angle+iTime*1.5))*1.9;\n    ft = min(length(p+vec3(0,.3,0)+vec3(offs.x,0,offs.y))-.35,ft);\n          \n       s+=1.;\n    \n   }\n\tfloat sf = length(vec3(p.x,p.y*2.,p.z)+vec3(0.,-1.,0.))/2.-1.0;\n float d = sm(ft,sf,.2);\n    return d;\n\n}\n\nfloat RayMarch(vec3 ro ,vec3 rd){\n\tfloat ds,d0;\n    vec3 p;\n    for(int i = 0;i<maxstep;i++){\n    \tp = ro+rd*d0;\n        ds = GetDist(p);\n        if(d0>maxl || ds<minsr ) break;\n        d0 += ds;\n    }\n\treturn d0;\n}\n\n\nvec3 GetNormal(vec3 p) {\n\tfloat d = GetDist(p);\n    vec2 e = vec2(.01, 0);\n    \n    vec3 n = d - vec3(\n        GetDist(p-e.xyy),\n        GetDist(p-e.yxy),\n        GetDist(p-e.yyx));\n    \n    return normalize(n);\n}\n\nfloat GetLight(vec3 p,vec3 lightPos ) {\n    \n    \n    vec3 l = normalize(lightPos-p);\n    vec3 n = GetNormal(p);\n    \n    float dif = clamp(dot(n, l), 0., 1.);\n    \n    float d = RayMarch(p+n*minsr*2., l);\n    if(d<length(lightPos-p)) dif *= .1;\n    \n    return dif;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n\t\n    \n    vec3 col = vec3(0.1 + 0.1*uv.y);\n\t\n    float zoom = 1.0;\n    vec3 ro = vec3(0.,3.,6.)\n        +vec3(20.*(iMouse.x-.5*iResolution.x)/iResolution.x,0,-.5*(iMouse.y-.5*iResolution.y)/iResolution.y*10.),\n        \n        lookat = vec3(0.,0.,0.),\n        f = normalize(lookat - ro),\n        r = cross(vec3(0.,1.,0.),f),\n        u = cross(f,r),\n        c = ro+f*zoom,\n        i = c+uv.x*r+uv.y*u,\n        rd = normalize(i-ro);\n    \n    float d = RayMarch(ro,rd);\n    vec3 p = ro+rd*d;\n    vec3 l = vec3(2., 5., 4.);\n    float dif = GetLight(p,l);\n    float toon = smoothstep(.01,.2,dif);\n\tfloat  tex = smoothstep(.8,.79,p.y+.27);\n    vec3 n = GetNormal(p);\n    float rim = smoothstep(.6,.1,-dot(n,f));\n    float gx = atan(p.x*.4,p.z);\n    float gy = (p.y-.6)*.3;\n    float face = makeface(vec2(gx,gy));\n    \n    col += clamp(\n        \t\t(vec3(.5,.5,.8)*(1.-tex)\n                 +vec3(.5,.1,.3)*tex\n                 +dif*.5\n                 )*vec3(clamp(toon,.7,1.),clamp(toon,.5,1.),clamp(toon,.8,1.))\n                 -step(50.,length(p-ro))*10.\n                 +rim\n                 -face*1.\n                 ,0.,1.);\n    \n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}