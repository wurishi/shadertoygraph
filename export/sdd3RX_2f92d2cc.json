{"ver":"0.1","info":{"id":"sdd3RX","date":"1630391111","viewed":75,"name":"Newton cycle detection attempt","username":"neurofuzzy","description":"z^3-1 newton fractal","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","newton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nNewton's method fractal for z^3-1. The associated Julia set will have \nchaotic dynamics with some periodic motion. For example,\nz=(-1/8*(1+3i*sqrt(3/5)))^(1/3)=0.538609 - 0.417204i has cycle length 3,\nso newton(newton(newton(z)))=z.\n\nI use the tortoise and hare algorithm to find the period. It's not very \neffective because the root finding algorithm is very sensitive to initial\nconditions, so even if you start an epsilon from a periodic point you'll \nusually wind up in a basin of attraction. I need to think about how to do\nthis better.\n\nMaybe something with consideration from \nhttps://www.linkedin.com/pulse/detecting-periodic-orbits-mandelbrot-set-jos%C3%A9-celano-mart%C3%ADn?articleId=6712819138437402624\nbut there they care about periodicity in the attractors, here I want to \nfind some fun way of visualizing periodicity on the boundary.\n*/\nfloat cos01(float x) {\n    return 0.5*(1.0+cos(x));\n}\n\nvec2 newton(vec2 z) {\n    return vec2((2.0*z.x + (2.0*pow(z.x,2.0))/pow(pow(z.x,2.0) + pow(z.y,2.0),2.0) - 1.0/(pow(z.x,2.0) + pow(z.y,2.0)))/3.0,\n(2.0*z.y*(1.0 - z.x/pow(pow(z.x,2.0) + pow(z.y,2.0),2.0)))/3.0);\n}\nfloat dist2(vec2 a, vec2 b) {\n    return dot( a-b,a-b );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    int maxiter=1000;\n    \n    const float eps2=0.0;\n    const float periodthreshold2=0.1;\n    \n\tvec2 uv = (fragCoord.xy-iResolution.xy/2.0)/ iResolution.y ;\n    const float scaler=3.;\n    \n    vec2 tortoiseold=uv.xy*scaler;\n    vec2 tortoise=newton(tortoiseold);\n    vec2 hare=newton(tortoise); // Give the hare a head start\n    bool p=false; // true if a cycle is detected\n    \n    float i=0.0;\n    for(;i<float(maxiter) && dist2(tortoise,tortoiseold)>eps2;i++){\n        if(dist2(hare,tortoise)<periodthreshold2){\n            p=true;\n            break;\n        }\n        tortoiseold=tortoise;\n        tortoise=newton(tortoise);\n        hare=newton(newton(hare));\n    }\n    float pb=0.0;\n    if(p){\n        tortoise=newton(hare);\n        for(i=0.0;i<float(maxiter) && dist2(hare,tortoise)>periodthreshold2;i++){\n            tortoise=newton(tortoise);\n        }\n        if(i<0.5){\n            pb=0.0;\n        } else {\n            pb=1.0;\n        }\n    }\n\n    fragColor = vec4(pb,pb,pb,1.0)*vec4(1.0/i,1.0,1.0,1.0);\n}\n","name":"Image","description":"","type":"image"}]}