{"ver":"0.1","info":{"id":"Dd2fWR","date":"1689634651","viewed":113,"name":"Video Compression Detector","username":"Rugged","description":"Shows where the video is the most complex.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["video","filter","compression","detector"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat getGrad(vec2 u){\n    vec2 off = 1. / iResolution.xy;\n    vec2 right = vec2(off.x, 0.);\n    vec2 up = vec2(0., off.y);\n\n    /*\n    vec4 c1 = texture(iChannel0, u);\n    vec4 c2 = texture(iChannel0, u + right);\n    vec4 c3 = texture(iChannel0, u + up);\n    \n    \n    return length((c1 - c2) + (c1 - c3));\n    */\n    \n    // Following 4 lines from @Observer\n    vec4 c1 = texture(iChannel0, u);\n    vec4 c2 = dFdx(c1);\n    vec4 c3 = dFdy(c1);\n    return length(c2 + c3);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    \n    vec4 col = vec4(0.);\n\n    vec4 c1 = texture(iChannel0, uv);\n    \n    \n    col = c1;\n    \n    if(getGrad(uv) > 0.){\n        col *= 0.;\n    }\n    \n   \n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}