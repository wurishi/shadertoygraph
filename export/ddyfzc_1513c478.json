{"ver":"0.1","info":{"id":"ddyfzc","date":"1698445678","viewed":86,"name":"Lustre","username":"Elsio","description":"Próximo passo é colocar uma luz aí dentro, como fez o @BigWIngs","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["grid","volumetric","glass","cristal","structure"],"hasliked":0,"parentid":"mdyBz3","parentname":"Vidro"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define ROTATE(p) p.yz *= rot(t), p.xy *= rot(t), p.zy *= rot(t * 3.),\n#define COLOR(i, d) o +=  .004 / exp(250. * d), d < .2 && fract(sin(t * 2.)) < .3? o.br += .2 / i,o.bg += .2 / i: o.bg;\n#define SCREEN vec2 r = iResolution.xy; u = (u - r.xy / 2.) / r.y; o -= o;\n#define grid(p) p.xy = length(p.xy) * cos(asin(sin(atan(p.y, p.x) * 6.) * .9) / 3. + vec2(0, 33.)), p.x -= 1.25\n#define t iTime * .4\n\n// I like structures: https://www.shadertoy.com/view/DstcWM\n\nvoid mainImage(out vec4 o, vec2 u) {    \n    SCREEN\n          \n    float i, a, k, d;\n    vec3 p;\n    \n    while(i++ < 99.) \n        p = vec3(u * a, a - 5.),\n        ROTATE(p)\n        \n        p.zx = grid(p.zx),\n        p.zy = grid(p.zy),\n        \n        // https://www.shadertoy.com/view/mtdyD4\n        \n        d = abs(length(\n                vec2(length(p.xy), p.z) - .8\n            ) - .1) + 1e-4,\n        \n        a += .4 * d,\n        \n        COLOR(i, d)    ;\n}","name":"Image","description":"","type":"image"}]}