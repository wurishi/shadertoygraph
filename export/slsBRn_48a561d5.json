{"ver":"0.1","info":{"id":"slsBRn","date":"1650557355","viewed":58,"name":"zyq_edge","username":"zhouyongqiang","description":"edge","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Gx[] = float[9](-1.0, -2.0, -1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0);\nfloat Gy[] = float[9](-1.0, 0.0, 1.0, -2.0, 0.0, 2.0, -1.0, 0.0, 1.0);\nint Dx[] = int[3](-1, 0, 1);\nint Dy[] = int[3](1, 0, -1);\n\n\n//求灰度\nfloat luminance(vec3 color)\n{\n    return 0.2125 * color.x + 0.7154 * color.y + 0.0721 * color.b;\n}\n\n//计算靠近边界的程度,1表示就是边界\nfloat closeToEdgeParam0_1(vec2 fragCoord)\n{\n    float sx = 0.0;\n    float sy = 0.0;\n    \n    for(int i = 0;i < 9; ++ i)\n    {\n        vec2 coord = fragCoord + vec2(Dx[i%3],Dy[i/3]); \n        vec2 uv = coord/iResolution.xy;\n        vec4 colorOfTex = texture(iChannel0, uv);\n        float grey = luminance(colorOfTex.xyz);\n        sx += grey * Gx[i];\n        sy += grey * Gx[i];\n    }\n    \n    \n    return abs(sx) + abs(sy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    vec4 color = vec4(1.0);// texture(iChannel0, uv);\n    vec4 edgeColor = vec4(0.0, 0.0, 0.0, 1.0);\n    float edge = closeToEdgeParam0_1(fragCoord);\n    //稍微变暗一点\n    fragColor = mix(color, edgeColor, edge + 0.2);\n    //边中间添加光泽,不加这句就是纯黑边\n    if(length(mix(color, edgeColor, edge+ 0.5)) > 1.5)\n        fragColor = color;\n}\n","name":"Image","description":"","type":"image"}]}