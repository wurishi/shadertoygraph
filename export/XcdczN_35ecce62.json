{"ver":"0.1","info":{"id":"XcdczN","date":"1730341773","viewed":31,"name":"Insper - Project #2: Shaders","username":"d_luc","description":"Insper - Computer Graphics - Project#2: Shaders- 2024\n\nhttps://lpsoares.github.io/ComputacaoGrafica/projetos/projeto2/","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["insper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform vec2 u_resolution;\n\nfloat random1(float x) {\n    return -1.0 + 2.0 * fract(sin(x) * 43758.5453123);\n}\n\nvec2 random2(vec2 st){\n    vec2 val = vec2(dot(st, vec2(127.1, 311.7)), dot(st, vec2(269.5, 183.3)) );\n\n    return -1.0 + 2.0 * fract(sin(val) * 43758.5453123);\n}\n\nfloat circle(vec2 uv, vec2 center, float r, float k) {\n    return smoothstep(r + k, r, length(uv + center));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 rgb;\n\n    vec2 uv = (fragCoord - iResolution.xy / 2.0) / iResolution.y;\n    uv.y += 0.16 * floor(uv.x*3.0);\n\n    vec2 cell = floor(uv * 3.0) / 3.0;\n    vec2 cr = random2(uv / 700.0) / 50.0;\n\n    for (int i = 0; i < 7; i++) {\n        float randomOffset = random1(float(i) + cell.x + cell.y);\n        vec2 c0 = random2(cell * float(i) * 200.0) / 200.0;\n        vec2 c1 = vec2(cos(iTime * randomOffset * 3.0), sin(iTime * randomOffset * 3.0)) / 25.0;\n        float r = (0.03 * randomOffset + 0.06);\n        float c2 = circle(uv - cell + c0 + c1 + cr - vec2(0.125), vec2(0.0), 0.0, r);\n\n        rgb[i % 3] -= smoothstep(0.0, 1.0, c2);\n    }\n\n    rgb = fract(rgb);\n\n    fragColor = vec4(rgb, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}