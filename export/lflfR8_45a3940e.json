{"ver":"0.1","info":{"id":"lflfR8","date":"1723400558","viewed":64,"name":"{Hex Tiling}","username":"inverse_transpose","description":"Just playing around and trying to make an interesting effect with hexagonal tiling.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["hexagon","tiling","hexagonal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * I tried to be super concise with this one\n */\n#define SS(l,r,t) smoothstep(l,r,t)\n#define L(t) length(t)\nvoid mainImage( out vec4 O, in vec2 F )\n{\n    vec2 R = iResolution.xy,\n         U = 5.*(2.*F - R.xy)/R.y,\n         K = vec2(1., 1.73),\n         H = K*.5,\n         G0 = mod(U,K)-H,\n         G1 = mod(U-H,K)-H,\n         G = L(G0)<L(G1)?G0:G1,\n         id=(U-G)*.1;\n    float a = iTime*.1,\n          b = SS(.5, .6, (.5+.5*sin(50.*id.x+1000.*id.y+a))),\n          c = SS(.3, .7, (.5+.5*cos(250.*id.x-50.*id.y+a))),\n          d = .5-max(dot(abs(G),vec2(cos(1.047),sin(1.047))),abs(G.x))+b-c,\n          e = SS(.01,.02,d);\n    O = vec4(e+c*c-b,.3,.5,1);\n}","name":"Image","description":"","type":"image"}]}