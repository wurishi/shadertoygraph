{"ver":"0.1","info":{"id":"WdjczW","date":"1586208189","viewed":96,"name":"Smooth steps of blur video","username":"wnu","description":"smoothed step function applied to blurred video","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["smoothstepvideo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nvec3 sfloor( vec3 v, int n){\n    vec3 o = v- vec3(0.5);\n    for(int i = 0; i<n; i++){\n    \to = o - sin(2.*PI*o)/(2.*PI);\n    }\n    return o;\n}\n\nvec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord)/R;\n\n    //uv *= 2.;\n    float m =6.;\n \n\tint r = 4;\n    float n = 0.;\n    float f = 0.;\n    vec3 fV = vec3(0.);\n    \n    for(int i = -r;i<r+1;i++){\n        for(int j = -r;j<r+1;j++){\n    \tif(pow(pow(float(i),2.)+pow(float(j),2.),0.5) < float(r)) {\n    vec3 val = texture(iChannel0, uv.xy+vec2(float(i)/R.x,float(j)/R.y)).xyz;\n        \n    float fVal = (val.x+val.y+val.z)/3.;\n    //val = val/fVal;\n    val = vec3(fVal);\n\n    val = clamp(sfloor(val*m,3),0.,m-1.)/m;\n    //val += vec3(1./(m+1.)); // center vertically\n      \n    //val = floor(val*m)/m;        \n            \n    fV += val;\n    n += 1.;\n        }\n        }}\n        \n\n    fV /= n;\n\n    fV = clamp(sfloor(fV*m,3),0.,m-1.)/m;\n    //fV += vec3(1./(m+1.));  // center vertically\n    //fV = floor(fV*m)/m;\n    \n    \n    float linterp = abs(fract(iTime/10.)*2.-1.);\n    \n    \n    \n    //fV = hsl2rgb(vec3(fV.x*0.2+linterp,(fV.x*fV.x)*0.25+0.475,0.275+0.25*(1.0 - fV.x*fV.x)));\n    //fV = hsl2rgb(vec3(0.5,1.0,0.5));\n\n    \n    //fV = texture(iChannel1,vec2(uv.x,0.0)).xyz;\n    \n    //fV = texture(\n    \n    vec3 col = fV;\n    \n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 hsl2rgb( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord)/R;\n    \n    vec3 col = hsl2rgb(vec3(uv.x,0.5,0.5));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}