{"ver":"0.1","info":{"id":"ldtcz7","date":"1518312423","viewed":1059,"name":"Haar Wavelet 2D Transform","username":"paniq","description":"Performs 4 horizontal, then vertical steps of a wavelet decomposition using the equivalent of a box filter. What is it good for? Absolutely nothing.","likes":3,"published":3,"flags":32,"usePreview":0,"tags":["2d","transform","wavelet","haar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 load(vec2 fc) {\n    return texture(iChannel0, fc/iChannelResolution[0].xy);\n}\nvec4 load1(vec2 fc) {\n    return texture(iChannel1, fc/iChannelResolution[1].xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int k = iFrame % 9;\n    if (k == 0) {\n    \tfragColor = texture(iChannel0, fragCoord/iResolution.xy);\n    } else if (k < 5) {\n        float f = pow(2.0, float(k));\n        float x = mod(fragCoord.x - 0.5, iResolution.x / f) * 2.0 + 0.5;\n        float n = fragCoord.x * f / iResolution.x;\n        vec4 c0 = load1(vec2(x, fragCoord.y));\n        vec4 c1 = load1(vec2(x + 1.0, fragCoord.y));\n        if (n < 1.0) {            \n            fragColor = (c0 + c1) / 2.0;\n        } else if (n < 2.0) {\n            fragColor = (c0 - c1) / 2.0;\n        } else {\n            fragColor = load1(fragCoord);\n        }\n    } else {\n        float f = pow(2.0, float(k - 5 + 1));\n        float x = mod(fragCoord.y - 0.5, iResolution.y / f) * 2.0 + 0.5;\n        float n = fragCoord.y * f / iResolution.y;\n        vec4 c0 = load1(vec2(fragCoord.x, x));\n        vec4 c1 = load1(vec2(fragCoord.x, x + 1.0));\n        if (n < 1.0) {            \n            fragColor = (c0 + c1) / 2.0;\n        } else if (n < 2.0) {\n            fragColor = (c0 - c1) / 2.0;\n        } else {\n            fragColor = load1(fragCoord);\n        }\n    }\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    int k = iFrame % 9;  \n    int n = (iFrame / (9 * 4)) % 9;\n    if (k == n) {\n        fragColor = texture(iChannel0, uv);\n    } else {\n    \tfragColor = texture(iChannel1, uv);\n    }\n}","name":"Buf B","description":"","type":"buffer"}]}