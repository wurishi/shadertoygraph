{"ver":"0.1","info":{"id":"3ljSDD","date":"1565914908","viewed":158,"name":"Synapses","username":"Pyrolykos","description":"Ellipsoid deformations","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["trippy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SF 2.0\n#define TF 0.5  // was 1.3\n\nfloat ellipse(vec3 pos, vec3 stretch, float sr) {\n    return length(pos/stretch) - sr;\n}\n\nfloat map(vec3 pos) {\n    vec3 ePos = vec3(sin(iTime*TF)*cos(pos.x*SF)+cos(iTime*TF)*sin(pos.z*SF),\n                     2.0*cos(pos.y*SF)+sin(pos.z*SF)-cos(pos.x*SF),\n                     sin(iTime*TF)*cos(pos.x*SF)+cos(iTime*TF)*sin(pos.z*SF));\n    //float d = ellipse(ePos, vec3(1.0,1.3,1.0), 0.5);\n    float d = ellipse(ePos, vec3(1.0,1.4,1.0), 0.5);\n   \n    // Just regrab tex here to use for bumpiness\n    //vec2 tex_uv = pos.xz - iTime*(0.0, 0.5);\n    vec2 tex_uv = pos.xz - iTime*(0.0, 0.5);\n    vec3 tex_val = texture(iChannel0, tex_uv).xyz;\n    float th = length(tex_val);\n    return d-0.1*th;\n}\n\nvec3 normal(vec3 pos) {\n    vec2 eps = vec2(0.0001, 0.0);\n    vec3 res = vec3 (map(pos+eps.xyy) - map(pos-eps.xyy),\n    map(pos+eps.yxy) - map(pos-eps.yxy),\n    map(pos+eps.yyx) - map(pos-eps.yyx));\n    return normalize(res);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coords\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 rd = normalize(vec3(uv.xy, -1.5));\n    vec3 ro = vec3(3.0,3.0,11.0);\n   \n    float t = 0.0;\n    vec3 pos;\n    for (int i = 0; i < 100; i++) {\n        pos = ro + t*rd;\n       \n        float h = map(pos);\n       \n        t += 0.2*h;\n       \n        if (t > 30.0) break;\n    }\n   \n    vec3 col = vec3(0.0);\n    if (t < 30.0) {\n        vec3 sun_dir = normalize(vec3(0.4, 0.8, 0.4));\n        vec3 sun_dir2 = normalize(vec3(0.4, -0.8, 0.4));\n        vec3 norm = normal(pos);\n        float sun_val = clamp(dot(norm, sun_dir), 0.0, 1.0);\n        float sun_val2 = clamp(dot(norm, sun_dir2), 0.0, 1.0);\n        vec2 tex_uv = pos.xz - iTime*(0.0, 0.5);\n        vec3 tex_val = texture(iChannel0, tex_uv).xyz;\n        col = (sun_val+0.15*sun_val2)*tex_val*pos.xyz;\n        col = pow(col, vec3(0.45));\n    }\n   \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}