{"ver":"0.1","info":{"id":"lXjXDG","date":"1711184384","viewed":50,"name":"sdHelix","username":"ayaha401","description":"https://www.shadertoy.com/view/ftyBRd\nThe perfect formula is here but I couldn't understand it.\n\nproblem\nArtifacts may appear when repeating or changing the angle.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nconst float PI=3.1415926536;\nconst float TAU=PI*2.;\nconst float eps=0.0001;\nconst float DEG2RAD = PI/180.;\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat rep(float p,float n)\n{\n    return abs(mod(p,n))-n*.5;\n}\n\nfloat sdHelix(vec3 p, float sdf2d, vec3 s)\n{   \n    float ang = atan(p.y, p.x);\n    p.z = rep(ang - p.z, PI * s.x);\n    float d = length(vec2(sdf2d, p.z)) - s.y;\n    return d;\n}\n\nfloat map(vec3 p)\n{\n    p.xy*=rot(iTime * .5);\n    p.xz*=rot(iTime * .3);\n    float sdf2d=sdCircle(p.xy, 5.5);\n    float d = sdHelix(p, sdf2d, vec3(1., .2, 0.));\n    return d;\n}\n\nvec3 makeN(vec3 p)\n{\n    vec2 eps = vec2(.0001, 0.);\n    return normalize(vec3(map(p+eps.xyy)-map(p-eps.xyy),\n                          map(p+eps.yxy)-map(p-eps.yxy),\n                          map(p+eps.yyx)-map(p-eps.yyx)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv=(2.*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n    float dist, hit, i = 0.;\n    vec3 cPos = vec3(0., 0., 15.);\n    vec3 cDir = normalize(vec3(0., 0., -1.));\n    vec3 cUp = vec3(0., 1., 0.);\n    vec3 cSide = cross(cDir, cUp);\n    vec3 ray = normalize(cSide*uv.x+cUp*uv.y+cDir); \n    vec3 L = normalize(vec3(1));\n    vec3 col=vec3(0);\n    \n    for(;i<64.;i++)\n    {\n        vec3 rp=cPos+ray*hit;\n        dist=map(rp);\n        hit+=dist;\n        if(dist<eps)\n        {\n            vec3 N=makeN(rp);\n            float diff=dot(N,L);\n            col=vec3(1)*diff + vec3(.5,.5,.5);\n        }\n    }\n    \n    //float ang = atan(uv.x, uv.y) / PI;\n    //col = vec3(ang,-ang,1.);\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}