{"ver":"0.1","info":{"id":"NlGyRh","date":"1661159786","viewed":206,"name":"Triquelize it","username":"deni_de","description":"triquetrum equalizer","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["audioshading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGzn","filepath":"/media/a/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","previewfilepath":"/media/ap/29de534ed5e4a6a224d2dfffab240f2e19a9d95f5e39de8898e850efdb2a99de.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float smoothCircle(vec2 uv, vec2 pos, float wave, vec3 size)\n{\n    float c = length( uv - pos ) *  (1. - ( 0.69 + 1.1 * wave)); \n\n    vec3 max_mid_min_size = vec3( size.x, size.y, size.z );\n    \n    float e = smoothstep( max_mid_min_size.y, max_mid_min_size.x, c );\n    float e2 = smoothstep( max_mid_min_size.z, max_mid_min_size.y, c );\n    \n    return 1. - abs( e - e2 );\n}\n\nfloat circleDraw(vec2 uv, vec2 pos, float wave, vec3 size)\n{\n    vec2 _pos = pos + 1. * sin(iTime + wave * 1.1);\n    return 1. - smoothCircle( uv, _pos, wave, size);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 U )\n{\n    vec2 r = iResolution.xy ;\n    vec2 uv = U/r.xy;\n    vec2 cells = ceil( 100. * U/vec2(r.x/2.0,r.y) ) ;\n    \n    float waveM = texture( iChannel1, vec2(U.x,0.5)  ).x * .23  ;\n    float waveH = texture( iChannel1, vec2(U.x,0.0)  ).x * .23  ;\n    \n    vec3 color = 0.5 + 0.5 * cos( 77.1251252 * waveM * uv.xyx + pow( waveM, 0.05 ) + ( vec3( 0.1,2,4 ) * iTime ) ) ;\n    vec3 size = vec3( 2.1, 1.75 , 1.45 );\n    \n    \n    float image = circleDraw(cells, vec2(105., 50.), waveM * 1.5, size )\n                    + circleDraw( cells, vec2(95. , 50.), waveM * 1.5, size )\n                        + circleDraw( cells, vec2(100. , 41.5), waveM * 1.5, size )\n                    //BIG\n                +circleDraw( cells, vec2(100. , 47.), (waveH * 3.5)  * (0.3 + 2.7 * waveH), vec3(7.0, 4., 1.) );  \n    fragColor = vec4( image * color, 1.);\n}","name":"Image","description":"","type":"image"}]}