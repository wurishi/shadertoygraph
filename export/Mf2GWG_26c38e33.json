{"ver":"0.1","info":{"id":"Mf2GWG","date":"1704584896","viewed":28,"name":"Silly shapes","username":"ReasonMaster","description":"Yeah man","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n    vec2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\n    vec2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat smin(float a, float b, float k) {\n    float h = clamp(0.5 + 0.5*(a-b)/k, 0.0, 1.0);\n    return mix(a, b, h) - k*h*(1.0-h);\n}\n\nfloat map(vec2 uv, float d) {\n    float triangle1 = sdTriangle(uv, vec2(-.45, -.30), \n                                     vec2(-.45, .45), \n                                     vec2(.30, .45));\n\n    float triangle2 = sdTriangle(uv, vec2(.45, -.45), \n                                     vec2(-.30, -.45), \n                                     vec2(.45, .35));\n    \n    vec2 circlePos = vec2(.5, -.5);\n    float circle = sdCircle(fract((circlePos - uv) * 1.) - .5, .1);\n    \n    return smin(abs(smin(triangle1, triangle2, .35)), circle, (sin(iTime + (d * 10.)) * .1) + .4);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n    \n    float d = length(uv);\n\n    // Time varying pixel color\n    float c = (map(fract(uv * 2.) - .5, d));\n    c = abs(c);\n    c = (d * 0.01) / c;\n    vec3 col = vec3(c);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}