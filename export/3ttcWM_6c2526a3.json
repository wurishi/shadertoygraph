{"ver":"0.1","info":{"id":"3ttcWM","date":"1609236154","viewed":100,"name":"weird vector boxes","username":"Shellderr","description":"weird boxes...","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","box","vector"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat box(vec2 coord, vec2 uv, float size, float w){\n   uv = 1.-uv;\n   coord.x = 1.-coord.x;\n   vec2 b = step(coord, uv) - step(coord,uv-size);\n   vec2 b2 = step(coord+w, uv) - step(coord,uv-(size-w));\n   return b.x * b.y - b2.x*b2.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float r = iResolution.y/iResolution.x;\n    uv.y *= r;\n   uv.x *= (uv.x/uv.y+abs(fract(iTime*0.3)-0.5)*2.);\n\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float b =0.;\n    \n    for(float i = 0.; i < 30.; i++){\n    \n    b +=  box(uv*vec2(.3,1.5),vec2(0.1+(i*0.018),0.6+(i*0.01)),0.05+i*0.019*abs(cos(iTime))*-1., -0.004*abs(cos(iTime)));\n\n    b +=  box(uv*vec2(.3,1.5),vec2(0.3+(i*0.018),0.6+(i*0.01)),0.05+i*0.019*abs(cos(2.+iTime))*-1., -0.004*abs(cos(2.+iTime)));\n\n    }\n    \n    fragColor = vec4( vec3(b)*col, 1.0);\n}","name":"Image","description":"","type":"image"}]}