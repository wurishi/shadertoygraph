{"ver":"0.1","info":{"id":"7lsBDl","date":"1651677244","viewed":341,"name":"foggy depth map","username":"FabriceNeyret2","description":"very basic fog model in mountains valleys (seen from top).\n\nMouse.y = fog max height  \nMouse.x = optical depth ( inverse density )","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["terrain","fog","map","cartography"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define T(U,l)    textureLod( iChannel0, U +.2, l ).r // terrain\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u/R,\n         M = iMouse.z<=0. ? vec2(.5,.7) : iMouse.xy/R*vec2(2,1);\n\n    float h = T(U,0.),                     // heigth map\n          f = exp(-max(0.,(M.y-h)/M.x)),   // fog transparency\n                // M.y = fog max height  M.x = optical depth\n          c =  ( 1. + 300.*(h-T(U,1.)) )   // terrain texture\n             * (.2+h);                     // + ambient occlusion\n\n    O = c*vec4(1,.6,.4,0);                 // terrain color\n    O = mix( vec4(.6,.8,1,0), O, f );      // mix with fog (ultra-basic model)\n\n    O = sqrt(O);                           // to sRGB\n}","name":"Image","description":"","type":"image"}]}