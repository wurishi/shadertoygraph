{"ver":"0.1","info":{"id":"XldGzr","date":"1467704479","viewed":199,"name":"Virtigo","username":"BigotedSJW","description":"[insert tired Flippy from Starfox meme here]","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","projection","checker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float checker( in vec2 p, in float s );\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = fragCoord.xy / iResolution.xy - 0.5;\n\tuv.x *= iResolution.x / iResolution.y; //square cooridinated, 0,0 at center\n\t\n    \n    float ang = 1.5*iTime;\n    vec2 rot=vec2(sin(ang),cos(ang));\n    mat2 rm =mat2(rot.x,rot.y,-rot.y,rot.x);\n    uv=rm*uv; //rotate input coordinates\n\n    //projection\n    vec3 project_in =  vec3(uv.x,  0.5, abs(uv.y));\n\tvec2 project_out = project_in.xy/ project_in.z + (vec2(0.0,4.0*iTime));\n    \n    //sample (procedural) texture (poorly, hence artifacting at the 'horizon')\n    float tex = checker(project_out,4.0);\n    \n\tfragColor = vec4(vec3(tex),1.0); \n}\n\nfloat checker( in vec2 p, in float s )\n{\n\t//ivec2 state = ivec2(p * s); //interger binary operations not supported :(\n   \tvec2 state=floor(s*p);\n    \n    //float xodd = mod(state.x,2.0);\n    //float yeve = mod(state.y + 1.0,2.0);\n    return mod(state.x+state.y,2.0); //per IQ, may try FN2's ideas some other day\n    \n}","name":"Image","description":"","type":"image"}]}