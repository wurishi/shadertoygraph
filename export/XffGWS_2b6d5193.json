{"ver":"0.1","info":{"id":"XffGWS","date":"1703411711","viewed":48,"name":"ChatGPT's Christmas Tree","username":"miklesz","description":"ChatGPT's Christmas Tree is a visually captivating shader, crafted with the aid of OpenAI's ChatGPT. It features a beautifully animated Christmas tree, enriched with a waving effect that simulates the gentle sway of branches.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["holiday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Screen coordinates normalization\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Animation variables\n    float time = iTime * 0.5;\n\n    // Drawing the Christmas tree\n    vec3 treeColor = vec3(0.0, 0.8, 0.0); // Tree color\n    vec2 treePos = vec2(0.0, -0.5); // Tree position\n    float treeSize = 0.5; // Tree size\n\n    // Waving effect\n    treePos.y += sin(time + uv.x * 5.0) * 0.02;\n\n    // Shape of the tree\n    float treeShape = smoothstep(treeSize, 0.0, abs(uv.x) - (treeSize - uv.y));\n\n    // Background color\n    vec3 bgColor = vec3(0.0, 0.0, 0.1); // Dark blue background\n\n    // Color mixing\n    vec3 color = mix(bgColor, treeColor, treeShape);\n\n    // Blinking lights effect\n    float lights = step(0.9, sin(10.0 * time + uv.y * 40.0)) * treeShape;\n    color += lights * vec3(1.0, 0.5, 0.0); // Lights color\n\n    // Sending color to the color buffer\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}