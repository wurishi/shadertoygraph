{"ver":"0.1","info":{"id":"WtGyzd","date":"1611617635","viewed":69,"name":"rect lol","username":"aith","description":"2nd project! ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 pos, float r, float blur) {\n    // where blur is the distance that the circle will be smoothstepping in. smoothOff\n    float d = length(uv - pos);\n    float c = smoothstep(r, r - blur, d);\n    //if ( d < r ) d =1.; else d = 0.;\n    return c;\n}\n\nfloat Smiley(vec2 uv, vec2 p, float size) {\n    uv -= p;    // translating coordinate system\n    uv /= size; // scaling coordinate system\n\n    float mask = Circle(uv, vec2(0.), .4, .01);\n\n    //eyes\n    mask -= Circle(uv, vec2(-.2, .1), .07, .01);\n    mask -= Circle(uv, vec2(.2, .1), .07, .01);\n\n    float mouth = Circle(uv, vec2(0, 0.), .3, .02);\n    mouth -= Circle(uv, vec2(0., 0.1), .3, .02);\n\n    mask -= max(0., mouth);  // make sure that mouth doesn't return -1\n    return mask;\n}\n\n\nfloat Band(float t, float start, float end, float blur) {\n    float edge1 = smoothstep(start-blur, start+blur, t);\n    float edge2 = smoothstep(end+blur, end-blur, t);\n\n    return edge1*edge2; // intersection\n}\n\nfloat Rect(vec2 uv, float left, float right, float bottom, float top, float blur) {\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n\n    return band1*band2;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)  \n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;           // -0.5 <> 0.5\n    uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n    vec3 col = vec3(1.);\n    //float rect = Rect(uv, -.2, .2, -.3, .3, .01);\n    float smiley = Smiley(uv, vec2(-.32, 0.), 1.);\n    col *= smiley;\n    float hand = Circle(uv, vec2(0.23, -.1), .15, .003);\n    col += hand;\n    float thumb = Rect(uv, .1, .2, -.1, .1, .0001);\n    col += thumb;\n   \n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}