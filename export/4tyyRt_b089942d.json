{"ver":"0.1","info":{"id":"4tyyRt","date":"1537246511","viewed":289,"name":"LULA","username":"Danguafer","description":"Free Lula\n\nhttps://en.wikipedia.org/wiki/Luiz_In√°cio_Lula_da_Silva","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["lula","livre"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdBSDt","filepath":"https://soundcloud.com/fathom1968/there-is-only-one-eddie-cumana","previewfilepath":"https://soundcloud.com/fathom1968/there-is-only-one-eddie-cumana","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 A = vec2(1.0, 4.0);\nvec2 E = vec2(5.0, 4.0);\nvec2 F = vec2(6.0, 4.0);\nvec2 I = vec2(9.0, 4.0);\nvec2 L = vec2(12.0, 4.0);\nvec2 U = vec2(5.0, 5.0);\nvec2 V = vec2(6.0, 5.0);\nvec2 R = vec2(2.0, 5.0);\n\n#define SIZE 16.0\n#define SPACE 1.0/SIZE\n\n//float character(vec2 uv, vec2 coord) { return texture(iChannel0, uv + coord / vec2(SIZE, -SIZE)).x; }\nfloat character(vec2 uv, vec2 coord) { return texture(iChannel0, clamp(uv, vec2(0.0, 1.0 - SPACE), vec2(SPACE, 1.0)) + coord / vec2(SIZE, -SIZE)).x; }\n\nfloat noise( in vec3 x ) {\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = textureLod( iChannel2, (uv+0.5)/256.0, 0.0).yx;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\n\nfloat LULA_LIVRE(vec2 uv) {\n    float text = 0.0;\n    vec2 carriage = vec2(SPACE * 0.5 * 0.5, 0.0);\n    text += character(uv - carriage, L); carriage += vec2(SPACE * 0.5, 0.0);\n\ttext += character(uv - carriage, U); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, L); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, A); carriage = vec2(0.0, carriage.y - SPACE);\n    text += character(uv - carriage, L); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, I); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, V); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, R); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, E); carriage += vec2(SPACE * 0.5, 0.0);\n    return text;\n}\n\nfloat FREE_LULA(vec2 uv) {\n    float text = 0.0;\n    vec2 carriage = vec2(SPACE * 0.5 * 0.5, 0.0);\n    text += character(uv - carriage, F); carriage += vec2(SPACE * 0.5, 0.0);\n\ttext += character(uv - carriage, R); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, E); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, E); carriage = vec2(SPACE * 0.5 * 0.5, carriage.y - SPACE);\n    text += character(uv - carriage, L); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, U); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, L); carriage += vec2(SPACE * 0.5, 0.0);\n    text += character(uv - carriage, A); carriage += vec2(SPACE * 0.5, 0.0);\n    return text;    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Time varying pixel color\n    float amp = texture(iChannel1, vec2(0.5, 0.0)).x;\n    vec3 noise_col = vec3(noise(vec3(uv * iResolution.xy * 0.25, iTime * 10.0 + amp * 5.0)));\n\n//    uv.x += noise_col.x * (amp * 0.025);\n//    uv.y += noise_col.y * (amp * 0.025);\n    float BPM = 128.0;\n    float BPS = 60.0 / BPM * 2.0;\n    vec2 text_coord = uv * 0.175 + vec2(0.00575, 0.85);\n    float text = FREE_LULA(text_coord);\n    text = mix(text, LULA_LIVRE(text_coord), step(mod(iChannelTime[1], BPS * 2.0), BPS)); \n    vec3 col = mix(noise_col, 0.1 * noise_col, smoothstep(0.5, 1.0, text));\n    \n\tcol *= sin(fragCoord.y) * 0.75 + 0.75;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}