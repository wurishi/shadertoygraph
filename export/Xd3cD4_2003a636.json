{"ver":"0.1","info":{"id":"Xd3cD4","date":"1518793153","viewed":173,"name":"Siouxsie And The Banshees","username":"lsdlive","description":"I did this as an exercise to improve my 2d shaders.\nThe code is a bit messy, the curves are not perfect & the antialiasing is not good enough, but I spent too much time on this one. I will try a more elegant version later.\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\n// return color mask\nfloat circle(vec2 p, float r) {\n\tfloat t = .006;\n\treturn 1. - smoothstep(r, r + t, length(p));\n}\n\n// return color mask\nfloat rect(vec2 p, vec2 d) {\n\tfloat x = d.x*.5;\n\tfloat y = d.y*.5;\n\n\tfloat t = .006;\n\n\treturn smoothstep(x + t, x, p.x) * smoothstep(-x - t, -x, p.x)\n\t\t* smoothstep(y + t, y, p.y) * smoothstep(-y - t, -y, p.y);\n}\n\nfloat ellipse(vec2 uv, float r) {\n\tfloat d = circle(uv - vec2(0, .1), r);\n\td *= circle(uv - vec2(0, -.1), r);\n\treturn d;\n}\n\nfloat outline(vec2 uv) {\n\tfloat d = circle(uv, .3);\n\td -= rect(uv - vec2(0, -.15), vec2(.7, .4));\n\td += circle(uv*vec2(.8, 1.) - vec2(.02, .1), .19);\n\treturn d;\n}\n\nfloat eyebrow(vec2 uv) {\n\tfloat d = 1. - rect(uv, vec2(.7, .15));\n\td += circle(uv - vec2(.25, .05), .043);\n\td += circle(uv*vec2(.7, 1.) - vec2(-.14, -.08), .1);\n\treturn d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (fragCoord - .5*iResolution.xy) / iResolution.y;\n\n\tfloat d = 0.;\n\n    uv*=.9;\n\tuv.x *= .8;\n\tuv.y *= 1.4;\n\tuv.y += .3;\n\tuv.x = abs(uv.x) - .4;\n\n\t// outlines\n\td = min(eyebrow((uv - vec2(.04, .24))), 1.);\n\td *= max(1. - outline(uv*r2d(.4)), 0.);\n\n\t// eyes\n\td += ellipse((uv - vec2(-.02, .12))*vec2(1.1, .7), .2);\n\td *= 1. - circle((uv - vec2(-.02, .17))*vec2(1.2, .6), .078);\n\n\t// small curvature patch\n\td *= 1. - circle(uv - vec2(.2, .15), .05);\n\td += circle((uv - vec2(-.27, -.16))*vec2(.8, .5), .077);\n\t//d += rect(uv - vec2(.3, .14), vec2(.1, .3));\n\n\tfragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}