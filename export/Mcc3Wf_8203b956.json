{"ver":"0.1","info":{"id":"Mcc3Wf","date":"1712190241","viewed":39,"name":"Inscribed polygons","username":"HalbFettKaese","description":"A visualization of geometric growth","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","geometry","polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c);\n}\n\nvec3 polygon(vec2 uv, float n) {\n    float pixel = length(vec2(dFdy(uv)));\n    float angle = atan(uv.y, uv.x);\n    float period = 2.*PI/n;\n    angle = mod(angle + period*0.5, period) - period*0.5;\n    uv = length(uv) * vec2(cos(angle), sin(angle));\n    float v = distance(uv, vec2(1.0, clamp(uv.y, -tan(PI/n), tan(PI/n))));\n    v = smoothstep(0., 2.*pixel, v);\n    return vec3(v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy*0.5)/iResolution.yy;\n    uv *= 4.0;\n\n    vec3 col = vec3(1.0);\n    float n = 2.+12.*(0.5-0.5*cos(2.*PI*iTime/60.));\n    float angle = PI / n;\n    float ITERATIONS = n;\n    float c = cos(angle);\n    mat2 m = rot(angle) * c;\n    uv /= pow(c, ITERATIONS+1.);\n    \n    for (float i = 0.0; i < ITERATIONS; i+=1.0) {\n        col = min(col, polygon(uv, n));\n        uv *= m;\n    }\n    vec3 col1 = min(col, polygon(uv, 500.));\n    vec3 col2 = min(col, polygon(uv, n));\n    uv *= m;\n    col2 = min(col2, polygon(uv, 500.));\n    float t = fract(ITERATIONS);\n    if (t==0.) t = 1.;\n    t = smoothstep(0.3, 0.7, t);\n    col = mix(col1, col2, t);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}