{"ver":"0.1","info":{"id":"7dK3RG","date":"1631752958","viewed":44,"name":"Cute Flower Sam Lee","username":"18smlee","description":"cute flower","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\n * @author rah, inspired by jonobr1 / http://jonobr1.com/\n */\n\n// Make a vec3 color from rgb values [0, 255]\nvec3 rgb(float r, float g, float b)\n{\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n/* \n * Output circle colors at given center pos and radius\n */\nvec4 circle(vec2 uv, vec2 center, float radius, vec3 color)\n{\n\tfloat d = length(center - uv) - radius;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\n/* \n * Rotate an input point about some center by angle\n */\nvec2 rotatePoint2d(vec2 uv, vec2 center, float angle)\n{\n    vec2 rotatedPoint = vec2(uv.x - center.x, uv.y - center.y);\n    float newX = cos(angle) * rotatedPoint.x - sin(angle) * rotatedPoint.y;\n    rotatedPoint.y = sin(angle) * rotatedPoint.x + cos(angle) * rotatedPoint.y;\n    rotatedPoint.x = newX;\n    return rotatedPoint;\n}\n\nfloat GetBias(float time, float bias)\n{\n  return (time / ((((1.0/bias) - 2.0)*(1.0 - time))+1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 uv = fragCoord.xy;\n\tvec2 center = iResolution.xy * 0.5;\n\tfloat radius = 0.25 * iResolution.y;\n    vec2 center_to_uv = uv - center;\n    vec2 x_axis = vec2(1,0);\n    \n    float divs = 5.0;\n    float amp = 0.3;\n    float freq = 7.0;\n    \n    // get the angle between center_to_uv and x_axis\n    float theta = acos(dot(x_axis, center_to_uv) / length(center_to_uv) * length(x_axis));\n    \n    float bias = GetBias(cos(freq * theta), 0.1);\n       \n    float offset = radius * sin(iTime) * amp * bias;\n    \n    radius += offset;\n    \n    // Background layer\n\tvec4 layer1 = vec4(rgb(255.0, 255.0, 210.0), 1.0);\n\t\n\t// Circle\n\tvec3 red = rgb(225.0, 50.0, 70.0);\n\tvec4 layer2 = circle(uv, center, radius, red);\n\t\n\t// Blend the two\n\tfragColor = layer2;\n\n}","name":"Image","description":"","type":"image"}]}