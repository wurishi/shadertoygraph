{"ver":"0.1","info":{"id":"mds3Rf","date":"1666600691","viewed":60,"name":"pulseTrain","username":"ligaobo","description":"道路的元素","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 pulseTrainIntegral4(vec4 nedge, vec4 t) {\n    return (1.0 - nedge) * floor(t) + max(fract(t) - nedge, 0.0);\n}\n\nvec2 filteredPulseTrain2(vec2 edge, vec2 x, vec2 dx) {\n    vec4 x0x1 = dx.xyxy * vec4(-0.5, -0.5, 0.5, 0.5) + x.xyxy;\n    vec4 pti = pulseTrainIntegral4(edge.xyxy, x0x1);\n    return (pti.zw - pti.xy) / dx;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy)/iResolution.y;\n    uv *= 12.0;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) * 0.25;\n    \n    {\n        const vec2 CELL_SIZE = vec2(7.0, 3.25); // in meters along and perpendicular to axis\n        const vec2 STRIPE_SIZE = vec2(2.5, 0.2); // idem\n        vec2 pq = (uv + vec2(0.0, STRIPE_SIZE.y * 0.5)) / CELL_SIZE;\n        vec2 rs = 1.0 - filteredPulseTrain2(STRIPE_SIZE / CELL_SIZE, pq, fwidth(pq));\n        col = col + rs.x * rs.y;\n        \n        col += smoothstep(0.1, 0.0, abs(uv.y));\n        col += smoothstep(0.1, 0.0, abs(uv.x));\n        col += smoothstep(0.1, 0.0, abs(uv.x - CELL_SIZE.x));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}