{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//Credit: http://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//Fragment position, only used as random seed\n\tvec2 uv = fragCoord.xy / iResolution.xy; \n\t\n\t//Flicker frequency\n\tfloat flicker = 10.0;\n\t\t\n\t//Play with power to change noise frequency\n\tfloat freq = sin(pow(mod(iTime, flicker)+flicker, 1.9));\n\t\n\t//Play with this to change raster dot size (x axis only, y is calculated with aspect ratio)\n\tfloat pieces = float(1000);\n\t\n\t//Calculations to maintain square pixels\n\tfloat ratio_x = 1.0 / pieces;\n\tfloat ratio_y = ratio_x * iResolution.x / iResolution.y;\n\tfloat half_way_x = abs(freq * ratio_x);\n\tfloat half_way_y = abs(freq * ratio_y);\n\t\n\t//Checkerboard generation\n\tfloat x_pos = mod(uv.x, ratio_x);\n\tfloat y_pos = mod(uv.y, ratio_y);\n\tif(x_pos < half_way_x && y_pos < half_way_y)\n\t\tfragColor = vec4(1.0,1.0,1.0,1.0);\n\telse if(x_pos < half_way_x && y_pos > half_way_y)\n\t\tfragColor -= vec4(0.0,0.0,0.0,0.0);\n\telse if(x_pos > half_way_x && y_pos < half_way_y)\n\t\tfragColor -= vec4(0.0,0.0,0.0,0.0);\n\telse\n\t\tfragColor = vec4(1.0,1.0,1.0,1.0);\n\t\t\n\t//Comment this out to see how raster dots are simulated (noise overlay)\n\tfragColor *= vec4(rand(uv+mod(iTime, freq)), rand(uv+mod(iTime+.1, freq)), rand(uv), 1.0);\n\t\t\n\t//Use this for greyscale noise, comment out the line above (noise overlay)\n\t//fragColor *= vec4(rand(uv+mod(iTime, freq)), rand(uv+mod(iTime, freq)), rand(uv+mod(iTime, freq)), 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdlGWX","date":"1380941969","viewed":1747,"name":"TV Noise with Raster Dots","username":"diegoperini","description":"Colored tv noise with raster dots of tv. Useful to represent analog to digital conversion of old school tv noise. \n\nInterestingly some machines doesn't like square tile generation algorithm and only prefer to render the noise.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["procedural","noise","tv","raster","quantum"],"hasliked":0,"parentid":"","parentname":""}}