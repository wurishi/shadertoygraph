{"ver":"0.1","info":{"id":"X3V3z3","date":"1718005782","viewed":52,"name":"Make a smile :)","username":"arena","description":"Just to learn how a shader works","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorialfollower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n#define sat(x) clamp(x, .0, 1.)\nvec2 within(vec2 uv, vec4 rect){\n    return (uv - rect.xy)/(rect.zw - rect.xy);\n}\n\nfloat remap01(float a, float b, float t){\n    return sat((t - a)/(b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t){\n    return sat((t - a)/(b - a)) * (d - c) + c;\n}\n\nvec4 Brow(vec2 uv){\n    vec4 color=vec4(.7,.3,0.,1.);\n    uv.y+=2.*uv.x*uv.x;\n    uv.y*=6.;\n    uv.y+=uv.x;\n    uv.x*=1.5;\n    float d = length(uv);\n    color.a = S(.4,.38,d);\n    return color;\n}\n\nvec4 BrowShadow(vec2 uv){\n    vec4 color=vec4(.5,.2,.2,1.);\n    uv.y+=2.*uv.x*uv.x;\n    uv.y*=6.;\n    uv.y+=uv.x;\n    uv.x*=2.;\n    float d = length(uv);\n    color.a = .4*S(.6,.2,d);\n    return color;\n}\n\nvec4 Eye(vec2 uv, float truex,vec2 m){\n    vec4 color = vec4(1.);\n    vec4 irisColor = vec4(.3,.5,.75,1.);\n    uv-=.5;\n    float side;\n    \n    if(truex<.0)\n        side=-1.;\n    else\n        side=1.;\n        \n    float d = length(uv);\n    color = mix(color, irisColor, S(.1,.7,d)*.6);\n    color.rgb *= 1. - S(.45,.5,d)*0.4*sat(-uv.y-uv.x);\n    \n    d=length(vec2(uv.x*side,uv.y)-.0005*(m-.5*iResolution.xy));\n    \n    color.rgb = mix(color.rgb, vec3(0.), S(.3,.28,d));\n    irisColor.rgb *= 1. + S(.3,.05,d);\n    color.rgb = mix(color.rgb, irisColor.rgb, S(.28,.25,d));\n    \n    d=length(vec2(uv.x*side,uv.y)-.0006*(m-.5*iResolution.xy));\n    color.rgb = mix(color.rgb, vec3(0.), S(.16,.14,d));\n    \n    d = length(uv);\n    \n    float highlight;\n    \n    \n    highlight = S(.1, .09, length(uv-vec2(-.15*side,.15)));\n    highlight += S(.07, .05, length(uv-vec2(.1*side,-.1)));\n    color.rgb = mix(color.rgb, vec3(1.), highlight);\n    \n    color.a = S(.5,.48,d);\n    return color;\n}\n\nvec4 Mouth(vec2 uv){\n    uv-=.5;\n    vec4 color = vec4(.5,.18,.05,1.);\n    uv.y-=uv.x*uv.x*2.;\n    uv.y*=1.5;\n    float d = length(uv);\n    \n    float td = length(uv - vec2(.0,.6));//tooth\n    vec3 toothCol = vec3(1.)*S(.36,.27,d);\n    color.rgb = mix(color.rgb, toothCol, S(.4,.37,td));\n    \n    td = length(uv + vec2(.0,.5));//tongue\n    color.rgb=mix(color.rgb, vec3(1.,.5,.5),S(.41,.38,td));\n    \n    color.a = S(.36,.34,d);\n    return color;\n}\n\nvec4 Head(vec2 uv){\n    vec4 color = vec4(.9,.65,.1,1.);\n    float d = length(uv);\n    color.a = S(.5,.49,d);\n    \n    //create and merge the edgeshade\n    float edgeshade = remap01(.35,.5,d);\n    color.rgb *= 1. - edgeshade*.3;\n    color.rgb  = mix(color.rgb, vec3(.6,.3,.1),S(.47,.49,d));\n    \n    //create and merge the highlight\n    float highlight = S(.41,.405,d);\n    highlight *= remap(.41,-.1,.75,.0,uv.y);\n    color.rgb = mix(color.rgb, vec3(1.), highlight*.75);\n    \n    //create and merge the cheek\n    d = length(uv-vec2(.25,-.2));\n    float cheek = S(.2,.01,d)*.3;\n    cheek *= S(.17, .16, d);\n    color.rgb = mix(color.rgb, vec3(1.,.1,.1), cheek);\n    \n    return color;\n}\n\nvec4 Smiley(vec2 uv,vec2 m){\n    vec4 color = vec4(0.);\n    \n    vec4 head = Head(vec2(abs(uv.x),uv.y));\n    vec4 eye = Eye(within(vec2(abs(uv.x),uv.y), vec4(.03,-.1,.38,.25)),uv.x,m);\n    vec4 mouth = Mouth(within(vec2(abs(uv.x),uv.y), vec4(-.3,-.4,.3,-.1)));\n    vec4 browshadow = BrowShadow(within(vec2(abs(uv.x),uv.y), vec4(.2,.29,.7,.59)));\n    vec4 brow = Brow(within(vec2(abs(uv.x),uv.y), vec4(.2,.32,.7,.62)));\n    \n    color = mix(color, head, head.a);\n    color = mix(color, mouth, mouth.a);\n    color = mix(color, eye, eye.a);\n    color = mix(color, browshadow, browshadow.a);\n    color = mix(color, brow, brow.a);\n    \n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    vec2 m=iMouse.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n    \n    // Output to screen\n    fragColor = Smiley(uv,m);\n}","name":"Image","description":"","type":"image"}]}