{"ver":"0.1","info":{"id":"WtBSDc","date":"1567250952","viewed":553,"name":"Fractal tri-grid noise ","username":"CPU","description":"Tried adding octaves to equilateral triangle grid noise here https://www.shadertoy.com/view/3lBXWc\nSmoothstep on RHS.","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["fractal","noise","grid","tri"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hex(u) max( 0., 1.- dot( abs( vec3((u).y, (u)* mat2( .866, .5,.866,-.5) ) ),vec3(.577)) )\n\nfloat d,x;// = 0.;\n\nfloat el(vec2 u, int x, int y) {\n    vec2 s = vec2(2,1.73),\n         a = ( u + s*vec2(x,y)/4. ) / s;\n    return   hex( s* ( fract(a) -.5 ) )\n           * fract(sin(dot( ceil(a)+.1*d++ , vec2(37.341,97.784)))*47925.95);\n}\n\nfloat ns( vec2 u ){\n    d=0.;\n    float t=el(u, 0,0) +  el(u, 2,0) +  el(u, 1,2) +  el(u, 3,2) ;\n\tif(x>0.)t=t*t*(3.-2.*t);\n    return t;\n}\n\n\nvoid mainImage( out vec4 C, vec2 U ){\n    vec2 R = iResolution.xy,  u = 8.* ( 2.*U-R ) / R.y +iTime; x=U.x-.5*R.x;\n    int o=1+(iFrame>>6)%5;\n    float n=0., a=1., t=0.;\n    for(int i=0; i<o;i++){\n\t    n+=a*ns(u); t+=a; u*=2.; a*=.5; \n        }\n    C = vec4( n/t );\n\t}\n","name":"Image","description":"","type":"image"}]}