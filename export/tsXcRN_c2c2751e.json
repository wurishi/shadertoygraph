{"ver":"0.1","info":{"id":"tsXcRN","date":"1584251586","viewed":70,"name":"param_v17","username":"darkczar","description":"epicycles","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// based on...\n// https://www.shadertoy.com/view/lssfW2\nhighp float rand(vec2 co)\n{\n    highp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(co.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nhighp float fsin(float x)\n{\n    return .5 +.5*sin(x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n  \n    vec2 curve_p = vec2(0,0);\n    float d = 10000.0;\n    float di = 0.;\n    for(int i = 0;i<12;i++)\n    {\n        di = float(i)*.095;\n        curve_p.x = 1.2*sin(.4*iTime)+.15*float(di)*sin(float(di)+.2*iTime) +.1*float(di)*sin(4.0*di+.2*iTime) + .3*sin(iTime*.1)*float(di)*cos(11.0*di+.8*iTime);\n        curve_p.y = .6*cos(.4*iTime)+.15*float(di)*cos(float(di)+.2*iTime) +.1*float(di)*cos(4.0*di+.2*iTime) + .3*sin(iTime*.1)*float(di)*sin(11.0*di+.8*iTime);\n        d = min(d, length(p-curve_p));\n  \n    }\n    \n    float r = .0025*d*(.5+.5*sin(.2*iTime));\n    float g = .1*sin(.01*d);\n    float b = .25*abs(.015+.013*(.5+.5*cos(iTime*.8)));\n    if (d<.004 +.02*fsin(iTime*.2 +.778))\n    {\n        b=.01*pow(b+.2*d,3.25);\n    } else if (d<.08)\n    {\n        b = .01*pow(b,3.5);\n    } else\n    {\n        b = .005*mod(6.*(p.x),3.*(p.y + .2*fsin(iTime +5.*p.x)));\n\n    }\n    if (d>.005 && d < .02 +.01*fsin(iTime*.3))\n    {\n        r = 3.*pow(r,2.5);\n    } else\n    {\n        r = .005*mod(6.*(p.x),3.*(p.y-.25 + .2*fsin(1.57+iTime +4.*p.x)));\n\n    }\n    if (d>.007 && d < .03 + .02*fsin(iTime*.4))\n    {\n        g = pow(g,2.5 +.05*fsin(iTime*.4+.77));\n    }  else\n    {\n        g = .005*mod(6.*(p.x),3.*(p.y+.25 + .2*fsin(iTime +3.*p.x)));\n    }\n    vec3 col = vec3(r,g, b);\n    float dn = col.x + col.y + col.z;\n    col /= dn;\n    // Output to screen\n    fragColor = vec4( pow(col,vec3(1./2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}