{"ver":"0.1","info":{"id":"4sdyWB","date":"1520060794","viewed":114,"name":"Minimal Clock","username":"satbir121","description":"Minimal clock","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Following the example by iq from https://www.shadertoy.com/view/lsXGz8\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec2 uv = translateCoordinates(st, iResolution.xy);\n    \n    float r =length(uv);\n    vec3 col = vec3(0.);\n    \n    float sec = mod(iTime, 60.);\n    float angle = - sec * 2. * PI / 60.;\n    \n    float min = mod(iTime / 60., 60.);\n    float minAngle = - min * 2. * PI / 60.;\n    \n    float hr = mod(iTime / 3600., 60.);\n    float hrAngle = - hr * 2. * PI / 60.;\n    \n    col += vec3(smoothstep(0.5, 0.51, r));\n    // vec2 p, vec2 a, vec2 b, float w\n    col += vec3(1. - lineSegment(uv, vec2(0, 0), 0.5 * vec2(cos(angle),sin(angle)), .01), 0, 0);\n    col += vec3(1. - lineSegment(uv, vec2(0, 0), 0.375* vec2(cos(minAngle),sin(minAngle)), .01));\n    col += vec3(1. - lineSegment(uv, vec2(0, 0), 0.257 * vec2(cos(hrAngle),sin(hrAngle)), .01));\n    // col -= vec3(step(sin(uv.x * PI) / PI - 0.1 * sin(iTime), uv.y));\n    \n    float x = 0.5 - r;\n    \n    col += smoothstep(0.5, -2.286, - x);\n        \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI 3.14159265359\n\nvec2 translateCoordinates(vec2 st, vec2 res) {\n    vec3 pos = vec3(st, 1.);\n    \n    float aspect = res.y / res.x;\n    \n    mat3 translationMatrix = mat3(\n        2.0 / aspect, 0., -1. / aspect,\n        0.0, 2.0, -1,\n        0., 0., 1.000\n    );\n    vec3 st_t = pos * translationMatrix;\n    return st_t.xy;\n}\n\nfloat lineSegment(vec2 p, vec2 a, vec2 b, float w) {\n    vec2 pa = p - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return smoothstep(0.0, w, length(pa - ba*h));\n}\n","name":"Common","description":"","type":"common"}]}