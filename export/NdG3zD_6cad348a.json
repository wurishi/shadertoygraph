{"ver":"0.1","info":{"id":"NdG3zD","date":"1631149249","viewed":79,"name":"square in the circle","username":"HaleyHalcyon","description":"a","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LOOPLEN 3.6\n#define TAU (2. * 3.14159265359)\n#define SCALE 0.001\n#define SPEED -10.0\n#define TOGGLE_DIST 1.5\n\n// i want hex code\nvec3 hex(int value) {\n    return vec3(\n        (value >> 16) & 255,\n        (value >>  8) & 255,\n         value        & 255\n    ) / 255.;\n}\n\n// angle as radians\nfloat square(vec2 uv, float angle) {\n// janky implem of rotation matrix\n    vec2 aVec = vec2(\n        cos(angle), sin(angle)\n    );\n    uv = vec2(\n        uv.x * aVec.x - uv.y * aVec.y,\n        uv.x * aVec.y + uv.y * aVec.x\n    );\n    return max(log(abs(uv.x)), log(abs(uv.y)));\n}\n\nfloat zigzag(float x){\n    return 1. - abs(1. - fract(x) * 2.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = fract(iTime / LOOPLEN);\n    vec2 uv = (fragCoord * 2. - iResolution.xy) * SCALE;\n\n    float offset = time * SPEED;\n    float rotation = sin(TAU * 0.25 * min(1.0, fract(time * 2.) * 2.)) * TAU / 4.;\n    float squDist = square(uv, rotation);\n    float cirDist = log(length(uv));\n    float stripeScale = -3.0;\n    \n    // toggling color\n    float stripeThres = max(0.1, 0.9 - fract(time * 4.) * 2.);\n    vec3 squCol = hex(0x373E6D);\n    if (zigzag(stripeScale * squDist - offset) < stripeThres) {\n        squCol = hex(0xF94C7E);\n    }\n    vec3 cirCol = hex(0xE7AE38);\n    if (zigzag(stripeScale * cirDist - offset) < stripeThres) {\n        cirCol = hex(0x320C47);\n    }\n    \n    vec3 col = hex(0xFF00FF);\n    float toggleOffset = time * TOGGLE_DIST;\n    for (int i = -5; i <= 0; i++) {\n        if (cirDist - toggleOffset < TOGGLE_DIST * float(i)) {\n            col = cirCol; break;\n        } else if (squDist - toggleOffset < TOGGLE_DIST * (float(i) + 0.5)) {\n            col = squCol; break;\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}