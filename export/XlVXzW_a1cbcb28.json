{"ver":"0.1","info":{"id":"XlVXzW","date":"1483311233","viewed":106,"name":"GR - A Sin Wave","username":"bradleygriffith","description":"sin wave","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sinwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358\n\nfloat isWave(vec2 uv, float y, float wavelength, float amplitude, bool animate) {\n    float x = uv.x;\n\n    if (animate) {\n    \t//x += iTime * 0.25;\n    }\n    \n   \t// Define wave \n    float variance = ((1.0 + sin(x * PI * 2.0 * 3.0)) / 2.0);// * (amplitude / iResolution.y);\n    \n    // Adjust y\n    y += variance;\n    \n    // Draw\n    // `smoothstep` used instead of `step` to smooth aliasing on curves.\n    return smoothstep(y, y + 0.007, uv.y);\n}\n\nvec4 isWaveLine(vec2 uv, float y, float wavelength, float amplitude, float width) {\n    float p = 1.0 / iResolution.y;\n    \n    width = width * p; // Normalize width.\n    \n\t// Define line constraints\n\tfloat h = width / 2.0;\n    float top = y + h;\n    float bottom = y - h;\n    \n    float topWave = isWave(uv, top, wavelength, amplitude, true);\n    float bottomWave = isWave(uv, bottom, wavelength, amplitude, true);\n    \n    return vec4(bottomWave - topWave);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    float position = 0.0;\n    if (iMouse.z > 0.0) {\n        position = iMouse.y / iResolution.y;\n    }\n    \n    // Define wave\n    float width = 2.0;\n    float wavelength = 100.0;\n    float amplitude = 25.0;\n    \n    \n    fragColor = isWaveLine(uv, position, wavelength, amplitude, width);\n}","name":"Image","description":"","type":"image"}]}