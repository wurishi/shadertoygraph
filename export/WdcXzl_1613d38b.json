{"ver":"0.1","info":{"id":"WdcXzl","date":"1572561895","viewed":66,"name":"neuro_test","username":"neur0sys","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM 500\n#define SPRITE_SIZ 1.0f\n#define W 640.0f\n#define H 400.0f\n\nvec2 virt_scale(vec2 p)\n{\n\tp.x = float(int(p.x * W)) / W;\n    p.y = float(int(p.y * H)) / H;   \n    \n    return p;\n}\n\nfloat hue2rgb(float f1, float f2, float hue) {\n    if (hue < 0.0)\n        hue += 1.0;\n    else if (hue > 1.0)\n        hue -= 1.0;\n    float res;\n    if ((6.0 * hue) < 1.0)\n        res = f1 + (f2 - f1) * 6.0 * hue;\n    else if ((2.0 * hue) < 1.0)\n        res = f2;\n    else if ((3.0 * hue) < 2.0)\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n    else\n        res = f1;\n    return res;\n}\n\n\nvec3 hsl2rgb(vec3 hsl) {\n    vec3 rgb;\n    \n    if (hsl.y == 0.0) {\n        rgb = vec3(hsl.z); // Luminance\n    } else {\n        float f2;\n        \n        if (hsl.z < 0.5)\n            f2 = hsl.z * (1.0 + hsl.y);\n        else\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\n            \n        float f1 = 2.0 * hsl.z - f2;\n        \n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n        rgb.g = hue2rgb(f1, f2, hsl.x);\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n    }   \n    return rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Scale to nearest multiple virtual-screen resolution\n    uv = virt_scale(uv);\n    \n\tvec2 ps = SPRITE_SIZ / vec2(W, H);\n    vec4 c = texture(iChannel1, uv) * 0.3f;\n    \n    vec2 pb1 = vec2(iTime * 1.2f, iTime * -1.2f);\n    vec2 pb2 = vec2(iTime * 1.4f, iTime * 1.4f);\n    \n    for (int i = 0; i < NUM; i++) {\n        float x1 = cos(pb1.x) + sin(pb1.y);\n        float y1 = cos(pb2.x) + sin(pb2.y);\n        \n        vec2 pt = vec2(x1 / 6.0f + 0.5f, y1 / 6.0f + 0.5f);\n\n        pt = virt_scale(pt);\n        \n        if (uv.x >= pt.x && uv.x <= pt.x + ps.x &&\n            uv.y >= pt.y && uv.y <= pt.y + ps.y) {\n            vec2 uv1 = (pt - uv) / -ps;\n            //c = texture(iChannel0, uv1);\n            c = vec4(hsl2rgb(vec3(float(i) / float(NUM), 1.0f, 0.5f)), 1.0f);\n        }\n\n        pb1 += vec2(0.7f, 0.6f);\n        pb2 -= vec2(0.4f, 0.3f);\n    }\n\n    fragColor = c;\n}","name":"Image","description":"","type":"image"}]}