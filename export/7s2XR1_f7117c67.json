{"ver":"0.1","info":{"id":"7s2XR1","date":"1619691486","viewed":63,"name":"plotting some simple functions","username":"rockstep","description":"plotting some simple functions","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["functions","plots"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_Y 1.5\n#define RADIUS 1.\n\n\nfloat near(float a, float b) {\n    float diff = abs(a - b);\n    return smoothstep(1./iResolution.y * (MAX_Y / 0.5), 0., diff);\n}\n\n\nvec3 layer(vec3 bottom, vec3 top) {\n    return (length(top) > 0.) ? top : bottom;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = ( fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    uv *= MAX_Y / 0.5;\n\n    vec3 xAxis = vec3(near(uv.y, 0.));\n    vec3 yAxis = vec3(near(uv.x, 0.));\n    vec3 line = vec3(1, 0, 0) * vec3(near(uv.x, uv.y));\n    vec3 parabola = vec3(0, 1, 0) * vec3(near(uv.x * uv.x, uv.y));\n    vec3 circle = vec3(0, 1, 1) * vec3(near(length(uv), RADIUS));\n    \n    vec3 axes = xAxis + yAxis;\n    vec3 col = layer(axes, line);\n    col = layer(col, parabola);\n    col = layer(col, circle);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}