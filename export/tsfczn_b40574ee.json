{"ver":"0.1","info":{"id":"tsfczn","date":"1587736287","viewed":69,"name":"simple 3d raytrace","username":"loni852","description":"3d","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define lenght 1.0f\n#define height 1.0f\nstruct ray\n{\n\tvec3 o,d;\n};\n\nray GetRay(vec2 uv, vec3 campos,vec3 lookat,float zoom)\n{\n    ray a;\n    \n    a.o = campos;\n    //Front Vector\n    vec3 f = normalize(lookat - campos);\n    //Right Vector\n    vec3 r = cross(vec3(0,1,0),f);\n    //Up Vector\n    vec3 u = cross(f,r);\n    //Center\n    vec3 c = a.o + f*zoom;\n    \n    vec3 i = c + uv.x * r +uv.y * u;\n    \n    a.d = normalize(i-a.o);\n    \n    return a;\n    \n}\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\n\nfloat DrawPoint(vec3 ro,vec3 rd,vec3 p){\n\tfloat d = DistLine(ro, rd, p);\n    \n    d = smoothstep(.1,0.09, d);\n    \n    return d;\n\n}\n\nvec3 DrawCube(vec3 ro,vec3 rd,vec3 center)\n{\n    float r = 0.0;\n    float g = 0.0;\n    float b = 0.0;\n    int colorchange;\n    float d;\n    \n    \n\td += DrawPoint(ro,rd,vec3(center.x+0.,center.y+0.,center.z+0.));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 1.0;\n        g += 0.0;\n        b += 0.0;\n        colorchange = 1;\n    }\n    \n    \n    d += DrawPoint(ro,rd,vec3(center.x+0.,center.y+0.,center.z+lenght));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 0.0;\n        g += 1.0;\n        b += 0.0;\n        colorchange = 1;\n    }\n    d += DrawPoint(ro,rd,vec3(center.x+0.,center.y+height,center.z+0.));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 0.0;\n        g += 0.0;\n        b += 1.0;\n        colorchange = 1;\n    }\n    d += DrawPoint(ro,rd,vec3(center.x+0.,center.y+height,center.z+lenght));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 1.0;\n        g += 1.0;\n        b += 0.0;\n        colorchange = 1;\n    }\n    d += DrawPoint(ro,rd,vec3(center.x+lenght,center.y+0.,center.z+0.));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 1.0;\n        g += 0.0;\n        b += 1.0;\n        colorchange = 1;\n    }\n    d += DrawPoint(ro,rd,vec3(center.x+1.,center.y+0.,center.z+lenght));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 0.0;\n        g += 1.0;\n        b += 1.0;\n        colorchange = 1;\n    }\n    d += DrawPoint(ro,rd,vec3(center.x+lenght,center.y+height,center.z+0.));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 1.0;\n        g += 1.0;\n        b += 1.0;\n        colorchange = 1;\n    }\n    d += DrawPoint(ro,rd,vec3(center.x+lenght,center.y+height,center.z+lenght));\n    if (d > 0.0 && colorchange == 0){\n    \tr += 1.0;\n        g += 0.5;\n        b += 0.5;\n        colorchange = 1;\n    }\n\treturn vec3(r,g,b);\n\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;// -0.5 <> 0.5\n    \n    \n    float t = iTime;\n    \n    \n    \n    //origen del ray \n    vec3 camPos = vec3(sin(t)*3.0, 2., -3.*cos(t));\n    \n    //direccion hacia la que mira el ray\n    vec3 lookAt = vec3(0.5, 0.5, 0.5);\n    \n    float zoom = 0.5;\n    \n    ray ray = GetRay(uv,camPos,lookAt,zoom);\n    \n    \n    \n    //color de los puntos\n    vec3 d = vec3(0.0,0.0,0.0);\n    \n    //centro de los puntos\n    vec3 center = vec3(0.0,0.0,0.0);\n    \n    float backgroundcolor = (0.2,0.0,0.3);\n    \n    d += DrawCube(ray.o,ray.d,center);\n    \n    if (d == vec3(0.0,0.0,0.0))\n    {\n    \td+= backgroundcolor;\n    }\n    \n\tfragColor = vec4(d.r,d.g,d.b,1.0);\n}","name":"Image","description":"","type":"image"}]}