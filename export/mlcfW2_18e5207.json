{"ver":"0.1","info":{"id":"mlcfW2","date":"1701604356","viewed":160,"name":"Acid blossom visualizer (Sound!)","username":"Forthro","description":"Simple trigonometry-based visualizer","likes":2,"published":3,"flags":64,"usePreview":0,"tags":["sound","music","abstract","visualizer","trigonometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MscGRf","filepath":"https://soundcloud.com/flux-pavilion/never-see-the-light-feat-andrea-martin?in=flux-pavilion/sets/flux-pavilion-tesla","previewfilepath":"https://soundcloud.com/flux-pavilion/never-see-the-light-feat-andrea-martin?in=flux-pavilion/sets/flux-pavilion-tesla","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float segmentsNumVariants[] = float[](1.0, 3.0, 7.0, 11.0);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 centerCoord = iResolution.xy / 2.0; /*iMouse.xy*/\n\n    float normalDist = distance( fragCoord.xy, centerCoord )\n                     / ( sqrt( 2.0 * iResolution.x * iResolution.x ) * 1.25);\n    float reverseNormalDist = 1.0 - normalDist;\n    vec2 normalCoord = normalize( fragCoord.xy - centerCoord );\n    \n    float sound = texture( iChannel0, vec2( cos( normalDist ), 0.25 )).r \n                + texture( iChannel0, vec2( sin( normalDist ), 0.25 )).r;\n                \n    float segmentsNum = segmentsNumVariants[ int( floor( sound * 2.0 + normalDist )) ];\n                \n    float radialWave = 0.5 + cos( atan( normalCoord.x, normalCoord.y ) * segmentsNum + iTime * 3.0 + cos( sound * 10.0 ) * sound );\n    \n    float shiftedTime = iTime - ( normalDist * 7.0 ) \n                      + radialWave * sin( pow( reverseNormalDist, reverseNormalDist ) * 50.0 + iTime + sound * sound * 2.0 );\n    \n    float waveModulator = 0.35 + sin( normalDist * 20.0 - shiftedTime * 4.0 ) * sound;\n    \n    float red = ( 0.25 + cos( shiftedTime + sound * 4.0) / 2.5 ) * waveModulator;\n    float green = 0.75 * waveModulator * ( 0.5 + sin(sound * 7.0 ) / 2.0 );\n    float blue = ( 0.25 + sin( shiftedTime + sound * 4.0 ) / 2.5 ) * waveModulator;\n    \n    fragColor = vec4( red, green, blue, 1.0 );\n}","name":"Image","description":"","type":"image"}]}