{"ver":"0.1","info":{"id":"Xc3XRH","date":"1713541470","viewed":82,"name":"Cosmic Swirl","username":"1Noxah","description":"dance of colors and shapes in \"Cosmic Swirl\"","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","waves","colorful","glsl","animation","dynamic","visualeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.4, 0.4, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.9, 1.7, 0.4);  \n    vec3 d = vec3(0.25, 0.6, 0.30);  \n\n    return a + b * cos(6.28318 * (c + t * d));\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.6; i < 5.2; i++) {  \n        uv = fract(uv * 1.5) - 0.5;\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i * 0.09 + iTime * 0.7);  // timing and scaling\n\n        d = sin(d * 7.0 + iTime) / 7.0;  \n        d = abs(d);\n        d = pow(0.02 / d, 1.5);  // power for gradient in the visual\n\n        finalColor += col * d;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}