{"ver":"0.1","info":{"id":"fd2BzV","date":"1646678250","viewed":142,"name":"Procedural generated kelp","username":"Gravechest","description":"don't know what you think but I am proud of it :).","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sea","water","plant","kelp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}\nuint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\nuint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\nuint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\nfloat floatConstruct( uint m ) {\n    const uint ieeeMantissa = 0x007FFFFFu;\n    const uint ieeeOne      = 0x3F800000u;\n\n    m &= ieeeMantissa;                 \n    m |= ieeeOne;                    \n\n    float  f = uintBitsToFloat( m );  \n    return f - 1.0;                       \n}\nfloat random( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\nfloat random( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat random( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat random( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat tnoise(vec2 pos,float detail){\n\tpos.x += 300.0;\n\tpos.y += 300.0;\n    float intens;\n    for(float i = 0.1;i < detail;i*=1.34){\n        float center = 1.0 - max(abs(fract(pos.x * i) - 0.5),abs(fract(pos.y * i) - 0.5)) * 2.0;\n        intens += mix(0.5,random(floor(pos * i)),center) - 0.5;\n        intens *= 1.1;\n    }\n    return intens;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord/iResolution.x * 360.0+iTime*10.0;\n    \n    vec2 fpos = floor(pos);\n    vec3 col = vec3(0.0,0.0,0.0);\n    float r = 0.0;\n    for(int i = 0;i < 1600;i++){\n        switch(int(r)){\n        case 0:\n            fpos.y-=1.0;\n            col.g += 0.01;\n            break;\n        case 1:\n            fpos.y-=1.0;\n            fpos.x-=1.0;\n            col.r += 0.01;\n            r = 0.0;\n            break;\n        case 2:\n            fpos.y-=1.0;\n            fpos.x+=1.0;\n            col.r += 0.01;\n            r = 0.0;\n            break;\n        }\n        float r2 = random(fpos)*32.0;\n        if(int(r2) == 0){\n            fragColor.rgb += col;\n            fragColor.rgb += vec3(0.1,0.43,1.0) * ((tnoise(fpos,30.0)+15.0)/15.0 - (col.r + col.g)/2.0);\n            pos.y = floor(pos.y)+float(i);\n            pos.x = floor(pos.x/3.0)+float(i);\n            fragColor.rgb *= tnoise(pos/30.0,100.0)/30.0+1.0;\n            return;\n        }\n        else if(r2 < 5.0){\n            r=1.0;\n        }\n        else if(r2 < 9.0){\n            r=2.0;\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}