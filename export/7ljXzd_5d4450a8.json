{"ver":"0.1","info":{"id":"7ljXzd","date":"1628444049","viewed":41,"name":"FBM Warping","username":"kazijawad","description":"A procedural FBM pattern.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise(in vec2 p) {\n\treturn sin(p.x) * sin(p.y);\n}\n\nfloat circleSDF(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat fbm(in vec2 p) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0) * vec2(iTime * -0.01 * 0.3, iTime * 0.01 * 0.3);\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.5));\n    for (int i = 0; i < 10; ++i) {\n        v += a * noise(p);\n        p = rot * p * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nfloat h(in vec2 p) {\n    vec2 q = p * 3.0;\n    q = vec2(fbm(q + vec2(0.0, 0.0)), fbm(q + vec2(5.0, 1.0)));\n    vec2 r = q * sin(iTime);\n    r = vec2(fbm(p + 10.0 * q + vec2(2.0, 9.0)), fbm(p + 10.0 * q + vec2(8.0, 3.0)));\n    return fbm(p + 4.0 * r);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    vec2 g = p + vec2(h(p));\n    float d = circleSDF(p, 0.9);\n\n    vec3 col = vec3(0.0);\n    col = mix(col, vec3(1.0) - sign(d), vec3(g.x, g.y, 1.0));\n    col = vec3(dot(col, vec3(0.3, 0.6, 0.1)));\n\n    fragColor = vec4(min(col, vec3(0.75)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}