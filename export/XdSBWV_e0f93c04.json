{"ver":"0.1","info":{"id":"XdSBWV","date":"1502136960","viewed":197,"name":"cellular noise is awsome","username":"bytearray","description":"a","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["a"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rand (vec2 st) {\n    return vec2(\n        fract(sin(dot(st.xy, vec2(12.9898, 78.233)))*43758.5453123),\n        fract(sin(dot(st.xy, vec2(87.9577, 54.422)))*29577.4898202));\n}\n\nvec3 color (float val) {\n    int index = int(fract(val * 0.1) * 6.);\n\n    switch(index) {\n        case 0: return vec3(229., 0., 0.) / 255.;\n        case 1: return vec3(255., 141., 0.) / 255.;\n        case 2: return vec3(255., 238., 0.) / 255.;\n        case 3: return vec3(0., 129., 33.) / 255.;\n        case 4: return vec3(0., 76., 255.) / 255.;\n        case 5: return vec3(118., 0., 136.) / 255.;\n    }\n    return vec3(0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord.xy / 128.;\n    vec2 i_st = floor(st);\n    vec2 f_st = fract(st);\n\t\n    float m_dist = 100.;\n    \n    for(int x = -1; x <= 1; ++x)\n    {\n        for(int y = -1; y <= 1; ++y)\n        {\n            vec2 neighbor = vec2(float(x),float(y));\n            vec2 point = rand(i_st + neighbor);\n            point = 0.5 + 0.5*sin(iTime + 8.0*point);\n            \n            vec2 distv = neighbor + point - f_st;\n            float dist = dot(distv, distv);\n            \n            if( dist < m_dist ) {\n                m_dist = dist;\n            }\n        }\n    }\n    \n    fragColor.rgb = color(sqrt(m_dist) * 20. + iTime * 2.); // - vec3(m_dist * 0.75);\n}\n","name":"Image","description":"","type":"image"}]}