{"ver":"0.1","info":{"id":"NdV3WV","date":"1632222907","viewed":50,"name":"loka：【故障1-1】RGB颜色分离故障","username":"LokaHer","description":"  1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define IDENSITY (0.091)\n#define PATTERRN (2)\n#define AMPLITUDE (3.0)\n\nfloat randomNoise(float x, float y)\n{\n\treturn fract(sin(dot(vec2(x, y), vec2(12.9898, 78.233))) * 43758.5453);\n}\n\n\nfloat getSplitAmount()\n{\n    #if PATTERRN > 1\n        float splitA = (1. + sin(iTime * 6.)) * 0.5;\n        splitA *= 1.0 + sin(iTime * 16.) * 0.5;\n        splitA *= 1.0 + sin(iTime * 19.) * 0.5;\n        splitA *= 1.0 + sin(iTime * 27.) * 0.5;\n        splitA = pow(splitA, AMPLITUDE);\n        splitA *= (0.05 * IDENSITY);\n        return splitA;\n    #else\n        return IDENSITY * randomNoise(iTime, 2.);\n    #endif\n    \n}\n\nvec3 Frag_Horizontal(vec2 uv)\n{\n    float splitamout = getSplitAmount();\n    vec3 col;\n    \n    col.r = texture(iChannel0, uv + vec2(splitamout, 0.0)).r + splitamout;\n    col.g = texture(iChannel0, uv + vec2(0.0, 0.0)).g;\n    col.b = texture(iChannel0, uv - vec2(splitamout, 0.0)).b + splitamout;\n    \n    return col;\n}\n\nvec3 Frag_Vertical(vec2 uv)\n{\n    float splitamout = getSplitAmount();\n    vec3 col;\n    \n    col.r = texture(iChannel0, uv + vec2(0.0, splitamout)).r;\n    col.g = texture(iChannel0, uv + vec2(0.0, 0.0)).g;\n    col.b = texture(iChannel0, uv - vec2(0.0, splitamout)).b;\n    \n    return col;\n}\n\nvec3 Frag_Horizontal_Vertical(vec2 uv)\n{\n    float splitamout = getSplitAmount();\n    vec3 col;\n    \n    col.r = texture(iChannel0, uv + vec2(splitamout, splitamout)).r;\n    col.g = texture(iChannel0, uv + vec2(0.0, 0.0)).g;\n    col.b = texture(iChannel0, uv - vec2(splitamout, splitamout)).b;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = Frag_Horizontal(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}