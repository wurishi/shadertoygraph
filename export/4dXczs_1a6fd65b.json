{"ver":"0.1","info":{"id":"4dXczs","date":"1489345288","viewed":247,"name":"Cubic Space Division, Escher","username":"jent","description":"thx to dila, for the great tut on raymarching\n& rgba for shadertoy and his great article on distance functions: http://iquilezles.org/articles/distfunctions/distfunctions.htm","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","escher","spacerepetition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float udBox( vec3 p, vec3 b ) {\n  return length(max(abs(p)-b,0.0));\n}\n\nfloat map(vec3 p) {\n    \n    vec3 q = fract(p) - 0.5;\n    \n    float bx = udBox(q, vec3(1.0, 0.03, 0.03));\n    float by = udBox(q, vec3(0.03, 1.0, 0.03));\n    float bz = udBox(q, vec3(0.03, 0.03, 1.0));\n    float bc = udBox(q, vec3(0.1, 0.1, 0.1));\n    \n\treturn min(min(min(bx, by), bz), bc);\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for(int i = 0; i < 64; ++i){\n        vec3 p = o + r * t;\n\t\tfloat d = map(p);\n        t += d * 1.0;\n        if (d < .001) break;\n    }\n    return t;\n}\n\nvec3 surfaceNormal(vec3 pos) {\n \tvec3 delta = vec3(0.002, 0.0, 0.0);\n    vec3 normal;\n    normal.x = map(pos + delta.xyz) - map(pos - delta.xyz);\n    normal.y = map(pos + delta.yxz) - map(pos - delta.yxz);\n    normal.z = map(pos + delta.zyx) - map(pos - delta.zyx);\n    return normalize(normal);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 r = normalize(vec3(uv, 2.9));\n    float the = iTime * 0.0675;\n    \n    r.xz *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    vec3 o = vec3(0.0, the+0.5, the);\n    \n    float t = trace(o, r);\n    vec3 world = o + r * t;\n    \n    vec3 sn = surfaceNormal(world);\n    \n    float fd = map(world);\n   float fog = exp(-t*.41);\n   vec3 fogColor = vec3(1.0);        \n    \n    vec3 fc = 0.2 * vec3(dot(sn, vec3(1.0, 0.8, -0.6)));\n    \n\tfragColor = vec4(mix(fc, fogColor, 1.0 - fog),1.0);\n}","name":"Image","description":"","type":"image"}]}