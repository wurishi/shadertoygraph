{"ver":"0.1","info":{"id":"Mtc3W8","date":"1468986297","viewed":147,"name":"Sphere and 4 mirrors","username":"rory618","description":"Or is this just an infinite grid of spheres flipped in different directions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 cpos = vec3(0.0,0.0,0.4);\nvec3 cdir;\nvec3 up = vec3(0.0,0.0,1.0);\nfloat pi = 3.1415926535;\nfloat dlt = .0001;\n\nvec3 si(vec3 rp, vec3 rd, vec3 sp, float sr) {\n\n\trd = normalize(rd);\n\tfloat a = dot(rd, sp-rp);\n\tif (a < 0.0) return rp;\n\tvec3 b = rp + rd * vec3(a,a,a);\n\tfloat c = length(b-sp);\n\tif (c>sr){\n\t\treturn rp;\n\t}\n\tfloat d = sqrt(sr*sr-c*c);\n\treturn b - rd*vec3(d,d,d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n  cdir = normalize(vec3(vec2(sin(.1*iTime+23.34),sin(.07*iTime+9.23)), -0.5));\n  vec2 uv = fragCoord.xy/iResolution.yy;\n\n  uv -= vec2(.5, .5);\n  uv *= vec2(1.0,-1.0);\n\n  cpos.x += iTime*.254;\n  cpos.y += iTime*.165;\n\n  vec3 h = normalize(cross(cdir, up));\n  vec3 v = normalize(cross(cdir, h));\n\n  vec3 rd = cdir+h*uv.xxx+v*uv.yyy;\n\n  float g = -cpos.z/rd.z;\n\n  vec3 i = cpos + rd*vec3(g,g,g);\n  float s =.50;\n  vec3 c;\n  bool sss = false;\n  bool ssr = false;\n  for(int n = 0; n < 20;n++){\n      \n      vec3 p = i;\n    \n      i.xy = mod(i.xy, vec2(1.,1.));\n      \n      float sws = i.x-p.x+.1;\n      float swr = i.y-p.y+.1;\n      if(abs(mod(sws,2.0)-mod(sws,1.0))>.2){\n        sss = !sss;\n      }\n      if(abs(mod(swr,2.0)-mod(swr,1.0))>.2){\n        ssr = !ssr;\n      }\n      \n      \n      p=i;\n      \n      i = si(i, rd, vec3(.5,.5,-.5),.5);\n      if(p == i){\n\n      \tvec4 d = (vec4(1.0,0.0,1.0,0.0)-i.xxyy)/rd.xxyy;\n\n      \tfloat m = 10.0;\n\n      \tif(m>d.x && d.x>0.0) m = d.x;\n      \tif(m>d.y && d.y>0.0) m = d.y;\n      \tif(m>d.z && d.z>0.0) m = d.z;\n      \tif(m>d.w && d.w>0.0 ) m = d.w;\n\n      \ti += rd*(1.0+dlt)*m;\n\n      } else {\n        vec3 ii = i;\n        if(sss) {\n          ii.x = 1.0-i.x;  \n        }\n        if(ssr) {\n          ii.y = 1.0-i.y;  \n        }\n        vec4 tx = texture(iChannel0,.5*vec2(ii.y+ii.z,ii.x));\n        vec3 nrm = normalize(i-vec3(.5,.5,-.5));\n        nrm += .07*tx.xyz;\n        rd -= 2.0*dot(rd, nrm)*nrm;\n        c += (.07*tx.xyz+normalize(ii-vec3(.5,.5,-.5)) + vec3(.1,.5,.65) + .1*(vec3(1.0)+sin(10.0*ii)))*s;\n      \ts *= .6;\n      }\n\n  }\n    \n  fragColor = vec4(c, 1.0 );\n\n}","name":"Image","description":"","type":"image"}]}