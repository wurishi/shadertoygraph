{"ver":"0.1","info":{"id":"4lsSzn","date":"1434068288","viewed":178,"name":"raymarched particles pint","username":"public_int_i","description":"particles or something of the sort, just a quick test this still needs to be refined","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"#define FOV_SCALE .5\n#define ITER 32\n#define EPSILON .08\n#define NORMAL_EPSILON .04\n#define CAMERA_SPEED .1\n#define PARTICLE_STRETCH .5\n\n\nvec3 lightDir = normalize(vec3(4.,6.,2.));\n\n\nfloat df(in vec3 rp) {\n    vec3 p = (fract(rp-(sign(rp)*(iTime+length(rp)*PARTICLE_STRETCH)))-vec3(.5));\n    float d = length(p)-\n        (.1+cos((floor(rp.x)+floor(rp.y)+floor(rp.z))*1000.)*.1);\n    \n    d = max((length(rp)-4.),d);\n    return d;\n}\nconst vec3 ne = vec3(NORMAL_EPSILON,0.,0.);\nvec3 normal(in vec3 rp) {\n    return normalize(vec3(df(rp+ne)-df(rp-ne),\n                          df(rp+ne.yxz)-df(rp-ne.yxz),\n                          df(rp+ne.yzx)-df(rp-ne.yzx)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy - vec2(.5);\n    uv.y *= iResolution.y/iResolution.x;\n\n    float cst = iTime*CAMERA_SPEED;\n    vec3 rp = vec3(sin(cst)*10.,0.,cos(cst)*10.);\n\tif (iMouse.w > 0.) rp = vec3(sin(iMouse.x/iResolution.x*6.15)*10.,\n                                 (iMouse.y/iResolution.y-.5)*30.,\n                                 cos(iMouse.x/iResolution.x*6.15)*10.);\n    \n    vec3 rd = normalize(-rp);\n    vec3 rr = cross(vec3(0.,1.,0.),rd);\n    rd = normalize(rd*FOV_SCALE + uv.x*rr + uv.y*cross(rd,rr));\n    \n    float d;\n    for (int i = 0; i < ITER; i++) {\n        if ((d = df(rp)) < EPSILON) break;\n        \n        rp += d*rd;\n    }\n\n\tif (d > EPSILON) {\n       fragColor = texture(iChannel1,rd);\n    \treturn;\n\t}\n    \n    \n    vec3 c = vec3(.8,.6,.423);\n    vec3 n = normal(rp);\n    c = .12*c+max(0.,dot(lightDir,n))*c;\n    \n    fragColor = vec4(c,1.);\n}","name":"","description":"","type":"image"}]}