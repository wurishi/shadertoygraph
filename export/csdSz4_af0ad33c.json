{"ver":"0.1","info":{"id":"csdSz4","date":"1679472169","viewed":161,"name":"trigonometric ","username":"z1lfromhell","description":"create a grid and triangle","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fixUV(in vec2 coord)\n{\n    return 3.*(coord.xy * 2.0 - iResolution.xy)/min(iResolution.x,iResolution.y);\n}\n\nvec3 grid(in vec2 uv)\n{\n    vec2 fraction = abs(uv);\n\n    vec2 chess = floor(mod(uv,2.));\n\n    vec2 chessline = 1.-abs(fract(((uv/3.+1.)/2.)*6.)*2. - 1.);\n\n    vec3 backgroundcolor = vec3(0.2) ; \n\n    float chesslinecolor = 0.;\n\n    float pivot = 0.0;\n\n    if(chess.x==chess.y){\n        backgroundcolor = vec3(0.1);\n    }\n    if(fraction.x <= fwidth(uv.x) || fraction.y <= fwidth(uv.y) ){\n\n        pivot = 1.;\n    }\n\n    if(chessline.x<=3.*fwidth(uv.x)||chessline.y<=3.*fwidth(uv.y)){\n\n        chesslinecolor = 1.;\n    }\n\n    vec3 gridcolor = mix(vec3(backgroundcolor),vec3(0.149, 0.2941, 0.1882) , float(chesslinecolor));\n\n    vec3 pivotcolor = mix(gridcolor,vec3(0.3804, 0.4078, 0.0),pivot);\n\n    return pivotcolor;\n}\n\nvec3 segment(  in vec2 uv)\n{\n    vec2 a = vec2(-2.+ sin(iTime),-1.);\n\n    vec2 b = vec2(-1.,2.)+ cos(iTime+2.)*1.;\n\n    vec2 c = vec2(2.+ sin(iTime+1.)*-1.,-1.5);\n\n    float circlea = clamp((1.-length(uv - a)-0.5)*2.,0.,1.);\n\n    float circleb = clamp((1.-length(uv - b)-0.5)*2.,0.,1.);\n\n    float circlec = clamp((1.-length(uv - c)-0.5)*2.,0.,1.);\n\n    float circlemask = circlea + circleb + circlec;\n\n    vec3 circleglow = mix( vec3(0.),vec3(1.,0.,0.),circlemask);\n\n    vec3 segmentcolor = vec3(0.);\n\n    vec2 ba = b-a ;\n\n    vec2 uva = uv-a ;\n\n    float relationa = clamp(dot(ba,uva)/dot(ba,ba) , 0. , 1.);\n\n    float lengtha = length(relationa * ba - uva);\n\n    vec2 bc = b-c ;\n\n    vec2 uvb = uv-c ;\n\n    float relationb = clamp(dot(bc,uvb)/dot(bc,bc) , 0. , 1.);\n\n    float lengthb = length(relationb * bc - uvb);\n\n    vec2 ac = a-c ;\n\n    vec2 uvc = uv-c ;\n\n    float relationc = clamp(dot(ac,uvc)/dot(ac,ac) , 0. , 1.);\n\n    float lengthc = length(relationc * ac - uvc);\n\n\n\n    if(lengthb <=fwidth(uv.x)||lengtha <=fwidth(uv.x)|| lengthc <=fwidth(uv.x)||circlemask >= 0.8)\n    {\n        segmentcolor = vec3(1.0, 0.3608, 0.1647) ;\n       \n    }\n\n    return segmentcolor + circleglow;\n       \n     \n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor,in vec2 fragCoord )\n\n{\n    vec2 uv = fixUV(fragCoord);\n\n    vec3 color = mix(grid(uv) , segment(uv) , segment(uv).r)  ;\n\n    fragColor =vec4(color,0.) ;\n\n}\n\n","name":"Image","description":"","type":"image"}]}