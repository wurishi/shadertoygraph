{"ver":"0.1","info":{"id":"fsyyz3","date":"1655580396","viewed":529,"name":"Dead GPU glitch","username":"Oneleven","description":"There are plenty of stylized glitch effects, but here I wanted to recreate that realistic \"Oh shit, It seems now I have 1k dollars less\" feeling.","likes":13,"published":1,"flags":0,"usePreview":1,"tags":["displace","glitch","gpu","dead"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float u, float seed)\n{\n    return fract(sin(u)*279791.12345+seed*0.9);\n}\n\n\nfloat noise(float u, float size, float seed)\n{\n    float zoom = u * size;\n    float index = floor(zoom);\n    float progress = fract(zoom);\n    //progress = smoothstep(0.0,1.0, progress);\n    float value = mix(random(index, seed), random(index + 1.0, seed), progress);\n    return value;\n}\n\n\nfloat posterize(float u, float steps)\n{\n    return floor(u*steps + 0.5)/steps;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Map 2d pixel coords to 1d array \n    float index = fragCoord.x + (fragCoord.y - 0.5) * iResolution.x;\n    float normalizedIndex = index/(iResolution.x*iResolution.y);\n    \n    // Offset each index with noise\n    float offset;\n    \n    //Medium Frequency noise\n    offset  = noise(normalizedIndex, 50.0, floor(iTime*1.123));\n    offset = posterize(offset, 2.0);\n    index += offset*20.0;\n    \n    //Large noise\n    offset  = noise(normalizedIndex, 4.0, floor(iTime*0.786)*0.997);\n    offset = posterize(offset, 3.0);\n    index += offset*100.0;\n    \n    // Remap 1d array back to UV\n    vec2 uvDistorted;\n    uvDistorted.x = mod(index, iResolution.x);\n    uvDistorted.y = floor(index / iResolution.x) + 0.5;\n    \n    uvDistorted /= iResolution.xy;\n    \n    vec3 col = vec3(0.0);\n    \n    //Use distorted UV to sample texture\n    col = texture(iChannel0, uvDistorted).rgb;\n    \n    \n    //Generate random color noise\n    vec3 colRand = vec3(random(normalizedIndex, 0.0),\n               random(normalizedIndex, 2.0),\n               random(normalizedIndex, 3.0));\n    \n    //\n    float mixAmount=4.0; \n    float mixer = mod(index, mixAmount) / mixAmount;\n    mixer = step(mixer, 0.2);\n    \n    col = mix(col, colRand, mixer);\n\n\n    // debug\n    //col = vec3(uvDistorted, 0.0);\n    //col = colRand;\n    //col = vec3(mixer);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}