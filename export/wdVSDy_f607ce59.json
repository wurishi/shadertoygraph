{"ver":"0.1","info":{"id":"wdVSDy","date":"1575289159","viewed":320,"name":"\"Control\" Symbol Infinite Zoom","username":"bitless","description":"Symbol from \"Control\", video game by Remedy.","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d","hex","conrol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: bitless\n// Title: Control Infinite Zoom?\n// Thanks to Patricio Gonzalez Vivo & Jen Lowe for \"The Book of Shaders\"\n// and Fabrice Neyret (FabriceNeyret2) for https://shadertoyunofficial.wordpress.com/\n// and Inigo Quilez (iq) for  https://iquilezles.org/www/index.htm\n// and whole Shadertoy community for inspiration.\n\n// Version 2.0 :)\n// The code is completely rewritten using Fabrice's advice, and thank you very much for that.\n\n#define hash1( n ) fract(sin(n)*43758.5453)\n#define PI 3.1415926\n#define BORDER1 0.025\n#define BORDER2 0.005\n\n\nvoid mainImage( out vec4 fragColor, in vec2 g)\n{\n    vec2 r = iResolution.xy\n    \t,st = (g+g-r)/r.y;\n    float a = atan(st.x,st.y)/PI\n    \t,sm = fwidth(a)*1.5\n    \t,iT = iTime\n    \t,c1 = (a*1.5+2.5)\n    \t,c2 = (a*1.5+2.);\n    c2 += (c2 < 1.) ? 3. : 0.;\n    float l = dot(abs(st),normalize(vec2(1.,1.73)));\n    l = log2(max(l,abs(st.x)))-iT;\n    vec2 c_gr = (mod(l,2.)>1.) ? vec2(c1,c2) : vec2(c2,c1) ;\n    float sm2 = fwidth(l);\n\n    float i = step(.5,hash1(floor(l)*floor(c_gr.x)));\n    float c = i > .5 \n        \t? 0. \n        \t:\tsmoothstep (0.,sm,abs(.5-fract(c_gr.y))-BORDER2)\n    \t\t\t* smoothstep (sm2, -sm2, abs(.5-fract(l))-.5+BORDER1)\n    \t\t\t* smoothstep(-8.,-1.,floor(l)+iT);\n\n    fragColor = vec4(vec3(c),1.);\n}","name":"Image","description":"","type":"image"}]}