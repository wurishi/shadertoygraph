{"ver":"0.1","info":{"id":"fdjcRt","date":"1643931717","viewed":185,"name":"Sierpinski Stream","username":"Ebanflo","description":"Playing with interacting cellular automata on 3 channels.\n\nWarning: messing with rrule, grule, brule in Buf A can lead to very high frequency patterns.","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["2d","fractal","automata","cellular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"bool update(uint rule, int pix, int pixu, int pixr, int pixd, int pixl) {\n    uint i = uint(pix + 2*pixu + 4*pixr + 8*pixd + 16*pixl);\n    return int((rule >> i))%2 == 1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    uint rrule = uint(666);\n    uint grule = uint(420);\n    uint brule = uint(24);\n\n    if(iFrame < 15) {\n        float d = distance(fragCoord, iResolution.xy/2.0);\n        fragColor = vec4(d < 100.0 && d > 99.0);\n    }\n    else {\n        ivec3 pix = ivec3(texture(iChannel1, fragCoord/iResolution.xy).rgb);\n        ivec3 pixu = ivec3(texture(iChannel1, (fragCoord + vec2(0,1))/iResolution.xy).rgb);\n        ivec3 pixr = ivec3(texture(iChannel1, (fragCoord + vec2(1,0))/iResolution.xy).rgb);\n        ivec3 pixd = ivec3(texture(iChannel1, (fragCoord + vec2(0,-1))/iResolution.xy).rgb);\n        ivec3 pixl = ivec3(texture(iChannel1, (fragCoord + vec2(-1,0))/iResolution.xy).rgb);\n        \n        fragColor.r = float(update(rrule, pix.g, pixu.r, pixr.r, pixd.r, pixl.r));\n        fragColor.g = float(update(grule, pix.b, pixu.g, pixr.g, pixd.g, pixl.g));\n        fragColor.b = float(update(brule, pix.r, pixu.b, pixr.b, pixd.b, pixl.b));\n   }\n}","name":"Buffer A","description":"","type":"buffer"}]}