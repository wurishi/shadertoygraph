{"ver":"0.1","info":{"id":"lfBcDm","date":"1722434812","viewed":46,"name":"Wind - hw1 - Update","username":"Morevita","description":"ref:\nhttps://iquilezles.org/articles/distfunctions2d/\nhttps://inspirnathan.com/posts/51-shadertoy-tutorial-part-5\nhttps://pin.it/3GuivO8oX","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb(float r, float g, float b)\n{\n    return vec3(r / 256., g / 256., b / 256.);\n}\n\n\nfloat smin(float a, float b, float k) {\n        float h = clamp(0.5 + 0.5*(b - a)/k, 0.0, 1.0);\n        return mix(b, a, h) - k*h*(1.0 - h);\n    }\n\nfloat smax(float a, float b, float k) {\n  return -smin(-a, -b, k);\n}\n\n///\n\nfloat sdCircle(vec2 uv, float r, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n\n  return length(vec2(x, y)) - r;\n}\n\nfloat sdSquare(vec2 uv, float size, vec2 offset) {\n  float x = uv.x - offset.x;\n  float y = uv.y - offset.y;\n\n  return max(abs(x), abs(y)) - size;\n}\n\nfloat sdBox( vec2 uv, vec2 b , vec2 offset)\n{\n    vec2 d = abs(uv - offset) - b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdEllipse(vec2 uv, float a, float b,vec2 offset){\n    float x2 = (uv.x-offset.x)*(uv.x-offset.x);\n    float y2 = (uv.y-offset.y)*(uv.y-offset.y);\n    float a2 = a*a;\n    float b2 = b*b;\n    float d = 1.0;\n    d = x2/a2+y2/b2-1.0;\n    return d;\n}\n\nfloat sdTriangle( in vec2 p, in vec2 p0, in vec2 p1, in vec2 p2 )\n{\n    vec2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\n    vec2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\n    vec2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\n    vec2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\n    vec2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\n    float s = sign( e0.x*e2.y - e0.y*e2.x );\n    vec2 d = min(min(vec2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\n                     vec2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\n                     vec2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\n    return -sqrt(d.x)*sign(d.y);\n}\n\nfloat sdOrientedVesica( vec2 p, vec2 a, vec2 b, float w )\n{\n    float r = 0.5*length(b-a);\n    float d = 0.5*(r*r-w*w)/w;\n    vec2 v = (b-a)/r;\n    vec2 c = (b+a)*0.5;\n    vec2 q = 0.5*abs(mat2(v.y,v.x,-v.x,v.y)*(p-c));\n    vec3 h = (r*q.x<d*(q.y-r)) ? vec3(0.0,r,0.0) : vec3(-d,0.0,d+w);\n    return length( q-h.xy) - h.z;\n}\n\n///\n\n\nfloat sdHair(vec2 uv){\n    float hair;\n    \n    hair = smin( sdCircle(uv,0.24,vec2(-0.1,0.05)), sdCircle(uv,0.32,vec2(0.1,0.05)),0.1);\n    hair = smin( hair, sdBox(uv,vec2(0.5,0.14),vec2(-0.4,0.05+0.05*sin(iTime*5.))),0.1);\n    hair = smin( hair, sdEllipse(uv,0.34+0.01*sin(iTime*10.),0.33+0.025*sin(iTime*10.),vec2(0.07,0.05)),0.1);\n    \n\n    \n    hair = smin( hair, sdCircle(uv,0.28-0.05* 1./0.5*fract(iTime/2.),vec2(.05-1./0.5*fract(iTime/2.),0.05+0.02*sin(iTime/2.))),0.1);\n    hair = smin( hair, sdCircle(uv,0.28-0.05*1./0.5*fract((iTime+0.7)/2.),vec2(.05-1./0.5*fract((iTime+0.7)/2.),0.05+0.05*sin(iTime/2.))),0.1);\n    hair = smin( hair, sdCircle(uv,0.28-0.05*1./0.5*fract((iTime-0.7)/2.),vec2(.05-1./0.5*fract((iTime-0.7)/2.),0.05+0.02*sin(iTime/2.))),0.1);\n    \n    hair = min( hair, sdBox(uv,vec2(0.1,0.15),vec2(0.15,-0.3)));\n    hair = smin( hair, sdTriangle(uv,vec2(0.05,-0.5),vec2(0.2,-0.4),vec2(0.3,-0.5)),0.1);\n    \n    \n    return hair;\n\n}\n\nfloat sdFace(vec2 uv){\n    float face;\n    \n    face = smin( sdCircle(uv,0.23,vec2(0.1,0.07)), sdCircle(uv,0.23,vec2(0.1,-0.05)),0.1);\n    face = smin( face, sdEllipse(uv,0.2,0.2,vec2(0.1,0)),0.1);\n    face = smin( face, sdBox(uv,vec2(0.05,0.15),vec2(0.05,-0.4)),0.1);\n    face = smin( face, sdTriangle(uv,vec2(-0.05,-0.5),vec2(0.15,-0.5),vec2(0.05,-0.35)),0.1);\n    \n    float ear1 = max(sdEllipse(uv,0.07,0.05,vec2(-0.12,0.0)),-sdBox(uv,vec2(0.05,0.07),vec2(-0.08,0.)));\n    float ear2 = max(sdEllipse(uv,0.07,0.05,vec2(0.33,0.0)),-sdBox(uv,vec2(0.05,0.07),vec2(0.31,0.)));\n    \n    face = min(face,ear1);\n    face = min(face,ear2);\n    \n    return face;\n\n}\n\nfloat sdFace2(vec2 uv){\n    float face;\n    \n    face = max(sdCircle(uv,0.09,vec2(0.11,0.035)),sdCircle(uv,0.04,vec2(0.11,-0.05)));\n    float r1 = sdEllipse(uv,0.02,0.03,vec2(0.0,0.13));\n    float l1 =sdEllipse(uv,0.02,0.03,vec2(0.2,0.13));\n    \n    \n   \n    float r2 = sdTriangle(uv,vec2(0.16,0.205),vec2(0.24,0.193),vec2(0.19,0.207))-0.007;\n    float l2 = sdTriangle(uv,vec2(0.2-0.16,0.205),vec2(.2-0.24,0.193),vec2(0.2-0.19,0.207))-0.007;\n    //float e1 = max(sdEllipse(uv,0.06,0.03,vec2(0.2,0.18)),-sdEllipse(uv,0.14,0.03,vec2(0.15,0.17)));\n    \n    \n    if (sin(iTime/5.) > 0.) {\n    r1 = sdTriangle(uv,vec2(0.165,0.13),vec2(0.235,0.115),vec2(0.195,0.131))-0.01;\n    l1 = sdTriangle(uv,vec2(0.2-0.165,0.13),vec2(.2-0.235,0.115),vec2(0.2-0.195,0.131))-0.01;\n    \n    }\n    \n    face = min(face,r1);\n    face = min(face,r2);\n    face = min(face,l1);\n    face = min(face,l2);\n    \n    float nose = sdBox(uv,vec2(0.001,0.05),vec2(0.14,0.115))-0.03;\n    nose = smax(nose,-sdTriangle(uv,vec2(0.16,0.23),vec2(0.132,0.135),vec2(0.19,0.0)),0.01);\n    nose = smax(nose,-sdTriangle(uv,vec2(0.16,0.08),vec2(0.11,0.0),vec2(0.19,0.0)),0.02);\n    face = min(face,nose);\n    \n    \n    return face;\n\n}\n\nfloat sdFlower(vec2 uv){\n\n    float flower = sdOrientedVesica(uv,vec2(-0.15,0.25),vec2(-0.25,0.32),0.03);\n    flower = min(flower,sdOrientedVesica(uv,vec2(-0.22,0.15),vec2(-0.15,0.25),0.03));\n    flower = min(flower,sdOrientedVesica(uv,vec2(-0.08,0.35),vec2(-0.15,0.25),0.03));\n    flower = min(flower,sdOrientedVesica(uv,vec2(-0.06,0.18),vec2(-0.15,0.25),0.03));\n    return flower;\n}\n\n///\n\nvec3 drawScene(vec2 uv) {\n\n  vec3 col = rgb(218.,209.,197.);\n  \n  float hair = sdHair(uv);\n  float face = sdFace(uv);\n  float face2 = sdFace2(uv);\n  float flower = sdFlower(uv);\n  float teeth = max(sdCircle(uv,0.04,vec2(0.11,0.01)),sdCircle(uv,0.03,vec2(0.11,-0.047)));\n  \n  float red = min(sdCircle(uv,0.03,vec2(-0.05,0.02)),sdCircle(uv,0.03,vec2(0.25,0.02)));\n  red = smoothstep(0.0, 0.1, red);\n  \n  float yellow = sdCircle(uv, 0.02,vec2(-0.15,0.25));\n\n  col = mix(rgb(0.,0.,0.), col, step(0., hair));\n  \n  col = mix(rgb(248.,112.,112.), col, step(0., face));\n  col = mix(rgb(281.,85.,88.), col,red);\n  col = mix(rgb(255.,255.,255.), col, step(0., flower));\n  col = mix(rgb(252.,218.,101.), col, step(0., yellow));\n  \n  \n  col = mix(rgb(0.,0.,0.), col, step(0., face2));\n  col = mix(rgb(255.,255.,255.), col, step(0., teeth));\n\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // <0, 1>\n  uv -= 0.5; // <-0.5,0.5>\n  uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n\n  vec3 col = drawScene(uv);\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}