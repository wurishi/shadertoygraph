{"ver":"0.1","info":{"id":"mdsGRB","date":"1666360584","viewed":130,"name":"Basic PC CRT Display","username":"Falconssj","description":"Training on doing patterns, no texture needed :)\n\n","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["crt","rgb","led","display","pc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Basic CRT PC Display. It's basically a bunch of circles, in sequence (R, G, B) and then offset by 0.5 on the next line.\n//\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 baseuv = fragCoord/iResolution.xy;\n    float aspect = iResolution.y / iResolution.x;\n    \n    //Basic Tiling Size, feel free to play with this value. 852 is basic for a 480p display.\n    float Tiling = 100. * aspect;\n    \n    vec2 uv = Tiling * baseuv;\n    \n    //Final Uvs;\n    uv.x += floor(mod(uv.y,2.0));\n    uv += mix(vec2(0.0),vec2(0.5,0.0),uv.x);\n    \n    //Change to Sphere\n    vec2 uvSphere = fract(uv) - vec2(0.5,0.5);\n    float radius = 100.0;\n    float spheres = 1.-smoothstep(radius*-0.01, radius*0.01,4. * dot(uvSphere,uvSphere));\n    spheres = clamp(0.0,1.0,spheres);\n    \n    //red mask\n    float red = 1.-floor(mod(uv.x,3.0));\n    \n    //green mask\n    float green = 1.-floor(mod(uv.x + 1.,3.0));\n    \n    //blue mask\n    float blue = 1.-floor(mod(uv.x + 2.,3.0));\n    \n    //Intensity\n    float Intensity = 2.;\n    \n    vec4 texColor = texture(iChannel0,baseuv);\n    \n    //Final Color\n    vec3 col = vec3(red,green,blue) * spheres * Intensity;\n    \n    //Uncomment to see the texture\n    //col *= texColor.xyz;\n    \n    // Output \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}