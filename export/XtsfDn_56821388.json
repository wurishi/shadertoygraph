{"ver":"0.1","info":{"id":"XtsfDn","date":"1511650810","viewed":178,"name":"[WST1] - Wroclaw My City","username":"kasztan","description":"TURN DOWN THE SOUND!!!!!!\n\nIt's my first project in ShaderToy. ","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["wroclawissp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Title: WROCLAW MOJE MIASTO, Author: KACPER ZOLADZIEJEWSKI\n// This shader is prepared for the first Wroclaw Shader Competition \n// organized by Faculty of Physics and Astronomy, Khronos Chapter and SIggraph Chapter from Wroclaw\n\n\n\n\nfloat time = 0.0;\nvec2 pos = vec2(0);  //  0 .. 1\nvec2 uv  = vec2(0);  // -1 .. 1\nvec2 tp  = vec2(0);  // text position\n    float a = 1.0;\n    float b = 1.0;\n//--- font data ---\n#define FONT_SIZE 0.10\n#define SIN_FREQ 0.75\n#define SIN_SPEED 3.0\n#define FONT_SPACE 0.45\n\n\n//----- access to the image of ascii code characters ------\n//#define S(a) c+=texture(iChannel0,clamp(tp,0.,1.)/16.+fract(floor(vec2(a,15.999-float(a)/16.))/16.)).x; uv.x-=FONT_SPACE;\n\n#define S(a) c+=char(float(a)); tp.x-=FONT_SPACE;\n\n#define _note  S(10);\n#define _star  S(28);\n#define _smily S(29);\n#define _    S(32);\n#define _exc S(33);\n#define _add S(43);\n#define _dot S(46);\n\n#define _A S(65);\n#define _B S(66);\n#define _C S(67);\n#define _D S(68);\n#define _E S(69);\n#define _F S(70);\n#define _G S(71);\n#define _H S(72);\n#define _I S(73);\n#define _J S(74);\n#define _K S(75);\n#define _L S(76);\n#define _M S(77);\n#define _N S(78);\n#define _O S(79);\n#define _P S(80);\n#define _Q S(81);\n#define _R S(82);\n#define _S S(83);\n#define _T S(84);\n#define _U S(85);\n#define _V S(86);\n#define _W S(87);\n#define _X S(88);\n#define _Y S(89);\n#define _Z S(90);\n\n#define _a S(97);\n#define _b S(98);\n#define _c S(99);\n#define _d S(100);\n#define _e S(101);\n#define _f S(102);\n#define _g S(103);\n#define _h S(104);\n#define _i S(105);\n#define _j S(106);\n#define _k S(107);\n#define _l S(108);\n#define _m S(109);\n#define _n S(110);\n#define _o S(111);\n#define _p S(112);\n#define _q S(113);\n#define _r S(114);\n#define _s S(115);\n#define _t S(116);\n#define _u S(117);\n#define _v S(118);\n#define _w S(119);\n#define _x S(120);\n#define _y S(121);\n#define _z S(122);\n\n#define _0 S(48);\n#define _1 S(49);\n#define _2 S(50);\n#define _3 S(51);\n#define _4 S(52);\n#define _5 S(53);\n#define _6 S(54);\n#define _7 S(55);\n#define _8 S(56);\n#define _9 S(57);\n\n// return character intensity of ch at position tp\nfloat char(float ch)\n{\n    float i = 16.0;\n // for (float i=1.0; i<16.1; i+=1.0){\n   vec4 f = texture(iChannel0,clamp(tp,0.,1.)/16.+fract(floor(vec2(ch,15.999-float(ch)/16.))/i));\n //   }\n  //if (iMouse.z > 0.0) \n    return f.x;   // 2d \n  //else\n   // return f.x * (f.y+0.3)*(f.z+0.3)*2.0;   // 3d\n}\n                \n//\n\nvec4 ScrollText1()\n{\n  tp = uv / FONT_SIZE+1.0;  // set font size\n\n   tp.x = 1.0*(tp.x +3.5);\n\n      float SIN_AMP = 1.0/ iResolution.y  *iTime*1.5;\n    tp.y = tp.y+SIN_AMP*sin(tp.x*SIN_FREQ+iTime*SIN_SPEED); \n\n\n  float c = 0.0;\n     _W _r _o _c _l _a _w _ _M _y \n         _ _C _i _t _y\n\n vec3 col = vec3(0.0,0.0,1.0);\n  return c * vec4(col,1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    time = mod(iTime, 17.);\n  vec2 xv = fragCoord.xy / iResolution.xy;\n  pos = fragCoord.xy / iResolution.xy; \n               \n\n    if (time < 5.0)\n    {\n        uv = pos -0.5;    \n        fragColor  = ScrollText1();\n    }   \n\tif ((time > 5.1) && (time < 5.11))\n    {\n     \n    vec3 col = vec3(0.0, 0.0, 0.0);\n        col += xv.x*iTime ;\n\tfragColor = vec4(col,1.0);\n    }\n    if ((time > 5.11) && (time <8.74))\n    {\n     float d = length(xv - vec2(0.5,0.5));\n        float phi = atan(xv.y/xv.x)+iTime*0.15*a;\n      \n     vec3 col = vec3(d,d,d)*iTime*b;\n        fragColor = vec4(col,1.0);\n    }\n        if (time > 8.75)\n     {\n           float phi = atan(xv.y/xv.x)+iTime*0.15*b;\n        float d = length(xv - vec2(0.2,0.2))*a;\n            d+= sin(phi*10.*a);\n        d=smoothstep(0.1,0.5,d);\n        vec3 col = vec3(d*sin(b+a)\n                        ,d*d+b,d/d)*iTime;\n  \t\tfragColor = vec4(col,1.0);\n     }\n    if (time > 10.0)\n    {\n\t    for (time >10.0; time < 13.0; time+=0.1)\n    \t{\n        \tvec3 col=vec3(0.2*time*sin(iTime), sin(0.2*time*xv.x*iTime*b), 0.2*time*xv.y*iTime)*a;\n        \tfragColor = vec4(col,1.0);\n    \t}\n    \tfor (time>13.0; time < 16.0; time+=0.1)\n    \t{\n        \tvec3 col=vec3(0.2*time*cos(iTime*a*b), sin(0.2*time*xv.x*iTime), 0.2*time*xv.y*iTime)*a;\n        \tfragColor = vec4(col,1.0); \n    \t}\n    }\n  \tif (time >16.0)\n    {\n\t\ta = sin(pow((a+b),10.));\n    \tb = sin(pow((a-b),10.));\n\n    }\n            \n    }\n\n        \n       \n           ","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\nvec2 mainSound( in int samp, float time )\n{//\n   if (time < 5.0) \n   {\n       \n        return vec2(sin(6.2831*440.0*(time+5.)));\n   }\n   if (time > 5.0)\n   {\n      float x;\n       float z;\n      vec2 y = vec2(0.0);\n      for (float hate =0.0; hate < 100.000; hate +=0.1)\n      {\n      if(mod(hate,2.) == 0.0)\n      {\n      x+= sin(pow(time,5.));\n      z+=sin(sqrt(pow(time,4.)+pow(time,8.)));\n      }\n      if(mod(hate,2.) != 0.0)\n      {\n              z+= sin(pow(time,5.));\n      x+=sin(sqrt(pow(time,4.)+pow(time,8.)));  \n      }\n          \n      }\nreturn vec2(x,z);\n   }\n  \n   // return vec2(0.0*time);\n}","name":"Sound","description":"","type":"sound"}]}