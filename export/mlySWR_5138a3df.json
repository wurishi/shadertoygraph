{"ver":"0.1","info":{"id":"mlySWR","date":"1686033963","viewed":48,"name":"Neon Ring Breathing","username":"ra_wonderland","description":"Kishimisu tutorial practice","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t) {\n    vec3 a = vec3(0.560, 0.168, 0.788);\n    vec3 b = vec3(0.518, 0.098, 0.578);\n    vec3 c = vec3(1.000, 1.000, 1.000);\n    vec3 d = vec3(-0.782, -0.632, 1.128);\n    \n    return a + b*cos(6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i=0.0; i < 3.0; i++) {\n        uv = fract(uv * 1.7) - 0.5;\n    \n        // Base color based on distance from center of screen\n        vec3 col = palette(length(uv0) + i * 0.4 + iTime * 0.7);\n        \n        \n        float d = length(uv) * exp(-length(uv0) + i * 0.2);\n        \n        d -= 0.2;\n\n        //d = sin(d);\n\n        d = smoothstep(0.0, 0.1, abs(d + sin(iTime*0.2)*0.2));\n        \n        d = 0.01 / d;\n        \n        finalColor += col * d;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}