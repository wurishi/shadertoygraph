{"ver":"0.1","info":{"id":"XcfXWB","date":"1705629319","viewed":83,"name":"lossless greyscale shader","username":"Kinkajou81","description":"A greyscale shader that takes into account hue and chroma.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["greyscale"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat XYZ_TO_LAB_F(float x) {\n    return x > 0.00885645167 ? pow(x, 0.333333333) : 7.78703703704 * x + 0.13793103448;\n}\n\nfloat LAB_TO_XYZ_F(float x) {\n    return (x > 0.206897) ? x * x * x : (0.12841854934 * (x - 0.137931034));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    // to xyz from rgb\n    vec3 xyz = col * mat3(0.4124, 0.3576, 0.1805, 0.2126, 0.7152, 0.0722, 0.0193, 0.1192, 0.9505);\n    \n    // to lab from xyz\n    vec3 xyz_scaled = vec3(XYZ_TO_LAB_F(xyz.x), XYZ_TO_LAB_F(xyz.y), XYZ_TO_LAB_F(xyz.z));\n    vec3 Lab = vec3((116.0 * xyz_scaled.y) - 16.0, 500.0 * (xyz_scaled.x - xyz_scaled.y), 200.0 * (xyz_scaled.y - xyz_scaled.z));\n    \n    // to lch from lab\n    float luma = Lab.x;\n    float chroma = sqrt(dot(Lab.yz, Lab.yz));\n    float hue = atan(Lab.z, Lab.y) * 57.2957795131;\n    vec3 lch = vec3(luma,chroma,hue);\n    \n    // to lab2 from lch\n    float luma2 = 100.0 - luma;\n    float a2 = lch.y * cos(lch.z * 0.01745329251);\n    float b2 = lch.y * sin(lch.z * 0.01745329251);\n    vec3 Lab2 = vec3(luma2,a2,b2);\n    \n    // to xyz2 from lab2\n    float w = (Lab2.x + 16.0) / 116.0;\n    float x2 = LAB_TO_XYZ_F(w + Lab2.y / 500.0);\n    float y2 = LAB_TO_XYZ_F(w);\n    float z2 = LAB_TO_XYZ_F(w - Lab2.z / 200.0);\n    vec3 xyz2 = vec3(0.95045592705, 1.0, 1.08905775076) * vec3(x2,y2,z2);\n    \n    // to rgb from xyz2\n    vec3 rgb2 = xyz2 * mat3(3.2406255, -1.5372080, -0.4986286, -0.9689307, 1.8757561, 0.0415175, 0.0557101, -0.2040211, 1.0569959);\n    \n    // s of rgb2\n    float delta = max(max(rgb2.x,rgb2.y),rgb2.z) - min(min(rgb2.x,rgb2.y),rgb2.z);\n    float L = max(max(rgb2.x,rgb2.y),rgb2.z) + min(min(rgb2.x,rgb2.y),rgb2.z)/2.0;\n    float s = delta/(1.0-abs(2.0*L-1.0))*100.0;\n    \n    // to greyscale\n    float greyscale = (luma - (1.0-abs(2.0*L-1.0))/2.0 * s + (rgb2.x+rgb2.y+rgb2.z)*100.0/3.0)/100.0;\n    vec3 greyscalevec = vec3(greyscale,greyscale,greyscale);\n    \n    // Final\n    fragColor = vec4(greyscalevec,1);\n}","name":"Image","description":"","type":"image"}]}