{"ver":"0.1","info":{"id":"3dBcR1","date":"1586051612","viewed":132,"name":"Peaceful Clouds","username":"NAME_REDACTED","description":"Fluffy clouds floating peacefully by.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["clouds","sky","fluffy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TIME_FACTOR .1\n\n#define SKY_COLOR vec3(.05, .4, 1.)\n#define CLOUD_COLOR vec3(1, 1, 1)\n#define CLOUD_DARK_COLOR vec3(.4, .5, .4)\n\n//cloud properties\n#define LAYERS 4\t\t\t//more layers = less fluffy\n#define CLOUD_INTENSITY 1.4\t//amount of clouds\n#define DISTANCE .2\t\t//scale factor of first layer\n#define ROUGHNESS .75 \t\t//amount contribution per each successive layer\n\nconst float div = 1. / (float(LAYERS) * ROUGHNESS);\n\nfloat FractalCloud(vec2 position, vec2 delta)\n{\n    float step = DISTANCE;\n    float mul = CLOUD_INTENSITY;\n    float p = 0.;\n    for (int i = 0; i < LAYERS; i++)\n    {\n        vec2 coord = position * step + delta * sqrt(step);\n        p = p + texture(iChannel1, coord).r * mul;\n        step *= 1.75;\n        mul *= ROUGHNESS;\n    }\n\treturn p * div;\n}\n\n\n#define MASK_LAYERS 3\nfloat CloudMask(vec2 position, vec2 delta)\n{\n    float step = .15;\n    float p = .25;\n    float mul = 1.;\n    for (int i = 0; i < MASK_LAYERS; i++)\n    {\n        vec2 coord = (position) * step + delta;// + sqrt(delta);\n        float k = texture(iChannel2, coord).r;\n        //k = cos(k * TAU);\n        p += k * mul;\n        mul = mul * -.5;\n        step = step * 2.;\n    }\n\treturn p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float time = iTime * TIME_FACTOR;\n\n    //fractal clouds\n    float cloudIntensity = sin(time * .5 + uv.x * 1.5);\n    cloudIntensity = 1.25 + cloudIntensity * .75;\n    \n    float p = FractalCloud(uv, vec2(time * .3, time * -.15));\n    p *= (.5 + CloudMask(uv, vec2(time * .15, time * .05)) * cloudIntensity);\n\tp = smoothstep(0., 2., p) * 2.;\n    \n    float dark = max(p - 1., 0.);\n    dark =log(1. + dark);\n    float light = min(p, 1.);\n    fragColor = vec4(mix(\n        mix(SKY_COLOR, CLOUD_COLOR, smoothstep(0.,1.,light)), \n        CLOUD_DARK_COLOR, smoothstep(0.,1.,dark)),\n        1.);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI\t\t3.1415926535979\n#define TAU\t\t6.2831853071796\n#define HALF_PI 1.5707963267949\n#define SQRT2\t1.4142135623731","name":"Common","description":"","type":"common"}]}