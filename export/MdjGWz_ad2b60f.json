{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float f(vec2 uv)\n{\n\treturn mix(asin(uv.x) - uv.y, asin(uv.y) - uv.x, cos(iTime) * 0.5 + 0.5);\n\t\n\t//return asin(uv.x) - uv.y;\n}\n\nvec2 p(vec2 xy)\n{\n\tvec2 uv = xy / iResolution.xy;\n\tuv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n\tuv *= 10.0;\n\treturn uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 phv = p(fragCoord.xy);\n\tvec2 ph0 = p(fragCoord.xy + vec2(-1,0));\n\tvec2 ph1 = p(fragCoord.xy + vec2(1,0));\n\tvec2 pv0 = p(fragCoord.xy + vec2(0,-1));\n\tvec2 pv1 = p(fragCoord.xy + vec2(0,1));\n\t\n\tfloat hv = f(phv);\n\tfloat h0 = f(ph0);\n\tfloat h1 = f(ph1);\n\tfloat v0 = f(pv0);\n\tfloat v1 = f(pv1);\n\t\n\tbool onFunction = (h0 < 0.0 && h1 > 0.0) ||\n\t\t\t\t\t(v0 < 0.0 && v1 > 0.0) ||\n\t\t\t\t\t(h0 > 0.0 && h1 < 0.0) ||\n\t\t\t\t\t(v0 > 0.0 && v1 < 0.0);\n\t\n\tbool onAxis = (ph0.x < 0.0 && ph1.x > 0.0) ||\n\t\t\t\t\t(pv0.y < 0.0 && pv1.y > 0.0) ||\n\t\t\t\t\t(ph0.x > 0.0 && ph1.x < 0.0) ||\n\t\t\t\t\t(pv0.y > 0.0 && pv1.y < 0.0);\n\t\n\tvec4 col = vec4(1,1,1,1);\n\t//vec4 col = mix(vec4(1,0.5,0,1),vec4(1,1,1,1),abs(hv) / 1.0);\n\t\n\tfragColor = (onFunction ? vec4(1,0,0,1) :\n\t\t\t\t\tonAxis ? vec4(0,0,0,1) :\n\t\t\t\t\tcol);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdjGWz","date":"1386433402","viewed":339,"name":"Equation Plotter","username":"HLorenzi","description":"Basic equation plotter! Just trying new ideas for another shader...","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","line","curve","graph","function","plot","f","equation","plotter"],"hasliked":0,"parentid":"","parentname":""}}