{"ver":"0.1","info":{"id":"XtKBWy","date":"1543905044","viewed":109,"name":"Power plant","username":"Ridge","description":"Had some fun making this :)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors","blink","cannabis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI (asin(1.0)*2.0)\n\nfloat blink(float a){return pow(abs(sin(iTime*2.0 + a)),12.0);} \nmat2 rot(float a){float c = cos(a), s = sin(a); return mat2(c, s, -s, c);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.x*2.0;\n    uv -= vec2(1.0, iResolution.y/iResolution.x);\n\n    uv *= rot(iTime*0.1);\n    \n    uv.x += sin(uv.y*3.0+iTime)*0.05;\n    uv.y += sin(uv.x*3.0+iTime*0.9)*0.10;\n    \n    // Time varying pixel color\n    float uvAngle = atan(uv.y, uv.x)/PI;\n\n    float pentagonAngle = mod(uvAngle*4.5+length(uv)*sin(iTime*0.3), 1.0);\n    \n    float pentagon = mod((length(uv)*0.75+pow(sin(iTime),4.0)*0.1-abs(pentagonAngle-0.5))*3.0, 2.0);\n    pentagon += mod((length(uv)-abs(pentagonAngle-0.5))*3.0, 0.2) -0.1;\n    \n    vec3 col = vec3(pentagon*0.4+0.2 + blink(0.0)*0.25,pentagon+ blink(1.05)*0.25,pentagon*0.1+blink(2.1)*0.25);\n    col += -pow(abs(sin(length(uv)-iTime)), 12.0)*0.4;\n    \n    col += vec3(sin(iTime+uv.x*0.4),sin(iTime*1.2+uv.x*0.5)*0.4,sin(iTime*1.4+uv.x*0.6))*length(col);\n    col = vec3(col.r, pow(col.y*0.6, 0.8), col.z);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}