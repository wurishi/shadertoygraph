{"ver":"0.1","info":{"id":"ddBXWG","date":"1670789818","viewed":193,"name":"SDF pixel outlines fwidth","username":"holoy","description":"First SDF test using fwidth for blocky or smooth 1px wide outlines.","likes":0,"published":1,"flags":0,"usePreview":1,"tags":["sdf","outline","fwidth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float sdf = texture(iChannel0, uv).r; // TODO: better grayscale\n\n    // contour-height [0,1]\n    float contour = 0.5 + 0.5*sin(1.*iTime+2.3);\n    \n    // 1px wide line\n    float padding = length(vec2(dFdx(sdf),dFdy(sdf))) * 0.5; // 0.5 => abs(sdf-contour) folds the sdf in half, therefore padding is applied twice.\n    float line1px_blocky = 1. - step(padding, abs(sdf-contour));\n    float lineXpx_blocky = 1. - step(1.2*padding, abs(sdf-contour));\n    float line1px_smooth = 1. - smoothstep(0., padding, abs(sdf-contour));\n    float lineXpx_smooth = 1. - smoothstep(0., 1.45*padding, abs(sdf-contour));\n    float line2px_smooth = 1. - smoothstep(0., 2.*padding, abs(sdf-contour));\n \n    /* Idea:\n    - line1px_smooth  is too aliased\n    - line1px_blocky  is too blocky\n    combine both to isolate corners and make them gray.\n    */\n    //float line = line1px_blocky+sqrt(2.)/2.*(lineXpx_blocky-line1px_blocky);\n    float corners = sqrt(max(0., lineXpx_smooth-line1px_blocky));\n    float line = line1px_blocky + corners;\n    //line = corners;\n    \n    //line = sqrt(lineXpx_smooth);\n    //line = line1px_smooth;\n    //line = line1px_blocky;\n    \n    //edited: gamma correction\n    float gamma = 2.2;\n    line = pow(line, 1.0/gamma);\n\n    fragColor = vec4(line, line, line, 1.);\n}","name":"Image","description":"","type":"image"}]}