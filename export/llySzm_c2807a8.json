{"ver":"0.1","info":{"id":"llySzm","date":"1483564169","viewed":217,"name":"Font Demo 32","username":"gigatron","description":"Another quick Mad amiga cracktro screen 3.. example","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["oldschool","amiga","font"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldjGRV","filepath":"https://soundcloud.com/user-115435970/jumpin-jackson-mad-cracktro","previewfilepath":"https://soundcloud.com/user-115435970/jumpin-jackson-mad-cracktro","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/// FONT DEMO 32 // MAD AMIGA CRACKTRO SCREEN 3\n// --- access to the image of ascii code c // from Fabrice ;\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel0, U/14.5 + fract( floor(vec2(c, 15.99999-float(c/16))) / 16.0))\n\n\nfloat l1(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);\n     C(3);C(3);C(3);C(3);\n \n    return length(T.yz)==0. ? 0. : T.x;\n}\n\nfloat l2(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(32);C(32);C(32);C(32);C(32);;C(32);C(32);C(32);C(32);C(32);C(32);\n     C(32);C(32);C(3);C(3);  \n \n    return length(T.yz)==0. ? 0. : T.x;\n}\nfloat l3(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(71);C(82);C(69);C(69);C(84);;C(73);C(78);C(71);C(83);C(32);C(84);\n     C(79);C(58);C(3);C(3);  \n \n    return length(T.yz)==0. ? 0. : T.x;\n}\n\nfloat l4(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(32);C(32);C(32);C(32);C(32);;C(32);C(32);C(32);C(32);C(32);C(32);\n     C(32);C(32);C(3);C(3);  \n \n    return length(T.yz)==0. ? 0. : T.x;\n}\nfloat l5(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(32);C(32);C(65);C(76);C(76);;C(32);C(77);C(46);C(65);C(46);C(68);\n     C(32);C(32);C(3);C(3);  \n \n    return length(T.yz)==0. ? 0. : T.x;\n}\n\n//065 076 076 032 077 046 065 046 068\n\n\nfloat l6(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);\n     C(32);C(32);C(3);C(3);\n \n    return length(T.yz)==0. ? 0. : T.x;\n}\nfloat l7(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     \n    C(3);C(3);C(32);C(32);C(45);C(67);C(79);C(78);C(84);C(65);C(67);C(84);C(83);\n     C(45);C(32);C(3);C(3); \n \n    return length(T.yz)==0. ? 0. : T.x;\n}\nfloat l8(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);C(32);\n     C(32);C(32);C(3);C(3);\n \n    return length(T.yz)==0. ? 0. : T.x;\n}\n\n\n\nfloat l9(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0); \n     C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);C(3);\n     C(3);C(3);C(3);C(3); \n \n    return length(T.yz)==0. ? 0. : T.x;\n}\n\nvec3 hsv2rgb_smooth( in vec3 c )\n{\n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\nvec2 rotate(vec2 point, float rads) {\n\tfloat cs = cos(rads);\n\tfloat sn = sin(rads);\n\treturn point * mat2(cs, -sn, sn, cs);\n}\n\nfloat star(vec2 p) {\n\tfloat i = (length(p) > 0.8) ? 1. : 0.;\n\t\tfloat j = 0.0;\n\tfor (float i=0.0; i<360.0; i+=72.0)\n\t{\n\t\tvec2 p0 = rotate(p.yx, radians(i)+mod(iTime*2.,1.25));// no sinus needed here //\n\t\tif (p0.x > 0.020) j++;\n\t}\n\n\treturn  (j<2.? 1. : 0.)  ;\n\t\n\t\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n   \n    \n    float t=mod(iTime*8.0,85.0);\n    float t1=iTime;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy*2.-1.;\n\t\t\t\n\t\tuv.x *= iResolution.x/iResolution.y;\n\t    \n        if(t1 >=8.0) uv = rotate(uv*1.2,sin(4.*t1*0.2)*3.1415926);\t\n       \n    \n          float smp = texture(iChannel1,uv).z;\n          float mx  = max(smp,0.2+0.2)-0.2;\n          float xx=-5.0;\n          float cc=1.0; \n          \n       \n  \n      uv *=9.0-min(t,6.5);           \n                \n float a = l1(uv-vec2(xx,1.8));  \n    \n       uv *=9.0-min(t-1.,8.0);\n       a += l2(uv-vec2(xx,1.25));\n    \n       uv *=9.0-min(t-2.,8.0);\n       a += l3(uv-vec2(xx,0.7));\n    \n       uv *=9.0-min(t-4.,8.0);\n       a += l4(uv-vec2(xx,0.15));\n    \n       uv *=9.0-min(t-6.,8.0);\n       a += l5(uv-vec2(xx,-.4));\n    \n       uv *=9.0-min(t-8.,8.0);\n       a += l6(uv-vec2(xx,-0.95));\n        \n       uv *=9.0-min(t-10.,8.0);\n       a += l7(uv-vec2(xx,-1.5));\n    \n       uv *=9.0-min(t-12.,8.0);\n       a += l8(uv-vec2(xx,-2.05));\n    \n       uv *=9.0-min(t-14.,8.0);\n       a += l9(uv-vec2(xx,-2.6));\n  \n       float final =a; \n        \n  \n       if(final>=0.41){fragColor =vec4( final);}\n// color section !   \n         \n   vec2 uvc = fragCoord.xy / iResolution.xy; \n    \n   float clr =2.0*uvc.y-(iTime/2.0); \n   vec3 hsvColor = hsv2rgb_smooth(vec3(clr, 1.0, 1.0)); \n       \n   fragColor *=vec4(hsvColor, 1.0);\n     \n    \n}","name":"Image","description":"","type":"image"}]}