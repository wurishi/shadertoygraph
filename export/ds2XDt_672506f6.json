{"ver":"0.1","info":{"id":"ds2XDt","date":"1671115825","viewed":138,"name":"Multi-Step Conic Gradient","username":"kazijawad","description":"A simple way to create a multi-step conic gradient.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["gradient","conic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nvec2 rotate(vec2 st, float angle) {\n    return vec2(\n        st.x * cos(angle) - st.y * sin(angle),\n        st.x * sin(angle) + st.y * cos(angle)\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    uv = rotate(uv - vec2(0.0), iTime);\n\n    float angle = -atan(uv.y, uv.x);\n    uv = vec2(angle / PI * 0.5 + 0.5, 0.0);\n\n    fragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n\n    vec3 col = vec3(0.902, 0.297, 0.234);\n    col = mix(col, vec3(0.898, 0.492, 0.133), smoothstep(0.0, 0.25, uv.x));\n    col = mix(col, vec3(0.941, 0.766, 0.059), smoothstep(0.25, 0.50, uv.x));\n    col = mix(col, vec3(0.180, 0.797, 0.441), smoothstep(0.50, 0.75, uv.x));\n    col = mix(col, vec3(0.102, 0.734, 0.609), smoothstep(0.75, 1.00, uv.x));\n\n    fragColor = vec4(col, 1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}