{"ver":"0.1","info":{"id":"llK3DG","date":"1476633267","viewed":442,"name":"Nyan Cat Wave Stereogram","username":"ttoinou","description":"My brother and I made this stereogram.\nHorizontal click for speed, vertical click for nyan opacity.\nMore features and 3D shapes coming soon !","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["3d","waves","nyan","illusion","stereogram","optic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWOPI \t\t\t\t6.28\n#define maxLoopCancellation 20\n#define maxLoop \t\t\t50\n#define eyesDist_ \t\t\t(180.)\n#define faceScreenDist_ \t(1000.)\n#define patternRepeat \t\t(3.*eyesDist_)\n#define bounds \t\t\t\t(10000.)\n\n//------------------------------------------------------------------------------\nfloat shapeDistance(vec2 uv, float time)\n{\n    float A = 60.;\n    float B = 0.9*patternRepeat;\n    float C = 1.;\n    float D = 450.;\n    return A*cos( ( length(uv)/B + time/C)*TWOPI ) + D;\n} // shapeDistance()\n\n//------------------------------------------------------------------------------\nvec2 viewport(vec2 p)\n{   \n    return vec2( (2.*p.x - iResolution.x)/ iResolution.y,\n                  2.*p.y                 / iResolution.y - 1.);\n    \n    //return p/min(iResolution.x,iResolution.y);\n} // viewport()\n\n//------------------------------------------------------------------------------\nfloat func2cancel(vec2 uv, float time, float xP,float eyesDist, float faceScreenDist)\n{\n    return shapeDistance(vec2(xP,uv.y),time)*(uv.x - eyesDist) + (uv.x - xP)*faceScreenDist;\n} // func2cancel()\n\n//------------------------------------------------------------------------------\nfloat cancellation(vec2 uv, float time, float eyesDist, float faceScreenDist)\n{\n    float a = -bounds, b = bounds; // (iMouse.x/iResolution.x*200.);\n    float ga = func2cancel(uv,time,a,eyesDist,faceScreenDist);\n    float gb = func2cancel(uv,time,b,eyesDist,faceScreenDist);\n    \n    for( int i = 0 ; i < maxLoopCancellation ; i++ )\n    {\n        float m = 0.5*(a+b);\n        float gm = func2cancel(uv,time,m,eyesDist,faceScreenDist);\n        \n        if( gm*ga >= 0. )\n        {\n        \ta = m;\n            ga = gm;\n        }\n        else\n        {\n            b = m;\n            gb = gm;\n        }\n    } // while()\n    \n    return 0.5*(a+b);\n} // cancellation()\n\n//------------------------------------------------------------------------------\nvec2 intersectionStereogram(vec2 uv, float time, float eyesDist, float faceScreenDist,float rightToLeft)\n{\n/*\n//newX = xP - fxP*( eyesDist + xP )/(faceScreenDist + fxP);\n\n//float fx = shapeDistance(uv,time);\n//xP = uv.x + fx * ( uv.x - eyesDist )/faceScreenDist;\n//fxP = fx;\n//newX = xP - fxP*( eyesDist + xP )/(faceScreenDist + fxP);\n//newX = -eyesDist + faceScreenDist / ( faceScreenDist + fxP ) * ( xP + eyesDist );\n*/\n    float xP = cancellation(uv,time,rightToLeft * eyesDist,faceScreenDist);\n    float fxP = shapeDistance(vec2(xP,uv.y),time);\n    //float newX = - rightToLeft * eyesDist + faceScreenDist * ( xP + fxP ) / ( faceScreenDist + fxP );\n    float newX = - rightToLeft * eyesDist + faceScreenDist * ( xP + rightToLeft * eyesDist ) / ( faceScreenDist + fxP );\n\n    return vec2(newX,uv.y);\n} // intersectionStereogram()\n\n//------------------------------------------------------------------------------\nvoid mainImage( out vec4 color, in vec2 coord )\n{\n    vec2 uv = viewport(coord)*patternRepeat;\n    \n    \n    float time = iTime*mix(1./1.5,1./8., clamp(iMouse.x/iResolution.x,0.,1.) );\n    float patternWidth = 1./patternRepeat;\n    float eyesDist = eyesDist_;\n    float faceScreenDist = faceScreenDist_;\n    \n    float xP;\n    float fxP;\n    float newX;\n    \n\tfloat size = intersectionStereogram(vec2(0.,uv.y),time,eyesDist,faceScreenDist,-1.0).x;\n    \n    \n    for( int i = 0 ; i < maxLoop ; i++ )\n    {\n        \n        if( uv.x > size )\n        {\n\t\t\tuv = intersectionStereogram(uv,time,eyesDist,faceScreenDist,1.0);\n        }\n        else if( uv.x < 0. )\n        {\n\t\t\tuv = intersectionStereogram(uv,time,eyesDist,faceScreenDist,-1.0);\n        }\n        else\n        {\n            break;\n        }\n        \n    } // for()\n    \n        \n    color = texture(iChannel0,uv/size);\n    \n    float nyanSpeed = 16.;\n    vec2 vecNyan = vec2( uv.x/size , uv.y/size);\n    vecNyan.x = mod(vecNyan.x,1.);\n    vecNyan.y = mod(vecNyan.y,2.);\n    if( vecNyan.y > 1. ){\n        vecNyan.y -= 1.;\n        nyanSpeed *= 1.;\n        vecNyan.x = 1. - vecNyan.x;\n    }\n    vecNyan.x = (mod(vecNyan.x - time/4.0,1.0) + floor(mod(time*nyanSpeed,6.0)) ) * 40./256.;\n    vecNyan.x = mod(vecNyan.x,1.);\n    \n    vec4 nyan = texture(iChannel1,vecNyan);\n    color = mix( color , nyan , clamp( (iMouse.y/iResolution.y)*nyan.a,0.,1.) );\n    \n} // mainImage()","name":"Image","description":"","type":"image"}]}