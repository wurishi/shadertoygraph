{"ver":"0.1","info":{"id":"lXsGzr","date":"1719192267","viewed":74,"name":"shatter effect","username":"ProfessorPixels","description":"this shader is a shatter effect that I've seen on some fonts in the David Walliams books","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float inc = 2.0*iMouse.x;\n    // Normalized pixel coordinates (from 0 to 1)\n    if (inc<.001) inc = (sin(iTime)*.5+.5)*iResolution.x;\n    vec2 uv = 2.0*((mod(fragCoord,inc)+(ceil(fragCoord/inc)*inc/2.0)))/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}