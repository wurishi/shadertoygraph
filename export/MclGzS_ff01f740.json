{"ver":"0.1","info":{"id":"MclGzS","date":"1703345755","viewed":31,"name":"accordianbuildings","username":"javelamaker","description":"i buildin","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["building"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 offset = vec2(.5,.5);\n    vec2 size = vec2(10,5.8);\n   \n    uv-=offset;\n    uv*=size/3.;\n    \n    float rotx = sin(iTime)/30.;\n    float c = cos(rotx);\n    float s = sin(rotx);\n    mat2 rotm = mat2(c,-s,\n                     s,c);\n                     \n    uv *= uv.y+11. * rotm;\n                     \n\n    // Time varying pixel color\n    vec3 col = vec3(.3,.2,.2) * (1.-dot(uv+offset,uv+offset)/300.);\n    \n    float frequency = 1.;\n    float windowsfr = step(.6 + sin(uv.y*12.)/3., (fract((-uv.y+iTime/10.)* 3.))) * step(.3 + sin(uv.x*12.)/3., (fract((-uv.x+iTime/10.)* 3.)));\n    float window =  1.-fract(dot(fract(uv-offset+vec2(iTime/10.,0)),fract(uv-offset)))*1.5;\n    float building = (step(3.,(uv.y+5. - (2.+2.* sin(floor((uv.x * (2.+sin(uv.y/2. + iTime*2.)/4.)+iTime*10.)*frequency + (sin(iTime*2.)/5.)+.5)*4321.)* (1.+windowsfr)))));\n    float sidebuilding = step(3.,(uv.y+5. - (2.+2.* sin(floor((uv.x * (2.+sin(uv.y/2. + iTime*2.)/5.)+(iTime*10.)+1.)*frequency)*4321.)))) * 1.-building * window;\n    col += floor((sidebuilding*mix(vec3(.5,.4,.3), vec3(.2,.5,.7), sin(uv.y*4.))-building * vec3(.2,1.,.2))*4.)/4.;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}