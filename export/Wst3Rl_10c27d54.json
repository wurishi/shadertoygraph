{"ver":"0.1","info":{"id":"Wst3Rl","date":"1569103080","viewed":961,"name":"hexagon force field","username":"Angramme","description":"based on the tuts of Art Of Code","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["hexagon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(vec2 p) {\n\tp = abs(p);\n    \n    float c = dot(p, normalize(vec2(1,1.73)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\n\nvec4 HexCoords(vec2 uv) {\n\tconst vec2 r = vec2(1, 1.73);\n    const vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .5-HexDist(gv);\n    vec2 id = uv-gv;\n    return vec4(x, y, id.x,id.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    \n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 uv1 = uv + vec2(0, sin(uv.x*5. +t)*.02);\n    \n    vec2 uv2 = .5*uv1 + .5*uv + vec2(sin(uv.y*5. + t)*.02, 0);\n    float a = 1. + t*.05;\n    float c = cos(a);\n    float s = sin(a);\n    uv2 *= mat2(c, -s, s, c);\n    \n    vec3 col = vec3(0);\n    col += smoothstep(.05, .0, HexCoords(uv1*5.).y) * vec3(.2, .2, 1.);\n    col += smoothstep(.1, .0, HexCoords(uv2*20.).y) * vec3(.1, .1, .3);\n    \n    col *= dot(sin(uv*vec2(cos(uv.x*1.3), 7.)+t*2.), vec2(.7, .55974))*1.2+3.;\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}