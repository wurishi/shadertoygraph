{"ver":"0.1","info":{"id":"3tffzN","date":"1596101002","viewed":158,"name":"Rotating Tunnel Thingy","username":"julianlumia","description":"Random sketch old sketch out of my archive, made it public","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox(vec3 p, vec3 s) {\np = abs(p)-s;\nreturn length(max(p, 0.))+min(max(p.x, max(p.y, p.z)), 0.);\n}\n\nvec2 condmin(in vec2 d1, in vec2 d2) {\nreturn vec2(min(d1.x, d2.x), mix(d1.y, d2.y, step(d2.x, d1.x)));\n}\n\nfloat g1;\nfloat g2;\n\nvec2 GetDist(vec3 p) {\nvec3 p2 = p;\nfloat gap = .1;\n\np2.z = mod(p.z + gap,2.0 * gap) - gap;\n\nfloat r = 3.14159*2.*sin(p.z*0.2)+(iTime*.5);\n    mat2 R = mat2(cos(r), sin(r), -sin(r), cos(r));\n //   p2.xy *= R ;  \nvec3 p3 = p;\n    \nfloat gap2 = 1.;\n    \np3.z = mod(p.z + gap2,2.0 * gap2) - gap2;  \n    \n    \nvec2 box2 = vec2(sdBox(p2-vec3(0,0,0), vec3(.6,.60,0.02)),2.); \nvec2 box22 = vec2(sdBox(p2-vec3(0,0,0), vec3(.5,.5,0.6)),4.); \nbox2.x = max(-box22.x,box2.x);\nvec2 box3 = vec2(sdBox(p3-vec3(sin(p.z+iTime*0.6)*0.5,cos(p.z+iTime*0.6)*0.5,0), vec3(0.01,0.01,1.)),5);\n//vec2 sphereg = vec2(length(p-vec3(cos(p.z+iTime*0.3)*0.5,sin(p.z+iTime*0.5)*0.5,iTime+2.)) - 0.3,5);\nvec2 sphereg = vec2(length(p-vec3(0.,0.,iTime+2.)) - .4,5)*1.;\nvec2 d = condmin(box2,box3);\nvec2 boxg = vec2(sdBox(p-vec3(sin(iTime*0.5)*0.5+0.1,cos(iTime*0.2)*0.5+0.2,iTime+2.), vec3(.1)),5);\ng1 +=1./(0.05+pow(abs(boxg.x),1.));\n//g2 +=1./(0.25+pow(abs(sphereg.x),10.));\n//d = condmin( d,boxg);\nd = condmin( d,sphereg);\nreturn d;\n}\n\nvec2 RayMarch(vec3 ro, vec3 rd) {\nvec2 h, t=vec2( 0.);   \nfor (int i=0; i<64; i++) \n{   \nh = GetDist(ro + t.x * rd);\nif(h.x<.000001||abs(t.x)>70.) break;\nt.x+=h.x *1.;\nt.y=h.y;\n}\nif(t.x>100.) \nt.x=1.;\nt.x +=h.x*1.;\nreturn t;\n}\n\n\nfloat traceRef(vec3 ro, vec3 rd)\n{    \n float t = 0., d;\n for (int i = 0; i < 48; i++){\n d = GetDist(ro + rd*t).x;    \n if(abs(d)<.002 || abs(t)>100.) break;    \n t += d;\n}\nreturn t;\n}\n\nvec3 GetNormal(vec3 p){\nvec2 e = vec2(.00035, -.00035); \nreturn normalize(\n e.xyy * GetDist(p + e.xyy).x + \n e.yyx * GetDist(p + e.yyx).x + \n e.yxy * GetDist(p + e.yxy).x + \n e.xxx * GetDist(p + e.xxx).x);\n}\n\n\nfloat GetLight(vec3 p, vec3 n) {\nvec3 lightPos = vec3(sin(iTime*0.5)*0.5+0.2,cos(iTime*0.2)*0.5+0.2,iTime+2.);\nvec3 l = normalize(lightPos-p);\nfloat dif = clamp(dot(n, l)*.5+.5, 0., 1.);\nvec2 d = RayMarch(p+n*.001*5., l);\nif (d.x<length(lightPos-p)) dif *= 0.5;\nreturn dif;       \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\nvec3 col = vec3(0);\n// ro = vec3(cos(iTime)*0.2+0., sin(iTime)*0.5+0.2, iTime);\n    vec3 ro = vec3(0,0,iTime);\nvec3 ro2 = vec3(0., 0.,iTime+19.);   \nvec3 rd = vec3(uv.x,uv.y-0., 1.);\nvec2 d = RayMarch(ro, rd);\nfloat t =d.x *1.;   \nif(t>0.){\nvec3 p = ro + rd *t;\nvec3 baseColor = vec3(1.,1.,1.);\nif(d.y==1.) baseColor=vec3(sin(p.z*2.+iTime*4.)*0.2+0.5,.5,0.3);\nif(d.y==2.) baseColor=vec3(-sin(p.z*0.01*iTime)*0.5,0.0,0.1);\nif(d.y==3.) baseColor=vec3(0.,0.5,.5);\nif(d.y==10.) baseColor=vec3(0,0.,0.);   \nif(d.y==5.) baseColor=vec3(0.,1.,0.5);   \nvec3 n = GetNormal(p);  \nfloat dif = GetLight (p,n); \ncol = vec3(dif);  \ncol+=baseColor;   \nfloat fog = 1. / (1. + t * t * .1);\ncol *= vec3(fog);    \nif(d.y==5.){  \nt = traceRef(ro2 + rd*1., rd);\np = ro2 + rd *ro2;\nn = GetNormal(p);\nfloat dif = GetLight (p,n); \nn = vec3(dif);  \ncol += n *5. ;    \n} \n}\ncol *=g1*vec3(0.05);\nfloat fog = 1. / (1. + t * t * 1.);   \ncol *= vec3(fog);    \nfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}