{"ver":"0.1","info":{"id":"MXlSzs","date":"1709872197","viewed":48,"name":"uncountably many uncountable set","username":"qwert33","description":"This shader visualizes how the reals could be partitioned into uncountably many sets of uncountable size.\nEach horizontal line has unique numbers and has uncountably many.\nThere's only so much bit depth in to visualize so I split it over the RGB channels.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["math","infinity","reals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float peel_bit(inout float x) {\n    x *= 2.;\n    float bit = floor(x);\n    x = fract(x);\n    return bit;\n}\n\nvoid peel_a_couple(inout vec2 source, out float acc) {\n    float factor = .5;\n    acc = 0.;\n    for (int i=0; i<8; ++i) {\n        acc += factor * peel_bit(source.x);\n        factor *= .5;\n        acc += factor * peel_bit(source.y);\n        factor *= .5;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float factor = .5;\n    vec3 acc = vec3(0.);\n        \n    if (iMouse.x/iResolution.x > 0.5) {\n        // peel it into the RGB channels\n        for (int i=0; i<32; ++i) {\n            acc += factor * peel_bit(uv.x);\n            factor *= .5;\n            acc += factor * peel_bit(uv.y);\n            factor *= .5;\n        }\n    } else {\n        // peel it into black and white\n        peel_a_couple(uv, acc.r);\n        peel_a_couple(uv, acc.g);\n        peel_a_couple(uv, acc.b);\n    }\n    \n    vec3 col = vec3(acc);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}