{"ver":"0.1","info":{"id":"wtdyzf","date":"1609669368","viewed":101,"name":"Alfx Fog 1","username":"chenwanwan13","description":"simple large-scale fog","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fog"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 1000\n#define MAX_DIST 1000.0\n#define SMALL_DIST 0.01\n\n//color setting\nvec3 sphereCol = vec3(0.98,0.89,0.32);\nvec3 planeCol = vec3(0.86, 0.3, 0.43);\nvec3 fogCol = vec3(1.0, 1.0, 1.0);\nfloat fogdepth = 11.0;\n\n//----------------------------------\nfloat DistSphere(vec3 p, vec4 sphere) {\n    return length(p - sphere.xyz) - sphere.w;\n}\n\nvec4 GetDist(vec3 p) {\n    vec3  m = vec3(0.0,0.5,7.0);\n   \n    \n    vec4 sphere0 = vec4(m.x, m.y , m.z, 0.5); \n    sphere0.xz += 2.0*vec2(sin(2.0 * iTime), 2.0 * cos(iTime)); \n    \n    float DistPlane = p.y;\n    float Sphere = DistSphere(p, sphere0);\n    float minimum = min(Sphere, DistPlane);\n   \n    if (minimum == Sphere) {\n        return vec4(sphereCol, Sphere);\n    }\n    return vec4(planeCol, DistPlane);\n}\n\nfloat RayMarch (vec3 RayOri, vec3 RayDi) {\n    float DistOrig = 0.0;\n    for (int i = 0; i < MAX_STEPS; ++i) {\n        vec3 p = RayOri + DistOrig * RayDi;\n        float dist = GetDist(p).w;\n        DistOrig += dist;\n        if (dist < SMALL_DIST || DistOrig > MAX_DIST) break;\n    }\n    return DistOrig;\n}\n\nvec3 GetColour(vec3 p) {\n    vec3 col = vec3(0.0);\n    for (int i = 0; i < 1; ++i) {\n        vec3 amb = GetDist(p).xyz * 0.9;\n        col += (amb);\n    }\n\n    float fog = 1.0-clamp(length(p) / 13.0, 0.0, 1.0); //method 1\n    fog = exp(-0.22*length(p));//method 2 beer-lambert\n\tcol = fogCol * (1.0 - fog) + fog * col;\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0, 0.0, 0.0);\n    vec3 RayOri = vec3(0, 1, 0);\n    vec3 RayDi = normalize(vec3(uv.x, uv.y, 1));\n    float d = RayMarch(RayOri, RayDi);\n    vec3 p = RayOri + RayDi * d;\n    col = GetColour(p);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}