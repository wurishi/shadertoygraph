{"ver":"0.1","info":{"id":"XsdGRX","date":"1451334590","viewed":416,"name":"Learning Sine Wave","username":"mordof","description":"An example of creating a simple sine wave.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["learning","sinewaves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat x = fragCoord.x;\n    float y = fragCoord.y;\n    vec4 color = vec4(1.0,1.0,1.0,1.0);\n    \n    float desiredX = iResolution.x / 2.0;\n    float desiredY = iResolution.y / 2.0;\n    bool whiteBG = true;\n    \n    if( abs(x - desiredX) < 0.6 || abs(y - desiredY) < 0.6 ) {\n        color = vec4(0.0,0.0,0.0,0.0);\n        whiteBG = false;\n    }\n   \n    float desiredWaveWidth = 128.0;\n    float wavesOnScreen = iResolution.x / desiredWaveWidth;\n    float gradientWidth = 5.0;\n    float sinWaveHeight = 130.0;\n    float sinWaveSpeedMultiplier = 2.5;\n    float sinWaveWidth = iResolution.x / (3.141592 * wavesOnScreen);\n        \n    float xInWidth = x / sinWaveWidth;\n    float sinWaveMovementModifier = 0.0;\n    // uncommenting the sinWaveMovementModifier below will cause\n    // the sin wave to move horizontally across the screen.\n    sinWaveMovementModifier = iTime * sinWaveSpeedMultiplier;\n    \n    float sinx = sin(sinWaveMovementModifier + xInWidth);\n    float sinxPositive = (sinx + 1.0) / 2.0;\n                     \n   \tfloat yInHeight = sinWaveHeight * sinxPositive;\n    float centerScreenOffset = (iResolution.y / 2.0) - sinWaveHeight / 2.0;\n    \n    float siny = yInHeight + centerScreenOffset;\n    \n    float distance = abs(siny - y);\n\n    if(distance < gradientWidth){\n        if(whiteBG == true){\n        \tcolor.g = (distance / gradientWidth);\n        \tcolor.b = (distance / gradientWidth);\n        } else {\n            color.r = 1.0 - (distance / gradientWidth);\n        }\n    }\n    \n\tfragColor = color;\n}","name":"","description":"","type":"image"}]}