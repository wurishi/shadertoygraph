{"ver":"0.1","info":{"id":"4tVczK","date":"1536943653","viewed":283,"name":"CheckerBoard Pattern","username":"sjracer12","description":"The checkerboard pattern that can have the rows, columns, primary and secondary colors, and the transparency","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rows = 10.0,\n      cols = 10.0; // Meant to symbolize the number of rows and columns per each pattern square\n\nfloat transparency = 1.0; // Change the transparency of the pattern\n\n\nvec4 patternColorOne = vec4(1.0,1.0,1.0,1.0),\n     patternColorTwo = vec4(0.0,0.0,0.0,1.0); // Meant to let user change the color of the pattern (if desired)\n\nvec4 chooseColorBasedOnPattern (vec2 uv, vec4 patternColorOne, vec4 patternColorTwo); // Function protoype for changing color based on pattern\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord/iResolution.xy; // Normalized pixel coordinates (from 0 to 1)\n\n    fragColor = chooseColorBasedOnPattern (uv, patternColorOne, patternColorTwo);\n}\n\n\n\n\n\nvec4 chooseColorBasedOnPattern (vec2 uv, vec4 patternColorOne, vec4 patternColorTwo) \n{    \n    vec4 finalColor;\n    \n    \n    float patternParametersX = floor(uv.x*rows),\n          patternParametersY = floor(uv.y*cols); // The parameters of the X and Y coordinates for the primary color of the pattern\n    \n    \n    \n    // The following code determines the color of the current pixel\n    // based on the limitations set for the pattern\n    \n    if(mod(patternParametersX + patternParametersY, 2.0) == 0.0)\n    {\n        finalColor = patternColorTwo;\n    }  \n    else \n    {\n        finalColor = patternColorOne * transparency + patternColorTwo * (1.0 - transparency);\n    \t\n    }\n    \n    return finalColor;\n}\n\n\n","name":"Image","description":"","type":"image"}]}