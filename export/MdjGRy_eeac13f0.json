{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"keyboard","id":"4dXGRr","filepath":"/presets/tex00.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Graphing by nimitz (twitter: @stormoid)\n/*\nBase Usage:\n\t-Input the functions below (line 29,33,37).\n\t-Select how many functions you want to display on line 42.\n\t-To use the toggles, make sure you click on the shader itself\n\tto activate keyboard input, then pressing keys should make the\n\tkeyboard texture icon blink.\n\t-Define simple_mode for faster compilation time\t\n\t(simple plotting of a single function)\nToggle functionality:\n\t-When no toggle is on, click+drag is panning.\n\t-Keys X/C/F are each toggles for curve info, derivative\n\tX position, Y position, in that order.\n\t-Keys S/D/F are for zero crossing detection, just drag the mouse.\n\tuntil it locks in a zero then release.\n\t-Keys 1/2 are zooming toggles, they can be combined for added\n\teffect.\n*/\n\n#define simple_mode\n#define numfunc 3\n\nfloat f(in float x, in float num)\n{\n\tfloat fx = 0.;\n    float stride = 3.0;\n\tif (num == 1.)\n\t//______________function 1_______________\t\n        fx = sin(x);\n\t\n\telse if (num == 2.)\n\t//______________function 2_______________\n\t\tfx = x*x*x;\n\t\t\n\telse\n\t//______________function 3_______________\n\t\tfx = x-4.;\n\t\n\t\n\treturn fx;\n}\n\n#define decimalPlace 4.\n\n#define baseScale 10.\n#define thickness 2.5\n\n#define color1 vec3(.1,0.5,0.)\n#define color2 vec3(0.1,0.3,.9)\n#define color3 vec3(0.6,0.1,.6)\n\n\n#define KEY_X 88.5/256.0\n#define KEY_C 67.5/256.0\n#define KEY_V 86.5/256.0\n#define KEY_S 83.5/256.0\n#define KEY_D 68.5/256.0\n#define KEY_F 70.5/256.0\n#define KEY_1 49.5/256.0\n#define KEY_2 50.5/256.0\n#define KEY_3 51.5/256.0\n\n\n//https://iquilezles.org/articles/distance\nfloat de(const in vec2 p, const in float num)\n{\n    float v = f(p.x, num)-p.y;\n\tfloat h = .5;\n    float g = 1.5+ pow(f(p.x+h, num) - f(p.x-h, num),2.);\n    float de = abs(v)/sqrt(g);\n    return float(smoothstep( 0., .13, de ));\n}\n\n\n//___________________Number Printing by @P_Malin____________________\n//             https://www.shadertoy.com/view/4sf3RN\nconst float kCharBlank = 12.0;\nconst float kCharMinus = 11.0;\nconst float kCharDecimalPoint = 10.0;\n\nfloat DigitBin(const in int x)\n{\n    return x==0?480599.0:x==1?139810.0:x==2?476951.0:x==3?476999.0:x==4?350020.0:x==5?464711.0:x==6?464727.0:x==7?476228.0:x==8?481111.0:x==9?481095.0:0.0;\n}\n\nfloat PrintValue(const in vec2 vPixelCoords, const in vec2 vFontSize, const in float fValue, const in float fMaxDigits, const in float fDecimalPlaces)\n{\n    vec2 vStringCharCoords = (gl_FragCoord.xy - vPixelCoords) / vFontSize;\n    if ((vStringCharCoords.y < 0.0) || (vStringCharCoords.y >= 1.0)) return 0.0;\n\tfloat fLog10Value = log2(abs(fValue)) / log2(10.0);\n\tfloat fBiggestIndex = max(floor(fLog10Value), 0.0);\n\tfloat fDigitIndex = fMaxDigits - floor(vStringCharCoords.x);\n\tfloat fCharBin = 0.0;\n\tif(fDigitIndex > (-fDecimalPlaces - 1.01)) {\n\t\tif(fDigitIndex > fBiggestIndex) {\n\t\t\tif((fValue < 0.0) && (fDigitIndex < (fBiggestIndex+1.5))) fCharBin = 1792.0;\n\t\t} else {\t\t\n\t\t\tif(fDigitIndex == -1.0) {\n\t\t\t\tif(fDecimalPlaces > 0.0) fCharBin = 2.0;\n\t\t\t} else {\n\t\t\t\tif(fDigitIndex < 0.0) fDigitIndex += 1.0;\n\t\t\t\tfloat fDigitValue = (abs(fValue / (pow(10.0, fDigitIndex))));\n                float kFix = 0.0001;\n                fCharBin = DigitBin(int(floor(mod(kFix+fDigitValue, 10.0))));\n\t\t\t}\t\t\n\t\t}\n\t}\n    return floor(mod((fCharBin / pow(2.0, floor(fract(vStringCharCoords.x) * 4.0) + (floor(vStringCharCoords.y * 5.0) * 4.0))), 2.0));\n}\n\nfloat print(const in float value, const in float line)\n{\n\tvec2 pos = vec2(0., 20.*float(line)+5.);\n\tvec2 vFontSize = vec2(8.0, 15.0);\n\tfloat fDigits = 2.0;\n\tfloat fDecimalPlaces = decimalPlace;\n\treturn PrintValue(pos, vFontSize, value, fDigits, fDecimalPlaces);\n}\n\n//_______________________End of Numbers printing___________________\n\nfloat zeros(const in vec2 p, const in float x, const in float num, const in float zoom)\n{\t\n\tfloat rz;\n\tfloat d = 0.;\n\t\tfor (float i = 0.;i <= 8.;i++)\n\t\t{\n\t\t\tfloat yval = f(x+d, num);\n\t\t\tfloat drv = -yval/( (f(x+d+0.4, num) - f(x+d-0.4, num)) *1.01 );\n\t\t\tif (abs(yval) < 0.0002)\n\t\t\t{\n\t\t\t\trz += print(yval ,0.);\n\t\t\t\trz += print(x+d-drv, 1.);\n\t\t\t\trz = max(1.-pow(length(vec2(x+d, yval)-p), 4.)*4e4/(zoom*zoom), rz);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\td+= drv;\n\t\t}\n\treturn rz;\n}\n\nfloat info(const in vec2 p, const in float x, const in float num, const in float zoom)\n{\n\tfloat rz;\n\tfloat yval = f(x, num);\n\trz += print(yval ,0.);\n\trz += print(x, 1.);\n\tfloat dr = f(x+0.5, num) - f(x-0.5, num);\n\trz += print(dr, 2.);\n\trz += 0.5-abs(smoothstep(0., max(.25,dr*0.25),p.y-p.x*dr-yval+dr*x+0.1)-.5);\n\trz = max(1.-pow(length(vec2(x, yval)-p), 4.)*2e4/zoom,rz);\n\treturn rz;\n}\n\nfloat draw(const in vec2 p, const in float num, const in float zoom)\n{\n\tfloat rz = de(p, num);\n\trz *= (1./thickness)/sqrt(zoom/iResolution.y);\n\trz = 1.-clamp(rz, 0., 1.);\n\treturn rz;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t= iTime;\n\tfloat zoom = baseScale;\n\tfloat width = 0.;\n\tif (texture(iChannel0, vec2(KEY_1,0.75)).x > 0.)\n\t{\n\t\tzoom *= 2.;\n\t\twidth = -.02;\n\t}\n\tif (texture(iChannel0, vec2(KEY_2,0.75)).x > 0.)\n\t{\n\t\tzoom *= 2.;\n\t\twidth = -.02;\n\t}\n\twidth += 3. / iResolution.x* zoom;\n\tfloat asp = iResolution.x/iResolution.y;\n\tvec2 q = fragCoord.xy/ iResolution.xy;\n\t//centered aspect correction\n\tq.x = (q.x*asp)+(1.-asp)*.5;\n\tvec2 uv = q*zoom;\n\tuv -= 0.5*zoom;\n\tvec2 um = zoom*(iMouse.xy/ iResolution.xy-0.5);\n\tum.x *= asp;\n\tfloat col1 = 0.,col2 = 0.,col3 = 0.;\n\t#ifndef simple_mode\n\tif (texture(iChannel0,vec2(KEY_X, 0.75)).x > 0.)\n\t{\n\t\tcol1 += info(uv, um.x, 1., zoom);\n\t}\n\t#if numfunc > 1\n\telse if (texture(iChannel0,vec2(KEY_C, 0.75)).x > 0.)\n\t{\n\t\tcol2 += info(uv, um.x, 2., zoom);\n\t}\n\t#endif\n\t#if numfunc > 2\n\telse if (texture(iChannel0,vec2(KEY_V, 0.75)).x > 0.)\n\t{\n\t\tcol3 += info(uv, um.x, 3., zoom);\n\t}\n\t#endif\n\telse if (texture(iChannel0, vec2(KEY_S,0.75)).x > 0.)\n\t{\n\t\tcol1 += zeros(uv, um.x, 1., zoom);\n\t}\n\t#if numfunc > 1\n\telse if (texture(iChannel0, vec2(KEY_D,0.75)).x > 0.)\n\t{\n\t\tcol2 += zeros(uv, um.x, 2., zoom);\n\t}\n\t#endif\n\t#if numfunc > 2\n\telse if (texture(iChannel0, vec2(KEY_F,0.75)).x > 0.)\n\t{\n\t\tcol3 += zeros(uv, um.x, 3., zoom);\n\t}\n\t#endif\n\telse\n\t{\n\t\tuv.y -= ((iMouse.y/ iResolution.y) -.5)*zoom;\n\t\tuv.x -= ((iMouse.x/ iResolution.x) -.5)*zoom*asp;\n\t}\n\t#else\n\t\tuv.y -= ((iMouse.y/ iResolution.y) -.5)*zoom;\n\t\tuv.x -= ((iMouse.x/ iResolution.x) -.5)*zoom*asp;\n\t#endif\n\t\n\t//background\n\tvec3 col = vec3(.97);\n\tcol1 += draw(uv,1., zoom);\n\t\n\t#if numfunc > 1\n\t\tcol2 += draw(uv,2., zoom);\n\t#endif\n\t#if numfunc > 2\n\t\tcol3 += draw(uv,3., zoom);\n\t#endif\n\t\n\tfloat grid;\n\tgrid = \t   step(abs(uv.x), width*0.5)*.8;\n\tgrid = max(step(abs(uv.y), width*0.5)*.8, grid);\n\tgrid = max(step(fract(uv.x), width*1.2)*.2, grid);\n\tgrid = max(step(fract(uv.y), width*1.2)*.2, grid);\n\tcol -= grid;\n\t\n\tcol -= col1*(1.-color1);\n\tcol -= col2*(1.-color2);\n\tcol -= col3*(1.-color3);\n\t\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":true,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdjGRy","date":"1390372073","viewed":3977,"name":"Graphing","username":"nimitz","description":"Usage: -Keyboard number 1 and 2 act as zoom toggles\n-Press X/C/V to toggle function info display\n-Press S/D/F to toggle zero crossing display\n-Click and drag to pan or select value (in value display mode)","likes":87,"published":1,"flags":16,"usePreview":0,"tags":["2d","utility","plotter","graphing"],"hasliked":0,"parentid":"","parentname":""}}