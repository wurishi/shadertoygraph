{"ver":"0.1","info":{"id":"ctjGzD","date":"1672954468","viewed":110,"name":"RGB Square Grid example","username":"preet","description":"Draw a square grid given UV","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["squaregrid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cell count\nfloat count = 10.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n    \n    vec2 cell = floor(uv * count);\n    \n    \n    float index = (cell.x - cell.y);\n    \n    vec3 colorIndex = vec3(index, index, index); // index will negative or positive, will get either black or white color at this point. \n    \n    colorIndex += vec3(0, 1, 2); // adding this will turn some negative index (shown as black) into positive (either shown as blue or sky blue), without this we will end up with black & grey squares only.  \n    \n    colorIndex *= 1.0/3.0; // by multiplying with 1/3, we are basically turning colors so they repeat every 3rd square/color.\n    \n    colorIndex = fract(colorIndex); // fractional will give us that particular color\n    \n    colorIndex = round(colorIndex); // convert to RGB\n    \n    // Output to screen\n    fragColor = vec4(colorIndex, 1.0);\n}","name":"Image","description":"","type":"image"}]}