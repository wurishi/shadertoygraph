{"ver":"0.1","info":{"id":"flVXDR","date":"1641308929","viewed":200,"name":"Fork Truchet Tr sleeplessm 364","username":"sleeplessmonk","description":"\\fork of truchet","likes":10,"published":1,"flags":32,"usePreview":0,"tags":["truchet","nft"],"hasliked":0,"parentid":"stlSWH","parentname":"Truchet Trip #1"},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"Truchet Trip #1\" \n// by Martijn Steinrucken aka BigWings/The Art of Code - 2021\n//\n// Finally decided to test the NFT waters. Let's see what I can learn!\n//\n// If you are interested in owning this as an NFT, check this link:\n// https://app.nafter.io/detail-post/6169c7cea55a4583cf361032\n\n#define TWO_PI 6.2831853072\n#define PI 3.14159265359\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv = fragCoord/iResolution.xy;\nvec2 st = uv-.5;\nfloat d = length(st);\n\nvec3 col = vec3(0.01);\n\nvec2 offs = st*.008*d;\ncol.r += texture(iChannel0, uv-offs).r;\ncol.g += texture(iChannel0, uv).r;\ncol.b += texture(iChannel0, uv+offs).r;\n\n// add kaleidoscope effect\nst = vec2(st.x * cos(iTime) + st.y * sin(iTime), st.y * cos(iTime) - st.x * sin(iTime));\nd = length(st);\noffs = st*.008*d;\ncol.r += texture(iChannel0, uv-offs).r;\ncol.g += texture(iChannel0, uv).r;\ncol.b += texture(iChannel0, uv+offs).r;\n\nfragColor = vec4(col,5.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// \"Truchet Trip #1\" \n// by Martijn Steinrucken aka BigWings/The Art of Code - 2021\n//\n// Finally decided to test the NFT waters. Let's see what I can learn!\n//\n// If you are interested in owning this as an NFT, check this link:\n// https://app.nafter.io/detail-post/6169c7cea55a4583cf361032\n\n#define S smoothstep\n#define TAU 6.283185\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(12.3,24.3));\n    p += dot(p, p+234.2);\n    return fract(p.x*p.y);\n}\n\nfloat Length(vec2 p, float k) {\n    \n    return pow(pow(abs(p.x), k)+pow(abs(p.y), k), 1./k);\n}\n\nvec3 Tile(vec2 uv, float level, float n, float k) {\n    float maxBlur = (1.+level*.1)*50./iResolution.y;//.05/level;\n    \n    float lev = 8.005/level;\n    \n    if(n<9.5) uv.x *= -1.;\n    if(fract(n*100000000000000.)<0.5) uv.y *= -1.0305;\n        \n        \n    uv +=.5005; \n    \n    float m, w;\n    w = maxBlur;//min(.1, 2.*fwidth(uv.y*lev));\n        \n    if(fract(n*200.3)<.12*level) {\n        if(n<.5005) uv = uv.yx;\n        w = maxBlur;//min(.1, 2.*fwidth(uv.y*lev));\n        m = S(w, -w, abs(fract(uv.y*lev)-.5005)-.25);\n    } else {\n        float d1 = Length(uv, k);\n       // w = maxBlur;//min(fwidth(d1)*5., maxBlur);\n\n        float c1 = S(.01, -.01, d1-1.005);\n        float t1 = c1*S(w, -w, abs(fract(d1*lev)-.5005)-.25);\n\n        float d2 = Length(uv-1.0005, k);\n        float w2 = w;//min(fwidth(d2)*5., maxBlur);\n\n        float c2 = S(.01, -.01, d2-1.);\n        float t2 = c2*S(w2, -w2, abs(fract(d2*lev)-.5)-.25);\n\n        m = mix(t1, t2, S(.025, -.025, d2-(1.-(level-1.)*.003)));\n    }\n    \n    return m*vec3(1);\n}\n\nvec2 sabs(vec2 p, float k) {\n    return sqrt(p*p+k);\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 M = iMouse.xy/iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    uv *= 5.6;\n    \n    float k = 5.001;\n    \n    float cd = length(uv);\n    float t = M.x*1600.;\n    t = mod(iTime, 1160.);\n    uv *= Rot(t*TAU/16.+sin(t*TAU/8.)*cd*.25);\n    uv = vec2(8.*(atan(uv.x, uv.y)/6.2832+.5), log2(cd)-t);\n\n    vec2 gv = fract(uv)-.5;\n    vec2 id = mod( floor(uv), 16.);\n    \n    float n = Hash21(id);\n    \n    float shape = 2.;\n    float checker = floor(mod(id.x+id.y, 2.));\n    col = Tile(gv, 1., n, shape);\n    //col *= 0.; col += checker;\n    //if(gv.x>.48 || gv.y>.48) col = vec3(1,0,0);\n    \n    if(fract(n*2500.)<.25) {\n        vec2 gv2 = fract(gv*2.)-.5;\n        vec2 id2 = floor(gv*2.);\n        float n2 = Hash21(id2+id);\n        \n        col = Tile(gv2, 2., n2, shape);\n        //if(gv2.x>.48 || gv2.y>.48) col = vec3(0,1,0);\n    \n        if(fract(n2*25000.)<.25) {\n            vec2 gv3 = fract(gv2*2.)-.5;\n            vec2 id3 = floor(gv2*2.);\n            float n3 = Hash21(id+id2+id3);\n            \n            col = Tile(gv3, 4., n3, shape);\n           // if(gv3.x>.48 || gv3.y>.48) col = vec3(0,0,1);\n            \n            if(fract(n3*25.)<5.25) {\n                vec2 gv4 = fract(gv3*2.)-.5;\n                vec2 id4 = floor(gv3*2.);\n                float n4 = Hash21(id+id2+id3+id4);\n                \n                col = Tile(gv4, 8., n4, shape);\n                //if(gv4.x>.48 || gv4.y>.48) col = vec3(1,0,1);\n            }  \n        }    \n    }\n    \n   col = mix(col, vec3(.5), S(.8, .05, cd));\n    if(false) {\n        col *= 0.; \n        uv *= .5;\n        col += Tile(uv, 1., 1.8, 2.);\n        \n        if(uv.x<-.5 || uv.x>.5 || uv.y<-.5||uv.y>.5) col *= 0.61;//vec3(0,0,1);\n    }\n    \n    fragColor = vec4(col,2.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}