{"ver":"0.1","info":{"id":"Mt2XD3","date":"1447045031","viewed":209,"name":"Amoebas","username":"lejeunerenard","description":"Practicing making lines and converting to polar coordinates.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","polar","parametric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float TAU = 6.28318530718;\n\nfloat xyToR(vec2 uv, float r) {\n    float variance = 55./iResolution.y; // via @FabriceNeyret2\n    float mag = length(uv);\n    \n    // Draw as a smoothed line\n    return smoothstep(r - variance, r , mag)\n        - smoothstep(r, r + variance, mag);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 R = iResolution.xy;\n    vec2 uv = (fragCoord - .5*R) / R.y;\n    uv *= 8.; // Scale\n    \n\tfragColor = vec4(vec3(xyToR(uv,\n       1.\n       + sin(TAU/2. * uv.x)*sin(iTime)\n       + sin(TAU * uv.y) * sin(2.*iTime)\n       + cos(TAU/4.*uv.x*uv.y) * sin(3.*iTime)\n    )), 1.0);\n}","name":"","description":"","type":"image"}]}