{"ver":"0.1","info":{"id":"cs3BWn","date":"1697154851","viewed":22,"name":"TanGrid","username":"CallMeEcho","description":"first time writing a shader!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid","rainbow","trippy","tan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 sdfCircle(vec2 uv, float r) {\n  float x = uv.x;\n  float y = uv.y;\n  \n  float d = length(vec2(x, y)) - r;\n  \n  return d > 0. ? vec3(0.) : 0.5 + 0.5 * cos(iTime + uv.xyx + vec3(iResolution));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord/iResolution.xy; // <0,1>\n  uv -= 0.5;\n  uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n  \n  vec3 col = sdfCircle(uv, tan(iTime*uv.y));\n  col += sdfCircle(uv, tan(iTime*uv.x));\n\n  // Output to screen\n  fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}