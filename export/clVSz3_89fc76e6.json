{"ver":"0.1","info":{"id":"clVSz3","date":"1686252020","viewed":81,"name":"Nice and simple refractor","username":"mulrooneydesign","description":"2D, noise, fractal, repetition","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n\n    vec3 a = vec3(0.938, 0.328, 0.718);\n    vec3 b = vec3(0.659, 0.438, 0.328);\n    vec3 c = vec3(0.388, 0.388, 0.296);\n    vec3 d = vec3(1.0, 1.0, 0.168);\n\n    return a + b * cos(6.28318*(c*t*d));\n}\n\n\n\nfloat noise(in vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uvCopy = fract(uv * 0.25);\n    vec3 myColor = vec3(0.0);\n\n     vec2 noiseScale = vec2(0.25, 2.0);\n    float noiseValue = noise(uv * noiseScale * iTime / 2.0);\n    float noiseStrength = 0.8; \n\n    vec3 noiseColor = vec3(noiseValue) * noiseStrength;\n    noiseColor = smoothstep(0.7, 1.0, noiseColor);\n    \n    float rotationSpeed = 0.2;  \n    float angle = iTime * rotationSpeed;\n    \n    vec2 rotatedDelta = vec2(\n        uv.x * cos(angle) - uv.y * sin(angle),\n        uv.x * sin(angle) + uv.y * cos(angle)\n    );\n    \n   vec2 newUV = uv + rotatedDelta;\n   \n   vec3 rotate = vec3(newUV, 1.0);\n    \n    for(float i = 0.0; i < 2.0; i++) {\n    \n        uv = fract(uv * 0.5) - 0.5;    \n        uv = fract(uv * 0.5) - 0.5;\n        uv = fract(uv * 1.5) - 0.5;\n        uv = fract(uv * 0.5) - 0.5;\n        uv = fract(uv * 2.5) - 0.5;\n\n        float d = length(uv);\n\n        vec3 col = palette(length(uvCopy));\n\n        d = sin(d*22.0 + iTime) / 5.0;\n        d = abs(d);\n\n\n        d = 0.02 / tan(d);\n   \n\n        col *= d;\n        myColor += col * d;\n\n        myColor += noiseColor;\n        \n        myColor = myColor * rotate;\n       \n    \n    }\n\n    fragColor = vec4(myColor, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}