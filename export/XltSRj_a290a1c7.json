{"ver":"0.1","info":{"id":"XltSRj","date":"1480580562","viewed":506,"name":"eth vis","username":"zardoru","description":"A straight 2D audio visualizer. ","likes":8,"published":1,"flags":64,"usePreview":0,"tags":["2d","fft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sjGW1","filepath":"https://soundcloud.com/fanservicecollective/aperture","previewfilepath":"https://soundcloud.com/fanservicecollective/aperture","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float gamma(float f) {\n   return pow(f, 1. / 2.2); \n}\n\nvec4 g3(vec4 col) {\n    return vec4(gamma(col.r), gamma(col.g), gamma(col.b), 1.);\n}\n\nvec4 gradient(float y) {\n    vec4 col1 = vec4(170. / 255., 170. / 255., 210. / 255., 1.);\n    vec4 col2 = vec4(51. / 255., 153. / 255., 1., 1.);\n    return g3(mix(col1, col2, y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = abs((fragCoord.xy / iResolution.xy - .5) * 2.);\n    \n    //float linear_interpolation = uv.x;\n    //float log_interpolation = log2(1.0 + uv.x);\n    float exp_interpolation = pow(uv.x, 2.);\n    //float expB_interpolation = 1. - pow(1. - uv.x, 2.);\n    \n    float i = exp_interpolation;\n    float fft_value = texture(iChannel0, vec2(i, 0.)).x;\n\t// fragColor = vec4(1. - step(fft_value, uv.y)) * gradient(uv.y);\n    fragColor = abs(uv.y - fft_value) * gradient(uv.y) * fft_value;\n}","name":"Image","description":"","type":"image"}]}