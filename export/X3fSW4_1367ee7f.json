{"ver":"0.1","info":{"id":"X3fSW4","date":"1709538247","viewed":303,"name":"Fake Reaction-Diffusion","username":"1095","description":"I'm not sure if calling it 'Fake Reaction-Diffusion' is accurate, because it looks like Reaction-Diffusion but just uses a different method. Anyway, I'm just a beginner, so I'll call it that now. If it's wrong, hopefully someone will correct me. :)","likes":15,"published":3,"flags":32,"usePreview":0,"tags":["blur","reactiondiffusion","unsharp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// MIT License\n// Copyright © 2024 Zaron Chen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// The implementation is based on these videos:\n//\n// noones img - Reaction-diffusion in 20 seconds (Touchdesginer tutorial): https://www.youtube.com/watch?v=CzmRMKQBMSw\n// ArtOfSoulburn - Reaction Diffusion In Photoshop: https://www.youtube.com/watch?v=I6Vh_NOy70M\n// SkyBase - Tutorial: Reaction-Diffusion in Photoshop: https://vimeo.com/61154654\n//\n// Thank you for the above video, I learned a lot! :)\n//\n// [*] 2024-03-05 Thanks to FabriceNeyret2 for improving the sketch! :)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    fragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define HOR vec2(1., 0.)\n#define VER vec2(0., 1.)\n\n#define CURSOR_SIZE  .1\n#define CURSOR_COLOR vec3(1.)\n\n// The implementation is based on the approach described in the blog post:\n// Efficient Gaussian blur with linear sampling: https://www.rastergrid.com/blog/2010/09/efficient-gaussian-blur-with-linear-sampling/\n//\n// MIT License\n// Copyright © 2024 Zaron Chen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvec4 blur7(vec2 uv, sampler2D tex, vec2 texelSize, vec2 direction) {\n    float color = 0.;\n    texelSize *= direction;\n    color += 0.010381362401148057*texture( tex, uv+vec2( -5.1764705882352935 )*texelSize ).r;\n    color +=  0.09447039785044732*texture( tex, uv+vec2( -3.294117647058824  )*texelSize ).r;\n    color +=   0.2969069646728344*texture( tex, uv+vec2( -1.411764705882353  )*texelSize ).r;\n    color +=   0.1964825501511404*texture( tex, uv+vec2( 0.                  )*texelSize ).r;\n    color +=   0.2969069646728344*texture( tex, uv+vec2( 1.411764705882353   )*texelSize ).r;\n    color +=  0.09447039785044732*texture( tex, uv+vec2( 3.294117647058824   )*texelSize ).r;\n    color += 0.010381362401148057*texture( tex, uv+vec2( 5.1764705882352935  )*texelSize ).r;\n    return vec4(color);\n}\n\n// The implementation is based on Wikipedia:\n// Kernel (image processing): https://en.wikipedia.org/wiki/Kernel_(image_processing)\n//\n// MIT License\n// Copyright © 2023 Zaron Chen\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvec4 unsharp(vec2 uv, sampler2D img, vec2 texelSize, float strength) {\n    float color = 0.;\n    float center = -220.-strength;\n\n    color +=     1.*texture( img, uv+vec2( -2., -2. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2( -1., -2. )*texelSize ).r;\n    color +=     6.*texture( img, uv+vec2(  0., -2. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2(  1., -2. )*texelSize ).r;\n    color +=     1.*texture( img, uv+vec2(  2., -2. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2( -2., -1. )*texelSize ).r;\n    color +=    16.*texture( img, uv+vec2( -1., -1. )*texelSize ).r;\n    color +=    24.*texture( img, uv+vec2(  0., -1. )*texelSize ).r;\n    color +=    16.*texture( img, uv+vec2(  1., -1. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2(  2., -1. )*texelSize ).r;\n    color +=     6.*texture( img, uv+vec2( -2.,  0. )*texelSize ).r;\n    color +=    24.*texture( img, uv+vec2( -1.,  0. )*texelSize ).r;\n    color += center*texture( img, uv+vec2(  0.,  0. )*texelSize ).r;\n    color +=    24.*texture( img, uv+vec2(  1.,  0. )*texelSize ).r;\n    color +=     6.*texture( img, uv+vec2(  2.,  0. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2( -2.,  1. )*texelSize ).r;\n    color +=    16.*texture( img, uv+vec2( -1.,  1. )*texelSize ).r;\n    color +=    24.*texture( img, uv+vec2(  0.,  1. )*texelSize ).r;\n    color +=    16.*texture( img, uv+vec2(  1.,  1. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2(  2.,  1. )*texelSize ).r;\n    color +=     1.*texture( img, uv+vec2( -2.,  2. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2( -1.,  2. )*texelSize ).r;\n    color +=     6.*texture( img, uv+vec2(  0.,  2. )*texelSize ).r;\n    color +=     4.*texture( img, uv+vec2(  1.,  2. )*texelSize ).r;\n    color +=     1.*texture( img, uv+vec2(  2.,  2. )*texelSize ).r;\n\n    return vec4(color/(-strength));\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n    \n    if (iFrame <= 1) fragColor = blur7(uv, iChannel1, texelSize, HOR);\n    else             fragColor = blur7(uv, iChannel0, texelSize, HOR);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n    \n    fragColor = blur7(uv, iChannel0, texelSize, VER);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mo = iMouse.xy/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n\n    vec4 col = unsharp(uv, iChannel0, texelSize*7., 64.);\n\n    float cursor = smoothstep(.01, -.01, length(uv-mo)-CURSOR_SIZE);\n    col.rgb = mix(col.rgb, CURSOR_COLOR, cursor);\n\n    fragColor = clamp(col, 0., 1.);\n}\n","name":"Buffer C","description":"","type":"buffer"}]}