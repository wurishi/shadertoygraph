{"ver":"0.1","info":{"id":"MXjyRK","date":"1727454725","viewed":21,"name":"Procedural Texture CThron","username":"cooper_thronson","description":"Procedural Texture for Class Assignment","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["class"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //speed is used to control the speed of how fast certain things play\n    #define speed 2.0\n    //chosen value for all divisions that are not using pre established variables.\n    #define divValue 3.0\n    //random value put into equations where i want it\n    #define coolConstant 2.43\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //the main animation. lots of calculations to make something funky, and the floor function at the beginning is what is giving it the weird slideshow transition look\n    float t = floor(tan (uv.x/divValue + iTime * speed)) * tan (uv.y) + sin (uv.y) / divValue + coolConstant - cos(uv.x) * 10.0 + (coolConstant * 2.0) ;\n    \n    //setting colors, sin makes them vary\n    vec4 colA = vec4(1.0,0.0,0.5,1.0) + sin(t);\n    vec4 colB = vec4(0.0,0.2,1.0,1.0) + sin(t);\n    \n    //vector used to effect the fract function later, dot product between the two colors.\n    float coolVector = dot(colA, colB);\n    \n    //makes a moving circle\n    t = distance(uv*speed,vec2(sin(iTime), (sin(iTime) + cos(iTime)))/divValue) + coolConstant;\n   \n    //fract splitting the moving circle into multiple circles, along with changing the colors a bit.\n    t = fract(t) / coolVector;\n    //removes some yellow colors, and makes weird wavy divisions in all of the circles\n    t = smoothstep(abs(sin(iTime)) + 2.0, sin(iTime) - 1.0,t)/divValue;\n    \n    //splits screen in two, sin * speed makes the screen split move up and down. abs function makes it bounce, instead of going offscreen in the negatives.\n    float h = step(abs(sin(iTime * speed)),uv.y);\n    //output mixing colors\n    fragColor = mix(colA/t,colB*t,h * 5.0);\n}","name":"Image","description":"","type":"image"}]}