{"ver":"0.1","info":{"id":"NlVGzW","date":"1637259589","viewed":156,"name":"FEZ Shader - Pink Grid","username":"sterlingsowards","description":"Yet another fez inspired simple shader. Shortly after leaving your village, you come across a room with a bunch of locked doors. The background for this hub room looks similar to this","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["grid","texture","lines","parallax","pink","background","videogame","fez","scrolling","layered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_LAYERS 3.\n#define ZOOM_CLOSE 2.\n#define ZOOM_FAR 6.\n#define WIDTH .005\n\nfloat gridLayer( vec2 uv, float zoom )\n{\n    float a;\n    \n    // Create the grid coords\n    vec2 gv = fract(uv * zoom)-.5;\n    \n    // draw the lines\n    a = max(smoothstep(WIDTH+ 1./iResolution.y, WIDTH, abs(gv.y)), smoothstep(WIDTH+1./iResolution.x, WIDTH, abs(gv.x)));\n    \n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    uv.y -= .2;\n\n    vec3 col = vec3(0.043, 0.003, 0.074);\n    \n    // Draw the layers back to front\n    for (float i = 1.; i <= NUM_LAYERS; i++) {\n        // Get the zoom\n        float zoom = mix(ZOOM_FAR, ZOOM_CLOSE, (i-1.)/(NUM_LAYERS-1.));\n        \n        // Get the grid layer alpha data\n        vec2 offset = vec2(iTime * i *.06 + i*.458, i*.74);\n        float gridAlpha = gridLayer(uv + offset, zoom) *  i/(NUM_LAYERS);\n        vec3 gridCol = vec3(0.615, 0, 0.262); \n        col = gridCol * gridAlpha + col * (1.-gridAlpha);\n    }\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}