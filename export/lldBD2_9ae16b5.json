{"ver":"0.1","info":{"id":"lldBD2","date":"1541160748","viewed":325,"name":"Simple Shrink","username":"xiaogeformax","description":" a sample shader shrink to center","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope","shrink"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\nfloat PI = 3.14159265359;\n\nvec2 kaleidoscope(vec2 uv, vec2 offset, float splits)\n{\n    // XY coord to angle\n    float angle = atan(uv.y, uv.x);\n    // Normalize angle (0 - 1)\n    angle = ((angle / PI) + 1.0) * 0.5;\n    // Rotate by 90Â°\n    angle = angle + 0.25 * iTime * 0.05;\n    // Split angle \n    angle = mod(angle, 1.0 / splits) * splits;\n    \n    // Warp angle\n    angle = -abs(2.0*angle - 1.0) + 1.0;\n    \n    angle = angle*0.1;\n    \n    // y is just dist from center\n    float y = length(uv);\n    \n    angle = angle * (y*3.0);\n    \n    return vec2(angle, y) + offset;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n\n    vec2 offset = vec2(iTime   *0.05,  iTime   *0.5);\n    vec2 uv  = kaleidoscope(p, offset, 10.);\n    // pattern: cosines\n    float f = cos(8.*uv.x)*cos(6.0*uv.y);\n    \n    // color fetch: palette\n    vec3 col =0.+  sin( 3.1416*f + vec3(1.,0.5,1.0) );\n    \n    // output:\n    fragColor = vec4( col, 1.0 );\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}