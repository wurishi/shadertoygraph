{"ver":"0.1","info":{"id":"3lXczN","date":"1591529280","viewed":502,"name":"uv discontinuity fix","username":"teadrinker","description":"Method of fixing uv discontinuities by generating additional uvs that shifts the discontinuity to another place, and then chose the smallest gradient.\n\nEdit: trying to get the correct gradient seem overkill, simply warping with abs(uv - 0.5) work fine...","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["gradient","discontinuity","texturegrad","seam","discontinuities","textureseam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid fix_uv_discontinuities(vec2 uv_alternative, inout vec2 dx, inout vec2 dy) {\n            \n\tvec2 dx2 = dFdx(uv_alternative);\n\tvec2 dy2 = dFdy(uv_alternative);\n\tif(dot(dx,dx)+dot(dy,dy) > dot(dx2,dx2)+dot(dy2,dy2)) {\n\t\tdx = dx2;\n\t\tdy = dy2;\n\t}\n\n}  \n\n\nvec2 warpUV(vec2 uv) {\n    float a =  iTime * 0.03;\n    uv *= mat2x2(cos(a),sin(a),-sin(a),cos(a));\n    uv = uv*(6. + 150.*pow(iMouse.x/iResolution.x,5.)) + iTime * 0.03;\n    uv = fract(uv); \n    return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/max(iResolution.x,iResolution.y);\n\n\tuv = warpUV(uv);\n\tvec2 uv_alternative  = fract(uv+0.25);\n\tvec2 uv_alternative2 = fract(uv+0.5);\n\n    bool useFastHack = iMouse.z > 0.5;\n\n    vec2 dx = dFdx(uv);\n    vec2 dy = dFdy(uv);\n    if(fragCoord.x > iResolution.x * 0.5) {\n        if(!useFastHack) {\n    \t\tfix_uv_discontinuities(uv_alternative, dx, dy);\n    \t\tfix_uv_discontinuities(uv_alternative2, dx, dy);\n        } else {\n        \tvec2 uv2 = abs(uv - 0.5);\n        \tdx = dFdx(uv2);\n    \t\tdy = dFdy(uv2);\n        }\n\n    }\n    \n    if(fragCoord.y > iResolution.y * 0.5)\n        fragColor = textureGrad(iChannel0, uv, dx, dy);\n\telse\n    \tfragColor = 10.* vec4(length(dx),length(dy),length(dx), 1.);\n}\n\n","name":"Image","description":"","type":"image"}]}