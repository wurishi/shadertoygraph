{"ver":"0.1","info":{"id":"NsSSWm","date":"1620321809","viewed":216,"name":"Menger Sponge 2D","username":"Hitthesurf","description":"Fractal Of Menger Sponge\nNot very efficient","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\n/*float fractal1(in vec2 p, in vec2 size)\n{\n    size = size/3.0;\n    float minimum = min(  sdBox(vec2(p.x-2.0*size.x,p.y), size),\n                          sdBox(vec2(p.x+2.0*size.x,p.y), size));\n    minimum = min(minimum,sdBox(vec2(p.x,p.y+2.0*size.y), size));\n    minimum = min(minimum,sdBox(vec2(p.x,p.y-2.0*size.y), size));\n    \n    minimum = min(minimum,sdBox(vec2(p.x-2.0*size.x,p.y+2.0*size.y), size));\n    minimum = min(minimum,sdBox(vec2(p.x+2.0*size.x,p.y-2.0*size.y), size));\n    \n    minimum = min(minimum,sdBox(p+2.0*size, size));\n    minimum = min(minimum,sdBox(p-2.0*size, size));\n    return minimum;\n\n}*/\n\n\nfloat fractal1(in vec2 p, in vec2 size)\n{\n    return max(sdBox(p,size),-sdBox(p,size/3.0));\n}\n\n\nfloat fractal2(in vec2 p, in vec2 size)\n{\n    size = size/3.0;\n    float minimum = min(  fractal1(vec2(p.x-2.0*size.x,p.y), size),\n                          fractal1(vec2(p.x+2.0*size.x,p.y), size));\n    minimum = min(minimum,fractal1(vec2(p.x,p.y+2.0*size.y), size));\n    minimum = min(minimum,fractal1(vec2(p.x,p.y-2.0*size.y), size));\n    \n    minimum = min(minimum,fractal1(vec2(p.x-2.0*size.x,p.y+2.0*size.y), size));\n    minimum = min(minimum,fractal1(vec2(p.x+2.0*size.x,p.y-2.0*size.y), size));\n    \n    minimum = min(minimum,fractal1(p+2.0*size, size));\n    minimum = min(minimum,fractal1(p-2.0*size, size));\n    return minimum;\n\n}\n\nfloat fractal3(in vec2 p, in vec2 size)\n{\n    size = size/3.0;\n    float minimum = min(  fractal2(vec2(p.x-2.0*size.x,p.y), size),\n                          fractal2(vec2(p.x+2.0*size.x,p.y), size));\n    minimum = min(minimum,fractal2(vec2(p.x,p.y+2.0*size.y), size));\n    minimum = min(minimum,fractal2(vec2(p.x,p.y-2.0*size.y), size));\n    \n    minimum = min(minimum,fractal2(vec2(p.x-2.0*size.x,p.y+2.0*size.y), size));\n    minimum = min(minimum,fractal2(vec2(p.x+2.0*size.x,p.y-2.0*size.y), size));\n    \n    minimum = min(minimum,fractal2(p+2.0*size, size));\n    minimum = min(minimum,fractal2(p-2.0*size, size));\n    return minimum;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.yy;\n    \n    float dis = fractal3(uv-vec2(.5,0.5), vec2(0.2,0.2));\n    if (dis<0.0)\n    {\n     fragColor = vec4(1.0,.0,0.0,1.0);\n    }\n    else\n    {\n    fragColor = vec4(.0,.0,1.0,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}