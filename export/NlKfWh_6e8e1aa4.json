{"ver":"0.1","info":{"id":"NlKfWh","date":"1664437119","viewed":146,"name":"liquify linear interpolation","username":"tangmr2333","description":"inspired by : https://geekofficedog.blogspot.com/2015/01/liquify-effect-hello-swirl-2.html#intro","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["linearinterpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// global variable\n// used for control range & effect\nfloat radius = 300.0;\nfloat degree = 1.2;\n\n\n// linear interpolation\nvec2 getLinearInterpolationResult(vec2 position, vec2 center, float dist) {\n    vec2 direction = normalize(position - center);\n    dist = (dist / radius) * dist + (1.0 - dist / radius) * degree * sqrt(dist);\n    return center + dist * direction;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float dist = distance(iMouse.xy, fragCoord);\n    \n    if (dist < radius) {\n        fragCoord = getLinearInterpolationResult(fragCoord, iMouse.xy, dist);\n    }\n\n    // Output to screen\n    fragColor = texture(iChannel0, fragCoord / iResolution.xy);\n}","name":"Image","description":"","type":"image"}]}