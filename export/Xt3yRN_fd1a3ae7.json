{"ver":"0.1","info":{"id":"Xt3yRN","date":"1535659639","viewed":398,"name":"Gaze of the abyss","username":"Vovosunt","description":"Mouse to control the light <O>","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","eye"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define thick   0.04\n#define smooth  (0.000015 * iResolution.x)\n#define PI      3.14159265359\n#define grid    10.0\n#define SM(x, offset) smoothstep(smooth, -smooth, x - offset)\n#define SMX(x, offset) smoothstep(1.0, -1.0, x - offset)\n#define scale vec2(4.0, 6.0) \n#define rots 360.0\n\nfloat rand(vec3 v){\n    return fract(cos(dot(v,vec3(13.46543,67.1132,123.546123)))*43758.5453);\n}\n\nfloat rand(vec2 v){\n    return fract(sin(dot(v,vec2(5.11543,71.3177)))*43758.5453);\n}\n\nfloat rand2(vec2 v){\n    return fract(sin(dot(v,vec2(330.2322,91.1132)))*63232.2312);\n}\n\nfloat rand(float v){\n    return fract(sin(v * 71.3132)*43758.5453);\n}\n\nvec2 rotate(vec2 st, float angle){\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, -s, s, c) * st;\n}\nfloat smrand(float v){\n    float vv = floor(v);\n    return mix(rand(vv),rand(vv+1.0),fract(v));\n}\n\nvec3 eye(vec2 st, float rt, vec2 mouse, float open, float siz, float lrt){\n    vec2 str = st * scale;\n        \n    float cs = cos(str.x);\n    float eyelidx = 1.0 -  max(SMX(cs * 2.0 - str.y + 0.5, 0.51), 1.0 - SMX(-cs * 2.0 - str.y + 0.5, 0.51));\n    cs *= min(open,rt + 0.5);\n    float top = cs - str.y + 0.5;\n    float bot = -cs - str.y + 0.5;\n    float eyelid = 1.0 -  max(SM(top, 0.51), 1.0 - SM(bot, 0.51));\n    float eyelid2 = 1.0 - max(SM(top, 0.44), 1.0 - SM(bot,0.44));\n    \n    \n    vec2 sti = (st + mouse * vec2(1.5,0.6)) * scale.x;\n    float a = (atan(sti.x,sti.y) + PI) /PI /2.;\n    float l = length(sti);\n    float irf = SM(l,0.5 * siz);\n    float irl = SM(l,0.45 * siz);\n    float irm = SM(l,0.15 * siz * (rt + 0.5));\n    float irn = smrand(a * 200.0);\n    float irnn = abs(fract(l * (irn + 1.0) - 0.35 * siz * (rt + 0.5) -0.7) - 0.5)* 3. *(1.0 -l);\n    vec2 stir = (st + mouse * vec2(2.0,1.0)) * scale.x;\n    float irr = SM(length(stir),0.1 + 0.05 * lrt);\n    vec2 stis = (st + mouse * vec2(3.0,2.0)) * scale.x;\n    float irs = SMX(length(stis),1.0) * eyelidx;\n    \n    \n    vec3 col = vec3(1.0 - (irf));\n    col = mix(col, irnn * vec3(2.0,(1.0 - fract(l)) * 0.75,0.0),irl -irm);\n    col = mix(col,(1.0 -fract(l /scale.x)) * vec3(2.0,1.0,1.0), 1.0 - irf) + irr;\n    col = min(vec3(eyelid2), col);\n    col = mix(col,irs * vec3(0.15) * (open * 0.65 + 0.25 + 0.05 *lrt), 1.0 - eyelid2);\n    col = mix(col,vec3(0.5,0.0,0.0),max(eyelid - eyelid2, eyelid2 - eyelid));\n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 st = (fragCoord.xy - 0.5 * iResolution.xy)/ iResolution.x;\n    vec2 mouse = (iMouse.xy - 0.5 * iResolution.xy) / iResolution.x;\n    vec2 toMouse = -mouse + st;\n    float r = rand(floor(st*grid));\n    float r2 = rand2(floor(st*grid));\n    float rt = (sin(iTime * 2.0 + r * 100.0)+ 1.0)/2.0;\n    vec2 cor = (fract(st * grid) - 0.5) * (1.0 + r2 * 0.5) + 0.25 * (vec2(r, r2) - 0.5);\n    cor = rotate(cor, rots * r);\n    float tm = 1.0 - length(toMouse);\n    float lrt = smrand(iTime* 15.0);\n    float open = length(mouse - floor(st * grid)/grid);\n    open = clamp(pow(1.1 - open, 25.0),0.0, 1.);\n    vec3 col = eye(cor,rt, rotate(toMouse, rots * r), open, r2 + 1.0, lrt);\n    col = col * tm * tm + pow(tm,75.0 + 15.0 * lrt) * vec3(1.5,1.4,1.2);\n        \n    col = max(col, vec3(0.05,0.05,0.025)*rand(fragCoord.xy/2.0 + iTime));\n        \n    //float line = min(SM(st.y - 0.0001, 0.0),SM(-st.y - 0.0001, 0.0));\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}