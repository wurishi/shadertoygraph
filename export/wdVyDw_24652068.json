{"ver":"0.1","info":{"id":"wdVyDw","date":"1603040610","viewed":520,"name":"color palettes","username":"manu210404","description":"some nice gradients!","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["colors","gradients","palettes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n#define HALF_PI 1.57079633\nvec3 palette1(float x) {\n    float v = pow(sin(PI*x), 2.);\n    return v * vec3(1., .5*v, .5);\n}\n\nvec3 palette2(float x) {\n    float v = pow(sin(PI*x), 2.);\n    return v * vec3(.5*v, 1.*v, .25);\n}\n\nvec3 palette3(float x) {\n    float v = pow(sin(PI*x), 2.);\n    return v * vec3(1., .5*v, .25*v);\n}\n\nvec3 palette4(float x) {\n    float v = pow(sin(PI*x), 2.);\n    return v * vec3(.5, .75*v, .5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = vec3(0);\n    if (uv.y < .25) {\n        col = pow(palette1(uv.x), vec3(.454545454545454545455));\n    } else if (uv.y < .5){\n        col = pow(palette2(uv.x), vec3(.454545454545454545455));\n    } else if (uv.y < .75){\n        col = pow(palette3(uv.x), vec3(.454545454545454545455));\n    } else {\n        col = pow(palette4(uv.x), vec3(.454545454545454545455));\n    }\n    float n = 1.-fract(uv.y*4.)*2.;\n    col *= sqrt(1.-n*n);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}