{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"\nvec4 ball(vec2 Coords, float size, vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 centro = (uv.xy)+Coords.xy; // Calc the Position for the Circel\n\t\n\tfloat isItIn = step(distance(fragCoord.xy, Coords), size); // step return 1.0 if the current uv is in ragen of coord+size\n\t\n\tvec4 colorCircel = mix(vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0), isItIn); // Return Color with step 0.0 or 1.0\n\t\n\treturn  colorCircel;\n}\n\nfloat Vignette(vec2 uv)\n{\n\tfloat OuterVig = 1.5;\n\t\n\tfloat InnerVig = 0.03;\n\t\n\tvec2 center = vec2(0.5,0.5);\n\tfloat dist  = distance(center,uv );\n\tfloat vig = clamp((OuterVig-dist) / (OuterVig-InnerVig),0.0,1.0);\n\t\n\treturn vig;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n\t\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = vec4(1.0,1.0,1.0,1.0);\n\t\n\t\n\tfor(float i = 1. ; i <= 5.;i++)\n\t{\n\t\tcolor *= ball(vec2(sin(iTime*i)*20.*i+(iResolution.x/2.),cos(iTime*i)*20.*i+(iResolution.y/2.)), 5.*i, fragCoord);\n\t}\n\n\t\n\tcolor *= Vignette(uv);\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dS3z3","date":"1391387771","viewed":255,"name":"Simpel 2D Balls","username":"2Light","description":"Just a simpelShader for understanding how it works.\n\nBased on : https://www.shadertoy.com/view/4d23RK (Ball)\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["balls","vignette","simpel"],"hasliked":0,"parentid":"","parentname":""}}