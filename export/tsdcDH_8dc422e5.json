{"ver":"0.1","info":{"id":"tsdcDH","date":"1600902106","viewed":89,"name":"hop_light","username":"taisukef","description":"simple equalizer","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["equalizer","microphone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float disk(vec2 r, vec2 center, float radius) {\n    float d = radius / 20.;\n    return 1.0 - smoothstep(radius - d, radius + d, length(r - center));\n}\n\nfloat getFrequency(float x) {\n    return texture(iChannel0, vec2(0., x)).x;\n}\n\nvec3 getGamingColor(float f) {\n    f *= 2.;\n    return vec3(sin(f), sin(f *  2.), sin(f * 3.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord) {\n    vec3 bgCol = vec3(0.);\n    vec3 ret = bgCol;\n    \n    int div = (1 << int(iTime / 2.) % 5);\n    float radius = iResolution.x / float(2 * (div + 2));\n    for (int i = 0; i < div; i++) {\n        float x = 1. / float(div) * float(i);\n        float n = getFrequency(x);\n        vec2 center = vec2(iResolution.x / float(div + 1) * float(i + 1), n * iResolution.y);\n        //vec3 col = vec3(n, 0., 0.);\n        vec3 col = getGamingColor(n);\n        ret = mix(ret, col, disk(fragCoord.xy, center, radius));\n    }\n    vec3 pixel = ret;\n    fragColor = vec4(pixel, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}