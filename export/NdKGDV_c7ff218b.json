{"ver":"0.1","info":{"id":"NdKGDV","date":"1632223632","viewed":48,"name":"loka：【故障2-3】错位图块故障（二次筛选）","username":"LokaHer","description":" 1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED (10.1)\n#define _Fade (1.)\n#define _Offset (10.)\n\n\n#define _BlockLayer1_U (5.)\n#define _BlockLayer1_V (9.5)\n\n#define _BlockLayer2_U (15.)\n#define _BlockLayer2_V (15.)\n\n#define _BlockLayer1_Indensity (6.)\n#define _BlockLayer2_Indensity (4.)\n\n#define _RGBSplit_Indensity (4.)\n\nfloat randomNoise(vec2 seed)\n{\n    return fract(sin(dot(seed * floor(iTime * SPEED), vec2(127.13, 311.71))) * 43758.5453123);\n}\n\n\nfloat randomNoise(float seed)\n{\n\treturn randomNoise(vec2(seed, 1.0));\n}\n\nvec4 ImageBlockGlitch_HIGH(vec2 uv)\n{\n    vec2 blockLayer1 = floor(uv * vec2(_BlockLayer1_U, _BlockLayer1_V));\n    vec2 blockLayer2 = floor(uv * vec2(_BlockLayer2_U, _BlockLayer2_V));\n    //return vec4(blockLayer1, blockLayer2);\n    \n    float lineNoise1 = pow(randomNoise(blockLayer1), _BlockLayer1_Indensity);\n    float lineNoise2 = pow(randomNoise(blockLayer2), _BlockLayer2_Indensity);\n    float RGBSplitNoise = pow(randomNoise(5.1379), 7.1) * _RGBSplit_Indensity;\n    float lineNoise = lineNoise1 * lineNoise2 * _Offset - RGBSplitNoise;\n    //return vec4(lineNoise);\n    \n    vec4 colR = texture(iChannel0, uv);\n    vec4 colG = texture(iChannel0, uv + vec2(lineNoise * 0.05 * randomNoise(7.), 0.));\n    vec4 colB = texture(iChannel0, uv - vec2(lineNoise * 0.05 * randomNoise(23.), 0.));\n    \n    vec4 re = vec4(vec3(colR.x, colG.y, colB.z), colR.a + colG.a + colB.a);\n    re = mix(colR, re, _Fade);\n    return re;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = ImageBlockGlitch_HIGH(uv);\n\n    // Output to screen\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}