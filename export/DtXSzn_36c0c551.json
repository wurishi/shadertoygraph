{"ver":"0.1","info":{"id":"DtXSzn","date":"1674159890","viewed":140,"name":"ChatGPT: Blinking tiles","username":"jsfehler","description":"This is the result of a conversation between ChatGPT and myself. The only code I wrote was the x-axis and y-axis movement.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["grid","animated","tiles","chatgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Create a variable to store background color\nvec4 backgroundColour = vec4(0.2, .9, .9, 1.0);\nvec4 foregroundColor = vec4(.90, .99, 1.0, 1.0);\nvec4 whiteColor = vec4(1.0);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalize the fragment coordinates to a value between 0 and 1\n    vec2 uv = fragCoord.xy / iResolution.y;\n    \n    // Offset the UV coordinates based on time\n    uv.x += (iTime * 0.2); // Horizontally moves the grid along x-axis with time\n    uv.y += sin(iTime * 0.1); // Vertically moves the grid along y-axis with time, using sine wave\n\n    // Create a grid pattern based on the modified UV coordinates\n    vec2 gridSize = uv * 10.0;\n    vec2 grid = fract( gridSize );\n    \n    float random = fract(sin(dot(floor(gridSize),vec2(12.9898,78.233))) * 43758.5453);\n    \n    // Output the final color by blending the grid lines (white) and the background (blue)\n    float blender = smoothstep( random, clamp( sin(iTime), 0.3, 0.8), 0.4 );\n    fragColor = mix( whiteColor, mix(foregroundColor, backgroundColour, blender), step(0.04, grid.x) * step(0.04, grid.y) );\n}","name":"Image","description":"","type":"image"}]}