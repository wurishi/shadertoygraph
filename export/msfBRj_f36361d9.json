{"ver":"0.1","info":{"id":"msfBRj","date":"1688937260","viewed":258,"name":"#002","username":"jvincent","description":"Neuron-like net of color changing points and lines.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["fractal","random","rainbow","rotating","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159265359\n#define S(a, b, t) smoothstep(a, b, t)\n#define color(offset) abs(sin(offset + vec3(3, 7, 11)*pi/6.0));\n\nfloat N21(vec2 p)\n{\n    p = fract(p*vec2(0.59, 0.28));\n    p += dot(p, p + 0.74);\n    return fract(p.x*p.y);\n}\n\nvec2 N22(vec2 p)\n{\n    float n = N21(p);\n    return vec2(n, N21(p+n));\n}\n\nfloat Line(vec2 p, vec2 a, vec2 b)\n{\n    vec2 pa = p-a;\n    vec2 ba = b-a;\n    float t = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n    \n    float d = length(a-b);\n    \n    float L = S(0.03, 0.001, length(pa - ba*t));\n    L *= S(1.2, 1.0, d)*0.5 + S(0.1, 0.099, abs(d - 1.0));\n    \n    return L;\n}\n\nvec2 GetPos(vec2 id, vec2 offset)\n{\n    vec2 n = N22(id+offset)*(iTime + 10.0);\n    return (offset + sin(n)*0.4);\n}\n\nfloat StarField(vec2 uv)\n{\n    vec2 gv = fract(uv)-0.5;\n    vec2 id = floor(uv);\n    float m = 0.0;\n    \n    vec2 ps[9];\n    int i = 0;\n    \n    for(float y=-1.; y <= 1.0; y++)\n    {\n        for(float x = -1.0; x <= 1.0; x++)\n        {\n            ps[i++] = GetPos(id, vec2(x, y));\n        }\n    }\n    \n    for(i = 0; i < 9; i++)\n    {\n        m += Line(gv, ps[4], ps[i]);\n        float sparkle = 0.0025/length(dot(ps[i]-gv, ps[i]-gv));\n        \n        m += sparkle;\n    }\n    \n    m += Line(gv, ps[1], ps[3]);\n    m += Line(gv, ps[1], ps[5]);\n    m += Line(gv, ps[3], ps[7]);\n    m += Line(gv, ps[5], ps[7]);\n\n    return m;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 col = vec3(0.0);\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = (iMouse.xy/iResolution.xy)-0.5;\n    \n    vec3 m = vec3(0.0);\n    float time = iTime*0.1;\n    \n    float s = sin(time);\n    float c = cos(time);\n\n    mat2 rot = mat2(c, -s, s, c);\n    \n    uv *= rot;\n    mouse *= rot;\n    for(float i = 0.0; i <= 2.0; i += 1.0/4.0)\n    {\n        float z = fract(i+time);\n        float size = mix(10.0, 0.5, z);\n        float fade = S(0.0, 0.5, z)*S(1.0, 0.8, z);\n        \n        m += StarField(uv*size+i*20.0-mouse) * fade * color(i/2.0 - iTime);\n    }\n    \n    col = m;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}