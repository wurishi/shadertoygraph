{"ver":"0.1","info":{"id":"3t2yzc","date":"1595171638","viewed":88,"name":"QRD Pattern","username":"JoanBdeK","description":"Creating the function I want to use for domain warping, baby steps though","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 qrd(float x_, in float y_, in float step_, in float amp_, in float speed_) {\n    \n  float step = 200.0;\n  float amp = amp_/step;\n  float speed = speed_ * iTime * step;\n     \n  vec3 qrd = vec3(amp * (mod(pow(x_, 2.0) + pow(y_, 2.0) + speed, step_)), 0.0, 0.0);\n  return qrd;\n}\n\nvec3 hsb2rgb( in vec3 c) {\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0,\n                     0.0,\n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix(vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord;//iResolution.xy;\n    \n    vec3 col = qrd(uv.x, uv.y, 200.0, 1.0, 1.0);\n    vec3 col1 = hsb2rgb(vec3(col.x, 1.0, 1.0));\n    \n    fragColor = vec4(col1, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}