{"ver":"0.1","info":{"id":"tsXGWs","date":"1547778689","viewed":159,"name":"Ecolocation Simulation","username":"saabi","description":"Rough ecolocation of a pulse with five microphones.\n\nYou can add or remove mikes, or change their position, to see how it affects the response (by copying and pasting or commenting for now)\n\nReal ecolocation with three mikes can be more precise than this.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["ecolocationsimulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Ecolocating the direction of a pulse with four virtual microphones\n\n\nconst float PI = 3.141592;\nconst vec2 SOURCE = vec2(38.0, 26.0);\n\nconst vec2 MIC0 = vec2(-1.0, 1.0);\nconst vec2 MIC1 = vec2(-1.0, -1.0);\nconst vec2 MIC2 = vec2(1.0, 1.0);\nconst vec2 MIC3 = vec2(1.0, -1.0);\nconst vec2 MIC4 = vec2(0.0, 0.0);\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat cmag(float dist) {\n\tfloat phase = dist*2.0 - iTime*10.0;\n\tfloat mp = mod(phase, PI * 30.0);\n\treturn (mp > 0.0 && mp < PI*1.0) ? sin(phase)/*(dist*dist)*/ : 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tfloat aspect = iResolution.x / iResolution.y;\n\tvec2 pos = ( fragCoord.xy / iResolution.xy );\n\tpos -= 0.5;\n\tpos.x *= aspect;\n\tpos *= 60.;\n\t\n\tfloat mag = cmag(length(pos+SOURCE));\n\tfloat mag0 = cmag(length(MIC0-SOURCE)+length(pos+MIC0));\n\tfloat mag1 = cmag(length(MIC1-SOURCE)+length(pos+MIC1));\n\tfloat mag2 = cmag(length(MIC2-SOURCE)+length(pos+MIC2));\n\tfloat mag3 = cmag(length(MIC3-SOURCE)+length(pos+MIC3));\n\tfloat mag4 = cmag(length(MIC4-SOURCE)+length(pos+MIC4));\n\n\tvec3 color = vec3( mag );\n\tcolor += vec3( mag0, mag1, mag2 );\n\tcolor += vec3( mag3, mag3, 0 );\n\tcolor += vec3( 0, mag4, mag4 );\n\n    if (mag0+mag1+mag2+mag3+mag4 > 4.8) color = vec3(0.0);\n\telse if (mag0+mag1+mag2+mag3+mag4 > 4.5) color *= 1.0;\n\telse color /= 6.0;\n\n    if (length(pos-SOURCE) < 0.2) color = vec3(1.0,0.0,0.0);\n\tif (length(pos+SOURCE) < 0.2) color = vec3(1.0,0.0,0.0);\n\tif (length(MIC0+pos) < 0.2) color = vec3(1.0,0.0,0.0);\n\tif (length(MIC1+pos) < 0.2) color = vec3(0.0,1.0,0.0);\n\tif (length(MIC2+pos) < 0.2) color = vec3(0.0,0.0,1.0);\n\tif (length(MIC3+pos) < 0.2) color = vec3(1.0,1.0,0.0);\n\tif (length(MIC4+pos) < 0.2) color = vec3(0.0,1.0,1.0);\n\n\tfragColor = vec4( color, 1.0 );\n}","name":"Image","description":"","type":"image"}]}