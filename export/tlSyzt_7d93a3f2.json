{"ver":"0.1","info":{"id":"tlSyzt","date":"1595183535","viewed":64,"name":"TrainShader","username":"ValeriiShaderist","description":"primitive","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 lerpColor(vec4 color1, vec4 color2, float t) {\n\treturn color1 + (color2-color1)*t;\n}\n\nvec4 Circle(vec2 uv, float radius, float x, float y, vec4 replaceColor, int number) {\n\tvec2 uvs = (uv + .5) * iResolution.xy;\n    float scaledRadius = radius * iResolution.y;\n    \n    float lengthOfCircle = radius;\n\n    vec4 color = vec4(0.,0.,0.,0.);//lerpColor(topBlue, bottomBlue, 0.1);\n    vec2 startPosition = vec2(x * iResolution.x,y * iResolution.y);\n    float distance = length(-startPosition + uvs);\n    if (distance < scaledRadius) {\n        color = replaceColor * distance/iResolution.y*4. * float(number) / 100.;\n    }\n    return color;\n    \n}\n\nfloat rand(float co) { return fract(sin(co*(91.3458)) * 47453.5453); }\nfloat rand(vec2 co){ return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453); }\nfloat rand(vec3 co){ return rand(co.xy+rand(co.z)); }\n\nvec2 getPosition(int i) {\n    float ii = float(i) / 150.;\n\treturn vec2(rand(ii), rand(ii*3.));\n}\n\nfloat getSize(int i) {\n\treturn (floor(float(i)/5.)/200.);//0.1 + (sin(iTime+3.14)/2. + .5)*0.1  (floor(float(i)/5.)/20.);\n}\n\n\nvec4 getColor(int i) {\n    float ii = float(i);\n\treturn vec4(rand(ii),rand(ii*2.),rand(ii*3.),.4);\n}\n\n\nfloat modFloat(float a, float b) {\n\treturn (a)-(floor((a)/(b))*(b));\n}\n\nfloat getVerticalMoveShift(int i) {\n\tfloat ii = float(i);\n    return modFloat(iTime*ii, 1000.)/1000. -1.;\n}\n\nfloat getHorizontalMoveShift(int i) {\n\tfloat ii = float(i);\n    return sin(ii*iTime/100.)/20.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - .5;\n    \n    vec4 yellowColor = vec4(1.,1.,0.,.1);\n    vec4 redColor = vec4(1.,0.,0.,.1);\n    \n    float id = uv.x;\n    \n    float positionShiftX = 0.5 + iMouse.x/iResolution.x;\n    float positionShiftY = 0.5 + iMouse.y/iResolution.y;\n    \n    vec4 topBlue = vec4(.0,0.6,1.,.5) / 2.;\n    vec4 bottomBlue = vec4(1.,1.,0.,.5) / 2.;\n    \n    vec4 bgColor = lerpColor(topBlue, bottomBlue, uv.y);\n    \n    // Output to screen\n    vec4 circles = vec4(0,0,0,0);\n    for (int i = 0; i < 150; i++) {\n        float parallax = (floor(float(i)/5.)/20.);\n        float moveUp = getVerticalMoveShift(i);\n        float moveSide = getHorizontalMoveShift(i);\n\n        vec2 shift = getPosition(i) + parallax * vec2(positionShiftX+moveSide,positionShiftY+moveUp);\n    \tcircles += Circle(uv, getSize(i), -1.+shift.x, -1.+shift.y, getColor(i),i);\n    }\n    \n    if (length(circles) == 0.) {\n        fragColor = bgColor;\n\n    } else {\n        fragColor = bgColor + circles;\n\n    }\n       \n}","name":"Image","description":"","type":"image"}]}