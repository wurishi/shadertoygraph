{"ver":"0.1","info":{"id":"llSSWc","date":"1447081152","viewed":204,"name":"Cylinder Map","username":"chipbell4","description":"Just a quick attempt to map to a cylinder","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["transformation","cylinder"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouseUV = iMouse.xy / iResolution.xy;\n    \n    // shrink x based on x distance from middle. This will \"pinch\" points to the outside\n    float xDisplacement = abs(uv.x - .5) * 2.; // ranges from 0 - 1\n    float direction = 1.;\n    if(xDisplacement < 0.) {\n        direction = -1.;\n    }\n    \n\tfloat scaleFactor = 1. - xDisplacement;\n    uv.x = ((uv.x - mouseUV.x) * scaleFactor) + mouseUV.x;\n    \n    if(uv.x < 0. || uv.x > 1.) {\n        fragColor = vec4(0., 0., 0., 0.);\n        return;\n    }\n    \n\tfragColor = texture(iChannel0, uv);\n}","name":"","description":"","type":"image"}]}