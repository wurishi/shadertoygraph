{"ver":"0.1","info":{"id":"mtVXD1","date":"1708955614","viewed":45,"name":"the X","username":"Gooble","description":"X","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["x"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdRoundedX( in vec2 p, in float w, in float r )\n{\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*0.5) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(.0);\n    \n    for (float i = 0.0; i < 12.0; i++)\n    {\n        float angle = 0.;\n        uv.xy = vec2(uv.x * cos(angle) - uv.y * sin(angle), uv.y * cos(angle) + uv.x * sin(angle)); \n        float d = sdRoundedX(uv, sin(iTime) + 1.05, ((sin(iTime)/2.0) + 1.0) * .025);\n        d = fract(d - (iTime/(i + 3.5)) + (i * 1.52123));\n        vec3 col = palette(length(uv0) + i*.4 + iTime * .4 );\n\n        d =  pow((.0125 + (sin(iTime)*.005)) / d, 1.1);\n        finalColor += col * d;\n    }\n       \n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}