{"ver":"0.1","info":{"id":"wsyyRc","date":"1603361735","viewed":201,"name":"Constant speed","username":"andreagarritano","description":"circle that mantain constant speed","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["speed","constant"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 p, float radius)\n{\n    return length(p) - radius;\n}\n\nfloat saturate(float x)\n{\n    return clamp(x, 0.0, 1.0);\n}\n\nvoid blend(inout vec4 back, float dist, vec4 color, float border)\n{\n    float alpha = saturate(dist);;\n    //float alpha = saturate((dist+border)/border);\n    color = mix(color, vec4(0.0, 0.0, 0.0, 1.0), saturate((dist)));    \n    back = mix(back, color, (1.0-alpha) * color.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    float width_piano = 30.0; //meter\n    float velox = 25.0; //km/h\n    float velox_ms = velox / 3.6;\n    float velox_pixel = (iResolution.x/width_piano)*velox_ms;\n    float radius_meters = 4.5;\n    \n    float center = (iResolution.y / 2.0);\n        \n    // background color\n    fragColor = vec4(0.0,0.0,0.0,1.0); \n    \n    float radius = (iResolution.x/width_piano)*(radius_meters/2.0);\n\n    float x = mod((iTime*velox_pixel), iResolution.x+2.0*radius)-radius;\n\n    \n    blend(fragColor, circle(vec2(fragCoord.x - x, fragCoord.y - center), radius), vec4(1.0), 1.0);    \n}","name":"Image","description":"","type":"image"}]}