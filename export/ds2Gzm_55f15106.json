{"ver":"0.1","info":{"id":"ds2Gzm","date":"1667426890","viewed":235,"name":"Artober - Leather","username":"Flopine","description":"Day 27 of the october challenge, even if we're in november XD ","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","animation","specular","truchet","pattern","everyday","extrude"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan, slerpy, wwrighter \n// BigWings, FabriceNeyret and Blackle for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  \n// https://twitter.com/CookieDemoparty\n\n\n#define PI acos(-1.)\n#define TAU (2.*PI)\n#define rot(a) mat2(cos(a),sin(a), -sin(a), cos(a))\n\n#define square(u,s) (max(abs(u.x), abs(u.y))-s)\n\n#define noise(u) textureLod(iChannel0, u, 0.).x\n\n\nvoid moda (inout vec2 p, float rep)\n{\n    float per = TAU/rep;\n    float a = mod(atan(p.x,p.y), per)-per*.5;\n    p = vec2(cos(a),sin(a))*length(p);\n}\n\nfloat truchet (vec2 uv)\n{\n    vec2 id = floor(uv);\n    float flow = mod(id.x+id.y,2.)*2.-1.;\n    uv = fract(uv)-.5;\n    \n    float ds = (noise(id*.87)<.5) ? 1. : -1.;\n    uv.x *= ds; \n    float s = (uv.x > -uv.y) ? 1. : -1.;   \n    uv -= .5*s;    \n    uv *= rot(iTime*flow); \n    moda(uv, 18.);\n    uv.x -= .5;\n    float d = abs(square(uv, 0.05));\n    \n    return d;\n}\n\nfloat extrude (vec3 p, vec2 dh)\n{\n    vec2 q = vec2(dh.x, abs(p.z)-dh.y);\n    return min(0., max(q.x,q.y))+length(max(q, 0.));\n}\n\nfloat SDF (vec3 p)\n{\n    p.yz *= rot(PI/12.);\n    p.y += iTime;\n    \n    float off = texture(iChannel1,p.xy*.2).x*.1;\n    return min( abs(p.z)-(.1+off), extrude(p, vec2(truchet(p.xy), .15))-0.14 );\n}\n\nvec3 gn (vec3 p)\n{\n    vec2 eps = vec2(0.001, 0.);\n    return normalize(SDF(p)-vec3(SDF(p-eps.xyy),SDF(p-eps.yxy),SDF(p-eps.yyx)));\n}\n\nfloat ao (vec3 p, vec3 n, float e)\n{return clamp(SDF(p+e*n)/e, 0., 1.);}\n\nfloat spec (vec3 rd, vec3 l, vec3 n, float e)\n{return pow(max(dot(n,normalize(l-rd)), 0.), e);}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    vec3 ro = vec3(0.001, .001, -3.), rd=normalize(vec3(uv, 1.)),p=ro,\n    col=vec3(0.), l=vec3(.2, .5, -2.);\n    \n    bool hit = false;\n    for(float i=0.; i<32.; i++)\n    {\n        float d = SDF(p);\n        if (d<0.001)\n        {\n            hit=true; \n            break;\n        }\n        p += d*rd*.5;\n    }\n    \n    vec3 n = gn(p);\n    float li = max(dot(n,normalize(l)), 0.);\n    float AO = ao(p,n,0.1)+ao(p,n,0.35)+ao(p,n,0.5);\n    \n    col = mix(vec3(0.01),vec3(0., 0., 0.01),li);\n    col += vec3(.8, 0.85, 1.)*spec(rd,l,n,80.);\n    col *= AO/3.;\n    \n    fragColor = vec4(sqrt(col),1.0);\n}","name":"Image","description":"","type":"image"}]}