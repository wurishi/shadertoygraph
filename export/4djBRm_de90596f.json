{"ver":"0.1","info":{"id":"4djBRm","date":"1499916981","viewed":1109,"name":"Tunnel Effect Shader","username":"Falken","description":"A shader which demonstrates how a tunnel effect works in GLSL.  The tunnel() function simply distorts the input UVs and outputs UVs wrapped around the origin.","likes":9,"published":3,"flags":0,"usePreview":1,"tags":["2d","tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"Tunnel Effect\" by Falken / brainstorm\n// A quickly hacked together shader to demonstrate how a tunnel effect works in GLSL.\n\nconst float TUNNEL_SIZE  = 0.25;\t// smaller values for smaller/thinner tunnel\nconst float TUNNEL_SPEED = 0.5;\t\t// speed of tunnel effect, negative values ok\n\nconst float PI = 3.141592;\n\nvec2 tunnel(vec2 uv, float size, float time)\n{\n    vec2 p  = -1.0 + (2.0 * uv);\n    float a = atan(p.y, p.x);\n    float r = sqrt(dot(p, p));\n    return vec2(a / PI, time + (size / r));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = tunnel(uv, TUNNEL_SIZE, iTime * TUNNEL_SPEED);\n\tfragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"}]}