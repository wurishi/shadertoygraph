{"ver":"0.1","info":{"id":"MsdBD2","date":"1526883153","viewed":145,"name":"Hashscape","username":"James_Harnett","description":"Journey to the Boundary of Chaos and back again.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","abstract","art","wallpaper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// LICENSE: http://unlicense.org/\n#define SCALE 13\n\nvec4 hash( uvec2 p)\n{   \n\tuvec4 q = ( p.x + p.y + uvec4(3U*p.x, 2U*p.y, p.x, 0) )  >> SCALE;\n    uvec4 a = p.x ^ (p.xxxx << q );\n    uvec4 b = p.y ^ (p.yyyy << q );\n   \tuvec4 n = (a & b) - a;\n    \n    n ^= n << 21;\n    n ^= n << (n >> 27);\n    \n    return vec4(n) / float(0xffffffffU);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    uvec2 uv = uvec2(fragCoord);\n    vec4 col = 0.5*sqrt(hash(uv+uvec2(4U << SCALE)+uvec2(1U,3U)*uint(iFrame)));\n    fragColor = vec4(col.xyz+col.yzw,1.0);\n}","name":"Image","description":"","type":"image"}]}