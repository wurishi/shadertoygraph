{"ver":"0.1","info":{"id":"wscXWM","date":"1572099890","viewed":180,"name":"burning ship","username":"finalpatch","description":"Burning Ship fractal","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float esc = 20.0;\nconst int depth = 420;\nconst float p = 30.0;\n\nvec3 mandel(vec2 z0)\n{\n    float k = 0.0;\n    vec2 z = vec2(0.0);\n    for(int i = 0; i < depth; ++i)\n    {\n        vec2 z1 = vec2(abs(z.x), abs(z.y));\n        z = vec2(z1.x*z1.x-z1.y*z1.y, z1.x*z1.y*2.0) + z0;\n        if (length(z) > esc)\n            break;\n        k += 1.0;\n    }\n    float mu = k + 1.0 - log2(log(length(z)));\n    return sin(mu*0.1 + vec3(0.0,0.5,1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x / iResolution.y;\n\tvec2 uv = gl_FragCoord.xy / iResolution.yy;\n    float t = mod(iTime, p);\n    if (t > p/2.0)\n        t = p - t;\n    uv *= vec2(1.0, -1.0) * 3.0;\n    uv += vec2(-1.0, 1);\n    float scale = 0.5 + pow(2.0, t);\n    vec2 offset = vec2(-1.76, -0.025);\n    uv += offset*scale;\n    uv /= scale;\n    fragColor = vec4(mandel(uv), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}