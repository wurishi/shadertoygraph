{"ver":"0.1","info":{"id":"csSSDc","date":"1670973731","viewed":86,"name":"Unicorn Vomit","username":"4LT","description":"Variation on my previous shader.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["noise","automata","cellular"],"hasliked":0,"parentid":"ddBXWV","parentname":"Blur + Shift (EPILEPSY WARNING)"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float tau = 2.0 * 3.14159;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 angles = texture(iChannel0, uv).xyz * tau;\n    vec3 color = 0.5 - sin(angles)/2.0;\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 init(vec2 fragCoord) {\n    const int pt_count = 20;\n    float rand = iDate.w;\n    float mult = 137.6;\n    float mult_max = 339.0;\n    \n    for (int i = 0; i < pt_count; i++) {\n        rand = mod(rand * mult, iChannelResolution[0].x);\n        mult = mod(mult * rand, mult_max);\n        float x = rand;\n        rand = mod(rand * mult, iChannelResolution[0].y);\n        mult = mod(mult * rand, mult_max);\n        float y = rand;\n        \n        float dx = abs(fragCoord.x - x);\n        float dy = abs(fragCoord.y - y);\n        \n        if (dx < 1.0 && dy < 1.0) {\n            return vec4(vec3(0.1, 0.1, 0.1) * float(i+1), 1.0);\n        }\n    }\n    \n    return vec4(0.0, 0.0, 0.0, 1.0);\n}\n\nvec4 sampleBlur(vec2 fragCoord) {\n    vec3 uv1 = vec3(fragCoord.xy / iChannelResolution[0].xy, 1.0);\n    \n    vec3 uv2 = vec3((fragCoord.xy + vec2(1.0, 0.0)) / iChannelResolution[0].xy, 0.67);\n    vec3 uv3 = vec3((fragCoord.xy + vec2(-1.0, 0.0)) / iChannelResolution[0].xy, 0.67);\n    vec3 uv4 = vec3((fragCoord.xy + vec2(0.0, 1.0)) / iChannelResolution[0].xy, 0.67);\n    vec3 uv5 = vec3((fragCoord.xy + vec2(0.0, -1.0)) / iChannelResolution[0].xy, 0.67);\n    \n    vec3 uv6 = vec3((fragCoord.xy + vec2(1.0, 1.0)) / iChannelResolution[0].xy, 0.2);\n    vec3 uv7 = vec3((fragCoord.xy + vec2(-1.0, 1.0)) / iChannelResolution[0].xy, 0.5);\n    vec3 uv8 = vec3((fragCoord.xy + vec2(1.0, -1.0)) / iChannelResolution[0].xy, 0.2);\n    \n    float sum = uv1.z + uv2.z + uv3.z + uv4.z + uv5.z + uv6.z + uv7.z + uv8.z;\n    \n    vec4 s1 = texture(iChannel0, uv1.xy);\n    vec4 s2 = texture(iChannel0, uv2.xy);\n    vec4 s3 = texture(iChannel0, uv3.xy);\n    vec4 s4 = texture(iChannel0, uv4.xy);\n    vec4 s5 = texture(iChannel0, uv5.xy);\n    vec4 s6 = texture(iChannel0, uv6.xy);\n    vec4 s7 = texture(iChannel0, uv7.xy);\n    vec4 s8 = texture(iChannel0, uv8.xy);\n    \n    return (s1 * uv1.z\n        + s2 * uv2.z\n        + s3 * uv3.z\n        + s4 * uv4.z\n        + s5 * uv5.z\n        + s6 * uv6.z\n        + s7 * uv7.z\n        + s8 * uv8.z) / sum * 1.02;    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float delta = 0.002;\n    \n    vec4 color = sampleBlur(fragCoord);\n\n    if (color.w == 0.0) {\n        color = init(fragCoord);\n    } else {\n        color = color + vec4(delta, delta / 2.1, delta / 3.1, 0.0);\n        color.xyz = mod(color.xyz, 1.0);\n    }\n    \n    if (iMouse.z > 0.0) {\n        vec2 dMouse = iMouse.xy - fragCoord.xy;\n        if (dMouse.x > -0.5 && dMouse.x <= 0.5 && dMouse.y > -0.5 && dMouse.y <= 0.5) {\n            color = vec4(0.0, 0.0, 0.0, 1.0);\n        }\n    }\n    \n    fragColor = color;\n}","name":"Buffer A","description":"","type":"buffer"}]}