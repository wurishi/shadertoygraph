{"ver":"0.1","info":{"id":"lt3fzN","date":"1538775998","viewed":486,"name":"Blur effect","username":"andreyu","description":"My simple blur I use in my engine.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Simple blur effect by Andrey A. Ugolnik\n// 2017\n\nlowp vec4 blur(in sampler2D tex, in highp vec2 uv, in highp vec2 resolution)\n{\n\thighp vec2 r = 1.0 / resolution;\n    \n    const lowp float off = 5.0;\n    const lowp float v = off * 2.0 + 1.0;\n    const lowp float d = 1.0 / (v * v);\n\n    lowp vec4 color = vec4(0.0);\n    for (float x = -off; x <= off; x++)\n    {\n        for (float y = -off; y <= off; y++)\n        {\n            highp vec2 coord = vec2(uv.x + x * r.x, uv.y + y * r.y);\n            color += texture(tex, coord) * d;\n        }\n    }\n        \n    return color;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    highp vec2 uv = fragCoord/iResolution.xy;\n\n\tlowp vec4 col = blur(iChannel0, uv, iResolution.xy);\n\n    // Output to screen\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}