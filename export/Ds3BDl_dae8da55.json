{"ver":"0.1","info":{"id":"Ds3BDl","date":"1697737196","viewed":321,"name":"Worley patterns","username":"felipetovarhenao","description":"Worley noise patterns","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["worleynoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Felipe Tovar-Henao [www.felipe-tovar-henao.com]\nTitle: Worley patterns\n*/\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n#define SPEED 1.\n\nvec2 adjustViewport(vec2 coord,vec2 res){\n\treturn(coord*2.-res)/(res.x<res.y?res.x:res.y);\n}\n\nvec2 random2D(in vec2 uv,in int seed){\n\treturn fract(sin(vec2(dot(uv,vec2(12.9898,78.233)+float(seed)),dot(uv,vec2(43.1712,85.3927))))*43758.5453123);\n}\n\nvec3 random3D(in vec3 uv,in int seed){\n\treturn fract(abs(sin(vec3(dot(uv,vec3(11.13,57.05,41.87)+float(seed)),dot(uv,vec3(43.17,85.39,38.97)),dot(uv,vec3(56.91,39.59,81.33))))*48240.41));\n}\n\nfloat worley(in vec2 uv,in int seed){\n\tvec2 iuv=floor(uv);\n\tvec2 f=fract(uv);\n\tfloat mindist=90000.;\n\tfor(float x=-1.;x<=1.;x++){\n\t\tfor(float y=-1.;y<=1.;y++){\n\t\t\tvec2 node=random2D(iuv+vec2(x,y),seed)+vec2(x,y);\n\t\t\tmindist=min(mindist,distance(node,f));\n\t\t}\n\t}\n\treturn mindist;\n}\n\nfloat worley(in vec3 uv,in int seed){\n\tvec3 iuv=floor(uv);\n\tvec3 f=fract(uv);\n\tfloat mindist=90000.;\n\tfor(float x=-1.;x<=1.;x++){\n\t\tfor(float y=-1.;y<=1.;y++){\n\t\t\tfor(float z=-1.;z<=1.;z++){\n\t\t\t\tvec3 node=random3D(iuv+vec3(x,y,z),seed)+vec3(x,y,z);\n\t\t\t\tmindist=min(mindist,distance(node,f));\n\t\t\t}\n\t\t}\n\t}\n\treturn mindist;\n}\n\nfloat fold(in float x){\n\treturn abs(mod(x+1.,2.)-1.);\n}\n\nvec2 fold(in vec2 p){\n\treturn vec2(fold(p.x),fold(p.y));\n}\n\nvec3 fold(in vec3 p){\n\treturn vec3(fold(p.xy),fold(p.z));\n}\n\nvec4 fold(in vec4 p){\n\treturn vec4(fold(p.xy),fold(p.zw));\n}\n\nvec3 gradient(in float t,in vec3 a,in vec3 b,in vec3 c,in vec3 d){\n\treturn a+b*cos(TWO_PI*(c*t+d));\n}\n\nmat2 rot2(in float a){\n\tfloat c=cos(a);\n\tfloat s=sin(a);\n\treturn mat2(c,-s,s,c);\n}\n\nfloat cosine(in float x,in float s){\n\tfloat y=cos(fract(x)*PI);\n\treturn floor(x)+.5-(.5*pow(abs(y),1./s)*sign(y));\n}\n\nvec2 cosine(in vec2 p,in float s){\n\treturn vec2(cosine(p.x,s),cosine(p.y,s));\n}\n\nvec3 cosine(in vec3 p,in float s){\n\treturn vec3(cosine(p.xy,s),cosine(p.z,s));\n}\n\nvec4 cosine(in vec4 p,in float s){\n\treturn vec4(cosine(p.xy,s),cosine(p.zw,s));\n}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 uv=adjustViewport(fragCoord.xy,iResolution.xy);\n\t\n\t// control animation speed\n\tfloat t=iTime*SPEED;\n\t\n\t// fold space for mirror repetition\n\tuv=fold(uv);\n\tfloat mag=length(uv);\n\t\n\t// space rotation\n\tfloat rot=-t*.05-mag;\n\t\n\t// distort space\n\tvec2 uvr=uv-fold(mag+t*.0123);\n\t\n\t// apply rotation\n\tuv*=rot2(rot);\n\t\n\t// noise animation\n\tfloat z=-t*.01-mag*2.;\n\t\n\t// get worley noise\n\tfloat n=worley(vec3(uv*4.,z),1);\n\t\n\t// remap noise\n\tn=n*exp(-mag);\n\tn=fold(n*2.-t*.2);\n\tn=cosine(n,3.);\n\t\n\t// gradient angle\n\tfloat theta=fold(mag*mag-t*.1);\n\t\n\t// ring frequency\n\ttheta*=3.;\n\t\n\t// ring variation\n\ttheta+=n*.25;\n\t\n\t// increase variation\n\ttheta+=t*-.1;\n\t\n\t// change blending\n\ttheta=cosine(theta,2.);\n\t\n\t// compute color\n\tvec3 c1=vec3(.5);\n\tvec3 c2=vec3(.4275,.4275,.4275);\n\tvec3 c3=vec3(.5961,.5961,.5961);\n\tvec3 c4=vec3(.3,.4,.45);\n\tvec3 col=gradient(theta,c1,c2,c3,c4)*n;\n\t\n\tfragColor=vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}