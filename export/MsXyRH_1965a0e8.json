{"ver":"0.1","info":{"id":"MsXyRH","date":"1486982724","viewed":465,"name":"Sphere_light","username":"PlauM","description":"red sphere light","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["sphereredlight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 color, in vec2 pixCoords )\n{\n\tfloat x = pixCoords.x;\n    float y = pixCoords.y;\n    \n    float X = x - iResolution.x / 2.0;\n    float Y = y - iResolution.y / 2.0;\n    \n    vec2 center =vec2(X, Y);\n    \n    //__________________________________________________________\n    \n    vec4 colorSpace = vec4(0.0, 0.1, 0.2, 0.0);\n    vec4 colorEarth = vec4(0.2, 0.4, 0.8, 1.0);\n    \n    float rayon = 120.0;\n    vec3 sun = vec3(1.0, 0.0, 0.0); //(cos(iTime),0.0,sin(iTime))\n    float distance = sqrt(pow(X,2.0)+pow(Y,2.0));\n    \n    vec3 centreSurfaceTerre = vec3(X, Y, sqrt(pow(rayon, 2.0)-pow(X, 2.0)-pow(Y, 2.0)));\n    vec3 haut = centreSurfaceTerre/rayon;\n    \n    float lum = haut.x*sun.x + haut.y*sun.y + haut.t*sun.z;\n    \n    \n    if (distance < rayon)\n    {\n        color = colorEarth * max(0.2, lum);\n    }\n    else\n    {\n        colorSpace = vec4(1.0, 0.4, 0.8, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}