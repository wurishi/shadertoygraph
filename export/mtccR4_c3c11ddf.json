{"ver":"0.1","info":{"id":"mtccR4","date":"1698935890","viewed":38,"name":" Koch Snowflake Tutorial Face","username":"sarahannstarmer","description":"The final result of my video tutorial on YouTube. See comments.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","curve","kifs","snowflake","koch","artofcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"[TUT] Koch Snowflake Tutorial\" by BigWIngs. https://shadertoy.com/view/tdcGDj\n// 2023-11-02 14:37:39\n\n// Koch Snowflake - by Martijn Steinrucken aka BigWings 2019\n// Email:countfrolic@gmail.com Twitter:@The_ArtOfCode\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n// This effect is part of a tutorial on YouTube\n// https://www.youtube.com/watch?v=il_Qg9AqQkE\n\nvec2 N(float angle) {\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 mouse = iMouse.xy/iResolution.xy; // 0 1 \n    uv *= 1.25;\n    \n    uv.x = abs(uv.x);\n    \n    vec3 col = vec3(0);\n    float d;\n    \n    float angle = 0.;\n    vec2 n = N((5./6.)*3.1415);\n    \n    uv.y += tan((5./6.)*3.1415)*.5;\n   \td = dot(uv-vec2(.5, 0), n);\n    uv -= max(0.,d)*n*2.;\n    \n    float scale = 1.;\n    \n    n = N(mouse.y*(2./3.)*3.1415);\n    uv.x += .5;\n    for(int i=0; i<10; i++) {\n        uv *= 3.;\n        scale *= 3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        d = dot(uv, n);\n        uv -= min(0.,d)*n*2.;\n    }\n    \n    d = length(uv - vec2(clamp(uv.x,-1., 1.), 0));\n    col += smoothstep(1./iResolution.y, .0, d/scale);\n    uv /= scale;\t// normalization\n    \n    col += texture(iChannel0, uv*2.-iTime*.03).rgb;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}