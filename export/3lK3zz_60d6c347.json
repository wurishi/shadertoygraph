{"ver":"0.1","info":{"id":"3lK3zz","date":"1578197433","viewed":202,"name":"Seigaiha","username":"coposuke","description":"training. 青海波(seigaiha)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["pattern","training","japanese"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI      3.14159265358979\n#define PI_HALF (PI / 2.0)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - iResolution.xy * 0.5) / min(iResolution.x, iResolution.y);\n\n    float scale = 5.0 + sin(iTime) * 0.25;\n    uv.y -= fract(iTime * 0.2) / scale;\n    \n    vec2  uvGrid = floor(uv * scale);\n    float uvYOffset = mod(uvGrid.x, 2.0) <= 0.0 ? 0.0 : 0.5;\n    vec2  uvLocal = fract(uv * scale + vec2(0.0, uvYOffset)) - vec2(0.0, 0.5);\n    float dist = 1e+5;\n    \n    // below grids (both sides only)\n    for(float x=-1.0; x<2.0; x+=2.0)\n        dist = min(dist, distance(vec2(x, -1), uvLocal));\n    \n    // self grid\n    const float WAVE_DISTANCE = 1.0;\n\tif(WAVE_DISTANCE < dist)\n    \tdist = min(dist, distance(vec2(0, -0.5), uvLocal));\n\n    // center grids (both sides only)\n\tif(WAVE_DISTANCE < dist)\n  \t\tfor(float x=-1.0; x<2.0; x+=2.0)\n        \tdist = min(dist, distance(vec2(x, 0), uvLocal));\n\n    const float STRIPES = 8.0;\n    float stripeOffset = (-cos(fract(iTime * 0.5) * PI) * 0.5 + 0.5) * (4.0 * PI);\n    fragColor.rgb =\n        (0.0 < sin(dist * STRIPES * PI - stripeOffset)) ?\n    \tvec3(1.0, 0.8, 0.4) :\n    \tvec3(1.0, 0.7, 0.2);\n\n    float uvYGradient = fragCoord.y / iResolution.y;\n    fragColor.rgb *= uvYGradient * 0.4 + 0.6;\n}\n","name":"Image","description":"","type":"image"}]}