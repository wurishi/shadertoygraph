{"ver":"0.1","info":{"id":"tdcXzS","date":"1572257875","viewed":220,"name":"simple 2d circle waves","username":"jt","description":"Simple waves generated by combining rotating circles.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","waves","water","circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//  Noise - value - 3D by iq (https://www.shadertoy.com/view/4sfGzS)\nfloat hash(vec3 p)  // replace this by something better\n{\n    p  = fract( p*0.3183099+.1 );\n\tp *= 17.0;\n    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\n}\n\n//  Noise - value - 3D by iq (https://www.shadertoy.com/view/4sfGzS)\nfloat noise(in vec3 x)\n{\n    vec3 i = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    return mix(mix(mix( hash(i+vec3(0,0,0)), \n                        hash(i+vec3(1,0,0)),f.x),\n                   mix( hash(i+vec3(0,1,0)), \n                        hash(i+vec3(1,1,0)),f.x),f.y),\n               mix(mix( hash(i+vec3(0,0,1)), \n                        hash(i+vec3(1,0,1)),f.x),\n                   mix( hash(i+vec3(0,1,1)), \n                        hash(i+vec3(1,1,1)),f.x),f.y),f.z);\n}\n\n#define pi 3.1415926\n#define tau (2.0 * pi)\n\n#define N 5.0\n\nfloat STEP(float x, float y)\n{\n    float o = 1.0 / iResolution.y;\n    return smoothstep(x - o, x + o, y);\n}\n\nfloat water(in vec2 v)\n{\n    float r = 1.5 / N;\n    float s = 1.0;\n\n    for(float i = 0.0; i < N; i++)\n    {\n        vec2 c = vec2(iResolution.x / iResolution.y * (i + 0.5) / N, 0.5);\n        float phase = tau * noise(vec3(i, 0.0, 0.0));\n        float amp = 1.0;\n        vec2 o = vec2(cos(iTime + phase), sin(iTime + phase)) / N;\n        c += 0.1 * o;\n\n        s = min(s, STEP(r, length(v - c)));\n        s = min(s, max(STEP(r, abs(v.x - c.x)), STEP(v.y, c.y)));\n    }\n    \n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 v = fragCoord/iResolution.y;\n    vec2 v1 = (fragCoord + vec2(0.0, 2.0))/iResolution.y;\n\n    float s = water(v);\n    float s1 = water(v1);\n    float l = s - s1;\n\n    //fragColor = vec4(l);\n    //fragColor = vec4(s);\n    //vec4 sky = mix(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 1.0, 1.0), v.y);\n    //vec4 sky = mix(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.5, 1.0), v.y);\n    vec4 sky = mix(vec4(1.0, 1.0, 0.5, 1.0), vec4(1.0, 0.25, 0.0, 1.0), v.y);\n    float sun = STEP(length(v - vec2(0.5, 0.3)), 0.05);\n    sky += sun; //  * vec4(1.0, 0.8, 0.5, 1.0);\n    vec4 water = mix(vec4(0.0, 0.0, 0.5, 1.0), vec4(0.5, 1.0, 1.0, 1.0), 2.0 * v.y);\n    fragColor = mix(sky, water, s) + l * 0.5;\n}\n","name":"Image","description":"","type":"image"}]}