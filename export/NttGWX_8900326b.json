{"ver":"0.1","info":{"id":"NttGWX","date":"1646081485","viewed":50,"name":"Fork Hipnosapo gchipunov 565","username":"gchipunov","description":"Simple inwards interactive bifocal circular scrolling","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["interactive","uv","psychedelic"],"hasliked":0,"parentid":"slcGWN","parentname":"Hipnosapo"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-.5f;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    //Normalized mouse position\n    vec2 mousePos = iMouse.xy / iResolution.xy -.5f;\n    mousePos.x*=iResolution.x/iResolution.y;\n    \n    //Set UV center to MousePos and mul by centered UVs\n    uv-=mousePos;\n    uv*=uv0; \n    \n    \n    // Time varying pixel color    \n    float r= abs(sin(length(uv)*20.f+sin(exp(iTime))));\n    float g= abs(cos(length(uv)*21.f+(sin(exp(iTime)))*1.15f));\n    float b= (1.f-r)*exp(cos(iTime*.6f));\n    \n   \n    \n    // Output to screen\n    fragColor = vec4(inversesqrt(r),g,b,1.f);\n}","name":"Image","description":"","type":"image"}]}