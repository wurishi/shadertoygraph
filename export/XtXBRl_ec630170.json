{"ver":"0.1","info":{"id":"XtXBRl","date":"1512801432","viewed":371,"name":"Twinkles","username":"TechEpic","description":"Playing around with some random functions.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["random","twinkle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Higher values will decrease the blockiness but will also decrease framerate and add some strange fog with very high values\n#define SCANRANGE 2.\n\nvec2 rand(vec2 p) {\n    vec3 p3;\n    for(int i = 0; i < 4; i++) {\n\t\tp3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    \tp3 += dot(p3, p3.yzx+19.19);\n    }\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat randTwinkle(vec3 p3) {\n\tfor(int i = 0; i < 4; i++) {\n\t\tp3  = fract(p3 * vec3(.1031, .1030, .0973));\n    \tp3 += dot(p3, p3.yzx + 19.19);\n    }\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat randTwinkleOffset(vec2 p) {\n    vec3 p3;\n    for(int i = 0; i < 4; i++) {\n\t\tp3  = fract(vec3(p.xyx) * .1031);\n    \tp3 += dot(p3, p3.yzx + 19.19);\n    }\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat lerp(float n1, float n2, float x) {\n\treturn (3.0*x*x-2.0*x*x*x)*(n2-n1)+n1;\n}\n\nfloat twinkle(vec3 pos) {\n    float offset = randTwinkleOffset(floor(pos.xy));\n    float time = fract(pos.z+offset);\n    pos.z = floor(pos.z+offset);\n    return lerp(randTwinkle(pos), randTwinkle(vec3(pos.x, pos.y, pos.z+1.)), time);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    uv *= 30.;\n    vec2 loop;\n    float col = 0.;\n    for(loop.x = -SCANRANGE; loop.x <= SCANRANGE; loop.x++) {\n        for(loop.y = -SCANRANGE; loop.y <= SCANRANGE; loop.y++) {\n       \t\tvec2 pos = rand(floor(uv+loop));\n            float dist = length(fract(uv)-pos-loop);\n            float change = 0.00015/dist*twinkle(vec3(floor(uv+loop), iTime))*50.;\n            if(change > 0.001) {\n    \t\t\tcol += change;\n            }\n        }\n    }\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}