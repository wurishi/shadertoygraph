{"ver":"0.1","info":{"id":"csGyRD","date":"1695827245","viewed":29,"name":"Wavy Gradient Boundry","username":"drichman","description":"Two gradient layers interacting in a wave pattern","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Initialize fragment coordinates and color\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n\n    // Apply rotation with Noise\n    float degree = texture(iChannel0, vec2(iTime * 0.1, uv.x * uv.y)).r * 2.0 * 3.14159; // Use texture as noise source\n\n    // Rotate the coordinates\n    uv -= 0.5;\n    uv.y *= iResolution.y / iResolution.x;\n    uv *= mat2(cos(degree), -sin(degree), sin(degree), cos(degree));\n    uv.y /= iResolution.y / iResolution.x;\n    uv += 0.5;\n\n    // Apply Wave Warp\n    float frequency = 5.0;\n    float amplitude = 0.03;\n    float speed = iTime * 2.0;\n    uv.x += sin(uv.y * frequency + speed) * amplitude;\n    uv.y += sin(uv.x * frequency * 1.5 + speed) * (amplitude * 0.5);\n\n    // Define color layers\n    vec3 colorYellow = vec3(0.957, 0.804, 0.623);\n    vec3 colorDeepBlue = vec3(0.192, 0.384, 0.933);\n    vec3 layer1 = mix(colorYellow, colorDeepBlue, smoothstep(-0.3, 0.2, (uv * mat2(cos(-5.0), -sin(-5.0), sin(-5.0), cos(-5.0))).x));\n\n    vec3 colorRed = vec3(0.910, 0.510, 0.8);\n    vec3 colorBlue = vec3(0.350, 0.71, 0.953);\n    vec3 layer2 = mix(colorRed, colorBlue, smoothstep(-0.3, 0.2, (uv * mat2(cos(-5.0), -sin(-5.0), sin(-5.0), cos(-5.0))).x));\n\n    // Blend the color layers\n    vec3 finalComp = mix(layer1, layer2, smoothstep(0.5, -0.3, uv.y));\n\n    // Output to screen\n    fragColor = vec4(finalComp, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}