{"ver":"0.1","info":{"id":"4tyfDW","date":"1542478774","viewed":85,"name":"Slowfield","username":"Eimantas25","description":"Cos and tangent and shet","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tangent"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Line(float axis, float start, float end, float blur)\n{\n    float Side1 = smoothstep(start - blur, start + blur, axis);\n    float Side2 = smoothstep(end + blur, end - blur, axis);\n    return Side1 * Side2;\n}\n\n//Draws 2 lines which intersect and the result is a rectangle boi!\nfloat Rect(vec2 uv, float left, float right, float bot, float top, float blur)\n{\n    float Line1 = Line(uv.x, left, right, blur);\n    float Line2 = Line(uv.y, bot, top, blur);\n        \n    return Line1 * Line2;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    uv -= .5; //centre\n    uv.x *= iResolution.x / iResolution.y; //setting aspect ratio for things to look nice\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float x = uv.x;\n    \n    float a = tan(sin(iTime/200.+x*10.)*30.0)*.01; //\n    float y = uv.y-a;\n    \n    x += y;\n    \n    vec3 Collor = vec3(1.0, 1.0, 1.0);\n    \n    col = col * Rect(vec2(x, y), -.85, .85, -.05, .05, 0.007);\n    \n    fragColor = vec4(col, 0.0);  \n\n\n\n}\n","name":"Image","description":"","type":"image"}]}