{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 c = texture(iChannel0, fragCoord.xy / iResolution.xy).rgb;\n    vec3 nc = normalize(c);\n\tfloat h = distance(nc, vec3(0, 1, 0));\n    \n    if(h < nc.g / h && length(c) >= (c.r + c.b) / 2.0 / c.g)\n        c = texture(iChannel1, fragCoord.xy / iResolution.xy).rgb;\n    ;\n    fragColor = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdSSWc","date":"1416491078","viewed":297,"name":"Green Screen v2","username":"Aaro","description":"This is a second algorithm i designed for green screening. This one sucks too, just like my first one.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["chroma","screen","postprocess","green","bad","key","sux","horrible"],"hasliked":0,"parentid":"","parentname":""}}