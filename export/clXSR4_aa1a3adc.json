{"ver":"0.1","info":{"id":"clXSR4","date":"1675718336","viewed":113,"name":"Funny Green screen attempt","username":"ThatGuyGEWP","description":"A test of trying to get an alpha mask of green screen footage","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy; // UV's of the screen\n    vec2 uv_tex = fragCoord/iChannelResolution[1].xy; // UV's of the video\n    \n    vec4 finalImage = texture(iChannel1, uv);\n    \n    vec3 targetColor = vec3(0.05098039215, 0.63921568627, 0.14901960784); // target color to chroma key\n  \n    float threshold = 0.25; // Threshold of chroma key\n    \n    // if you were to only remove the target color, it would look horrible due to compression artifacts\n    // so we add the threshold to add some wiggle room for error\n    vec3 tarMin = targetColor - threshold;\n    vec3 tarMax = targetColor + threshold;\n    \n    vec3 tarAvg = vec3(0,0,0);\n    // get surrounding pixels in a 3x3 area\n    tarAvg += texture(iChannel1, (fragCoord + vec2(-1,-1))/iResolution.xy).xyz;\n    tarAvg += texture(iChannel1, (fragCoord + vec2(0,-1))/iResolution.xy).xyz;\n    tarAvg += texture(iChannel1, (fragCoord + vec2(1,-1))/iResolution.xy).xyz;\n    \n    tarAvg += texture(iChannel1, (fragCoord + vec2(-1,0))/iResolution.xy).xyz;\n    tarAvg += texture(iChannel1, (fragCoord + vec2(0,0))/iResolution.xy).xyz;\n    tarAvg += texture(iChannel1, (fragCoord + vec2(1,0))/iResolution.xy).xyz;\n    \n    tarAvg += texture(iChannel1, (fragCoord + vec2(-1,1))/iResolution.xy).xyz;\n    tarAvg += texture(iChannel1, (fragCoord + vec2(0,1))/iResolution.xy).xyz;\n    tarAvg += texture(iChannel1, (fragCoord + vec2(1,1))/iResolution.xy).xyz;\n    \n    // average the surrounding pixels color\n    tarAvg = tarAvg/vec3(9,9,9);\n    \n    bool A = all(greaterThan(tarAvg, tarMin ));\n    bool B = all(lessThan   (tarAvg, tarMax ));\n    \n    if(A && B){ // if that average is within the threshold then its most likely the targetColor, make it invisible\n        finalImage.w = 0.0; // makes this pixel transparent\n    }\n    \n    if(finalImage.w < 1.0){ // if current pixel is transparent, then get a pixel from the background image\n        finalImage = texture(iChannel0, uv) + (finalImage * finalImage.w);\n    }\n    \n    // Output result to screen\n    fragColor = finalImage;\n}","name":"Image","description":"","type":"image"}]}