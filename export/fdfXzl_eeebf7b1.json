{"ver":"0.1","info":{"id":"fdfXzl","date":"1619026404","viewed":303,"name":"Pixel Ball Of Energy","username":"BackwardsCap","description":"A ball of energy test vfx for a game I am working on with a friend","likes":9,"published":3,"flags":32,"usePreview":0,"tags":["noise","ancient","fonts","symbols"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Pixelated Portal\n//by Sam Gates (BackwardsCap)\n\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n    float downscale = 5.;\n    f /= downscale;\n    f = floor(f);\n    f *= downscale;\n    c.rgb = S0(f).rgb*0.9;\n    vec2 p = (2.0*f-R)/R.y;\n    \n    float a = (length(p)-1.)/2.;\n    vec3 ba = vec3(0);\n    for(int y=-4;y<=4;y++)\n    for(int x=-4;x<=4;x++)\n    {\n        vec2 o = vec2(x,y);\n        if(length(o)<66.)\n        ba+= S1(f+o).rgb;\n    }\n    \n    ba/=15.0;\n    \n    c.rgb+=ba*a;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define R iResolution.xy\n#define PI 3.1415927\n#define T iTime*.35\n\nvoid mainImage( out vec4 c, in vec2 f )\n{\n\n    vec2 p = ((2.0*f-R)/R.y), u=p;\n    \n    \n    vec2 lp = (p);    \n    vec2 ap = vec2(atan(u.y, u.x), (length(u)));\n    float n = 5.;\n    c.rgb = vec3(0);\n    for(float x=0.; x<n;x++){\n        p=lp;\n        p +=vec2(cos(T-x*20.), sin(T+x*20.))*.4;\n        p*= (6.0/PI)* 5.;\n        c.rgb+=vec3(clamp(1.-(length(p+cos((ap.x+ap.y)*10.))-.1),0.,1.));    \n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define S0(U) texture(iChannel0, (U)/R)\n#define S1(U) texture(iChannel1, (U)/R)\n#define S2(U) texture(iChannel2, (U)/R)\n#define V(U) S0(mod(U,R))\n\n#define decay .99\n\n//wrap the space (useful when sampling)\n#define A(U) T0(mod(U,R))\n\nfloat hash21(vec2 p)\n{\n    return fract(sin(dot(p.xy,vec2(1879.13287,5712.1273)))*12893.1278);\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void F(vec2 p, vec2 offset, vec4 s, inout vec2 v, inout float pr, inout float d, inout float n)\n{\n    vec4 target = S0(p+offset-V(p+offset).xy);\n    offset=normalize(offset);\n    v+=offset*(target.w-s.w);\n    pr+=target.w;\n    d+=dot(offset,target.xy);\n    n++;\n}\n\nvoid mainImage(out vec4 s, vec2 p)\n{\n    s = S0(p-V(p).xy);\n    vec2 v = vec2(0), u = (2.0*p-R)/R.y;\n    float d = 0., pr=0.,n=0.;\n    \n    F(p, vec2(0,1), s, v, pr, d, n);\n    F(p, vec2(0,-1), s, v, pr, d, n);\n    F(p, vec2(1,0), s, v, pr, d, n);\n    F(p, vec2(-1,0), s, v, pr, d, n);\n    \n    d/=n;\n    pr/=n;\n    v/=n;\n    \n    s.w = pr-d;\n\ts.xy -= v;   \n    s.z = d;\n    \n    s.xy*=decay;\n    \n    vec2 ap = vec2(atan(u.x, u.y), length(u));\n    \n    \n    if(S1(p).r>0.)\n    {\n        float m = 1.;\n        if(length(p)>.5)m=-2.;\n        s.xy = normalize(u)*.45 * m;//* vec2(cos(iTime), sin(iTime)) * .1 + (hash21(ap+iTime))- .5;\n    }\n    \n    s.xy = clamp(s.xy, -1., 1.); \n    if (p.x<1.||p.y<1.||R.x-p.x<1.||R.y-p.y<1.) s.xy *= 0.;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void F(vec2 p, vec2 offset, vec4 s, inout vec2 v, inout float pr, inout float d, inout float n)\n{\n    vec4 target = S0(p+offset-V(p+offset).xy);\n    offset=normalize(offset);\n    v+=offset*(target.w-s.w);\n    pr+=target.w;\n    d+=dot(offset,target.xy);\n    n++;\n}\n\nvoid mainImage(out vec4 s, vec2 p)\n{\n    s = S0(p-V(p).xy);\n    vec2 v = vec2(0);\n    float d = 0., pr=0.,n=0.;\n    \n    F(p, vec2(0,1), s, v, pr, d, n);\n    F(p, vec2(0,-1), s, v, pr, d, n);\n    F(p, vec2(1,0), s, v, pr, d, n);\n    F(p, vec2(-1,0), s, v, pr, d, n);\n    \n    d/=n;\n    pr/=n;\n    v/=n;\n    \n    s.w = pr-d;\n\ts.xy -= v;   \n    s.z = d;\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage(out vec4 state, vec2 f)\n{\n    for(int i=0;i<2;i++)\n    f -= S1(f).xy;\n \n    state = S0(f);\n    \n    state*=decay;\n    float t = iTime/5.0;\n    \n    if(S2(f).r>0.1)\n        state.rgb += vec3((cos(iTime/3.0)+1.0)/2., (1.1+sin(iTime/5.0))/2.0, cos(sin(iTime)))*.1;\n}","name":"Buffer D","description":"","type":"buffer"}]}