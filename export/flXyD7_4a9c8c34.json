{"ver":"0.1","info":{"id":"flXyD7","date":"1648100809","viewed":111,"name":"sunflower wnu","username":"wnu","description":"sunflower","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sunflower"],"hasliked":0,"parentid":"NlfyDN","parentname":"plasma ball wnu"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nfloat getAngle(vec2 v1)\n{\n    //return atan(v1.x,v1.y) -atan(v2.x,v2.y);\n    return mod( atan(v1.x,v1.y) -atan(1.,0.), PI*2.)/PI/2.; //0 ... TWOPI\n    //return mod( atan(v1.x,v1.y) -atan(v2.x,v2.y), TWOPI) - PI; //-pi to +pi \n}\n\nvec3 stepper(vec2 p){\n\n    float a = (getAngle(p)-0.5)*PI*20.;\n    float lenStrands = 4.;\n    float d = length(p)*lenStrands*0.5-lenStrands;\n\n\n    vec2 xy = vec2(p.x,p.y);\n    float x = xy.x;\n    float y = xy.y+3.;\n    \n    x = a;\n    y = d;\n    \n    float center = max(y,-0.5);\n    float c = smoothstep(.5,0.3,length(p));\n    \n    \n    \n    float xF = sin(x/10.) + pow(abs(y-3.),2.) - y;\n\n    xF = 3. + xF*1. ;\n    \n    float yF = y*sin(x*2.+cos(y*1. + x/2. +iTime)/1. );\n    \n    float eps = 0.1;\n\n    //return vec3(smoothstep(xF,xF+eps,yF),xF,yF);\n    return vec3(smoothstep(0.,1.5*fwidth(yF-xF),yF-xF),xF,yF);\n}\n\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n    vec2 i = floor(_st);\n    vec2 f = fract(_st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = (fragCoord-R/2.)/R.y;\n    uv *= 12.;\n    \n    \n    float a = getAngle(uv);\n    float d = length(uv);\n    \n\n\n\n    vec3 vals = stepper(uv);\n    \n    vec3 color = sin(vec3(0.2,0.3,0.9)+vals.x);//*(sin(a*PI*50.)+1.)/2.;\n\n    vec3 col = vec3(vals.x);\n    //col = vec3(a);\n    //col = color*smoothstep(2.,1.9,d);\n\n    \n    col = pow(abs(col),vec3(1./2.2));\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}