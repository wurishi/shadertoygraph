{"ver":"0.1","info":{"id":"dsfXD8","date":"1691393684","viewed":53,"name":"chroma from natron plugins","username":"axiomgraph","description":"chroma","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["chroma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : K_Chroma Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : K_Chroma Matchbox for Autodesk Flame\n\n// Shader written by:   Kyle Obley (kyle.obley@gmail.com) & Ivar Beer\n// Shader adapted from: https://www.shadertoy.com/view/XssGz8\n//\n\n\n// iChannel0: Source, filter = linear\n// BBox: iChannel0\n\n\n\n float chromatic_abb = 1.0; // chromatic abberation : (chromatic abberation), min=0., max=100.\n int num_iter = 32; // iterations : (iterations), min=3., max=200.\n\n float d_amount=2.0; // distorsion amount : (distorsion amount), min=0., max=100.\nint add_distortion=1;\n vec2 center =vec2(0.5,0.5);\n\n\n\nvec2 barrelDistortion(vec2 coord, float amt) {\n\t\n\tvec2 cc = (((gl_FragCoord.xy/iResolution.xy) - center ));\n\tfloat distortion = dot(cc * d_amount * .3, cc);\n\n    if ( add_distortion ==1 )\n\t\treturn coord + cc * distortion * -1. * amt;\n\telse\n\t\treturn coord + cc * amt * -.05;\n}\n\nfloat sat( float t )\n{\n\treturn clamp( t, 0.0, 1.0 );\n}\n\nfloat linterp( float t ) {\n\treturn sat( 1.0 - abs( 2.0*t - 1.0 ) );\n}\n\nfloat remap( float t, float a, float b ) {\n\treturn sat( (t - a) / (b - a) );\n}\n\nvec3 spectrum_offset( float t ) {\n\tvec3 ret;\n\tfloat lo = step(t,0.5);\n\tfloat hi = 1.0-lo;\n\tfloat w = linterp( remap( t, 1.0/6.0, 5.0/6.0 ) );\n\tret = vec3(lo,1.0,hi) * vec3(1.0-w, w, 1.0-w);\n\n\treturn pow( ret, vec3(1.0/2.2) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n\tvec2 uv=fragCoord.xy / iResolution.xy;\n\tvec3 sumcol = vec3(0.0);\n\tvec3 sumw = vec3(0.0);\t\n\tfor ( int i=0; i<num_iter;++i )\n\t{\n\t\tfloat t = float(i) * (1.0 / float(num_iter));\n\t\tvec3 w = spectrum_offset( t );\n\t\tsumw += w;\n\t\tsumcol += w * texture( iChannel0, barrelDistortion(uv, chromatic_abb * t ) ).rgb;\n\t}\n\t\t\n\tfragColor = vec4(sumcol.rgb / sumw, 1.0);\n}","name":"Image","description":"","type":"image"}]}