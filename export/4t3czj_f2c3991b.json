{"ver":"0.1","info":{"id":"4t3czj","date":"1534691932","viewed":646,"name":"Gaussian function","username":"il_presidente","description":"little shader gaussian function","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["gaussianfunction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float filterY(float value, float y){\n\t\tfloat a = -10.;\n\t\tfloat b = -5.;\n\t\tfloat m = 0.1;\n\t\tvalue *= (1. - exp(a*(y - m)))*exp(b*(y - m));\n\t\treturn value;\n}\n\nfloat gauss(float x, float x0, float sx){\n    \n    float arg = x-x0;\n    arg = -1./2.*arg*arg/sx;\n    \n    float a = 1./(pow(2.*3.1415*sx, 0.5));\n    \n    return a*exp(arg);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float scale_uv = iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    float gx = gauss(uv.x*scale_uv, 0.5*scale_uv, 0.01);\n    float gy = gauss(uv.y, 0.5, 0.01);\n    \n    // Output to screen\n    fragColor = vec4( gx*gy );\n}","name":"Image","description":"","type":"image"}]}