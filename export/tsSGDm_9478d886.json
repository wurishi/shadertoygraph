{"ver":"0.1","info":{"id":"tsSGDm","date":"1549017941","viewed":337,"name":"sun limb darkening","username":"martinsh","description":"sun limb darkening; work in progress to find a simpler formula\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sun","sky"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//attempts to simulate Sun`s limb darkening \n//https://en.wikipedia.org/wiki/Limb_darkening\n//https://hesperia.gsfc.nasa.gov/ssw/gen/idl/solar/darklimb_correct.pro\n\n//https://hesperia.gsfc.nasa.gov/ssw/gen/idl/solar/darklimb_u.pro\n//https://hesperia.gsfc.nasa.gov/ssw/gen/idl/solar/darklimb_v.pro\n\n//http://www.physics.hmc.edu/faculty/esin/a101/limbdarkening.pdf\n\nfloat gamma = 2.2;\nfloat scale = 1.1;\n\nvec3 sunColor = vec3(6.0,0.6,0.1); //artistic value\n\nvec2 darklimbUlVl(float wavelength)\n{\n    float ll = wavelength; //wavelength in Angstroms (lambda)\n\n    float au = -8.9829751;\n    float bu = 0.0069093916;\n    float cu = -1.8144591e-6;\n    float du = 2.2540875e-10;\n    float eu = -1.3389747e-14;\n    float fu = 3.0453572e-19;\n\n    float av = 9.2891180;\n    float bv = -0.0062212632;\n    float cv = 1.5788029e-6;\n    float dv = -1.9359644e-10;\n    float ev = 1.1444469e-14;\n    float fv = -2.599494e-19;\n\n    float ul = au+(bu*ll)+(cu*pow(ll,2.0))+(du*pow(ll,3.0))+(eu*pow(ll,4.0))+(fu*pow(ll,5.0));\n    float vl = av+(bv*ll)+(cv*pow(ll,2.0))+(dv*pow(ll,3.0))+(ev*pow(ll,4.0))+(fv*pow(ll,5.0));\n    return vec2(ul,vl);\n}\n\nfloat simplerLimbDarkening(in float cosTheta)\n{\n    //radius\n    float ul = 1.0; //u lambda\n    float limbfilt = 1.0 - ul *(1.0-sqrt(1.0-pow(cosTheta,2.0)));\n    return limbfilt;\n}\n\nfloat simpleLimbDarkening(in float cosTheta)\n{\n\tfloat ul = 0.85; //u lambda\n\tfloat vl = 0.2; //v lambda\n    \n\tfloat sundisk = cosTheta;\n\tfloat limbfilt = 1.0 - ul - vl + ul*cos(asin(sundisk)) + vl*pow(cos(asin(sundisk)),2.0);\n    return limbfilt;\n}\n\nvec3 limbDarkening3(in float cosTheta)\n{\n\tfloat sundisk = cosTheta;\n    vec2 ulvlR = darklimbUlVl(6500.0); //red wavelength in Angstroms\n\tvec2 ulvlG = darklimbUlVl(5300.0); //green wavelength in Angstroms\n    vec2 ulvlB = darklimbUlVl(4300.0); //blue wavelength in Angstroms\n        \n\tfloat limbR = 1.0 - ulvlR.x - ulvlR.y + ulvlR.x*cos(asin(sundisk)) + ulvlR.y*pow(cos(asin(sundisk)),2.0);\n    float limbG = 1.0 - ulvlG.x - ulvlG.y + ulvlG.x*cos(asin(sundisk)) + ulvlG.y*pow(cos(asin(sundisk)),2.0);\n    float limbB = 1.0 - ulvlB.x - ulvlB.y + ulvlB.x*cos(asin(sundisk)) + ulvlB.y*pow(cos(asin(sundisk)),2.0);\n    return vec3(limbR,limbG,limbB);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 aspect = vec2(iResolution.x/iResolution.y,1.0);\n    \n    vec2 dir = -(uv * 2.0 - 1.0)* aspect * scale;\n    \n\tfloat z = sqrt(max(0.0, 1.0 - dir.x * dir.x - dir.y * dir.y));\n\tfloat dist = length(dir);\n\n\tfloat disc = max(0.0, sqrt(max(0.0, z)));        \n    \n\tfloat sky = max(0.0,dot(dir, dir));\n    \n\n    vec3 col = vec3(0.0,0.0,0.0);\n    \n    //col.r = simplerLimbDarkening(sky,0.65);\n    //col.g = simplerLimbDarkening(sky,0.76);\n    //col.b = simplerLimbDarkening(sky,0.88);\n\n    col = vec3(simpleLimbDarkening(sky));\n    //col = vec3(limbDarkening3(sky));\n    \n    col *= sunColor;\n    \n\t//vec3 col = vec3(z)*sunColor;\n    \n    // Output to screen\n    fragColor = vec4(pow(col*1.0,vec3(1.0/2.2)),1.0);\n    //fragColor = vec4(pow(col.rgb,vec3(1.0/gamma)),1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}