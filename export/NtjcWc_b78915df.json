{"ver":"0.1","info":{"id":"NtjcWc","date":"1651544776","viewed":34,"name":"Well Menace","username":"Sent","description":"playing with distance fields","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["distancefield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 vec2ar(float ar, float x, float y) {return vec2(ar*x, y);}\n\nvec2 pol2rect(vec2 p) {return vec2(p.x*cos(p.y), p.x*sin(p.y));}\n\nfloat rect(vec2 st, vec2 bl, vec2 tr) {\n    bl = step(bl,st);       // bottom-left\n\ttr = step(vec2(1.)-tr,1.-st);   // top-right\n\treturn (bl.x * bl.y * tr.x * tr.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float aspect = 1.;iResolution.x/iResolution.y;\n    \n    uv.x *= aspect;\n    \n    float r = .3;\n    float theta = cos(.1*iTime)*2.*3.1415;\n    vec2 p1 = pol2rect(vec2(r, theta)) + vec2ar(aspect, .5, .5);\n    vec2 p2 = vec2ar(aspect, .5, .5); \n    \n    float pct = pow(distance(uv, p1),distance(uv, p2));\n    \n    vec3 c = 1./3.*vec3(0., 0., .5);\n    c += 2./3.*pct*vec3(0., 1., 0.7);\n\n    // Output to screen\n    fragColor = vec4(c, 1.0);\n}","name":"Image","description":"","type":"image"}]}