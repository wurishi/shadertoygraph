{"ver":"0.1","info":{"id":"X3sBzN","date":"1728121701","viewed":35,"name":"Flag of china","username":"letbonsaibe","description":"draw flag of china, and test some wave function","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STAR_COL vec3(252, 238, 033)/255.0\n#define FLAG_COL vec3(244, 000, 002)/255.0\n#define PI 3.141592653\n#define TAU PI*2.\n#define ROT(a) mat2(cos(a),-sin(a),sin(a),cos(a))\n\n\nfloat Star(vec2 uv, vec2 pos, float angle, float scale) {\n    uv -= pos;\n    uv /=scale;\n    uv *= ROT(radians(angle));\n    uv.x = abs(uv.x);\n    float unit = 2.0 * PI / 5.0;\n    float d1 = dot(uv, vec2(sin(unit * 1.0), cos(unit * 1.0)));\n    float d2 = dot(uv, vec2(sin(unit * 3.0), cos(unit * 3.0)));\n    float d3 = dot(uv, vec2(sin(unit * 0.0), cos(unit * 0.0)));\n    float d4 = dot(uv, vec2(sin(unit * 2.0), cos(unit * 2.0)));\n    float d  = min(max(d1, d2), max(d3, d4));\n    // d = length(uv);\n    float w  = fwidth(d);\n    return smoothstep(w, -w, d-0.2);\n}\n\n// uv from -1, 1\nvec3 Flag(vec2 uv) {\n\n    float star1 = Star(uv, vec2(-0.7, 0.3), 0., 0.3);\n    float star2 = Star(uv, vec2(-0.4, 0.5), 30., 0.1);\n    float star3 = Star(uv, vec2(-0.25, 0.4), 15., 0.1);\n    float star4 = Star(uv, vec2(-0.25, 0.2), 0., 0.1);\n    float star5 = Star(uv, vec2(-0.4, 0.1), 30., 0.1);\n    \n    float d = star1+star2+star3+star4+star5;\n    vec3 col = mix(FLAG_COL, STAR_COL, clamp(d, 0., 1.));\n        \n    col *= smoothstep(.01, .0, abs(uv.y) - 2.0 / 3.0);\n    col *= smoothstep(.01, .0, abs(uv.x) - 1.);\n    \n\n    return col;\n\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.0 * fragCoord.xy -  iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.0);\n   \n    float t = sin(uv.x * 3. + iTime * 2.0 + uv.y * 2.0);\n    uv.y +=  t * 0.05;\n    \n    float w = sin((uv.x + uv.y - iTime * .75 + sin(1.5 * uv.x + 4.5 * uv.y) * PI * .3)\n                  * PI * .6); \n    vec3 flag = Flag(uv * 1.);\n    float inFlag = flag.x + flag.y + flag.z;\n    col = flag;\n    col += w * .15 * sign(inFlag);\n \n \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}