{"ver":"0.1","info":{"id":"Wd2BRG","date":"1629127698","viewed":141,"name":"oil warping","username":"foil","description":"pulse and warp actually","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["pulse","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat pulse(float time) {\n\tfloat x = mod(time*0.3, 1.0); // x will gradually increase from 0 to 1 in cycle\n    float y = smoothstep(0.0,0.13,x) - x; // pulsing function\n    \n    return 3.0+(-3.0*y); // adjustements\n}\n\nfloat hash(vec2 co){\n    return sin( 2355.44 * fract(sin(dot(co.xy ,vec2(12.9898,78.233)))  * 43758.5453));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    \n    float strength = 0.35;\n    float t = iTime/35.0;\n    \n    vec3 col = vec3(0);\n    vec2 fC = fragCoord*1.5;\n\n    #ifdef AA\n    for(int i = -1; i <= 1; i++) {\n        for(int j = -1; j <= 1; j++) {\n\n            fC = fragCoord+vec2(i,j)/2.0;\n            \n            #endif\n            \n            //Normalized pixel coordinates (from 0 to 1)\n            vec2 pos = fC/iResolution.xy;\n\n            pos.y /= iResolution.x/iResolution.y;\n            pos = 4.0*(vec2(0.5) - pos);\n\n            for(float k = 1.0; k < 6.0; k+=1.0){ \n                pos.x += strength * sin(2.0*t+k*1.5 * pos.y)+t*0.5;\n                pos.y += strength * cos(2.0*t+k*1.5 * pos.x);\n            }\n\n            //Time varying pixel colour\n            col += clamp(0.25 + 0.5*cos(t*0.5+pos.xyx*3.).xxx, 0.1, 0.99);\n            \n            #ifdef AA\n        }\n    }\n\n    col /= 9.0;\n    #endif\n    \n    //Fragment colour\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}