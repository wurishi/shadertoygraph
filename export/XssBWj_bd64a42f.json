{"ver":"0.1","info":{"id":"XssBWj","date":"1498140189","viewed":223,"name":"multiplicative noise","username":"FabriceNeyret2","description":"Right: additive white noise (uniform & stationary,then  interpolated from image)\nLeft:   multiplicative  white noise \nTop:       noise in [0,1]\nBottom: noise in [-1,1]","likes":2,"published":3,"flags":0,"usePreview":1,"tags":["noise","infinitezoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define spow(x,p) ( sign(x) * pow(abs(x), p) )\n#define rnd(i) fract(4356.7*sin(4356.7*(i)))\n\nfloat smoy = 3., sdev = 1., // sdev = big for no windowing\n      step = 1.;            // 1 for classical power of 2\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    vec2 R = iResolution.xy;\n\tU = ( 2.*U - R ) / R.y;\n \n    bool centered = U.y < 0.,\n         additive = U.x > 0.;\n    O -= O;\n    \n    float v, vtot = additive ? 0. : 1., w, wtot = 0., s, t = .2*iTime;\n    \n    for (float i=-1.; i<6.; i+=step) {\n        s = i + fract(t);\n        v = texture( iChannel0, U/exp2(s)+ 0.*rnd(i-mod(floor(t),5.)) ).x;  if (centered) v = 2.*v-1.;\n        s = (s-3.)/sdev;\n        w = exp(-.5*s*s);\n        if ( additive ) vtot += v*w, wtot += w;\n        else            vtot *= spow(v,w), wtot += w;\n    }\n    \n    if ( additive ) O += vtot / wtot;\n    else            O += sign(vtot) * spow(vtot, 1./wtot );\n\n    \n    //O = .5 + (O-.5)*2.;\n\n    if (centered) O = .5+.5*O;\n    U = abs(U)*R.y; if (min(U.x,U.y)<2.) O.x=1.;\n}","name":"Image","description":"","type":"image"}]}