{"ver":"0.1","info":{"id":"mdlczM","date":"1686689810","viewed":75,"name":"minacoding","username":"rruido","description":"hey","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["minacoding"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat circle(in vec2 st, in vec2 size){\n    float width = 1.5*32./iResolution.y/length(size);\n\treturn (1.-smoothstep(0.,width,abs(length(st/size)-.5)));\n}\n\nfloat _rect(in vec2 st, in vec2 size){\n    float width = 2./iResolution.y/length(size);\n    vec2 uv = smoothstep(-width-size, width-size,st)*smoothstep(-width-size,width-size,-st);\n\treturn uv.x*uv.y;\n}\n\nfloat rect(in vec2 st, in vec2 size){\n    vec2 border = vec2(0.03);\n    vec2 half_size = size/2.;\n\tfloat outer = _rect(st, size+max(border,0.));\n\tfloat inner = _rect(st, size+min(border,0.));\n\treturn max(outer-inner, 0.);\n}\n\n\nfloat sc(in vec2 st, in float min, in float max) {\n    return min+random(st)*(max-min);\n}\n\nfloat randt(in vec2 st, in float mia, in float maa, in float mif, in float maf) {\n  float rAmplitude = sc(st*vec2(0.348), mia, maa);\n  float rFreq = sc(st*vec2(0.2157), mif, maf);\n  \n  return rAmplitude*(sin(random(st*0.9284)+rFreq*3.14*iTime)+1.);\n    \n}\n\nfloat eye(in vec2 pos, in float eyes, in float eyesar){\n    return circle(pos, vec2(eyes, eyes*eyesar));\n}\nfloat nose(in vec2 pos, in vec2 idx){\n    float s = sc(idx*.81, 0.05, 0.2);\n    s += s*randt(idx*.82,0.01, 0.5, 0.6, 1.6);\n    float ar = sc(idx*.83, 0.1, 1.1);\n    ar += ar*randt(idx*.84, 0.01, 0.2, 0.6, 1.5);\n    return rect(pos, vec2(s*ar, s));\n}\nfloat mouth(in vec2 pos, in vec2 idx){\n    float s = sc(idx*.91, 0.05, 0.2);\n    s += s*randt(idx*.92,0.01, 0.5, 0.6, 1.6);\n    float ar = sc(idx*.93, 0.1, 1.1);\n    ar += ar*randt(idx*.94,0.01, 0.2, 0.6, 1.5);\n    return rect(pos, vec2(s, s*ar));\n}\n\nfloat face(in vec2 st, in vec2 idx){\n    float heads = sc(idx*.11, 0.6, 1.1);\n    heads += heads*randt(idx*.12,0.01, 0.5, 0.6, 1.6);\n    float headar = sc(idx*.13, 0.7, 1.3);\n    headar += headar*randt(idx*.14,0.01, 0.2, 0.6, 1.5);\n    float shape = circle(st, vec2(heads, heads*headar));\n    float eyes = sc(idx*.15, 0.1, 0.2);\n    eyes += eyes*randt(idx*0.16,0.01, 0.5, 0.6, 1.6);\n    float eyear = sc(idx*.17, 0.7, 1.3);\n    eyear += eyear*randt(idx*.18,0.01, 0.2, 0.6, 1.5);\n    shape += eye((st-vec2(0.3,.08)), eyes, eyear);\n    shape += eye((st-vec2(-0.3,.08)), eyes, eyear);\n    shape += nose(st-vec2(0.,-.08), idx);\n    shape += mouth(st-vec2(0.,-.25), idx);\n    \n    return shape;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = 0.25 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec2 st = uv;\n    \n    \n    vec3 color = vec3(0.195); \n    float reps = 16.;\n    \n    for (float i = -1.; i <= 1.; i++) {\n        for (float j = -1.; j <= 1.;j++) {\n            vec2 stdif = vec2(i/reps, j/reps);\n            vec2 stn = st-stdif;\n            vec2 pos = floor(stn*reps);\n            stn = stn*vec2(reps);\n            stn = fract(stn)-.5;\n            mat3x2 hash = mat3x2(1.);\n            color = mix(color, vec3(random(pos*.13),random(pos*.14),random(pos*.15)), face(1.5*(stn+stdif*reps), pos+.001));\n        }\n    }\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}