{"ver":"0.1","info":{"id":"WsVGWV","date":"1570988208","viewed":1929,"name":"Cheap mipmap blur","username":"michael0884","description":"just experimenting ","likes":29,"published":3,"flags":0,"usePreview":1,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\nfloat weight(float t, float log2radius, float gamma)\n{\n    return exp(-gamma*pow(log2radius-t,2.));\n}\n\nvec4 sample_blured(vec2 uv, float radius, float gamma)\n{\n    vec4 pix = vec4(0.);\n    float norm = 0.;\n    //weighted integration over mipmap levels\n    for(float i = 0.; i < 10.; i += 0.5)\n    {\n        float k = weight(i, log2(radius), gamma);\n        pix += k*texture(iChannel0, uv, i); \n        norm += k;\n    }\n    //nomalize, and a bit of brigtness hacking \n    return pix*pow(norm,-0.95);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 pos )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = pos/iResolution.xy;\n\n    float blur_radius =1.+ 50.*(0.5*sin(1.8*iTime+0.000*pos.x) + 0.5);\n    // Output to screen\n    fragColor = sample_blured(uv, blur_radius, 0.5);\n}","name":"Image","description":"","type":"image"}]}