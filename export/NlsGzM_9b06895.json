{"ver":"0.1","info":{"id":"NlsGzM","date":"1621844694","viewed":43,"name":"pattern 01","username":"gunzes","description":"a pattern ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*float line(vec2 pos,vec2 point1,vec2 point2)\n{   \n \tfloat k = (point1.y - point2.y)/(point1.x - point2.x);    \n \tfloat b = point1.y - k * point1.x;    \n \tfloat d = abs(k * pos.x - pos.y + b) / sqrt(k * k + 1.0);    \n \tfloat t = 1.0-smoothstep(0.005/2.0, 0.005/2.0 + 0.00, d/10.);    \t\t\t  \t\t\n \treturn t;\n}*/\nfloat Time (float phase,float speed,float direction, float min, float max)\n{\n    return (mix(min,max,(sin((direction*iTime+phase)*speed)+1.)/2.));\n}\nvec3 square( vec2 SquareUV,float size, vec3 col,float direction)\n{\n    //SquareUV.x -= (sin(iTime)+1.)/2.;\n    if ((abs(SquareUV.x)<=size) && (abs(SquareUV.y)<=size)){\n       \n        return col;\n    }\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.x)-.5;\n    vec2 gv = (fragCoord/iResolution.y);\n    uv.y += .033;\n    float rotateSpeed = 2.;\n    float size = .05;\n    uv *= 5.;\n    uv += vec2(3.,-0.8);\n    //vec3 col = (vec3(uv.x));\n    vec3 col = vec3(0.);\n\n    float offsetX = - .8;\n    float mmax = .2;\n    float phase = 0.;\n\n//draw the dna\nfor (int y=0 ; y<=30 ; y++){\n\nfloat offsetY = 0.;\nuv.x += offsetX;\n\n    for (int i=0 ; i<=60 ; i++)\n    {\n\n\n    offsetY += .3;\n    //offsetY += Time(0.,.5,-1.,.1,.5);\n\n\n            \n\n            \n     phase = float(i)/5.;\n     vec2 p1 = uv + vec2(Time(phase,rotateSpeed,1.,-mmax,mmax),offsetY);\n     vec2 p2 = uv + vec2(Time(phase,rotateSpeed,1.,mmax,-mmax),offsetY);\n\n\n     //col += line(vec2(0.,0.),p1,p2);\n\n     col += square(p1,size*Time(phase+1.,2.,1.,.3,2.),vec3(1.),1.);\n//col -= square(p1,size*Time(phase+1.,2.,1.,0.,1.),vec3(.2),1.);\n     col += square(p2,size*Time(phase+1.,2.,1.,2.,.3),vec3(1.),1.);\n//col -= square(p2,size*Time(phase+1.,2.,1.,0.,1.),vec3(.2),1.);\n\n      \n\n         \n    }\n}    \n    col += vec3(.37,.5,.7);\n    // Output to screen\n    fragColor = vec4(col+vec3((1.-gv.y)/2.,0.,0.),1.0);\n}","name":"Image","description":"","type":"image"}]}