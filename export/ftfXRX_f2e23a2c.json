{"ver":"0.1","info":{"id":"ftfXRX","date":"1626136720","viewed":201,"name":"Curvature blindness illusion_","username":"rubix","description":"based on https://twitter.com/emollick/status/1414436947733499905 (Takahashi Curvature Blindness Illusion, iPerception 2017)","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["opticalillusion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// rubix 2021-07-13\n// based on https://twitter.com/emollick/status/1414436947733499905 (Takahashi's iPerception, 2017)\n\n#define TAU 6.28318530718\n\nfloat background(vec2 p) {\n    float b = p.x-p.y;\n    \n    //if (b < -0.1) return 1.;\n    //if (b < 0.6) return 0.5;\n    //return 0.;\n    \n    float t = fwidth(b);\n    return 0.5 * smoothstep(0.6+t, 0.6-t, b)\n         + 0.5 * smoothstep(-0.1+t, -0.1-t, b);\n}\n\nfloat color(vec2 p) {\n    float d = 250.*p.y + 1.*sin(100.*p.x);\n    int z = int(d+1.) % 24;\n    \n    //if (z == 0 || z == 3)\n    //    return sin(100.*p.x) < 0. ? 0.3 : 0.7;\n    //if (z == 12 || z == 15)\n    //    return sin(100.*p.x - TAU/4.) < 0. ? 0.3 : 0.7;\n    //return background(p);\n    \n    float t = fwidth(p.x);\n    float x = fwidth(2.*d);\n    float wave = smoothstep((5.-x)/6., (5.+x)/6., abs(fract(d/3.)*3.-2.));\n    float c = background(p);\n    if (z < 6)\n        c = mix(c, mix(0.3, 0.7, smoothstep(-t, t, sin(100.*p.x))), wave);\n    if (z > 11 && z < 18)\n        c = mix(c, mix(0.3, 0.7, smoothstep(-t, t, sin(100.*p.x - TAU/4.))), wave);;\n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.x;\n    fragColor = vec4(vec3(color(uv)), 1.);\n}\n","name":"Image","description":"","type":"image"}]}