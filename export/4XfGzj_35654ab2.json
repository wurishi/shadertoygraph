{"ver":"0.1","info":{"id":"4XfGzj","date":"1707659794","viewed":61,"name":"Normalsâ€‹","username":"Borusse29","description":"normal calculation for raymarching\nusing n = -normalize(cross(dFdx(p), dFdy(p)))","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["3d","normal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define DIST_TO_CAMERA 1.5\n#define _tau 6.2831853071\n\n//dist functions and smooth min: https://iquilezles.org/articles/distfunctions/\nfloat sdHexPrism( vec3 p, vec2 h )\n{\n    const vec3 k = vec3(-0.8660254, 0.5, 0.57735);\n    p = abs(p);\n    p.xy -= 2.0*min(dot(k.xy, p.xy), 0.0)*k.xy;\n    vec2 d = vec2(\n        length(p.xy-vec2(clamp(p.x,-k.z*h.x,k.z*h.x), h.x))*sign(p.y-h.x),\n        p.z-h.y );\n    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nfloat sdLink( vec3 p, float le, float r1, float r2 )\n{\n    vec3 q = vec3( p.x, max(abs(p.y)-le,0.0), p.z );\n    return length(vec2(length(q.xy)-r1,q.z)) - r2;\n}\n\n\nfloat opSmoothUnion( float d1, float d2, float k )\n{\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h);\n}\n\nfloat sceneSdf(vec3 p) {\n    float sd1 = sdHexPrism(p.xzy, vec2(.25, .2));\n    float sd2 = sdLink(p.yxz, .1, .5, .1);\n    return opSmoothUnion(sd1, sd2, .33);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(2.*fragCoord.x/iResolution.x-1., (2.*fragCoord.y-iResolution.y)/iResolution.x);\n       \n    vec4 angles = texture(iChannel0, vec2(0.));\n    float a = (angles.x+.625)*_tau;\n    float b = (angles.y+.125)*_tau;\n    \n    vec3 ro = DIST_TO_CAMERA * vec3(-cos(a)*cos(b),-sin(a)*cos(b),sin(b));\n    mat3 cm = mat3(cos(-b)*cos(a),cos(-b)*sin(a),sin(-b),-sin(a),cos(a),0.,-sin(-b)*cos(a),-sin(-b)*sin(a),cos(-b));\n    vec3 rd = cm * normalize(vec3(1., uv)); \n    \n    bool didHit = false;\n    \n    for (int i = 0; i < 250; i++) {\n        float sd = sceneSdf(ro);\n        \n        if (sd <= 0.00005) {\n            didHit = true;\n            break;\n        }\n        \n        ro += sd * rd;\n        \n        if (length(ro) > DIST_TO_CAMERA)\n            break;\n    }\n    \n    if (!didHit) {\n        fragColor = texture(iChannel1, rd.xzy);\n        fragColor = vec4(0.);\n        return;\n    }\n    \n    fragColor = vec4(-normalize(cross(dFdx(ro), dFdy(ro))), 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (fragCoord != vec2(0.5)) return;\n    vec4 last = texture(iChannel0, vec2(0.));\n\n    vec2 lastMouse = iMouse.z <= 0. || iMouse.xy == iMouse.zw ? iMouse.xy : last.zw;\n\n    float a = last.x + (iMouse.x-lastMouse.x)/iResolution.x;\n    float b = last.y + (lastMouse.y-iMouse.y)/iResolution.y;\n    \n    fragColor = vec4(a, b, iMouse.xy);\n}","name":"Buffer A","description":"","type":"buffer"}]}