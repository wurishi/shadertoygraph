{"ver":"0.1","info":{"id":"ws3yW2","date":"1601738885","viewed":179,"name":"A Wonderful Rainbow","username":"Eplor","description":"A Wonderful Rainbow","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","rainbow","gradients"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( vec2 p ) {\n\tfloat h = dot(p,vec2(127.1,311.7));\t\n    return fract(sin(h)*43758.5453123);\n}\n\nfloat noise( in vec2 p ) {\n    vec2 i = floor( p );\n    vec2 f = fract( p );\t\n\tvec2 u = f*f*(3.0-2.0*f);\n    return -1.0+2.0*mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat noiseOctae(vec2 uv, float choppy) {\n    uv += noise(uv);        \n    vec2 wv = 1.0-abs(sin(uv));\n    vec2 swv = abs(cos(uv));    \n    wv = mix(wv,swv,wv);\n    return pow(1.0-pow(wv.x * wv.y,0.9),choppy);\n}\n\nvec3 calcRainbow(vec2 uv, float offset) {\n    return 0.5 + 0.5*cos(offset+uv.xyx+vec3(0,2,4));\n}\n\nvec3 calcMap(vec2 uv) {\n    vec3 color = vec3(0.0);\n    const float count = 16.0;\n    for(float i = 1.0; i <= count; i += 1.0) {\n    \tvec3 rainbow = calcRainbow(uv, iTime + i) * noiseOctae(uv * 0.5 + i, 3.5);\n        color += rainbow;\n    }\n    return color * .25;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = calcMap(uv);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}