{"ver":"0.1","info":{"id":"l3y3Rc","date":"1717989391","viewed":142,"name":"Ritmo de la noche","username":"jorge2017a2","description":"Ritmo de la noche","likes":14,"published":1,"flags":8,"usePreview":0,"tags":["2d","sound","dbz","poly","vegeta","ritmodelanoche","therhythmofthenight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//Ritmo de la noche\n//The Rhythm of the Night - Corona - Piano Tutorial\n//-9/jun/2024\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define S3(d,b) smoothstep(0.125/antialiasing(0.5),0. , d - (b) )\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n#define POLY(N) (in vec2 p, in vec2[N] v) {const int n=v.length();float d=dot(p-v[0],p-v[0]);float s=1.;for(int i=0,j=n-1;i<n;j=i,i++){vec2 e=v[j]-v[i];vec2 w=p-v[i];vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);d=min(d,dot(b,b));bvec3 cond=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);if(all(cond)||all(not(cond))) s=-s;}return s*sqrt(d);}\n\n\n\nfloat sdPoly22_1 POLY(22)\nvec2  pt22_1[22]=vec2[](\nvec2(0.8493,1.0000),vec2(0.8037,0.8767),vec2(0.7717,0.7626),vec2(0.8242,0.7192),vec2(0.8288,0.7055),\nvec2(0.8014,0.6279),vec2(0.7078,0.5183),vec2(0.7215,0.5046),vec2(0.8242,0.4840),vec2(0.8265,0.4589),\nvec2(0.8676,0.4452),vec2(0.8744,0.4543),vec2(0.9132,0.4064),vec2(0.9132,0.3607),vec2(0.9635,0.3151),\nvec2(1.0320,0.1073),vec2(1.1027,0.0708),vec2(1.3288,0.1644),vec2(1.3516,0.1758),vec2(1.4429,0.3014),\nvec2(1.4406,0.9954),vec2(0.8493,1.0000)  );\n\n\nfloat sdPoly5_1 POLY(5)\nvec2  pt5_1[5]=vec2[](\nvec2(0.8858,0.7694),vec2(1.0685,0.9635),vec2(1.0799,0.8493),vec2(0.9315,0.7352),vec2(0.8858,0.7694)  );\n\nfloat sdPoly9_1 POLY(9)\nvec2  pt9_1[9]=vec2[](\nvec2(0.8288,0.7603),vec2(0.8676,0.7785),vec2(1.0000,1.0000),vec2(1.0708,0.9635),vec2(1.0160,0.9178),\nvec2(0.9772,0.8630),vec2(0.9178,0.7854),vec2(0.8562,0.7352),vec2(0.8288,0.7603)  );\n\nfloat sdPoly8_1 POLY(8)\nvec2  pt8_1[8]=vec2[](\nvec2(0.8721,0.4498),vec2(0.8950,0.4932),vec2(0.9384,0.5274),vec2(0.9840,0.5228),vec2(1.0183,0.4658),\nvec2(1.0137,0.4475),vec2(0.9155,0.4064),vec2(0.8721,0.4498)  );\n\n\nfloat sdPoly5_2 POLY(5)\nvec2  pt5_2[5]=vec2[](\nvec2(0.7237,0.5023),vec2(0.8539,0.5457),vec2(0.8288,0.4840),vec2(0.7329,0.4954),vec2(0.7237,0.5023)  );\n\n\nfloat sdPoly7_1 POLY(7)\nvec2  pt7_1[7]=vec2[](\nvec2(1.2626,0.2991),vec2(1.2945,0.0959),vec2(1.2717,0.0365),vec2(1.2785,0.0137),vec2(1.4406,0.0114),\nvec2(1.4384,0.3539),vec2(1.2626,0.2991)  );\n\n\nfloat Sdf_I(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat Sdf_U(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat Sdf_D(float distA, float distB)\n\t{ return max(distA, -distB);}\n\n\n\nvec3 DrawFigBordeR(vec3 pColObj, vec3 colOut, float distObj, float r )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-r,0.0));\n  return colOut;\n}\n\n\nvec3 D2(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S2( distObj,0.0)); return colOut; }\n\nvec3 DFB(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S3( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0),S3(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\nfloat divf(float a, float b)\n{\n    //evita crash por 1/0.0 =Infinito=error, en compilar\n    if(b==0.0)\n    {b=0.00001;}\n    return a/b;\n}\n\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{  vec2 pa = p-a, ba = b-a;\n    float h = clamp( divf( dot(pa,ba),dot(ba,ba)), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\n\nvec3 cabeza_vegeta(vec2 p, vec3 col)\n{    vec3 c1=vec3(0.969,0.937,0.894);\n    vec3 c2=vec3(0.886,0.765,0.643);\n    float sd22_1 = sdPoly22_1(p, pt22_1);\n    col=DFB(c2,col,sd22_1 );\n   return col;\n}\n\nvec3 ojo(vec2 p, vec3 col)\n{    vec3 c3=vec3(0.843,0.965,0.973);\n    float sd5_1 = sdPoly5_1(p, pt5_1);\n    col=DFB(c3,col,sd5_1 );\n    \nvec2 A,B;\nfloat dfin;\nfloat  r1 ;\n\nA=vec2(0.89954,0.76484);\nr1=0.02283;\nfloat d1=sdCircle(p-A,r1);\nd1 =Sdf_I( sd5_1,d1);\ncol= DFB(vec3(0.0), col,d1);\n    return col;\n}\n\n\nvec3 ceja(vec2 p, vec3 col)\n{   vec3 c5=vec3(0.0);\n    float sd9_1 = sdPoly9_1(p, pt9_1);\n    col=DFB(c5,col,sd9_1 );\n   return col;\n\n}\n\nvec3 boca(vec2 p, vec3 col)\n{    float sd8_1 = sdPoly8_1(p, pt8_1);\n    vec3 c1=vec3(0.969,0.937,0.94);\n    col=DFB(c1,col,sd8_1 );\n    return col;\n\n}\n\nvec3 nariz(vec2 p, vec3 col)\n{   float sd5_2 = sdPoly5_2(p, pt5_2);\n    vec3 c2=vec3(0.886,0.65,0.643);\n    col=DFB(c2,col,sd5_2 );\n    return col;\n}\n\n\nvec3 cuello(vec2 p, vec3 col)\n{   float sd7_1 = sdPoly7_1(p, pt7_1);\n    vec3 c2=vec3(0.9,0.685,0.6543);\n    col=DFB(c2,col,sd7_1 );\n    return col;\n}\n\nvec3 lineas(vec2 p, vec3 colout)\n{    vec2 A,B, med,pr;\n    float dfin;\n    A=vec2(1.09817,0.47032);\n    B=vec2(1.07306,0.57763);\n    float d1=sdSegment(p,A,B);\n    colout= DFB(vec3(0.0), colout, d1);\n\nA=vec2(1.10502,0.5);\nB=vec2(1.09132,0.57534);\nfloat d2=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d2);\n\nA=vec2(0.88813,0.67808);\nB=vec2(0.89269,0.71233);\nfloat d3=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d3);\n\nA=vec2(0.88813,0.67808);\nB=vec2(0.91781,0.67352);\nfloat d4=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d4);\n\nA=vec2(0.97945,0.74201);\nB=vec2(0.91781,0.67352);\nfloat d5=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d5);\n\nA=vec2(1.04795,0.77626);\nB=vec2(0.96119,0.7169);\nfloat d6=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d6);\n\nA=vec2(1.18037,0.8379);\nB=vec2(1.05023,0.77169);\nfloat d7=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d7);\n\nA=vec2(0.8653,0.92694);\nB=vec2(0.82648,0.84475);\nfloat d8=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d8);\n\nA=vec2(0.8653,0.92694);\nB=vec2(0.89954,0.98174);\nfloat d9=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d9);\n\nA=vec2(0.90868,0.97945);\nB=vec2(0.88356,0.92466);\nfloat d10=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d10);\n\nA=vec2(0.79224,0.77854);\nB=vec2(0.8379,0.73059);\nfloat d11=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d11);\n\nA=vec2(0.80822,0.77854);\nB=vec2(0.82877,0.75799);\nfloat d12=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d12);\n\nA=vec2(0.79452,0.5137);\nB=vec2(0.83333,0.52511);\nfloat d13=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d13);\n\nA=vec2(0.99543,0.49543);\nB=vec2(0.89498,0.43379);\nfloat d14=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d14);\n\nA=vec2(1.23288,0.14384);\nB=vec2(1.34018,0.23516);\nfloat d15=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d15);\n\nA=vec2(1.43836,0.3242);\nB=vec2(1.34018,0.23516);\nfloat d16=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d16);\n\nA=vec2(1.00228,0.3379);\nB=vec2(0.97032,0.3516);\nfloat d17=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d17);\n\nA=vec2(1.02055,0.34475);\nB=vec2(0.99087,0.35845);\nfloat d18=sdSegment(p,A,B);\ncolout= DFB(vec3(0.0), colout, d18);\n    return colout;\n}\n\nvec3 vegeta(vec2 p, vec3 colout)\n{\n    colout=cuello(p, colout);\n    colout=cabeza_vegeta(p,colout);\n    colout=ojo(p, colout);\n    colout=ceja(p, colout);\n    colout=boca(p, colout);\n    colout=nariz(p, colout);\n    colout=lineas(p, colout);\n    return colout;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    uv-=vec2(-1.1,-1.0);\n    float esc=0.5;\n    uv*=esc;\n    vec2 uv0=uv;\n     vec3 col = 0.5 + 0.5*cos(100.*sqrt(fract(iTime*0.5+0.1)*uv.xyx*100.0*vec3(-0.5,0.2,0.4))+0.1);\n     col*=(0.75-uv.y);\n    col=vegeta(uv,col);\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Referencia de sonido \n//IQ,AeroShark333, Gaz ,etc. muchos :)\n//The Rhythm of the Night - Corona - Piano Tutorial\n//https://www.youtube.com/watch?v=Y397bOTV-ks\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n\n\nconst float ttotal=35.0; \nconst float pi = 3.1415927;\nconst float tau = 6.283185;\nfloat ms;\nfloat mresp;\nfloat mtime;\nfloat mtempo;\n\n\n//https://www.shadertoy.com/view/ss3cDN\n// Created by AeroShark333\nfloat squareWave750( float f, float x)\n{ return (min(1.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 3.0 ))); }\n\nfloat squareWave500( float f, float x)\n{ return (floor( 2.0 * floor( f * x ) - floor( 2.0 * f * x ) + 1.0 )); }\n\nfloat squareWave250( float f, float x)\n{ return (max(0.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 ))); }\n\nvec2 squareWave250( vec2 f, float x)\n{ return (max(vec2(0.0), floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 ))); }\n\nfloat triangleWave500( float q, float x)\n{ float f = 1.0-2.0*abs(0.5-mod(q*x,1.0));  return (f); }\n\nfloat triangleWave250( float q, float x)\n{ float f = max(0.0,1.0-2.0*abs(0.5-2.0*mod(q*x,1.0))); return (f); }\n\nfloat convertBassFreq (float f)\n{ return (f/2.0); }\n\nfloat  sawf(float t , float freq)\n{  return fract(t * freq) - 0.5; }\n\nfloat wave1( float x, float dxdt, in vec2 v, float t , float w)\n{   float f2;\n    float sampleX=0.0;\n    float f=w;\n    sampleX =squareWave250(f,t)*triangleWave250(f,t) *exp(-2.5*t);\n    f2=(sampleX+sawf(t,f));\n    float fx=f2*1.5;\n    return fx;\n}\n\n\nfloat D3(float ton, float tid, float toff)\n{   vec3 n3;\n    float resp;\n    n3=vec3(ton,tid, toff);\n    \n    \n    if(ms>=ton && ms<=toff)\n    {      // lower one octave\n      n3.y -=12.; //12 notas\n      //n3.y +=12.; //12 notas\n\n      // compute note frequency and time  \n      float f = 440.0*pow( 2.0, float(n3.y-69.)/12.0 );\n      float t = mtime - float(n3.x)/mtempo;\n      if( n3.x==0.0 ) return 0.0;\n\n      // prepare wave parameters\n      float w = tau*f;\n      \n      float dwdt = w/iSampleRate; // derivative\n\n      // mix between bandlimited and raw saw waves  \n      vec2 v = smoothstep(-0.2,0.2,sin(t*vec2(1.0,0.5)) );\n      // build instrument\n\n      float f1,y;\n      f1=wave1(w*t,1.00*dwdt,v,t,w);\n      float wf  = 0.4*f1;\n      y=f1*wf;\n      float offset=n3.x;\n       y*=exp(-1.0/n3.z * (t -offset) );\n        \n       mresp+=y;\n    }\n    \n}\n\n\n\nfloat SoundIq(float time)\n{ ///referencia de notas musicales... iq \n  time = mod( time+1.0, ttotal);\n // tune\n  float tempo = 0.5;\n  float s = time*tempo;\n vec3 n3=vec3(0.0);\n \n //variables globales\n ms=s;\n mresp=0.0;\n mtime=time;\n mtempo=tempo;\n\n \n D3(0.000,56.0,0.125); D3(0.125,59.0,0.250); D3(0.250,23.0,1.250); D3(0.250,59.0,0.375); D3(0.375,57.0,0.500); D3(0.500,57.0,0.625);\n D3(0.625,56.0,0.688); D3(0.688,56.0,0.813); D3(0.813,54.0,1.000); D3(1.000,54.0,2.000); D3(1.250,23.0,2.250); D3(2.000,59.0,2.250);\n D3(2.250,23.0,3.250); D3(2.250,59.0,2.375); D3(2.375,57.0,2.500); D3(2.500,57.0,2.625); D3(2.625,56.0,2.750); D3(2.750,54.0,3.000);\n D3(3.000,56.0,3.125); D3(3.125,52.0,3.375); D3(3.250,21.0,4.250); D3(3.375,49.0,4.250); D3(4.250,21.0,4.875); D3(4.250,49.0,4.375);\n D3(4.375,52.0,4.500); D3(4.500,54.0,4.688); D3(4.688,56.0,4.750); D3(4.750,59.0,4.813); D3(4.813,56.0,5.000); D3(4.875,21.0,5.563);\n D3(5.000,49.0,5.063); D3(5.063,52.0,5.125); D3(5.125,49.0,5.188); D3(5.188,56.0,5.313); D3(5.313,49.0,5.438); D3(5.438,49.0,5.500);\n D3(5.500,47.0,5.563); D3(5.563,25.0,6.563); D3(5.563,49.0,6.563); D3(6.563,25.0,7.563); D3(6.688,56.0,6.813); D3(6.813,56.0,6.938);\n D3(6.938,56.0,7.063); D3(6.938,56.0,7.063); D3(7.063,61.0,7.188); D3(7.188,59.0,7.313); D3(7.313,56.0,7.438); D3(7.438,54.0,7.563);\n D3(7.563,21.0,8.563); D3(7.563,52.0,7.688); D3(7.688,49.0,8.313); D3(8.313,59.0,8.438); D3(8.438,58.0,8.563); D3(8.563,25.0,9.563);\n D3(8.563,59.0,8.688); D3(8.563,59.0,8.688); D3(8.688,56.0,9.313); D3(9.313,56.0,9.500); D3(9.500,54.0,10.500); D3(9.563,23.0,10.563);\n D3(10.500,56.0,10.563); D3(10.563,18.0,11.563); D3(10.563,61.0,10.688); D3(10.688,59.0,10.813); D3(10.813,56.0,10.938); D3(10.938,54.0,11.000);\n D3(11.000,52.0,11.188); D3(11.188,49.0,11.688); D3(11.563,18.0,12.563); D3(11.688,56.0,11.813); D3(11.813,56.0,11.938); D3(11.938,56.0,12.063);\n D3(12.063,61.0,12.188); D3(12.188,59.0,12.313); D3(12.313,56.0,12.438); D3(12.438,54.0,12.563); D3(12.563,21.0,13.563); D3(12.563,52.0,12.688);\n D3(12.688,49.0,13.313); D3(13.313,59.0,13.438); D3(13.438,56.0,13.563); D3(13.563,25.0,14.563); D3(13.563,59.0,13.688); D3(13.688,56.0,14.313);\n D3(14.313,56.0,14.500); D3(14.500,54.0,15.500); D3(14.563,23.0,15.563); D3(15.500,56.0,15.563); D3(15.563,18.0,16.563); D3(15.563,61.0,15.688);\n D3(15.688,59.0,15.813); D3(15.813,56.0,15.938); D3(15.938,54.0,16.000); D3(16.000,52.0,16.188); D3(16.188,49.0,17.188); D3(16.563,18.0,17.188);\n \n \n  return mresp;\n}\n\nvec2 mainSound( in int samp, float time )\n{ float t1=mod(time, ttotal);\n  float y= SoundIq(t1)*0.5;\n  return vec2(y);\n}   \n","name":"Sound","description":"","type":"sound"}]}