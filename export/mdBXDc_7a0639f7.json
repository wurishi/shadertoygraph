{"ver":"0.1","info":{"id":"mdBXDc","date":"1671086191","viewed":60,"name":"Fork Fork Hallu finleysun 494","username":"finleysun","description":"It's a self-modifed shader originated from a shadertoy turoriol from The Art of Code","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["demo"],"hasliked":0,"parentid":"ddBXDc","parentname":"Fork Hallucinat finleysun 489"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.xy;\n    float t = iTime *.2;\n\n    uv *= mat2(cos(t), -sin(t), sin(t), cos(t));//rotation\n    \n    vec3 ro = vec3(0, 0, -1); //look at angle\n    //vec3 lookat = vec3(0);\n    vec3 lookat = mix(vec3(0), vec3(-1, 0, -1), sin(t*1.56)*.5+.5);//camera turning left\n    float zoom = mix(.2, .7, sin(t)*.5+.5);//zoom in and out by time\n    \n    vec3 f = normalize(lookat-ro),\n         r = normalize(cross(vec3(0,1,0), f)),\n         u = cross(f, r),\n         c = ro + f * zoom,\n         i = c + uv.x * r + uv.y * u,\n         rd = normalize(i-ro);\n         \n    float radius = mix(.3, 2., sin(t*.4)*.5+.5);\n    //float radius = 1.;\n    float dS, dO;\n    vec3 p;\n    \n    for(int i=0; i<100; i++){\n        p = ro + rd * dO;\n        //dS = length(vec2(length(p.xz)-1., p.y)) - .65);//the outside of the torus\n        dS = -(length(vec2(length(p.xz)-1., p.y)) - radius); //the inside\n        if(dS<.001)break;\n        dO += dS;\n    }\n     \n    vec3 col = vec3(0);\n    \n    if(dS<.001){\n       float x = atan(p.x, p.z)+t*.8;\n       float y = atan(length(p.xz)-1., p.y);\n       \n       float bands = sin(y*10.+x*30.);\n       float ripples = sin((-x*10.+y*30.)*5.)*.5+.5;\n       float waves = sin(x*2.-y*2.+t*20.);\n       \n       float b1 = smoothstep(-.1, .1, bands);\n       float b2 = smoothstep(-.1, .1, bands-.8);\n       \n       float m = b1*(1.-b2);\n       m = max(m, ripples*b2*(0., waves));\n       m += max(0., waves*.5*b2);\n       \n       col += mix(m, 1.-m, smoothstep(-.3, .3, sin(x+t)));\n    }\n    \n    vec3 base = sin(t*10.*vec3(.345, .456, .678))*.4 + .6;\n     \n    fragColor = vec4(col*base,1.0);\n   \n}","name":"Image","description":"","type":"image"}]}