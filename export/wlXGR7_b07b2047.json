{"ver":"0.1","info":{"id":"wlXGR7","date":"1555875115","viewed":103,"name":"nicso_abstract01","username":"nicso","description":"_","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sphere(vec3 p)\n{\n    p = mod(p,3.)-3.*.5;\n    return length(p)-.3;\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n{\n    vec2 uv=fragCoord/iResolution.xy;\n    uv-=.5;    \n    uv.x*=iResolution.x/iResolution.y;\n\n    vec3 col = vec3(.2);\n\n    vec3 ro = vec3(0.,0.,-3.);\n    vec3 rd = normalize(vec3(uv,1.));\n    vec3 p = ro;\n    p.x += sin(iTime );\n    p.y += cos(iTime );\n\n    bool hit = false;\n    float shading = 0.;\n    for(float i=0.; i<100.; i++){\n        float d = sphere(p+i);\n        if(d<.05){\n            hit = true;\n            shading = i/100.;\n            break;\n        }\n        p += d * rd;\n    }\n    if(hit) col = vec3(1.-shading);\n    else col = vec3(0.);\n    \n    fragColor=vec4(col.r);\n}","name":"Image","description":"","type":"image"}]}