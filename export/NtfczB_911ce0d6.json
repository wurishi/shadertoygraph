{"ver":"0.1","info":{"id":"NtfczB","date":"1648173445","viewed":92,"name":"Yin Yang using sine","username":"upurupu","description":"Simple Yin Yang using sine","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["yinyang"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = acos(-1.);\n\nvec2 rotate(vec2 uv, float a) {\n    float cosine = cos(a);\n    float sine = sin(a);\n    mat2 m = mat2(cosine, sine, -sine, cosine);\n    return uv * m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/min(iResolution.y,iResolution.x);\n    \n    uv = rotate(uv, sin(iTime*.5)); // rotation\n    \n    // vars\n    float d = length(uv);\n    vec3 col = vec3(1.0);\n    \n    col *= smoothstep(0.01, -0.01, uv.x-2.5*sin(uv.y*(1.-d))); // center curve\n    \n    float r = .1;\n    col *= smoothstep(r, r+.003, length(vec2(uv.x, uv.y-.5))); // black dot\n    col += 1.0-smoothstep(r, r+.003, length(vec2(uv.x, uv.y+.5))); // white dot\n    \n    col = mix(col, vec3(.6), smoothstep(.99, 1., d)); // circle\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}