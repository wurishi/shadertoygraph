{"ver":"0.1","info":{"id":"XXl3RM","date":"1707274328","viewed":45,"name":"blue flag","username":"zadkielmodeler","description":"following tutorial\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["template"],"hasliked":0,"parentid":"43sGRM","parentname":"dah blue button"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec3 sdfColor(float sdf)\n{\n    return vec3(sdf);\n}\n\nfloat sdfCircle(vec2 point, float radius)\n{\n    return length(point) - radius;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uResolution =iResolution.xy;\n    float uTime = iTime;\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = gl_FragCoord.xy/uResolution.xy;\n\n   \n   //center uvs\n    uv = uv - 0.5;\n    uv = uv * uResolution/100.;\n    \n    float radius = uResolution.x/500.;\n    //moving back and forth horizontally\n    //vec2 center = vec2(sin(2.0*uTime),0.0);\n    \n    vec2 center = vec2(0.0);\n    \n    float sdf = sdfCircle(uv - center, radius);\n    \n    //solid color circle\n    vec3 color = sdf > 0.0? vec3(0.9,0.6,0.0): vec3(0.3,0.7,1.0);\n    \n    //sun effect\n    //color = color * exp(sdf);\n    \n    //black outline\n    color = color * (1.0 - exp(-(uv.x*15.0) *abs(sdf)));\n    \n    //white outline\n    //color = mix(vec3(1.0), color, step(0.1,abs(sdf)));\n    \n    color = mix(vec3(1.0), color, smoothstep(0.0,0.1,abs(sdf)));\n    \n    //gradient circle\n    //color = mix(color,sdfColor(sdf),0.9);\n    \n\n    // Output to screen\n    //vec3 color = vec3(uv.x,uv.y,0);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}