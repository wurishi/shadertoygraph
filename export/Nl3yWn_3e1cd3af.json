{"ver":"0.1","info":{"id":"Nl3yWn","date":"1659522297","viewed":102,"name":"Aug 3","username":"scry","description":"Timelapse: https://www.youtube.com/shorts/piCdg87T5Kg","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///////////////////////////////////////////////////////////////////\n#define time iTime*0.1\n#define pi acos(-1.)\n#define deg pi/180.\n\n\n\nmat2 r2d(float a) {\n    return mat2(cos(a),sin(a),-sin(a),cos(a));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 R = iResolution.xy;\n    float ar = R.x/R.y;\n    uv -= 0.5;\n    uv.x *= ar;\n    //center uv coords and correct aspect ratio\n    vec3 col = vec3(0.);\n    float c = length(uv); //center point\n    float oc = c; //lets copy it\n    float t = time*0.5; //easy control of time\n    float c2 = length(uv+(vec2(cos(t),sin(t))*0.5+0.5)*0.4);\n    //c = sqrt(-c+c2);\n    float h = c-c2;\n    //c = (c+c2)-sqrt(h*h+0.1);\n    //c = min(c,c2);\n    for (int i=0;i<600;i++) {\n        float ii = float(i); \n        t += 0.0025;\n        //t *= 0.999;\n        uv -= vec2(sin(ii),cos(ii))*0.001; //displace point\n        c2 = length(uv+(vec2(cos(t),sin(t))*0.5)*0.99*sin(ii*(1.25+sin(t*0.01)*0.1)+t*2.)*1.9); //more displace and get length\n        h = c-c2; //smooth min implementation\n        c = 0.5*((c+c2)-sqrt(h*h+0.00002-(-oc*0.0004)));//smoothmin with more blobbyness at edges\n        //c *= 0.54;\n        //c -= 0.01;\n    }\n    c += 0.01;\n    //c *= 1.;\n    //c += 0.15;\n    //c *= 0.5;\n    //c = sqrt(pow(c-c2,2.));\n    //c = (c*0.5+0.5)*(c2*0.5+0.5)*2.-0.5;\n    //c = sqrt(abs(c+c2)-0.1);\n    //c = min(c-c2,c2-c);\n    //col += c*0.4;\n    //c = normalize(vec2(c,0.5)).y;\n    //col += c*0.1;\n    col += sin(c*vec3(1.,2.,3.)*2.+sin(c*200.+time*50.)*0.1); //color\n    col += sin(c*vec3(1.,2.,3.)*8.+sin(c*900.+time*40.)*0.06); //more layers of color\n    vec3 bc = vec3(step(c,0.0002)); \n    bc.x *= 0.;\n    //bc.zy -= 0.5;\n    bc = sin(bc*20.+t+c*900.)*0.5+0.5;\n    //bc.rb *= r2d(time+c*1000.);\n    //bc.zy += 0.5;\n    //col = clamp(col,0.,1.);\n    col += bc/c*0.003;\n    col = sin(col+c*pi*3.+time*10.);\n    col = sin(col+c*pi*8.+time*10.);\n    col = clamp(col,0.,1.);\n    //col += step(abs(c)-0.1,-.099);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}