{"ver":"0.1","info":{"id":"3l3fW4","date":"1612701547","viewed":77,"name":"Keyboard tester","username":"sig","description":"Left to right: keycodes, each 10 with blue, each 100 with green\nBottom to top: 0 = down, 1 = press, 2 = toggle","likes":4,"published":1,"flags":16,"usePreview":0,"tags":["keyboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Integer coordinates for the 256 x 3 keyboard \"texture\", plus some border space\n    ivec2 pi = ivec2(uv.x*300.0 - 20., uv.y*6.0 - 2.);    \n\n    // Read keyboard data with texelFetch(channel, coordinate, lod_level)\n    vec3 col =\n        pi.x < 0 || pi.x > 256 || pi.y < 0 || pi.y > 2 ? 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)) :\n        texelFetch(iChannel3, pi, 0).x > 0.5 ? vec3(1., 0., 0.) :\n        pi.x % 100 == 0 ? vec3(0., 1., 0.) :\n        pi.x % 10 == 0 ? vec3(0., 0., 1.) :\n        pi.x % 2 == 0 ? vec3(0., 0., 0.3) :\n        vec3(0);\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}