{"ver":"0.1","info":{"id":"Dl3BRs","date":"1701456956","viewed":43,"name":"Kaleido pattern","username":"Boom123bam","description":"Tried do make something that looks like a kaleidoscope lol","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["fractal","kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define n 12.\n\nvec3 hsl2rgb(in vec3 c){\n  vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n  return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nmat2 rot(float ang){\n  return mat2(\n    cos(ang), -sin(ang),\n    sin(ang), cos(ang)\n  );\n}\n\nvec4 pattern(vec2 uv){\n  float t = iTime;\n  float size = length(floor(uv + sin(t * .5) * 2.) / 25.);\n  uv += vec2(t * .3, t * .5);\n  vec2 i = floor(uv);\n  float d = max(abs(fract(uv.x) - .5), abs(fract(uv.y) - .5));\n  // float d = length(fract(uv) - .5);\n  vec4 col = vec4(mod(i.x + i.y,2.));\n  col *= step(d, size);\n  col.a *= size * 2.;\n  col.rgb *=  hsl2rgb(vec3(uv.x + t,1, 0.9));\n  return vec4(col);\n}\n\nvec4 repeatPattern(vec2 uv){\n  vec4 col;\n\n  for(float i = 0.; i < n * 2.; i++){\n    col = mix(col, pattern(uv), pattern(uv).a);\n    uv *= rot(PI/n);\n  }\n\n  return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n  float t = iTime;\n\n  uv *= 5.;\n\n  vec4 col = repeatPattern(uv);\n\n  fragColor = vec4(col);\n  fragColor = vec4(col * col.a);\n}\n\n","name":"Image","description":"","type":"image"}]}