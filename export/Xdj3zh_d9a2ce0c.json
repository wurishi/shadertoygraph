{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"struct camera {\n  vec3 pos;\n  vec3 facing;\n};\n\nstruct hitInfo {\n    vec3 lv;\n    vec3 cv;\n    vec3 normal;\n    vec3 pos;\n};\n\nstruct lightInfo {\n   vec3 pos;\n   vec3 dColor;\n   vec3 sColor;\n};\n\nlightInfo light1, light2;\ncamera cam;\n\nvec3 bg(vec2 p) {\n //p.x += floor(mod(time, .2)*10.);\n if (floor(mod(floor(p.x)+floor(p.y), 2.0)) <1.)\n    return vec3(0.);\n   return vec3(1.);\n}\n\nvec3 getBG(vec2 p) {\n  p.x += cos(.5*iTime); \n  p.y += sin(.5*iTime);\n  p += vec2(0.5*sin(p.y)*sin(iTime),\n          -0.5*sin(p.x)*sin(iTime));\n  p*=4.;\n//  p.x = p.x + p.x*cos(time);\n // p.y = p.y + p.y*sin(time);\n  return bg(p);\n}\n\nvec3 getColor(hitInfo hit, lightInfo lite) {\n    vec3 col;\n    \n    if (dot( vec3(0.,0., -1.), hit.normal)==0.) {col=vec3(0.);}\n    else {\n       col = 0.7*getBG(\n               vec2( hit.pos.xy +\n                 hit.normal.xy*dot(vec3(0.,0., 1.)-hit.pos, vec3(0.,0.,1.))/dot(hit.normal, vec3(0.,0.,1.))\n               )\n             ).xxx;\n    }\n\n    float i = clamp(dot(hit.lv, hit.normal), 0., 1.);\n    col += i*lite.dColor;\n\n    i = pow(clamp(dot(hit.cv, reflect(hit.lv, hit.normal)), 0., 1.), 4.0);\n    col += i *lite.sColor;\n    return col;\n}\n\nconst int MAX_STEPS = 100;\n\nfloat raymarch(camera o, vec3 j, float d) {\n\n   vec3 r = o.pos;\n   vec3 s = o.facing*0.1;\n   float n, dist = n = distance(o.pos, j);\n   for (int i = 0; i < MAX_STEPS; i++) {\n     if (n <= d) {\n        return length(r);\n     }\n     r += s;\n     dist = n;\n     n = distance(r, j);\n   }\n   return 0.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = -2.0 + 4.0 * fragCoord.xy / iResolution.xy;\n    p.x *= iResolution.x/iResolution.y;\n\n    cam.pos  = vec3(p, 0.);\n    cam.facing = vec3(0.,0.,1.);\n\n    vec3 r = cam.pos;\n    vec4 col = vec4(getBG(cam.pos.xy), 0.5);\n    \n    vec3 cc = vec3(cos(iTime), sin(iTime), 0.);\n\n    lightInfo light1 = lightInfo(vec3(0.,0., 1.+cos(iTime)*0.8), vec3(1.,1.,1.), vec3(1.,1., 1.)\n    );\n    lightInfo light2 = lightInfo(vec3(cos(iTime*8.),0.5,2.), vec3(0.,0., 1.), vec3(0.,1., 1.)\n    );\n\n    float a = acos(sign(cam.pos.y-cc.y)*dot(normalize(cam.pos.xy-cc.xy), vec2(1., 0.)));\n    float sa = 0.5+0.25*cos(10.*a+iTime)*cos(20.*a);\n\n    float d = raymarch(cam, cc, 0.5);\n\n    if (d > 0.) {\n\n        d =length(cam.pos- cc)/0.5;\n        r = vec3(cam.pos.xy, sqrt(1.-d*d));\n\n       col = vec4(getColor(\n          hitInfo(normalize(light1.pos-r), normalize(cam.pos-r), normalize(r-cc), r), light1\n       ), 1.);\n     //  col += vec4(getColor(\n     //     hitInfo(normalize(light2.pos-r), normalize(cam.pos-r), normalize(r-cc), r)\n      // ), 1.);\n    }\n\n    fragColor = col;\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xdj3zh","date":"1398135942","viewed":156,"name":"raytrace madness","username":"zugamifk","description":"test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""}}