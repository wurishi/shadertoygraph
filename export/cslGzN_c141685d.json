{"ver":"0.1","info":{"id":"cslGzN","date":"1665760635","viewed":244,"name":"ez edge detection","username":"Oman395","description":"Messing with shaders again, this time I made some simple edge detection.","likes":1,"published":3,"flags":34,"usePreview":0,"tags":["edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    bool backgroundColor = false;\n    vec2 uv = fragCoord / iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    if(col[0] > 0.5) fragColor = vec4(1,1,1,1);\n    else if(!backgroundColor) fragColor = vec4(0,0,0,0);\n    else fragColor = texture(iChannel1, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = texture(iChannel0, uv);\n    bool isEdge;\n    for(int x = -1; x < 2; x++) {\n        if(isEdge) break;\n        for(int y = -1; y < 2; y++) {\n            vec4 oCol = texture(iChannel0, (fragCoord + vec2(x,y)) / iResolution.xy);\n            vec4 deltaVec = col - oCol;\n            float delta = abs(deltaVec[0]) + abs(deltaVec[1]) + abs(deltaVec[2]) + abs(deltaVec[3]);\n            if(delta > 0.125) {\n                isEdge = true;\n                break;\n            }\n        }\n    }\n    if(isEdge) fragColor = vec4(1,1,1,1);\n    else fragColor = vec4(0,0,0,0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    int cnt = 0;\n    for(int i = -2; i < 3; i++) {\n        for(int j = -2; j < 3; j++) {\n            vec4 col = texture(iChannel0, (fragCoord + vec2(i,j)) / iResolution.xy);\n            if(col[0] > 0.5) cnt++;\n        }\n    }\n    if(cnt > 15 && cnt < 25) fragColor = texture(iChannel0, uv);\n    else fragColor = vec4(0,0,0,0);\n}","name":"Buffer B","description":"","type":"buffer"}]}