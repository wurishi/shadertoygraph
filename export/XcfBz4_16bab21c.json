{"ver":"0.1","info":{"id":"XcfBz4","date":"1723404650","viewed":53,"name":"fragment shader numbers","username":"K_oko","description":"A custom version of https://www.shadertoy.com/view/XcXBR4\nwhich is based from Freya Holmer's tweet\nhttps://x.com/FreyaHolmer/status/1822651337642738070","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["debug"],"hasliked":0,"parentid":"XcXBR4","parentname":"debug digits"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A custom version of https://www.shadertoy.com/view/XcXBR4\n// which is based from Freya Holmer's tweet\n// https://x.com/FreyaHolmer/status/1822651337642738070\n\nconst int dBits[5] = int[5](\n  3959160828,\n  2828738996,\n  2881485308,\n  2853333412,\n  3958634981\n);\n\nfloat DrawDigit(ivec2 px, const int digit) {\n  // Pixel out of bounds\n  if (px.x < 0 || px.x > 2 || px.y < 0 || px.y > 4) return 0.; \n  // Dot made by shortening the character at pos 10\n  if (digit == 10 && px.x > 1) return 0.;\n  int xId = (digit == -1) ? 18 : 31 - (3 * digit + px.x);\n  return float((dBits[px.y] & (1 << xId)) != 0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord / iResolution.xy;\n  float c = 0.0;\n  for (int i = 0; i < 6; i++) {\n    int n = int(floor(iTime / pow(10.0, float(i - 2)))) % 10;\n    // Hardcoding '-.' indices for demo purpose, \n    // will refactor into a function to print 'full' float number later.\n    if (i == 3) n = 10; // Make the dot\n    if (i == 5) n = -1; // Make the negative sign\n\n    vec2 st = (vec2(uv.x + float(i) * 0.1 - 0.2, 1. - uv.y) - 0.5) * 50. + 0.5;\n    c = max(c, DrawDigit(ivec2(floor(st)), n));\n  }\n  fragColor = vec4(c, c, c, 1);\n}\n","name":"Image","description":"","type":"image"}]}