{"ver":"0.1","info":{"id":"mdScDz","date":"1687650965","viewed":46,"name":"Persona 4 Heaven Shader #0","username":"aliendino","description":"A replicant of a shader for one of the props in the battle scene in the Heaven dungeon... You can drag it around\nhttps://www.youtube.com/watch?v=o7Vwdkdgaro&t=2360s look in the background","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["game","sdf","cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n#define NUM_COLORS 8\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\n\nfloat sdCircle( in vec2 p, in float r) \n{\n    return length(p)-r;\n}\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdHeart( in vec2 p )\n{\n    p.x = abs(p.x);\n\n    if( p.y+p.x>1.0 )\n        return sqrt(dot2(p-vec2(0.25,0.75))) - sqrt(2.0)/4.0;\n    return sqrt(min(dot2(p-vec2(0.00,1.00)),\n                    dot2(p-0.5*max(p.x+p.y,0.0)))) * sign(p.x-p.y);\n}\n\nvec3 colors[NUM_COLORS] = vec3[NUM_COLORS](\n                            vec3(1.0, 0.0, 0.0),\n                            vec3(1.0, 0.7, 0.0),\n                            vec3(1.0, 1.0, 1.0),\n                            vec3(1.0, 1.0, 0.0),\n                            vec3(0.0, 1.0, 0.0),\n                            vec3(0.0, 1.0, 1.0),\n                            vec3(0.5, 0.0, 1.0),\n                            vec3(1.0, 0.0, 1.0)\n                          );\n\nvec3 colorPicker(float x)\n{\n    return colors[int(x) % NUM_COLORS];\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord/iResolution.xy * 2.0 - 1.0;\n    p.x *= iResolution.x/iResolution.y;\n   \n    \n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n\tfloat d = sdCircle(p-m, 0.5); // You can use any sdf!\n    \n\t// coloring\n    \n    float n = 10.*d - 5.*iTime;\n    vec3 col = colorPicker(abs(n/PI));\n    \n    \n    //col *= 1.0 - exp(-6.0*abs(d));\n\t//col *=  smoothstep(0., 0.5,abs(1.0*cos(10.*d - iTime)));\n    col *=  1. - step(abs(1.0*sin(n)), 0.2);\n    \n    //col = mix(col, vec3(1.0), vec3(step(col.x, 0.5)));\n\t//col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}