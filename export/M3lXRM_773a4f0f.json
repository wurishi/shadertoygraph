{"ver":"0.1","info":{"id":"M3lXRM","date":"1709295359","viewed":581,"name":"Task 1 - Toon Water #1d","username":"MisaNanase","description":"Task 1 - Toon Water #1d","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["toonwater"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// This shader was possible thanks to @BitterZephyr - for physical & mental support XD\nfloat hash1( float n ) { return fract(sin(n)*43758.5453); }\nvec2  hash2( vec2  p ) { p = vec2( dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)) ); return fract(sin(p)*43758.5453); }\n\n// The parameter w controls the smoothness\nfloat voronoi( in vec2 x, float w, float offset)\n{\n    vec2 n = floor( x );\n    vec2 f = fract( x );\n\n    float m = 8.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2 g = vec2( float(i),float(j) );\n        vec2 o = hash2( n + g );\n        \n\t\t// animate\n        o = offset + 0.3*sin(iTime + 6.2831*o + x);\n        \n        // distance to cell\t\t\n\t\tfloat d = length(g - f + o);\n        \n        // do the smooth min for colors and distances\t\t\n\t\tfloat h = smoothstep( -1.0, 1.0, (m-d)/w );\n\t    m = mix( m, d, h ) - h*(1.0-h)*w/(1.0+3.0*w); // distance\n    }\n\t\n\treturn m;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y; // // normalize the canvas from -1 to 1 & the center 0,0 in the middle of canvas\n    vec4 color = vec4(0.0);\n   \n    uv = uv * 2.0;\n    // Moves the canvas diagonally\n    uv.x += iTime * .5;\n    uv.y += iTime * .25;\n    \n    //My color pallete\n    vec4 a = vec4(0.114,0.635,0.847,1.0);\n    vec4 b = vec4(1.000,1.000,1.000,1.0);\n    //vec4 c = vec4(0.600,0.522,0.000,1.0);\n    vec4 c = a * 0.8; // darkens the a color\n    \n    //My first Top Voronoi Noise\n    float vNoise = voronoi(uv, 0.001, 0.5);\n    float sNoise = voronoi(uv, 0.4, 0.5);\n    float fVoronoi =  smoothstep(0.0, 0.01, vNoise-sNoise);\n    \n    // My Second Offset Voronoi Noise\n    float vNoise2 = voronoi(uv, 0.001, 0.3);\n    float sNoise2 = voronoi(uv, 0.4, 0.3);\n    float offsetVoronoi = smoothstep(0.0, 0.01, vNoise2-sNoise2);\n    \n    // BG Stripes\n    float pi = 3.14159265359;\n    float wave = sin(pi*(uv.x+uv.y));\n    wave = (wave+1.)/2.; // to get the output in the range of 0 to 1\n    \n    vec4 bgColor = mix(a,c,wave);\n    vec4 bgColor2 = mix(a, c, offsetVoronoi + wave);\n    //vec4 bgColor = mix(a,c,offsetVoronoi); // assigns to the offsetVoronoi noise the 2 colors\n    \n    // Final Voronoi Noise\n    vec4 finalVoronoi = vec4(mix(bgColor2, b, fVoronoi));\n    \n    fragColor = vec4(finalVoronoi);\n}","name":"Image","description":"","type":"image"}]}