{"ver":"0.1","info":{"id":"WsBXW1","date":"1553547027","viewed":128,"name":"Echno","username":"shadyLane","description":"musick","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["musick"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);\n    C(111);\n    C(117);\n    C(110);\n    C(68);\n    C(32);\n    C(79);\n    C(118);\n    C(32);\n    C(77);\n    C(111);\n    C(111);\n    C(83);\n    C(105);\n    C(99);\n    C(75);\n    // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float TWOPI = 6.283185307179586;\n\tfloat BEAT = 60./ 137. ;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n        // loooooop\n    float time = iTime;\n    float noire = mod(time, BEAT);\n    \n    // Time varying pixel color\n    vec3 col = vec3(exp(-noire*10.));\n\tif (iResolution.y<2000.) {\n        float c=message(\n            (fragCoord/iResolution.y-vec2(.1,.2))*8.);\n        if(c>=0.){\n            fragColor=vec4(c);return;\n        }\n    }\n    // Output to screen\n    fragColor += vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float TWOPI = 6.283185307179586;\nfloat BEAT = 60./ 137. ;\n\n// noise \nfloat noise(float time) {\n    return fract(sin(99999999. * time * sin(7777777. * time)));\n}\n\nfloat fm(float time, float f1, float f2) {\n    return sin(f1 * time * TWOPI * sin(f2 * time * TWOPI));\n}\n\n\n// sinusoidal oscillator\n\nfloat sinosc( float time, float freq) {\n    return sin(TWOPI * time * freq);\n}\n\n// sinusoidal oscillators bank\n\nfloat multisinosc(float time, float number, float freqmin, float freqmax ) {\n    float signal = 0.;\n    for (float i = 0.; i < number; i += 1.) {\n        float freq = freqmin * pow(freqmax/freqmin, i/number);\n        signal += sinosc(time, freq);\n    }\n    return signal / number;\n}\n\n// mono in stereo out\n\nvec2 pan(float signal, float pan) {\n    pan = clamp(pan, -1., 1.);\n    float ampL = pan > 0. ? 1. - pan : 1.;\n    float ampR = pan < 0. ? 1. + pan : 1.;\n    return vec2(signal * ampL, signal * ampR);\n}\n\n// stereo oscillator bank\n\nvec2 panmultisinosc(float time, \n                    float number, \n                    float freqmin, \n                    float freqmax,\n                   \tfloat pancycles) {\n    vec2 signal = vec2(0.);\n    for (float i = 0.; i < number; i += 1.) {\n        float freq = freqmin * pow(freqmax/freqmin, i/number);\n        signal += pan(sinosc(time, freq), sin(TWOPI * i/number * pancycles));\n    }\n    return signal / number;\n}\n\n\n// sequencing \n\nfloat gate (float time, float period, float duration) {\n    return mod(time, period) < duration ? 1. : 0.;\n}\nfloat env(float time) {\n    return exp(-time*100.);\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    // loooooop\n    float noire = mod(time, BEAT);\n    float noirep = mod(time, BEAT / 0.3333 );\n    float croche = mod(time, BEAT / 2.);\n    float crochep = mod(time, BEAT / 1.3333333);\n    float doublec = mod(time, BEAT / 4.);\n    float blanche = mod(time, BEAT * 2.);\n    float ronde =  mod(time, BEAT * 4.);\n\n    return vec2( clamp(panmultisinosc(time, 12., 300., 2000., 4.) * exp(-blanche*10.) * 0.3\n               \t+ panmultisinosc(time, 5., 500., 1500., 7.) * exp(-crochep*10.) * 0.3\n               \t+ clamp( sin( exp(-noire*15.) * 100. + 50.) * exp(-noire*.5) * 1., -.3, 0.3) * 0.8 \n               \t+ panmultisinosc(time, 17., 10000., 13000., 9.) * exp(-doublec*10.) * 0.3\n               \t+ panmultisinosc(time, 5., 300., 1200., 9.) * exp(-doublec*10.) * 0.2\n               \t+ panmultisinosc(time, 5., 600., 2400., 7.) * exp(-blanche*10.) * 0.4\n               \t+ noise(-blanche) * exp(-blanche* 20.) * 0.8\n               \t+ fm(ronde, 29., 290.) * gate(time + BEAT/2., BEAT, BEAT/4.) * 0.05\n           \t\t+ panmultisinosc(time, 50., 200., 9500., 7.) * exp(-doublec*10.) * gate(time + BEAT*2.25, BEAT*2., BEAT) * 0.6\n               \t+ panmultisinosc(time, 5., 500., 1500., 7.) * exp(-crochep*10.) * exp(-doublec*30.) * gate(time + BEAT*4.5, BEAT*4., BEAT*3.) * 0.6\n           , -0.5, 0.5) * 1.9);\n}","name":"Sound","description":"","type":"sound"}]}