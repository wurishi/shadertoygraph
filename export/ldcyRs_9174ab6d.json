{"ver":"0.1","info":{"id":"ldcyRs","date":"1520262975","viewed":73,"name":"fullOfScreenByCircle","username":"theGarlic","description":"use circle to full the screen","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fullofscreen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Time interval\n    float ti = 2.0;\n    \n    // Time normalize (from 0 to 1)\n    float t = fract(iTime/ti);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Circle radius max\n    float xMax = length(iResolution.xy) / iResolution.x;\n    float yMax = length(iResolution.xy) / iResolution.y;\n    \n    // Move to center\n    uv = uv - vec2(0.5, 0.5);\n    \n    // Scale uv\n    uv = uv / vec2(xMax, yMax);\n    \n    // Circle radius current\n    float r = clamp(t, 0.0, 1.0);\n    \n    // Color set\n    float d = length(uv);\n    vec3 col = vec3(1.0 * (r - d) / r, 0.2, .0) * 0.9;\n    if (d > r)\n        col = vec3(.0, .0, .0);\n    \n    // Output to screen\n    fragColor.rgb = col;\n    fragColor.a = 1.;\n}","name":"Image","description":"","type":"image"}]}