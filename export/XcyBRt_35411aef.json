{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat zero(vec2 p)\n{\n    return 0.7 * clamp(-32. * (abs(length(p * vec2(2., 1.)) - 0.75) - 0.1), 0., 1.);\n}\n\nfloat one(vec2 p)\n{\n    return clamp(-32. * (length(p * p * vec2(64., 1.)) - 0.7), 0., 1.);\n}\n\nfloat image(vec2 p)\n{\n    vec2 h;\n    h.x = hash12(vec2(floor(p.x), 613.523));\n    p.y += iTime * (h.x * 1.5 + 0.5);\n    h.y = hash12(vec2(floor(p.y), 342.578));\n    p = 2. * fract(p) - 1.;\n    if(h.y < 0.5)\n    {\n        return zero(p);\n    }\n    else\n    {\n        return one(p);\n    }\n}\n\nvoid mainImage(out vec4 O, in vec2 I)\n{\n    vec2 uv = 4. * (2. * I - iResolution.xy) / iResolution.y;\n    vec3 col = vec3(image(uv - 0.025), image(uv), image(uv + 0.025));\n    col += 0.2 * abs(sin(3. * (uv.x + uv.y) + 2. * iTime) * cos(uv.x * uv.y + 0.75 * iTime));\n    col *= 1. - dot(uv, uv) * 0.025;\n    O = vec4(col, 0.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XcyBRt","date":"1734314779","viewed":72,"name":"hacking into the mainframe","username":"CuleGamer","description":"the stereotype from the movies where an elite hacker hacks the mainframe and reads the binary scrolling down the screen","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["binary"],"hasliked":0,"parentid":"","parentname":""}}