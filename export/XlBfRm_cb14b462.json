{"ver":"0.1","info":{"id":"XlBfRm","date":"1514986429","viewed":230,"name":"Shadertoy Best Of Video !","username":"ttoinou","description":"[url=https://youtu.be/7BB8TkY4Aeg]On YT ![/url]\n[url=https://www.facebook.com/Autokroma/videos/vb.1943296639322662/1964583907193935/]On FB ![/url]\n(Clickable links)","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["shadertoy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/Xd2fzK\n/*\n * Char Map, chars written with \"0xab\" a is X coord b is Y coord :\n * \n *    0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F\n *    \n * 0  \n * 1\n * 2     !\n * 3  0  1  2  3  4  5  6  7  8  9 \n * 4  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O\n * 5  P  Q  R  S  T  U  V  W  X  Y  Z  [  \\  ]  ^  _\n * 6     a  b  c  d  e  f  g  h  i  j  k  l  m  n  o\n * 7  p  q  r  s  t  u  v  w  x  y  z\n * 8\n * 9\n * A\n * B\n * C\n * D\n * E\n * F\n * \n */\n// One uvec4 => 16 characters\n#define STRING1 (uvec4(0x35861646,0x562747F6,0x97022456,0x374702F4))\n#define STRING2 (uvec4(0x66021202,0x02,0x02,0x02))\n#define fontChannel (iChannel1)\n#define SPACE_CHAR (0x02U)\n#define STOP_CHAR (0x0AU)\n\nvec4 fontCol;\nvec3 fontColFill;\nvec3 fontColBorder;\nvec4 fontBuffer;\nvec2 fontCaret;\nfloat fontSize;\nfloat fontSpacing;\nvec2 fontUV;\n\nvec4 fontTextureLookup(vec2 xy)\n{\n    /* low quality font lookup */\n    /*return texture(fontChannel,xy);*/\n    \n    /* high quality font lookup*/\n\tfloat dxy = 1024.*1.5;\n\tvec2 dx = vec2(1.,0.)/dxy;\n\tvec2 dy = vec2(0.,1.)/dxy;\n\n    return \n        (    texture(fontChannel,xy + dx + dy)\n        +    texture(fontChannel,xy + dx - dy)\n        +    texture(fontChannel,xy - dx - dy)\n        +    texture(fontChannel,xy - dx + dy)\n        + 2.*texture(fontChannel,xy)\n        )/6.\n    ;\n}\n\nvoid drawStr4(uint str)\n{\n    if( str < 0x100U )\n        str = str * 0x100U + SPACE_CHAR;\n    \n    if( str < 0x10000U )\n        str = str * 0x100U + SPACE_CHAR;\n    \n    if( str < 0x1000000U )\n        str = str * 0x100U + SPACE_CHAR;\n    \n    for( int i = 0; i < 4; i++)\n    {\n      uint xy = (str >> 8*(3 - i)) % 256U;\n      if( xy != SPACE_CHAR )\n      {\n          vec2 K = (fontUV-fontCaret)/fontSize;\n          if( length(K) < .6 ) /* lookup skipping : avoid useless font texture lookup */\n          {\n              vec4 Q = fontTextureLookup(\n                     ( K\n                      + vec2(float(xy/16U) + .5  ,  16. - float(xy%16U) - .5)\n                     )/16.)\n                 /* * ( step(length(K),.5)) */\n              ;\n              fontBuffer.rgb += Q.rgb * smoothstep(.6,.4,length(K));\n\n              if( max(abs(K.x),abs(K.y)) < .5 )\n              {\n                fontBuffer.a = min(Q.a,fontBuffer.a);\n              }\n          }\n      }\n      \n        if( xy != STOP_CHAR ) fontCaret.x += fontSpacing*fontSize;\n    }\n}\n\nvoid beginDraw()\n{\n    fontBuffer = vec4(.0,.0,.0,1.);\n    fontCol = vec4(.0);\n    fontCaret.x += fontSpacing*fontSize/2.;\n}\n\nvoid endDraw()\n{\n    float a = smoothstep(1.,.0, smoothstep(.51,.53,fontBuffer.a));\n    float b = smoothstep(.0,1.,smoothstep(.48,.51,fontBuffer.a));\n    \n    fontCol.rgb = mix( fontColFill , fontColBorder , b );\n    fontCol.a = a;\n}\n\nvoid _(uint str)\n{\n    beginDraw();\n    drawStr4(str);\n    endDraw();\n}\n\nvoid _(uvec2 str)\n{\n    beginDraw();\n    drawStr4(str.x);\n    drawStr4(str.y);\n    endDraw();\n}\n\nvoid _(uvec3 str)\n{\n    beginDraw();\n    drawStr4(str.x);\n    drawStr4(str.y);\n    drawStr4(str.z);\n    endDraw();\n}\n\nvoid _(uvec4 str)\n{\n    beginDraw();\n    drawStr4(str.x);\n    drawStr4(str.y);\n    drawStr4(str.z);\n    drawStr4(str.w);\n    endDraw();\n}\n\nvoid _add4(uvec4 str)\n{\n    drawStr4(str.x);\n    drawStr4(str.y);\n    drawStr4(str.z);\n    drawStr4(str.w);\n}\n\n    #define _2(a,b) (_(uvec2(a,b)))\n    #define _3(a,b,c) (_(uvec3(a,b,c)))\n    #define _4(a,b,c,d) (_(uvec4(a,b,c,d)))\n\nvec2 viewport(vec2 b)\n{\n    return (b / iResolution.xy - vec2(.5))*vec2(iResolution.x/iResolution.y,1.);\n}\n\n\n// https://www.shadertoy.com/view/4dBBWc\n\n#define kMIN(Q) k = min(k,Q);\n#define kMAX(Q) k = max(k,Q);\n\nfloat Quadrant(vec2 p,float r,int x,int y,bool inside\n               ,float outerRadiusProtection // wtf\n) {\n    float q = step( max( -float(x)*p.x , -float(y)*p.y) ,.0);\n    \n    if(inside)\n        return (1. - (1. - r + length(p))*q)* step(length(p) + outerRadiusProtection *r,1.);\n    else\n        return (length(p) - r)* q * step(length(p) + outerRadiusProtection *r,1.);\n    //return 1. - (r + length(p))*step( max( -float(x)*p.x , -float(y)*p.y) ,.0);\n    //return (1. - r - length(p)) * step( max( -float(x)*p.x , -float(y)*p.y) ,.0);\n}\n\nfloat Rectangle(vec2 p,vec2 min_,vec2 max_)\n{\n    float k = min(\n        p.x - min_.x,\n        p.y - min_.y\n    );\n    kMIN(max_.x-p.x);\n    return kMIN(max_.y-p.y);\n}\n\n#define FBPOINT(x,y) (vec2(x,y)/250.*vec2(2.,-2.)+vec2(-1.,1.))\n\nvoid mainImage( out vec4 col, in vec2 coord )\n{\n    float border = .92;\n    float e = 1./min(iResolution.x,iResolution.y);\n    \n    float intro = smoothstep(.0,1.,iTime/2.);\n    vec4 Background = vec4(1.,1.,1.,0.);\n    \n    // 3px anti-aliasing\n    float prec = mix(32.,8.,intro)*e; \n    \n\tvec2 p = (coord.xy - iResolution.xy/2.) * e * mix( 24. , 2.1 , intro );\n    \n    //vec2 q = abs(p),r = q - vec2(border);\n    \n    // square\n        //min(1. - q.x,1. - q.y)*step(q.x,1.)\n    float k = Rectangle(p,vec2(-1.),vec2(1.)); \n    \n    // round corners\n        //,1. - ( step(.1 - length(r),.0)*step(-min(r.x,r.y),.0) )\n        //, 1. - ( (.1 - length(r) < .0 ? 1. : 0.)*step(-min(r.x,r.y),.0) )\n        //, 1. - (border + length(r))*step(-min(r.x,r.y),.0)\n    kMIN(Quadrant(abs(p) - vec2(border),1. - border,1,1,true,-10.));\n    \n    // f sticks\n    kMIN(-Rectangle(p,FBPOINT(133,250),FBPOINT(173,39)));\n    kMIN(-Rectangle(p,FBPOINT(134,73),FBPOINT(211,39)));\n    \n    // f middle stick\n    //kMIN(-Rectangle(p,FBPOINT(101,152),FBPOINT(206,116)));\n    vec2 pm = p;\n    if( pm.x > .0 ) pm.x -= pm.y*.12;\n    kMIN(-Rectangle(pm,FBPOINT(101,152),FBPOINT(210,116)));\n    \n    // f outside corner\n    kMAX( Quadrant(p-FBPOINT(174,80),.328,-1,1,false,1.5) );\n    //kMIN(Quadrant(p-FBPOINT(185,85),.09,-1,1,true,-20.5) );\n    \n    col = mix(\n        Background,\n        vec4(.23,.35,.6,1.), // FB blue *.9\n        smoothstep(.0,prec,k) \n    );\n    \n    // f inside corner\n    col = mix(\n        col,\n        Background,\n        smoothstep(.0,prec,\n          Quadrant(p-FBPOINT(187.2,87.2),.11,-1,1,false,-2.5)\n            * step(-p.x,-.3) * step(p.y,.5)) // wtf\n    );\n    \n    col = mix( vec4(1.,1.,1.,0.) , col , intro );\n    \n    vec4 FaceBook = col;\n    \n    \n    coord = viewport(coord);\n    fontCaret = iMouse.z > .5 ? viewport(iMouse.xy) : vec2(-.85,-.1);\n    fontSize = mix(.2,.7,pow(cos(iTime*2.)*.5+.5,8.));\n    fontSpacing = .45;//.9;\n    fontUV = coord;\n    fontColFill = vec3(1.);\n    fontColBorder = vec3(.0);\n\n    beginDraw();\n    _add4(STRING1);\n    _add4(STRING2);\n    endDraw();\n    \n    \n    col = mix( vec4(.7,.7,.9,1.) , vec4(.0,.0,.2,1.) , length(coord) );\n    col = mix( col , FaceBook ,FaceBook.a);\n    col = mix( col , fontCol , fontCol.a);\n}","name":"Image","description":"","type":"image"}]}