{"ver":"0.1","info":{"id":"DtGGWV","date":"1684713230","viewed":209,"name":"Cyber neon sunset","username":"ChunderFPV","description":"Grids & transforms.  Mouse rotates.","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["3d","grid","retro","transform","loopless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RT(a) mat2(cos(m.a*1.571+vec4(0,-1.571,1.571,0)))  // rotate\n#define G(x,t) (min(7., 1./(abs(fract(x+t+.5)-.5)/fwidth(x)/3.))+(1.-abs(sin((x+t)*3.1416))))  // grid\n#define P(u,t) min(5., .1/length((fract(u-vec2(t*round(abs(u.y)), 0)+.5)-.5)))  // points\n\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float t = iTime/5.,\n          fov = .75,\n          s = 7., // scale\n          x, y, z;\n    vec2 R = iResolution.xy,\n         m = iMouse.xy/R*4.-2.;\n    vec3 u = normalize(vec3((U-.5*R)/R.y, fov)),\n         c = vec3(0);\n    if (iMouse.z > 1.)\n        u.yz *= RT(y), // pitch\n        u.xz *= RT(x); // yaw\n    \n    // scaled coords\n    x = u.x*s;\n    y = u.y*s;\n    z = u.z*s;\n    \n    // sun field\n    float mr = ((x*x+y*y)-1.)/y, // metallic ratios\n          mg = min(abs(mr), 1./abs(mr)); // gradient\n    vec3 gold = vec3(1, .6, 0)*sqrt(mg)*1.5,\n         purp = vec3(.5, .2, 1)*(1.-mg);\n    c += G(mr, -t*sign(y)) // grid\n       * max(gold, purp)*.75   // color\n       * sqrt(abs(y) / max(1., abs(mr))) // darken\n       * max(0., u.z); // fade -z\n    \n    // sine waves\n    c += G(y-sin(z+t), 0.) // grid\n       * min(1., 1.-length(u.yz)) // darken\n       * vec3(sin(t)*.3+.5, .1, .5); // color\n    \n    // floor grid\n    float qxy = u.x/u.y, // quotient transform\n          b = (sin((abs(qxy/4.)-t)*6.3)*.5+.5)+.5; // oscillate brightness\n    c += max( G(qxy, 0.) * b, G(u.z/u.y, -t) ) // grids\n       * step(0., -u.y) // hide +y\n       * abs(u.y) // darken\n       * (vec3(.1, .5, .4)+b*.3*b); // color\n    \n    // points\n    vec3 p = vec3(u.x/u.y, u.y, u.z/u.y);\n    c += P(p.zx, -t) // points\n       * max(0., -p.y-.05) // fade y\n       * vec3(.6, .6, .9)*4.; // color\n    \n    // sun glow\n    float r = length(u.xy)*s;\n    c += max(0., 1.-(r/2.5)) // circle\n       * vec3(1, .6, 0) // color\n       * max(0., u.z); // darken\n    \n    // sun rings\n    c += G(cos(length(u.xy*5.)-t), 0.) // grid\n       * vec3(.3, .2, .1)   // color\n       * max(0., u.z) * .3; // darken\n    \n    // contrast\n    c *= (sqrt(c/r)+.1)*.35;\n    \n    C = vec4(c, 1);\n}","name":"Image","description":"","type":"image"}]}