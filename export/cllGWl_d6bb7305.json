{"ver":"0.1","info":{"id":"cllGWl","date":"1672669642","viewed":210,"name":"Shockwave Transition","username":"Pseudonymous","description":"Playing around with a shockwave shader. Use mouse to place origin.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["displacement","chromaticaberration","lens","shockwave","lensing"],"hasliked":0,"parentid":"DlfGWf","parentname":"Shockwave Lensing"},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 origin = iMouse.xy/iResolution.xy;\n    float deltaTime = fract(iTime);\n    float radius = sqrt(2.)*deltaTime;\n    \n    float shockStrength = 1.;\n    float circle = radius - distance(origin, uv);\n    float factor = shockStrength * sin(deltaTime*3.14) * pow(clamp(1. - abs(circle), 0., 1.), 20.);\n  \n    \n    \n    float lensingSpread = 0.12;\n    vec3 color = mix(\n        vec3(\n            texture(iChannel0, uv + (lensingSpread)*factor*normalize(origin-uv)).x,\n            texture(iChannel0, uv + (lensingSpread*1.2)*factor*normalize(origin-uv)).y,\n            texture(iChannel0, uv + (lensingSpread*1.5)*factor*normalize(origin-uv)).z\n        ),\n        vec3(\n            texture(iChannel1, uv + (lensingSpread)*factor*normalize(origin-uv)).x,\n            texture(iChannel1, uv + (lensingSpread*1.2)*factor*normalize(origin-uv)).y,\n            texture(iChannel1, uv + (lensingSpread*1.5)*factor*normalize(origin-uv)).z\n        ), clamp(deltaTime+circle*5., 0., 1.)\n    );\n    \n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}