{"ver":"0.1","info":{"id":"Dtt3z8","date":"1681971583","viewed":81,"name":"gyroid gradient","username":"kmarchais","description":"Gyroid gradient","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gyroid"],"hasliked":0,"parentid":"sdlyD4","parentname":"2D Gyroid"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 colorA = vec3(1.0, 1.0, 1.0);\n    vec3 colorB = vec3(0.0, 0.0, 0.0);\n    \n    vec2 vUv = fragCoord/iResolution.xy;\n    \n    vec3 p = 2.0 * PI * vec3(15.0 * vUv, 0.1 * iTime);\n    float d = dot(sin(p), cos(p.yzx)) / 3.0;\n    \n\n    float thickness = vUv.y * (1.0 - vUv.y);\n    \n    fragColor.rgb = mix(colorA, colorB, smoothstep(-.5, .5, ( abs(d) - thickness ) / fwidth(d)  ) );\n}\n\n// Short version by @FabriceNeyret2\n// void mainImage( out vec4 O, vec2 U )\n// {\n//     U /= iResolution.xy;\n//     vec3  P = .628* vec3( 150.* U, iTime );    \n//     float d = dot( sin(P), cos(P.yzx) );\n//     O = ( 3.*U.yyyy*(1.-U.y) - abs(d) ) / fwidth(d);\n// }","name":"Image","description":"","type":"image"}]}