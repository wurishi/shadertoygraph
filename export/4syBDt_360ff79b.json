{"ver":"0.1","info":{"id":"4syBDt","date":"1530940465","viewed":498,"name":"3 metaballs playground","username":"Joelyo","description":"Just playing around with metaball functions","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["metaballs","isosurface"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(v,r)  smoothstep(5./iResolution.y,0., v-r)\n\nfloat value(vec2 p1, vec2 p2) {\n    //return 0.078 / distance(p1, p2);\n    float dist = distance(p1, p2) * 2.0;\n    return 0.5 * exp(-dist * dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - iResolution.xy / 2.0) / iResolution.y * 3.0;\n    \n    vec2 b1 = vec2(sin(iTime), cos(iTime));\n    vec2 b2 = vec2(sin(-iTime * 1.42386 + 50.0), cos(-iTime * 1.42386 + 50.0) * 0.6);\n    vec2 b3 = vec2(sin(iTime * 1.21239 + 50.0) * 0.2, -cos(iTime * 1.21239 + 50.0));\n\n    // Time varying pixel color\n    float val = 0.0;\n    val += value(uv, b1);\n    val += value(uv, b2);\n    val += value(uv, b3);\n\n    vec3 d = vec3( distance(uv, b1), distance(uv, b2), distance(uv, b3) );\n    vec3 col = S(d,.1);\n    col += (1.-min(1.,col.r+col.g+col.b)) * (1.-S(val,.4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}