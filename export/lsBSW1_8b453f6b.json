{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // set up our coordinate system\n    float aspectRatio = iResolution.y / iResolution.x;\n    vec2 uv = ((fragCoord.xy / iResolution.xy) + vec2(0.5,0.5));\n    uv.y *= -aspectRatio;\n    \n    // pixelation on right half of screen\n    if (uv.x > 1.0) {\n        uv.x -= 0.5;\n        float step = mod(iTime / 2.0, 5.0);\n        float textureResolution;\n        if (step > 4.0)\n        \ttextureResolution = 1024.0;        \n        else if (step > 3.0)\n        \ttextureResolution = 64.0;\n        else if (step > 2.0)\n            textureResolution = 128.0;\n        else if (step > 1.0)\n            textureResolution = 160.0;\n        else\n            textureResolution = 192.0;\n        \n    \tuv.x = floor(uv.x * textureResolution) / textureResolution;\n    \tuv.y = floor(uv.y * textureResolution) / textureResolution;\n    }\n    \n    // sample texture\n    vec3 color  = texture(iChannel0, uv).xyz;\n    \n    // set the final color\n\tfragColor = vec4(color,1.0);    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsBSW1","date":"1411413049","viewed":279,"name":"pixel8","username":"demofox","description":"pixelating input image.  might be neat as a webcam effect too.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","pixel"],"hasliked":0,"parentid":"","parentname":""}}