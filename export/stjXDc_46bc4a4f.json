{"ver":"0.1","info":{"id":"stjXDc","date":"1629558204","viewed":69,"name":"Wooden Pillow","username":"Smake","description":"Parametric wooden material and geometric forms. \nMouse X for size changing.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","texture","parametric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Pillow(vec3 B, float Size){ \n        return (\n          max(max(sqrt (.07*B.x*B.x +.06*B.y*B.y),\n                  sqrt (.18*B.y*B.y + .8*B.z*B.z)  ),\n                  sqrt (.1*B.x*B.x +.9*B.z*B.z)    )-Size );      \n}\n\nfloat Brick(vec3 B, float Scale){\n   B = abs(B);\n   float t = max(max(B.x-3.*Scale,B.z-1.*Scale),B.y)-2.*Scale;\n   return (t);\n}\n\nvoid mainImage(out vec4 O, vec2 U) {\n   \n    mat2  C1 = mat2( sin(.2*iTime+vec4(0,33,11,0)) ); //rot matrix\n    mat2  C2 = mat2( sin(.14*iTime+vec4(0,33,11,0)) ); //rot matrix\n\n    vec3  D = vec3( (2.*U-iResolution.xy)/2e3, -1),   \n          B  , R ; // Buffer, Ray \n        B -=B; R-=R; O-=O; \n    for (R.z = 50.; O.r<.56 ; O+=.004){\n       B = R;                      \n       B.yz *= C1;  B.xz *= C2;// rotation\n   \n//     float t =Brick(B, 20.*iMouse.x/iResolution.x);\n       float t =Pillow(B, 50.*(iMouse.x+20.)/iResolution.x);\n       R += t*D;                 //increment Ray\n       if (t < .001 )  {\n         O.rgb = 2.*O.rgb+ vec3(.350,.2,.05); \n         O -=.12;      \n         break;} \n       }  \n}\n\n","name":"Image","description":"","type":"image"}]}