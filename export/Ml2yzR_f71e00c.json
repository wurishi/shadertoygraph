{"ver":"0.1","info":{"id":"Ml2yzR","date":"1507237084","viewed":81,"name":"Reveal Week 6","username":"Andy608","description":"Reveal Homework for my Intro to Modern Graphics class.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mouse","kernel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//All of the available kernel options\nconst mat3 BlurFilter = mat3 (\n    0.0625, 0.125, 0.0625,\n     0.125,  0.25,  0.125,\n\t0.0625, 0.125, 0.0625\n);\n\nconst mat3 SharpenFilter = mat3 (\n\t 0.0, -1.0,  0.0,\n    -1.0,  5.0, -1.0,\n     0.0, -1.0,  0.0\n);\n\nconst mat3 OutlineFilter = mat3 (\n\t-1.0, -1.0, -1.0,\n    -1.0,  8.0, -1.0,\n    -1.0, -1.0, -1.0\n);\n\nconst mat3 EmbossFilter = mat3 (\n\t-2.0, -1.0, 0.0,\n\t-1.0,  1.0, 1.0,\n\t 0.0,  1.0, 2.0\n);\n\nconst mat3 TopSobelFilter = mat3 (\n\t1.0,  2.0,  1.0,\n    0.0,  0.0,  0.0,\n   -1.0, -2.0, -1.0\n);\n\n\n//Here you can change the foreground and background filters to whichever you'd like\nmat3 ForegroundFilter = BlurFilter;\nmat3 BackgroundFilter = SharpenFilter;\n\n//Here you can change the radius of the circle\n//Starts out as 10% of the scren width\nfloat CircleRadius = 0.1;\nfloat CircleSmoothness = 0.003;\n\n/*\n* Pre: Takes the uv, layer, color of the circle, circle position, and radius.\n* Post: Returns the layer with the new circle added into it.\n* Purpose: To create a circle in a layer.\n*/\nvec4 addCircle( vec2 uv, vec4 layer, vec4 color, vec2 centerPos, float radius )\n{\n    return mix(layer, color, 1.0 - smoothstep(radius, radius + CircleSmoothness, length(uv - centerPos)));\n}\n\n/*\n* Pre: Takes the uv, x and y coords in image space, the image channel, and the channel index.\n* Post: Returns the correct color from the image sampled from.\n* Purpose: To sample pixels from an image.\n*/\nvec4 sampleImage( vec2 uv, const int x, const int y, \n                 in sampler2D iChannel, int iChannelIndex )\n{\n    vec2 imageSpace = uv * iChannelResolution[iChannelIndex].xy;\n    uv = (imageSpace + vec2(x, y)) / iChannelResolution[iChannelIndex].xy;\n    return texture(iChannel, uv);\n}\n\n/*\n* Pre: Takes the uv, channel, channel index and the filter type that should be applied to the image.\n* Post: Returns the color of the image with the appiled effects from the kernel.\n* Purpose: To manipulate an image depending on the filter.\n*/\nvec4 filterImage( vec2 uv, in sampler2D iChannel, int iChannelIndex, mat3 kernel )\n{\n    vec4 filteredImage = vec4(0);\n    int pass;\n    int x;\n    int y;\n    \n    for (x = 0; x < 3; ++x)\n    {\n        for (y = 0; y < 3; ++y)\n        {\n            filteredImage += sampleImage(uv, x - 1, y - 1, iChannel, iChannelIndex) * kernel[x][y];\n        }\n    }\n    \n    return filteredImage;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ratio = iResolution.y / iResolution.x;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 centerPos = iMouse.xy / iResolution.xy;\n    vec4 foregroundLayer;\n    vec4 backgroundLayer;\n    vec4 compositeLayer;\n    \n    //Apply the ratio for the screen.\n    uv.y *= ratio;\n    centerPos.y *= ratio;\n    \n    //Apply filters to the foreground and background.\n    foregroundLayer = filterImage(uv, iChannel0, 0, ForegroundFilter);\n    backgroundLayer = filterImage(uv, iChannel1, 1, BackgroundFilter);\n    \n    //Add the circle to the foreground with the backgroundLayer as the circle color.\n    foregroundLayer = addCircle(uv, foregroundLayer, backgroundLayer, centerPos, CircleRadius);\n    \n    //Mix the layers together.\n    compositeLayer = backgroundLayer;\n    compositeLayer = mix(compositeLayer, foregroundLayer, 1.0);\n    fragColor = compositeLayer;\n}","name":"Image","description":"","type":"image"}]}