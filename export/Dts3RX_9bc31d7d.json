{"ver":"0.1","info":{"id":"Dts3RX","date":"1672153425","viewed":30,"name":"hello shader toy","username":"randopongo","description":"just 1st thing","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv - 0.5; // centers on screen\n    \n    uv.x *= iResolution.x/iResolution.y;//normalize horizontal also\n       \n    \n        uv.x += cos(iTime);\n        \n    // Time varying pixel color\n     vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx + vec3(0,2,4));\n     fragColor = vec4(vec3(col), 1.0);\n   \n \n    // Output to screen\n    float d = length(uv);\n    float r = .3;\n    float c = 0.0;\n     \n     r  += 0.2 * cos(iTime + uv.x );\n     \n    if (d<r) c=0.1; else c=0.0;\n    \n    c = smoothstep(r, r-0.1, d);\n    \n    fragColor += vec4(uv.x, uv.y, 0.1, 1.0);\n    \n    // fragColor += vec4(d, 1.0, 0, 0);\n    fragColor += vec4( vec3(c, 0, 0), 0);\n   \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}