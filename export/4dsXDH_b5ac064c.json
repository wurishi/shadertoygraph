{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/**\ncreated by tony_kero\nSimple Mandelbrot Set\n**/\n\n//#define ANIMATE\n\n#define ITERATIONS 1200.0 \n\n//play with colors if you increase iterations otherwise it will be black & white\n\n\n#ifndef ANIMATE\n#define ZOOM 3.8\n#else\n#define ZOOM (1.0)/iTime\n\n//to change, after 60 sec, the zoom is very slow\n\n#endif\n\nvec3 Mandelbrot();\n\nvec2 uv;\nvec2 z = vec2(0.0, 0.0);\nvec3 c = vec3(0.0, 0.0, 0.0);\nvec2 squared = vec2(0.0,0.0);\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\t\n\tfloat scale = iResolution.y/iResolution.x;\n\tuv = fragCoord.xy/iResolution.xy;\n\t\n\tuv = (uv-0.5)*ZOOM;\n\tuv.y *= scale;\n\n\t#ifndef ANIMATE\n\tuv.x -= 0.7575;\n\t#else\n\tif(iTime < 3.5)\n\t\tuv.x -= iTime/2.0;\n\telse\n\t\tuv.x-= 1.75;\n\t\t//a region on the x axis\n\t#endif\n\t\n\tfragColor = vec4(Mandelbrot(), 1.0);\n\t\n}\n\nvec3 Mandelbrot()\n{\n\tfor(float i = 0.0; i < ITERATIONS; i++)\n\t{\n\t\t\n\t\tif(squared.x+squared.y >= 4.0)\n\t\t{\n\t\t\tfloat tmp = i/(ITERATIONS/12.0);//to control the \"brightness\" of colors\n\t\t\t\n\t\t\t\n\t\t\tc = vec3(64.0*tmp, 8.0*tmp, 4.0*tmp);\n\t\t\t//play with colors ;)\n\t\t\t\n\t\t\tbreak;//if go to infinite quit loop, draw black\n\t\t}\n\t\tz = vec2(squared.x-squared.y, 2.0*z.x*z.y) + uv;\n\t\t\n\t\tsquared = z*z;\n\t\t\t\n\t}\n\t\n\treturn c;\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dsXDH","date":"1400265015","viewed":446,"name":"Simple Mandelbrot Set Zoom","username":"tony_kero","description":"A simple generation of the Mandelbrot Set Zoom.\nHave fun.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrotset"],"hasliked":0,"parentid":"","parentname":""}}