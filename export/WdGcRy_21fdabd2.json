{"ver":"0.1","info":{"id":"WdGcRy","date":"1603083396","viewed":366,"name":"cloth bells","username":"melissaran","description":":)","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rotate_y(vec3 v, float angle)\n{\n\tfloat ca = cos(angle); float sa = sin(angle);\n\treturn v*mat3(\n\t\t+ca, +.0, -sa,\n\t\t+.0,+1.0, +.0,\n\t\t+sa, +.0, +ca);\n}\n\nvec3 rotate_x(vec3 v, float angle)\n{\n\tfloat ca = cos(angle); float sa = sin(angle);\n\treturn v*mat3(\n\t\t+1.0, +.0, +.0,\n\t\t+.0, +ca, -sa,\n\t\t+.0, +sa, +ca);\n}\n\nvec3 proj(vec3 a , vec3 b){\n    return (dot(a,b)/dot(b,b))*b;\n}\n\nfloat line(vec3 a, vec3 b, vec3 c, float r){\n    vec3 norm = (a-c)-proj(a-c,a-b);\n    return length(norm)-r;\n}\n\n\nfloat bell(vec3 p, float o){\n    vec3 n=vec3(0.,-1.,0.);\n    vec3 pproj=vec3(p.x,0.,p.z);\n    \n    float sintime=sin(iTime+o);\n    \n    n=rotate_x(n,sintime*0.2);\n    p=rotate_x(p,-sintime*0.2);\n\n    float angle=acos(dot(pproj,vec3(1.,0.,0.)/(length(pproj))));\n\n    float plane = dot(p-n*0.1,n);\n    float planar0=-sin(iTime+angle*2.+o+1.)*0.1;\n    float planar1=-abs(sin(iTime+angle*4.+o*2.))*0.2;\n    \n    p*=smoothstep(0.,1.,1.-plane+planar1);\n    \n    //float radial0=0.;\n    float radial0=sin(iTime+angle*3.)*0.07;\n    float radial1=-abs(sin(angle*6.+iTime+o)*0.05);\n\t//float radial0=0.;\n    \n    float r=sintime*0.1+0.6;\n    float f=max(\n        abs(\n            radial0+radial1+(length(p))-r)-0.04/(1.+o),\n        plane+planar0);\n    \n    float bump = 0.01 * texture(iChannel0, p.xy*(5.+o)).r/(1.+o);\n\n    f-=bump;\n        \n    return f;\n}\n\n\nfloat beaded(vec3 a, vec3 b, vec3 p){\n   float r=abs(sin(dot(p,a-b)*0.5)*0.1)+0.01;\n    return line(a,b,p,r);\n}\n\n\n\nfloat map(vec3 p){\n    float bells=min(min(bell(p,0.), bell(p*0.75+vec3(0.,-0.5,0.),1.)),bell(p*0.5+vec3(0.,-0.7,0.),2.));\n    vec3 a=vec3(-2.,20.,10.);\n    vec3 b=vec3(-3.,0.,4.);\n    \n    vec3 c=vec3(0.,10.,10.);\n    vec3 d=vec3(3.,-5.,4.);\n    \n    vec3 e=vec3(0.,10.,2.);\n    vec3 f=vec3(2.,-5.,-2.);\n    \n    vec3 pwarp= vec3(p.xy+sin(iTime)*0.1,p.z);\n    \n    float lines= min(beaded(a,b,pwarp),beaded(c,d,pwarp));\n    lines=min(lines,beaded(e,f,pwarp));\n    return min(bells,lines);\n}\n\nvec3 norm(vec3 p){\n    //approx\n    \n    float d=map(p);\n    vec2 e = vec2(0.02,0.);\n    vec3 n= d- vec3(map(p-e.xyy),\n                    map(p-e.yxy),\n                    map(p-e.yyx));\n    \n                    \n\treturn normalize(n);\n}\n\n\nfloat march(vec3 ro, vec3 rd){\n    float d=0.;\n    for(int i=0;i<80;i++){\n        vec3 p= ro+d*rd;\n        float dist = map(p);\n        d+=dist;\n        if(abs(dist)<0.01 || d>10.) break;\n    }\n    return d;\n}\n\nfloat getLight(vec3 p, vec3 n){\n    vec3 lp=vec3(0.,5.,-4.);\n    vec3 l=normalize(lp-p);\n    float d =march(p,l);\n    float nl = dot(n,l)*5.;\n    if(d<length(p-lp))nl*=0.1;\n    \n    \n    \n    \n\tvec3 r = reflect(l,n);\n\t\n\tfloat reflectance = dot(l,r)*.5+.5;\n    \n    \n    float fog=1./(1.+(p.z*p.z));\n    //float fog=1.;\n    \n    \n    return nl*reflectance*reflectance*fog;\n    //return nl;\n}\n\nvec3 pal(float i, vec3 p, vec3 n){\n    p.y=clamp(0.,1.,p.y);\n    float T = 1500. + 1400.*i;\n    vec3 L = mix(vec3(6.4, 1.6, 3.4),vec3(8.4, 6.4, 6.4),1.2-p.y);\n    L = pow(L,vec3(5.0)) * (exp(1.43876719683e5/(T*L))-1.0);\n    vec4 c =texture(iChannel1, p.xz*0.1)*(p.y+1.);\n    c=c*c*c*c;\n    c*=max(dot(n,vec3(0.,1.,0.)),0.);\n    return 1.0-exp(-8e8/L)+c.xyz;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 ro= vec3(0.,0.5,-3.);\n    vec3 rd= normalize(vec3(uv.x,uv.y,1.2));\n\n    \n    float d= march(ro,rd);\n    // Output to screen\n    \n        if(d>10.){\n            //vec4 col = texture(iChannel2,rd);\n            vec4 col = vec4(0.);\n            fragColor=vec4(col.xyz,1.);\n            \n        }else{\n            vec3 n = norm(ro+d*rd);\n    fragColor = vec4(pal(getLight(ro+d*rd,n)*2.,ro+d*rd,n),1.0);\n        }\n            \n    \n    /*\n    if(d>20.){\n        float star = smoothstep(0.7, 1.0,texture(iChannel1, uv*0.5).r);\n        float star1 =smoothstep(0.7, 1.0,texture(iChannel1, uv*0.5+0.005).r);\n        float grad=(sin(iTime)*0.4-uv.y+uv.x*0.4)*0.5;\n        fragColor = vec4(grad,star,star1,1.);\n    }*/\n\n}","name":"Image","description":"","type":"image"}]}