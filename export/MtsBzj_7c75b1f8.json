{"ver":"0.1","info":{"id":"MtsBzj","date":"1512563976","viewed":175,"name":"Bulby star","username":"Ultraviolet","description":"A simple star made of circles.\nMove mouse along x for branch depth, along y for # of branches.","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415972\n\nfloat d(vec2 uv)\n{\n    float theta = atan(uv.y, uv.x) + iTime * 0.1;\n    float rho = length(uv);\n    \n    //float period = 2.*PI/5.;\n    float period = 2.*PI/floor(iMouse.y/iResolution.y*8.+2.);\n    if(iMouse.y < 0.5)\n        period = 2.*PI/5.;\n    \n    theta = mod(theta, period);\n    theta = min(theta, period-theta);\n    \n    vec2 p = vec2(cos(theta), sin(theta)) * rho;\n    \n    \n    //float alpha = PI*0.3;\n    float alpha = iMouse.x/iResolution.x * ((PI-period*0.5)-asin(.5)) + asin(.5);\n    if(iMouse.x < 0.5)\n        alpha = 0.5*(1.0+sin(iTime)) * ((PI-period*0.5)-asin(.5)) + asin(.5);\n    \n    float x = 2.*sin(alpha)/(sin(period*.5)+2.*sin(alpha+period*.5));\n    float rad = sin(period*.5)/(sin(period*.5)+2.*sin(alpha+period*.5));\n    \n    //float h0 = 1.-rad-rad*cos(alpha);\n    //float h1 = rad*sin(alpha);\n    //float xl = sqrt(h0*h0+h1*h1);\n    \n    float dist = rad-length(p-vec2(1.0-rad, 0.0));\n    \n    if(cross(vec3(p,0.)-vec3(1.-rad, 0., 0.), vec3(x*cos(.5*period), x*sin(.5*period),0.)-vec3(1.-rad, 0., 0.)).z < 0.)\n       dist = max(dist, length(p-x*vec2(cos(.5*period), sin(.5*period)))-rad);\n    \n    return dist;\n}\n\nvec3 n(vec2 uv)\n{\n    vec2 l = vec2(0.02, 0.0);\n    //vec2 l = vec2(0.2, 0.0);\n    return normalize(vec3(d(uv+l.xy)-d(uv-l.xy), d(uv+l.yx)-d(uv-l.yx), l.x*5.));\n}\n    \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.0*(fragCoord.xy / min(iResolution.x,iResolution.y) - 0.5*iResolution.xy/ min(iResolution.x,iResolution.y));\n\t\n    float dist = d(uv);\n    vec3 col =  vec3(dist>0.0?0.0:1.0, 0., dist<0.0?0.0:1.0);\n    float stripes = 0.5*(1.0-cos(dist*iResolution.x/3.));\n    stripes = (stripes+2.0)/3.;\n    float contour = 0.5*(1.0-cos(clamp(dist*iResolution.x/3., -PI, PI)));\n    \n    fragColor = vec4(col * stripes *contour, 1.0);\n    //fragColor = vec4(col*contour, 1.0);\n    //fragColor = vec4(contour);\n    \n    \n    \n    //vec3 n = normalize(vec3(dFdx(dist), dFdy(dist), .01));\n    vec3 n = n(uv);\n    vec3 l = normalize(vec3(cos(iTime*.1), sin(iTime*.1), 1.1));\n    float phong = max(dot(n,l), 0.0);\n    \n    float spec = 0.5*pow(max(dot(reflect(vec3(0.0, 0.0, -1.0),n),l), 0.0), 256.);\n    fragColor = vec4((col * phong+ vec3(spec)) * stripes *contour , 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}