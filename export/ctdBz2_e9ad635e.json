{"ver":"0.1","info":{"id":"ctdBz2","date":"1701422613","viewed":37,"name":"View from spaceship","username":"ndrrk","description":"円形以外の作り方がわからなかったのですが、ハイライトの形を一直線型にして地平線に見立て、宇宙船の窓から見える景色を作りました。","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n\n    uv -= vec2(0.5, 0.5) * iResolution.xy;\n    \n    vec3 col = vec3(0.4,0.4,0.5);\n    \n    float r = 300.0;\n    if(uv.x * uv.x + uv.y * uv.y < r * r ){\n        float z = sqrt(r * r - uv.x * uv.x - uv.y * uv.y);\n        vec3 normal = normalize(vec3(uv.x, uv.y, z));\n        vec3 light = normalize(vec3(0,1.0,0));\n        float diffuse = clamp(dot(normal, light),1.0,1.0);\n        float I = diffuse * 0.7 + 0.3;\n        \n        vec3 d = vec3(0,1.0,0);\n        vec3 reflection = reflect(d, normal);\n        \n        col = vec3(0., 0.1, 0.3) * I +\n            vec3(0, 1.0, 1.0)*pow(clamp(dot(reflection, light), 0.0, 1.0), 10.0);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}