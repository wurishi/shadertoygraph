{"ver":"0.1","info":{"id":"cdlyWS","date":"1687258183","viewed":55,"name":"aerstnnar.,","username":"HaleyHalcyon","description":"aaeaaaee","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["eaaaaaaa"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float TURN = 2. * acos(-1.);\n#define HEX(x) vec3((ivec3(x) >> ivec3(16, 8, 0)) & 255) / 255.\n#define ROT(x) mat2x2(cos(TURN * (x + vec4(0, -0.25, 0.25, 0))))\n// hexagons\n/*\n#define SQRT3 (1.7320508)\nfloat shapeByZPos(float z, vec2 uv, float t) {\n    uv *= ROT(sin(z) + 0.3333333 * z);\n    float diag = dot(abs(uv), vec2(1., SQRT3));\n    float orth = abs(uv.x * 2.);\n    float dist = 2.0 + 0.8 * sin(TURN * (z * 0.2 - t * 2.));\n    float radius = (max(orth, diag) + 0.1) * z;\n    return step(\n        dist - radius,\n        0.0\n    );\n}\n//*/\n// stars\nfloat shapeByZPos(float z, vec2 uv, float t) {\n    uv *= z;\n    uv *= ROT((sin(z) * 2. / 5.) + (z / 5.));\n    float size = 0.5 + 0.3 * sin(TURN * (z * 0.2 - t * 2.));\n    float v = -3.;\n    for (float i = 0.; i < 5.; i++) {\n        vec2 uv2 = uv * ROT(i/5.);\n        v += step(\n            uv2.y + 0.25 * abs(uv2.x)\n            , size\n        );\n    }\n    return step(v, 0.);\n}\n\n\nvec3 colorByTime(float x){\n    \n    const int colorCount = 8;\n    vec3[] c = vec3[](\n        vec3(0),\n        HEX(0xe020c0),\n        HEX(0xf0e040),\n        HEX(0xc0ff80),\n        vec3(1),\n        HEX(0xa0ffe0),\n        HEX(0x7080F0),\n        HEX(0x8000a0)\n    );\n    /*\n    const int colorCount = 4;\n    vec3[] c = vec3[](\n        HEX(0x009BE8),\n        HEX(0xEB0072),\n        HEX(0xfff100),\n        HEX(0x010a31)\n    );\n    //*/\n    int lo = int(floor(x));\n    \n    return mix(\n        c[lo % colorCount],\n        c[(lo + 1) % colorCount],\n        smoothstep(0.95, 1., fract(x))\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = fract(iTime / 15.);\n    vec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    \n    float startColor = floor(t * 8.);\n    float layerT = fract(t * 8.);\n    vec3 col = colorByTime(0.);\n    for (float layer = 24.; layer > 0.; layer--) {\n        vec3 layerCol = colorByTime(layer + startColor);\n        col = mix(\n            col, layerCol,\n            shapeByZPos(0.75 * (layer - layerT), uv, t)\n        );\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}