{"ver":"0.1","info":{"id":"MdGBDd","date":"1531033130","viewed":124,"name":"Chroma Visualization","username":"Firzen_","description":"Experimenting with visualizations","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["visualization","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xd2Szd","filepath":"https://soundcloud.com/pcb94/funkaliciousshortfunk","previewfilepath":"https://soundcloud.com/pcb94/funkaliciousshortfunk","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi (acos(-1.))\n\nconst float scale = 10.;\nconst float steps = 5.;\n\nfloat func(float x,float t)\n{\n    float u = t;\n    return (sin(x*57.+u)+sin(x*59.+u*1.1)+x*13.313)*.8;\n}\n\nfloat blip(vec2 uv, float t)\n{\n    return 10.*step(fract(func(uv.x, t)),0.1f); //sin(100.*uv.x)+sin(10.*uv.x + t+floor(20.*uv.y/pi)*step(sin(100.*uv.y),0.));\n}\n\nfloat func(vec2 uv, float t)\n{\n    return func(uv.x + 8.5463*uv.y, t);\n}\n\nfloat stepFunc(vec2 uv, float t)\n{\n    float f = fract(func(vec2(\n        uv.x*.5,\n        floor(uv.y*10.)\n    ), t));\n    return 5.*step(.85,f)*step(.3,fract(uv.y*10.+.15));\n}\n\nvec3 color(float i, vec2 uv, float t)\n{\n    float f = texture(iChannel0, vec2(uv.x,0.)).r*0.5;\n    float sf = scale*i*f/iResolution.y;\n    return vec3(stepFunc(uv-vec2(0,sf),t),stepFunc(uv,t),stepFunc(uv+vec2(0,sf),t))/steps;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float f = texture(iChannel0, vec2(0.005,0.)).r*0.5;\n    float t = 3.*(iTime+f);\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(0.);\n    for(float i=0.; i<steps; i++)\n    {\n        float sf = scale*i*f/iResolution.y;\n        col += color(i, uv, t)/steps;\n    }\n    \n    float h = texture(iChannel0, uv).r;\n    if(uv.y+0.2<h)\n        col = vec3(1.)-col;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}