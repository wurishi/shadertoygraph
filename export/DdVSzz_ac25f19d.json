{"ver":"0.1","info":{"id":"DdVSzz","date":"1680650599","viewed":71,"name":"Mandelbrot fractal like another ","username":"Virg","description":"just mandelbrot fractal i made","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv-=0.5;\n    \n    \n    \n    \n    float rel = 800./450.;\n    vec2 ext = vec2(800.,450.);\n    float lineWidth = 0.5; // in pixels\n    vec2 stepout = vec2(1.,0.);\n    float mult = 2.;\n    float iter = 50.;\n    \n    uv.x *= rel;\n    uv *= mult;\n    uv -= stepout;\n    \n    if(abs(uv.x) < mult*(lineWidth/ext.x*rel) || abs(uv.y) < mult*(lineWidth/ext.y)){\n        fragColor = vec4(vec3(0),1.0);\n        return;\n    }\n    \n\n    // Time varying pixel color\n    \n    \n    float x = uv.x;\n    float y = uv.y;\n    \n    float re = x;\n    float im = y;\n    \n    float cRe = x;\n    float cIm = y;\n\n\n    bool flag = true;\n    \n    float brighting = 0.;\n    \n    for(int i = 0;float(i)<iter;i++){\n        if(sqrt(re*re+im*im)>2.){\n            flag = false;\n            break;\n        }\n        brighting = brighting + 1./iter;\n        \n        float rec = re*re - im*im + cRe;\n        float imc = 2.*re*im + cIm;\n        \n        im = imc;\n        re = rec;\n        \n        \n    }\n    if(true){\n        //vec3 col = vec3(\n        //0.5 + 0.5*cos(iTime+brighting),\n        //0.5 + 0.5*cos(iTime*1.2+brighting),\n        //0.5 + 0.5*sin(iTime+brighting)\n        //);\n        //fragColor = vec4(col*brighting,1.0);\n        fragColor = vec4(vec3(1.-brighting), 1.0);\n    \n    }\n\n    // Output to screen\n    \n}","name":"Image","description":"","type":"image"}]}