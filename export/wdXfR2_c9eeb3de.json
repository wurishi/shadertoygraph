{"ver":"0.1","info":{"id":"wdXfR2","date":"1588620903","viewed":81,"name":"Journey to ?","username":"Maxice","description":"gyroid test based on art of code youtube video","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gyroid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"///////////Gyroid based on art of code tut\n#define MAX_STEPS 100\n#define MAX_DIST 100.\n#define SURF_DIST .01\nfloat t,g=0.;\n\nmat2 rot (float a)\n\t{return mat2(cos(a),sin(a),-sin(a),cos(a));} \n\nfloat\tgyroid (vec3 p,float s){\n    \tp *=s;\n    \tfloat d = abs(dot (sin(p*0.9),cos(p.zxy*1.02))+1.7+(sin(t*.3)*.2))/(s*2.)-.03;\n    \treturn d;\n    }\n\n\nfloat sdf(vec3 p) {\n    p.xy *= rot (p.z*.35);\n\tp.z +=t*.5;\t\t\t\t\t\t//move forward\n   \tfloat d1 = gyroid(p,8.);\t\n \tg += 0.1/(0.1+d1*d1*114.);\t\t//add glow \n \treturn d1;\n}\n\nfloat RayMarch(vec3 ro, vec3 rd) {\n\tfloat dO=0.;\n    \n    for(int i=0; i<MAX_STEPS; i++) {\n    \tvec3 p = ro + rd*dO;\n        float dS = sdf(p);\n        dO += dS*0.8;\n        if(dO>MAX_DIST || dS<SURF_DIST) break;\n    }\n    \n    return dO;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tt = mod(iTime,400.);\t\t\t//stop time getting to big\n    vec3 col = vec3(0.);\n  \n    vec3 ro = vec3(.2, 0.1, -3.);\n    vec3 rd = normalize(vec3(uv.x, uv.y, (sin(t*.66)+1.)*.4)+.2);\n\n    float d = RayMarch(ro, rd);\n    \n    vec3 p = ro + rd * d;\n    float fog = length (ro-p);\n  \n    col =clamp (vec3(1.-p.z,p.y*.6,p.z+2.),0.,1.);\n    col = mix(col,vec3(.1,.12,.3),1.-exp(-0.06*fog*fog));  //fog col\n    col += g*.008*(p.z+2.);\t\t//add glow more glow in dist\t\t\n    col = pow( col, vec3(0.4545) );\t\t//gamma\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}