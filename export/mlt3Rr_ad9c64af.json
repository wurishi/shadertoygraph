{"ver":"0.1","info":{"id":"mlt3Rr","date":"1681898277","viewed":162,"name":"Noise in a spiral","username":"m1el","description":"A very simple shader that draws noise with a spiral form.\nThere's a boundary artifact along the spiral line, but it's hidden by the moving noise.","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["2d","simple","spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// dedicated to public domain, alternatively CC0\n#define TAU 6.283185307179586\nmat2 rot(float a) {\n    return mat2(\n        cos(a), -sin(a),\n        sin(a), cos(a)\n    );\n}\nvec3 vivid(vec3 c, float x) {\n    vec3 center = vec3(c.x+c.y+c.z) / 3.0;\n    vec3 delta = c - center;\n    c += delta * x;\n    c = clamp(c, 0.0, 1.0);\n    return c;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy / 2.0;\n    float t = -iTime /20.0;\n    vec2 uv = (fragCoord - center)/length(iResolution.xy);\n    float r = length(uv);\n    float a = mod(atan(uv.y, uv.x) + 5.*log(r) + t + TAU, TAU)*2.0;\n    uv = vec2(log(r) + t*2.0, a)/20.0;\n    vec3 col = vec3(\n        texture(iChannel0, uv).x,\n        texture(iChannel0, uv+vec2(0.5+0.1*t*sqrt(TAU), 0.0)).x,\n        texture(iChannel0, uv+vec2(0.0, 0.5+0.2*t/sqrt(TAU))).x\n    );\n    //col = vec3(step(uv.y, 0.1));\n    col = vivid(col, 0.8);\n    col = pow(col, vec3(0.48));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}