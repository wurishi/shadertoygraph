{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const float soft = 0.01;\nconst float lineWidth = 0.03;\nconst float pointWidth = 0.11;\n\nconst vec3 backgroundColor = vec3(0.05);\nconst vec3 gridColor = vec3(0.0, 0.0, 0.6);\nconst vec3 lineColor = vec3(0.2, 0.2, 1.0);\nconst vec3 pointColor = vec3(0.8, 0.9, 1.0);\nconst vec3 highlightColor = vec3(0.0, 0.0, 1.0);\n\n// define the visible area\n// - padding to match the screen-ratio might be added...\nconst vec2 bot = vec2(-4,-4);\nconst vec2 top = vec2(4,4);\n\nvec2 calcProjPoint(vec2 a, vec2 b, vec2 c)\n{\n    float d = dot(b - a, c - a) / length(b - a);\n    d /= length(b - a);\n    return a + d * (b - a);\n}\n\nvec3 drawDot(vec3 col, vec2 coord, vec2 p, float thickness)\n{\n    float dst = distance(coord, p);\n    dst = 1.0 - smoothstep(thickness - soft, thickness + soft, dst);\n    return mix(col, pointColor, dst);\n}\n\nvec3 drawDotAnimated(vec3 col, vec2 coord, vec2 p, float thickness)\n{\n    float dst = distance(coord, p);\n    float inside = dst;\n    dst = 1.0 - smoothstep(thickness - soft, thickness + soft, dst);\n    inside = inside / (thickness + soft)+ iTime * 0.5;\n    \n    vec3 color = mix(pointColor, highlightColor, sin(radians(inside*360.0))*0.5 + 0.5);\n    return mix(col, color, dst);\n}\n\nvec3 drawLine(vec3 col, vec2 coord, vec2 p1, vec2 p2, float thickness)\n{\n    float d = dot(coord - p1, p2 - p1) / length(p2 - p1);\n    d /= length(p2 - p1);\n    d = clamp(step(0.0, d) * d, 0.0, 1.0);\n    d = distance(p1 + d * (p2 - p1), coord);\n    \n    float dst = 1.0 - smoothstep(thickness - soft, thickness + soft, d);\n    \n    return mix(col, lineColor, dst);\n}\n\nvec3 drawLineDashed(vec3 col, vec2 coord, vec2 p1, vec2 p2, float thickness, float strips)\n{\n    float lenLine = length(p2 - p1);\n    float d = dot(coord - p1, p2 - p1) / lenLine;\n    d /= lenLine;\n    float seg = clamp(d, 0.0, 1.0);\n    \n    d = clamp(step(0.0, d) * d, 0.0, 1.0);\n    d = distance(p1 + d * (p2 - p1), coord);\n    \n    float dst = 1.0 - smoothstep(thickness - soft, thickness + soft, d);\n\n    float relLinePos = distance(coord, p1) / lenLine * dst;\n    \n    float pattern = step(0.5, mod((seg * strips - 0.25 - iTime), 1.0));\n    dst *= pattern;\n    \n    vec3 color = mix(pointColor, highlightColor, seg);\n    return mix(col, color, dst);\n}\n\nvec3 drawGrid(vec3 col, vec2 coord)\n{\n    float factor = distance(coord - 0.5, floor(coord)) + 0.25;\n    float anim = (sin(iTime * 2.0) * 0.5 + 0.5);\n    anim = anim * 0.4 + 0.6;\n    factor = pow(factor, 8.0 * anim);\n    return mix(col, gridColor, factor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 area = top - bot;\n    \n    float ratioScreen = iResolution.x/ iResolution.y;\n    float ratioArea = area.x / area.y;\n    \n    vec2 padding = vec2(ratioScreen / ratioArea, ratioArea /ratioScreen);\n    padding = max(vec2(0.0), area * padding - area);\n\n    area += padding;\n    vec2 coord = uv * area + bot - (padding * 0.5);\n\n    vec2 a = vec2(0,0);\n\tvec2 b = vec2(bot.x - (padding.x * 0.5),0);\n    \n    vec2 c = (iMouse.xy/ iResolution.xy)* area + bot - (padding * 0.5);\n\n    if (c.x > 0.0)\n    {\n\t\tb.x += area.x;\n    }\n    \n    vec2 d = calcProjPoint(a, b, c);\n    \n    vec3 col = backgroundColor;\n    \n    col = drawGrid(col, coord);\n\n    col = drawLine(col, coord, a, b, lineWidth);\n    col = drawLine(col, coord, a, c, lineWidth);\n    \n    col = drawLineDashed(col, coord, c, d, 0.03, 2.0);\n\n    col = drawDot(col, coord, a, pointWidth);\n    col = drawDot(col, coord, b, pointWidth);\n    col = drawDot(col, coord, c, pointWidth);\n\n    col = drawDotAnimated(col, coord, d, 0.14);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XlfGDj","date":"1425048006","viewed":301,"name":"Line intersection interactive","username":"the23","description":"click on the canvas to set the second point","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","line"],"hasliked":0,"parentid":"","parentname":""}}