{"ver":"0.1","info":{"id":"clVXDK","date":"1686362995","viewed":45,"name":"Morango com Banana - Variações","username":"davidmachadosf","description":"experience","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float vRotation  =   .2;\nconst float vZoom      =   .1;\nconst float scaleZoom  = 20. ;\nconst float complexity = 15. ;\n\n\nconst vec3 a = vec3(  .698,   .658,   .218); // bgcolor\nconst vec3 b = vec3(  .051,   .453,   .050); \n\nconst vec3 c = vec3(-0.552,  5.361, -0.764);\nconst vec3 d = vec3(-0.503, -0.503,  8.113);\n\n\nvec3 palette( float t ) {\n    return a + b*cos( 1.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    \n    float zoom = 1.0 + scaleZoom*sin(vZoom*iTime);\n    uv /= zoom;\n    \n    float cameraRotation = vRotation*iTime;\n    float cs = cos(cameraRotation);\n    float sn = sin(cameraRotation);\n    uv *= mat2(cs, -sn, sn, cs);\n    \n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    for (float i=0.; i<complexity; i++) {\n        \n        float angle = 7.0 * 3.14159 * (i / 7.);\n        float s = sin(angle);\n        float c = cos(angle);\n        \n        mat2 m = mat2(c, -s * 1.5, .5*s, c);\n        uv *= m;\n        uv = fract(1.5*uv) - .5;\n        \n        float d = length(uv) * exp(-length(uv0));\n        \n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n        d = pow(0.01 / d, 1.2);\n        \n        vec3 col = palette(length(uv0) + .4*i + .2*iTime);\n        finalColor += col*d;\n    }  \n\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}