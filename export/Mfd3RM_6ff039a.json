{"ver":"0.1","info":{"id":"Mfd3RM","date":"1711520574","viewed":71,"name":"simple 4Points QuadMapping","username":"shiyuugo","description":"simple 4Points QuadMapping\n\nreference:\nhttps://www.shadertoy.com/view/4sVSWz\nhttps://www.shadertoy.com/view/Xd3SR8","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mapping","warper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// 4Points QuadMapping\n// reference:\n// https://www.shadertoy.com/view/4sVSWz\n// https://www.shadertoy.com/view/Xd3SR8\n\nfloat ccross(in vec2 a, in vec2 b) { return a.x * b.y - a.y * b.x; }\nvec2 invBilinear(vec2 p, vec2 a, vec2 b, vec2 c, vec2 d)\n{\n    vec2 e = b-a;\n    vec2 f = d-a;\n    vec2 g = a-b + c-d;\n    vec2 h = p-a;\n    float k2 = ccross(g, f);\n    float k1 = ccross(e, f) + ccross(h, g);\n    float k0 = ccross(h, e);\n    if (k2 == 0.0)k2 = 0.001; // to avoid zero\n    // if(k0==0.) k0 =0.001; // not need..?\n    \n    float w = k1 * k1 - 4.0 * k0 * k2;\n    if (w < 0.0)return vec2(-1.0);\n    w = sqrt(w);\n    \n    float v1 = (-k1 - w) / (2.0 * k2);\n    float v2 = (-k1 + w) / (2.0 * k2);\n    float u1 = (h.x - f.x * v1) / (e.x + g.x * v1);\n    float u2 = (h.x - f.x * v2) / (e.x + g.x * v2);\n    bool b1 = v1 > 0.0 && v1 < 1.0 && u1 > 0.0 && u1 < 1.0;\n    bool b2 = v2 > 0.0 && v2 < 1.0 && u2 > 0.0 && u2 < 1.0;\n    \n    vec2 res = vec2(-1.0);\n    if (b1 && ! b2)res = vec2(u1, v1);\n    if (!b1 && b2)res = vec2(u2, v2);\n    \n    return res;\n}\n\nconst vec3 V = vec3(1, - 1, 0);\nvec2 offsetLB = V.zz;\nvec2 offsetRB = V.zz;\nvec2 offsetRT = V.zz;\nvec2 offsetLT = V.zz;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 p = fragCoord.xy / iResolution.xy;\n    \n    // Example\n    offsetLB = vec2(0.1,0.15);\n    offsetRB = vec2(0.2,0.1);\n    offsetRT = vec2(0.1,0.1);\n    offsetLT = vec2(0.2,0.15);\n    \n    \n    vec2 LB = V.zz + V.xx * offsetLB;\n    vec2 RB = V.xz + V.yx * offsetRB;\n    vec2 RT = V.xx + V.yy * offsetRT;\n    vec2 LT = V.zx + V.xy * offsetLT;\n    vec2 uv = invBilinear(p, LB, RB, RT, LT);\n    \n    vec3 col = vec3(0.0);\n    if (-0.5 < uv.x)col = texture(iChannel0 , uv).rgb;\n    \n    // col = vec3(uv.x, uv.y, 0.0); // uv map\n    fragColor = vec4(col , 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}