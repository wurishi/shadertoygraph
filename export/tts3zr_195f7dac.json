{"ver":"0.1","info":{"id":"tts3zr","date":"1555543714","viewed":126,"name":"Desert phenom.","username":"gyabo","description":"I saw desert on dreaming. My brain got the hazy...","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define resolution iResolution\n#define time iTime\n\n\nconst float FR = 0.2;\nconst float FRS = FR * 123.0;\n\nfloat map(vec3 p) {\n\tfloat t = 10.0 + dot(p, vec3(0, 1, 0)) + sin(p.x * FR + sin(p.z * 0.02) * 50.1) + sin(p.z * FR);\n\tfloat tu = 5000.0 + dot(p, vec3(0, -1, 0));\n\tt = min(t, tu);\n\tt = min(t, length(p + vec3(4200, -4000.0, -5000.0)) - 1500.0);\n\tt = min(t, length(p + vec3(-7000, -3500.0, -7000.0)) - 150.0);\n\treturn t;\n}\n\nvec3 getnor(vec3 p) {\n\tvec2 d = vec2(0.001, 0.0);\n\tfloat t = map(p);\n\treturn normalize(vec3(\n\t\tt - map(p + d.xyy),\n\t\tt - map(p + d.yxy),\n\t\tt - map(p + d.yyx)));\n}\n\nfloat rand(float n){return fract(sin(n) * 43758.5453123);}\n\nvec2 rot(vec2 p, float a) {\n    return vec2(\n        cos(a) * p.x - sin(a) * p.y,\n        sin(a) * p.x + cos(a) * p.y);\n}\n\nvec4 getcolor(vec2 uv, vec2 a) {\n\tvec3 dir = normalize(vec3(uv + a, 1.0));\n    dir.yz = rot(dir.yz, 0.25 * (cos(0.15 * time)));\n    \n\tvec3 pos = vec3(5, 10, sin(time) + 50.0 + rand(uv.x + dir.z * FRS) * rand(uv.y + dir.z * FRS));\n\tfloat t = 0.0;\n\tfor(int i = 0; i < 100; i++) {\n\t    float k = map(dir * t + pos);\n\t    if(k < 0.1) break;\n\t\tt += k;\n\t}\n\tvec3 ip = dir * t + pos;\n\tvec3 N = getnor(ip);\n\tvec3 col = vec3(0.0);\n\tconst vec3 cnear = vec3(2.0, 1.2, 0.5);\n\tconst vec3 cfar = cnear.zyx;\n\tcol += mix(cfar, cnear, min(1.0, t));\n\tcol *= max(0.025, dot(normalize(vec3(2,-0.5,0.2)), N)) * vec3(1.5, 0.7, 0.8);\n\tcol += (cfar * 0.1) * sqrt(t) * 0.04;\n\tcol = pow(col, vec3(1.0 / 2.2));\n\treturn vec4(col, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec4 col = vec4(0.0);\n    vec2 uv = ( 2.0 * fragCoord.xy - resolution.xy ) / min(resolution.x, resolution.y);\n    vec2 a = vec2(0.0125 * length(uv * 0.5), 0.0);\n    col += getcolor(uv, vec2(a.xy));\n    col += getcolor(uv, vec2(a.yx));\n    col += getcolor(uv, vec2(-a.xy));\n    col += getcolor(uv, vec2(-a.yx));\n    col /= vec4(4.0);\n    fragColor = col;\n}\n","name":"Image","description":"","type":"image"}]}