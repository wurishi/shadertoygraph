{"ver":"0.1","info":{"id":"lsscDM","date":"1488574679","viewed":226,"name":"FM random music test tatmos","username":"tatmos","description":"FM random music test tatmos","likes":4,"published":1,"flags":8,"usePreview":0,"tags":["music","tatmos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n#define A 0.0\n#define B 2.0\n#define C 3.0\n#define D 5.0\n#define E 7.0\n#define F 8.0\n#define G 10.0\n\n//================================================\n// Utils\n//================================================\n\nfloat rand(vec2 co)\n{\n\treturn fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat calcHertz(float scale)\n{\n    return 441.0 * pow(2.0, scale / 12.0) * PI;\n}\n\nfloat calcHertz(float octave, float note)\n{\n    return calcHertz(octave * 12.0 + note);\n}\nfloat rect(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.5);\n}\nfloat rect2(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.25);\n}\nfloat rect3(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.125);\n}\n\nfloat eg(float time,float gate)\n{\n    return  exp(-gate*(time));\n}\n\n//================================================\n// Sound\n//================================================\n#define Sin1(u, v) sound += clamp(sin(time * calcHertz(u, v)) * (1.0 - localTime2 + sin(time * 80.0) * 0.1), -0.3, 0.3);\n#define Rect1(u, v, l) sound += rect(time * calcHertz(u, v)) * l;\n#define Rect2(u, v, l) sound += rect2(time * calcHertz(u, v)) * l;\n#define Rect3(u, v, l) sound += rect3(time * calcHertz(u, v)) * l;\n#define BD_Rect1(u, v, l) sound += rect(time * calcHertz(u, v +  eg( localTime2,2.0) )) * l;\n\nfloat Piano(float o, float n, float g, float time,float localTime2)\n{\n    float op0 = sin(0.50* calcHertz(o, n)*time) * g;\n    op0 = sin(30.8*op0);\t//FB\n    \n    float op1 = sin(1.14*op0)* g;\n    float op2 = sin(1.5*calcHertz(o, n)*time)* g;\n    op2 = sin(4.8*op2);\t//FB\n    \n    float op3 = sin(6.14*op2) * g;\n    \n    return (  \n        op1* 0.5 \n        + op3* 0.5 \n        );\n}\n\nfloat Scale(float n)\n{\n    if(n == C ||\n       n == D ||\n       n == F ||\n       n == G ||\n       n == A )\n    {\n        \n    } else {\n      n=1.0;  \n    }\n    \n\treturn n;\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    float localTime = mod(time*0.5 , 64.0);\n    \n    \n    vec2 sound = vec2(0.0);\n        \n    float bass = C;\n    \n    if(localTime > 32.)\n    {\n         bass = F;\n    }\n    \n    {        \n        float localTime2 = mod(localTime , 1.0);\n        \n         if(localTime > 32.)\n        {\n            localTime2 = mod(localTime*8. , 1.0);\n        }\n        \n        float gate = floor(rand(vec2(floor(localTime*10.0/8.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 1.)\n        {\n        sound += 0.25*Piano(0.0, \n                       bass + Scale( floor(localTime*10.0/8.0)) ,\n                                      eg(localTime2,1.750),\n                                      time,\n                                 localTime2);\n        }\n    }\n   \n    {      \n        float gate = floor(rand(vec2(floor(localTime*10.0/7.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 2.)\n        {           \n            float localTime2 = mod(localTime*2.0 , 1.0);\n            sound += 0.25*Piano(1.0, \n                           bass + Scale(floor(rand(vec2(floor(localTime*10.0/8.0),floor(localTime*10.0/8.0)))*10.0)) ,\n                           eg(localTime2,0.1),\n                           time,\n                           localTime2);\n        }\n    }\n   \n    {\n        float gate = floor(rand(vec2(floor(localTime*10.0/6.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 3.)\n        {\n        float localTime2 = mod(localTime*2.0 , 1.0);\n        sound.y += 0.25*Piano(1.0, \n                       bass + Scale(floor(rand(vec2(floor(localTime*7.0/8.0),floor(localTime*9.0/8.0)))*10.0)) ,\n                       eg(localTime2,1.0),\n                       time,\n                       localTime2);\n        }\n    }\n    \n           \n     {     \n        float gate = floor(rand(vec2(floor(localTime*10.0/5.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 4.)\n        {\n        float localTime2 = mod(localTime*0.50 , 1.0);\n        sound.y += 0.25*Piano(2.0, \n                       bass + Scale(floor(rand(vec2(floor(localTime*7.0/8.0),floor(localTime*9.0/8.0)))*10.0)) ,\n                       eg(localTime2,2.0),\n                       time,\n                       localTime2);\n        }\n    }\n   \n    \n    return vec2(sound.x*0.71,sound.y*0.71);\n               \n}\n\nfloat rand(float a, float b)\n{\n    return fract(sin(dot(vec2(a, b) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 pos =fragCoord.xy / iResolution.xy - vec2(1.0,0.5);\n\t\n\tvec3 color = vec3(0, 0, 0);\n    float time = iTime;\n\t\n\tfor(int i = 0; i < 80; i++)\n\t{\n\t\tfloat fi = float(i);\n\t\tfloat len = 1.8 * mainSound( in int samp,iTime - fi*0.0126).x;\n\t\tvec2 p = pos +  vec2(fi * 0.01, len*1.00) ;\n\t\tfloat intencity = pow(0.003 / length(p), 1.0);\n\t\tcolor +=  intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n\t}\n\n\tfragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"#define PI 3.1415926535\n#define A 0.0\n#define B 2.0\n#define C 3.0\n#define D 5.0\n#define E 7.0\n#define F 8.0\n#define G 10.0\n\n//================================================\n// Utils\n//================================================\n\nfloat rand(vec2 co)\n{\n\treturn fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat calcHertz(float scale)\n{\n    return 441.0 * pow(2.0, scale / 12.0) * PI;\n}\n\nfloat calcHertz(float octave, float note)\n{\n    return calcHertz(octave * 12.0 + note);\n}\nfloat rect(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.5);\n}\nfloat rect2(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.25);\n}\nfloat rect3(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.125);\n}\n\nfloat eg(float time,float gate)\n{\n    return  exp(-gate*(time));\n}\n\n//================================================\n// Sound\n//================================================\n#define Sin1(u, v) sound += clamp(sin(time * calcHertz(u, v)) * (1.0 - localTime2 + sin(time * 80.0) * 0.1), -0.3, 0.3);\n#define Rect1(u, v, l) sound += rect(time * calcHertz(u, v)) * l;\n#define Rect2(u, v, l) sound += rect2(time * calcHertz(u, v)) * l;\n#define Rect3(u, v, l) sound += rect3(time * calcHertz(u, v)) * l;\n#define BD_Rect1(u, v, l) sound += rect(time * calcHertz(u, v +  eg( localTime2,2.0) )) * l;\n\nfloat Piano(float o, float n, float g, float time,float localTime2)\n{\n    float op0 = sin(0.50* calcHertz(o, n)*time) * g;\n    op0 = sin(30.8*op0);\t//FB\n    \n    float op1 = sin(1.14*op0)* g;\n    float op2 = sin(1.5*calcHertz(o, n)*time)* g;\n    op2 = sin(4.8*op2);\t//FB\n    \n    float op3 = sin(6.14*op2) * g;\n    \n    return (  \n        op1* 0.5 \n        + op3* 0.5 \n        );\n}\n\nfloat Scale(float n)\n{\n    if(n == C ||\n       n == D ||\n       n == F ||\n       n == G ||\n       n == A )\n    {\n        \n    } else {\n      n=1.0;  \n    }\n    \n\treturn n;\n}\n\nvec2 mainSound( in int samp, float time )\n{\n    float localTime = mod(time*0.5 , 64.0);\n    \n    \n    vec2 sound = vec2(0.0);\n        \n    float bass = C;\n    \n    if(localTime > 32.)\n    {\n         bass = F;\n    }\n    \n    {        \n        float localTime2 = mod(localTime , 1.0);\n        \n         if(localTime > 32.)\n        {\n            localTime2 = mod(localTime*8. , 1.0);\n        }\n        \n        float gate = floor(rand(vec2(floor(localTime*10.0/8.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 1.)\n        {\n        sound += 0.25*Piano(0.0, \n                       bass + Scale( floor(localTime*10.0/8.0)) ,\n                                      eg(localTime2,1.750),\n                                      time,\n                                 localTime2);\n        }\n    }\n   \n    {      \n        float gate = floor(rand(vec2(floor(localTime*10.0/7.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 2.)\n        {           \n            float localTime2 = mod(localTime*2.0 , 1.0);\n            sound += 0.25*Piano(1.0, \n                           bass + Scale(floor(rand(vec2(floor(localTime*10.0/8.0),floor(localTime*10.0/8.0)))*10.0)) ,\n                           eg(localTime2,0.1),\n                           time,\n                           localTime2);\n        }\n    }\n   \n    {\n        float gate = floor(rand(vec2(floor(localTime*10.0/6.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 3.)\n        {\n        float localTime2 = mod(localTime*2.0 , 1.0);\n        sound.y += 0.25*Piano(1.0, \n                       bass + Scale(floor(rand(vec2(floor(localTime*7.0/8.0),floor(localTime*9.0/8.0)))*10.0)) ,\n                       eg(localTime2,1.0),\n                       time,\n                       localTime2);\n        }\n    }\n    \n           \n     {     \n        float gate = floor(rand(vec2(floor(localTime*10.0/5.0),floor(localTime*10.0/8.0)))*10.0);\n        if(gate > 4.)\n        {\n        float localTime2 = mod(localTime*0.50 , 1.0);\n        sound.y += 0.25*Piano(2.0, \n                       bass + Scale(floor(rand(vec2(floor(localTime*7.0/8.0),floor(localTime*9.0/8.0)))*10.0)) ,\n                       eg(localTime2,2.0),\n                       time,\n                       localTime2);\n        }\n    }\n   \n    \n    return vec2(sound.x*0.71,sound.y*0.71);\n               \n}","name":"Sound","description":"","type":"sound"}]}