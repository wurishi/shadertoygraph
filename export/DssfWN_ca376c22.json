{"ver":"0.1","info":{"id":"DssfWN","date":"1688749841","viewed":62,"name":"vornoi cells","username":"cold_tea","description":"a vornoi tiling based on local coordinates, based on this tutorial https://www.youtube.com/watch?v=l-07BXzNdPw\nmouse x position controls the scale, mouse y position controls the movement speed ","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["vornoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash22(vec2 p){\n    vec3 a = fract(p.xyx*vec3(123.45, 321.54, 789.654));\n    a += dot(a, a + 34.56);\n    return fract(vec2(a.x*a.y, a.x*a.z));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    uv *= iMouse.x == 0.? 3.: iMouse.x/iResolution.x * 20.;\n    float freq = iMouse.y == 0.? iTime: iMouse.y*iTime/iResolution.y * 10.;\n\n    vec2 localUV = fract(uv);\n    vec2 localCell = floor(uv);\n    vec2 localDotPos = localUV - (.5+.5*sin(freq * hash22(localCell)));\n    float localDot = smoothstep(.01, .0, length(localDotPos)- .1);\n    \n    float closest = 100.;\n    for(float y=-1.;y<=1.;y++){\n        for(float x=-1.;x<=1.;x++){\n            vec2 offset = vec2(x,y);\n            vec2 dotPos = localUV - (.5+.5*sin(freq * hash22(localCell+ offset)) + offset);\n            float currentLength = length(dotPos);\n            closest = currentLength < closest? currentLength: closest;\n        }\n    }\n    \n    vec3 col = vec3(closest);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}