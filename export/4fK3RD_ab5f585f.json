{"ver":"0.1","info":{"id":"4fK3RD","date":"1712494486","viewed":58,"name":"median local tonemap","username":"googl4","description":"local tonemapping","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["tonemap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float px[9];\n    \n    int i = 0;\n    \n    for( int y = -1; y <= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec3 rgb = texture( iChannel0, ( fragCoord + vec2( x, y ) ) / iResolution.xy ).rgb;\n            float l = dot( rgb, vec3( 1, 1, 1 ) ) / 3.0;\n            px[i++] = l;\n        }\n    }\n\n    float fl = median9( px );\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 col = texture( iChannel1, uv ).rgb;\n    float l = dot( col, vec3( 1.0 / 3.0 ) );\n    \n    float gain = mix( 1.0, 0.5 / fl, 0.1 );\n    col = vec3( l * gain );\n\n    // Output to screen\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define SORT_PAIR( _type, _a, _b ) { \\\n    _type _tmp = min( _a, _b ); \\\n    _b = max( _a, _b ); \\\n    _a = _tmp; }\n\nfloat median9( float data[9] ) {\n    SORT_PAIR( float, data[0], data[3] )\n\tSORT_PAIR( float, data[1], data[7] )\n\tSORT_PAIR( float, data[2], data[5] )\n\tSORT_PAIR( float, data[4], data[8] )\n\n\tSORT_PAIR( float, data[0], data[7] )\n\tSORT_PAIR( float, data[2], data[4] )\n\tSORT_PAIR( float, data[3], data[8] )\n\tSORT_PAIR( float, data[5], data[6] )\n\n\tdata[2] = max( data[0], data[2] ); // SORT_PAIR( float, data[0], data[2] )\n\tSORT_PAIR( float, data[1], data[3] )\n\tSORT_PAIR( float, data[4], data[5] )\n\tdata[7] = min( data[7], data[8] ); // SORT_PAIR( float, data[7], data[8] )\n\n\tdata[4] = max( data[1], data[4] ); // SORT_PAIR( float, data[1], data[4] )\n\tdata[3] = min( data[3], data[6] ); // SORT_PAIR( float, data[3], data[6] )\n\tdata[5] = min( data[5], data[7] ); // SORT_PAIR( float, data[5], data[7] )\n\n\t//SORT_PAIR( float, data[0], data[1] )\n\tSORT_PAIR( float, data[2], data[4] )\n\tSORT_PAIR( float, data[3], data[5] )\n\t//SORT_PAIR( float, data[6], data[8] )\n\n\tdata[3] = max( data[2], data[3] ); // SORT_PAIR( float, data[2], data[3] )\n\tdata[4] = min( data[4], data[5] ); // SORT_PAIR( float, data[4], data[5] )\n\t//SORT_PAIR( float, data[6], data[7] )\n\n\t//SORT_PAIR( float, data[1], data[2] )\n\tdata[4] = max( data[3], data[4] ); // SORT_PAIR( float, data[3], data[4] )\n\t//SORT_PAIR( float, data[5], data[6] )\n    \n    return data[4];\n}\n\nfloat median_filter( sampler2D tex, vec2 fragCoord, vec3 iResolution ) {\n    float px[9];\n    \n    int i = 0;\n    \n    for( int y = -1; y <= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec3 rgb = texture( tex, ( fragCoord + vec2( x, y ) ) / iResolution.xy ).rgb;\n            float l = dot( rgb, vec3( 1, 1, 1 ) ) / 3.0;\n            px[i++] = l;\n        }\n    }\n\n    return median9( px );\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float fl = median_filter( iChannel0, fragCoord, iResolution );\n    vec3 col = vec3( fl );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float px[9];\n    \n    int i = 0;\n    \n    for( int y = -1; y <= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec3 rgb = texture( iChannel0, ( fragCoord + vec2( x, y ) ) / iResolution.xy ).rgb;\n            float l = dot( rgb, vec3( 1, 1, 1 ) ) / 3.0;\n            px[i++] = l;\n        }\n    }\n\n    float fl = median9( px );\n    vec3 col = vec3( fl );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float px[9];\n    \n    int i = 0;\n    \n    for( int y = -1; y <= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec3 rgb = texture( iChannel0, ( fragCoord + vec2( x, y ) ) / iResolution.xy ).rgb;\n            float l = dot( rgb, vec3( 1, 1, 1 ) ) / 3.0;\n            px[i++] = l;\n        }\n    }\n\n    float fl = median9( px );\n    vec3 col = vec3( fl );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float px[9];\n    \n    int i = 0;\n    \n    for( int y = -1; y <= 1; y++ ) {\n        for( int x = -1; x <= 1; x++ ) {\n            vec3 rgb = texture( iChannel0, ( fragCoord + vec2( x, y ) ) / iResolution.xy ).rgb;\n            float l = dot( rgb, vec3( 1, 1, 1 ) ) / 3.0;\n            px[i++] = l;\n        }\n    }\n\n    float fl = median9( px );\n    vec3 col = vec3( fl );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer D","description":"","type":"buffer"}]}