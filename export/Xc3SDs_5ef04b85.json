{"ver":"0.1","info":{"id":"Xc3SDs","date":"1714588809","viewed":94,"name":"Material Maker: Pixels export","username":"RodzLabs","description":"Export test using the new Pixels parameter type","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["generated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* Generated by Material Maker */\n\n#define SEED_VARIATION 0.0\n\n\n\nfloat dot2(vec2 x) {\n\treturn dot(x, x);\n}\n\nfloat rand(vec2 x) {\n    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(mod(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t      dot(x, vec2(3.4562, 17.398))), vec2(3.14, 3.14))) * 43758.5);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(mod(vec3(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)),\n                              dot(x, vec2(13.254, 5.867))), vec3(3.14, 3.14, 3.14))) * 43758.5);\n}\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat param_rnd(float minimum, float maximum, float seed) {\n\treturn minimum+(maximum-minimum)*rand(vec2(seed));\n}\n\nfloat param_rndi(float minimum, float maximum, float seed) {\n\treturn floor(param_rnd(minimum, maximum + 1.0, seed));\n}\n\nconst float p_o1703021649876_amount1 = 1.000000000;\nconst float p_o1046378194176_translate_x = 0.000000000;\nconst float p_o1046378194176_rotate = 0.000000000;\nconst float p_o1046378194176_scale_x = 0.200000000;\nconst float p_o1046378194176_scale_y = 0.200000000;\nconst vec4 p_o1046327862527_pixels_palette[8] = vec4[]( vec4(0.000000000, 0.000000000, 0.000000000, 0.000000000), vec4(0.000000000, 0.000000000, 0.000000000, 1.000000000), vec4(1.000000000, 1.000000000, 1.000000000, 1.000000000), vec4(1.000000000, 0.984375000, 0.000000000, 1.000000000), vec4(1.000000000, 0.585937500, 0.000000000, 1.000000000), vec4(0.996093750, 0.210113525, 0.000000000, 1.000000000), vec4(0.000000000, 0.000000000, 0.000000000, 1.000000000), vec4(0.000000000, 0.000000000, 0.000000000, 1.000000000) );\nconst int p_o1046327862527_pixels_pixels[29] = int[]( 0, 0, 0, 0, 37449, 459571200, 657, 306558664, 153354250, 170468059, 455681088, 134550673, 292332690, 308544146, 153466458, 426610697, 230087259, 697438784, 134255177, 765872420, 555745389, 19175716, 153354240, 1, 0, 0, 0, 0, 0 );\nconst float p_o3101268385777_repeat = 1.000000000;\nconst float p_o3101268385777_rotate = -90.000000000;\nconst float p_o3101268385777_gradient_pos[4] = float[]( 0.000000000, 0.241935477, 0.250000060, 1.000000000 );\nconst vec4 p_o3101268385777_gradient_col[4] = vec4[]( vec4(0.125000000, 1.000000000, 0.000000000, 1.000000000), vec4(0.000000000, 0.558593750, 0.061096191, 1.000000000), vec4(0.359375000, 0.624633789, 1.000000000, 1.000000000), vec4(0.000000000, 0.414062500, 1.000000000, 1.000000000) );\n\nvec3 blend_normal(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*c1 + (1.0-opacity)*c2;\n}\n\nvec3 blend_dissolve(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tif (rand(uv) < opacity) {\n\t\treturn c1;\n\t} else {\n\t\treturn c2;\n\t}\n}\n\nvec3 blend_multiply(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*c1*c2 + (1.0-opacity)*c2;\n}\n\nvec3 blend_screen(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*(1.0-(1.0-c1)*(1.0-c2)) + (1.0-opacity)*c2;\n}\n\nfloat blend_overlay_f(float c1, float c2) {\n\treturn (c1 < 0.5) ? (2.0*c1*c2) : (1.0-2.0*(1.0-c1)*(1.0-c2));\n}\n\nvec3 blend_overlay(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_overlay_f(c1.x, c2.x), blend_overlay_f(c1.y, c2.y), blend_overlay_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_hard_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*0.5*(c1*c2+blend_overlay(uv, c1, c2, 1.0)) + (1.0-opacity)*c2;\n}\n\nfloat blend_soft_light_f(float c1, float c2) {\n\treturn (c2 < 0.5) ? (2.0*c1*c2+c1*c1*(1.0-2.0*c2)) : 2.0*c1*(1.0-c2)+sqrt(c1)*(2.0*c2-1.0);\n}\n\nvec3 blend_soft_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_soft_light_f(c1.x, c2.x), blend_soft_light_f(c1.y, c2.y), blend_soft_light_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_burn_f(float c1, float c2) {\n\treturn (c1==0.0)?c1:max((1.0-((1.0-c2)/c1)),0.0);\n}\n\nvec3 blend_burn(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_burn_f(c1.x, c2.x), blend_burn_f(c1.y, c2.y), blend_burn_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_dodge_f(float c1, float c2) {\n\treturn (c1==1.0)?c1:min(c2/(1.0-c1),1.0);\n}\n\nvec3 blend_dodge(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_dodge_f(c1.x, c2.x), blend_dodge_f(c1.y, c2.y), blend_dodge_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_lighten(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*max(c1, c2) + (1.0-opacity)*c2;\n}\n\nvec3 blend_darken(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*min(c1, c2) + (1.0-opacity)*c2;\n}\n\nvec3 blend_difference(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*clamp(c2-c1, vec3(0.0), vec3(1.0)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_additive(vec2 uv, vec3 c1, vec3 c2, float oppacity) {\n\treturn c2 + c1 * oppacity;\n}\n\nvec3 blend_addsub(vec2 uv, vec3 c1, vec3 c2, float oppacity) {\n\treturn c2 + (c1 - .5) * 2.0 * oppacity;\n}vec3 rgb_to_hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv_to_rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nfloat blend_linear_light_f(float c1, float c2) {\n\treturn (c1 + 2.0 * c2) - 1.0;\n}\n\nvec3 blend_linear_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\nreturn opacity*vec3(blend_linear_light_f(c1.x, c2.x), blend_linear_light_f(c1.y, c2.y), blend_linear_light_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_vivid_light_f(float c1, float c2) {\n\treturn (c1 < 0.5) ? 1.0 - (1.0 - c2) / (2.0 * c1) : c2 / (2.0 * (1.0 - c1));\n}\n\nvec3 blend_vivid_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_vivid_light_f(c1.x, c2.x), blend_vivid_light_f(c1.y, c2.y), blend_vivid_light_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_pin_light_f( float c1, float c2) {\n\treturn (2.0 * c1 - 1.0 > c2) ? 2.0 * c1 - 1.0 : ((c1 < 0.5 * c2) ? 2.0 * c1 : c2);\n}\n\nvec3 blend_pin_light(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_pin_light_f(c1.x, c2.x), blend_pin_light_f(c1.y, c2.y), blend_pin_light_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_hard_mix_f(float c1, float c2) {\n\treturn floor(c1 + c2);\n}\n\nvec3 blend_hard_mix(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\t\treturn opacity*vec3(blend_hard_mix_f(c1.x, c2.x), blend_hard_mix_f(c1.y, c2.y), blend_hard_mix_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nfloat blend_exclusion_f(float c1, float c2) {\n\treturn c1 + c2 - 2.0 * c1 * c2;\n}\n\nvec3 blend_exclusion(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\treturn opacity*vec3(blend_exclusion_f(c1.x, c2.x), blend_exclusion_f(c1.y, c2.y), blend_exclusion_f(c1.z, c2.z)) + (1.0-opacity)*c2;\n}\n\nvec3 blend_hue(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tvec3 outcol = c2;\n\n\tvec3 hsv, hsv2, tmp;\n\thsv2 = rgb_to_hsv(c1);\n\n\tif (hsv2.y != 0.0) {\n\t\thsv = rgb_to_hsv(outcol);\n\t\thsv.x = hsv2.x;\n\t\ttmp = hsv_to_rgb(hsv);\n\t\toutcol = mix(outcol, tmp, opacity);\n\t}\n\treturn outcol;\n}\n\nvec3 blend_saturation(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tfloat facm = 1.0 - opacity;\n\n\tvec3 outcol = c2;\n\tvec3 hsv, hsv2;\n\n\thsv = rgb_to_hsv(outcol);\n\n\tif (hsv.y != 0.0) {\n\t\thsv2 = rgb_to_hsv(c1);\n\n\t\thsv.y = facm * hsv.y + opacity * hsv2.y;\n\t\toutcol = hsv_to_rgb(hsv);\n\t}\n\treturn outcol;\n}\n\nvec3 blend_color(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tfloat facm = 1.0 - opacity;\n\n\tvec3 outcol = c2;\n\n\tvec3 hsv, hsv2, tmp;\n\thsv2 = rgb_to_hsv(c1);\n\n\tif (hsv2.y != 0.0) {\n\t\thsv = rgb_to_hsv(outcol);\n\t\thsv.x = hsv2.x;\n\t\thsv.y = hsv2.y;\n\t\ttmp = hsv_to_rgb(hsv);\n\n\t\toutcol = mix(outcol, tmp, opacity);\n\t}\n\treturn outcol;\n}\n\nvec3 blend_value(vec2 uv, vec3 c1, vec3 c2, float opacity) {\n\tfloat facm = 1.0 - opacity;\n\n\tvec3 hsv, hsv2;\n\thsv = rgb_to_hsv(c2);\n\thsv2 = rgb_to_hsv(c1);\n\n\thsv.z = facm * hsv.z + opacity * hsv2.z;\n\treturn hsv_to_rgb(hsv);\n}vec2 transform2_clamp(vec2 uv) {\n\treturn clamp(uv, vec2(0.0), vec2(1.0));\n}\n\nvec2 transform2(vec2 uv, vec2 translate, float rotate, vec2 scale) {\n \tvec2 rv;\n\tuv -= translate;\n\tuv -= vec2(0.5);\n\trv.x = cos(rotate)*uv.x + sin(rotate)*uv.y;\n\trv.y = -sin(rotate)*uv.x + cos(rotate)*uv.y;\n\trv /= scale;\n\trv += vec2(0.5);\n\treturn rv;\t\n}const ivec2 o1046327862527_pixels_size = ivec2(17, 17);\nvec4 o1046327862527_pixels_pixels_fct(ivec2 v) {\n\tif (v.x < 0 || v.x >= 17 || v.y < 0 || v.y >= 17) {\n\t\treturn p_o1046327862527_pixels_palette[0];\n\t} else {\n\t\tint i = v.x+17*v.y;\n\t\tint c = 7 & (p_o1046327862527_pixels_pixels[i/10] >> (3*(i%10)));\n\t\treturn p_o1046327862527_pixels_palette[c];\n\t}\n}\nvec4 o3101268385777_gradient_gradient_fct(float x) {\n  if (x < p_o3101268385777_gradient_pos[0]) {\n    return p_o3101268385777_gradient_col[0];\n  } else if (x < p_o3101268385777_gradient_pos[1]) {\n    return mix(p_o3101268385777_gradient_col[0], p_o3101268385777_gradient_col[1], ((x-p_o3101268385777_gradient_pos[0])/(p_o3101268385777_gradient_pos[1]-p_o3101268385777_gradient_pos[0])));\n  } else if (x < p_o3101268385777_gradient_pos[2]) {\n    return mix(p_o3101268385777_gradient_col[1], p_o3101268385777_gradient_col[2], ((x-p_o3101268385777_gradient_pos[1])/(p_o3101268385777_gradient_pos[2]-p_o3101268385777_gradient_pos[1])));\n  } else if (x < p_o3101268385777_gradient_pos[3]) {\n    return mix(p_o3101268385777_gradient_col[2], p_o3101268385777_gradient_col[3], ((x-p_o3101268385777_gradient_pos[2])/(p_o3101268385777_gradient_pos[3]-p_o3101268385777_gradient_pos[2])));\n  }\n  return p_o3101268385777_gradient_col[3];\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nfloat minSize = min(iResolution.x, iResolution.y);\nfloat _seed_variation_ = SEED_VARIATION;\nvec2 UV = vec2(0.0, 1.0) + vec2(1.0, -1.0) * (fragCoord-0.5*(iResolution.xy-vec2(minSize)))/minSize;\n// #output0: const_greyscale_7\nvec4 o1046327862527_0_1_rgba = o1046327862527_pixels_pixels_fct(ivec2(floor(vec2(float(o1046327862527_pixels_size.x), float(o1046327862527_pixels_size.y))*((transform2((UV), vec2(p_o1046378194176_translate_x*(2.0*1.0-1.0), (0.2-0.5*abs(sin(iTime)))*(2.0*1.0-1.0)), p_o1046378194176_rotate*0.01745329251*(2.0*1.0-1.0), vec2(p_o1046378194176_scale_x*(2.0*1.0-1.0), p_o1046378194176_scale_y*(2.0*1.0-1.0))))))));\n// #output0: transform2_2\nvec4 o1046378194176_0_1_rgba = o1046327862527_0_1_rgba;\n\n// #code: gradient_3\nfloat o3101268385777_0_r = 0.5+(cos(p_o3101268385777_rotate*0.01745329251)*((UV).x-0.5)+sin(p_o3101268385777_rotate*0.01745329251)*((UV).y-0.5))/(cos(abs(mod(p_o3101268385777_rotate, 90.0)-45.0)*0.01745329251)*1.41421356237);// #output0: gradient_3\nvec4 o3101268385777_0_1_rgba = o3101268385777_gradient_gradient_fct(fract(o3101268385777_0_r*p_o3101268385777_repeat));\n\n// #code: blend2_2\nvec4 o1703021649876_0_b = o3101268385777_0_1_rgba;\nvec4 o1703021649876_0_l;\nfloat o1703021649876_0_a;\n\no1703021649876_0_l = o1046378194176_0_1_rgba;\no1703021649876_0_a = p_o1703021649876_amount1*1.0;\no1703021649876_0_b = vec4(blend_normal(UV, o1703021649876_0_l.rgb, o1703021649876_0_b.rgb, o1703021649876_0_a*o1703021649876_0_l.a), min(1.0, o1703021649876_0_b.a+o1703021649876_0_a*o1703021649876_0_l.a));// #output0: blend2_2\nvec4 o1703021649876_0_1_rgba = o1703021649876_0_b;\nfragColor = o1703021649876_0_1_rgba;\n}\n\n","name":"Image","description":"","type":"image"}]}