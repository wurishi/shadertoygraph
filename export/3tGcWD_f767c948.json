{"ver":"0.1","info":{"id":"3tGcWD","date":"1610987683","viewed":205,"name":"patterns with brick tiles ","username":"YitingLiu","description":"Experiments with brick tiles and patterns. I also used the conditional statements. ","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["time","zoom","patterns","sin","circle","cos","box","brick","fract","abs","tiles","if","conditional","bricktiles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec2 brickTile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    // Here is where the offset is happening\n    \n    if(step(1., mod(_st.y,2.0))!=0. || step(1., mod(_st.x,2.0))==0.){\n\n            _st.y += step(1., mod(_st.x,2.0)) *iTime*-2.;\n    _st.y += step(0., mod(_st.x,2.0)) *iTime;\n\n    }else{\n            _st.x += step(0., mod(_st.y,2.0)) *iTime;\n            _st.x -= step(1., mod(_st.y,2.0)) *iTime*-2.;\n\n    }\n    // return mod(_st,2.0);\n    return fract(_st);\n}\n\nfloat box(vec2 _st, vec2 _size){\n    _size = vec2(0.5)-_size*(0.4-smoothstep(0.,0.4,abs(sin(iTime))/5.));\n    vec2 uv = smoothstep(_size,_size+vec2(1e-4),_st);\n    uv *=  smoothstep(_size,_size+vec2(1e-4),vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\n\nfloat circle(in vec2 _st, in float _radius){\n    vec2 dist = _st-vec2(0.5);\n\treturn smoothstep(_radius-(_radius*(1e-4)),\n                         _radius+(_radius*(1e-4)),\n                         dot(dist,dist)*4.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec3 color = vec3(0.0);\n\n    // Apply the brick tiling\n    st = brickTile(st,5.);\n    color = vec3(box(st,vec2(0.9)));\n    color -= vec3(box(st,vec2(0.3)));\n\n    color += vec3(circle(st,0.5));\n    color -= vec3(circle(st,0.156));\n\n    // Uncomment to see the space coordinates\n    color *= vec3(st.x,st.y/10.,abs(sin(iTime)));\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}