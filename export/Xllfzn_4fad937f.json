{"ver":"0.1","info":{"id":"Xllfzn","date":"1510786063","viewed":191,"name":"Simple Crystal Ball","username":"BigotedSJW","description":"Just gaining a general understanding of what it means to sample a cubemap over a vector\nI wonder if just sampling cubemaps twice over every pixel and using smoothstep to get an anti-aliased-ish edge would be no more expensive than the conditional branch.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","normalmap","cubemap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3zn","filepath":"/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","previewfilepath":"/media/ap/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","type":"cubemap","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//normalize coords (forgot where I plagarized this from; but it's straightforward to understand)\n    vec2 uv = (fragCoord.xy - iResolution.xy * 0.5) / (0.5*iResolution.y);\n    \n    //borrowed from https://www.shadertoy.com/view/ldjXzV by mAlk\n    float dist2 = clamp(dot(uv,uv),0.0,1.0);\t//distance squared\n    float heigh2 = 1.0 - dist2;\n   \tfloat heigh = sqrt(heigh2);\t\t\t\t\t//sphere height\n    \n    //slope of height in X and Y direction?\n    vec2 dH2 = -vec2(dFdx(heigh)*iResolution.y,  dFdy(heigh)*iResolution.y);\n    \n    vec3 norm = /* normalize(*/ vec3( dH2, heigh ) /*)*/;\n    \n\t//rotate along Y plane\n    vec2 xz = vec2(cos(iTime),sin(iTime));\n    mat2 rot = mat2(xz.x,xz.y,-xz.y,xz.x);\n    \n    norm.xz = norm.xz*rot;\n\n    vec3 eye = vec3(uv,1.0);\n    eye.xz = eye.xz*rot;\n    \n    //if within unit circle, sample cubemap along sphere vector\n    //if outside unit circle, sample blurred cubemap along eye vector\n    vec4 samp = (dist2 < 1.0) ? texture(iChannel0,norm) : texture(iChannel1,eye);\n    \n    \n    fragColor = samp;\n}","name":"Image","description":"","type":"image"}]}