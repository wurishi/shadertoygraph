{"ver":"0.1","info":{"id":"4tsyz8","date":"1503424605","viewed":184,"name":"Flame Test","username":"Sobaya","description":"flame ","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getColor(float val) {\n    const float B0 = 0.5; // below this, black\n    const float B1 = 0.6; // below this, red\n    const float B2 = 0.7;  // below this, yellow\n    const float B3 = 0.8;  // above this, white\n    if (val < B0) {\n        return vec3(0);\n    } else if (val < B1) {\n        return vec3((val - B0) / (B1 - B0), 0, 0);\n    } else if (val < B2) {\n        return vec3(1, (val - B1) / (B2 - B1), 0);\n    } else if (val < B3) {\n        return vec3(1, 1, (val - B2) / (B3 - B2));\n    } else {\n        return vec3(1);\n    }\n}\n\nfloat rand(vec3 p) {\n  return fract(sin(dot(p, vec3(12.9898, 78.233, 96.1919810))) * 43758.5453);\n}\n\nfloat interpolate(float x, float y, float t) {\n  t = t * t * (3. - 2. * t);\n  return x * (1.-t) + y * t;\n}\n\nfloat irand(vec3 p) {\n  vec3 i = floor(p);\n  vec3 f = fract(p);\n  float rand1 = rand(i);\n  float rand2 = rand(i+vec3(1,0,0));\n  float rand3 = rand(i+vec3(0,0,1));\n  float rand4 = rand(i+vec3(1,0,1));\n  float rand5 = rand(i+vec3(0,1,0));\n  float rand6 = rand(i+vec3(1,1,0));\n  float rand7 = rand(i+vec3(0,1,1));\n  float rand8 = rand(i+vec3(1,1,1));\n  float t1 = interpolate(rand1, rand2, f.x);\n  float t2 = interpolate(rand3, rand4, f.x);\n  float t3 = interpolate(rand5, rand6, f.x);\n  float t4 = interpolate(rand7, rand8, f.x);\n  float s1 = interpolate(t1, t2, f.z);\n  float s2 = interpolate(t3, t4, f.z);\n  return interpolate(s1, s2, f.y);\n}\n\nfloat noise(vec3 p) {\n  float t = 0.;\n  for (int i = 0; i < 8; i++) {\n    float freq = pow(2., float(i));\n    float amp = pow(0.5, float(8-i));\n    t += irand(p / freq) * amp;\n  }\n  return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float v = texture(iChannel0, uv).r;\n    float n = noise(vec3(fragCoord.x * 5., fragCoord.y * 5. - iTime * 30., iTime * 30.));\n    n *= 1. - uv.y;\n    v = v * 0.8 + n * .3;\n    fragColor.rgb = getColor(v);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 get(vec2 p) {\n    return texture(iChannel0, p / iResolution.xy);\n}\n\nfloat rand(vec2 p) {\n    return texture(iChannel1, p).r;\n}\n\nfloat rand(float p, vec2 p2) {\n    return rand(p2 + vec2(sin(p * 13.2), sin(p * 17.3)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * 30.;\n    if (0. <= fragCoord.y && fragCoord.y < 1.) {\n        vec2 uv = fragCoord.xy / iResolution.xy;\n        uv.y += iTime * 0.02;\n        float val = rand(uv) * 0.8 + 0.2;\n        const float rate = 0.2;\n        val = mix(val, rand(iTime * 0.005, uv), rate);\n        fragColor = vec4(val);\n    } else {\n        fragColor = vec4(0);\n        const int w = 2;\n        const float speed = 2.;\n        for (int x = -w; x <= w; x++) {\n        \tfragColor += get(fragCoord + vec2(x, -speed));\n        }\n        fragColor += get(fragCoord + vec2(0, -speed * 2.));\n        fragColor /= (2. * float(w) + 2.) + 0.003;\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}