{"ver":"0.1","info":{"id":"Ws23Wd","date":"1550305734","viewed":158,"name":"ray-overshoot measures","username":"ukeyshima","description":"I have wrote an article in Japanese!\nhttps://qiita.com/ukeyshima/items/221b0384d39f521cad8f","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 p){\n        return fract(sin(dot(p.xy,vec2(12.9898,78.233)))*43758.5453123)*2.0-1.0;\n    }\n    float boxDistFunc(vec3 p,vec3 b,vec3 c){\n        return length(max(abs(p-c)-b,0.0));\n    }\n    float distFunc(vec3 p){\n        vec3 q=p;\n        q.xz=mod(p.xz,1.0)-0.5;\n        return boxDistFunc(q,vec3(0.4,2.0*sin(1.3*iTime*abs(random(floor(p.xz))))*abs(random(floor(p.xz))),0.4),vec3(0.0,0.0,0.0));\n    }\n    vec3 getNormal(vec3 p){\n        float d=0.001;\n        return normalize(vec3(\n            distFunc(p+vec3(d,0.0,0.0))-distFunc(p+vec3(-d,0.0,0.0)),\n            distFunc(p+vec3(0.0,d,0.0))-distFunc(p+vec3(0.0,-d,0.0)),\n            distFunc(p+vec3(0.0,0.0,d))-distFunc(p+vec3(0.0,0.0,-d))\n            ));\n    }\n    vec3 getRayColor(float signX,vec3 color,inout vec3 ray,inout vec3 origin){\n        float distance=0.0;\n        float rLen=0.0;\n        vec3 rPos=origin;\n        float marchCount=0.0;\n        for(int i=0;i<100;i++){\n\t\t\tdistance=distFunc(rPos);\n            if(abs(distance)<0.01){\n                    color=vec3(0.3,0.3,0.7);\n                    color+=marchCount/100.0/pow(rLen,2.0);\n\t\t\t        vec3 normal=getNormal(rPos);\n\t\t\t        origin=rPos+normal*0.02;\n\t\t\t        ray=normalize(reflect(ray,normal));\n                break;\n            }\n\t\t\trLen += signX<0.0?distance:min(min((step(0.0,ray.x)-fract(rPos.x))/ray.x, (step(0.0,ray.z)-fract(rPos.z))/ray.z)+0.01,distance);\n            rPos=origin+rLen*ray;\n            marchCount++;\n        }\n        return color;\n    }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){          \n    vec2 p = (fragCoord * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y); \n    float signX=sign(p.x);\n    vec2 pMax=iResolution.xy / min(iResolution.x, iResolution.y); \n    p.x=p.x/pMax.x+step(p.x/pMax.x,0.0);\n\tvec3 cPos=vec3(5.0*sin(iTime/2.0),1.5,5.0*cos(iTime/2.0));\n    vec3 cDir=vec3(-cPos.x,0.0,-cPos.z);\n    vec3 cUp=vec3(0.0,1.0,0.0);\n    vec3 cSide=-cross(cDir,cUp);\n    float depth=1.0;\n    vec3 ray=normalize(cSide*p.x+cUp*p.y+cDir*depth);\n    vec3 color=vec3(0.0);\n    float alpha=0.7;\n    for(int i=0;i<3;i++){\n    \tcolor+=alpha*getRayColor(signX,color,ray,cPos);\n        alpha*=0.6;\n    }\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}