{"ver":"0.1","info":{"id":"ttdfWX","date":"1613609081","viewed":94,"name":"simple animated hsb gradient","username":"SimonOakey","description":"simple hsb gradient animated demo","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["gradient","hsb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 hsb2rgb( in vec3 c ){\n    \n    vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );\n\n\trgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing\t\n\n\treturn c.z * mix( vec3(1.0), rgb, c.y);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    vec3 hsb = vec3(\n    uv.x+iTime*.4, // go thru color spectrum\n    abs(sin(uv.x*5.-iTime*.2))*.5, //move thru satuation values\n    abs(cos(uv.x*5.-iTime*.6))*.25+.5 //move thru brightness values\n    );\n\n    // Time varying pixel color\n    vec3 col = hsb2rgb(hsb);//0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}