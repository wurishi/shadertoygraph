{"ver":"0.1","info":{"id":"wsj3DG","date":"1549929429","viewed":143,"name":"ersterRTshader","username":"Blindleistung","description":"My first attempt at playing around with this website.","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["raytracer","beginner","primitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// shadertoy.\n\n#define txBuf iChannel0\n\nconst vec3 cam =vec3(0.,3.,-8.);\nconst vec3 camdir = normalize(vec3(0.,-1.,8.));\nconst vec3 camX = normalize(cross(camdir,vec3(0.1,1.,0.)));\nconst vec3 camY = normalize(cross(camX,camdir));\nconst vec3 lightdir = normalize(vec3(-1.0,-1.6,0.));\n\n\nvec3 camray(vec2 uv)\n{\n\tuv -= vec2(0.5);\n\tuv.x *= (iResolution.x/iResolution.y);\n\tvec2 vv = uv*0.8;\n\treturn normalize( camdir + camX*vv.x + camY*vv.y );\n}\n\n// types:  0: dull, 1: mirror\n\nbool castray_ground(vec3 orig,vec3 dir,int idx,out vec3 hitp,out vec3 hitnor,out vec4 col,out float mirr);\nbool castray_ball(vec3 orig,vec3 dir,int idx,out vec3 hitp,out vec3 hitnor,out vec4 col,out float mirr,vec3 pos,float rad);\nvec4 dullcol(vec3 pos,vec4 colthere);\nvec4 sky(vec3 dir);\n\nbool castray(vec3 orig,vec3 dir,int idx,out vec3 hitp,out vec3 hitnor,out vec4 col,out float mirr)\n{\n\tfloat best = 1.e12;\n\tbool tr;\n\tvec3 tmp1;\n\tvec3 tmp2;\n\tvec4 tmp3;\n\tfloat mir;\n\tcol = vec4(0.,0.,0.,1.);\n\ttr = castray_ground(orig,dir,idx,tmp1,tmp2,tmp3,mir);\n\tif( tr )\n\t{\n\t\tfloat d = length(tmp1-orig);\n\t\tif(d<best)\n\t\t\t{hitp=tmp1;hitnor=tmp2;col=tmp3;mirr=mir;best=d;}\n\t}\n\t// now for some balls.\n\tint i;\n\tfor(i=0;i<20;i++)\n\t{\n\t\tvec2 tstuv = vec2(float(i&7)*0.1,float(i>>3)*0.1);\n\t\tvec4 smp1 = texture(iChannel1,tstuv);\n\t\tvec4 smp2 = texture(iChannel1,tstuv+vec2(0.05));\n\t\tvec3 sp_pos = vec3(fract(smp1.r*20.),fract(smp1.g*20.),fract(smp1.b*20.)) - vec3(0.5);\n\t\tvec3 sp_dir = vec3(fract(smp2.r*20.),fract(smp2.g*20.),fract(smp2.b*20.)) - vec3(0.5);\n\t\tsp_pos.y += 0.5;\n\t\tsp_pos *= 8.;\n\t\tsp_dir *= 2.;\n\t\tfloat fwdbak = sin(fract(iTime*0.2*(0.6+0.2*fract(sp_pos.y)))*6.283185);\n\t\ttr = castray_ball(orig,dir,idx,tmp1,tmp2,tmp3,mir,sp_pos+sp_dir*fwdbak,0.55);\n\t\tif( tr )\n\t\t{\n//\t\t\ttmp3 = vec4(0.7,0.3,0.2,1.);\n\t\t\ttmp3 = vec4( 0.1+0.8*float((i>>1)&1) , 0.1+0.8*float((i>>2)&1) , 0.1+0.8*float((i>>3)&1) , 1. );\n\t\t\tfloat d = length(tmp1-orig);\n\t\t\tmir = 0.1+0.8*float(i&1);\n\t\t\tif(d<best)\n\t\t\t\t{hitp=tmp1;hitnor=tmp2;col=tmp3;mirr=mir;best=d;}\n\t\t}\n\t}\n\n\ttr = castray_ball(orig,dir,idx,tmp1,tmp2,tmp3,mir,vec3(-1.,2.*(fract(iTime*0.25)),0.),0.8);\n\tif( tr )\n\t{\n\t\tfloat d = length(tmp1-orig);\n\t\tif(d<best)\n\t\t\t{hitp=tmp1;hitnor=tmp2;col=tmp3;mirr=mir;best=d;}\n\t}\n\treturn best<1.e11;\n}\n\nbool castray_ground(vec3 orig,vec3 dir,int idx,out vec3 hitp,out vec3 hitnor,out vec4 col,out float mirr)\n{\n\t//groundplane\n\tfloat c = -orig.y/dir.y;\n\tmirr = 0.2;\n\thitp = orig + dir*c;\n\thitp.y = 0.;\n\thitnor = vec3(0.);\n\thitnor.y = -sign(dir.y);\n\tvec2 gridfrac = hitp.xz*0.1;\n\tvec2 gridpos = floor(gridfrac);\n\tgridfrac -= gridpos;\n\tint sqgr = (int(floor(gridpos.x))^int(floor(gridpos.y)))&1;\n\tcol = texture(iChannel0,gridfrac);\n\tif(sqgr==1)\n\t\tcol = vec4(0.3,0.3,0.2,1.) + vec4(0.6,0.6,0.4,0.);\n//\tcol = vec4(0.3,0.3,0.2,1.) + vec4(0.6,0.6,0.4,0.)*float(sqgr);\n\treturn (c>0.);\n//\treturn (c>0.)&&(sqgr==0);\n}\n\nbool castray_ball(vec3 orig,vec3 dir,int idx,out vec3 hitp,out vec3 hitnor,out vec4 col,out float mirr,vec3 pos,float rad)\n{\n\tmirr = 0.95;\n\tcol = vec4(0.8,0.3,0.2,1.);\n\tvec3 m = orig-pos;\n\tfloat b = dot(m,dir);\n\tfloat c = dot(m,m)-rad*rad;\n\tif(c>0.&&b>0.)return false; // pointing away.\n\tfloat discr = b*b-c;\n\tif(discr<0.)return false; // miss.\n\tfloat t = -b-sqrt(discr);  // distance?\n\n\tif(t<=0.)return false; // started inside.\n\thitp = orig + dir*t;\n\thitnor = normalize(hitp-pos);\n\treturn true;\n}\n\nvec4 dullcol(vec3 pos,vec4 colthere)\n{\n\t// test lights.  lightdir\n\tvec3 dontcare1,dontcare2;\n\tvec4 dontcare3;\n\tfloat dontcare4;\n\tfloat bright = min(1.,70./(dot(pos.xz,pos.xz)+50.));\n\tif(castray( pos + lightdir*-0.002 , -lightdir , 1 , dontcare1 , dontcare2 , dontcare3 , dontcare4 ))\n\t{\n\t\t// shade\n\t\tbright *= 0.15;\n\t}\n\treturn colthere*bright;\n//\tcolthere.xyz = vec3(0.2,0.25,0.9)*bright;\n//\tcolthere.a = 1.;\n}\n\nvec4 sky(vec3 dir)\n{\n\tvec4 res = vec4(0.3,0.5,0.9,1.0)*(1.0-dir.y*0.4);\n\n\t// red sky\n\tfloat redd = min( 1. , 0.05+0.1/(dir.y+0.05) )*max(0.,dir.z);\n\tres = res*(1.0-redd) + vec4(0.8,0.1,0.05,1.0)*redd*redd;\n\n\t// sunlight\n\tredd = length(lightdir+dir);\n\tredd = clamp( 1.0-6.*redd , 0. , 1. );\n\tres = res*(1.0-redd) + vec4(1.0,1.0,0.4,1.0)*sqrt(redd);\n\n\treturn res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\t// Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = fragCoord/iResolution.xy;\n\n\n\tvec4 rescol = vec4(0.);\n\tvec3 rpos = cam;\n\tvec3 rdir = camray(uv);\n\tvec3 chit,chitn;\n\tvec4 ccol;\n\tfloat fac=1.;\n\tfloat mir;\n\tint i;\n\tfor(i=0;i<4;i++)\n\t{\n\t\tif(!castray( rpos , rdir , 0 , chit , chitn , ccol , mir ))\n\t\t{\n\t\t\t// into the sky\n//\t\t\tccol.a = 1.;\n//\t\t\tccol.xyz = (rdir+vec3(0.5))*0.5;\n\t\t\tccol = sky(rdir);\n\t\t\trescol += ccol*fac;\n\t\t\tbreak;\n\t\t}\n\t\trescol += dullcol(chit,ccol)*(1.-mir)*fac;\n\t\tfac *= mir;\n\n\t\tif(fac<0.01)\n\t\t\tbreak;\n\t\tvec3 ndir = reflect(rdir,chitn); // rdir - chitn*dot(rdir,chitn)*2.\n\t\trpos = chit+0.05*ndir;\n\t\trdir = ndir;\n\t}\n\n\tfragColor=rescol;\n}\n\n\n\n\n/*\n//other program in BufA -> iChannel0:\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat ang = fract(iTime*0.25)*6.2832;\n\tmat2 m = mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n\tvec2 uv = fragCoord/iResolution.xy;\n\tuv = m*(uv-vec2(0.5)) + vec2(0.5);\n\tfragColor = texture(iChannel1,uv*1.42);\n}\n\n*/","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat ang = fract(iTime*0.25)*6.2832;\n\tmat2 m = mat2(cos(ang),sin(ang),-sin(ang),cos(ang));\n\tvec2 uv = fragCoord/iResolution.xy;\n\tuv = m*(uv-vec2(0.5)) + vec2(0.5);\n\tfragColor = texture(iChannel1,uv*1.42);\n}\n","name":"Buffer A","description":"","type":"buffer"}]}