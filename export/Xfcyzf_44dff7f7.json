{"ver":"0.1","info":{"id":"Xfcyzf","date":"1730933042","viewed":42,"name":"knitting_xx","username":"timuber","description":"knit","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["knit","crochet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st) {\n   return fract(sin(dot(st.xy, vec2(12.98, 78.23))) * 43758.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     vec2 normalizedPixelSize = 5.0/iResolution.xy;\n     vec2 uv = fragCoord/iResolution.xy;\n     vec2 cellPosition = floor(uv / normalizedPixelSize);\n     vec2 uvPixel = normalizedPixelSize * cellPosition;\n     vec4 color = texture(iChannel0, uvPixel);\n     vec2 cellUV = fract(uv / normalizedPixelSize);\n     vec2 centered = cellUV - 0.5;\n     vec2 noisyCenter = centered + (vec2(random(cellPosition + centered), random(cellPosition + centered + 1.0)) - 0.5) * 0.1;\n     float isAlternate = mod(cellPosition.x, 2.0);\n     float angle = isAlternate == 0.0 ? radians(-67.0) : radians(67.0);\n     float c = cos(angle);\n     float s = sin(angle);\n     vec2 rotated = vec2(noisyCenter.x * c - noisyCenter.y * s, noisyCenter.x * s + noisyCenter.y * c);\n     float ellipse = length(vec2(rotated.x, rotated.y * 1.5));\n     color.rgb *= smoothstep(0.25, 1.0, 1.0 - ellipse);\n     float lightness = clamp(random(cellPosition) * 1.5, 0.5, 1.0);\n     color.rgb *= lightness * 1.5;\n     fragColor = color;\n}","name":"Image","description":"","type":"image"}]}