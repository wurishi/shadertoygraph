{"ver":"0.1","info":{"id":"tsKXz3","date":"1590135689","viewed":75,"name":"LSD Sun","username":"daslaller","description":"test, with stolen stuff. sorry","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","circle","noob","stolen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rgb(float r, float g, float b) {\n    if(r > 1.0){\n        r = 1.0;\n    }\n    if(g > 1.0){\n        g = 1.0;\n    }\n    if(b > 1.0){\n        b = 1.0;\n    }\n\treturn vec3(r, g, b);\n}\n\nvec3 intRgb(float r, float g, float b){\n\treturn rgb(r / 255.0, g / 255.0, b / 255.0);\n}\n\n\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n//float t = clamp(d, 0.0, 1.0); //Uncomment for original effect\n\treturn vec4(color, 1.0 -d * 0.01); //-d * 0.01 //-t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n        // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float radius = 0.5 * iResolution.y; //Size of circle\n //   vec2 center = iResolution.xy * 0.5; //center of screen\n    \n    vec4 myCircle = circle(fragCoord.xy, iMouse.xy , radius, col); //My circle (iMouse.xy * uv) / 0.5\n    \n        // Background layer\n\tvec4 background = vec4(rgb(0.82, 0.87, 0.89), 1.0); //Simple background\n\n    // Output to screen\n    fragColor = mix(background, myCircle, myCircle.a);\n\n}","name":"Image","description":"","type":"image"}]}