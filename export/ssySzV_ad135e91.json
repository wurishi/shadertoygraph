{"ver":"0.1","info":{"id":"ssySzV","date":"1634917724","viewed":55,"name":"Mandelbrot Set GLSL","username":"RubberDuck55","description":"Mandelbrot set coded in GLSL","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvoid rotate(inout vec2 p,float angle,vec2 rotationOrigin)\n{\n    p -= rotationOrigin;\n    p *= mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n    p += rotationOrigin;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float modtime = sin(iTime/10.+4.71238)*15.+15.;\n    float tcubed = modtime*modtime*modtime;\n    \n    vec2 zv = vec2(0.729, 0.14);\n    vec2 uv = (fragCoord)/iResolution.xy / vec2(iResolution.y / iResolution.x, 1.) - vec2(0.5, 0);\n    rotate(uv, modtime/2., vec2(0.5, 0.5));\n    uv = vec2((uv.x-zv.x)/(tcubed+1.)+zv.x, (uv.y-zv.y)/(tcubed+1.)+zv.y);\n\n    vec2 mbv = vec2((uv.x*2.47-2.), (uv.y*2.24-1.12));\n    vec2 v = vec2(0);\n    int iter = 0;\n    int maxiter = int(modtime*10.+100.);\n    \n    while(v.x*v.x + v.y*v.y <= 4. && iter < maxiter){\n        float xtemp = v.x*v.x - v.y*v.y + mbv.x;\n        v = vec2(xtemp, 2.*v.x*v.y + mbv.y);\n        iter++;\n    }\n    \n    vec3 col = vec3(hsv2rgb(vec3(float(iter)/200.+0.66, 1., 1.)));\n    if(iter == maxiter) col = vec3(0);\n\n    //col = vec3(fract(uv.xy*17.), col.b);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}