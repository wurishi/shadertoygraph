{"ver":"0.1","info":{"id":"XfyyWt","date":"1732508376","viewed":22,"name":"2-Wave-Shader","username":"adras","description":"wave","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= vec2(0.5,0.5);\n    uv*=2.0;\n\n    // aka size on screen, the higher the smaller\n    float freqMultiplier = 20.0;\n    \n    // multiplier for speed\n    float timeMultiplier = 8.0;\n    \n    float time=iTime;\n\n    // Time varying pixel color\n    float col = sin(freqMultiplier*uv.x + timeMultiplier*time);\n    col = 0.0;\n    \n    float test = freqMultiplier*uv.x + timeMultiplier*time;\n    \n    \n\n    // f1 = sin(x)/(x)*cos(x+t*4)\n    // f2 = sin(x)/(x)*cos(x-t*4)\n    float xValue = freqMultiplier*uv.x;\n    float xTimeValue = xValue + timeMultiplier * time;\n    float col1 = sin(xValue) / (xValue) * cos(xTimeValue);\n    \n    float xTimeValue2 = xValue - timeMultiplier*time;\n    float col2 = sin(xValue) / xValue * cos(xTimeValue2);\n\n    \n    // Output to screen\n    //fragColor = vec4((uv.x < -0.4)?1.0:0.0, (uv.x>0.9)?1.0:0.0, (uv.x > -0.05 && uv.x < 0.05) ? 1.0: 0.0, 1.0);\n    fragColor = vec4(0, col1, col2, 1.0);\n}","name":"Image","description":"","type":"image"}]}