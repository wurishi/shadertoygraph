{"ver":"0.1","info":{"id":"NlBBzD","date":"1651830031","viewed":206,"name":"Heat Transfer","username":"Genesy","description":"Heat diffusion","likes":1,"published":1,"flags":34,"usePreview":0,"tags":["heat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 temp = textureLod(iChannel0, uv, 0.0);\n\n    vec4 col = vec4(heat7(temp.x/2.0),1.0);\n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float w = 0.1;\n    vec4 t10 = texelFetch(iChannel0, ivec2(fragCoord) + ivec2( 1, 0), 0);\n    vec4 t20 = texelFetch(iChannel0, ivec2(fragCoord) + ivec2( 0, 1), 0);\n    vec4 t01 = texelFetch(iChannel0, ivec2(fragCoord) + ivec2(-1, 0), 0);\n    vec4 t02 = texelFetch(iChannel0, ivec2(fragCoord) + ivec2( 0,-1), 0);\n    vec4 tp = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    \n    float heating = 0.0;\n    if (iMouse.z > 0. && length(fragCoord-iMouse.xy) <= 10.) heating+=.2;\n    \n    ivec2 coord = ivec2(fragCoord);\n\n    if (coord.y == 0 && coord.x > 200 && coord.x < 600) tp.x=0.950;\n    \n    if (texture(iChannel1, uv).x > 0.5) heating=0.1;\n    \n    //vec4 col = tp + vec4(heating,0,0,0);\n    \n    vec4 col = (1.0-w)*tp;\n    col += w * (1.0/4.0) * (t10 + t20 + t01 + t02 + heating );\n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"vec4 blend(vec4 col1, vec4 col2, float p)\n{\n \tvec4 temp = col1 * col1;\n    vec4 temp2 = col2 * col2;\n    return sqrt(mix(temp, temp2, p));\n}\n\nvec3 fromRedToGreen( float interpolant )\n{\n \tif( interpolant < 0.5 )\n    {\n       return vec3(1.0, 2.0 * interpolant, 0.0); \n    }\n    else\n    {\n        return vec3(2.0 - 2.0 * interpolant, 1.0, 0.0 );\n    }\n}\n\n\nvec3 fromGreenToBlue( float interpolant )\n{\n   \tif( interpolant < 0.5 )\n    {\n       return vec3(0.0, 1.0, 2.0 * interpolant); \n    }\n    else\n    {\n        return vec3(0.0, 2.0 - 2.0 * interpolant, 1.0 );\n    }  \n}\n\nvec3 heat5( float interpolant )\n{\n    float invertedInterpolant = interpolant;\n \tif( invertedInterpolant < 0.5 )\n    {\n        float remappedFirstHalf = 1.0 - 2.0 * invertedInterpolant;\n        return fromGreenToBlue( remappedFirstHalf );\n    }\n    else\n    {\n     \tfloat remappedSecondHalf = 2.0 - 2.0 * invertedInterpolant; \n        return fromRedToGreen( remappedSecondHalf );\n    }\n}\n\nvec3 heat7( float interpolant )\n{\n \tif( interpolant < 1.0 / 6.0 )\n    {\n        float firstSegmentInterpolant = 6.0 * interpolant;\n        return ( 1.0 - firstSegmentInterpolant ) * vec3(0.0, 0.0, 0.0) + firstSegmentInterpolant * vec3(0.0, 0.0, 1.0);\n    }\n    else if( interpolant < 5.0 / 6.0 )\n    {\n        float midInterpolant = 0.25 * ( 6.0 * interpolant - 1.0 );\n        return heat5( midInterpolant );\n    }\n    else\n    {\n    \tfloat lastSegmentInterpolant = 6.0 * interpolant - 5.0; \n        return ( 1.0 - lastSegmentInterpolant ) * vec3(1.0, 0.0, 0.0) + lastSegmentInterpolant * vec3(1.0, 1.0, 1.0);\n    }\n}\n   \n","name":"Common","description":"","type":"common"}]}