{"ver":"0.1","info":{"id":"7tjyWt","date":"1650419504","viewed":98,"name":"basic 2d shapes","username":"jorge2017a2","description":"basic 2d shapes","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","basic","shapes","basic2dshapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n//-19-abril-2022\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n//oneshade    \n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n#define S(d,b) smoothstep(antialiasing(0.8),b,d)\n#define S2(d,b) smoothstep(8.0*antialiasing(0.5),b,d)\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\nfloat opRep1D( float p, float c )\n\t{ float q = mod(p+0.5*c,c)-0.5*c; return  q ;}    \n\nfloat intersectSDF(float distA, float distB)\n\t{ return max(distA, distB);}\nfloat unionSDF(float distA, float distB)\n\t{ return min(distA, distB);}\nfloat differenceSDF(float distA, float distB)\n\t{ return max(distA, -distB);}\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\nvec3 DrawFigBordeCol(vec3 pColObj, vec3 colOut, float distObj , vec3 colBorde )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,colBorde ,S2(abs( distObj)-0.01,0.0));\n  return colOut;\n}\n\n\n///oneshade    \nvec2 Rotate(in vec2 p, in vec2 o, in float r) \n{   float c = cos(r), s = sin(r);\n    return (p - o) * mat2(c, -s, s, c) + o;\n}\n\n\nvec2 rotatev2(vec2 p, float ang)\n{   float c = cos(ang);\n    float s = sin(ang);\n    return vec2(p.x*c - p.y*s, p.x*s + p.y*c);\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\nfloat sdCircle( vec2 p, float r )\n{ return length(p) - r;}\n\n\nfloat sdUnevenCapsule( vec2 p, float r1, float r2, float h )\n{\n    p.x = abs(p.x);\n    float b = (r1-r2)/h;\n    float a = sqrt(1.0-b*b);\n    float k = dot(p,vec2(-b,a));\n    if( k < 0.0 ) return length(p) - r1;\n    if( k > a*h ) return length(p-vec2(0.0,h)) - r2;\n    return dot(p, vec2(a,b) ) - r1;\n}\n\n\n\nvec3 figuraSimple(vec2 p, vec3 colOut)\n{\n    float d1= sdBox( p,vec2(0.5,3.0) );\n    float d2= sdBox(p-vec2(-2.5,-1.),vec2(2.0,1.5) );\n    float d3= sdCircle(p-vec2(-1.0,1.2), 1. );\n    float d4= sdCircle(p-vec2(-2.0,0.0), 1.5 );\n    float duni= unionSDF(d1, d2);\n    duni= unionSDF(duni, d3);\n    duni= unionSDF(duni, d4);\n    vec3 col=DrawFigBorde(vec3(0.0), colOut,duni);\n    return col;\n}\n\nfloat tau = atan(1.0) * 8.0;\nvec3 opAngRep( vec3 p, float a )\n{   vec2 polar = vec2(atan(p.y, p.x), length(p.xy));\n    polar.x = mod(polar.x + a / 2.0, a) - a / 2.0;\n    return vec3(polar.y * vec2(cos(polar.x),sin(polar.x)), p.z);\n}\n\nvec3 figuraPoste(vec2 p, vec3 colOut)\n{   vec3 rep2 = opAngRep(vec3(p.x,p.y,1.0), tau / 6.0);\n    float d1= sdCircle(vec2(rep2.x, rep2.y)-vec2(0.5,0.5), 1. );\n    vec3 col=DrawFigBorde(vec3(0.0), colOut,d1);\n    return col;\n}\n\n\nvec3 figuraFlor(vec2 p, vec3 colOut)\n{\n    float res=9999.9;\n    float num=6.0;\n    float ang=radians(360.0/num);\n    for(float i=0.0;i<6.0;i++)\n    {   float angnew=ang*i;\n        vec2 pnew= Rotate(p, vec2(1.5,0.0) , angnew);\n        float d1= sdCircle(pnew, 1. );\n        res= unionSDF(res,d1);\n        \n    }    \n    \n    vec3 col=DrawFigBorde(vec3(0.0), colOut,res);\n    return col;\n}\n\n\nvec3 figuraPostev2(vec2 p, vec3 colOut)\n{\n    float r1,r2,h;\n    \n    p=vec2(p.y, p.x)-vec2(0.0+6.0,0.0);\n    \n    float d0= sdBox( p-vec2(0.7,2.2),vec2(0.5,3.5) );\n    r1=0.5;r2=0.5;h=4.5; \n    float d1= sdUnevenCapsule( p,r1,r2, h );\n    r1=0.5;r2=0.5;h=3.5; \n    float d2= sdUnevenCapsule( p-vec2(-1.0,0.5),r1,r2, h );\n    \n    \n    vec3 col=DrawFigBorde(vec3(0.0), colOut,d0);\n    col=DrawFigBorde(vec3(0.0), col,d1);\n    col=DrawFigBorde(vec3(0.0), col,d2);\n    return col;\n}\n\nvec3 figuraPosteUnion(vec2 p, vec3 colOut)\n{\n\n    vec3 col= figuraPostev2(p,colOut);\n    float d1= sdBox( p-vec2(2.25,-1.0),vec2(1.5,6.5) );\n    col=DrawFigBorde(vec3(0.0), col,d1);\n    col= figuraPostev2(vec2(p.x,-p.y-1.0),col);\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n       vec2 uv =( 2. * fragCoord.xy - iResolution.xy ) /iResolution.y\n            - vec2(0,-.5);\n    float esc=8.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n    col=figuraSimple(uv-vec2(-6.0,0.0), col);\n    col= figuraPoste(uv-vec2(6.0,0.0), col);\n    col= figuraFlor(uv, col);\n    col= figuraPostev2(uv-vec2(-9.0,3.0), col);\n    col= figuraPosteUnion(uv-vec2(8.5,5.0), col);\n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}