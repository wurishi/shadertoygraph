{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// Created by S.Guillitte \n\n\nfloat hash( in vec2 p ) \n{\n    return fract(sin(p.x*15.32+p.y*35.78) * 43758.23);\n}\n\nvec2 hash2(vec2 p)\n{\n\treturn vec2(hash(p*.754),hash(1.5743*p.yx+4.5891))-.5;\n}\n\n\nvec2 add = vec2(1.0, 0.0);\n\nvec2 noise2(vec2 x)\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    //f = f*f*(3.0-2.0*f);\n    f =  f*f*f*(f*(f*6.-15.)+10.);\n    \n    return mix(mix( hash2(p),          hash2(p + add.xy),f.x),\n                    mix( hash2(p + add.yx), hash2(p + add.xx),f.x),f.y);\n    \n}\n\n\nfloat dseg( vec2 ba, vec2 pa )\n{\t\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0., 1. );\t\n\treturn length( pa - ba*h );\n}\n\n\nvec2 delirium(vec2 x)\n{\n    vec2 r = x;\n    float a = 1.;\n    float d=10.;\n    for (int i = 0; i < 12; i++)\n    {\n        vec2 s= noise2(r*a)/a+.2;\n        d=min(d,dseg(r-x,s));\n        r +=s;      \n        //a*=1.9;\n    }     \n    return normalize(r-x)*d;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = 2.*fragCoord.xy / iResolution.yy;\n    uv*=5.;\n    vec2 p = delirium(uv+1.*iTime);\n    float c = length(p)*20.;\n    vec3 col;\n    col=vec3(0.6,0.7-5.*p.x,0.8+7.*p.y)*c;\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XlsGzl","date":"1424361028","viewed":340,"name":"GPU delirium","username":"guil","description":"A by-product of an attempt to make lightning bolt","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","noise"],"hasliked":0,"parentid":"","parentname":""}}