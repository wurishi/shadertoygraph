{"ver":"0.1","info":{"id":"ds3yDM","date":"1695972550","viewed":42,"name":"scrub displacement","username":"novogrammer","description":"scrub displacement","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["displacement","gpgpu","scrub"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    vec2 fieldVelocity = texture(iChannel1,uv).xy;\n    // fragColor = vec4(vec2(abs(fieldVelocity))*0.001,1.0,1.0);\n    vec2 fieldPosition = texture(iChannel1,uv).zw;\n    \n    \n    fragColor=texture(iChannel2,(fragCoord - fieldVelocity*0.1)/iResolution.xy);\n    //fragColor=texture(iChannel2,(fragCoord + fieldPosition)/iResolution.xy);\n    \n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 relativePosition=(iMouse.xy - fragCoord.xy);\n    vec2 previousRelativePosition = texture(iChannel0,uv).xy;\n    vec2 deltaPosition = relativePosition - previousRelativePosition;\n    vec2 velocity = deltaPosition * iFrameRate;\n\n    fragColor = vec4(relativePosition,velocity);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"\nfloat calcWeight(float targetWeight,float targetTime){\n    /*\n    pow(weight, iFrameRate * targetTime) = targetWeight\n    log(targetWeight) / log(weight) = iFrameRate * targetTime\n    log(targetWeight) / (iFrameRate * targetTime) = log(weight)\n    exp(log(targetWeight) / (iFrameRate * targetTime)) = weight\n    */\n    float weight = exp(log(targetWeight) / (iFrameRate * targetTime));\n    return weight;\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 relativePosition = texture(iChannel0,uv).xy;\n    vec2 velocity = texture(iChannel0,uv).zw;\n    vec2 fieldVelocity = texture(iChannel1,uv).xy;\n    vec2 fieldPosition = texture(iChannel1,uv).zw;\n    \n    float radius=iResolution.y*0.5;\n    float l=length(relativePosition);\n    if(l<radius){\n        fieldVelocity += velocity *(1.0 -  l / radius);\n    }\n    float weight=calcWeight(0.1, 2.0);\n    fieldVelocity =fieldVelocity * weight;\n    fieldPosition += fieldVelocity / iFrameRate;\n    \n    fragColor = vec4(fieldVelocity,fieldPosition);\n}","name":"Buffer B","description":"","type":"buffer"}]}