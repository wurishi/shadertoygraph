{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float GetBinaryAt0(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x00000000;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x00000000;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt1(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x00000000;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x00000000;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt2(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x0000001f;\ncol[1] = 0x00008000;\ncol[2] = 0x0000dc00;\ncol[3] = 0x00000301;\ncol[4] = 0x000007de;\ncol[5] = 0x00004030;\ncol[6] = 0x00000000;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x00000000;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt3(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000022;\ncol[1] = 0x00008001;\ncol[2] = 0x00000800;\ncol[3] = 0x00000201;\ncol[4] = 0x00000111;\ncol[5] = 0x00000020;\ncol[6] = 0x00000010;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x00000000;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt4(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00008f22;\ncol[1] = 0x0000878f;\ncol[2] = 0x00002800;\ncol[3] = 0x00003e3d;\ncol[4] = 0x00000101;\ncol[5] = 0x000071e0;\ncol[6] = 0x000000f8;\ncol[7] = 0x0000001e;\ncol[8] = 0x0000e3ef;\ncol[9] = 0x000003e1;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt5(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00001832;\ncol[1] = 0x00008441;\ncol[2] = 0x0000e800;\ncol[3] = 0x0000a645;\ncol[4] = 0x00000101;\ncol[5] = 0x00004260;\ncol[6] = 0x00000010;\ncol[7] = 0x00008030;\ncol[8] = 0x000004c8;\ncol[9] = 0x00000193;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt6(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00001f1e;\ncol[1] = 0x00008781;\ncol[2] = 0x0000f800;\ncol[3] = 0x0000c27f;\ncol[4] = 0x0000013d;\ncol[5] = 0x00004220;\ncol[6] = 0x00000010;\ncol[7] = 0x0000003e;\ncol[8] = 0x0000e44f;\ncol[9] = 0x0000011b;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt7(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00001132;\ncol[1] = 0x00000401;\ncol[2] = 0x0000d800;\ncol[3] = 0x00004204;\ncol[4] = 0x00001111;\ncol[5] = 0x00004220;\ncol[6] = 0x00000010;\ncol[7] = 0x00000022;\ncol[8] = 0x00002448;\ncol[9] = 0x0000011a;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt8(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00001922;\ncol[1] = 0x00000459;\ncol[2] = 0x0000d800;\ncol[3] = 0x00002604;\ncol[4] = 0x00001111;\ncol[5] = 0x00004220;\ncol[6] = 0x00000190;\ncol[7] = 0x00008032;\ncol[8] = 0x00002448;\ncol[9] = 0x00007193;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt9(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00003f6f;\ncol[1] = 0x000087cf;\ncol[2] = 0x00009801;\ncol[3] = 0x00003f78;\ncol[4] = 0x00001fde;\ncol[5] = 0x0000f770;\ncol[6] = 0x000000f1;\ncol[7] = 0x0000807e;\ncol[8] = 0x0000eeef;\ncol[9] = 0x000071f7;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt10(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x00000000;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x00000100;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt11(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x00000000;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x000000e0;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt12(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x00000000;\ncol[7] = 0x00000000;\ncol[8] = 0x00000000;\ncol[9] = 0x00000000;\ncol[10] = 0x00000000;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt13(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x0000ffff;\ncol[1] = 0x0000ffff;\ncol[2] = 0x0000ffff;\ncol[3] = 0x0000ffff;\ncol[4] = 0x0000ffff;\ncol[5] = 0x0000ffff;\ncol[6] = 0x0000ffff;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt14(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x0000ffff;\ncol[1] = 0x0000ffff;\ncol[2] = 0x0000ffff;\ncol[3] = 0x0000ffff;\ncol[4] = 0x0000ffff;\ncol[5] = 0x0000ffff;\ncol[6] = 0x0000ffff;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt15(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x0000ffff;\ncol[1] = 0x0000ffff;\ncol[2] = 0x0000ffff;\ncol[3] = 0x0000ffff;\ncol[4] = 0x0000ffff;\ncol[5] = 0x0000ffff;\ncol[6] = 0x0000ffff;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt16(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt17(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt18(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt19(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt20(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000007;\ncol[5] = 0x00000000;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt21(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000020;\ncol[3] = 0x00000400;\ncol[4] = 0x00000004;\ncol[5] = 0x00000040;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt22(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000f9c;\ncol[1] = 0x0000f38f;\ncol[2] = 0x000079f1;\ncol[3] = 0x00003eec;\ncol[4] = 0x00008704;\ncol[5] = 0x000003e7;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt23(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00009322;\ncol[1] = 0x00006449;\ncol[2] = 0x00008822;\ncol[3] = 0x0000046c;\ncol[4] = 0x00004884;\ncol[5] = 0x00000044;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt24(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00009162;\ncol[1] = 0x00002c40;\ncol[2] = 0x0000fc22;\ncol[3] = 0x00000438;\ncol[4] = 0x00009884;\ncol[5] = 0x00000047;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt25(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00009162;\ncol[1] = 0x00002c40;\ncol[2] = 0x00000822;\ncol[3] = 0x00000438;\ncol[4] = 0x00001884;\ncol[5] = 0x00000044;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt26(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00009122;\ncol[1] = 0x00002458;\ncol[2] = 0x00000b22;\ncol[3] = 0x0000646c;\ncol[4] = 0x00004884;\ncol[5] = 0x0000e644;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt27(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00003bbe;\ncol[1] = 0x000077cf;\ncol[2] = 0x0000f1e7;\ncol[3] = 0x00003cee;\ncol[4] = 0x0000cf9f;\ncol[5] = 0x0000e3c7;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryAt28(float coord_x)\n{\nfloat refcol = 0.0;\nint col[11];\ncol[0] = 0x00000000;\ncol[1] = 0x00000000;\ncol[2] = 0x00000000;\ncol[3] = 0x00000000;\ncol[4] = 0x00000000;\ncol[5] = 0x00000000;\ncol[6] = 0x0000fffc;\ncol[7] = 0x0000ffff;\ncol[8] = 0x0000ffff;\ncol[9] = 0x0000ffff;\ncol[10] = 0x00000001;\nif (coord_x >= 0.0)\nif (coord_x < 16.0) refcol = float(col[0]);\nelse if (coord_x < 32.0) refcol = float(col[1]);\nelse if (coord_x < 48.0) refcol = float(col[2]);\nelse if (coord_x < 64.0) refcol = float(col[3]);\nelse if (coord_x < 80.0) refcol = float(col[4]);\nelse if (coord_x < 96.0) refcol = float(col[5]);\nelse if (coord_x < 112.0) refcol = float(col[6]);\nelse if (coord_x < 128.0) refcol = float(col[7]);\nelse if (coord_x < 144.0) refcol = float(col[8]);\nelse if (coord_x < 160.0) refcol = float(col[9]);\nelse if (coord_x < 176.0) refcol = float(col[10]);\n\n\treturn \n\t\tmod(\n\t\t\tfloor(\n\t\t\t\trefcol / pow(2.0, \n\t\t\t\tfloor(\n\t\t\t\t\tmod(\n\t\t\t\t\t\tcoord_x, \n\t\t\t\t\t\t16.0\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t2.0\n\t);\n\t\t\t\t\t\t\n}\nfloat GetBinaryLessThan8(vec2 coord)\n{\nif ((29 - int(coord.y)) == 0) return GetBinaryAt0(coord.x); \nif ((29 - int(coord.y)) == 1) return GetBinaryAt1(coord.x); \nif ((29 - int(coord.y)) == 2) return GetBinaryAt2(coord.x); \nif ((29 - int(coord.y)) == 3) return GetBinaryAt3(coord.x); \nif ((29 - int(coord.y)) == 4) return GetBinaryAt4(coord.x); \nif ((29 - int(coord.y)) == 5) return GetBinaryAt5(coord.x); \nif ((29 - int(coord.y)) == 6) return GetBinaryAt6(coord.x); \nif ((29 - int(coord.y)) == 7) return GetBinaryAt7(coord.x); \nreturn 0.0;\n}\nfloat GetBinaryLessThan16(vec2 coord)\n{\nif ((29 - int(coord.y)) == 8) return GetBinaryAt8(coord.x); \nif ((29 - int(coord.y)) == 9) return GetBinaryAt9(coord.x); \nif ((29 - int(coord.y)) == 10) return GetBinaryAt10(coord.x); \nif ((29 - int(coord.y)) == 11) return GetBinaryAt11(coord.x); \nif ((29 - int(coord.y)) == 12) return GetBinaryAt12(coord.x); \nif ((29 - int(coord.y)) == 13) return GetBinaryAt13(coord.x); \nif ((29 - int(coord.y)) == 14) return GetBinaryAt14(coord.x); \nif ((29 - int(coord.y)) == 15) return GetBinaryAt15(coord.x); \nreturn 0.0;\n}\nfloat GetBinaryLessThan24(vec2 coord)\n{\nif ((29 - int(coord.y)) == 16) return GetBinaryAt16(coord.x); \nif ((29 - int(coord.y)) == 17) return GetBinaryAt17(coord.x); \nif ((29 - int(coord.y)) == 18) return GetBinaryAt18(coord.x); \nif ((29 - int(coord.y)) == 19) return GetBinaryAt19(coord.x); \nif ((29 - int(coord.y)) == 20) return GetBinaryAt20(coord.x); \nif ((29 - int(coord.y)) == 21) return GetBinaryAt21(coord.x); \nif ((29 - int(coord.y)) == 22) return GetBinaryAt22(coord.x); \nif ((29 - int(coord.y)) == 23) return GetBinaryAt23(coord.x); \nreturn 0.0;\n}\nfloat GetBinaryLessThan32(vec2 coord)\n{\nif ((29 - int(coord.y)) == 24) return GetBinaryAt24(coord.x); \nif ((29 - int(coord.y)) == 25) return GetBinaryAt25(coord.x); \nif ((29 - int(coord.y)) == 26) return GetBinaryAt26(coord.x); \nif ((29 - int(coord.y)) == 27) return GetBinaryAt27(coord.x); \nif ((29 - int(coord.y)) == 28) return GetBinaryAt28(coord.x); \nreturn 0.0;\n}\nfloat GetBinary(vec2 coord) {\nif ((29 - int(coord.y)) < 8) return GetBinaryLessThan8(coord);\nif ((29 - int(coord.y)) < 16) return GetBinaryLessThan16(coord);\nif ((29 - int(coord.y)) < 24) return GetBinaryLessThan24(coord);\nif ((29 - int(coord.y)) < 32) return GetBinaryLessThan32(coord);\nreturn 0.0; }\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // zoom?\n\tvec2 xy = uv * vec2(312.0, 180.0);\n\n\t\n    \n\n\txy.y += -37.0 + -50.0 * (iMouse.y - iResolution.y /2.0) / iResolution.y  ;\t\n\txy.x += -12.0 + 4.0 * sin(iTime);\n    \n\n\tfloat intensity = GetBinary(xy) ;\n\t\t\n\t//float intensity2 = GetBinary2(xy) ;\n \n    float si = (sin(iTime)  + 1.0) / 2.0;\n    \n    intensity = \n        intensity * si  //+\n        //intensity2 * (1.0 -si)\n        ;\n\n    \n    if (intensity < 0.1)\n        fragColor = vec4(0, 0, 0, 0.5);\n    else\t\n\t\tfragColor = vec4(intensity, 0.5*intensity*sin(iTime), 0, 0.3 + intensity);\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4tSGzz","date":"1426501137","viewed":301,"name":"oncontextlost","username":"zproxy","description":"\n\nhttps://www.shadertoy.com/view/ldsGR7","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["text","bitmap"],"hasliked":0,"parentid":"","parentname":""}}