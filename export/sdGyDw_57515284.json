{"ver":"0.1","info":{"id":"sdGyDw","date":"1654949722","viewed":67,"name":"color_gradient_movements","username":"MartinB005","description":"colors","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nin vec2 v_pos;\nin vec2 fragCoord;\nin float v_time;\n\nuniform sampler2D tex;\n\nuniform float weight[5];\n\n\nfloat blurSize;\n//float blurSize = 1.0 / 125.0;\n\nconst float intensity = 0.35;\n\nvec4 blur(bool horizontal, in vec2 fragCoord)\n{\n    vec4 sum = vec4(0);\n    int j;\n    int i;\n\n   \n    /*\n        blur in y (vertical)\n    */\n    sum += texture(tex, vec2(fragCoord.x - 4.0 * blurSize, fragCoord.y)) * 0.05;\n    sum += texture(tex, vec2(fragCoord.x - 3.0 * blurSize, fragCoord.y)) * 0.09;\n    sum += texture(tex, vec2(fragCoord.x - 2.0 * blurSize, fragCoord.y)) * 0.12;\n\n    sum += texture(tex, vec2(fragCoord.x - blurSize, fragCoord.y)) * 0.15;\n    sum += texture(tex, vec2(fragCoord.x,  gl_FragCoord.y)) * 0.16;\n    sum += texture(tex, vec2(fragCoord.x + blurSize, gl_FragCoord.y)) * 0.15;\n\n    sum += texture(tex, vec2(fragCoord.x + 2.0 * blurSize, fragCoord.y)) * 0.12;\n    sum += texture(tex, vec2(fragCoord.x + 3.0 * blurSize, fragCoord.y)) * 0.09;\n    sum += texture(tex, vec2(fragCoord.x + 4.0 * blurSize, fragCoord.y)) * 0.05;\n        \n    /*\n        blur in y (vertical)\n    */\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y - 4.0 * blurSize)) * 0.05;\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y - 3.0 * blurSize)) * 0.09;\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y - 2.0 * blurSize)) * 0.12;\n\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y - blurSize)) * 0.15;\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y)) * 0.16;\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y + blurSize)) * 0.15;\n\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y + 2.0 * blurSize)) * 0.12;\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y + 3.0 * blurSize)) * 0.09;\n    sum += texture(tex, vec2(fragCoord.x, fragCoord.y + 4.0 * blurSize)) * 0.05;\n\n    return sum;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    blurSize = 1.0 / (sin(iTime) * 50.0);\n    vec4 res = blur(true, fragCoord);\n    res += texture(tex, fragCoord);\n    shadertoy_out_color = res;\n}","name":"Image","description":"","type":"image"}]}