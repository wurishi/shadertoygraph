{"ver":"0.1","info":{"id":"wssBD4","date":"1588283790","viewed":219,"name":"Heat Vision for Memix","username":"schulkinator","description":"Heat vision for Memix","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["memix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// \"Heat Vision\" by Sterling Schulkins\n\n#define REMOVE_THIS_DEFINE_WHEN_USING_IN_MEMIX 2.8\n\nvec2 getuv( in vec2 p ) { return vec2( 0.5+(p.x-0.5)*iResolution.z, 1.0-p.y ); }\n\n\nvec4 getLut(float r, float upperBound)\n{\n\tif (r < 0.1*upperBound)\n\t\treturn vec4(0, 0, 0, 1); // black\n\telse if (r < 0.15*upperBound)\n\t\treturn vec4(0, 0, 0.2, 1); // blue\n\telse if (r < 0.2*upperBound)\n\t\treturn vec4(0.2, 0, 0.2, 1); // purple\n\telse if (r < 0.23*upperBound)\n\t\treturn vec4(0.35, 0, 0, 1); // red\n\telse if (r < 0.25*upperBound)\n\t\treturn vec4(0.6, 0.4, 0, 1); // orange\n\telse if (r < 0.30*upperBound)\n\t\treturn vec4(0.9, 0.9, 0, 1); // yellow\n\telse \n\t\treturn vec4(1.0, 1.0, 1.0, 1); // white\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.xy;\n    \n\tvec2 uv = getuv(0.5+0.5*p);\n    vec3 col = texture(iChannel0, uv).xyz;\n\tfragColor = vec4(col, 1);\n\n\tfloat fragColorAvg = (fragColor.r + fragColor.g + fragColor.b) / 3.0;\n#ifdef REMOVE_THIS_DEFINE_WHEN_USING_IN_MEMIX\n    float upperBound = REMOVE_THIS_DEFINE_WHEN_USING_IN_MEMIX;\n#else\n\tfloat upperBound = iParam[0] * 5.0;\t\n#endif\t\n\tfloat lineHeight = (1.0/iResolution.y)*4.0;\n\tfloat scanline = 1.0 - (smoothstep(0.8, 1.0, fract(uv.y/(lineHeight))) * 0.2);\n\tfragColor = vec4(getLut(fragColorAvg, upperBound).xyz * scanline, 1);\n}","name":"Image","description":"","type":"image"}]}