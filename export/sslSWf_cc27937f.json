{"ver":"0.1","info":{"id":"sslSWf","date":"1712736928","viewed":72,"name":"Sound Shader","username":"marcelliino","description":"coding sound","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.1415926535\n#define tau (pi * 2.0)\n\nfloat rect(vec2 position, vec2 scale){\n    position = abs(position);\n    vec2 shape = vec2(step(scale.x, position.x), step(scale.y, position.y));\n    return max(shape.x, shape.y);\n}\n\nvec4 normal(vec4 a, vec4 b){\n    a.rgb = max(a.rgb, 1.0-b.a);\n    return min(a, b);\n}\n\nvec4 grapher(vec2 position, float gWidth, float function){\n    vec4 grid = vec4(1.0-rect(fract(position*10.0)-0.5, vec2(0.48)));\n    vec4 scene = grid+0.8;\n    vec4 axisX = vec4(rect(position, vec2(1.0, 0.008)));\n    axisX = max(max(axisX, grid), vec4(1.0, 0.0, 0.0, axisX.a));\n    vec4 axisY = vec4(rect(position, vec2(0.008, 1.0)));\n    axisY = max(max(axisY, grid), vec4(0.0, 0.0, 1.0, axisY.a));\n    scene = vec4(normal(scene, min(axisX, axisY)));\n    vec4 graph = vec4(step(gWidth/2.0, abs(function)));\n    graph = max(graph, vec4(0.0, 1.0, 0.0, graph.a));\n    scene = normal(scene, graph);\n    return scene;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2.0 * fragCoord - iResolution.xy ) / iResolution.y;\n    \n    vec3 col = vec3(1.0);\n    \n    //-----\n    \n    float octave = -7.5;\n    \n    octave = floor(octave);\n    \n    float freq = exp2(octave) * 440.0;\n    \n    float phasor = fract(uv.x+mod(iTime, pi/0.25) * freq) * tau;\n    \n    float sine = sin(phasor);\n    \n    float cosine = cos(phasor);\n    \n    float saw = -(phasor/pi-1.0);\n    \n    float tri = abs(fract(phasor/tau-0.25)/0.25-2.0)-1.0;\n    \n    float k = 0.5;\n    float sqr = -(ceil(phasor/tau-clamp(k, 0.1, 0.9))/0.5-1.0);\n    \n    //-----\n    \n    float x = uv.x/0.1;\n    float y = uv.y/0.1;\n    float function = tri;\n    \n    //-----\n    \n    float lt = 1.0/pow(2.0, 3.0);\n    \n    col = grapher(uv, lt, y-function).xyz;\n    \n    col = 1.0-col;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define pi 3.1415926535\n#define tau (pi * 2.0)\n\nvec2 mainSound( int samp, float time )\n{\n    \n    float octave = mix(-2.5, 2.5, sin(time/0.25)/2.0+0.5);\n    \n    octave = floor(octave);\n    \n    float freq = exp2(octave) * 440.0;\n    \n    float phasor = fract(time * freq) * tau;\n    \n    float sine = sin(phasor);\n    \n    float cosine = cos(phasor);\n    \n    float saw = -(phasor/pi-1.0);\n    \n    float tri = abs(fract(phasor/tau-0.25)/0.25-2.0)-1.0;\n    \n    float k = 0.5;\n    float sqr = -(ceil(phasor/tau-clamp(k, 0.1, 0.9))/0.5-1.0);\n    \n    return vec2(tri);\n}","name":"Sound","description":"","type":"sound"}]}