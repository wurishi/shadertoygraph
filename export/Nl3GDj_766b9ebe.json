{"ver":"0.1","info":{"id":"Nl3GDj","date":"1636752552","viewed":56,"name":"Mandelbrot-Set Danny","username":"danieletaat","description":"Renders the Mandelbrot set.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float NUM_ITERATIONS = 512.0;\nconst float zoomSpeed = 10.0;\nconst float width = 10.0;\n//const vec2 center = vec2(-0.742978, 0.1);\nconst vec2 center = vec2(-0.747005, 0.150006);\n//const vec2 center = vec2(0.0, 0.0);\n\nvec2 f(vec2 z, vec2 c) {    \n    return vec2(z.x * z.x - z.y * z.y, 2.0 * z.y * z.x) + c;\n}\n\nfloat iter(vec2 c) {\n\n    float nrm = dot(c, c);\n    // https://iquilezles.org/articles/mset1bulb\n    if( 256.0*nrm*nrm - 96.0*nrm + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\n    // https://iquilezles.org/articles/mset2bulb\n    if( 16.0*(nrm+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\n    \n    vec2 z = vec2(0.0, 0.0);\n    float i;\n    for (i = 0.0; i < NUM_ITERATIONS; i += 1.0) {\n        z = f(z, c);\n        if (dot(z, z) > 4.0) break;\n    }\n    if (i >= NUM_ITERATIONS) \n        return 0.0;  \n        \n    // smooth out the coloring\n    float si = i - log2(log2(dot(z,z))) + 4.0;\n    float ai = smoothstep( -0.1, 0.0, 0.0);\n    i = mix(i, si, ai);\n\n    return i;\n}\n\nvec2 rotateCoord(vec2 c) {\n    float theta = 3.14 + 3.14 * cos(iTime / 10.0);\n    float x = (c.x - center.x) * cos(theta) - (c.y - center.y) * sin(theta) + center.x;\n    float y = (c.x - center.x) * sin(theta) + (c.y - center.y) * cos(theta) + center.y;\n    return vec2(x, y);\n    \n}\n\nvec2 transformCoord(vec2 fragCoord) {\n    float rescale = pow(zoomSpeed, -2.75 + 2.75*cos(iTime / 10.0));\n    vec2 size = vec2(width, iResolution.y / iResolution.x * width) * rescale;\n    vec2 uv = fragCoord/iResolution.xy;\n    return rotateCoord((uv - 0.5) * size + center);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 c = transformCoord(fragCoord);\n    float i = iter(c);    \n    // color calculation\n    vec3 col = 0.5 + 0.5*cos( 3.0 + 0.05*i + vec3(0.50, 0.05, 0.05));\n    fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}