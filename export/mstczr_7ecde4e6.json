{"ver":"0.1","info":{"id":"mstczr","date":"1694692120","viewed":117,"name":"radioactive ooze","username":"Carandiru","description":"ooze","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["grid","a","ooze"],"hasliked":0,"parentid":"fd2cRc","parentname":"aa grid prototyping"},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GRID_SIZE 10.0        // world grid size scaler\n\n#define GRID_THIN 0.1f    // > is thicker, < is thinner (grid lines)\n\n\nvec2 rotate( in vec2 p, in float angle )\n{\n\t#define fma(a,b,c) (a*b+c)\n    #define c_ x\n\t#define s_ y\n\t\n    vec2 cossin = vec2(cos(angle), sin(angle));\n\treturn( vec2(fma(p.x, cossin.c_, p.y * cossin.s_), fma(p.x, -cossin.s_, p.y * cossin.c_)) );\n\n\t#undef c_\n\t#undef s_\n    #undef fma\n}\n\nfloat grid( in vec2 uv, in float scale, in float thin )\n{\n    vec2 tiledUV = fract(uv*scale+0.5f);\n    vec2 square = -abs(tiledUV*2.-1.);\n    \n    float d = abs(min(square.x, square.y));\n    \n    return 1.0f - exp2(-2.7 * (d - thin) * (d - thin));\n    //return smoothstep(1.0f - thin, 1.0f, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv - 0.5f;\n \n    uv = rotate(uv, iTime * 0.125f);\n    \n    float result = 0.0f;\n    \n    vec3 color = textureLod(iChannel0, uv + iTime*0.1f, 0.0f).rgb;\n    \n    float d = 10.0f * dot(color, vec3(0.5f));\n    \n    for ( float i = 1.0f ; i < 10.0f ; ++i ) {\n        result = mix(result, grid(uv - d * vec2(i/iResolution.y), GRID_SIZE, GRID_THIN), 0.5f);\n    }\n    \n    color = color * result;\n    color *= vec3(0,1,0);\n    color = pow(color, vec3(9.0f));\n    color = 10000.0f * color;\n    \n    fragColor = vec4(pow(color, vec3(1.0f/2.2f)), 1.0f); \n}","name":"Image","description":"","type":"image"}]}