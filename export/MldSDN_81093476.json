{"ver":"0.1","info":{"id":"MldSDN","date":"1479771708","viewed":372,"name":"CityLights","username":"bmodone","description":"Lit windows on a building at night (yes, use some imagination)","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["city"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/4sfGzS\nfloat hash( float n ) { return fract(sin(n)*753.5453123); }\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n\t\n    float n = p.x + p.y*157.0 + 113.0*p.z;\n    return mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                   mix( hash(n+157.0), hash(n+158.0),f.x),f.y),\n               mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                   mix( hash(n+270.0), hash(n+271.0),f.x),f.y),f.z) * 2.0 - 1.0;\n}\n\n// https://www.shadertoy.com/view/MldSDN\nfloat window(float x, float s) {\n    return floor(clamp(fract(x)*2.0+(s*2.0)-1.0, 0.0, 1.0));\n}\n\nvec3 dodge(vec3 target, vec3 blend) {\n    return target / (vec3(1,1,1)-blend);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n\t\n    // Settings\n    vec2 cellSize = vec2(7.0, 9.0);\n    vec2 winSize = vec2(0.7, 0.3);\n    vec2 noiseScale = vec2(5.0, 3.0);\n    float intensity = 1.7;\n    \n    // Make window mask\n    vec2 winUv = uv * cellSize;\n    float winX = window(winUv.x, winSize.x);\n    float winY = window(winUv.y, winSize.y);\n    float win = min(winX, winY);\n    \n    // Some color\n    uv = winUv * noiseScale;\n    vec3 winCol = vec3(noise(vec3(uv.x, uv.y, 0.0))) * vec3(0.9, 0.8, 0.5);\n    winCol += vec3(noise(vec3(uv.x + 10.0, uv.y, 0.0) * 1.4)) * vec3(0.5, 0.6, 0.5);\n    winCol += vec3(noise(vec3(uv.x, uv.y + 10.0, 0.0)) * 1.0) * vec3(0.3, 0.5, 0.6);\n\t\n    // Lights on or off?\n    float mask = pow(noise(vec3(floor(winUv), 0)) * win, 6.0);\n    winCol *= mask;\n    \n    // Combine\n    vec3 col = winCol * 0.3 + dodge(vec3(mask) * 0.5, winCol * 0.6);\n    col *= intensity;\n    winCol *= vec3(mask) + mask*1.0;\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}