{"ver":"0.1","info":{"id":"ctXfW8","date":"1699541593","viewed":32,"name":"Another Kishimisu tutorial","username":"creditFool","description":"https://youtu.be/f4s1h2YETNY?si=dmx0GiWPammxjT6Y","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pallete( float t, vec3 a, vec3 b, vec3 c, vec3 d ) {\n    return a + b*cos(6.28318*(c*t+d));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d2 = vec3(0.263, 0.416, 0.557);\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; i++) {\n        uv = fract(uv*1.5) - 0.5;\n    \n        float d = length(uv) * exp(-length(uv0));\n    \n        vec3 col = pallete(length(uv0)+ i*.4 + iTime*.4, a, b, c, d2);\n    \n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n        d = pow(.01/ d, 1.2);\n    \n        finalColor += col*d;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}