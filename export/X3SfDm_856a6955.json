{"ver":"0.1","info":{"id":"X3SfDm","date":"1729516924","viewed":70,"name":"Simple pong game","username":"Sztorm","description":"This is a multiplayer version of pong.\nUse W and S to move the left paddle and up and down arrow keys to move the right paddle.","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["game","pong"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 move(vec2 uv, vec2 displacement) {\n    return uv - displacement;\n}\n\nfloat circle(vec2 uv, float radius) {\n    uv -= vec2(0.5);\n    float dist = sqrt(uv.x * uv.x + uv.y * uv.y);\n\n    return mix(0.0, 1.0, float(dist < radius));\n}\n\nfloat rectangle(vec2 uv, float width, float height) {\n    return mix(\n        0.0,\n        1.0,\n        float(abs(uv.x - 0.5) < width * 0.5) * float(abs(uv.y - 0.5) < height * 0.5)\n    );\n}\n\nfloat triangle(vec2 uv, vec2 a, vec2 b, vec2 c) {\n    bool abp = ((uv.x - a.x) * (a.y - b.y) + (uv.y - a.y) * (b.x - a.x)) >= 0.0;\n    bool bcp = ((uv.x - b.x) * (b.y - c.y) + (uv.y - b.y) * (c.x - b.x)) >= 0.0;\n    bool acp = ((uv.x - c.x) * (c.y - a.y) + (uv.y - c.y) * (a.x - c.x)) >= 0.0;\n\n    return mix(0.0, 1.0, float(abp == bcp) * float(bcp == acp));\n}\n\nvec4 color(float shape, vec4 color) {\n    return mix(\n        vec4(0.0),\n        vec4(mix(vec3(shape), color.xyz, color.w), color.w),\n        float(shape > 0.0)\n    );\n}\n\nfloat digit(vec2 uv, int value, float width, float height) {\n    uv = uv/vec2(width, height);\n    vec2 displacement = vec2((0.5/width - 0.5), (0.5/height - 0.5));\n\n    switch (value)\n    {\n        case 1:\n            return clamp(\n                rectangle(move(uv, vec2(-0.025, 0.375) + displacement), 0.383333, 0.25) +\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 1.0, 0.25) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.3333333, 0.5) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.75) + displacement,\n                    vec2(0.2833333, 0.75) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 2:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(0.3333333, 0.25) + displacement), 0.3333333, 0.1) +\n                rectangle(move(uv, vec2(0.2, 0.125) + displacement), 0.06666667, 0.15) +\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 1.0, 0.25) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.43333333, 0.1) +\n                rectangle(move(uv, vec2(-0.3333333, -0.225) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(-0.2, -0.125) + displacement), 0.06666667, 0.15) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.75) + displacement,\n                    vec2(0.2833333, 0.75) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.8) + displacement,\n                    vec2(1.0, 0.8) + displacement,\n                    vec2(0.7166667, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.3) + displacement,\n                    vec2(0.2833333, 0.55) + displacement,\n                    vec2(0.2833333, 0.3) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.7) + displacement,\n                    vec2(1.0, 0.7) + displacement,\n                    vec2(0.7166667, 0.45) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 3:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(0.3333333, 0.275) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(0.2, 0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.43333333, 0.1) +\n                rectangle(move(uv, vec2(0.2, -0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(0.3333333, -0.275) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 0.4333333, 0.25) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.75) + displacement,\n                    vec2(0.2833333, 0.75) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.8) + displacement,\n                    vec2(1.0, 0.8) + displacement,\n                    vec2(0.7166667, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.75) + displacement,\n                    vec2(1.0, 0.75) + displacement,\n                    vec2(0.7166667, 0.5) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.25) + displacement,\n                    vec2(1.0, 0.25) + displacement,\n                    vec2(0.7166667, 0.5) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.2) + displacement,\n                    vec2(1.0, 0.2) + displacement,\n                    vec2(0.7166667, 0.0) + displacement\n                ) + \n                triangle(\n                    uv,\n                    vec2(0.0, 0.25) + displacement,\n                    vec2(0.2833333, 0.25) + displacement,\n                    vec2(0.2833333, 0.0) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 4:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, -0.125) + displacement), 1.0, 0.25) +\n                rectangle(move(uv, vec2(0.1666667, 0.0) + displacement), 0.3333333, 1.0) +\n                triangle(\n                    uv,\n                    vec2(0.5, 1.0) + displacement,\n                    vec2(0.0, 0.5) + displacement,\n                    vec2(0.25, 0.5) + displacement\n                ) + \n                triangle(\n                    uv,\n                    vec2(0.5, 1.0) + displacement,\n                    vec2(0.5, 0.75) + displacement,\n                    vec2(0.25, 0.5) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 5:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(0.3333333, -0.25) + displacement), 0.3333333, 0.1) +\n                rectangle(move(uv, vec2(0.2, -0.125) + displacement), 0.06666667, 0.15) +\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 1.0, 0.25) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.43333333, 0.1) +\n                rectangle(move(uv, vec2(-0.3333333, 0.225) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(-0.2, 0.125) + displacement), 0.06666667, 0.15) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.25) + displacement,\n                    vec2(0.2833333, 0.25) + displacement,\n                    vec2(0.2833333, 0.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.2) + displacement,\n                    vec2(1.0, 0.2) + displacement,\n                    vec2(0.7166667, 0.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.7) + displacement,\n                    vec2(0.2833333, 0.45) + displacement,\n                    vec2(0.2833333, 0.7) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.3) + displacement,\n                    vec2(1.0, 0.3) + displacement,\n                    vec2(0.7166667, 0.55) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 6:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(-0.3333333, 0.0) + displacement), 0.3333333, 0.6) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.43333333, 0.1) +\n                rectangle(move(uv, vec2(0.2, -0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(0.3333333, -0.25) + displacement), 0.3333333, 0.1) +\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 0.4333333, 0.25) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.8) + displacement,\n                    vec2(0.2833333, 0.8) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.75) + displacement,\n                    vec2(1.0, 0.75) + displacement,\n                    vec2(0.7166667, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.3) + displacement,\n                    vec2(1.0, 0.3) + displacement,\n                    vec2(0.7166667, 0.55) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.2) + displacement,\n                    vec2(1.0, 0.2) + displacement,\n                    vec2(0.7166667, 0.0) + displacement\n                ) + \n                triangle(\n                    uv,\n                    vec2(0.0, 0.2) + displacement,\n                    vec2(0.2833333, 0.2) + displacement,\n                    vec2(0.2833333, 0.0) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 7:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 1.0, 0.25) +\n                triangle(\n                    uv,\n                    vec2(0.6666667, 0.75) + displacement,\n                    vec2(1.0, 0.75) + displacement,\n                    vec2(0.3333333, 0.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.6666667, 0.0) + displacement,\n                    vec2(1.0, 0.75) + displacement,\n                    vec2(0.3333333, 0.0) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 8:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(0.3333333, 0.275) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(-0.3333333, 0.275) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(0.2, 0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(-0.2, 0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.43333333, 0.1) +\n                rectangle(move(uv, vec2(0.2, -0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(-0.2, -0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(0.3333333, -0.275) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(-0.3333333, -0.275) + displacement), 0.3333333, 0.05) +\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 0.4333333, 0.25) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.8) + displacement,\n                    vec2(0.2833333, 0.8) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.8) + displacement,\n                    vec2(1.0, 0.8) + displacement,\n                    vec2(0.7166667, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.75) + displacement,\n                    vec2(1.0, 0.75) + displacement,\n                    vec2(0.7166667, 0.5) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.25) + displacement,\n                    vec2(1.0, 0.25) + displacement,\n                    vec2(0.7166667, 0.5) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.2) + displacement,\n                    vec2(1.0, 0.2) + displacement,\n                    vec2(0.7166667, 0.0) + displacement\n                ) + \n                triangle(\n                    uv,\n                    vec2(0.0, 0.2) + displacement,\n                    vec2(0.2833333, 0.2) + displacement,\n                    vec2(0.2833333, 0.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.2833333, 0.25) + displacement,\n                    vec2(0.0, 0.25) + displacement,\n                    vec2(0.2833333, 0.5) + displacement\n                ) + triangle(\n                    uv,\n                    vec2(0.2833333, 0.75) + displacement,\n                    vec2(0.0, 0.75) + displacement,\n                    vec2(0.2833333, 0.5) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        case 9:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(0.3333333, 0.0) + displacement), 0.3333333, 0.6) +\n                rectangle(move(uv, vec2(0.0, 0.0) + displacement), 0.43333333, 0.1) +\n                rectangle(move(uv, vec2(-0.2, 0.15) + displacement), 0.06666667, 0.2) +\n                rectangle(move(uv, vec2(-0.3333333, 0.25) + displacement), 0.3333333, 0.1) +\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 0.4333333, 0.25) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.8) + displacement,\n                    vec2(0.2833333, 0.8) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.8) + displacement,\n                    vec2(1.0, 0.8) + displacement,\n                    vec2(0.7166667, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.2833333, 0.7) + displacement,\n                    vec2(0.0, 0.7) + displacement,\n                    vec2(0.2833333, 0.45) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.2) + displacement,\n                    vec2(1.0, 0.2) + displacement,\n                    vec2(0.7166667, 0.0) + displacement\n                ) + \n                triangle(\n                    uv,\n                    vec2(0.0, 0.25) + displacement,\n                    vec2(0.2833333, 0.25) + displacement,\n                    vec2(0.2833333, 0.0) + displacement\n                ),\n                0.0,\n                1.0\n            );\n        default:\n            return clamp(\n                rectangle(move(uv, vec2(0.0, 0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(0.0, -0.375) + displacement), 0.4333333, 0.25) +\n                rectangle(move(uv, vec2(-0.3333333, 0.0) + displacement), 0.3333333, 0.61) +\n                rectangle(move(uv, vec2(0.3333333, 0.0) + displacement), 0.3333333, 0.61) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.8) + displacement,\n                    vec2(0.2833333, 0.8) + displacement,\n                    vec2(0.2833333, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.8) + displacement,\n                    vec2(1.0, 0.8) + displacement,\n                    vec2(0.7166667, 1.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.7166667, 0.2) + displacement,\n                    vec2(1.0, 0.2) + displacement,\n                    vec2(0.7166667, 0.0) + displacement\n                ) +\n                triangle(\n                    uv,\n                    vec2(0.0, 0.2) + displacement,\n                    vec2(0.2833333, 0.2) + displacement,\n                    vec2(0.2833333, 0.0) + displacement\n                ),\n                0.0,\n                1.0\n            );\n    }\n}\n\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    //vec2 uv = fragCoord/iResolution.xy;\n    float aspectRatio = iResolution.x / iResolution.y;\n    vec2 baseUv = fragCoord / iResolution.xy;\n    vec2 uv = vec2(((baseUv.x * 2.0 - 1.0) * aspectRatio + 1.0) * 0.5, baseUv.y);\n    vec4 pongData = texture(iChannel0, uv);\n    vec4 pongData2 = texture(iChannel1, uv);\n    vec4 paddleA = vec4(\n        rectangle(move(uv, vec2(-paddlePositionX, pongData.x)), paddleWidth, paddleHeight)\n    );\n    vec4 paddleB = vec4(\n        rectangle(move(uv, vec2(paddlePositionX, pongData.y)), paddleWidth, paddleHeight)\n    );\n    vec4 middleLine = vec4(\n        rectangle(uv, 0.004, 1.0)\n    );\n    vec4 ball = vec4(\n        circle(move(uv, pongData2.xy), ballRadius)\n    );\n    vec4 scoreA = vec4(\n        digit(move(uv, vec2(-0.1, -0.42)), int(pongData.z + 0.1), 0.07, 0.1)\n    );\n    vec4 scoreB = vec4(\n        digit(move(uv, vec2(0.1, -0.42)), int(pongData.w + 0.1), 0.07, 0.1)\n    );\n    middleLine.w *= step(abs(sin(uv.y * 100.0)), 0.9);\n    vec4 result = vec4(0.0, 0.0, 0.0, 1.0);\n    result = mix(result, paddleA, paddleA.w);\n    result = mix(result, paddleB, paddleB.w);\n    result = mix(result, middleLine, middleLine.w);\n    result = mix(result, scoreA, scoreA.w);\n    result = mix(result, scoreB, scoreB.w);\n    result = mix(result, ball, ball.w);\n    fragColor = result;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int Key_UpArrow  = 38;\nconst int Key_DownArrow = 40;\nconst int Key_W  = 87;\nconst int Key_S = 83;\n\nbool isKeyDown(int key)\n{\n    return texelFetch(iChannel2, ivec2(key, 0), 0).x > 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 pongData = texture(iChannel0, uv);\n    vec4 pongData2 = texture(iChannel1, uv);\n    vec2 ballPosition = pongData2.xy;\n    float playerAInput = float(isKeyDown(Key_W)) - float(isKeyDown(Key_S));\n    float playerBInput = float(isKeyDown(Key_UpArrow)) - float(isKeyDown(Key_DownArrow));\n    float paddleAPositionY = clamp(\n        pongData.x + playerAInput * iTimeDelta * paddleSpeed,\n         -0.5 + paddleHeight,\n          0.5 - paddleHeight\n    );\n    float paddleBPositionY = clamp(\n        pongData.y + playerBInput * iTimeDelta * paddleSpeed,\n         -0.5 + paddleHeight,\n          0.5 - paddleHeight\n    );\n    vec2 score = pongData.zw;\n\n    if (ballPosition.x - ballRadius < -0.5 + iTimeDelta * ballSpeed) {\n        score.y += 1.0;\n    }\n    if (ballPosition.x + ballRadius > 0.5 - iTimeDelta * ballSpeed) {\n        score.x += 1.0;\n    }\n    if (any(bvec2(score.x > 9.5, score.y > 9.5))) {\n        score = vec2(0.0);\n    }\n    pongData.x = paddleAPositionY;\n    pongData.y = paddleBPositionY;\n    pongData.zw = score;\n    fragColor = pongData;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nbool aabbIntersectsCircle(\n    vec2 aabbPosition,\n    float aabbWidth,\n    float aabbHeight,\n    vec2 circlePosition,\n    float circleRadius\n) {\n    float halfAabbWidth = aabbWidth * 0.5;\n    float halfAabbHeight = aabbHeight * 0.5;\n    float circumcircleRadius = sqrt(\n        halfAabbWidth * halfAabbWidth + halfAabbHeight * halfAabbHeight\n    );\n    float isIntersectingCircumcircle = float(\n        distance(circlePosition, aabbPosition) <= circleRadius + circumcircleRadius\n    );\n    vec2 aabbMin = vec2(aabbPosition.x - halfAabbWidth, aabbPosition.y - halfAabbHeight);\n    vec2 aabbMax = vec2(aabbPosition.x + halfAabbWidth, aabbPosition.y + halfAabbHeight);\n    vec2 cAabbMin = vec2(circlePosition.x - circleRadius, circlePosition.y - circleRadius);\n    vec2 cAabbMax = vec2(circlePosition.x + circleRadius, circlePosition.y + circleRadius);\n    float isCircleAabbIntersectingAabb = \n        float(aabbMin.x <= cAabbMax.x) * float(aabbMax.x >= cAabbMin.x) *\n        float(aabbMin.y <= cAabbMax.y) * float(aabbMax.y >= cAabbMin.y);\n\n    return isIntersectingCircumcircle * isCircleAabbIntersectingAabb > 0.0;\n}\n\nconst float paddleHeightOneThird = paddleHeight * 0.3;\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 pongData = texture(iChannel0, uv);\n    vec4 pongData2 = texture(iChannel1, uv);\n    vec2 ballPosition = pongData2.xy;\n    vec2 ballDirection = pongData2.zw;\n\n    if (ballPosition.x > 0.5 || ballPosition.x < -0.5) {\n        ballPosition = vec2(0.0);\n    }\n    else {\n        ballPosition += ballDirection * ballSpeed * iTimeDelta;\n    }\n    if (dot(ballDirection, ballDirection) < 0.1) {\n        ballDirection = vec2(ceil(random(vec2(iTime, iTime))), 0.0);\n    }\n    if (aabbIntersectsCircle(\n        vec2(-paddlePositionX, pongData.x),\n        paddleWidth,\n        paddleHeightOneThird,\n        ballPosition,\n        ballRadius\n    )) {       \n        ballDirection = vec2(1.0, 0.0);\n    }\n    else if (aabbIntersectsCircle(\n        vec2(-paddlePositionX, pongData.x + paddleHeightOneThird),\n        paddleWidth,\n        paddleHeightOneThird,\n        ballPosition,\n        ballRadius\n    )) {\n        ballDirection = vec2(HalfSqrt2, HalfSqrt2);\n    }\n    else if (aabbIntersectsCircle(\n        vec2(-paddlePositionX, pongData.x - paddleHeightOneThird),\n        paddleWidth,\n        paddleHeightOneThird,\n        ballPosition,\n        ballRadius\n    )) {\n        ballDirection = vec2(HalfSqrt2, -HalfSqrt2);\n    }\n    else if (aabbIntersectsCircle(\n        vec2(paddlePositionX, pongData.y),\n        paddleWidth,\n        paddleHeightOneThird,\n        ballPosition,\n        ballRadius\n    )) {       \n        ballDirection = vec2(-1.0, 0.0);\n    }\n    else if (aabbIntersectsCircle(\n        vec2(paddlePositionX, pongData.y + paddleHeightOneThird),\n        paddleWidth,\n        paddleHeightOneThird,\n        ballPosition,\n        ballRadius\n    )) {\n        ballDirection = vec2(-HalfSqrt2, HalfSqrt2);\n    }\n    else if (aabbIntersectsCircle(\n        vec2(paddlePositionX, pongData.y - paddleHeightOneThird),\n        paddleWidth,\n        paddleHeightOneThird,\n        ballPosition,\n        ballRadius\n    )) {\n        ballDirection = vec2(-HalfSqrt2, -HalfSqrt2);\n    }\n    if (ballPosition.y - ballRadius > 0.5) {\n        ballDirection = reflect(ballDirection, vec2(0.0, -1.0));\n    }\n    if (ballPosition.y + ballRadius < -0.5) {\n        ballDirection = reflect(ballDirection, vec2(0.0, 1.0));\n    }\n    if (ballPosition.x - ballRadius < -0.5) {\n        //ballDirection.x = -ballDirection.x;\n        ballPosition = vec2(0.0, pongData.x);\n        ballDirection = vec2(-1.0, 0.0);\n    }\n    if (ballPosition.x + ballRadius > 0.5) {\n        //ballDirection.x = -ballDirection.x;\n        ballPosition = vec2(0.0, pongData.y);\n        ballDirection = vec2(1.0, 0.0);\n    }\n    pongData2.xy = ballPosition;\n    pongData2.zw = ballDirection;\n    fragColor = pongData2;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.1415926538\n#define HalfSqrt2 0.707106781187\nconst float paddlePositionX = 0.45;\nconst float paddleWidth = 0.01;\nconst float paddleHeight = 0.08;\nconst float paddleSpeed = 1.2;\nconst float ballRadius = 0.01;\nconst float ballSpeed = 0.6;","name":"Common","description":"","type":"common"}]}