{"ver":"0.1","info":{"id":"ct3BWH","date":"1701176716","viewed":11,"name":"My_first_shader_","username":"moerastrid","description":"This shader is my first","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n//backgroundImage();\n\nvec3 rgb(float r, float g, float b) {\n\treturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\n\tfloat d = length(pos - uv) - rad;\n\tfloat t = clamp(d, 0.0, 1.0);\n\treturn vec4(color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 position = vec2(.5);\n    vec2 U = (uv - position)*64.0;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    vec4 tempColor = vec4(col,1.0);\n    vec4 backgroundColor = vec4(rgb(255.0, 222.0, 2.0), 0.8);\n    \n    fragColor = mix(tempColor, backgroundColor, 0.75);\n}\n","name":"Image","description":"","type":"image"}]}