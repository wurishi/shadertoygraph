{"ver":"0.1","info":{"id":"fdj3Rd","date":"1617826893","viewed":45,"name":"lol1","username":"YoussefVictor","description":"colors","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int k_gridW = 15;\nconst int k_gridH = 11;\nconst int k_phase = 0;\nconst float k_variationSpeed = 1.314f;\n\nuvec2 rvec;\nuint _george_marsaglia() {\n\trvec.x = 36969u * (rvec.x & 65535u) + (rvec.x >> 16u);\n\trvec.y = 18000u * (rvec.y & 65535u) + (rvec.y >> 16u);\n\treturn (rvec.x << 16u) + rvec.y;\n}\n\n//Random Functions\nfloat rand_float() {\n\treturn float(_george_marsaglia()) / float(0xFFFFFFFFu);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    float xx = uv.x * float(k_gridW);\n    float yy = uv.y * float(k_gridH);\n    // Time varying pixel color\n    int xi = int(xx);\n    int yi = int(yy);\n    \n    int gridCenterW = k_gridW / 2;\n    int gridCenterH = k_gridH / 2;\n    \n    int manhattanDistance = abs(xi - gridCenterW) + abs(yi - gridCenterH);\n    int k = manhattanDistance % k_phase;\n    float kf = float(k);\n    \n    //Initialize RNG\n    \n\trvec = uvec2(xx,yy);\n    float offset = float(int(rand_float()>0.5));\n    int pick = int((xx+yy+offset*iTime+iTime)) % 5;\n    \n    vec3 col = vec3(0.0);\n    switch(pick) {\n        case 0:\n            col = vec3(255.0/255.0,16.0/255.0,167.0/255.0);\n            break;\n        case 1:\n            col = vec3(228.0/255.0,255.0/255.0,0.0/255.0);\n            break;\n        case 2:\n            col = vec3(0.0/255.0,255.0/255.0,190.0/255.0);\n            break;\n        case 3:\n            col = vec3(0.0/255.0,161.0/255.0,253.0/255.0);\n            break;\n        case 4:\n            col = vec3(186.0/255.0,67.0/255.0,255.0/255.0);\n            break;\n    };\n    //vec3[5] colors = {,\n    //vec3(255.0/255.0,16.0/255.0,167.0/255.0),\n    //vec3(255.0/255.0,16.0/255.0,167.0/255.0),\n    //vec3(255.0/255.0,16.0/255.0,167.0/255.0),\n    //vec3(255.0/255.0,16.0/255.0,167.0/255.0)};\n    \n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}