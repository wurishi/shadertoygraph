{"ver":"0.1","info":{"id":"lXScRW","date":"1727025616","viewed":131,"name":"Blood Forminhas","username":"Elsio","description":"click","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["domainrepetition","pistons"],"hasliked":0,"parentid":"lfXSzr","parentname":"Forminhas"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S smoothstep\n#define pi acos(-1.)\n#define rot(a) mat2(cos(a + vec4(0, 11, 33, 0)))\n#define spring(x) (S(-.4, .4, x) + S(-.3, .3, x) - S(-.7, .7, x))\n#define h21(v) fract(sin(dot(v, vec2(12.9898,78.233)))*43758.5453123)\n#define cyl(q, r, h) length(max(vec2(-sign(r) * length(p - q) + r, pz - h), 0.))\n#define norm(p) normalize(vec3(map(p + e), map(p + e.yxy), map(p + e.yyx)) - map(p))\n#define smpl(p, dir, dist) S(-dist, dist, map(p + dir * dist))\n#define t (iTime + 25.)\n\nvec3 face(vec3 p) {\n     vec3 a = abs(p);\n     return step(a.yzx, a) * step(a.zxy, a) * sign(p);\n}\n\nvec3 id;\nfloat gnd, debug;\n\nfloat map(vec3 p) {\n    float s, pz = p.z;\n    vec3 m, a, b, k, h = p;\n    \n    p.z = \n      dot(\n          cos(p.xy * 5.) * 2.5, \n          sin(p.xy * 2.)\n      ) * .1;\n    \n    id = floor(p) + .5;\n    m = sign(mod(p, 2.) - 1.);\n    if(m.x * m.y * m.z < 0.) \n            id += face(p - id);\n    p -= id;\n    \n    b = 1. - abs(face(p));\n    a = sign(p) * b.zxy; \n    b = sign(p) * b.yzx;\n    k = length(p - a) < length(p - b) ? a : b;\n    \n    #define L(p,a,z)  length( max( vec2(length(p) a , z ), 0.))\n    \n    \n    float z = spring(\n                sin(h21(id.yx) * t * 2.)) * 2. - .5,\n    \n    adj = cyl(k , -.6,  2.   ), // length( max( vec2( length(p - k) - .6, pz - 2.    ), 0.)),\n    cur = cyl(0., -.6, .1 * z), // length( max( vec2( length(p    ) - .6, pz - .1 * z), 0.)),        \n    cur2= cyl(0., -.4, .5 * z), // length( max( vec2( length(p    ) - .4, pz - .5 * z), 0.)),        \n    gnd = cyl(0., .68,  0.   ); // length( max( vec2(-length(p    ) +.68, pz         ), 0.));\n    \n    if(cur < cur2) \n        id -= abs(face(id));\n    \n    cur = min(gnd - .04, min(min(cur, cur2), adj) - .09);\n\n    \n    \n    \n    vec3 g = h;\n    \n    g.xy = mod(h.xy + .5, 1.) - .5;\n    h.xy = mod(h.xy, .05) - .025;\n    \n    float grid = \n              min( \n                  max(\n                      length(g.xy), \n                      g.z - .8\n                  ),\n                  min(\n                      length(g.xz + vec2(0, -.75)),\n                      length(g.yz + vec2(0, -.75))\n                  )\n              ) - .02;\n              \n    \n    if(iMouse.z > 0. || cos(t) > .75){\n        debug = step(grid, cur);\n        return min(grid, cur);\n    }\n    \n    return cur;\n}\n\n\nvoid mainImage(out vec4 o, in vec2 u) {\n    vec2 R = iResolution.xy;\n    u = (u - R / 2.) / R.y;\n    \n    //camera\n    vec3 D = normalize(vec3(1.5, u)), \n         p = vec3(-7, 0, 0); \n         \n    vec2 M = iMouse.z > 0. \n                      ? pi/4. * (iMouse.xy - R / 2.) / R.y\n                      : vec2(0);\n    \n    float tt = t / 3.,\n          yrot = sin(tt * .3) * .2 + .7, \n          zrot = tt * .2;\n    \n    D.xz *= rot(yrot-M.y);\n    D.yx *= rot(zrot);\n    D.yx *= rot(M.x);\n    p.xz *= rot(yrot);\n    p.yx *= rot(zrot);\n    p += vec3(tt * vec2(.5, 2), cos(tt));\n    \n    float s = 1., i; \n    while(i++ < 140. && s * s > 1e-6 ) \n        s = map(p), \n        p += s * D;\n    \n    float ao, spec;\n          \n    vec3 mcol = debug != 1. ?  vec3(1, 0, 0) : vec3(.5),\n         e = vec3(.01, 0, 0),           \n         n = norm(p), \n         r = reflect(D, n),\n         col;\n\n    ao = smpl(p, n, .01)\n            * sqrt(\n                  smpl(p, r, 1.9) \n                * smpl(p, r, .4) \n                * smpl(p, r, .5));\n    \n    spec = length(sin(r * 3.) * .25 + .35);\n    o.rgb = sqrt((mcol * spec + pow(spec, 8.)) * ao);\n}","name":"Image","description":"","type":"image"}]}