{"ver":"0.1","info":{"id":"cdKSWV","date":"1681642573","viewed":82,"name":"mushroom fractal","username":"104","description":"more 2d sketching","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float gStep = .05;\n#define ENTROPY\nvec4 hash42(vec2 p)\n{\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uvo = uv-.5;\n    uv.x *= iResolution.x / iResolution.y;\n    o = vec4(0);\n    float t = iTime;\n    uv += (t+sin(t*vec2(1.,1.2)))*vec2(.1,.15);\n    uv *= 4.;\n   \n    vec2 id = floor(uv);\n    vec2 p = uv-id;\n    vec4 gh = hash42(id);\n    \n    for (float i = 0.;i<1.;i += gStep)\n    {\n        id = floor(uv);\n        p = uv-id;\n        vec4 h = hash42(id);\n        vec2 p2 = abs(p-.5)-1./6.; // triangle edges\n        #ifdef ENTROPY\n        p2 += (sin(iTime*gh.x))*.1;\n        uv += p2.yx*mix(.3,1.,gh.z); // essentially sharpness of pattern\n        #else\n        uv += p2.yx; // essentially sharpness of pattern\n        #endif\n        o += h;\n    }\n    \n    o /= 15.;\n    o.rgb = mix(o.rgb,vec3(o.r+o.g+o.b)/3.,.5);\n    o *= 1.-dot(uvo,1.5*uvo);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}