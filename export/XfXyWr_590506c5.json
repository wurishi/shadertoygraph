{"ver":"0.1","info":{"id":"XfXyWr","date":"1720979539","viewed":50,"name":"AuroraPolaris","username":"cinanmon","description":"I tried to draw a aurora without using noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(2.9898, 8.233))) * 3758.5453);\n}\n\n\nfloat dynamicNoise(vec2 uv, float time) {\n    return (sin(uv.x  + time * 0.5) + abs(cos(uv.x * 0.7 + time * 0.3)) * 0.3) * cos( uv.x * 50000.0) * 0.7 + 0.5;\n}\n\nvec3 dynamicEffect(vec2 uv, float time) {\n    float d = dynamicNoise(uv, time + 10.0);\n    float v = uv.y * 0.9 + d * 0.1 ;\n    v = 1.1 - abs(v * 2.0 - 1.0);\n    v = pow(v, 2.0 + (sin((time * 0.1+ d * 0.05) * 9.0) + sin(time * 0.5 + d * 0.25)) * 0.1);\n\n    float x = (1.0 - uv.x * 0.75);\n    float y = 1.0 - abs(uv.y * 2.0 - 1.0);\n    return vec3(x * 0.5, y, x) * v * 0.8;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n\n    vec3 color = dynamicEffect(uv, iTime);\n    \n\n    float starNoise = random(fragCoord.xy * 0.3);\n    float starIntensity = pow(starNoise, 50.0) * (1.0 - uv.y * 0.7);\n    color += vec3(starIntensity);\n\n   \n    fragColor.rgb = color;\n    fragColor.a = 1.0;\n}\n","name":"Image","description":"","type":"image"}]}