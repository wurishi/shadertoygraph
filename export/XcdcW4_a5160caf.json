{"ver":"0.1","info":{"id":"XcdcW4","date":"1730662689","viewed":11,"name":"No-Face (Kaonashi)","username":"hazelwu","description":"this was an actual pumpkin in GovCo","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["pumpkin"],"hasliked":0,"parentid":"XftyRM","parentname":"Moldy Pumpkin (crying)"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float edge = 0.02;\n\nfloat circle(vec2 r, vec2 center, float radius) {\n\treturn 1. - smoothstep(radius, radius + 0.5 * edge, length(r - center));\n}\n\n\nfloat ellipse(vec2 r, vec2 focal1, vec2 focal2, float radius) {\n    float distance = length(r - focal1) + length(r - focal2);\n\treturn 1. - smoothstep(radius, radius + edge, distance);\n}\n\nfloat hline(vec2 r, vec2 center, float base) {\n    if (abs(r.x - center.x) <= 0.5 * base) {\n        return 1. - smoothstep(0., edge, length(r.y - center.y));\n    } else {\n        float dist1 = length(r - vec2(center.x - 0.5 * base, center.y));\n        float dist2 = length(r - vec2(center.x + 0.5 * base, center.y));\n        return 1. - smoothstep(0., edge, min(dist1, dist2));\n    }\n}\n\nfloat rectangle(vec2 r, vec2 center, float width, float height) {\n    vec2 point = center;\n    if (abs(r.x - center.x) <= 0.5 * width && abs(r.y - center.y) <= 0.5 * height) {\n        return 1.;\n    }\n    \n    if (abs(r.x - center.x) <= 0.5 * width) { point.x = r.x; }\n    if (r.x <= center.x - 0.5 * width) { point.x = center.x - 0.5 * width; }\n    if (r.x >= center.x + 0.5 * width) { point.x = center.x + 0.5 * width; }\n    \n    if (abs(r.y - center.y) <= 0.5 * height) { point.y = r.y; }\n    if (r.y <= center.y - 0.5 * height) { point.y = center.y - 0.5 * height; }\n    if (r.y >= center.y + 0.5 * height) { point.y = center.y + 0.5 * height; }\n    \n    return 1. - smoothstep(0., edge, length(r - point));\n}\n\nfloat triangle1(vec2 r, vec2 center, float width, float height) { // ▼\n    if (r.y >= center.y) {\n        vec2 point = center;\n        if (abs(r.x - center.x) <= 0.5 * width) { point.x = r.x; }\n        if (r.x <= center.x - 0.5 * width) { point.x = center.x - 0.5 * width; }\n        if (r.x >= center.x + 0.5 * width) { point.x = center.x + 0.5 * width; }\n        return 1. - smoothstep(0., edge, length(r - point));\n    }\n    if (r.y <= center.y - height) {\n        vec2 point = vec2(center.x, center.y - height);\n        return 1. - smoothstep(0., edge, length(r - point));\n    }\n    float range = width - width * abs(r.y - center.y) / height;\n    return 1. - smoothstep(0., edge, abs(r.x - center.x) - 0.5 * range);\n}\n\nfloat triangle2(vec2 r, vec2 center, float width, float height) { // ▼\n    if (r.y <= center.y) {\n        vec2 point = center;\n        if (abs(r.x - center.x) <= 0.5 * width) { point.x = r.x; }\n        if (r.x <= center.x - 0.5 * width) { point.x = center.x - 0.5 * width; }\n        if (r.x >= center.x + 0.5 * width) { point.x = center.x + 0.5 * width; }\n        return 1. - smoothstep(0., edge, length(r - point));\n    }\n    if (r.y >= center.y + height) {\n        vec2 point = vec2(center.x, center.y + height);\n        return 1. - smoothstep(0., edge, length(r - point));\n    }\n    float range = width - width * abs(r.y - center.y) / height;\n    return 1. - smoothstep(0., edge, abs(r.x - center.x) - 0.5 * range);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tvec2 r = 2.0 * vec2(fragCoord.xy - 0.5 * iResolution.xy)/iResolution.x;\n    \n    vec3 col = vec3(0., 0., 0.); // black background\n\n    \n    vec3 pumpkin = vec3(255., 117., 24.) / 255.;\n    vec3 mold = vec3(190., 190., 190.) / 255.; // grey\n        \n    float stalk = 0.02;\n    if (abs(r.x) < stalk && 0. < r.y && r.y < 0.35) {\n        col = vec3(123., 63., 0.) / 255.;\n    }\n    \n    col = mix(col, pumpkin, circle(r, vec2(0., -0.02), 0.3));\n\n    // the mold growing over time\n    float growth = min(1.25, 1. + iTime / 20.);\n    mold *= 0.8 * growth;\n    \n    // the rectangles in the eyes (the pupils?)\n    //col = mix(col, mold, hline(r, vec2(-0.12, 0.05), 0.08 * growth));\n    //col = mix(col, mold, hline(r, vec2(0.12, 0.05), 0.08 * growth));\n    col = mix(col, mold, rectangle(r, vec2(-0.12, 0.02), 0.05 * growth, 0.001 * growth));\n    col = mix(col, mold, rectangle(r, vec2(0.12, 0.02), 0.05 * growth, 0.001 * growth));\n\n    // the triangles in the eyes (the sclera?)\n    col = mix(col, mold, triangle1(r, vec2(-0.12, -0.02), 0.05 * growth, 0.08 * growth));\n    col = mix(col, mold, triangle1(r, vec2(0.12, -0.02), 0.05 * growth, 0.08 * growth));\n    col = mix(col, mold, triangle2(r, vec2(-0.12, 0.06), 0.05 * growth, 0.08 * growth));\n    col = mix(col, mold, triangle2(r, vec2(0.12, 0.06), 0.05 * growth, 0.08 * growth));\n\n    // the nose\n    //col = mix(col, mold, triangle2(r, vec2(0, 0.00), 0.06 * growth));\n\n    // the mouth\n        col = mix(col, mold, ellipse(r, vec2(-0.1 * growth, -0.2), vec2(0.1 * growth, -0.2), 0.2 * growth));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}