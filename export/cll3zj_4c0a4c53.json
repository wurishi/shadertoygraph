{"ver":"0.1","info":{"id":"cll3zj","date":"1672055380","viewed":121,"name":"Hall of Moria","username":"midorikuma","description":"magnificence","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rep(vec3 p){\n    vec2 pxz = mod(p.xz, 2.0)-1.0;\n    return vec3(pxz[0],p.y,pxz[1]);\n}\nvec3 rep2(vec3 p){\n    vec2 pxz = vec2(atan(p.z, p.x)/acos(-1.),length(p.xz)-0.24);\n    pxz.x = mod(pxz.x, 0.2)-0.1;\n    return vec3(pxz[0],p.y,pxz[1]);\n}\n\nfloat distFloor(vec3 p){\n    return dot(p, vec3(0.0, 1.0, 0.0));\n}\nfloat pillar(vec3 p){\n    float rad = smoothstep(0.2,-0.1,p.y)+smoothstep(3.0,4.0,p.y)*14.0;\n    vec3 q = vec3(0.0,0.0,0.2+rad*0.1);\n    return length(rep(p).xz-q.xy)-q.z;\n}\nfloat capsule(vec3 p){\n    vec3 a = vec3(0.0,0.3,0.0), b = vec3(0.0,2.7,0.0);\n    vec3 pa = rep2(rep(p)) - a, ba = b - a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h ) - 0.05;\n}\nfloat distFunc(vec3 p){\n    float res = distFloor(p);\n    res=min(res,pillar(p));\n    res=max(res,-capsule(p));\n    return res;\n}\n\nvec3 genNormal(vec3 p){\n    float d = 0.0001;\n    return normalize(vec3(\n        distFunc(p + vec3(  d, 0.0, 0.0)) - distFunc(p + vec3( -d, 0.0, 0.0)),\n        distFunc(p + vec3(0.0,   d, 0.0)) - distFunc(p + vec3(0.0,  -d, 0.0)),\n        distFunc(p + vec3(0.0, 0.0,   d)) - distFunc(p + vec3(0.0, 0.0,  -d))\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p = (gl_FragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec3 cPos = vec3(0.0,  0.0, mod(iTime*0.5,20.0))+vec3(0.0,1.0,0.0);\n    vec3 lPos = cPos+vec3(0.0,-0.4,5.0)+vec3(cos(iTime/1.9)*1.5,cos(iTime/1.7)/2.5,cos(iTime/3.0));\n    vec3 cDir = vec3(0.5*cos(iTime/10.0),0.2*cos(iTime/5.0),1.0);\n    vec3 cUp  = vec3(0.0,  0.6,  0.0);\n    vec3 cSide = cross(cDir, cUp);\n    \n    float tmp, dist;\n    tmp = 0.0;\n    vec3 dPos = cPos;\n    vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir);\n    for(int i = 0; i < 256; i++){\n        dist = distFunc(dPos);\n        dist = min(dist,length(dPos-lPos)-0.025);\n        tmp += dist;\n        dPos = cPos + tmp * ray;\n    }\n    \n    vec3 col = vec3(0.7,0.8,0.8);\n    float depth = length(dPos-lPos);\n    col = (col-depth/50.0)/2.5+col*smoothstep(2.0,0.0,depth);\n    vec3 lightDir = vec3(-0.8, 0.7, -0.8);\n    vec3 normal = genNormal(dPos);\n    float ref = dot(lightDir, normal);\n    col *= clamp(ref, 0.6, 0.8);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}