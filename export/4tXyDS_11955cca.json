{"ver":"0.1","info":{"id":"4tXyDS","date":"1552178366","viewed":274,"name":"flood-fill / edge","username":"ghost","description":"flood-fill to [well-defined] edges\n\n","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["flood"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 tex = texture(iChannel0, uv);\n    fragColor = tex;\n    \n    vec3 blinking = vec3(.5+.5*sin(-iTime*2.*3.1415+fragCoord.x-fragCoord.y));\n\tvec3 bg = texture(iChannel1,uv).xyz;\n    \n    //fragColor.xyz *= blinking;\n    fragColor.xyz += (1.-tex.w) * bg;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define COLOR_TOLERANCE 0.03125\n\n// flood-fill based on https://www.shadertoy.com/view/Xd3SWX\nvec4 floodfill(vec2 uv)\n{\n    vec4 c = vec4(0.);\n    vec2 m = vec2(-1.);\n    vec2 s = 1./iResolution.xy;\n\n    //if (iMouse.z > 0.)\n        m = iMouse.xy/iResolution.xy;\n\n    if (iFrame < 10) \n    {\n        c = texture(iChannel0, uv);\n        c.w = 1.0;\n    } \n\n    else \n    {\n        vec4 current  = texture(iChannel1, uv);\n        vec4 mouse    = texture(iChannel1, m);\n\n        vec4 u = texture(iChannel1, uv + vec2( 0., 1.) * s);\n        vec4 d = texture(iChannel1, uv + vec2( 0.,-1.) * s);\n        vec4 r = texture(iChannel1, uv + vec2( 1., 0.) * s);\n        vec4 l = texture(iChannel1, uv + vec2(-1., 0.) * s);\n\n        c = current;\n\n        // clicked pixel == seed\n        if (distance(uv, m) < .01) {\n            c.w = 0.; \n        }\n\n        // neighbor to filled pixel\n        else if (u.w == 0. || d.w == 0. || l.w == 0. || r.w  == 0.) {\n            // fill if color is similiar to seed\n            if (distance(current.xyz, mouse.xyz) < COLOR_TOLERANCE)\n                c.w = 0.;\n        }\n    }\n    /*\n    if (iTime > 10.)\n    {\n        vec4 current  = texture(iChannel1, uv);\n        vec4 mouse    = texture(iChannel1, m);\n\n        vec4 u = texture(iChannel1, uv + vec2( 0., 1.) * s);\n        vec4 d = texture(iChannel1, uv + vec2( 0.,-1.) * s);\n        vec4 r = texture(iChannel1, uv + vec2( 1., 0.) * s);\n        vec4 l = texture(iChannel1, uv + vec2(-1., 0.) * s);\n\n        c = current;\n\n        // clicked pixel == seed\n        if (distance(uv, m) < .01) {\n            c.w = 1.;\n        }\n\n        // neighbor to filled pixel\n        else if (u.w == 0. || d.w == 0. || l.w == 0. || r.w  == 0.) {\n            // fill if color is similiar to seed\n            if (distance(current.xyz, mouse.xyz) < COLOR_TOLERANCE)\n                c.w = 1.;\n        }\n    }*/\n    \n    return c;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{    \n    vec2 uv = fragCoord.xy/iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    fragColor = floodfill(uv);   \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const float edge_threshold = 0.3; //Edge threshold to 0\nconst float num_shades = 10.0; \t  //Number of toon shade \"levels\"\nconst float hue_add = 0.0; \t      //Add a offset to the hue channel\n\nfloat ox() { return 1.0 / iResolution.x; }\nfloat oy() { return 1.0 / iResolution.y; }\n\nvoid sobel(in sampler2D tex, in vec2 uv, out vec4 gx, out vec4 gy)\n{\n    vec4 p00 = texture(tex, uv + vec2(-ox(), -oy()));\n    vec4 p01 = texture(tex, uv + vec2(-ox(),  0.0));\n    vec4 p02 = texture(tex, uv + vec2(-ox(),  oy()));\n    \n    vec4 p10 = texture(tex, uv + vec2(0.0, -oy()));\n    vec4 p12 = texture(tex, uv + vec2(0.0,  oy()));\n    \n    vec4 p20 = texture(tex, uv + vec2(ox(), -oy()));\n    vec4 p21 = texture(tex, uv + vec2(ox(),  0.0));\n    vec4 p22 = texture(tex, uv + vec2(ox(),  oy()));\n    \n    gx = -p00 - 2.0*p01 - p02 + p20 + 2.0*p21 + p22;\n    gy = -p00 - 2.0*p10 - p20 + p02 + 2.0*p12 + p22;\n}\n\nvec3 colorEdge(vec2 uv, in sampler2D tex)\n{\n    vec4 gx, gy;\n    sobel(tex, uv, gx, gy);\n    if(length(vec2(gx.r, gy.r)) > edge_threshold) \n        return texture(iChannel0, uv).xyz;\n        //return vec3(1.);\n    else \n    \treturn vec3(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    //uv.x *= iResolution.x/iResolution.y; \n   \n    vec3 c = colorEdge(uv,iChannel0);\n    fragColor = vec4(c,1.);\n}","name":"Buffer B","description":"","type":"buffer"}]}