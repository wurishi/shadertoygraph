{"ver":"0.1","info":{"id":"DddBzM","date":"1696979717","viewed":269,"name":"Hinged Squares","username":"fad","description":"Hinged square tessellation with uv-mapping","likes":25,"published":3,"flags":0,"usePreview":1,"tags":["grid","texture","uv","animation","square","squares","tesselation","hinged"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415927;\n\nvoid mainImage(out vec4 O, vec2 I) {\n    vec2 R = iResolution.xy;\n    vec2 p = (2.0 * I - R) / R.y * 8.0;\n    float t = 1.0 - abs(1.0 - mod(iTime / 2.0, 2.0));\n    float a = smoothstep(0.0, 1.0, smoothstep(0.0, 1.0, t)) * PI / 2.0;\n    float c = cos(a);\n    float s = sin(a);\n    float b = c + s;\n    vec2 d = mat2(c, s, -s, c) * asin(cos(p / b)) * b / PI;\n    vec2 q = PI * floor(p / PI / b);\n    vec2 uv = q + PI * (0.5 - d * cos(q));\n    uv = (uv / 8.0 * R.y + R) / 2.0 / R;\n    O = step(max(abs(d.x), abs(d.y)), 0.5) * texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}