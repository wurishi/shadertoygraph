{"ver":"0.1","info":{"id":"lfj3Dy","date":"1704709221","viewed":88,"name":"Gridding","username":"lukeriley","description":"marching","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"lf2GDy","parentname":"Marching 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBoxFrame( vec3 p, vec3 b, float e )\n{\n       p = abs(p  )-b;\n  vec3 q = abs(p+e)-e;\n  return min(min(\n      length(max(vec3(p.x,q.y,q.z),0.0))+min(max(p.x,max(q.y,q.z)),0.0),\n      length(max(vec3(q.x,p.y,q.z),0.0))+min(max(q.x,max(p.y,q.z)),0.0)),\n      length(max(vec3(q.x,q.y,p.z),0.0))+min(max(q.x,max(q.y,p.z)),0.0));\n}\n\nmat2 rot2D(float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nfloat map(vec3 p) {\n    p.z = mod(p.z,1.)-.5;\n   p.xy = fract(p.xy) - .5;\n    return sdBoxFrame(p,vec3(0.5,0.5,0.5), 0.01); \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    vec3 ro = vec3(0.5,0.5, -3);\n    vec3 rd = normalize(vec3(uv, 1));\n    vec3 col = vec3(0);\n    \n    ro.z = iTime;\n\n    float t = 0.;\n\n    for (int i = 0; i < 80; i++) {\n        vec3 p = ro + rd * t;\n        \n       p.xy *= rot2D(t*.15);\n\n        float d = map(p);\n\n        t += d;\n\n        if (d < .001) break;\n        if (t > 100.) break;\n    }\n    vec3 coeff = vec3(sin(iTime),cos(iTime),tan(iTime));\n\n    col = coeff*vec3(t * .2); \n    \n    fragColor = vec4(col, 1);\n}\n","name":"Image","description":"","type":"image"}]}