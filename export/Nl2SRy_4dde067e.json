{"ver":"0.1","info":{"id":"Nl2SRy","date":"1669571018","viewed":128,"name":"Noise lines","username":"harsukh","description":"wip","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                * 43758.5453123);\n}\n\n//value noise func\nfloat noise (vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    vec2 u = f*f*(3.-2.*f);\n    \n    return mix( mix(random(i +vec2(0.)), random(i+ vec2(1.,0.)),u.x),\n                mix(random(i +vec2(0.,1.)), random(i+ vec2(1.)),u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\nfloat lines (in vec2 pos, float b)\n{\n    float scale = 10.;\n    pos*=scale;\n    return smoothstep(0., 0.5+b*0.5, abs((sin(pos.x*3.1415)+b*2.))*.5);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n   uv.y*= iResolution.y/iResolution.x;\n   \n   vec2 pos = uv.xy*vec2(10.5);\n   float pattern = pos.y;\n   \n   pos = rotate2d(noise(pos+iTime))*pos;\n   pattern = lines (pos, .5);\n   vec3 col= vec3(pattern);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}