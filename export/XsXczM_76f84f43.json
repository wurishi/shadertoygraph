{"ver":"0.1","info":{"id":"XsXczM","date":"1487355714","viewed":273,"name":"Sound visializer (2)","username":"levonchic","description":"Second attempt to create sound visualizer. \nLooks like somebody is feeling bad..\n\nMeow","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["sound","smile","visual","soundcloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"lsS3DG","filepath":"https://soundcloud.com/sugarmusic1/mlp-pinkie-pie-smile-remix","previewfilepath":"https://soundcloud.com/sugarmusic1/mlp-pinkie-pie-smile-remix","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MIRROR\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    // Get distance\n    vec2 dist    = fragCoord.xy - iResolution.xy / 2.0;\n    float s_dist = sqrt(dist.x * dist.x + dist.y * dist.y);\n \t\n    // Get rotation angle [0.0 - 1.0]\n    float angle  = atan(dist.y / dist.x) / 6.28 + 0.25;\n    if(dist.x <= 0.0)\n        angle += 0.5;\n    #ifdef MIRROR\n    \tif(dist.x <= 0.0)\n            angle = 1.0 - angle;\n    #endif\n    \n    // Calculate shade color\n// ------------------------------------------------------\\/\n    float color  = texture(iChannel0, vec2(angle, 0.0)).x - texture(iChannel0, vec2(angle, 1.0)).x / 2.0;\n    \n    // Calculate damper\n    float damping = 1.0 - s_dist / iResolution.x / 2.0;\n    \n    color *= damping;\n    \n    float red;\n    float green;\n    float blue;\n    \n    if(color < 0.33)\n        red = color;\n    else if(color < 0.66) {\n        red = 1.0;\n        green = (color - 0.33) * 3.0;\n    }\n    else {\n        red = 1.0;\n        green = 1.0;\n        blue = (color - 0.66) * 3.0;\n    }\n    fragColor   += vec4(red, green, blue, 1.0);\n}","name":"Image","description":"","type":"image"}]}