{"ver":"0.1","info":{"id":"XdV3RD","date":"1453508164","viewed":152,"name":"WaveInterference","username":"Varcho","description":"simple illustration of wave interefence between two sources.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["wave","signal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define LAMBDA 3.e-2\n#define PI 3.14159\n\nvec3 color(float v) {\n    float t = v/4.+.5;\n\treturn vec3(sin(PI/2. * t+.5),\n               1. - cos(PI/2. * t),\n               1. - cos(PI/2. * t - .3));\n}\n\nfloat destructiveDamp(float v) {\n\treturn smoothstep(.15, .0, abs(v));\n}\n\nfloat waveDampening(in vec2 p, in vec2 o) {\n\treturn exp(- LAMBDA * pow(distance(p, o), 2.));\n}\n\nfloat wave(in vec2 p, in vec2 o, float alpha) {\n\treturn waveDampening(p, o) * sin(10. * distance(p, o) - alpha);\n}    \n\nfloat interference(in vec2 pos,  float alpha) {\n\treturn wave(pos, vec2(5. * cos(iTime), 0.), alpha) \n        + wave(pos, vec2(-5. * cos(iTime), 0.), alpha);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x/ iResolution.y;\n\tvec2 uv = 10.0 * vec2(ar * (fragCoord.x - iResolution.x / 2.)/iResolution.x,\n        \t\t\t(fragCoord.y - iResolution.y / 2.)/iResolution.y);\n    \n    float F = interference(uv, 20. * iTime);\n    vec3 col = color(F);\n    if (destructiveDamp(F) > 0.) {\n    \tcol = col * .6 + .4 * vec3(1., 0., 1.);\n    }   \n    fragColor = vec4(col, 1.);\n}","name":"","description":"","type":"image"}]}