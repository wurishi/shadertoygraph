{"ver":"0.1","info":{"id":"tdVXW3","date":"1610735629","viewed":207,"name":"ao test","username":"Angramme","description":"ff","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["ao"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    color += texture(iChannel0, uv).rgb;\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MAX_DIST 200.\n#define MIN_DIST .001\n\nfloat dist(vec3 p){\n    float sph = distance(p, vec3(0,0,3)) - .5;\n    float sph2 = distance(p, vec3(.5,-.1,2.5)) - .25;\n    float plane = p.y + .5;\n    \n    return min(sph2,min(sph, plane));\n}\n\nfloat march(vec3 ro, vec3 rd){\n    float t = 0.;\n    for(int i=0; i<200; i++){\n        vec3 p = ro + rd*t;\n        float d = dist(p);\n        if(d < MIN_DIST || t > MAX_DIST)break;\n        t += d;\n    }\n    return t;\n}\n\nvec3 normal(vec3 p){\n    vec2 eps = vec2(.001, 0.);\n\treturn (vec3(\n        dist(p+eps.xyy),\n        dist(p+eps.yxy),\n        dist(p+eps.yyx)\n        ) - dist(p))/eps.x;\n}\n\nfloat occlusion(vec3 p0){\n    float maX = 1.;\n    vec3 p = p0;\n    for(int i=0; i<20; i++){\n        vec3 n = normal(p);\n        vec3 r = normalize(n +.99*(2.*textureLod(iChannel0, p*197513.33+iTime*13.3347, 0.).rgb-1.));\n        float d = march(p+n*MIN_DIST, r);\n\t\tp = p + r*d +n*MIN_DIST;\n        //if(d>MAX_DIST)return 1.-i/maX;\n        maX *= .8;\n        if(d>MAX_DIST)return maX;\n    }\n    return 0.;\n}\n\nvec3 sky(vec3 d){\n    float v = max(0.,1.-d.y*2.);\n    return vec3(v, v, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0);\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.x;\n    \n    vec3 ro = vec3(0);\n    vec3 rd = normalize(vec3(uv, 1.));\n    \n    float d = march(ro, rd);\n    if(d>MAX_DIST){\n        color += sky(rd);\n    }else{\n        vec3 p = ro + rd*d;\n        vec3 n = normal(p);\n        color += occlusion(p);\n    }\n    \n    fragColor = vec4(color,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define COEF .01\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = vec3(0);\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    color += texture(iChannel0, uv).rgb*COEF + texture(iChannel1, uv).rgb*(1.-COEF);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}