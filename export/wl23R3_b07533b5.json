{"ver":"0.1","info":{"id":"wl23R3","date":"1560891713","viewed":123,"name":"Rust","username":"Yusef28","description":"Another Pattern ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define scale 5.\n#define pi 3.14159265359\n\nfloat rnd(vec2 p)\n{\n return fract(sin(dot(p, vec2(12.9898, 78.233)))*43562.34532);   \n}\n\nmat2 rot(float a)\n{\n return mat2(cos(a), -sin(a), sin(a), cos(a));   \n}\n\n\nfloat circle(vec2 p, float r)\n{\n    float c;\n    float ss = 0.009;\n    c = length(p);\n    c = smoothstep(r-ss, r+ss, c);  \n\treturn c;    \n}\n\nfloat circles(vec2 p, float r)\n{\n    \n float c1 = (1.0-circle(p+vec2(0.5, 0.0), r))*(step(-0.47, p.x));   \nfloat c2 = (1.0-circle(p-vec2(0.5, 0.0), r))*(step(p.x, 0.47)); \n    \n    return c1+c2;\n}\n\n//rotation coord system that rotates based on an id that is randomized\n\nvec2 rotCoord(vec2 p)\n    \n{\n    float id = rnd(floor(p*scale));\n    vec2 m = floor(p*scale);\n    float index = mod(m.x+m.y, 2.0);\n        \n    \n    p = fract(p*scale)-0.5;\n    \n    if(index>0.0)\n    {\n        p = p*rot(pi/2.);\n    }\n    \n    if(id*scale>0.25*scale)\n    {\n        p = p*rot(pi/2.);\n    }\n   \n   \n return p;   \n}\n\nfloat vig(vec2 st)\n{\n st *=  1.0 - st.yx;\n    float vig = st.x*st.y*15.;\n    vig = pow(vig, 0.19);\n    return vig;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 st = uv;\n    float v = vig(uv);\n    uv+=iTime/8.;\n    st+=iTime/8.;\n    //uv = uv*2.-1.;\n    uv.x*=iResolution.x/iResolution.y;\n    uv = rotCoord(uv);\n\tfloat tx0 = vec3(texture(iChannel0, st)).x*1.9;\n    \n    \tfloat tx1 = vec3(texture(iChannel1, st)).x+0.2;\n\n    \n    // Time varying pixel color\n    vec3 col = vec3(212., 123., 15.)/155.*tx0/1.;\n\tcol = mix(col,vec3(.3, 0., 0.)*tx1, 1.0-circles(uv, 0.48));\n    \n    ///////////////////////\n    col = vec3(.5, 0., 0.)*tx1;//;\n\tcol = mix(col,vec3(212., 123., 15.)/155.*tx0/1.8, 1.0-circles(uv, 0.48));\n    \n    // Output to screen\n    fragColor = vec4(col*v,1.0);\n}","name":"Image","description":"","type":"image"}]}