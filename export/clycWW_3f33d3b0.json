{"ver":"0.1","info":{"id":"clycWW","date":"1700203922","viewed":43,"name":"learning shaders youtube","username":"1mw1","description":"learning shaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["creativecodingglslshaderartdynamicpatternscolorpalettefractalsiterativerenderingvisu"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* This shader is inspired by the provided code for a creative coding tutorial.\n   It features a new dynamic pattern and color variation. */\n\n// Palette function for color variation\nvec3 palette(float t) {\n    vec3 a = vec3(0.8, 0.2, 0.2);\n    vec3 b = vec3(0.2, 0.5, 0.8);\n    vec3 c = vec3(0.2, 0.8, 0.2);\n    vec3 d = vec3(0.8, 0.8, 0.2);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalize coordinates\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n\n    for (float i = 0.0; i < 4.0; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n\n        // Create a new dynamic pattern\n        float d = sin(length(uv) * 10.0 + iTime) * 0.5 + 0.5;\n\n        // Use the palette function for color variation\n        vec3 col = palette(length(uv0) + i * 0.4 + iTime * 0.4);\n\n        // Add dynamics to the pattern\n        d = pow(0.01 / d, 1.2);\n\n        // Accumulate the color\n        finalColor += col * d;\n    }\n\n    // Output the final color\n    fragColor = vec4(finalColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}