{"ver":"0.1","info":{"id":"tlVfzW","date":"1614011727","viewed":70,"name":"Heart in 2D","username":"inspirnathan","description":"A simple heart in 2D using the algebraic equation found at [url]https://mathworld.wolfram.com/HeartCurve.html[/url]. Learn more in my tutorial: [url]https://inspirnathan.com/posts/51-shadertoy-tutorial-part-5/[/url]","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["heart","inspirnathan"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Learn more in my tutorial: https://inspirnathan.com/posts/51-shadertoy-tutorial-part-5\n\nvec3 sdfHeart(vec2 uv, float size, vec2 offset) {\n    float x = uv.x - offset.x;\n    float y = uv.y - offset.y;\n    float xx = x * x;\n    float yy = y * y;\n    float yyy = yy * y;\n    float group = xx + yy - size;\n    float d = group * group * group - xx * yyy;\n    \n    return d > 0. ? vec3(1.) : vec3(1., 0., 0.);\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // <0, 1>\n    uv -= 0.5; // <-0.5,0.5>\n    uv.x *= iResolution.x/iResolution.y; // fix aspect ratio\n\n    vec2 offset = vec2(0., -0.06);\n\n    vec3 col = sdfHeart(uv, 0.1, offset);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}