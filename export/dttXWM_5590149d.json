{"ver":"0.1","info":{"id":"dttXWM","date":"1686263712","viewed":35,"name":"spiral sdf","username":"yudemente","description":"Distance to a disk","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","distancefield","sdf","circle","distance"],"hasliked":0,"parentid":"3ltSW2","parentname":"Disk - distance 2D"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\nvec2 pc_convert_to_polar(vec2 p)\n{\n    return vec2(sqrt(dot(p, p)), atan(p.y, p.x));\n}\n\nvec2 pc_convert_to_euclidean(vec2 p)\n{\n    return vec2(p.x * cos(p.y), p.x * sin(p.y));\n}\n\nfloat pc_euclidean_distance(vec2 p, vec2 q)\n{\n    return sqrt(p.x*p.x + q.x*q.x - 2.*p.x*q.x*cos(p.y-q.y));\n}\n\nfloat pc_sdf_circle(vec2 c, float r,  vec2 p)\n{ \n    return sqrt(p.x*p.x - 2.*p.x*c.x*cos(p.y - c.y) + c.y*c.y) - r;\n}\n\nfloat pc_sdf_spiral_compute_turn(float a, float b, vec2 p)\n{\n    return ceil((p.x - a - p.y*b)/(2.*b*M_PI));\n}\n\nfloat pc_sdf_thin_spiral(float a, float b, vec2 p)\n{\n    float r = p.x;\n    float turn = pc_sdf_spiral_compute_turn(a, b, p);\n\n    float angle_before = turn * 2. * M_PI + p.y;\n    vec2 qb = vec2(a+b*angle_before, angle_before);\n    float angle_after = (turn-1.0) * 2. * M_PI + p.y;\n    vec2 qa = vec2(a+b*angle_after, angle_after);\n    return min(\n            pc_euclidean_distance(p, qb),\n            pc_euclidean_distance(p, qa));\n}\n\nfloat pc_sdf_spiral(float a, float b, vec2 p, float thick)\n{\n    return pc_sdf_thin_spiral(a, b, p) - thick;\n}\n\n\nfloat sdf_spiral(float a, float b, vec2 p, float thick)\n{\n    vec2 pc_p = pc_convert_to_polar(p);\n    return pc_sdf_spiral(a, b, pc_p, thick);\n}\n\nfloat sdCircle( in vec2 p, in float r ) \n{\n    return length(p)-r;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec2 m = (2.0*iMouse.xy-iResolution.xy)/iResolution.y;\n\n\t// spiral\n    float a = iTime/100.;\n    float n_rotations = sin(iTime/10.) * 10. + 0.2;\n    float b = 1./(n_rotations * M_PI);\n    float thickness = abs(sin(iTime))*0.05;\n    float d = sdf_spiral(a, b, p, thickness);\n    \n\t// coloring\n    vec3 col = (d>0.0) ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    col *= 1.0 - exp(-6.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(150.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n    if( iMouse.z>0.001 )\n    {\n    d = sdCircle(m,0.5);\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, abs(length(p-m)-abs(d))-0.0025));\n    col = mix(col, vec3(1.0,1.0,0.0), 1.0-smoothstep(0.0, 0.005, length(p-m)-0.015));\n    }\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}