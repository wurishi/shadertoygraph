{"ver":"0.1","info":{"id":"XtBSWD","date":"1448960292","viewed":340,"name":"cravo-snow","username":"cravo","description":"2D snow shader, with buildup over time","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","snow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    \n    for ( int i = 0; i < 60; i++ )\n    {\n        float u = float(i) / 100.0;\n        float v = 0.1;\n        float rand = texture(iChannel0,vec2(u,v)).x;\n        \n    \tfloat speed = 100.0 + (rand * 500.0);\n    \tfloat x = (rand * iResolution.x) + rand * 50.0 * sin(iTime * (1.0 + rand));\n        x = (x * 1.25) - (iResolution.x * 0.125);\n    \tfloat y = iResolution.y - mod((iTime + 100.0) * speed,iResolution.y);\n\n\n    \tvec2 delta = fragCoord - vec2(x,y);\n        float dist = length(delta);\n        float angle = atan(delta.x,delta.y) + (iTime * speed * 0.01);\n\t\tfloat size = 6.0 * abs(sin(angle * 4.0));\n\n        if (dist < size)\n    \t{\n            float snowu = dist / size;\n            float snowv = dist / size;\n            \n            float col = 0.75 + texture(iChannel0,vec2(speed,v * 4.0)).x;\n        \tfragColor = vec4(col);\n    \t}\n    }\n    \n    float buildupU = fragCoord.x / iResolution.x;\n    float buildupV = 0.5;\n    float buildupRand = texture(iChannel0, vec2(buildupU, buildupV)).x;\n    float buildupY = (iTime * 0.5) + (buildupRand * 4.0);\n    if ( fragCoord.y < buildupY )\n    {\n        fragColor = vec4(1.0,1.0,1.0,1.0);\n    }\n}","name":"","description":"","type":"image"}]}