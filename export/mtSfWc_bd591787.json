{"ver":"0.1","info":{"id":"mtSfWc","date":"1694555247","viewed":76,"name":"Twirling mosaic.","username":"numpyhard","description":"something something experimentation went silly 2","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["sdf","square"],"hasliked":0,"parentid":"mssBRB","parentname":"Blobby blob cross"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://iquilezles.org/articles/palettes/\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    float pi = 3.14159;\n    float spin = 1.0;\n    float radius = .8;\n    vec2 squareSize = vec2(0.16);\n    \n    float sinscale = 12.0;\n\n    \n    float st = spin*iTime;\n    vec2 square1 = radius*vec2(sin(st), cos(st));\n    vec2 square2 = radius*vec2(sin(st+.666*pi), cos(st+.666*pi));\n    vec2 square3 = radius*vec2(sin(st+1.3333*pi), cos(st+1.3333*pi));\n    \n    float dist1 = length(max(vec2(0.), abs(uv-square1)-squareSize));\n    float dist2 = length(max(vec2(0.), abs(uv-square2)-squareSize));\n    float dist3 = length(max(vec2(0.), abs(uv-square3)-squareSize));\n    \n    float md = min(min(dist1,dist2),dist3);\n\n    \n    float mDist = 1. + 5./((dist1+dist2+dist3));\n    float mDist2 = 1. + .3/(.1+md);\n\n    float v1 = 0.5*sin(sinscale*dist1*mDist+4.0*iTime)+0.5;\n    float v2 = 0.5*sin(sinscale*dist2*mDist+4.0*iTime)+0.5;\n    float v3 = 0.5*sin(sinscale*dist3*mDist+4.0*iTime)+0.5;\n\n    \n    vec3 pcol = palette(md+iTime);\n    vec3 pcol2 = palette(pow(v1*v2*v3,.111)*md + .2*iTime);\n  \n    float combined = 0.;\n    for(float i=0.; i<2.0; i++){\n    combined += .25/(v1*v2*v3 - 3.7*max(v1,max(v2,v3)) + 1.6);\n    combined += .25/(v1*v2*v3 - 3.7*max(v1,max(v2,v3)) + 2.2);\n    combined += .25/(v1*v2*v3 - 3.7*max(v1,max(v2,v3)) + 2.8);\n    \n    //combined += .01/(v1*v2*v3 - .7*max(v1,max(v2,v3)) + .6);\n    //combined += .01/(v1*v2*v3 - .7*max(v1,max(v2,v3)) + 1.2);\n    //combined += .01/(v1*v2*v3 - .7*max(v1,max(v2,v3)) + 1.8);\n    }\n    \n    vec3 col = combined*pcol2;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}