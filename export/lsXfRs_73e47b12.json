{"ver":"0.1","info":{"id":"lsXfRs","date":"1497510649","viewed":230,"name":"Deep","username":"834144373","description":"raymarch","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["raymarch","morphing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//created by 834144373(ÊÅ¨Á∫≥ÂæÆÊô∞)\n#define R iResolution.xy\n#define DEPTH_STEP 64\n#define time iTime\nfloat map(vec3 p){\n\tfloat a = p.z*0.1001;\n\tp.xy *= mat2(cos(a), sin(a), -sin(a), cos(a));\n\tfloat t = length(mod(p.xy, 2.0) - 1.0) - 0.07 - sin(p.z)*sin(time)/4.;\n\tt = min(t,length(mod(p.yz, 2.0) - 1.0) - 0.07 - sin(p.x)*cos(time)/4.);\n\tt = min(t,length(mod(p.zx, 2.0) - 1.0) - 0.07 - sin(p.y)*sin(time)/4.);\n\treturn t;\n}\n\nvoid mainImage( out vec4 Color, in vec2 U ){\n\tfloat j = 0.;\n\tfloat depth = 1.;\n\tfloat d = 0.;\n\tfor(int i=0;i<64;i++){\n\t\tdepth += (d = map(vec3(0.,0.,time) + normalize(vec3((U+U-R)/R.y,2.)) * depth));\n\t\tj = float(i);\n\t\tif(d<0.01)\n\t\t\tbreak;\n\t}\n\tdepth = 1.-j/float(DEPTH_STEP);\n    /*\n\tfloat coeff = pow(depth,2.2)*3.;\n\tfloat c1 = clamp(coeff,0.,1.);\n\tfloat c2 = clamp(coeff,1.,2.)-1.;   \n\tfloat c3 = clamp(coeff,2.,3.)-2.;\n\tvec3 col = vec3(c1,c2,c3);\n\t*/\n    //Super thanks for Shane's suggestion,:-üë∂\n    //vec3 col = pow(vec3(1.5, 1, 1)*val, vec3(1, 3, 16));\n    vec3 col = pow(vec3(1.)*depth, vec3(1, 3, 10));\t\n\tColor = vec4(col,0.);\n}\n\n","name":"Image","description":"","type":"image"}]}