{"ver":"0.1","info":{"id":"mts3Rs","date":"1672876101","viewed":147,"name":"Pirates of The Caribbean","username":"Datablock","description":"Test to make piano sounds.\nFor some reason, sound stops at around time=180 seconds.\n(The above bug is still there, but the song is not that long, so it shouldn't matter here)","likes":5,"published":1,"flags":8,"usePreview":0,"tags":["sound","frequency","harmonics","piano","pirate","piratesofthecaribbean"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nPress F12 or right click and press 'inspect'\nOpen the console and run the following command for the image:\n\ngShaderToy.SetTexture(0, {mSrc:'https://dl.dropboxusercontent.com/s/q6on5krs7j5rt28/Pirates.jpg?dl=0', mType:'texture', mID:1, mSampler:{ filter: 'linear', wrap: 'repeat', vflip:'true', srgb:'true', internal:'byte' }});\n\nAnd set img to true\n*/\n#define img false\n\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    if (img) {fragColor=texture(iChannel0,uv);return;}\n    float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n    if(c>=0.){fragColor=vec4(c);return;}\n\tfragColor = vec4(0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4)),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float PI  = 3.14159265358979323846264338329750288419716939937510582097494459;\nconst float PI2 = PI * 2.0;\n\nconst int x  = 1000;\n\nconst int C1  = -36;\nconst int C1s = -35;\nconst int D1  = -34;\nconst int D1s = -33;\nconst int E1  = -32;\nconst int F1  = -31;\nconst int F1s = -30;\nconst int G1  = -29;\nconst int G1s = -28;\nconst int A1  = -27;\nconst int A1s = -26;\nconst int B1  = -25;\nconst int C2  = -24;\nconst int C2s = -23;\nconst int D2  = -22;\nconst int D2s = -21;\nconst int E2  = -20;\nconst int F2  = -19;\nconst int F2s = -18;\nconst int G2  = -17;\nconst int G2s = -16;\nconst int A2  = -15;\nconst int A2s = -14;\nconst int B2  = -13;\nconst int C3  = -12;\nconst int C3s = -11;\nconst int D3  = -10;\nconst int D3s = -9;\nconst int E3  = -8;\nconst int F3  = -7;\nconst int F3s = -6;\nconst int G3  = -5;\nconst int G3s = -4;\nconst int A3  = -3;\nconst int A3s = -2;\nconst int B3  = -1;\nconst int C4  = 0;\nconst int C4s = 1;\nconst int D4  = 2;\nconst int D4s = 3;\nconst int E4  = 4;\nconst int F4  = 5;\nconst int F4s = 6;\nconst int G4  = 7;\nconst int G4s = 8;\nconst int A4  = 9;\nconst int A4s = 10;\nconst int B4  = 11;\nconst int C5  = 12;\nconst int C5s = 13;\nconst int D5  = 14;\nconst int D5s = 15;\nconst int E5  = 16;\nconst int F5  = 17;\nconst int F5s = 18;\nconst int G5  = 19;\nconst int G5s = 20;\nconst int A5  = 21;\nconst int A5s = 22;\nconst int B5  = 23;\nconst int C6  = 24;\n\nint modi(int x, int y) {\n    return x - y * int(x/y);\n}\n\nfloat genWave(int iTime, int Hz, float phase) {\n    float waveTime = float(iTime * Hz) / iSampleRate;\n    return sin(PI2 * waveTime - phase);\n}\n\nfloat piano(int iTime, int note) {\n    if (iTime < 0) return 0.0;\n    \n    float R = pow(2.0, 1.0/12.0);\n    int Hz = int(261.63 * pow(R, float(note)));\n    \n    float amplitude = 0.0;\n    float t = float(iTime)/iSampleRate;\n    float timeFallOffStartFactor = 0.5*(abs(30.0*t)-abs(30.0*t-1.0)+1.0);\n    \n    for (int i = 1; i < 25; i++) {\n        float fi = float(i);\n        \n        float timeFallOff = exp(-3.0*t);\n        float P = 0.192;\n        float p = 1.0 / (1.0/P + fi/15.0);\n        float m = mod(p, 1.0/fi);\n        float k = min(m, fi-m);\n        k = k * 0.75 + 0.25;\n        float initialStrength = pow(0.55, fi) * k;\n        if (i==1) initialStrength *= 5.0;\n        if (i==2) initialStrength *= 1.5;\n        float maxAmpWave = sin(PI2*float(iTime)/iSampleRate/(2.0-fi/14.7) + PI/2.0 - k*5.0);\n        maxAmpWave = maxAmpWave * 0.25 + 0.75;\n        float freqAmplitude = genWave(iTime, Hz*i, fi*PI) * maxAmpWave;\n        \n        amplitude += initialStrength * freqAmplitude * timeFallOff;\n    }\n    \n    return amplitude * 0.5 * timeFallOffStartFactor;\n}\n\nconst int[] notes = int[](\n//   treble            bass\nD4,x ,D4,D4,x ,D4,  x ,x ,x ,x ,x ,x ,\nD4,x ,D4,D4,D4,D4,  x ,x ,x ,x ,x ,x ,\n//t: 02.4s\nD4,x ,D4,D4,x ,D4,  x ,x ,x ,x ,x ,x ,   //2\nD4,x ,D4,D4,D4,D4,  x ,x ,x ,x ,x ,x ,\n//t: 04.8s\nD4,x ,D4,D4,x ,D4,  x ,x ,x ,x ,x ,x ,   //4\nD4,x ,D4,D4,D4,D4,  D1,x ,x ,x ,x ,x ,\nD4,x ,D4,D4,A3,C4,  D1,x ,x ,D1,x ,x ,\n//t: 08.4s\nD4,x ,D4,x ,D4,E4,  D2,x ,D2,D2,x ,C2,   //7\nF4,x ,F4,x ,F4,G4,  A1s,x,A1s,A1s,x,A1s,\nE4,x ,E4,x ,D4,C4,  A1,x ,A1,A1,x ,A1,\nC4,D4,x ,x ,A3,C4,  D2,x ,D2,D2,x ,D2,\n//t: 13.2s\nD4,x ,D4,x ,D4,E4,  A1s,x,A1s,A1s,x,A1s, //11\nF4,x ,F4,x ,F4,G4,  F1,x ,F1,F1,x ,F1,\nE4,x ,E4,x ,D4,C4,  C2,x ,C2,A1,x ,A1,\nD4,x ,x ,x ,A3,C4,  D2,x ,D2,D2,x ,D2,\n//t: 18.0s\nD4,x ,D4,x ,D4,F4,  D2,x ,D2,D2,x ,D2,   //15\nG4,x ,G4,x ,G4,A4,  A1s,x,A1s,A1s,x,A1s,\nA4s,x,A4s,x,A4,G4,  G1,x ,G1,G1,x ,G1,\nA4,D4,x ,x ,D4,E4,  D2,x ,D2,D2,x ,D2,\n//t: 22.8s\nF4,x ,F4,x ,G4,x ,  A1s,x,A1s,A1s,x,A1s, //19\nA4,D4,x ,x ,D4,F4,  D2,x ,D2,D2,x ,D2,\nE4,x ,E4,x ,F4,D4,  A1,x ,A1,A1,x ,A1,\nE4,x ,x ,x ,A4,C5,  A1,x ,A1,A1,x ,A1,\n//t: 27.6s\nD5,x ,D5,x ,D5,E5,  D2,x ,D2,D2,x ,C2,   //23\nF5,x ,F5,x ,F5,G5,  A1s,x,A1s,A1s,x,A1s,\nE5,x ,E5,x ,D5,C5,  A1,x ,A1,A1,x ,A1,\nC5,D5,x ,x ,A4,C5,  D2,x ,D2,D2,x ,D2,\n//t: 32.4s\nD5,x ,D5,x ,D5,E5,  A1s,x,A1s,A1s,x,A1s, //27\nF5,x ,F5,x ,F5,G5,  F1,x ,F1,F1,x ,F1,\nE5,x ,E5,x ,D5,C5,  C2,x ,C2,A1,x ,A1,\nD5,x ,x ,x ,A4,C5,  D2,x ,D2,D2,x ,D2,\n//t: 37.2s\nD5,x ,D5,x ,D5,F5,  D2,x ,D2,D2,x ,D2,   //31\nG5,x ,G5,x ,G5,A5,  A1s,x,A1s,A1s,x,A1s,\nA5s,x,A5s,x,A5,G5,  G1,x ,G1,G1,x ,G1,\nA5,D5,x ,x ,D5,E5,  D2,x ,D2,D2,x ,D2,\n//t: 42.0s\nF5,x ,F5,x ,G5,x ,  A1s,x,A1s,A1s,x,A1s, //35\nA5,D5,x ,x ,D5,F5,  D2,x ,D2,D2,x ,D2,\nE5,x ,E5,x ,D5,C5s, A1,x ,A1,A1,x ,A1,\nD5,x ,D5,x ,E5,x ,  D2,x ,D2,x ,C2,x ,\n//t: 46.8s\nF5,x ,F5,F5,G5,x ,  C2,x ,C2,x ,A1s,x,   //39\nA5,x ,x ,x ,F5,D5,  A1,x ,A1,A1,x ,A1,\nA4,x ,x ,x ,x ,x ,  A1,x ,A1,A1,x ,A1,\n//t: 50.4s\nA5s,x,x ,x ,G5,D5,  G1,x ,G1,G1,x ,G1,   //42\nA4s,x,x ,x ,x ,x ,  G1,x ,G1,G1,x ,G1,\n//t: 52.8s\nE4,E4,x ,D4,x ,x ,  A1,x ,A1,A1,x ,A1,   //44\nF4,x ,x ,x ,F4,G4,  A1,x ,A1,A1,x ,A1,\n//t: 55.2s\nA4,x ,A4,x ,A4,x ,  D2,x ,D2,D2,x ,D2,   //46\nA4s,A4,x,x ,x ,x ,  D2,x ,D2,D2,D2,D2,\n//t: 57.6s\nG4,x ,G4,x ,G4,x ,  C2,x ,C2,C2,x ,C2,   //48\nG4,A4,x ,x ,x ,x ,  F2,x ,F2,F2,F2,F2,\n//t: 60.0s\nA4,x ,A4,x ,A4,x ,  D2,x ,D2,D2,x ,D2,   //50\nA4s,A4,x,x ,x ,x ,  D2,x ,D2,D2,D2,D2,\n//t: 62.4s\nG4,x ,F4,x ,E4,x ,  A1,x ,A1,A1,x ,A1,   //52\nD4,x ,x ,x ,D4,E4,  D2,x ,D2,D2,x ,D2,\n//t: 64.8s\nF4,x ,x ,x ,G4,A4,  D2,x ,D2,D2,x ,D2,   //54\nG4,x ,F4,x ,E4,x ,  C2,x ,C2,C2,C2,C2,\nF4,x ,G4,x ,A4,x ,  F2,x ,F2,F2,F2,F2,\nG4,x ,x ,x ,F4,G4,  C2,x ,C2,C2,C2,C2,\n//t: 69.6s\nA4,x ,x ,x ,G4,F4,  F2,x ,F2,F2,F2,F2,   //58\nE4,x ,F4,x ,E4,x ,  A1,x ,A1,A1,A1,A1,\nD4,x ,x ,x ,E4,C4,  D2,x ,D2,D2,x ,D2,\nD4,x ,x ,x ,D5,E5,  D2,x ,D2,D2,D2,D2,\n//t: 74.4s\nF5,x ,x ,x ,E5,F5,  D2,x ,D2,D2,D2,D2,   //62\nG5,x ,F5,x ,G5,x ,  C2,x ,C2,C2,C2,C2,\nA5,x ,G5,x ,F5,x ,  F2,x ,F2,F2,F2,F2,\nD5,x ,x ,x ,D5,E5,  A1s,x,A1s,A1s,x,A1s,\n//t: 79.2s\nF5,x ,G5,x ,A5,x ,  D2,x ,D2,D2,D2,D2,   //66\nA5s,x,D5,x ,G5,x ,  G1,x ,G1,G1,G1,G1,\nF5,x ,x ,x ,G5,E5,  A1,x ,A1,A1,A1,A1,\nD5,x ,x ,x ,E5,C5s, A1,x ,A1,A1,A1,A1,\n//t: 84.0s\nA5,x ,x ,x ,x ,x ,  D2,x ,D2,D2,D2,D2,   //70\nA5s,x,x ,x ,x ,x ,  G1,x ,G1,G1,G1,G1,\nA5,x ,A5,x ,A5,x ,  F2,x ,F2,F2,x ,F2,\nA5,G5,x ,x ,x ,x ,  C2,x ,C2,C2,C2,C2,\n//t: 88.8s\nG5,x ,x ,x ,x ,x ,  G1,x ,G1,G1,G1,G1,   //74\nF5,x ,x ,x ,x ,x ,  A1,x ,A1,A1,A1,A1,\nF5,x ,G5,x ,E5,x ,  A1,x ,A1,A1,A1,A1,\nD5,x ,x ,D5,E5,F5,  D2,x ,D2,D2,D2,D2,\n//t: 93.6s\nA5,x ,x ,D5,E5,F5,  D2,x ,D2,D2,D2,D2,   //78\nA5s,x,x ,D5,E5,F5,  A1s,x,A1s,A1s,x,A1s,\nA5,x ,A5,x ,C6,x ,  F2,x ,F2,F2,F2,F2,\nA5,G5,x ,x ,x ,x ,  C2,x ,C2,C2,C2,C2,\n//t: 98.4s\nG5,x ,x ,x ,x ,x ,  G1,x ,G1,G1,G1,G1,   //82\nF5,x ,x ,x ,x ,x ,  A1,x ,A1,A1,A1,A1,\nF5,x ,G5,x ,E5,x ,  A1,x ,A1,A1,A1,A1,\nD5,x ,x ,x ,x ,x ,  D2,x ,D2,D2,D2,D2,\n//t: 103.2s\nD4,x ,x ,x ,x ,x ,  D2,x ,x ,x ,x ,x     //86\n//t: 104.4s\n);\n\nfloat playBar(int index, int iTime, int rate) {\n    \n    //treble\n    float at = 0.0;\n    for (int i = 0; i < 6; i++) {\n        if (notes[index+i] == x) continue;\n        int t = iTime-i*rate/5;\n        if (t<0) continue;\n        at *= max(1.0-5.0*float(t)/iSampleRate, 0.0);//fadeout old note (takes 200ms)\n        at += piano(t, notes[index+i]) * 0.8;\n    }\n    //bass\n    float ab = 0.0;\n    for (int i = 6; i < 12; i++) {\n        if (notes[index+i] == x) continue;\n        int t = iTime-(i-6)*rate/5;\n        if (t<0) continue;\n        ab *= max(1.0-5.0*float(t)/iSampleRate, 0.0);\n        ab += piano(t, notes[index+i]+12);//+12 otherwise its almost unhearable\n    }\n    return at+ab;\n}\n\nvec2 mainSound( int samp, float time )\n{\n    int rate = int(iSampleRate);\n    \n    int iTimeBarCurrent = modi(samp, rate/5*6);\n    int iTimeBarPrevius = iTimeBarCurrent + rate/5*6;\n    \n    int barsPassed = samp/(rate/5*6);\n    \n    float a = 0.0;\n    int index = barsPassed * 12;\n                          a += playBar(index   , iTimeBarCurrent, rate);\n    if (barsPassed != 0)  a += playBar(index-12, iTimeBarPrevius, rate);\n    \n    a *= 0.7;\n    a = clamp(a, -1.0, 1.0);\n    return vec2(a);\n}\n\n\n\n\n\n\n\n\n\n\n","name":"Sound","description":"","type":"sound"}]}