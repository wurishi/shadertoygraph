{"ver":"0.1","info":{"id":"7dyfDh","date":"1658080262","viewed":141,"name":"Flag-Cloth Normals w/ height map","username":"mehow_one","description":"Just playing around with two separates ideas to get a fake cloth look using a bunch of sine waves and approximating  the derivatives with the height.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["2d","normals","flag","cloth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/MsScRt\n\nfloat getHeight(vec2 uv) {\n  return texture(iChannel0, uv).r;\n}\n\nvec4 bumpFromDepth(vec2 uv, vec2 resolution, float scale) {\n  vec2 step = 1. / resolution;\n  float height = getHeight(uv);\n  vec2 dxy = height - vec2(\n      getHeight(uv + vec2(step.x, 0.)), \n      getHeight(uv - vec2(0., step.y))\n  );\n  //to compare with the built-in derivatives functions\n  /* \n  float dx = dFdx(texture(iChannel0, uv).r);\n  float dy = dFdy(texture(iChannel0, uv).r);\n  dxy = vec2(dx,dy);\n  */\n    \n  return vec4(normalize(vec3(dxy * scale / step, .5)), height);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 fromDepth = bumpFromDepth(uv, iResolution.xy, .1);\n    vec3 n = fromDepth.rgb;\n    float b = fromDepth.a;\n    vec3 l = normalize(vec3(0.0, -4.0, 1.0));\n    float cs = dot(l,n);\n  \n \t// Diffuse + weird back lighting!\n    float c;\n    c = 0.8*max(0.0, cs) + 0.07*max(0.0, -cs);\n    c += 0.1*pow(max(0.0, -cs), 10.5);\n    // Contrast correction:\n    c = pow(c, 0.8);\n    // \"Ambient occlusion\":\n    c *= smoothstep(0.0, 0.2, pow(1.0-max(min(n.x,n.y),n.z)/sqrt(3.0), 1.0));\n    \n    vec3 col = n * c;\n    vec3 tex = texture(iChannel0,uv).xyz;\n    //vec3 tex = col;\n    \n    fragColor = vec4(vec3(n*.5+.5), 1.);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// --- Original \"Bumped Sinusoidal Warp\" shader by Shane from https://www.shadertoy.com/view/4l2XWK\n\n#define brightness 0.9\n#define refraction 0.4\nvec2 W(vec2 p){\n    \n    p = (p+4.)*2.;\n\n    float t = iTime/2.;\n    for (int i=0; i<3; i++){\n        p += cos( p.yx*4. + vec2(t,1.57))/3.;\n        p += sin( p.yx + t + vec2(1.57,0))/2.;\n        p *= 1.3;\n    }\n    //p +=  fract(sin(p+vec2(13, 7))*5e5)*.03-.015;\n\n    return mod(p,2.)-1.; // Range: [vec2(-1), vec2(1)]\n    \n}\n\n\nfloat sinnoise(vec2 u ){\n    vec2 zoom = vec2(2.0,8.0);\n    vec2 offset = vec2(1.0,1.0);\n    vec2 cumul = u*zoom+offset;\n     float a_x = 0.1;\n     float a_y = 1.02;\n      for(int i=0; i< 4; i++){\n        float float_i = float(i); \n        cumul.x+= a_x*cos(float_i+cumul.y+iTime)*1.;\n        cumul.y+= a_y*sin(float_i+cumul.x-iTime)*4.;\n        \n    }\n    //cumul +=  fract(sin(cumul+vec2(13, 7))*5e5)*.03-.5;\n    float r = max(0.,exp(1.125)*sqrt(cumul.x*cumul.x+cumul.y*cumul.y));\n    r = smoothstep(0.0,20.0,r);\n    return r;\n    \n    }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 u = (fragCoord - iResolution.xy*.5)/iResolution.y;\n    float b = sinnoise(u*.5);\n    float h = 0.025;\n    float d = pow(b * h,1./2.28);\n    //u += vec2(0.25) * 0.25;\n    //length(W(u));\n    //float c = (1.0-length(tu));\n    //c = (c * abs(c))-0.25;\n    //c = pow(b, 2.5);\n    fragColor.xyz = vec3(d);\n    fragColor.w = 0.5-b;\n    fragColor = normalize(fragColor);\n\n\n}","name":"Buffer A","description":"","type":"buffer"}]}