{"ver":"0.1","info":{"id":"MdVyWG","date":"1523227943","viewed":357,"name":"Heartbeat 2D","username":"clumsyrthanu","description":"Just a beating heart","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","beat","heart","heartbeat","love"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159;\n\nvec2 scale(vec2 st, float size)\n{\n    mat2 s = mat2(vec2(size, 0.0), vec2(0.0, size));\n    return s * st;\n}\n\nfloat animate(float a, float t) \n{\n    // Thump Thump... Thump Thump...\n    return a * max(sin(t * 5.0), 0.0) * cos(t * 5.0);\n}\n\nfloat heart(vec2 st, vec2 translate, float radius, float smoothRange)\n{\n    vec2 uv = st - translate;\n    \n    // Two partially overlapping circles for the +ve y quadrants\n    float top = step(0.0, uv.y) * (smoothstep(radius + 0.025, radius + 0.025 - smoothRange, length(abs(uv) - vec2(radius - 0.025,0.0))));\n        \n    // Two symmetric sin curves for the -ve y quadrants\n    uv.x = abs(uv.x);\n    \n    float bottom = step(-PI, uv.y * PI) * step(0.0, -uv.y) * \n        smoothstep(0.0, smoothRange, (radius * sin(uv.y * PI + PI / 2.0) - uv.x + 1.0 * radius));\n    \n    // Put them all together\n    return top + bottom;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n        \n    st = scale(st, 1.0 - animate(0.05, iTime));\n    float c = heart(st, vec2(0.0, 0.25), 0.35, 0.01);\n    \n    fragColor = vec4(mix(vec3(1.0), vec3(0.9, 0.15, 0.07), c),1.0);\n}","name":"Image","description":"","type":"image"}]}