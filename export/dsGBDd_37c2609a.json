{"ver":"0.1","info":{"id":"dsGBDd","date":"1698766151","viewed":68,"name":"Mesmerizing Neon ","username":"0x706a","description":"A repeating neon shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["circles","animation","neon","shaderart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 pal( in float t)\n{\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(2.0,1.0,0.0);\n    vec3 d = vec3(0.5,0.20,0.25);\n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 final_col = vec3(0.0);\n    vec3 col;\n    \n    for(int i = 0; i < 3; i++) {\n        float ratio = 1.5 + sin(iTime / 2.0) / 3.0;\n        uv = fract(uv / ((sin(iTime / 6.0) + 1.0) / 2.0 + 0.75)) * ratio - ratio / 2.0;\n        float d = length(uv);\n        d = sin(d * 8.0 + iTime) / 8.0;\n        d = abs(d);\n        d = smoothstep(0.0, 0.1, d);\n        d = 0.1 / d;\n        final_col += d * pal(length(uv0) / 2.0 + iTime / 2.0);\n        col = pal(length(uv0) + iTime * .4);\n        final_col += d * col;\n    }\n    float p = 1.6;\n    final_col = final_col / 2.0;\n    final_col = vec3(pow(final_col.x, p), pow(final_col.y, p), pow(final_col.z, p));\n    // Output to screen\n    fragColor = vec4(final_col, 1.);\n}","name":"Image","description":"","type":"image"}]}