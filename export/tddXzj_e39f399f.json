{"ver":"0.1","info":{"id":"tddXzj","date":"1572425452","viewed":1883,"name":"Simple 2d Ray-Cast Shadow","username":"jt","description":"A very basic implementation of 2d shadows (move mouse & click to reposition light-source).","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["2d","raycast","shadow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 500.0\n\nfloat terrain(vec2 p)\n{\n    //return step(0.25, texture(iChannel0, 0.0625 + p / 2.0).x); // hard shadows\n    return mix(0.95, 1.0, step(0.25, texture(iChannel0, 0.0625 + p / 2.0).x)); // smooth shadows\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n\n    //vec2 l = vec2(0.5, 0.5);\n    vec2 l = iFrame <= 0 ? vec2(0.5, 0.5) : iMouse.xy/iResolution.xy;\n    vec2 d = p - l;\n    float b = 1.0;\n    for(float i = 0.0; i < N; i++)\n    {\n        float t = i / N;\n\t    float h = terrain(mix(p, l, t));\n        b *= h;\n    }\n\n    //b *= 0.2 / length(d);\n    b *= 1.0 - smoothstep(0.0, 0.5, length(d));\n    //fragColor = b * texture(iChannel1, p * 4.0);\n    fragColor = mix(texture(iChannel2, p) * 0.125, texture(iChannel1, p * 4.0), b);\n}\n","name":"Image","description":"","type":"image"}]}