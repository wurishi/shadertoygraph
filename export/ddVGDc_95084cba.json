{"ver":"0.1","info":{"id":"ddVGDc","date":"1679151747","viewed":75,"name":"Button\\Circle","username":"nati070","description":" button with colored border and inside circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","button"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst float PI = 3.1415;\n//convert HSV to RGB\nvec3 hsv2rgb(vec3 color){\n    vec4 konvert = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 calc = abs(fract(color.xxx + konvert.xyz) * 6.0 - konvert.www);\n    return color.z * mix(konvert.xxx, clamp(calc - konvert.xxx, 0.0, 1.0), color.y);\n}\n\nfloat createBorder(float distance, float raduis){\n      float circle = 1.-smoothstep(distance-0.02,distance+0.002,raduis);\n      float circle2 = smoothstep(distance-0.01,distance+0.001,raduis+0.01);\n    return circle*circle2;\n}\nfloat createCircle(float raduis,float distance){\n    return 1.-smoothstep(distance-0.01,distance+0.001,raduis);\n}\n\n  \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 color = vec3(0.);\n      float raduis = 0.3;\n      vec2 toCenter = st - vec2(0.5); \n      float distance = length(toCenter); \n\n float angle = atan(toCenter.x,toCenter.y);\n      vec3 vectorRotatrColor = vec3((angle+iTime * 1.5 ) / (PI * 2.0), 1., 1.);\n      vec3 coloredVector =  hsv2rgb(vectorRotatrColor)*(1./(distance));\n\t  color = coloredVector * createBorder(distance,raduis);\n      color = mix(color,vec3(0,1.,0),createCircle(distance,abs(sin(iTime*3.)/100.)+.3));\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}