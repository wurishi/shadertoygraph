{"ver":"0.1","info":{"id":"XX2fD3","date":"1730027963","viewed":207,"name":"tetrahedron subdivision","username":"FabriceNeyret2","description":"we often have wrong extrapolated intuitions when going from 2D to 3D:\ntetrahedron = 4 tetrahedron + octohedron  ( rather than only tets/simplex, as in 2D and 1D ).","likes":18,"published":3,"flags":0,"usePreview":0,"tags":["short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// cf simpler version here: https://www.shadertoy.com/view/4ctyz4\n\n#define rot(a)    mat2(cos(a+vec4(0,33,11,0)))                      // rotation\n#define T(q)      max( max(q.x,q.y), max(q.z,(1.-q.x-q.y-q.z)/1.73))// iq tet in cube corner\n#define T3(q,d) ( min( min( T((q)) , T((q+vec3(d,0,0))) ),          /* 4 sub-tets */ \\\n                     min(T((q+vec3(0,d,0))), T((q+vec3(0,0,d))) )                    \\\n                   ) -.625 )\n\nvoid mainImage( out vec4 O, vec2 u ) {\n\n    vec3 R = iResolution,\n         P = 9./R, q, a,                                            // P: camera pos, then sample along ray\n         D = normalize(vec3( u , -R.y ) - .5*R ),                   // D: ray direction\n         M = iMouse.z > 0. ? iMouse.xyz/R -.5 :                     // comment for no mouse cam\n                 vec3( .15,.07,0) * cos(.3*iTime + vec3(0,11,0));          \n    float t = 1., d= 3.-cos(3.*iTime);                              // offset >= 2\n    \n    for ( O=vec4(1.1); O.x > 0. && t > .01; O-=.005 )               // --- march scene\n        q = P, \n        q.yz *= rot(-6.*M.y),                                       // rotations\n        q.xz *= rot(-6.*M.x-1.57),\n        a = abs(q+.0), t = max( a.x, max(a.y,a.z)) -2.,\n        q -= .5* dot(q-.0866,vec3(1)),                              // disto space to get isometric tet with iq corner-tets\n        t = min( T3(q-.25*d,d),                                     // 4 sub-tets\n                 max( T((q-.081)) -1.023, -T3(q-.5,2.) ) ),         // residual main tet minus 4 sub-tets\n     // t = min(t, length(a)-1.5),                                  // centered sphere, for test\n        P += .5*t*D;                                                // step along the ray\n    \n    O *= O*O;                                                       // color scheme\n // u = abs(u-.5-R.xy/2.); if (u.x*u.y==0.) O.r++;                  // red cross, for tests\n}\n","name":"Image","description":"","type":"image"}]}