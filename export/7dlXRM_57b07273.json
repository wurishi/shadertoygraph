{"ver":"0.1","info":{"id":"7dlXRM","date":"1618427192","viewed":139,"name":"Music keyboard","username":"Andre","description":"Shader to draw a keyboard to use for my [url=https://shadersynth.com]https://shadersynth.com[/url]","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["music","keyboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // uv *= 6.0 + 5.0 * sin(iTime);\n    \n    vec2 loc = mod(uv,1.0);\n    vec3 col = vec3(0.0);\n    \n    // Calculate white coordinates\n    float whiteKeyX = mod(loc.x,1.0/7.0)*7.0;\n    float whiteKey = 1.0-smoothstep(0.43,0.49,abs(whiteKeyX-0.5));\n    whiteKey = min(whiteKey,1.0-smoothstep(0.92, 0.95,1.0 - loc.y));\n    \n    // slightly scale up black key left and righ half\n    const float blackOffset = 0.098;\n    float blackScaledX = loc.x * 0.89;\n    if (blackScaledX > 3.0/7.0) {\n      blackScaledX += 0.05;\n    }\n    \n    // calculate black coordinates\n    float blackX = mod(blackScaledX+blackOffset,1.0/7.0)*7.0;\n    float blackKey = 1.0-smoothstep(0.15,0.33,abs(blackX-0.5));\n    blackKey = min(blackKey,1.0-smoothstep(0.58, 0.65,1.0 - loc.y));\n    \n    // leave out black keys nr 0, 3 and 7\n    float blackKeyNr = (blackScaledX + blackOffset)* 7.0 - blackX;\n    // if ((abs(blackKeyNr - 0.0) < .01) ||\n    //    (abs(blackKeyNr - 3.0) < .01) ||\n    //    (abs(blackKeyNr - 7.0) < .01)) {\n    \n    // Optimized if\n    // vec3 keyDists = abs(vec3(blackKeyNr) - vec3(0.0,3.0,7.0));\n    // if ((keyDists.x*keyDists.y*keyDists.z) < .1) {\n    \n    // Stride calculation (still an if sorry ollj ;) )\n    if ((int(round(blackKeyNr*(3.55/3.0))) % 4) == 0) {\n      blackKey = 0.0;\n    }\n    \n    // Substract black keys from white keys\n    whiteKey = min(whiteKey, 1.0-smoothstep(0.0,0.2,blackKey));\n    \n    col = vec3(whiteKey*0.85+\n               0.2*blackKey*smoothstep(0.1,0.2,loc.y)+\n               max(0.0, (blackKey+whiteKey)*0.2\n                        -0.2*length((fragCoord.xy-iMouse.xy)/iResolution.xy)));\n    if (uv.y>1.0) {\n      col = vec3(0.0);\n    }\n\n    // Output to screen\n    fragColor = vec4(clamp(col,0.0,1.0),1.0);\n}","name":"Image","description":"","type":"image"}]}