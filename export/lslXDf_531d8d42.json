{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"vec3 bary(vec2 a, vec2 b, vec2 c, vec2 p) {\n    vec2 v0 = b - a, v1 = c - a, v2 = p - a;\n    float inv_denom = 1.0 / (v0.x * v1.y - v1.x * v0.y);\n    float v = (v2.x * v1.y - v1.x * v2.y) * inv_denom;\n    float w = (v0.x * v2.y - v2.x * v0.y) * inv_denom;\n    float u = 1.0 - v - w;\n    return abs(vec3(u,v,w));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 a = vec2(0.0, 0.0);\n    vec2 b = vec2(1.0, 0.0);\n    vec2 c = vec2(0.0, 1.0);\n    \n    vec3 bcc = bary(a, b, c, uv);\n\n    if(bcc.x + bcc.y + bcc.z > 1.0001) {\n    \tdiscard;   \n    }\n    \n\tfragColor = vec4(bcc, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lslXDf","date":"1407537413","viewed":833,"name":"Efficient Barycentric","username":"jessifin","description":"If you can't understand it, look up barycentric coordinates then brush up on cramer's rule.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["barycentric","cramer"],"hasliked":0,"parentid":"","parentname":""}}