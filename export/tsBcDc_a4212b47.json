{"ver":"0.1","info":{"id":"tsBcDc","date":"1587432064","viewed":126,"name":"Interactive Julia Set","username":"CornerPin","description":"Julia set","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia","mandelbrot","interactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ITER 256\n\nconst float OneSixth = 1.0 / 6.0;\n\nvec4 hue2rgb(float hue) {\n    return vec4(clamp(abs(mod(hue*OneSixth + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0), 1.0);\n}\n\nvec2 uv2coord(vec2 uv) {\n    vec2 coord = 4.0 * uv - 2.0;\n    return vec2((mod(coord.x, 2.0) - 1.0) * iResolution.x/iResolution.y - 0.5, coord.y);\n}\n\nvec4 fractal(vec2 z, vec2 c) {\n    for (int i = 0; i < ITER; ++i) {\n        z = vec2(\n            z.x*z.x - z.y*z.y + c.x,\n            2.0 * z.x*z.y + c.y\n        );\n\n        float distSqr = dot(z, z);\n        \n        if (distSqr > 16.0)\n            return hue2rgb(float(i) + 1.0 - log2(log(distSqr) / 2.0));\n    }\n    \n    return vec4(0.0, 0.0, 0.0, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 coord = uv2coord(uv);\n    \n    if (uv.x < 0.5)\n        // Mandelbrot\n        fragColor = fractal(vec2(0.0, 0.0), coord);\n    else\n        // Julia\n        fragColor = fractal(coord + vec2(0.5, 0.0), uv2coord(iMouse.xy/iResolution.xy));\n}","name":"Image","description":"","type":"image"}]}