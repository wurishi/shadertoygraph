{"ver":"0.1","info":{"id":"ttlfRs","date":"1597522296","viewed":76,"name":"Spinner by Darko [WiP]","username":"omegasbk","description":"Just a simple spinner","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["loadspinner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat radius = 0.11;\n\nvec2 spinner1pos = vec2(-0.5, 0.1);\nvec2 spinner2pos = vec2(-0.2, 0.1);\n\n#define SMOOTH(r,R) (1.0-smoothstep(R-1.0,R+1.0, r))\n\n\n// Plot a line on Y using a value between 0.0-1.0\nfloat plot(vec2 st, vec2 position, float modifier) \n{    \n    return (1. - step(radius, distance(st, position)))\n            * (1. - step(0.005, abs(cos(-iTime * modifier) * (st.y - spinner1pos.y) - \n                                    sin(-iTime * modifier) * (st.x - spinner1pos.x))));\n}\n\nfloat circle(vec2 uv, vec2 center, float radius, float width, float opening)\n{\n    vec2 d = uv - center;\n    float r = sqrt(dot(d, d));\n    d = normalize(d);\n    if(abs(d.y) > opening)\n\t    return SMOOTH(r-width/2.0, radius)-SMOOTH(r+width/2.0,radius);\n    else\n        return 0.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x *= (iResolution.x / iResolution.y);\n\n    /*float thickness = 0.03;\n    float position = (sin(iTime * 4. + uv.x * 4.) + 1.) / 2.;\n    vec3 col = vec3(smoothstep(position-thickness, position, uv.y) - \n                    smoothstep(position, position+thickness, uv.y));*/\n   \n    vec3 col = vec3(plot(uv, spinner1pos, 0.5));\n    col += vec3(plot(uv, spinner1pos, 1.));\n    col += vec3(plot(uv, spinner1pos, 1.5));\n    col += vec3(plot(uv, spinner1pos, 2.));\n    col += vec3(plot(uv, spinner1pos, 2.5));\n    col += vec3(plot(uv, spinner1pos, 3.));\n    col += vec3(plot(uv, spinner1pos, 3.5));\n    col += vec3((step(radius, distance(uv, spinner1pos)) -\n                 step(radius + abs(cos(iTime) / 55.) + 0.01, distance(uv, spinner1pos))));\n    \n    \n    \n    float angle = dot(vec2(0., 1.), normalize(uv - spinner2pos));\n    \n    vec3 circle2;\n   \tcircle2 += vec3(\n        (step(0.2, sin(iTime) * angle)) * \n        ((step(radius, distance(uv, spinner2pos)) -\n                 step(radius + 0.01, distance(uv, spinner2pos)))));\n    \n    \n    col += circle2;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}