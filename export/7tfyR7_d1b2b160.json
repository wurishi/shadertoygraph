{"ver":"0.1","info":{"id":"7tfyR7","date":"1647656966","viewed":87,"name":"rudimentary mandelbrot attempt 2","username":"lastingluminance","description":"trying to get this working ok cool it works idk why this fucked up before","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define E 2.71281828459045\n\nvec2 squarecnumber(vec2 c)\n{\n    return vec2( (c.x *c.x) - (c.y * c.y) , (2. * c.x * c.y) );\n}\n\nint MODitering( vec2 coord, int iters)\n{\n    int colored = 0;\n    vec2 returncoord = vec2( 0. );\n    for( int i = 0; i < iters && !(length(returncoord)>sinh(iTime)); i = i + 1 )\n    {\n        returncoord = squarecnumber( returncoord ) + coord;\n        colored = i;\n    }\n    return colored;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // normalized pixel coords (0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 startcolor = vec3( 0. );\n    vec3 endcolor = vec3( 1. );\n    \n    // other normalization stuff\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    uv *= 4.;\n    \n    int index = MODitering(uv, 2000);\n    float basiclydist = exp(-float(index)/20.);\n    vec3 col = (basiclydist * startcolor) + (1. - basiclydist) * endcolor;\n    \n    fragColor = vec4( col, 1. );\n}","name":"Image","description":"","type":"image"}]}