{"ver":"0.1","info":{"id":"mtB3Wy","date":"1673836912","viewed":173,"name":"Sobel Edge Detection By:Eloi199","username":"Eloi199","description":"Edge Detection Algorithm","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["edgedetection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat sobel(vec2 UV)\n{\n    vec2 SobR = vec2(0);   \n    vec2 SobG = vec2(0);\n    vec2 SobB = vec2(0);\n\n    float Textel = 2.0;\n    float Thickness = 0.004;\n    \n    vec2 Samples[9] = vec2[9](\n        vec2(-1, 1),  vec2(0, 1),  vec2(1, 1), \n        vec2(-1, 0),  vec2(0, 0),  vec2(1, 0), \n        vec2(-1, -1), vec2(0, -1), vec2(1, -1)\n    );\n    \n    float sobelXMatrix[9] = float[9](\n        float(1), float(0), float(-1),\n        float(2), float(0), float(-2),\n        float(1), float(0), float(-1)\n    );\n    \n    float sobelYMatrix[9] = float[9](\n        float(1),   float( 2),    float(1),\n        float(0),   float( 0),    float(0),\n        float(-1),  float(-2),    float(-1)\n    );\n\n    for (int i = 0; i < 9; i++) \n    {\n        vec4 E = texture(iChannel0, UV + Samples[i] * Thickness);\n        vec2 Kernel = vec2(sobelXMatrix[i], sobelYMatrix[i]);\n        SobR += E.r * Kernel;\n        SobG += E.g * Kernel;\n        SobB += E.b * Kernel;\n    }\n    float Sob = max(length(SobR),max(length(SobG),length(SobB)));\n    return Sob;\n}\n\nvec3 lerp(vec3 a, vec3 b , float t)\n{\n    vec3 Inter = a*(1.0-t)+b*t;\n    return Inter;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec3 col = texture(iChannel0,uv).rgb;\n    float weight = smoothstep(1.0,0.5,sobel(uv));\n    //vec3 outline = vec3(0.0,0.0,0.0);\n    //col = lerp(col,outline,weight);\n    //col = vec3(weight);\n    fragColor = vec4(col*weight,1.0);\n}\n\n\n\n","name":"Image","description":"","type":"image"}]}