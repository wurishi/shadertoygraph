{"ver":"0.1","info":{"id":"lsVfW3","date":"1530865840","viewed":69,"name":"test poly","username":"cnwander","description":"poly","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["poly"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float poly(vec2 uv, vec2[3] points) {\n\tfloat m = 0.0;\n    int d = 0;\n    for(int i = 0; i < 3; i++) {\n        vec2 a = points[i] - uv;\n        vec2 b = points[(i+1) % 3] - uv;\n        if(max(a.x, b.x) > 0. && a.y * b.y < 0.) {\n        \tfloat x = a.y * (b.x - a.x) / (a.y - b.y) + a.x;\n        \tif(x > 0.) {\n         \t\td ++;\n        \t}\n        }\n        \n    }\n    if(d % 2 == 1) {\n    \tm = 1.;\n    }\n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2[3] points = vec2[](vec2(-.2, .2), vec2(.3, .4), vec2(.2, -.2));\n    float d = poly(uv, points);\n    \n    \n\n\t\n\n\n    fragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}