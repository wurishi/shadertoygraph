{"ver":"0.1","info":{"id":"4dcGDf","date":"1452394763","viewed":2441,"name":"Pixel Sorting (X-Y Interleave)","username":"cornusammonis","description":"Pixel sorting (by color magnitude) alternating between X and Y axes.","likes":31,"published":3,"flags":32,"usePreview":1,"tags":["pixel","feedback","sorting","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 texel = 1. / iResolution.xy;\n    \n    float step_x = texel.x;\n    float step_y = texel.y;\n    vec2 n  = vec2(0.0, step_y);\n    vec2 s  = vec2(0.0, -step_y);\n    vec2 e  = vec2(-step_x, 0.0);\n    vec2 w  = vec2(step_x, 0.0);\n\n    vec4 im =    texture(iChannel0, uv);\n    vec4 im_n =  texture(iChannel0, uv+n);\n    vec4 im_s =  texture(iChannel0, uv+s);\n    vec4 im_e =  texture(iChannel0, uv+e);\n    vec4 im_w =  texture(iChannel0, uv+w);\n    \n    float len = length(im);\n    float len_n = length(im_n);\n    float len_s = length(im_s);\n    float len_e = length(im_e);\n    float len_w = length(im_w);\n    \n    if(int(mod(float(iFrame), 4.0)) < 2) {\n        if(int(mod(float(iFrame) + fragCoord.y, 2.0)) == 0) {\n            if ((len_s > len)) { \n                im = im_s;    \n             }\n        } else {\n            if ((len_n < len)) { \n                im = im_n;    \n            }   \n        }\n    } else {\n        if(int(mod(float(iFrame) + fragCoord.x, 2.0)) == 0) {\n            if ((len_w > len)) { \n                im = im_w;    \n            }\n        } else {\n            if ((len_e < len)) { \n                im = im_e;    \n            }   \n        }\n    }\n    \n    // initialize with image\n    if(iFrame<10) {\n        fragColor = texture(iChannel1, uv);\n    } else {\n        fragColor = im;\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"}]}