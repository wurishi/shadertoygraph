{"ver":"0.1","info":{"id":"sstcRj","date":"1653768425","viewed":239,"name":"Pixel Staff Generator","username":"SnoopethDuckDuck","description":"Will probably upgrade this at some point","likes":12,"published":3,"flags":48,"usePreview":0,"tags":["feedback","cellularautomata"],"hasliked":0,"parentid":"fs3cz2","parentname":"pattern artomtatat fork"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14159\n\nvec3 pal(float t, vec3 d) {\n    return 0.5 + 0.5 * cos(2. * pi * (0.5 * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float zm = 0.225; \n    vec2 res = 0.5 * floor( iResolution.xy);    \n    vec2 f = fragCoord;//mod(floor(32. * iTime) + fragCoord, res);\n    f.x = abs(f.x - res.x) + res.x;\n    \n    vec3 col = texelFetch( iChannel0, ivec2(zm * f + (1.-zm) * res), 0).rgb;\n\n    col.g *= col.r;\n    //if (col.b > 0.) \n    //    col.rg += col.b * 0.45;\n\n    if (col.g + col.r > 0.)\n        col.b = 0.;\n    else\n        col = 0.4 * vec3(1,1,0.5) * col.bbb;\n    \n    col += 1.5 * col.r * pal(0.5, 0.5 * vec3(0,1,2)/3.);\n    col += (1.-col.r) * vec3(0.15,0.075,0.15);\n    fragColor.rgb = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define KEYBOARD iChannel1\n#define KEY_RESET 82\n\n\nvec3 cell(in ivec2 p) {\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p+r) % r;\n    return texelFetch(iChannel0, p, 0 ).rgb;\n}\n\nbool key_down(int key) {\n    return int(texelFetch(KEYBOARD, ivec2(key, 0), 0).x) == 1;\n}\n\n#define w 10.\n#define h 32.\n\nvoid mainImage( out vec4 col, in vec2 f )\n{\n    ivec2 px = ivec2(f);\n    int fr = int(2. * max(w, h));\n    int maxFr = 3 * fr;\n    int frame = iFrame % maxFr;\n    \n    ivec2 g = ivec2(f + vec2(100.,151.) * iTime * 60.) & 1023;\n    float rand = texelFetch(iChannel2, g, 0).r;\n    \n    vec2 res = floor(0.5 * iResolution.xy);\n    vec2 v = abs(f - res - 0.5);\n    \n    if (frame == 0 || key_down(KEY_RESET)) {      \n        if (v.x < 1. && v.y <= h)\n            col.r = 1.;\n        \n        if (v.x < 1. && v.y < 1.)\n            col.g = 1.;\n        return;\n    }\n           \n    // Center cell\n    col.rgb = cell(px);\n    \n    // Neighbour cells\n    vec3 b = cell(px - ivec2(0,1));\n    vec3 t = cell(px + ivec2(0,1));\n    vec3 l = cell(px - ivec2(1,0));\n    vec3 r = cell(px + ivec2(1,0));   \n    vec3 bl = cell(px + ivec2(-1,-1));\n    vec3 br = cell(px + ivec2(1, -1));\n    vec3 tl = cell(px + ivec2(-1, 1));\n    vec3 tr = cell(px + ivec2(1,  1));   \n    \n    vec3 sum = b + t + l + r;\n    vec3 diag = bl + br + tl + tr;\n    vec3 dif = abs(b-t) * abs(l-r);\n    \n    sum += diag;\n    \n    //e = clamp(e - 0.001, 0., 1.);    \n    //rand = step(0.9, rand);\n    \n    // > 0 and < 1\n    float th = 0.5; // 0.9\n    \n    // between 0 and 7 ish\n    float s = 3.;\n    \n    //e = clamp(e - 0.0001, 0., 1.);\n\n    if ( frame < fr) {\n        if (v.x > w || v.y > h)\n            col.g = 0.;\n        else if (col.g == 0. && rand >= th && abs(sum.g-1.) <= 0.5)\n            col.g = (rand - th) / (1.-th);\n        else if (abs(dif.g - sum.g) < 0.5)\n            col.g = 0.;\n            \n        if (sum.r + diag.r > 0. && col.g > 0.55)\n            col.r = min(2. * col.g, 1.);   \n    }\n    else {\n        if (frame == fr && v.x < 1. && v.y <= h) {\n            col.r = mix(col.r, (sum.r + diag.r) / 8., 0.25);\n        }\n    \n        if (frame == maxFr - 40)\n            col.r = 0.;\n    \n        if (sum.r + diag.r > 0.)\n            col.b = (sum.r + diag.r) / 8.;\n        else\n            col.b = 0.65 * (sum.b + diag.b) / 8.;\n     \n    }  \n}","name":"Buffer A","description":"","type":"buffer"}]}