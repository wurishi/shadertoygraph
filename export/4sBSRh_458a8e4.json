{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// srtuss, 2014\n// This really chockes the browser while compiling, and I'm still not sure why.\n\n#define STEPS 80\n#define scale -1.0\n#define julia vec3(2.2, 0.75, 0.3)\n\nfloat rnd(float x)\n{\n    return fract(sin(x * 143.5925) * 98723.8791);\n}\nfloat nse(float x)\n{\n   \tfloat fl = floor(x);\n    return mix(rnd(fl), rnd(fl + 1.0), smoothstep(0.0, 1.0, fract(x)));\n}\nfloat fbm(float x)\n{\n    return nse(x) * 0.5 + nse(x * 2.0) * 0.25 + nse(x * 4.0) * 0.125;\n}\nvec2 rotate(vec2 p, float a)\n{\n\treturn vec2(p.x * cos(a) - p.y * sin(a), p.x * sin(a) + p.y * cos(a));\n}\nfloat scene(vec3 p)\n{\n\tp *= iTime;\n\tvec3 pz = p;\n\tfor(int i = 0; i < 10; i ++)\n\t{\n\t\tvec3 cp = vec3(p.x, -p.y, -p.z);\n\t\tp = p + pz / dot(p, p) + julia;\n\t\tp = p * scale * 0.3;\n\t}\n\treturn pow(max(length(p), 0.0), 0.8);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pos = uv;\n\tuv = uv * 2.0 - 1.0;\n\tuv.x *= iResolution.x / iResolution.y;\n    \n\tvec3 ro = vec3(0.0, 0.0, cos(iTime * 0.1) * -2.0 - 1.0);\n\tvec3 rd = normalize(vec3(uv, 1.66));\n\t\n\tfloat t = iTime * 0.05;\n\tro.xz = rotate(ro.xz, cos(t * 2.0));\n\trd.xz = rotate(rd.xz, cos(t));\n\t\n\tvec3 r = ro;\n\tfloat a = 0.0;\n\tfor(int i = 0; i < STEPS; i ++)\n\t{\n\t\ta += scene(r);\n\t\tr += rd * 0.05;\n\t}\n\ta /= float(STEPS);\n\tfloat v = a * 0.15;\n\tvec3 col = vec3(v);\n    col = pow(col, vec3(1.0, 0.6, 0.4) * 6.0) * 5.0;\n\tcol = pow(col, vec3(1.0 / 2.2));\n  \tcol *= 0.1 + 0.9 * pow(16.0 * pos.x * pos.y * (1.0 - pos.x) * (1.0 - pos.y), 0.1);\n    col *= fbm(iTime * 20.0) * 0.4 + 0.7;\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"// srtuss, 2014\n\n#define pi2 6.283185307179586476925286766559\n\nfloat rnd(float x)\n{\n    return fract(sin(x * 143.5925) * 98723.8791);\n}\n\nfloat nse(float x)\n{\n   \tfloat fl = floor(x);\n    return mix(rnd(fl), rnd(fl + 1.0), smoothstep(0.0, 1.0, fract(x)));\n}\n\nfloat nses(float x)\n{\n    float e = 0.05;\n   \tfloat fl = floor(x);\n    return mix(rnd(fl), rnd(fl + 1.0), smoothstep(0.5 - e, 0.5 + e, fract(x)));\n}\n\nfloat fbm(float x)\n{\n    return nse(x) * 0.5 + nse(x * 2.0) * 0.25 + nse(x * 4.0) * 0.125;\n}\n\nfloat s4(float t)\n{\n    #define NSPC 64\n    float v = 0.0;\n    for(int i = 0; i < NSPC; i ++)\n    {\n        float h = float(i + 1);\n        float inten = 1.0 / h;\n        float x = h - 8.0;//(sin(t * 0.5) * 3.0 + 8.0);\n        inten *= exp(-x*x * 0.09);\n        \n        \n        inten *= pow(fbm(h * 111.0 + nses(t * 3.0) * 10.0), 4.0);\n        //inten *= pow(fbm(h * 111.0 + t * 10.0), 4.0);\n        //h += rnd(h);\n        v += inten * sin(h * t * 120.0 * 5.0 / 4.0 * pi2);\n    }\n    \n    v *= 5.0;\n    //v *= 100.0 / float(NSPC);\n    \n    return v;\n}\n\nfloat s3(float t)\n{\n    #define NSPC 64\n    float v = 0.0;\n    for(int i = 0; i < NSPC; i ++)\n    {\n        float h = float(i + 1);\n        float inten = 1.0 / h;\n        float x = h - (sin(t * 0.04) * 5.0 + 8.0);//8.0;//\n        inten *= exp(-x*x * 0.09);\n        \n        \n        inten *= pow(fbm(h * 111.0 + nses(t * 3.0) * 10.0), 4.0);\n        //inten *= pow(fbm(h * 111.0 + t * 10.0), 4.0);\n        h += rnd(h);\n        v += inten * sin(h * t * 120.0 * 5.0 / 4.0 * pi2);\n    }\n    \n    v *= 5.0;\n    //v *= 100.0 / float(NSPC);\n    \n    return v;\n}\n\nfloat s2(float t)\n{\n    #define NSPC 64\n    float v = 0.0;\n    for(int i = 0; i < NSPC; i ++)\n    {\n        float h = float(i + 1);\n        float inten = 1.0 / h;\n        float x = h - (sin(t * 0.2) * 2.0 + 10.0);\n        inten *= exp(-x*x * 0.09);\n        \n        \n        \n        inten *= pow(fbm(h * 111.0 + t * 10.0), 4.0);\n        h += rnd(h);\n        v += inten * sin(h * t * 120.0 * pi2);\n    }\n    \n    v *= 5.0;\n    //v *= 100.0 / float(NSPC);\n    \n    return v;\n}\n\nfloat s(float t)\n{\n    return (s2(t) + s2(t * 1.01)) * sin(t * 0.1) + s3(t * 2.252) * 0.4 * cos(t * 0.1) + s4(t * 0.25) * sin(t * 0.05);\n}\n\nvec2 echo(float t)\n{\n    vec2 v;\n    \n    float a = 0.7, et = 0.1, fb = 0.8;\n    v = vec2(s(t));\n    v = v.yx + s(t - et) * a * vec2(1.0, 0.5); a *= fb; et += 0.2;\n    v = v.yx + s(t - et) * a * vec2(0.5, 1.0); a *= -fb; et += 0.2;\n    v = v    + s(t - et) * a * vec2(1.0, 0.5); a *= fb; et += 0.3;\n    v = v.yx + s(t - et) * a * vec2(1.0, 0.5); a *= -fb; et += 0.2;\n    v = v    + s(t - et) * a * vec2(0.5, 1.0); a *= fb; et += 0.3;\n    v = v    + s(t - et) * a * vec2(1.0, 0.5); a *= -fb; et += 0.3;\n    v = v.yx + s(t - et) * a * vec2(0.5, 1.0); a *= fb; et += 0.2;\n    v = v.yx + s(t - et) * a * vec2(1.0, 0.5); a *= -fb; et += 0.3;\n    v = v    + s(t - et) * a * vec2(1.0, 0.5); a *= fb; et += 0.4;\n    v = v.yx + s(t - et) * a * vec2(0.5, 1.0); a *= -fb; et += 0.3;\n    v = v.yx + s(t - et) * a * vec2(1.0, 0.5); a *= fb; et += 0.2;\n    \n    return v;\n}\n\nvec2 mainSound( in int samp,float t)\n{\n    \n    \n    return vec2(echo(t) * exp(max(t - 55.0, 0.0) * -1.0));\n}","name":"Sound","description":"","type":"sound"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":true,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4sBSRh","date":"1408581057","viewed":2775,"name":"Signal (sound)","username":"srtuss","description":"A shiny and surreal effect.","likes":67,"published":1,"flags":8,"usePreview":1,"tags":["sound","audio","trippy","digital","surreal"],"hasliked":0,"parentid":"","parentname":""}}