{"ver":"0.1","info":{"id":"XddSDN","date":"1459438824","viewed":479,"name":"Radial Gradient with Focus","username":"Rotem","description":"My first shader here.\nA simple radial gradient define by a center and an endpoint. Use the mouse to set the focus point.\nChange ELLIPSE_RATIO / TILING to taste.\n\nI would welcome comments and optimizations.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["radial","gradient"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float ELLIPSE_RATIO = 1.0;\nconst float TILING = 4.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 center = iResolution.xy / 2.0;\n    vec2 endPoint = iResolution.xy / 1.35;\n    vec2 focus = iMouse.xy;\n    vec2 coord = fragCoord.xy;\n    float radius = distance(endPoint, center);   \n    \n    /// APPLY ELLIPSE MODIFIER    \n    // project the coordinate onto the axis between the center and the endpoint of the gradient.\n    // the longer this projection is, the more the coordinate should be squashed.\n    vec2 axis = endPoint - center;\n\tfloat l2 = dot(axis, axis);\n\tif (l2 != 0.0)\n\t{\n\t\tfloat d = dot(coord - center, axis) / l2;\n\t\tvec2 proj = center + d * axis;\n        coord = proj - (proj - coord) * ELLIPSE_RATIO;\n        \n        //ellipsy the focus point as well\n        float d2 = dot(focus - center, axis) / l2;\n        vec2 proj2 = center + d2 * axis;\n        focus = proj2 - (proj2 - focus) * ELLIPSE_RATIO;\n    }\n    \n    /// APPLY FOCUS MODIFIER    \n    //project a point on the circle such that it passes through the focus and through the coord,\n    //and then get the distance of the focus from that point.\n    //that is the effective gradient length\n   \tfloat gradLength = 1.0;\n   \tvec2 diff = focus - center;\n    vec2 rayDir = normalize(coord - focus);\n\tfloat a = dot(rayDir, rayDir);\n\tfloat b = 2.0 * dot(rayDir, diff);\n\tfloat c = dot(diff, diff) - radius * radius;\n\tfloat disc = b * b - 4.0 * a * c;\n\tif (disc >= 0.0) \n    {\n\t    float t = (-b + sqrt(abs(disc))) / (2.0 * a);\n\t    vec2 projection = focus + rayDir * t;\n    \tgradLength = distance(projection, focus);\n    }\n    else\n    {\n     \t//gradient is undefined for this coordinate   \n    }\n    \n    /// OUTPUT\n    float grad = distance(coord, focus) / gradLength * TILING;   \n    vec3 col = mix(vec3(0.75, 0.75, 0.95), vec3(0.25, 0.25, 0.35), fract(grad));\n    \n    \n    //MARK THE CENTER, END AND FOCUS POINTS\n    col = mix(col, vec3(1.0, 1.0, 0.0), 1.0 - smoothstep(5.0, 6.0, distance(coord, center)));\n    col = mix(col, vec3(1.0, 1.0, 0.0), 1.0 - smoothstep(5.0, 6.0, distance(coord, endPoint)));\n    col = mix(col, vec3(1.0, 1.0, 1.0), 1.0 - smoothstep(5.0, 6.0, distance(coord, focus)));\n    //MARK THE PERIMETER\n    if (distance(coord, center) > radius)\n    {\n        col = mix(col, vec3(0.0, 0.0, 0.0), 0.5);\n\n    };\n        \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}