{"ver":"0.1","info":{"id":"M3yGWc","date":"1718311396","viewed":80,"name":"japanese art","username":"sp3ctre","description":"initially an attempt to replicate the style of ink on paper. Now more of a old printed effect.","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["blur","outline","art","multiplepass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//blur pass 2\n\nfloat sigma = 0.15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n    \n    float kernelSize = 4.*sigma +.5;\n    \n    float totalWt = .0;\n    float value = 0.;\n    for (float x = -kernelSize; x<=kernelSize; x++){\n        float wt = exp(-x*x/(sigma*sigma));\n        totalWt += wt;\n        value += texture(iChannel0,uv + vec2(0.,x*texelSize.y)).x*wt;\n    }\n    value /= totalWt; \n    \n    vec3 lumaVec = vec3(0.2126,0.7152,0.0722); //for converting rgb to brightness\n    vec3 col1 = vec3(0.678, 0.545, 0.451) * (dot(lumaVec,texture(iChannel2,uv).xyz)*0.5+1.2); //paper color (color + textuere)\n    vec3 col2 = vec3(0.349, 0.271, 0.271); //ink color\n    \n    fragColor = vec4(col1*pow(col2,vec3(value,value,value)),1.);\n    \n    \n    float pageTexture = dot(lumaVec, texture(iChannel3,uv).xyz);\n    pageTexture = (pageTexture -0.5)*0.06 +0.9;\n    fragColor *= pageTexture;\n//    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// blur pass 1\nfloat sigma = 2.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n    \n    float kernelSize = 4.*sigma +.5;\n    \n    float totalWt = .0;\n    fragColor *= 0.;\n    for (float x = -kernelSize; x<=kernelSize; x++){\n        float wt = exp(-x*x/(sigma*sigma));\n        totalWt += wt;\n        fragColor += texture(iChannel0,uv + vec2(x*texelSize.x,0.))*wt;\n    }\n    fragColor /= totalWt; \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//blur pass 2\n\nfloat sigma = 2.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n    \n    float kernelSize = 4.*sigma +.5;\n    \n    float totalWt = .0;\n    fragColor *= 0.;\n    for (float x = -kernelSize; x<=kernelSize; x++){\n        float wt = exp(-x*x/(sigma*sigma));\n        totalWt += wt;\n        fragColor += texture(iChannel0,uv + vec2(0.,x*texelSize.y))*wt;\n    }\n    fragColor /= totalWt; \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//sharpening and coloring\n\nfloat posterizeLvl = 1.;\nfloat sharpness = 10.;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col = texture(iChannel0,uv).xyz;\n    col = col + (col - texture(iChannel1,uv).xyz)*sharpness;\n\n\n    vec3 lumaVec = vec3(0.2126,0.7152,0.0722); //for converting rgb to brightness\n    \n    \n    float value = dot(col, lumaVec);\n    value = 1.-value; // \n    \n//    float outline = (value>=1.3) ? 1. : 0.;\n    //posterization \n    value = floor(value*posterizeLvl + 0.5)/posterizeLvl;\n    value = clamp(value,0.,1.);\n    \n    fragColor = vec4(value,value,value,1.);\n\n//    fragColor = vec4(col1*pow(col2,vec3(value,value,value)),1.);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"// blur pass 1\nfloat sigma = .15;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelSize = 1./iResolution.xy;\n    \n    float kernelSize = 4.*sigma +.5;\n    \n    float totalWt = .0;\n    fragColor *= 0.;\n    for (float x = -kernelSize; x<=kernelSize; x++){\n        float wt = exp(-x*x/(sigma*sigma));\n        totalWt += wt;\n        fragColor += texture(iChannel0,uv + vec2(x*texelSize.x,0.))*wt;\n    }\n    fragColor /= totalWt; \n//    fragColor = texture(iChannel0,uv);\n}","name":"Buffer D","description":"","type":"buffer"}]}