{"ver":"0.1","info":{"id":"WljyW1","date":"1594245275","viewed":94,"name":"Pole and Zero Contour Plot 3","username":"Mr_Mayhem","description":"Same as previous, but with code in mainImage(). Topo lines are generated via slicing terrain.  Use mouse or tap. \nTrying to solve an error message on IPad:   ‘ [ ] ‘ index expression must be constant\nWent back to if statement for now as fix. No array.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["distancefields","noloop","contour","fields","topo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2  R = iResolution.xy;\n    float h = R.y;\n    float d =   h / ( h + length(fragCoord - iMouse.xy) ) // Pole at mouse\n        \t  - h / ( h + length(fragCoord - .5*R     ) );// Zero at center screen\n    \n    // make the rings using d\n    float bright = abs(d) + 1. - h * abs( d - round(d*20.)/20.);\n    \n    // assign the colors using bright.\n    // green if > 0, red if < 0\n \tfragColor =  vec4(bright, bright, 0, 1) \n    *vec4(d<0., d>0., 0, 1); // replaces if d > 0. statement\n}","name":"Image","description":"","type":"image"}]}