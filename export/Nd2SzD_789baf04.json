{"ver":"0.1","info":{"id":"Nd2SzD","date":"1619799042","viewed":75,"name":"Srejprised","username":"tangerine","description":"just some effin around","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","stripes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//stole some crt from https://www.shadertoy.com/view/XtlSD7     \n\nvec2 CRTCurveUV( vec2 uv )\n{\n    /*uv = uv * 2.0 - 1.0;\n    vec2 offset = abs( uv.yx ) / vec2( 6.0, 4.0 );\n    uv = uv + uv * offset * offset;\n    uv = uv * 0.5 + 0.5;*/\n    return uv;\n}\n\nvoid DrawScanline( inout vec3 color, vec2 uv )\n{\n    float scanline \t= clamp( 0.5 + 0.5 * cos( 3.14 * ( uv.y + 0.008 * iTime ) * 240.0 * 1.0 ), 0.0, 1.0 );\n    float grille \t= 0.5 + 0.5 * clamp( 1.5 * cos( 3.14 * uv.x * 640.0 * 1.0 ), 0.0, 1.0 );    \n    color *= scanline * grille * 2.2;\n}\n\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur){\n    uv.x += sin(iTime/20.)/2. +.2;     \n    uv.y += sin(iTime/10.)/8. -.1;\n    float d = length(uv-p); \n    float c = smoothstep(r, r-blur, d); \n    return c;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy; \n    uv -= .5; // -.5 to .5     \n    uv *= 2.; // -1 to 1 \n    uv.x *= iResolution.x/iResolution.y; \n    float pi = 22./7.; //fuck the world      \n    vec3 col ;\n    // Output to screen\n    vec3 sine ;    \n    sine.x = sin(uv.x * 4. * pi + iTime);\n    sine.y = sin(uv.y * 2. * pi + iTime);\n    sine.z = sin((uv.y + uv.x)/2. + iTime*.1);\n    col.x = uv.x/2. / sine.y ;   \n    col.x = smoothstep(1.,(.8 + (sin(iTime)*.1)),col.x-.2);\n    col.y = uv.y / sine.x ;\n    col.y = smoothstep(0.7,(.8 + (sin(iTime)*.1)),col.y-.2);   \n    \n    col.z =  sine.z ;\n    col.z = smoothstep(0.01,1.,col.z-.04); \n    \n    \n    float c = Circle(uv, vec2(.2,-.1), .8, .1);\n    c -= Circle(uv, vec2(.43,.22), .15, .05);\n    c -= Circle(uv, vec2(-.1,.18), .15, .05);\n    c -= Circle(uv, vec2(.2,-.4), .3, .05);\n    vec3 oldcol = col;\n    DrawScanline(col, uv);\n    float mo = (c<0.1)? 0.9:col.y; \n    col = mod(col,mo);\n    DrawScanline(col, uv);\n    col = 1.-col;\n    DrawScanline(col, uv);\n    col -= oldcol;\n    DrawScanline(col, uv);\n    fragColor = vec4(col.x, col.y, col.z, 1.0);\n}","name":"Image","description":"","type":"image"}]}