{"ver":"0.1","info":{"id":"XfGSzy","date":"1715324175","viewed":145,"name":"digital matrix rain","username":"rockhard","description":"the matrix rain refined version the words has correct position and color ,instead of use the texture input","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["matrixdigital"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//https://www.shadertoy.com/view/llSGRm\n#define ch0 vec2(935221.0,731292.0)\n#define ch1 vec2(274497.0,33308.0)\n#define ch2 vec2(934929.0,1116222.0)\n#define ch3 vec2(934931.0,1058972.0)\n#define ch4 vec2(137380.0,1302788.0)\n#define ch5 vec2(2048263.0,1058972.0)\n#define ch6 vec2(401671.0,1190044.0)\n#define ch7 vec2(2032673.0,66576.0)\n#define ch8 vec2(935187.0,1190044.0)\n#define ch9 vec2(935187.0,1581336.0)\n\n#define ch_A vec2(935188.0,780450.0)\n#define ch_B vec2(1983767.0,1190076.0)\n#define ch_C vec2(935172.0,133276.0)\n#define ch_D vec2(1983764.0,665788.0)\n#define ch_E vec2(2048263.0,1181758.0)\n#define ch_F vec2(2048263.0,1181728.0)\n#define ch_G vec2(935173.0,1714334.0)\n#define ch_H vec2(1131799.0,1714338.0)\n#define ch_I vec2(921665.0,33308.0)\n#define ch_J vec2(66576.0,665756.0)\n#define ch_K vec2(1132870.0,166178.0)\n#define ch_L vec2(1065220.0,133182.0)\n#define ch_M vec2(1142100.0,665762.0)\n/*\nvec2 ch_N = vec2(1140052.0,1714338.0);\nvec2 ch_O = vec2(935188.0,665756.0);\nvec2 ch_P = vec2(1983767.0,1181728.0);\nvec2 ch_Q = vec2(935188.0,698650.0);\nvec2 ch_R = vec2(1983767.0,1198242.0);\nvec2 ch_S = vec2(935171.0,1058972.0);\nvec2 ch_T = vec2(2035777.0,33288.0);\nvec2 ch_U = vec2(1131796.0,665756.0);\nvec2 ch_V = vec2(1131796.0,664840.0);\nvec2 ch_W = vec2(1131861.0,699028.0);\nvec2 ch_X = vec2(1131681.0,84130.0);\nvec2 ch_Y = vec2(1131794.0,1081864.0);\nvec2 ch_Z = vec2(1968194.0,133180.0);*/\n\n#define DS vec2(6.0,7.0) //digital size\n#define LX 8.0 //letter space x\n#define LY 10.0//letter space y\n\nfloat rand (vec2 st) {\n    return fract(sin(dot(st.xy,vec2(12.9898,78.233)))*43.5453123);\n}\n\nfloat extract_bit(float n, float b){\n   b = clamp(b,-1.0,22.0); //Fixes small artefacts on my nexus 7\n   return floor(mod(floor(n / pow(2.0,floor(b))),2.0));   \n}\n\nfloat sprite(vec2 spr,vec2 p){\n    vec2 uv=vec2(mod(p.x,LX),mod(p.y,LY));\n    uv = floor(uv);\n    if(uv.x>=0.0&&uv.y>=0.0&&uv.x<DS.x&&uv.y<DS.y) {  \n    float bit = (DS.x-uv.x) + uv.y * DS.x;\n    return extract_bit(spr.x, bit - 21.0)+extract_bit(spr.y, bit);  \n    }\n    return 0.0;\n}\nvec2 getD(float d){ d = floor(d);    \n    if(d == 0.0) return ch0;if(d == 1.0) return ch1;\n    if(d == 2.0) return ch2;if(d == 3.0) return ch3;\n    if(d == 4.0) return ch4;if(d == 5.0) return ch5;\n    if(d == 6.0) return ch6;if(d == 7.0) return ch7;\n    if(d == 8.0) return ch8;if(d == 9.0) return ch9;\n    if(d == 10.0) return ch_A;if(d == 11.0) return ch_B;\n if(d == 12.0) return ch_A;if(d == 13.0) return ch_B;\n if(d == 14.0) return ch_C;if(d == 15.0) return ch_D;\n if(d == 16.0) return ch_E;if(d == 17.0) return ch_F;\n if(d == 18.0) return ch_G;if(d == 19.0) return ch_H;\n if(d == 20.0) return ch_I;if(d == 21.0) return ch_J;\nif(d == 22.0) return ch_K;if(d == 23.0) return ch_M;\n    return vec2(0.0,0.0);\n}\nfloat rain(vec2 p){\n    p.x -= mod(p.x, LX); \n    float offset= sin(p.x*LX);\n    float speed=abs(cos(p.x*2.))*.12+0.08;\n    float y=p.y- mod(p.y,LY);\n    y = fract(y/iResolution.y+ iTime*speed + offset);\n    //some random look\n   y+= fract(0.4*p.x/iResolution.x+ iTime*speed-offset)*0.2;\n    return 0.08/ y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv=fragCoord.xy/2.0;//  fragCoord.xy/2.0;\n   float r = rain(uv);\n   //use steped uv+time as random input\n   vec2 s=vec2(LX,LY);\n   vec2 suv = mod(uv,s)/s;\n   vec2 block = uv/s - suv;\n   float tm= rand(block)+iTime*0.36;\n   float dig = mod(tm*10.0,24.0); //0-24\n   float t = sprite(getD(dig),uv)*r;\n   fragColor = vec4(0.2*t,t,0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}