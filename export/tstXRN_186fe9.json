{"ver":"0.1","info":{"id":"tstXRN","date":"1574734737","viewed":154,"name":"Portals 1","username":"BFrizzFoShizz","description":"A first attempt at portal rendering, using some very crude raycasting code.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["portal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int ITERATIONS = 200;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec3 eyeOrigin = vec3(cos(iTime * 1.41) * 2.0f,sin(iTime),sin(iTime * 1.325) * 0.5f);\n    \n    float nearPlaneDist = 0.1f;\n    \n    // horizontal FoV\n    float FoV = (60.0f / 180.0f) * 3.1415926535f;\n    \n    float halfNearPlaneWidth = (sin(FoV / 2.0f));\n    \n    float aspect = iResolution.x / iResolution.y;\n    \n    vec3 nearPlaneOrigin = eyeOrigin + vec3(-halfNearPlaneWidth, -halfNearPlaneWidth / aspect, nearPlaneDist);\n    \n    vec3 rayOrigin = nearPlaneOrigin + vec3(uv.x * halfNearPlaneWidth*2.0f, uv.y * (halfNearPlaneWidth / aspect) * 2.0f, 0.0f);\n    \n    vec3 rayDir = normalize(rayOrigin - eyeOrigin);\n    \n    float wall1Pos = 1.0f;\n    float wall2Pos = -1.0f;\n    vec3 rayPos = rayOrigin;\n    \n    for(int i=0;i<ITERATIONS;++i)\n    {\n        \n    float wallDelta = wall1Pos - rayPos.z;\n        vec3 rayDelta = (wallDelta / rayDir.z) * rayDir;\n        vec3 newRayPos = rayPos + rayDelta;\n        float circleDistance = length(newRayPos.xy * vec2(1.0f, 0.5f));\n        if(circleDistance > 1.0f)\n        {\n            // intersection found\n    \t\t//fragColor = vec4(length(newRayPos.xy) / 10.0f) + 0.3f;\n            fragColor = texture(iChannel0, newRayPos.xy / 10.0f);\n            if(circleDistance < 1.1f)\n            {\n                float x = (atan(newRayPos.y, newRayPos.x) * 40.0f);\n                float t = 0.2*(iTime*130.0);\n                float frequency = 0.2f;\n\t\t\t\tfloat y = sin(x * frequency);\n                y += sin(x*frequency*2.1 + t)*4.5;\n                y += sin(x*frequency*1.72 + t*1.121)*4.0;\n                y += sin(x*frequency*2.221 + t*0.437)*5.0;\n                y += sin(x*frequency*3.1122+ t*4.269)*2.5;\n                y /= 12.5f;\n                y += 1.0f;\n                y *= 0.25f;\n                float effectIntensity = y;\n                //effectIntensity *= 0.8;\n                float ringPos = sin((circleDistance * 3.1415) * 10.0f);\n                fragColor.r += effectIntensity * ringPos;\n            }\n            return;\n        }\n        rayPos = newRayPos;\n        // move to other wall\n        rayPos.z = wall2Pos;\n    }\n    fragColor = vec4(0.0f, 0.0f, 0.0f, 1.0f);\n    \n    // portal taken >100 times\n    // Output to screen\n}","name":"Image","description":"","type":"image"}]}