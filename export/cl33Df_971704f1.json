{"ver":"0.1","info":{"id":"cl33Df","date":"1683209475","viewed":29,"name":"trig test 4 by mauminimus","username":"mauminimus","description":"draws a triangle by using line equation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 pcoords )\n{\n \n    vec3 col = vec3(0);\n    \n    vec2 p1 = vec2( 100, 100 );\n    vec2 p2 = vec2( 300, 100 );\n    vec2 p3 = vec2( 200, 273 );\n    \n    p1 = rotate2d(p1, vec2(200, 157), iTime);\n    p2 = rotate2d(p2, vec2(200, 157), iTime);\n    p3 = rotate2d(p3, vec2(200, 157), iTime);\n \n     for (int i = 0; i < 200; i++) {\n        col += trig(p1, p2, p3, pcoords-vec2(i*2, i)) * .00625;\n    }\n \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float line(vec2 p1, vec2 p2, vec2 pcoords) {\n\n    //(p2.y - p1.y)*(x - p1.x) = (p2.x - p1.x)*(y - p1.y)\n    //this function draws a line with the line equation\n    return clamp((p2.y - p1.y)*(pcoords.x - p1.x) - (p2.x - p1.x)*(pcoords.y - p1.y), 0., 1.);\n    \n\n}\n\nvec2 rotate2d(vec2 pos, vec2 around, float angle) {\n    \n    float px = pos.x - around.x;\n    float py = pos.y - around.y;\n    \n    float rx = px * cos(angle) - py * sin(angle);\n    float ry = px * sin(angle) + py * cos(angle);\n    \n    rx += around.x;\n    ry += around.y;\n    \n    return(vec2( rx, ry ));\n    \n}\n\nfloat trig(vec2 p1, vec2 p2, vec2 p3, vec2 pcoords) {\n    \n    return (\n    clamp((p3.y - p1.y)*(pcoords.x - p1.x) - (p3.x - p1.x)*(pcoords.y - p1.y), 0., 1.) *\n    clamp((p2.x - p1.x)*(pcoords.y - p1.y) - (p2.y - p1.y)*(pcoords.x - p1.x), 0., 1.) *\n    clamp((p3.x - p2.x)*(pcoords.y - p2.y) - (p3.y - p2.y)*(pcoords.x - p2.x), 0., 1.)\n    );\n}","name":"Common","description":"","type":"common"}]}