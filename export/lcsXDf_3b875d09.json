{"ver":"0.1","info":{"id":"lcsXDf","date":"1705851224","viewed":61,"name":"rings of grey","username":"Angramme","description":"f","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["f"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAXD 100000.\n#define HOTMAGMA vec3(1., 98./255., 41./255.)\n#define GLOWPURPLE vec3(154./255., 66./255., 1.)\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.x-.5*vec2(1., iResolution.y/iResolution.x);\n    \n    vec3 ro = vec3(0, 4. + .5*cos(.8398*iTime + cos(.345*iTime)), 0);\n    vec3 rd = normalize(vec3(uv.xy, 1.));\n    rd.zy = rotate(rd.zy, -.3);\n    \n    vec3 col = vec3(0.);\n    \n    \n    float d = -ro.y / rd.y;\n    if(d > 0.){\n        vec3 p = ro + rd*d;\n        vec3 n = vec3(0,1,0);\n        const vec2 cen = vec2(-10., 20.);\n        float r = distance(cen, p.xz);\n        float ang = atan(cen.y-p.z, cen.x-p.x);\n        {\n            float r = r + .2*cos(3.*ang + iTime);\n            const float TRANS = 0.2, A = 12., B = 14.;\n            float mask = smoothstep(A-TRANS, A, r)*smoothstep(B+TRANS, B, r);\n            col = mask*mix(HOTMAGMA, GLOWPURPLE, 0.3+2.*max(0., dot(-rd, n)));\n        }\n        {\n            float r = r + .2*cos(2.*ang + 1.2*iTime);\n            vec3 LD = normalize(vec3(cos(2.*iTime), sin(2.8*iTime), 4.));\n            const float TRANS = 0.2, A = 13.79, B = 13.8;\n            const float TRANS2 = 0.05, A2 = 14.1, B2 = 14.1;\n            float mask = smoothstep(A-TRANS, A, r)*smoothstep(B+TRANS, B, r) + smoothstep(A2-TRANS2, A2, r)*smoothstep(B2+TRANS2, B2, r);\n            col += vec3(mask*pow(dot(-rd, reflect(-LD, n)), 10.));\n        }\n        {\n            float r = r + .1*cos(1.*ang + 1.82*iTime);\n            const float A = 11., B = 12.1;\n            float mask = smoothstep(A-4., A, r)*smoothstep(B+0.3, B, r);\n            col += mask*mix(HOTMAGMA*3., GLOWPURPLE, smoothstep(A-1., A, r));\n        }\n        // col = vec3(smoothstep(-0.9, -0.8, sin(r-iTime))/r);\n    }\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}