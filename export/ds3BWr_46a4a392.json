{"ver":"0.1","info":{"id":"ds3BWr","date":"1697031469","viewed":74,"name":"Inescapable circle","username":"FFFFFFear1","description":"Just for fun :)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["learing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 _uvColor = vec2(0.0);\nfloat _radiusCircle = .48;\nfloat _glow = 0.003;\nfloat _linesCount = 15.0;\n\nvec3 colorPalette(float t)\n{\n    vec3 a = vec3(1.5, 1.5, 1.5);\n    vec3 b = vec3(-0.5, 0.5, 0.5);\n    vec3 c = vec3(0.5, 0.5, 0.5);\n    vec3 d = vec3(-0.5, 0.5, 0.5);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat circle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord *  2.  - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.);\n\n    for(float i = .0; i < _linesCount; i++)\n    {\n        float f1 = 1. + 1. * smoothstep(.1, -.4, sin((uv.x + uv.y * i / 4.5) + iTime));\n\n        float newCircles = circle(uv, f1 * _radiusCircle);\n        \n        newCircles = pow( abs(_glow / newCircles), 2.2) + smoothstep(0.2,0.,abs(newCircles)/fwidth(newCircles) );\n        //newCircles = pow(_glow / abs(newCircles), 2.2);\n        \n        vec3 color = colorPalette(circle(_uvColor, f1));\n        finalColor += color * newCircles;\n    }\n    \n    fragColor = vec4(finalColor, 1.);\n}","name":"Image","description":"","type":"image"}]}