{"ver":"0.1","info":{"id":"tdtyWr","date":"1600777374","viewed":262,"name":"ValueNoiseEffect","username":"celns","description":"ValueNoise","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["valuenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Random(vec2 uvi)\n{\n \treturn fract(sin(dot(uvi, vec2(12., 78.))) * 45678.765432);   \n}\n\nfloat ValueNoise(vec2 uv)\n{\n \tvec2 uvi = floor(uv);\n    vec2 uvf = fract(uv);   \n    \n    vec2 uva = smoothstep(0.0, 1.0, uvf);  \n    \n    return mix(mix(Random( uvi ),\n                   Random( uvi + vec2(1.0, 0.0)), \n                   uva.x),\n               mix(Random( uvi + vec2(0.0, 1.0)),\n                   Random( uvi + vec2(1.0, 1.0)), \n                   uva.x),\n              uva.y);\n                   \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    uv += 0.5;\n\n    uv *= 20.0;\n    float amp = 5.;\n    uv.x += amp*sin(iTime);\n    uv.y += amp*cos(iTime);\n    float value = ValueNoise(uv);\n    if(uv.x < 20.)\n    {\n        value = smoothstep(0.49,0.51,value);\n    }\n    else if(uv.x < 35.)\n    {\n        value = 1.0 - smoothstep(0.45,0.55,value)+smoothstep(0.49,0.51,value);\n\n    }\n    \n    \n    vec3 col = vec3(value);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}