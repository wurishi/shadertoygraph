{"ver":"0.1","info":{"id":"sdV3Wz","date":"1631458426","viewed":42,"name":"_Smiley_","username":"Dave_Green","description":"Art of Code Lesson 5","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["smiley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0., 1.)  // Saturate.\n\nfloat remap_1(float a, float b, float t)\n{\n    return sat((t-a)/(b-a));\n}\n    \nfloat remap(float a, float b, float c, float d, float t)\n{\n    return sat((t-a)/(b-a)) * (d-c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect)\n{\n    return (uv-rect.xy)/(rect.zw-rect.xy);\n}\n\nvec4 eye(vec2 uv)\n{\n    uv -= .5;\n    float dist = length(uv);\n\n    vec4 irisCol = vec4(.3, .5, 1., 1.);\n    vec4 col = mix(vec4(1.), irisCol, S(.1, .7, dist)*.5);\n    col.rgb *= 1. - S(.45, .5, dist)*.5*sat(-uv.y - uv.x);\n    col.rgb = mix(col.rgb, vec3(0.), S(.3, .28, dist));\t\t\t// iris outline.\n    irisCol.rgb *= 1. + S(.3, .05, dist);\n    col.rgb = mix(col.rgb, irisCol.rgb, S(.28, .25, dist));\n    col.rgb = mix(col.rgb, vec3(0.), S(.16, .14, dist));\n    col.a = S(.5, .48, dist);\n    \n    float highlight = S(.1, .09, length(uv-vec2(-.15, .15)));\n    highlight += S(.07, .05, length(uv+vec2(-.08, .08)));\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    return col;\n}\n\nvec4 mouth(vec2 uv)\n{\n    uv -= .5;\n    vec4 col = vec4(.5, .18, .05, 1.);\n    uv.y *= 1.5;\n    uv.y -= uv.x*uv.x*2.;\n    float dist = length(uv);\n    col.a = S(.5, .48, dist);\n\n    float teethDist = length(uv-vec2(0., .6));\n    vec3 toothCol = vec3(1.)*S(.6,.35, dist);\n    col.rgb = mix(col.rgb, toothCol, S(.4,.37, teethDist));\n    teethDist = length(uv+vec2(0., .5));\n    col.rgb = mix(col.rgb, vec3(1., .5, .5), S(.5, .2, teethDist));\n    return col;\n}\n\nvec4 head(vec2 uv)\n{\n    vec4 col = vec4(.9, .65, .1, 1.);\n    float dist = length(uv);\n    col.a = S(.5, .49, dist);\n    float edgeShade = remap_1(.35, .5, dist);\n    edgeShade *= edgeShade;\n    col.rgb *= 1. -edgeShade*.5;\n    col.rgb = mix(col.rgb, vec3(.6, .3, .1), S(.47, .48, dist));\n    float highlight = S(.41, .405, dist)*.75;\n    highlight *= remap(.41, -.1, .75, .0, uv.y);\n    col.rgb = mix(col.rgb, vec3(1.), highlight);\n    dist = length(uv-vec2(.25, -.2));\n    float cheek = S(.2, .01, dist)*.4;\n    cheek *= S(.17, .16, dist);\n    col.rgb = mix(col.rgb, vec3(1., .1, .1), cheek);\n    return col;\n}\n\nvec4 smiley(vec2 uv)\n{\n    vec4 col = vec4(0.);\n    uv.x = abs(uv.x);\n    vec4 head = head(uv);\n    vec4 eye = eye(within(uv, vec4(.03, -.1, .37, .25)));\n    vec4 mouth = mouth(within(uv, vec4(-.3, -.4, .3, -.1)));\n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Output to screen\n    fragColor = smiley(uv);\n}","name":"Image","description":"","type":"image"}]}