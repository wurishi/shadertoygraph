{"ver":"0.1","info":{"id":"3sfcR2","date":"1585103305","viewed":512,"name":"pag-Simple Chromatic Aberration","username":"h3r3x3","description":"Simple image filter.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["postprocessingeffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ChromaticAberration = 0.0 / 10.0 + 8.0;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec2 texel = 1.0 / iResolution.xy;\n    \n    vec2 coords = (uv - 0.5) * 2.0;\n    float coordDot = dot (coords, coords);\n    \n    vec2 precompute = ChromaticAberration * coordDot * coords;\n    vec2 uvR = uv - texel.xy * precompute;\n    vec2 uvB = uv + texel.xy * precompute;\n    \n    vec4 color;\n    color.r = texture(iChannel0, uvR).r;\n    color.g = texture(iChannel0, uv).g;\n    color.b = texture(iChannel0, uvB).b;\n    color.a = 1.;\n\tfragColor = color;\n}","name":"Image","description":"","type":"image"}]}