{"ver":"0.1","info":{"id":"XXsyWn","date":"1726050425","viewed":22,"name":"Rotate platter","username":"gimulnautti","description":"started with just some mapping calculations , got a bit out of hand :D","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","mapping"],"hasliked":0,"parentid":"clSyWy","parentname":"log twist tunnel mapping"},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tunnel(vec2 uv, float aspect, vec2 mod)\n{\n    // base vectors\n    vec2 up = vec2(0,1);\n    vec2 right = vec2(1,0);\n    vec2 mid = vec2(0.5 * aspect, 0.5);\n    vec2 toFrag = uv - mid;\n    \n    // angle + log distance from middle\n    float angle = acos(dot(toFrag, up) / (length(toFrag)));\n    float dist = length(toFrag);\n    dist /= 1. - 1.5 * toFrag.y;\n    dist /= 1. + 0.0 * toFrag.x;\n        \n    // have two sides to it\n    if (dot(toFrag, right) > 0.0)\n    {\n        angle = -angle;\n    }\n\n    // animate tunnel \n    dist += cos(iTime / 2.0) * cos(dist * 1.0 + angle * 5.0) / 5.5;\n\n    // resolve texture UV\n    vec2 texUv = vec2(angle / 3.1415192, 1.0-dist);\n    \n    // tiling\n    texUv.x *= 6.0;\n    texUv.y *= 4.0;\n           \n    //animate\n    texUv.x += iTime * 2.0;\n    //texUv.y += iTime / 0.5 * mod.x;\n    \n    // animate texture pickup\n    texUv.y += 1.75 * cos(dist * sin(iTime / 3.0)) * mod.y;\n    \n    return texture(iChannel0, texUv).r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // find aspect ratio\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= aspect;\n    \n    // animate the window\n    uv.x += sin(iTime) / 3.6;\n    uv.y += cos(iTime * 1.23) / 4.2;\n\n    // get slightly different tunnels\n    float t1 = tunnel(uv, aspect, vec2(1.0, 1.0));\n    float t2 = tunnel(uv, aspect, vec2(1.01, 1.1));\n    float t3 = tunnel(uv, aspect, vec2(1.02, 1.2));\n    \n    // compose image\n    vec3 col = vec3(smoothstep(t1, t2, 0.5), smoothstep(t1,t3, 0.5), smoothstep(t2,t3, 0.5));\n    \n   fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}