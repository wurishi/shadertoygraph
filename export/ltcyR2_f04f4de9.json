{"ver":"0.1","info":{"id":"ltcyR2","date":"1533176528","viewed":139,"name":"edge detect","username":"archibate","description":"edge detect using gradlen2()","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","edge"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define textur(channel, u) texture(channel, u).rgb\n\nfloat gradlen2(sampler2D channel, vec2 u)\n{\n    vec3 e = vec3(1,1,0);\n    e.xy /= iResolution.xy;\n    \n    vec3 x = textur(channel, u+e.xz) - textur(channel, u-e.xz);\n    vec3 y = textur(channel, u+e.zy) - textur(channel, u-e.zy);\n    \n    vec3 c = x*x + y*y;\n    return max(c.r,max(c.g,c.b));\n}\n\nfloat message(vec2 p) {  // the alert function to add to your shader\n    int x = int(p.x+1.)-1, y=int(p.y)-10,  i;\n    if (x<1||x>32||y<0||y>2) return -1.; \n    i = ( y==2? i=  757737252: y==1? i= 1869043565: y==0? 623593060: 0 )/ int(exp2(float(32-x)));\n \treturn i==2*(i/2) ? 1. : 0.;\n}\n\nvoid mainImage(out vec4 O, in vec2 U)\n{\n    vec2 u = U/iResolution.xy;\n    \n    O = texture(iChannel0, u);\n    \n    float g2 = gradlen2(iChannel0, u);\n    float s = smoothstep(.0,.16,g2);\n    \n    //O.rgb = mix(O.rgb, vec3(0.), s);\n    O.rgb = vec3(1.-s);\n    \n    float m_ = message(U/10.);\n    float m_s = smoothstep(0.,1.,iTime);\n    if (m_ == 0.)\n    \tO = mix(vec4(0,0,0,0),O,m_s);\n    else if (m_ >= 0.)\n    \tO = mix(vec4(1,0,0,0),O,m_s);\n}\n\n/*#define at(channel, u) texture(channel, u).r\n\nfloat neglaplace(sampler2D channel, vec2 u)\n{\n    vec3 e = vec3(1,1,0);\n    e.xy /= iResolution.xy;\n    \n    float c = 0.;\n    c += at(channel, u+e.xz);\n    c += at(channel, u-e.xz);\n    c += at(channel, u+e.yz);\n    c += at(channel, u-e.yz);\n    c /= 4.;\n    c -= at(channel, u);\n    return c;\n}\n\nvec2 grad(sampler2D channel, vec2 u)\n{\n    vec3 e = vec3(1,1,0);\n    e.xy /= iResolution.xy;\n    \n    return vec2(\n        at(channel, u+e.xz) - at(channel, u-e.xz),\n        at(channel, u+e.zy) - at(channel, u-e.zy));\n}*/","name":"Image","description":"","type":"image"}]}