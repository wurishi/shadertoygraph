{"ver":"0.1","info":{"id":"lXXBz8","date":"1727989183","viewed":46,"name":"is it moving?","username":"schbnc","description":"checkerboard wave illusion","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["illusionwavy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float TWO_PI = 2. * 3.141592;\nfloat N_TILE = 8.;\n\nfloat tile(float x)\n{\n    return x - floor(x);\n}\n\nfloat circle(vec2 center, float rad, vec2 uv) {\n    vec2 muv = uv - center;\n    float shape = sqrt(muv[0]*muv[0] + muv[1]*muv[1]);\n    return float(shape < rad);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv0 = fragCoord/iResolution.y;\n    vec2 uv = vec2(tile(uv0[0] * N_TILE), tile(uv0[1] * N_TILE));\n\n    \n    float x = float(uv[0] > 0.5);\n    float y = float(uv[1] > 0.5);\n    float checker = x * (1. - y) + y * (1. - x);\n    \n    float waves = sin(uv0[0] * TWO_PI + iTime/2. + TWO_PI * 2. * cos(uv0[1]+iTime/32.))+1.;\n\n    float layer1 = checker / 3. + 0.3;\n    float layer2 = waves/2. ;\n        \n    float mask = circle(vec2(0.5, 0.5), 0.07, uv) \n        + circle(vec2(0.,0.), 0.1, uv)\n        + circle(vec2(0.,1.), 0.1, uv)\n        + circle(vec2(1.,0.), 0.1, uv)\n        + circle(vec2(1.,1.), 0.1, uv);\n        \n    \n    float c = (1.-mask) * layer1 + mask * layer2;\n    vec3 col = vec3(c, c*0.8, c+0.1);\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}