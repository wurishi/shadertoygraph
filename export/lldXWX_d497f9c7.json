{"ver":"0.1","info":{"id":"lldXWX","date":"1481933269","viewed":374,"name":"Warp Pulse","username":"ptrgags","description":"First try distorting a texture with a wave. I was originally going to use a bell-shaped curve with a single pulse at a time, but nothing beats a nice sine wave","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","pulse","ripples","distortion","texture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Center the cooordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= 0.5;\n    //Fix aspect ratio\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //Polar coordinates\n    float r = length(uv);\n    float theta = atan(uv.y, uv.x);\n    \n    //Make a pulse down the radius\n    float pulse = sin(20.0 * r - 5.0 * iTime);\n    \n    //Convert Polar -> Rectangular\n    vec2 pulse_rect = vec2(pulse * cos(theta), pulse * sin(theta));\n    \n    //use the pulse to distort the texture.\n\tfragColor = texture(iChannel0, uv + 0.02 * pulse_rect);\n}","name":"Image","description":"","type":"image"}]}