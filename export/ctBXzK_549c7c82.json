{"ver":"0.1","info":{"id":"ctBXzK","date":"1676303525","viewed":229,"name":"2d Diamond","username":"melissaran","description":"its a diamond !!","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uniform vec2 mouse;\n\n    float tri(vec2 a, vec2 b, vec2 c, vec2 uv, vec2 center){\n        float TIME = iTime;\n\n        float len = length(center)*15.;\n        //len=abs(sin(len + sin(TIME)))/(len*0.05+1.);\n        uv.x += sin(TIME) * 0.2;\n        float f = 3.;\n        uv = fract(uv*f)/f;\n\n        vec2 abN = normalize(a-b);\n        abN = vec2(-abN.y, abN.x);\n\n        vec2 bcN = normalize(b-c);\n        bcN = vec2(-bcN.y, bcN.x);\n\n        vec2 caN = normalize(c-a);\n        caN = vec2(-caN.y, caN.x);\n\n        float ab = dot(uv-a, abN);\n        float bc = dot(uv-b, bcN);\n        float ca = dot(uv-c, caN);\n\n        return min(max\n        (max(max (ab,bc),ca),0.0) * 4.,len) *len;\n    }\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float TIME = iTime;\n\n    vec2 a = vec2(0.0,0.25);\n    vec2 b = vec2(0.09,0.3);\n    vec2 c = vec2(0.025,0.31);\n    \n    vec2 uv = fragCoord/iResolution.x*2.;\n\n    float fl = 0.21;\n\n    float x = uv.x;\n\n    uv.y = abs(uv.y + sin(TIME)*0.05-fl) + fl;\n    //uv.x = mod(uv.x+TIME*0.05, 0.9);\n\n    vec2 center = vec2(0.5);\n\n    //vec2 m = mouse/dim;\n      \n    vec2 aorigin = uv - center;\n\n    float ang = 6.24*acos(dot(normalize(aorigin), vec2(0.0,1.)));\n    float angle = ang-mod(ang, 1.25);\n\n    vec2 uv2 = uv - center;\n    uv2*=pow(length(uv2)+0.5,2.);\n    uv2*=3.;\n\n    float sina = sin(angle);\n    float cosa = cos(angle);\n\n    vec2 rot = vec2(uv2.x * cosa - uv2.y * sina, uv2.x * sina + uv2.y * cosa) + center;\n      \n    vec3 col;\n    float it = 0.04;\n    for(int i =0; i<3; i++){\n    rot.y+=0.02;\n\n    float v = tri(a, b, c, rot, aorigin+it);\n     col[i] = 1. / v;\n     it+=0.05;\n      }\n\n      vec3 color = vec3(0.4, 0.6, 0.9);\n      float mask = clamp(pow(1./length(aorigin),0.55) - 2., 0.0, 1.1);\n\n      fragColor = vec4(color * col * mask, 1.0);\n\n      float maskinv = 1./(mask*200. +1.);\n\n      fragColor.xyz+=color*0.02/(uv.y-fl+ 0.04)*maskinv;\n      float fade = 1.0 - pow(2.0 * abs((gl_FragCoord.x) / (iResolution.x) - 0.5), 2.0);\n      fragColor*=fade;\n      }\n\n\n","name":"Image","description":"","type":"image"}]}