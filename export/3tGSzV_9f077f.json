{"ver":"0.1","info":{"id":"3tGSzV","date":"1583104456","viewed":67,"name":"arewijk_pixelgrid","username":"Bl00dhound","description":"pretty much what it says on the tin.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","beginner","pixel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// settings\n#define grid_size 32  \t\t\t// grid size in pixels\n#define line_size 2        \t\t// line width in pixels\n#define grid_deform\ttrue\t\t// deform the grid with a sine function\n\n// math constants\n#define pi  3.14159265\n#define tau 6.28318530\nfloat pxcenter=0.5; \t\t\t// pixel center (0.5 offset to get the center in between grid points)\n\nvoid mainImage(out vec4 fragColor, in vec2 px) {\nfloat gsz=float(grid_size); \t\nfloat lsz=float(line_size);\n    \n    if (grid_deform) {\n    float amplitude=gsz/16.0;\n\tvec2 uv=px/16.0;\n\tvec2 sincos=vec2(-cos((uv.y)*tau),sin((uv.x)*tau));\n    px+=sincos*amplitude;\n    }\n\npx+=gsz/2.0;\t\t\t\t\t// offset starting position with half the tilesize    \npx.y=iResolution.y-px.y;\t\t// flip y to start from the top   \nvec2 modje=floor(mod(px,gsz))+pxcenter;\nvec3 col=vec3(min(modje.x,modje.y)<lsz);\n\nfragColor=vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}