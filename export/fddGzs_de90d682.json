{"ver":"0.1","info":{"id":"fddGzs","date":"1630502411","viewed":50,"name":"Aspect Ratio Test","username":"pdkl95","description":"Test of aspect ratio calculations","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["aspect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tfloat px = 1.0/iResolution.y;\n\tfloat aspect = iResolution.y/iResolution.x;\n\t\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 position = (uv * 2.0) - 1.0;\n\n\tif (aspect < 1.0) {\n\t\taspect = 1.0 / aspect;\n\t\tposition.x *= aspect;\n\t} else {\n\t\tposition.y *= aspect;\n\t}\n\tvec2 apos = abs(position);\n\n\tvec3 color = vec3(0.0);\n\n\tfloat border = 5.0 * px;\n\tvec2 bpos = abs(vec2(1.0) - border);\n\t\n\tif (max(apos.x, apos.y) > 1.0) {\n\t\tvec2 pos = position * 15.0;\n\t\tif (mod(pos.x - pos.y, 2.0) < 1.0) {\n\t\t\tcolor.r += 0.5;\n\t\t}\n\t\tif (mod(pos.x + pos.y, 2.0) < 1.0) {\n\t\t\tcolor.b += 0.5;\n\t\t}\n\t} else {\n\t\tif ((bpos.x < border) &&\n\t\t    (bpos.y < border)) {\n\t\t\tcolor = vec3(1.0);\n\t\t}\n\t\n\t\tif (length(position) < 0.1) {\n\t\t\tcolor = vec3(0.3);\n\t\t}\n\t}\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}