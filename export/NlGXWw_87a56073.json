{"ver":"0.1","info":{"id":"NlGXWw","date":"1640766306","viewed":254,"name":"Inky Kitty","username":"panna_pudi","description":";p","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["cat","kitty","kitkat","catto","annoyingandlazypieceoffur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define lofi(x, n) floor((x)*(n)) / (n)\n\nvec2 hash(vec2 p) {\n    p = vec2(dot(p, vec2(127.1, 311.7)), dot(p, vec2(269.5, 183.3)));\n    return -1.0 + 2.0 * fract(sin(p) * 43758.5453123);\n}\n\nfloat noise(in vec2 p) {\n    const float K1 = 0.366025404;  // (sqrt(3)-1)/2;\n    const float K2 = 0.211324865; // (3-sqrt(3))/6;\n\n    vec2 i = floor(p + (p.x + p.y) * K1);\n    vec2 a = p - i + (i.x + i.y) * K2;\n    vec2 o = (a.x > a.y) ? vec2(1.0, 0.0)\n                 : vec2(0.0, 1.0);  // vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y),\n                                    // sign(a.y-a.x));\n    vec2 b = a - o + K2;\n    vec2 c = a - 1.0 + 2.0 * K2;\n\n    vec3 h = max(0.5 - vec3(dot(a, a), dot(b, b), dot(c, c)), 0.0);\n    vec3 n = h * h * h * h *\n        vec3(dot(a, hash(i + 0.0)), dot(b, hash(i + o)), dot(c, hash(i + 1.0)));\n    return dot(n, vec3(70.0));\n}\nfloat noise01(vec2 p) {\n    return clamp((noise(p) + .5) * .5, 0., 1.);\n}\n\n#define sabs(x, k) sqrt((x) * (x) + k)\n\nfloat displacemet(vec2 p, vec2 dir) {\n    return noise01(p * dot(p, dir) * 158. + floor(iTime * 2.)) * 0.012;\n}\n\nfloat line(vec2 p, vec2 a, vec2 b, float tr) {\n    float k = dot(p - a, b - a) / dot(b - a, b - a);\n    float hit = clamp(k, 0., 1.);\n    float d =  distance(p, mix(a, b, hit));\n    vec2 dir = b - a;\n    d += displacemet(p, dir);\n    return step(tr, 1. - d);\n}\n\nfloat sdUnevenCapsule(vec2 p, float r1, float r2, float h) {\n    p.x = abs(p.x);\n    float b = (r1 - r2) / h;\n    float a = sqrt(1.0 - b * b);\n    float k = dot(p, vec2(-b, a));\n    if (k < 0.0) return length(p) - r1;\n    if (k > a * h) return length(p - vec2(0.0, h)) - r2;\n    return dot(p, vec2(a, b)) - r1;\n}\n\nfloat tongue(vec2 p, float r1, float r2, float h, float tr) {\n    float d = sdUnevenCapsule(p, r1, r2, h);\n    d += displacemet(p, vec2(1., 0.));\n    return step(tr, 1. - d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord/iResolution.xy * 2. - 1.)\n            * vec2(iResolution.x / iResolution.y, 1.);\n    uv = lofi(uv, 90.);\n\n    uv *= 1.15;\n    uv.y += 0.3;\n\n    vec3 col = vec3(0.);\n\n    // eyes\n    col += line(uv, vec2(0.33, 0.21), vec2(0.63, 0.30), 0.94);\n    col += line(uv, vec2(-0.63, 0.29), vec2(-0.42, 0.23), 0.93);\n\n    // nosie\n    col += line(vec2(sabs(uv.x, 0.001), uv.y), vec2(-0.05, 0.0), vec2(0.05, 0.01), 0.982);\n\n    // ears\n    col += line(uv, vec2(-1.0, 0.9), vec2(-1.05, 1.3), 0.98);\n    col += line(uv, vec2(-0.60, 1.05), vec2(-1.05, 1.3), 0.98);\n\n    col += line(uv, vec2(1.0, 0.9), vec2(1.05, 1.3), 0.98);\n    col += line(uv, vec2(0.60, 1.05), vec2(1.05, 1.3), 0.98);\n\n    col += line(uv, vec2(-0.61, 0.96), vec2(-0.83, 1.09), 0.992);\n    col += line(uv, vec2(-0.66, 0.95), vec2(-0.83, 1.02), 0.992);\n    col += line(uv, vec2(-0.66, 0.95), vec2(-0.83, 1.03), 0.992);\n\n    col += line(uv, vec2(0.61, 0.96), vec2(0.83, 1.09), 0.992);\n    col += line(uv, vec2(0.74, 0.95), vec2(0.83, 1.02), 0.992);\n    col += line(uv, vec2(0.75, 0.95), vec2(0.83, 1.03), 0.992);\n\n    // whiskers\n    col += line(uv, vec2(-1.64, 0.21), vec2(-1.20, 0.1), 0.99);\n    col += line(uv, vec2(-1.61, 0.12), vec2(-1.20, -0.049), 0.99);\n    col += line(uv, vec2(-1.48, -0.12), vec2(-1.20, -0.113), 0.99);\n\n    col += line(uv, vec2(1.45, 0.21), vec2(1.18, 0.1), 0.99);\n    col += line(uv, vec2(1.35, -0.01), vec2(1.20, -0.049), 0.99);\n    col += line(uv, vec2(1.45, -0.12), vec2(1.20, -0.113), 0.99);\n\n    // mouth\n    vec2 el = vec2(0., sabs(uv.x - 0.3, 0.06));\n    vec2 mp = uv - el - vec2(0.3, -0.3);\n    col += line(mp, vec2(-0.30, -0.4), vec2(0.16, -0.4), 0.98);\n\n    col += line(uv - vec2(-0.3, sabs(uv.x + 0.3, 0.38) - 0.6), vec2(-0.15, -0.4),\n                vec2(0.29, -0.4), 0.98);\n\n    // tongue\n    vec2 tp = uv * vec2(1.1, -1.) - vec2(-0.01, 0.42);\n    col += tongue(tp, 0.1, 0.15, 0.2, 0.999);\n    col -= line(uv - vec2(-0.01, 0.0), vec2(0., -0.7), vec2(0., -0.5), 0.99);\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}