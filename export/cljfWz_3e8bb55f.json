{"ver":"0.1","info":{"id":"cljfWz","date":"1693940132","viewed":39,"name":"HarmonicVoronoi","username":"natet","description":"voronoi graph of some points that oscillate at 4 different freuencies, and drop in and out of phase ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","harmonic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 points[4] = vec2[4](vec2(.5,.05), vec2(.5,.33), vec2(.5,.66), vec2(.5,.95));\n\nfloat scalarSin(float time){\n    return (sin(time)+1.0)*0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y;\n\n    float minDist = 1.0;\n    for(int i = 0; i < points.length(); i++){\n        points[i].x = scalarSin(iTime * (1.0/float(i+1)));\n        float dist = distance(points[i],uv);\n        minDist = min(dist,minDist);\n    }\n\n\n    minDist = pow(1.0-minDist,3.0);\n        \n    // Output to screen\n    fragColor = vec4(minDist,minDist,minDist,1.0);\n}","name":"Image","description":"","type":"image"}]}