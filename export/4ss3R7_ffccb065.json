{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"\n//uniform float zoom, viewX, viewY, colorPick;\nfloat zoom;\nfloat viewX;\nfloat viewY = 0.9562865;\nfloat colorPick = 0.0;\n\nvec2 fragCoord;\nvec4 fragColor;\n\nvoid drawSquare(vec2 square, float width, float girth);\nvoid drawCircle(vec2 circle, float width, float girth);\nvoid drawTriangle(vec2 triangle, float hypotenuse, float girth);\nvec2 p = vec2(0.0, 0.0);\nvoid mainImage( out vec4 oFragColor, in vec2 iFragCoord ) {\n    zoom = 1.0/iTime;\n    viewX =  -0.1010964/(iResolution.x/iResolution.y);\n    fragCoord = iFragCoord;\n    p.x = 2.0 * (fragCoord.x) * (1.0/iResolution.x)-1.0; p.y = 2.0 * (fragCoord.y) * (1.0/iResolution.y)-1.0;\n    p.x = (pow(zoom, 5.0)) * p.x + viewX; p.y = (pow(zoom, 5.0)) * p.y + viewY;\np.x = (iResolution.x/iResolution.y) * p.x;\n    vec2 z = vec2(0.0, 0.0); vec2 oldz = vec2(0.0, 0.0);\n    int cnt = 0;\n    for (int i = 0; i<100; i++) {\n    if (z.x * z.x + z.y*z.y < 4.0) {\n        cnt++; oldz = z;\n        z.x = oldz.x * oldz.x - oldz.y * oldz.y + p.x; z.y = oldz.r * oldz.y + oldz.y * oldz.r + p.y;\n    } else { break;}}\n    if(colorPick == 0.0) {\n        if(cnt == 100) { fragColor = vec4(0.0625, 0.25, 0.25, 1.0); }\n        else if (mod(float(cnt), 30.0) < 15.0)\n            { fragColor = vec4(0.0, (mod(float(cnt),30.0))/25.0, 0.5-(mod(float(cnt),30.0))/60.0, 1.0); }\n        else { fragColor = vec4(0.0, 1.2-(mod(float(cnt),30.0))/25.0, (mod(float(cnt),30.0))/60.0, 1.0); }\n    } else { \n        if(cnt == 100) { fragColor = vec4(0.25, 0.0625, 0.25, 1.0); }\n        else if (mod(float(cnt), 30.0) < 15.0)\n            { fragColor = vec4((mod(float(cnt),30.0))/25.0, 0.5-(mod(float(cnt),30.0))/60.0, 0.0, 1.0); }\n        else { fragColor = vec4(1.2-(mod(float(cnt),30.0))/25.0, (mod(float(cnt),30.0))/60.0, 0.0, 1.0); }\n    }\n    drawSquare(vec2(-1.786511, 0.0), 0.1, 0.01);\n    drawCircle(vec2(-0.1010964, 0.9562865), 0.1, 0.01);\n    drawTriangle(vec2(0.2425, 0.5085), 0.1, 0.01);\n    oFragColor = fragColor;\n}\nvoid drawSquare(vec2 square, float width, float girth) {\n    float aw = width*pow(zoom, 5.0); float ag = girth*pow(zoom, 5.0);\n    if (p.x >= (square.x-aw) && p.x <= (square.x+aw)\n        && p.y <= (square.y+aw) && p.y >= (square.y-aw)\n        && (p.x <= square.x-(aw-ag) || p.x >= square.x+(aw-ag)\n            || p.y >= square.y+(aw-ag) || p.y <= square.y-(aw-ag)))\n        { fragColor = vec4(1.0, 0.0, 0.0, 1.0); }\n}\nvoid drawCircle(vec2 circle, float radius, float girth) {\n    float ar = radius*pow(zoom, 5.0); float ag = girth*pow(zoom, 5.0);\n    float dist = sqrt(pow(p.x-circle.x, 2.0) + pow(p.y-circle.y, 2.0));\n    if (dist <= ar && dist >= (ar-ag)) {fragColor = vec4(1.0, 0.0, 0.0, 1.0); }\n}\nvoid drawTriangle(vec2 triangle, float hypotenuse, float girth) {\n    float ah = hypotenuse*pow(zoom, 5.0); float ag = girth*pow(zoom, 5.0);\n    float op = ah*sin(radians(60.0)); float adj = ah*cos(radians(30.0)) ;\n    float height = (sqrt(3.0)/2.0)*sqrt(pow((op+ah),2.0)+pow(adj,2.0));\n    float bl = triangle.y-op-(height/adj)*(triangle.x-adj);\n    float br = triangle.y-op+(height/adj)*(triangle.x+adj);\n    if ((p.x >= triangle.x-adj && p.x <= triangle.x+adj) &&\n        ((p.y <= triangle.y-op && p.y >= triangle.y-(op+ag)) ||\n        (p.y <= p.x*(height/adj)+bl && p.y >= (p.x-ag)*(height/adj)+bl && p.x <= triangle.x) ||\n        (p.y <= p.x*(-height/adj)+br && p.y >= (p.x+ag)*(-height/adj)+br && p.x >= triangle.x)))\n        {fragColor = vec4(1.0, 0.0, 0.0, 1.0); }\n    \n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4ss3R7","date":"1366214945","viewed":182,"name":"HenBrotFinal","username":"hwfwalton","description":"Final version of mandelbrot explorer.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""}}