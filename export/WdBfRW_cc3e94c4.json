{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 ms = iMouse.xy/iResolution.xy-0.5;\n\n    vec2 sqms = vec2(ms.x/(iResolution.y/iResolution.x),ms.y);\n    \n    vec2 uv = (fragCoord/iResolution.xy)-0.5;\n\n    vec2 sq = vec2(uv.x/(iResolution.y/iResolution.x),uv.y);\n        \n    float dista = sdBox(sq,vec2(0.3,0.3));\n    \n    float distb = distance(vec2(cos(iTime),sin(iTime))/2.2,sq)-0.2;\n    \n    float dist = max(dista,-distb);\n    \n    // Time varying pixel color\n    vec3 col = vec3(sin(dist*64.0+iTime)/8.0+0.125);\n    if (dista<=0.0){\n        col=vec3(col.r,sin(dista*64.0+iTime),col.b);\n    }\n  //  if (distb<=0.0){\n        col=mix(vec3(col.r,sin(distb*64.0+iTime),col.b),col,distb+0.4);\n    //}\n    if (dist<=0.0){\n        col=vec3(sin(dist*64.0+iTime),col.g,col.b);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"WdBfRW","date":"1733798206","viewed":25,"name":"hypnothing","username":"ReeceGames","description":"huh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hypnotic"],"hasliked":0,"parentid":"","parentname":""}}