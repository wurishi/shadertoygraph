{"ver":"0.1","info":{"id":"NdVGDG","date":"1632169156","viewed":75,"name":"Screentear","username":"antiElephant","description":"New to shaders. All my more complicated ideas didn't quite work, but this looks kind of nice.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["2d","color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RATE 1.3\n#define WIDTH .13\n#define LENGTH 3.5\n#define SPEED 16.\n#define STROKES0 1\n#define STROKES1 7\n\nvec3 hash3( uint n ) \n{\n    //https://www.shadertoy.com/view/llGSzw\n\tn = (n << 13U) ^ n;\n    n = n * (n * n * 15731U + 789221U) + 1376312589U;\n    uvec3 k = n * uvec3(n,n*16807U,n*48271U);\n    return vec3( k & uvec3(0x7fffffffU))/float(0x7fffffff);\n}\n\nfloat box(float x, float a, float b, float aa)\n{\n    return smoothstep(-aa, aa, x-a)*smoothstep(-aa, aa, b-x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float px = 1./min(iResolution.x, iResolution.y);\n    vec2 uv = 2.*px*(fragCoord - .5*iResolution.xy);\n    \n    float aax = 2.*px;\n    float aat = aax / SPEED;\n    float time = iTime+20.4;\n    int id0 = int(time / RATE);\n    \n    float eraser = 1.;\n    \n    vec4 color = vec4(0.);\n    for (int id = id0 + STROKES0; id >= id0 - STROKES1; --id) {\n        const float pi = 3.1415926535897;\n        vec3 spos = hash3(2u*uint(id));\n        vec3 scol = hash3(2u*uint(id)+1u);\n        scol = scol*vec3(1., .7, .6);\n\n        vec2 suv  = vec2(cos(2.*pi*spos.x), sin(2.*pi*spos.x))*.8*spos.y ;\n\n        float an  = floor(spos.z/.25)*.25*pi + float(id)*.2;\n        vec2 sdir = vec2(cos(an), sin(an));\n        vec2 srot = vec2(-1., 1.)*sdir.yx;\n        \n        float dx = dot(uv - suv, sdir);\n        float dy = dot(uv - suv, srot);\n        \n        vec4 isect = RATE*float(id) - dx/SPEED*vec4(1.,1.,-1.,-1.)\n                    + LENGTH/SPEED*vec4(0.,1.,0.,1.);\n        \n        float alpha =\n                 box(time, isect.x, isect.y, aat)*box(dy, WIDTH, 1e10, aax)\n                +box(time, isect.z, isect.w, aat)*box(dy, -1e10, -WIDTH, aax)\n                +box(time, isect.x, 1e10, aat)  *box(dy, 0., WIDTH, aax)\n                +box(time, isect.z, 1e10, aat)  *box(dy, -WIDTH, 0., aax);\n        \n        \n        if (id == id0 - STROKES1) alpha *= eraser;\n        \n        alpha = clamp(alpha, 0., 1.-color.a);\n        color.rgb = mix(color.rgb, scol.rgb, alpha/(alpha + color.a + 1e-10));\n        color.a = clamp(alpha + color.a, 0., 1.);\n\n        \n        vec2 t = dy > 0. ? isect.xy : isect.zw;\n        \n        bool passed = time > .5*(t.x+t.y);\n        \n        uv -= passed ? WIDTH*sign(dy)*srot : vec2(0.);\n        \n        if (id >= id0)\n            eraser *= passed ? 0. : 1.;\n    }\n    \n    vec3 bg = vec3(1., 1., .8);\n        \n    fragColor = vec4(mix(bg, color.rgb, color.a), 1.0);\n}","name":"Image","description":"","type":"image"}]}