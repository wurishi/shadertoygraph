{"ver":"0.1","info":{"id":"4s3GRl","date":"1451503498","viewed":703,"name":"2D Soft Shadows","username":"Xor","description":"Simple 2D distance field shadows","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","color","shadows","xor","lights","soft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//Distance field\nfloat model(vec2 p)\n{\n    vec2 n = fract(p/256.0)-0.5;\n    return min((length(max(abs(n)-0.1,0.0))-0.05)*128.0,length(fract(n)-0.5)*128.0-24.0);\n}\n//Shadows\nfloat shadow(vec2 d,vec2 p)\n{\n    vec2 R = normalize(d);\n    float D = length(d);\n    float M = 0.0;\n    float S = 1.0;\n    float MAX = length(d);\n    for(int I = 0;I < 80;I++)\n    {      \n        M = model(R*D-p);\n        S = min(S,M/sqrt(D));\n        D = max(D-M,0.1);\n            \t\n        \n        if ((M<0.01) || (D<=0.1)) break;\n    }\n \treturn S*max(1.0-MAX/256.0,0.0);\n}\n//Final Color\nvec3 color(vec2 fragCoord)\n{\n    vec2 pos = fragCoord.xy-iResolution.xy*vec2(cos(iTime*0.2),sin(iTime*0.2))*0.5;\n    vec2 uv = fragCoord.xy-iResolution.xy*0.5;\n    \n    return max(-model(pos)*.1,0.0)+\n        vec3(shadow(uv,pos),shadow(uv+vec2(128.0,64.0),pos),shadow(uv-vec2(128.0,64.0),pos));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    vec2 uv = fragCoord.xy/iResolution.xy-vec2(cos(iTime*0.2),sin(iTime*0.2))*0.5;\n\tfragColor = vec4(texture(iChannel0,uv).rgb*color(fragCoord),1.0);\n}","name":"Image","description":"","type":"image"}]}