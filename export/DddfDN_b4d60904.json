{"ver":"0.1","info":{"id":"DddfDN","date":"1697190803","viewed":36,"name":"7等分椭圆","username":"to0th","description":"计算机动画作业：七等分椭圆","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float get_y(float x, float a, float b, bool is_up){\n    if(is_up)\n        return sqrt((1.0-pow(x,2.0)/pow(a,2.0))*pow(b,2.0));\n    else\n        return -sqrt((1.0-pow(x,2.0)/pow(a,2.0))*pow(b,2.0));\n}\nfloat get_distance(vec2 a, vec2 b){\n    return sqrt(pow(a.x-b.x, 2.0) + pow(a.y-b.y, 2.0));\n}\nvec2[7] SevenPoints(float a, float b)\n{\n    vec2 points[7];\n    //固定第一个点\n    points[0] = vec2(-a, 0);\n    //上一个确定的点\n    vec2 last_point = points[0];\n    int index = 0;\n    float PI = 3.1415926;\n    //float len = (2.0*PI*b + 4.0*(a-b)) / 7.0;\n    float len = PI * (a + b) / 7.0;\n    //float len = PI * sqrt(2.0*pow(a,2.0) + 2.0*pow(b,2.0)) / 7.0;\n    float sum = 0.0;\n    for(float x = -a; x < a; x = x + 0.001){\n        float y = get_y(x, a, b, true);\n        sum += get_distance(last_point, vec2(x, y));\n        if(sum > len){\n            points[++index] = vec2(x, y);\n            sum = 0.0;\n        }\n        last_point = vec2(x, y);\n    }\n    for(float x = a; x > -a; x = x - 0.001){\n        float y = get_y(x, a, b, false);\n        sum += get_distance(last_point, vec2(x, y));\n        if(sum > len){\n            points[++index] = vec2(x, y);\n            sum = 0.0;\n        }\n        last_point = vec2(x, y);\n    }\n    return points;\n}\nvec2 seven_points[7];\nbool is_first = true;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\t\t\n    // 左下角(-0.5,-0.5)，右上角(0.5,0.5)\n    uv -= 0.5;     \n    // 让像素变成正方形, 区间也变了，明显的x轴的上区间上限更大了\n    uv.x *= iResolution.x / iResolution.y;\n    //长轴和短轴\n    float a = 0.4;\n    float b = 0.3;\n    vec3 c;\n    if (uv.x*uv.x/(a*a) + uv.y*uv.y/(b*b) > 1.0) \n    \tc = vec3(1); \n    else \n    \tc = vec3(0, 1, 0);\n    //只执行1次即可\n    if(is_first){\n        seven_points = SevenPoints(a, b);\n        is_first = false;\n    }\n    bool p = false;\n    for(int i=0; i<7; i++){\n        vec2 point = seven_points[i];\n        if(abs(uv.x-point.x)<0.005 && abs(uv.y-point.y)<0.005){\n            p = true;\n            break;\n        }\n    }\n    if(p) fragColor = vec4(vec3(1,0,0), 1.0);\n    else fragColor = vec4(c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}