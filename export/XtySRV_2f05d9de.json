{"ver":"0.1","info":{"id":"XtySRV","date":"1485122540","viewed":110,"name":"Assignment 1 -- The Checkerboard","username":"IllusoryOrchestra","description":"My first assignment for Graphics/Game Programming I class.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","checkerboard","assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Megan Hoins\nClass: CSI-200-01\nAssignment: Assignment 1 - The Checkerboard\nDate Assigned: January 20, 2017\nDue Date: January 23, 2017 at 11:59 PM\n\nDescription:\nThis program will create a black-and-white chess style checkerboard pattern.\nThe number of rows and columns will be variable, or able to be changed by\nchanging the value of variables defined at the top of the shader.\n\nCertification of Authenticity: I certify that this is entirely my own work,\nexcept where I have given fully-documented references to the work of others.\nI understand the definition and consequences of plagiarism and acknowledge\nthat the assessor of this assignment may, for the purpose of assessing this\nassignment:\n- Reproduce this assignment and provide a copy to another member of academic\nstaff; and/or\n- Communicate a copy of this assignment to a plagiarism checking service\n(which may then retain a copy of this assignment on its database for the\npurpose of future plagiarism checking)\n\n*/\n\nfloat rows = 4.0,\n      columns = 7.0; // Create variables to hold the number of boxes in each row and column\n\nconst float evenCheck = 2.0; // Create a constant variable to hold the number that will be used\n\t\t\t\t\t\t\t // to check if the current uv position is even or not\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 black = vec4(0.0, 0.0, 0.0, 1.0),\n         white = vec4(1.0, 1.0, 1.0, 1.0); // Create two variables to hold the colors black and white\n    \n    // Create two variables to hold the current row and column of the uv\n    float currentRow = floor(uv.y * rows);\n    float currentCol = floor(uv.x * columns);\n    \n    // Depending on if the current position is even or not, change the color of the current \n    // square to black or white, making sure to alternate the colors by position\n    if(mod(currentRow, evenCheck) == 0.0)\n    {\n        if(mod(currentCol, evenCheck) == 0.0)\n        {\n            // Change the current color to black\n            fragColor = black;\n        }\n        else\n        {\n            // Change the current color to white\n            fragColor = white;\n        }\n    }\n    else if(mod(currentCol, evenCheck) == 0.0)\n    {\n        // Change the current color to white\n    \tfragColor = white;\n    }\n    else\n    {\n        // Change the current color to black\n    \tfragColor = black;\n    }\n}","name":"Image","description":"","type":"image"}]}