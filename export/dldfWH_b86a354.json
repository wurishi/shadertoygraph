{"ver":"0.1","info":{"id":"dldfWH","date":"1701203180","viewed":39,"name":"rainbow wavessss","username":"irisdogg","description":"following https://www.youtube.com/watch?v=f4s1h2YETNY but with a few changes for fun","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n// cosine based palette, 4 vec3 params\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(1.0, 1.0, 0.0);\n    vec3 c = vec3(0.0, 0.1, 0.2);\n\n    return a + a*cos( 6.28318*(b*t+c) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for( float i = 0.0; i < 2.0; i++){\n    \n        uv = fract(uv * 1.5) - .5;\n\n        float a = exp(-length(uv0));\n        vec2 p = vec2(length(uv), length(uv));\n        \n        float d = sdSegment( p/p, -uv0, uv0 );\n        float t = length(uv0) + i * 0.8 + iTime * 0.7;\n        vec3 col = palette(t);\n        \n        d -= t;\n\n        d = sin(d * 4.0 + iTime*2.0)/8.0;\n        d = abs(d);\n        \n        d = pow(0.01 / d, 1.5);\n        \n        finalColor += col * d;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}