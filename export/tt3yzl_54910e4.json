{"ver":"0.1","info":{"id":"tt3yzl","date":"1609697134","viewed":142,"name":"Hanavision","username":"EDragon","description":"I am the recreation man","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["notitg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MtfXz4","filepath":"https://soundcloud.com/xxytrezaxx/t-pazolite-hanavision","previewfilepath":"https://soundcloud.com/xxytrezaxx/t-pazolite-hanavision","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// I once again come to you with a recreation\n// This time I got myself a small neat animation for the song Hanavision\n\n// Of couse the idea itself wasn't mine\n// This was heavily inspired by the following video\n\n// https://www.youtube.com/watch?v=TPIeurHyEHM\n\n// (Might come back to this later to make it nicer idk)\n\n\n#define s smoothstep\n#define pi 3.1415\n#define res iResolution.xy\n#define t iTime\n//change iTime here to iChannelTime if the audio magically plays\n//AUDIO WORKS AGAIN LESGO\n#define go iChannelTime[0]*(60./240.)*16. //BPM of the song + wonk math?\n\n// Outdated version of my ease functions but eh\n// Don't want to replace them since I already added them\n\n// Weird issue for e on mobile that doesn't break using this\n\nfloat pow2(float a, float b){\n\n    float result = 1.;\n\n    for (float i=1.;i<=b;i++){\n\n        result *= a;\n\n    }\n\n    return result;\n\n}\n\nfloat s2(float uv, float a){\n    return s(-a, -a+.02, -uv);\n}\n\n\nfloat inquint(float start, float end, float f){\n\treturn s(start, end, pow2(f,5.));\n}\n\nfloat outquint(float start, float end, float f){\n\treturn s(start, end, pow2(f-1.,5.)+1.);\n}\n\n\nmat2 rot(float a){\n\tfloat s=sin(a),c=cos(a);\n\treturn mat2(c,-s,s,c);\n}\nfloat box(vec2 st, float x, float y, float r){\n\n    st *= rot(r);\n    return s2(abs(st.x), x)*s2(abs(st.y), y);\n}\n\n\n\n// I apologize for whoever reads this function\nfloat rewind(vec2 uv, float speen){\n\n\tfloat size = .35;\n\tfloat ssize = .041;\n\tuv *= rot(speen);\n\tvec2 uv2 = uv;\n\n\tfloat d = s(size+.002, size, length(uv))\n\t\t\t\t\t\t-s(size-.08+.002, size-.08, length(uv));\n\tuv.x -= abs(uv.y);\n\td *= step(uv.x,.075);\n\td += s(ssize, ssize-.002, distance(uv2, vec2(.2525,.1805)));\n\td += s(ssize, ssize-.002, distance(uv2, vec2(.2525,-.1805)));\n\n\tfloat l = s(-.2525+ssize, -.2525-.002+ssize, -uv2.x);\n\tfloat r = s(.2525+ssize, .2525-.002+ssize, uv2.x);\n\tfloat b = s(.1805, .1805+.002, uv2.y);\n\tfloat t = s(-.4, -.4+.002, -uv2.y);\n\td += l*r*b*t;\n\td += s(ssize, ssize-.002, distance(uv2, vec2(.2525,.4)));\n\n\n\n\treturn d;\n\n}\n\n// Pain-peko\nfloat arrow(vec2 uv, vec2 p, float w, float h, float speen){\n\n\tuv -= p;\n\n\tuv *= rot(speen);\n\n\tfloat base = s(-w, -w+.002, uv.x)*s(-w, -w+.002, -uv.x)\n\t\t\t\t\t\t\t*s(-h, -h+.002, uv.y)*s(-h, -h+.002, -uv.y);\n\n\tfloat bd = s(w, w-.002, distance(uv, vec2(.0, -h)));\n\tfloat td = s(w, w-.002, distance(uv, vec2(.0, h)));\n\n\tvec2 uv2 = uv;\n\n\tuv2.y += abs(uv2.x);\n\tuv2.y -= h+.0065;\n\n\tfloat head = s(-w, -w+.002, uv2.y)*s(-w, -w+.002, -uv2.y)\n\t\t\t\t\t\t\t*s(-h+.015, -h+.015+.002, uv2.x)*s(-h+.015, -h+.015+.002, -uv2.x)\n\t\t\t\t\t\t\t*s(-h-.015, -h-.015+.002, -uv.y);\n\n\n\tbase += bd+td+head;\n\n\treturn base;\n}\n\n\nfloat strips(vec2 st, vec2 p, float w, float grain, float speen){\n\tst *= rot(speen);\n\tst -= p;\n    st.x += st.y;\n    st.x = fract((st.x-.25)*grain)+.25;\n    \n    float b = box(vec2(st.x-.5, st.y), .25, 100., 0.);\n\n\tfloat strips = b;\n\tstrips *= s2(abs(st.y), w); //caps top and bottom\n\n\n\treturn strips;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-.5*res)/res.y;\n\tvec2 uv2 = uv;\n\tvec2 uv3 = uv;\n\n\tuv2.y = s(.35, .5,abs(uv2.y))*pow(2., -7.*mod(.5*go,1.));\n\tuv3.y = s(.35, .5,abs(uv3.y))*pow(2., -7.*mod(.5*go+.5,1.));\n\n\tvec3 col = vec3(.0);\n\tcol += rewind(uv, t);\n\tcol += strips(uv, vec2(t*.35, .2), .03*(pow(2.,-7.*mod(go,1.)))+.125, 10., .1*sin(t))*vec3(.75,.0,.4)*.8;\n\tcol += strips(uv, vec2(-t*.35, -.2), .03*(pow(2.,-7.*mod(go,1.)))+.125, 10., .1*cos(t))*vec3(.0,.75,.4)*.8;\n\n\tcol += uv2.y*vec3(.75, .0, .4);\n\tcol += uv3.y*vec3(.0, .75, .4);\n\tcol += arrow(uv, vec2(.15*mod(floor(-go*.5),2.)-.075,.075*(outquint(0., 1., mod(go*.5,1.))+outquint(1., 0., mod(go*.5,1.)-.5)-1.)), .0175, .11, .0);\n\tcol += arrow(uv, vec2(.15*mod(floor(go*.5),2.)-.075,-.075*(outquint(0., 1., mod(go*.5,1.))+outquint(1., 0., mod(go*.5,1.)-.5)-1.)), .0175, .11, pi);\n\n\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}