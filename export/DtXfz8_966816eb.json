{"ver":"0.1","info":{"id":"DtXfz8","date":"1692565088","viewed":50,"name":"Sweet electric flower","username":"funkymed","description":"a little neon shader","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["flower","neon","electric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    vec3 palette( in float t)\n    {\n        vec3 a = vec3(0.608, 0.408, 0.500);\n        vec3 b = vec3(1.,0.,1.);\n        vec3 c = vec3(0.000, 1.000, 0.508);\n        vec3 d = vec3(0.000, 0.333, 0.667);\n        return a + b*cos( 6.28318*(c*t+d) );\n    }\n\n    float sdHexagon( in vec2 p, in float r )\n    {\n        const vec3 k = vec3(-0.866025404,0.5,0.577350269);\n        p = abs(p);\n        p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n        p -= vec2(clamp(p.x, -k.z*r, k.z*r), r);\n        return length(p)*sign(p.y);\n    }\n\n    float sdHexagram( in vec2 p, in float r )\n    {\n        const vec4 k = vec4(-0.5,0.8660254038,0.5773502692,1.7320508076);\n        p = abs(p);\n        p -= 2.0*min(dot(k.xy,p),0.0)*k.xy;\n        p -= 2.0*min(dot(k.yx,p),0.0)*k.yx;\n        p -= vec2(clamp(p.x,r*k.z,r*k.w),r);\n        return length(p)*sign(p.y);\n    }\n\n    vec2 rotateUv(vec2 uv, vec2 pivot, float rotation) {\n        float cosa = cos(rotation);\n        float sina = sin(rotation);\n        uv -= pivot;\n        return vec2(\n            cosa * uv.x - sina * uv.y,\n            cosa * uv.y + sina * uv.x \n        ) + pivot;\n    }\n\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        \n        vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n        vec2 uv0 = uv;\n        vec3 finaleColor = vec3(0.0);\n\n        vec2 plot = vec2(sin(iTime/5.));\n        \n        // uv = rotateUv(uv, plot, iTime/4.);\n        uv=vec2(uv.x+10. , uv.y)+0.;\n        // uv0 = rotateUv(uv0, vec2(0.), iTime/2.);\n\n        float x = 1.3+(sin(iTime/8.) * .4);\n\n        for(float i = 0.0; i < 8.0; i+=2.){\n            \n            uv = fract(uv*x) - 0.5;\n\n            vec3 col = palette(length(uv0) + i * .2 + iTime * .2);\n\n            float c = sdHexagram(uv, 2.0) * exp(-length(uv0));\n            c = sin(c * 8. + (iTime+5.)) / 16.;\n            c = abs(c);\n            c = pow(0.03 / c, 0.2);\n\n            float d = sdHexagon(uv, 1.0) * exp(-length(uv0));\n            d = sin(d * 8. + iTime) / 8.;\n            d = abs(d);\n            d = pow(0.01 / d, 1.01);\n\n            finaleColor += col *  d * c; \n        }\n            \n        fragColor = vec4(finaleColor, 1.0);\n\n    }","name":"Image","description":"","type":"image"}]}