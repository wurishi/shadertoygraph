{"ver":"0.1","info":{"id":"MsBBWV","date":"1502322151","viewed":128,"name":"36.0284","username":"etrepum","description":"antialiased circles using a distance field drawing method","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.1415926535897932384626433832795\n\n// https://iquilezles.org/articles/distfunctions\nfloat opS( float d1, float d2 )\n{\n    return max(-d1, d2);\n}\nfloat opU( float d1, float d2 )\n{\n    return min(d1,d2);\n}\n\nfloat sdCircle( vec2 p, vec2 c, float r )\n{\n    return length(p - c) - r;\n}\n\nfloat sdCircleStroke( vec2 p, vec2 c, float r, float w )\n{\n    return opS(\n        sdCircle(p, c, r - w * 0.5),\n        sdCircle(p, c, r + w * 0.5)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 1.0 / min(iResolution.x, iResolution.y);\n    vec2 uv = scale * fragCoord;\n    vec2 c = scale * 0.5 * iResolution.xy;\n    vec4 bg = vec4(1.0);\n    vec4 fg = vec4(132.0/255.0, 80.0/255.0, 224.0/255.0, 1.0);\n    float t = iTime;\n    float blur = scale * 0.5 * M_PI;\n    float ud = 1.0;\n    float numCircles = 10.0;\n    for (float i = 0.0; i < numCircles; i += 1.0) {\n        ud = opU(\n            ud,\n            sdCircleStroke(\n                uv,\n                c + mix(0.0, 0.3, i / numCircles) * vec2(cos(t), sin(t)) * sin(t * 0.1234),\n                mix(0.45, 0.01, i / numCircles),\n                2.0 * scale\n            )\n        );\n    }\n\tfragColor = mix(\n        fg,\n        bg,\n        smoothstep(0.0, blur, ud)\n    );\n}","name":"Image","description":"","type":"image"}]}