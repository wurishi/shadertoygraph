{"ver":"0.1","info":{"id":"ddBXWw","date":"1670371515","viewed":165,"name":"BH Factory","username":"ChunderFPV","description":"I wanted to complete my first raymarch before the year was over, so here it is.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["3d","simple","grid","raymarch","sphere","bubbles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution.xy\n#define M iMouse\n#define HUE(a) (sin(vec3(0, 1.047, 2.094)+vec3(a*6.3))*.5+.5)\nmat2 rot(float a) { float c = cos(a), s = sin(a); return mat2(c, s, -s, c); }\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    float t = iTime/4.;\n    vec2 m = (M.xy/R*4.)-2.;\n    vec2 uv = (XY-.5*R)/R.y;\n    vec3 rd = normalize(vec3(uv, 1)); // 3d uv (ray direction)\n    vec3 ro = vec3(vec2(.5), t); // camera (ray origin)\n    if (M.z < 1.) m = vec2(cos(t/2.)*.5+.5); // rotate with time when not clicking\n    rd.yz *= rot(m.y*1.57); // pitch\n    rd.xz *= rot(m.x*1.57); // yaw\n    float d = 0.;\n    for (int i = 0; i < 100; i++)\n    {\n        vec3 p = ro+rd*d;\n        float s = smoothstep(.2, .25, length(p-round(p))); // sphere grid\n        if (s < 0.001) break;\n        d += s;\n    }\n    vec3 c = vec3(0);\n    c += d*.01; // objects\n    c *= HUE(length(rd.xy)); // background color\n    c += max(c, .5-HUE(d)); // rainbow fringe\n    RGBA = vec4(pow(c, vec3(.4545)), 1.);\n}","name":"Image","description":"","type":"image"}]}