{"ver":"0.1","info":{"id":"7lSXzz","date":"1628273358","viewed":1357,"name":"Noise mosaic study","username":"felipetovarhenao","description":"Noise-based pattern generation","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","patterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nAuthor: Felipe Tovar-Henao [www.felipe-tovar-henao.com]\n*/\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\nfloat random1D(in vec2 vUV, in int seed) {\n    return fract(abs(sin(dot(vUV, vec2(11.13, 57.05)) + float(seed)) * 48240.41));\n}\n\nfloat shaperA(in float x) {\n    float y = cos(x * TWO_PI);\n    return 0.5 - (0.5 * y*y*y);\n}\n\nfloat shaperB(in float x) {\n    float y = cos(x * PI * 3.0);\n    y = 0.5 - (0.5 * y*y*y*y);\n    return sqrt(y);\n}\n\nfloat noise(in vec2 vUV, in int seed) {\n    vec2 xy = vUV;\n    vec2 x = floor(xy);\n    vec2 m = fract(xy);\n\n    float bl = random1D(x, seed);\n    float br = random1D(x + vec2(1.0, 0.0), seed);\n    float tl = random1D(x + vec2(0.0, 1.0), seed);\n    float tr = random1D(x + vec2(1.0, 1.0), seed);\n\n    vec2 cf = vec2(shaperB(m.x), shaperB(m.y));\n\n    float tm = mix(tl, tr, cf.x);\n    float bm = mix(bl, br, cf.x);\n\n    return mix(bm, tm, cf.y);\n}\n\nvec2 rotate2D(in vec2 vUV, in float theta) {\n    vec2 r = vec2(cos(theta), sin(theta));\n    return vUV * mat2(r.x, -r.y, r.y, r.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 vUV = fragCoord.xy / iResolution.xy;\n    vUV -= 0.5;\n    vUV.x *= iResolution.x / iResolution.y;\n    vUV += vec2(iTime, -iTime) * 0.025;\n    vUV = rotate2D(vUV+0.5, PI*0.25);\n    float scl = 4.0;\n    vec3 color = vec3(0.0);\n\n    vUV = abs((0.5*mod(floor(vUV*scl), 2.0)) - fract(vUV));\n\n    float x = noise(vUV * scl, 10);\n    x = shaperA(x);\n    x = sin(1.5*x*TWO_PI+(iTime*0.25)) * 0.5 + 0.5;\n    x = shaperA(x);\n\n    float sharpness = 0.05;\n\n    float shade1 = smoothstep(0.25, 0.2501+sharpness, clamp(x, 0.0, 0.5));\n    float shade2 = smoothstep(0.75, 0.7501+sharpness, clamp(x, 0.5, 1.0));\n\n    vec3 A = vec3(0.4275, 0.5882, 0.6745);\n    vec3 B = vec3(0.8706, 0.8706, 0.8706);\n\n    x = (shade1+shade2) / 2.0;\n    \n    color = vec3(x);\n    color = fract(((A*color) + (B*color)) / 2.0);\n    \n    fragColor = vec4(color, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}