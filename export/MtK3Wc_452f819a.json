{"ver":"0.1","info":{"id":"MtK3Wc","date":"1477293705","viewed":2776,"name":"Escalated","username":"drift","description":"The shader from my recent 1024 byte intro \"Escalated\" http://www.pouet.net/prod.php?which=68360\nIt is a tribute to IQ's famous 4096 byte intro \"Elevated\".\nA few changes were made to get it to work in webGL so it is larger than the original glsl code.","likes":39,"published":3,"flags":0,"usePreview":0,"tags":["raymarching","terrain","elevated","escalated"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 m=mat2(.8,-.6,.6,.8);\n\n\nfloat g(vec2 p){\n    float e=abs(sin(p.x+sin(p.y)));p=m*p;\n\treturn .1*(e+sin(p.x+sin(p.y)));\n}\n\nfloat n(vec2 p){\n    p*=.1;\n    float s=5.,t=.9;\n\tfor(int i=0;i<9;i++)\n        t-=s*g(p),s*=.4,p=m*2.1*p+t;\n    return 3.-exp(t);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    float v=iTime*2.,u=sin(v*.1),x=.0,p=.0,o=.0;\n\tvec3 r=vec3(fragCoord/iResolution.xy-1.,0),z,y;\n\tfor(int d=0;d<288;d++)        \n        if (p*.0002<=x)\n\t\t\tz=vec3(0,-8.*g(vec2(0,v)*.1),v)+p*normalize(vec3(r.x-u,r.y*.3+.1,2)),x=z.y+n(z.xz),p+=x,o++;\n    x=n(z.xz);\n    y=normalize(vec3(n(z.xz-vec2(.01,0))-x,0,n(z.xz-vec2(0,.01))-x-n(z.zx*11.)*.002));\n    fragColor.xyz=dot(vec3(-.5),y)*n(z.zx*6.)*vec3(.1,.2,.3)+.1+o*.002+log(p)*.1;\n}","name":"Image","description":"","type":"image"}]}