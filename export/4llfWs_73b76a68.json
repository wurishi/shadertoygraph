{"ver":"0.1","info":{"id":"4llfWs","date":"1513991536","viewed":141,"name":"Splat","username":"chadiik","description":"splat","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["splat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 texel = 1. / iResolution.xy;\n    \n    vec4 tex = texture(iChannel0, uv);\n    \n\tfragColor = tex;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float Rand(vec2 co){\n    return texture(iChannel1, fract(co)).r;\n}\n\nfloat RandG(vec2 co){\n    float r = 0.;\n    for(int i = 0; i < 6; i++){\n        r += Rand(co);\n    }\n    return r / 6.;\n}\n\nvec2 Rand2G(vec2 co){\n  return vec2(RandG(co), RandG(co.yx)); \n}\n\n#define ratio vec2(iResolution.x / iResolution.y, 1.0)\nfloat fillCircle(vec2 uv, vec2 pos, float radius, float falloff)\n{\n    float d = distance(uv * ratio, pos * ratio);\n    float dr = d - radius;\n    return 1.0 - smoothstep(radius - falloff, radius + falloff, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color;\n        \n    float f = float(iFrame);\n    float blob = 0.;\n    int num = int(10. + 30. * Rand(vec2(iTime * .01)));\n    for(int i = 0; i < num; i++){\n        float fi = float(i) * .1415;\n        vec2 pos = .5 + .5 * (Rand2G(vec2(fi + iTime * .01, fi + iTime * .001)) - .5);\n        float r = .02 + .05 * Rand(vec2(fi + iTime * .01));\n        float c = fillCircle(uv, pos, r, .08);\n        blob += c;\n    }\n    blob = 1. - step(blob, .5);\n    color = vec4(blob * .9, blob * .0, blob * .0, blob);\n    \n    fragColor = color;\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 EdgeNormal(vec2 uv, vec2 texel, float th){\n\tvec2 n = vec2(0.);\n    for(float x = - 1.; x < 2.; x += 1.){\n    \tfor(float y = - 1.; y < 2.; y += 1.){\n            vec2 p = vec2(x, y);\n        \tfloat a = texture(iChannel1, uv + p * texel).a;\n            n += (p) * step(a, th);\n    \t}    \n    }\n    return normalize(n);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 texel = 1. / iResolution.xy;\n    \n    vec4 tex = texture(iChannel1, uv) * .9;\n    float loop = mod(float(iFrame), 60. * 1.5);\n    if(loop < 4.){\n        tex = texture(iChannel0, uv);\n    }\n    else{\n        if(loop < 8.){\n            tex = texture(iChannel1, uv);\n            vec2 en = EdgeNormal(uv, texel * 4., .5);\n            if(length(en) > .1){\n                tex = texture(iChannel1, uv - en * texel * 4.);\n            }\n        }\n        vec4 noise = texture(iChannel2, uv);\n        float y = noise.r * .5 + .2 * (1. - uv.y);\n        vec2 offset =  vec2(texel.x * (y - .85) * .05, -texel.y * y);\n        vec4 up = texture(iChannel1, uv - offset);\n        if(up.a > .99){\n            tex = (tex + up) * .525;\n            tex.r += .02 * texture(iChannel2, uv - 100. * offset).r;\n            tex.a = up.a * tex.r + .1;\n            tex.a += .9;\n        }\n    }\n    \n\tfragColor = tex;\n}","name":"Buf B","description":"","type":"buffer"}]}