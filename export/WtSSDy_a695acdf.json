{"ver":"0.1","info":{"id":"WtSSDy","date":"1570276252","viewed":260,"name":"Smoky Planet","username":"peterszerzo","description":"Experiments with fBm noise and a blurry planet","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","blur","smoke","planets"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Based on Morgan McGuire @morgan3d\n// https://www.shadertoy.com/view/4dS3Wd\nfloat noise (in vec2 _st) {\n  vec2 i = floor(_st);\n  vec2 f = fract(_st);\n\n  // Four corners in 2D of a tile\n  float a = random(i);\n  float b = random(i + vec2(1.0, 0.0));\n  float c = random(i + vec2(0.0, 1.0));\n  float d = random(i + vec2(1.0, 1.0));\n\n  vec2 u = f * f * (3.0 - 2.0 * f);\n\n  return mix(a, b, u.x) +\n    (c - a)* u.y * (1.0 - u.x) +\n    (d - b) * u.x * u.y;\n}\n\nmat2 rotation ( in float _angle ) {\n    return mat2(\n        cos(_angle), sin(_angle),\n    \t-sin(_angle), cos(_angle)\n    );\n}\n\n#define NUM_OCTAVES 4\n\n#define PI 3.14159\n\nfloat fbm ( in vec2 _st) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    // Rotate to reduce axial bias\n    mat2 rot = rotation(0.5);\n    for (int i = 0; i < NUM_OCTAVES; ++i) {\n      v += a * noise(_st);\n      _st = rot * _st * 2.0 + shift;\n      a *= 0.5;\n    }\n    return v;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{   \n    float time = iTime * 1.0;\n    \n    float minwh = min(iResolution.x, iResolution.y);\n    float aspect = iResolution.x / iResolution.y;\n    \n\tvec2 st = rotation(PI * 1.75) * vec2(\n        fragCoord.x / minwh - 0.5 * aspect,\n        fragCoord.y / minwh - 0.5\n    );\n    \n    vec3 yellow = vec3(191.0 / 255.0, 191.0 / 255.0, 0.0);\n    \n    vec4 planetColor;\n    \n    float mixRatio;\n    \n    float blur = 1.0 - smoothstep(0.2, 0.24, length(st));\n    \n    if (length(st) < 0.24) {\n        mixRatio = 0.85;\n        planetColor = mix(vec4(0.1, 0.1, 0.1, 1.0), vec4(\n            yellow * (\n                0.7 +\n                0.3 *\n                sin(\n                    2.2 +\n                    10.0 *\n                    distance(st, vec2(0.1, 0.1)) *\n                    distance(st, vec2(0.03, -0.16)) *\n                    distance(st, vec2(-0.03, 0.16)) *\n                    (1.0 + 0.1 * sin(time * 1.0)) * 30.0\n                )\n            ),\n            1.0\n        ), blur);\n    } else {\n        mixRatio = 0.0;\n        planetColor = vec4(0.0, 0.0, 0.0, 0.0);\n    }\n    \n    // Smoke\n    vec2 st1 = st * 6.0;\n    vec3 color = vec3(0.0);\n\n    vec2 q = vec2(0.0);\n    q.x = fbm(st1 + 0.00 * time);\n    q.y = fbm(st1 + vec2(1.0));\n\n    vec2 r = vec2(0.0);\n    \n    r.x = fbm( st1 + 1.0 * q + vec2(1.7, 9.2) + 0.6 * sin(0.2 * time) );\n    r.y = fbm( st1 + 1.0 * q + vec2(8.3, 2.8) + 0.6 * cos(0.2 * time) );\n\n    float f = fbm(0.5 * st1 + 2.0 * r);\n    \n    vec3 color1 = vec3(0.1, 0.6, 0.6);\n    vec3 color2 = vec3(0.6, 0.6, 0.5);\n    \n    color = mix(\n        color1,\n        color2,\n        clamp((f*f)*4.0,0.0,1.0)\n    );\n\n    color = mix(\n        color,\n        vec3(0.3, 0.3, 0.3),\n        clamp(length(q),0.0,1.0)\n    );\n\n    color = mix(\n        color,\n        vec3(0.2, 0.2, 0.2),\n        clamp(length(r.x), 0.0, 1.0)\n    );\n    \n    vec4 smokeColor = vec4(\n      (f * f * f + 0.6 * f * f + 0.5 * f) * color,\n      1.0\n    );\n\n    fragColor = mix(smokeColor, planetColor, mixRatio);\n}","name":"Image","description":"","type":"image"}]}