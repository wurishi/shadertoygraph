{"ver":"0.1","info":{"id":"432BRz","date":"1729128292","viewed":149,"name":"AI Dots","username":"darrinm","description":"Ported from [url]https://darrin.hatch.one/ai-dots[/url] (remixable).\nWritten by Claude Sonnet 3.5 with prompting by me.\nClick to drag","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["2d","dots","hatch","ai"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// title: AI Dots\n\n/* description:\nBy Darrin Massena (https://darrin.hatch.one/ai-dots)\nLicense: MIT\n*/\n\n/* Hatch Uniforms\n\n// Dot properties\nuniform float dotSize; // default: 0.1, min: 0.01, max: 0.5, step: 0.01, title: \"Dot Size\", scalingFactor: 2, decimalPlaces: 0\nuniform float dotSpacing; // default: 0.1, min: 0.001, max: 0.2, step: 0.001, title: \"Dot Spacing\", scalingFactor: 3, decimalPlaces: 0\nuniform vec4 dotColor; // default: #3320ff, type: Color, title: \"Dot Color\"\nuniform float dotSoftness; // default: 0.001, min: 0.0001, max: 0.02, step: 0.0001, title: \"Dot Softness\"\n\n// Background\nuniform vec4 backgroundColor; // default: #ffffff, type: Color, title: \"Background Color\"\n\n// Pinch/Bulge effect\nuniform float effectStrength; // default: 0.2, min: -1.0, max: 1.0, step: 0.01, title: \"Bulge Strength\"\nuniform float effectRadius; // default: 0.2, min: 0.01, max: 1, step: 0.01, title: \"Bulge Radius\"\n\n// Pulse wave effect\nuniform float waveFrequency; // default: 5.0, min: 0.1, max: 100.0, step: 0.1, title: \"Pulse Frequency\", decimalPlaces: 0\nuniform float waveAmplitude; // default: 0.2, min: -2.0, max: 5, step: 0.01, title: \"Pulse Amplitude\", scalingFactor: 2, decimalPlaces: 0\nuniform float radialSpeed; // default: 0.5, min: -20.0, max: 20.0, step: 0.01, title: \"Radial Speed\", scalingFactor: 1, decimalPlaces: 0\n\n*/\n\nfloat dotSize = .35;\nfloat dotSpacing = .026;\nvec4 dotColor = vec4(.2, .12, 1., 1.);\nfloat dotSoftness = 0.02;\nfloat effectStrength = -.45;\nfloat effectRadius = 1.;\nfloat waveFrequency = 5.0;\nfloat waveAmplitude = 1.69;\nfloat radialSpeed = 2.0;\nvec4 backgroundColor = vec4(1., 1., 1., 1.);\n\nfloat dot_grid(vec2 uv, float size, float spacing, float softness) {\n    vec2 grid = fract(uv / spacing + 0.5) - 0.5;\n    float dist = length(grid);\n    return 1.0 - smoothstep(size * 0.5 - softness, size * 0.5 + softness, dist);\n}\n\nvec2 pinch_bulge(vec2 uv, vec2 center, float strength, float radius) {\n    vec2 delta = uv - center;\n    float dist = length(delta);\n    float factor = 1.0 - smoothstep(0.0, radius, dist);\n    return uv + delta * factor * strength;\n}\n\nfloat radial_pulse(vec2 uv, vec2 center, float time, float freq, float speed) {\n    float dist = length(uv - center);\n    return sin(dist * freq - time * speed) * 0.5 + 0.5;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    \n    // Normalize mouse coordinates\n    vec2 mouseUV = (iMouse.xy - 0.5 * iResolution.xy) / min(iResolution.x, iResolution.y);\n    if (iMouse.x == 0. && iMouse.y == 0.) {\n        mouseUV = vec2(0.0, 0.0);\n    }\n\n    // Apply pinch/bulge effect\n    vec2 distortedUV = pinch_bulge(uv, mouseUV, effectStrength, effectRadius);\n    \n    // Calculate radial pulse from mouse position\n    float pulse = radial_pulse(uv, mouseUV, iTime, waveFrequency, radialSpeed);\n    \n    // Apply pulsing effect to dot size\n    float currentDotSize = dotSize * (1.0 + pulse * waveAmplitude);\n    \n    // Create dot grid\n    float dot = dot_grid(distortedUV, currentDotSize, dotSpacing, dotSoftness);\n    \n    // Add a color variation based on pulse and distance from mouse\n    float distFromMouse = length(uv - mouseUV);\n    vec3 colorVariation = vec3(\n        sin(distFromMouse * 3.14159 * 2.0 + pulse * 2.0) * 0.1 + 0.9,\n        sin(distFromMouse * 3.14159 * 2.0 + pulse * 2.2) * 0.1 + 0.9,\n        sin(distFromMouse * 3.14159 * 2.0 + pulse * 2.4) * 0.1 + 0.9\n    );\n    \n    // Mix dot color with background color and apply color variation\n    vec3 color = mix(backgroundColor.rgb, dotColor.rgb * colorVariation, dot);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}