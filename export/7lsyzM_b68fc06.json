{"ver":"0.1","info":{"id":"7lsyzM","date":"1647713923","viewed":246,"name":"Celtic weave","username":"m1el","description":"Originally created by beesandbombs, published here: https://twitter.com/beesandbombs/status/989288221514362881\nI decided to take a go at it to get rid of some visual artifacts.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","monochrome"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Original by beesandbombs: https://twitter.com/beesandbombs/status/989288221514362881\n// re-implemented by m1el\n\n// SDF for rounded rect by Inigo Quilez\n// https://iquilezles.org/articles/distfunctions2d\nfloat sdRoundedBox( in vec2 p, in vec2 b, in float r ) {\n    vec2 q = abs(p)-b+r;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r;\n}\n\n// Credit to FabriceNeyret2 for the suggestions\nfloat tRoundedBox(vec2 p, vec2 b) {\n    float db = b.x - b.y, v;\n    if (abs(p.x) - db > abs(p.y)) {\n        p.x -= sign(p.x) * db;\n        v = p.y / p.x * 0.5 + sign(p.x);\n    } else {\n        p.y += sign(p.y) * db;\n        v = -p.x / p.y * 0.5 + sign(p.y) + 1.0;\n    }\n    return (v + 1.5) / 4.0;\n}\n\nvec4 overlay(vec4 over, vec4 under) { \n    return mix(under.w * under, over, over.w) / over.w;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord - iResolution.xy*0.5;\n    uv *= mat2(0.5, -0.5, 0.5, 0.5);\n    vec4 col = vec4(0.0);\n    float cell = 40.0;\n    float line_width = 8.0;\n    float stripe_width = 5.0 / 8.0;\n    float offset = mod(ceil(uv.x / cell) + ceil(uv.y / cell), 2.0) - 0.5;\n    float mz = 100.0;\n    //col.z = offset;\n    float speed = 1.0 / 10.0;\n    for (float i = 0.0; i < 5.0; i += 1.0) {\n        float w = (i + 0.5) * cell;\n        vec2 wh = vec2(w, cell * 5.0 - w);\n        float dist = abs(sdRoundedBox(uv, wh, 8.0));\n        float freq = (i + 1.0) * 2.0;\n        float tangent = 1.0 - fract(tRoundedBox(uv, wh) + 0.375 + iTime * freq * speed);\n        float width = (tangent - 0.15) * line_width;\n        float alpha = smoothstep(0.0, 1.0, width - dist);\n        float stripe = smoothstep(1.0, 0.0, width * stripe_width - dist);\n        if (alpha <= 0.0) { continue; }\n        float horizontal = sign(abs(uv.y) - abs(wh.y - cell * 0.5));\n        float z = offset * horizontal;\n        vec4 cc = vec4(vec3(stripe), alpha);\n        if (z < mz) {\n            col = overlay(cc, col);\n            mz = z;\n        } else {\n            col = overlay(col, cc);\n        }\n    }\n    col = overlay(col, vec4(1.0));\n\n    // Output to screen\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}