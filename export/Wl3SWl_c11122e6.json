{"ver":"0.1","info":{"id":"Wl3SWl","date":"1581903349","viewed":117,"name":"Mario-Sound-Imitacion","username":"jorge2017a1","description":"Mario-Sound-Imitacion","likes":3,"published":1,"flags":8,"usePreview":0,"tags":["mariosoundimitacion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// --- access to the image of ascii code c\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.))\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureLod( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), \\\n//                                                                               log2(length(fwidth(U/16.*iResolution.xy))) )\n  #define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U) { // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);C(111);C(117);C(110);C(100);C(32);C(105);C(110);C(115);C(105);C(100);C(101); // message \"Sound inside\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) {float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);if(c>=0.){fragColor=vec4(c);return;}}\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define tau 4.0*asin(1.0)\n\n\nfloat squareWave(float freq,float time)\n{\n    return fract(0.5 * tau * time * freq) * 2.0 - 1.0;\n}\n\nfloat SquareWave25( float f, float x )\n{\n    return floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 );\n}\n\nfloat squareWave5( float freq, float time )\n{\n    //return step(.5,fract(frequency(note)*time))*2.-1.;\n    return step(.5,fract(freq*time))*2.-1.;\n}\n\nfloat SineWavem(float freq, float t)\n{\n   return sin(6.2831*freq*t)*exp(-3.0*t); \n}\n\nfloat triangleWave( float freq, float time )\n{\n    //return fract(frequency(note)*time)*2.-1.;\n    return fract(freq*time)*2.-1.;\n}\n\n\nfloat NoiseWave( float x )\n{\n    return 2.0*fract( sin( 123523.9898 * x ) * 43758.5453 )-1.0;\n    //return  fract( 2.0*fract( sin( fract( 123523.9898 * x )) * 43758.5453 )-1.0);\n    \n}\n\n\n\n\nfloat squareIN(float freq, float start,  float time, float pdur) {\nfloat end;\n  \n    float duration =pdur;\n    end =start+pdur;\n    float dt = time - start;\n    float x = dt / duration;\n  \n    float amp =1.0;\n  \n    float t1 = squareWave(freq,dt);\n    float t2 = SquareWave25(freq,dt);\n    float t3 = squareWave5(freq,dt);\n    float s =t2+t1;\n    \n    if (time >= start && time < end) {\n        return s * amp;\n    } else {\n        return 0.0;\n    }\n}\n\n\n\nfloat triangleIN(float freq, float start,  float time, float pdur) {\nfloat end;\n    \n    float duration =pdur;\n    end =start+pdur;\n    float dt = time - start;\n    float x = dt / duration;\n    \n    \n    \n    float amp =1.0;\n    float t1 = triangleWave(freq,dt);\n        \n    float s =t1;\n    \n    if (time >= start && time < end) {\n        return s * amp;\n    } else {\n        return 0.0;\n    }\n}\n\n\n\nfloat White_NoiseIN(float freq, float start,  float time, float pdur) {\nfloat end;\n    \n    float duration =pdur;\n    end =start+pdur;\n    float dt = time - start;\n    float x = dt / duration;\n    \n    \n    \n    float amp =1.0;\n    float t1 = NoiseWave(time);\n        \n    float s =t1;\n    \n    if (time >= start && time < end) \n    {\n        return s * amp;\n    } else {\n        return 0.0;\n    }\n}\n\n\n \n\nvec2 mainSound( in int samp, float time )\n{\n   \n    vec2 sound = vec2(0);\n    float s=0.0;\n    \n  \n    \n    //melody\n    s =s+ squareIN(659.26,0.158730159*0.0, time,0.138888889);//E5\n    s =s+ squareIN(659.26,0.158730159*1.0, time,0.138888889);//E5\n    s =s+ squareIN(659.26,0.158730159*3.0, time,0.138888889);//E5\n    s =s+ squareIN(523.25,0.158730159*5.0, time,0.138888889);//C5\n    s =s+ squareIN(659.26,0.158730159*6.0, time,0.138888889);//E5\n    s =s+ squareIN(783.99,0.158730159*8.0, time,0.138888889);//G5\n    s =s+ squareIN(392.0,0.158730159*12.0, time,0.138888889);//G4\n    \n\t\n    \n    //bass\n\ts =s+triangleIN(146.83,0.158730159*0.0, time, 0.138888889);// 'D3\n    s =s+triangleIN(146.83,0.158730159*1.0, time, 0.138888889);// 'D3\n    s =s+triangleIN(146.83,0.158730159*3.0, time, 0.138888889);// 'D3\n    s =s+triangleIN(146.83,0.158730159*5.0, time, 0.138888889);// 'D3\n    s =s+triangleIN(146.83,0.158730159*6.0, time, 0.138888889);// 'D3\n    s =s+triangleIN(196.00,0.158730159*8.0, time, 0.138888889);// 'G3\n    s =s+triangleIN(196.00,0.158730159*12.0, time, 0.138888889);// 'G3\n  \n\n\t\n    // percussion\n    s =s+White_NoiseIN( 0.0 ,0.158730159*0.0,time,0.090702948);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*2.0,time,0.022675737);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*3.0,time,0.090702948);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*5.0,time,0.022675737);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*6.0,time,0.090702948);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*8.0,time,0.090702948);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*11.0,time,0.090702948);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*13.0,time,0.022675737);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*14.0,time,0.022675737);\n    s =s+White_NoiseIN( 0.0 ,0.158730159*15.0,time,0.022675737);\n    \n        \n    \n    \n    sound =vec2(s);\n    return sound;\n}","name":"Sound","description":"","type":"sound"}]}