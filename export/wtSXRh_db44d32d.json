{"ver":"0.1","info":{"id":"wtSXRh","date":"1564989981","viewed":122,"name":"fractNova","username":"foran","description":"fractNova","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractnova"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\n// Fractal Soup - @P_Malin\n\nvec2 CircleInversion(vec2 vPos, vec2 vOrigin, float fRadius)\n{\n\tvec2 vOP = vPos - vOrigin;\n\n\tvOrigin = vOrigin - vOP * fRadius * fRadius / dot(vOP, vOP);\n\n\n        vOrigin.x += sin(vOrigin.x * 0.001) / cos(vOrigin.y * 0.001);\n        vOrigin.y += sin(vOrigin.x * 0.001) * cos(vOrigin.y * 0.001);\n\n        return vOrigin;\n}\n\nfloat Parabola( float x, float n )\n{\n\treturn pow( 3.0*x*(1.0-x), n );\n}\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n//void main(void)\n{\n\tvec2 vPos = fragCoord.xy / iResolution.xy;\n\tvPos = vPos - 0.5;\n\n\tvPos.x *= iResolution.x / iResolution.y;\n\n\tvec2 vScale = vec2(1.2);\n\tvec2 vOffset = vec2( sin(iTime * 0.123), atan(iTime * 0.0567));\n\n\tfloat l = 0.0;\n\tfloat minl = 10000.0;\n\n\tfor(int i=0; i<48; i++)\n\t{\n\t\tvPos.x = abs(vPos.x);\n\t\tvPos = vPos * vScale + vOffset;\n\n\t\tvPos = CircleInversion(vPos, vec2(0.5, 0.5), 0.9);\n\n\t\tl = length(vPos*vPos);\n\t\tminl = min(l, minl);\n\t}\n\n\n\tfloat t = 2.1 + iTime * 0.035;\n\tvec3 vBaseColour = normalize(vec3(sin(t * 1.790), sin(t * 1.345), sin(t * 1.123)) * 0.5 + 0.5);\n\n\t//vBaseColour = vec3(1.0, 0.15, 0.05);\n\n\tfloat fBrightness = 11.0;\n\n\tvec3 vColour = vBaseColour * l * l * fBrightness;\n\n\tminl = Parabola(minl, 5.0);\n\n\tvColour *= minl + 0.14;\n\n\tvColour = 1.0 - exp(-vColour);\n\tfragColor = vec4(vColour,1.0);\n}","name":"Image","description":"","type":"image"}]}