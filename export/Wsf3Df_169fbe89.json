{"ver":"0.1","info":{"id":"Wsf3Df","date":"1547610946","viewed":409,"name":"Wave effect","username":"anemolo","description":"I saw this effect made on javascript canvas and I wanted to give it a shot as a shader. Still trying to understand the math :b\n\nControls:\n1 => Toggle raw wave effect. \nEffect frist found at https://spite.github.io/looper/#2","likes":12,"published":1,"flags":16,"usePreview":0,"tags":["lineswave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nbool keyToggle(int ascii) \n{\n\treturn (texture(iChannel0,vec2((.5+float(ascii))/256.,0.75)).x > 0.);\n}\n// Smallest form - 108 chars\n//#define mainImage(o,U)                              \\\n//    vec2 u = 2.* U/iResolution.xy - 1.;             \\\n//    o += sin( 9. / exp( u.x = dot(u,u) )            \\\n//                       * sin( 6.*(u.x - iTime) )   \\\n//                    + u.y * 1e2 )\n\n// Understandable form\nvoid mainImage( out vec4 color, in vec2 cord )\n{\n    // Normalized pixel coordinates (from -1 to 1) on the center\n     vec2 u = 2. * cord/iResolution.xy - 1.;\n    \n    // Storing the dot value in u.x to later use\n    // Second sin is for the wave\n    // u.y * 1e2 are the lines\n    // dot(u,u) equates to distance * distance\n    // 1.5 for the line thickness\n    float wave = (9. / exp(u.x = dot(u,u) ) \n                \t\t\t* sin(6. * (u.x - iTime) ));\n     color = vec4( \n         keyToggle(49)\n         ? wave\n         : 1.5 - sin( wave + u.y * 1e2));\n}","name":"Image","description":"","type":"image"}]}