{"ver":"0.1","info":{"id":"7sjGDw","date":"1617531978","viewed":56,"name":"loading_test","username":"geraldFitz","description":"simple loading test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["loading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RADIUS_INNER 0.3\n#define RADIUS_OUTER 0.4\n#define GAP 0.05\n\nbool inCircle(vec2 cts, float radius){\n    float a = cts.x + cts.y;\n    return a < radius;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ref = min(iResolution.x, iResolution.y);\n    float r_in = pow(RADIUS_INNER * ref, 2.);\n    float r_out = pow(RADIUS_OUTER * ref, 2.);\n    float gap = pow(GAP * ref, 2.);\n    \n    vec2 ct = fragCoord - (iResolution.xy / 2.);\n    vec2 ct_s = ct * ct;\n    \n    bool is_inner = inCircle(ct_s, r_in);\n    bool is_outer = inCircle(ct_s, r_out);\n    bool is_gap = ct_s.x < gap;\n    is_gap = is_gap || ct_s.y < gap;\n    bool do_color = is_outer && !is_inner && !is_gap;\n    \n    bool is_right = ct.x > 0.;\n    bool is_up = ct.y > 0.;\n    int seg = int(is_up) + int(is_right) + int(!is_up && is_right)*2;\n    \n    float targ_seg = mod(iTime, 4.);\n    \n    float dist = abs(float(targ_seg) - float(seg));\n    dist = min(dist, abs(dist-4.));\n    \n    //float radius_mid = (RADIUS_OUTER + RADIUS_INNER) / 2.;\n    //float v = 1. / (sin(iTime) * radius_mid - (ct_s.x + ct_s.y));\n    //float u = atan(ct.x, ct.y);\n    //float w = (mod(iTime, 2.0) - 1.) * 1.6;\n    //float v = pow(w-u, 2.);\n    \n    // Output to screen\n    fragColor = vec4(1., 1., 1., 1.) * float(do_color) * dist;\n}","name":"Image","description":"","type":"image"}]}