{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"video","id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":2,"type":"texture","id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","sampler":{"filter":"nearest","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":3,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 screenPos = fragCoord.xy / iResolution.xy; // position in the screen\n    vec2 mouse = iMouse.xy / iResolution.xy; // mouse position relative to the screen\n    vec4 channel0 = texture(iChannel0, screenPos); // iChannel0\n    vec4 channel1 = texture(iChannel1, screenPos); // iChannel1\n    vec4 channel2 = texture(iChannel2, screenPos); // iChannel2\n    vec4 channel3 = texture(iChannel3, screenPos); // iChannel3\n    \n    vec4 color = vec4(1.0,1.0,1.0,1.0); // final color, initial value is white\n    \n    color = channel1;\n    \n    float wave = texture( iChannel1, vec2(uv.x,0.15) ).x;\n    \n    //color = color * mainSound( in int samp,);\n    \n    \n    //color.rgb += 1.0 -  sin(smoothstep( 0.0, 0.5, wave ) * 15.0);\n    \n    //color = 1.0 - color;\n    \n    //if (color.r + color.b + color.g < 3.0) {\n    //    color = channel1;\n    //}\n    \n    //if (color.r > 0.7 && color.b > 0.7 && color.g < 0.6) {\n    if (color.g > 0.3 && color.r + color.b < 0.45) {\n        //color = sin(channel1 * iTime);\n        color = sin(channel2 * iTime * 5.0);\n        //color.rgb += 1.0 -  sin(smoothstep( 0.0, 0.5, wave ) * 15.0);\n        color.r -= sin(channel2.x * iTime * 5.0);\n        color.b += sin(channel2.x * iTime * 5.0);\n        \n        if (color.r + color.g + color.b < 0.5) {\n            //color = mix(color,channel0, 0.5);\n        }\n    }else{\n        //color = channel3;\n        color = vec4(sin(iTime * channel1.x / 100.0));\n        //color = mix(channel0, channel3, 0.5);\n        //color.r = 1.0 -  sin(smoothstep( 0.0, 1.0, wave ) * 15.0);\n        \n        //color = channel2;\n        \n        //color.b += sin(channel0.x * iTime * 100.0);\n\t\t//color.r -= sin(channel0.x * iTime * 100.0);\n        //color.r -= sin(channel2.x * iTime * 5.0);\n        //color.b += sin(channel2.x * iTime * 5.0);\n\n        color = 1.0 - color;\n        \n        //color = 1.0 - color;\n        //color.rgb = color.rgb / 2.0;\n        \n        if (color.r + color.g + color.b > 2.0) {\n            color = 1.0 - channel0;\n        }\n    }\n    \n   // color = 1.0 - color;\n    \n\tfragColor = color;\n    \n}\n\n\n\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}\n*/\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"llfGz2","date":"1423307040","viewed":184,"name":"while(brittany)","username":"screenshake","description":"brittany framing the shot","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["screenshakebrittanypixelbg"],"hasliked":0,"parentid":"","parentname":""}}