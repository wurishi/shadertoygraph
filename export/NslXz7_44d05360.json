{"ver":"0.1","info":{"id":"NslXz7","date":"1618415876","viewed":68,"name":"Jesus 1","username":"SnoopethDuckDuck","description":"e","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst float pi = 3.14159;\nconst float pi2 = 2. * pi / 3.;\nconst float pi3 = 4. * pi / 3.;\n\n\nfloat taxi(vec2 dir)\n{\nreturn abs(dir.x) + abs(dir.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y - vec2(0.375,0.);\n   // uv = floor(uv * 198.) / 198.;\n    float t =  200. + 2. * iTime;// + 3.14159 * cos(iTime);\n\n\nfloat c = 0.5 * (1. + cos( t / 7.));\n //uv.x *=  (sin(t * uv.y) + cos(t * 0.03 *  uv.x));\n \nvec2 dir = uv - 0.5;\nfloat theta = atan(dir.y,dir.x);\n\nvec2 dir2 = dir + 0.25 * (c * (1. + sin(-t) * cos(t)) \n                 + (1. - c ) * (1. + cos(t))) * vec2(cos(t),sin(t));\nvec2 dir3 = dir + 0.25 *( c * (1. + sin(-t) * cos(t))\n                  + (1. - c) * (1. + cos(t))) * vec2(cos(t + pi),sin(t + pi));\n \nvec2 dir2b = dir + 0.25 * (c * (1. + sin(-t + pi2) * cos(t + pi2)) \n                 + (1. - c ) * (1. + cos(t + pi2))) * vec2(cos(t + pi2),sin(t + pi2));\nvec2 dir3b = dir + 0.25 *( c * (1. + sin(-t + pi2) * cos(t + pi2))\n                  + (1. - c) * (1. + cos(t + pi2))) * vec2(cos(t + pi3),sin(t + pi3));\n  \n vec2 dir2c = dir + 0.25 * (c * (1. + sin(-t + pi3) * cos(t + pi3)) \n                 + (1. - c ) * (1. + cos(t + pi3))) * vec2(cos(t + pi3),sin(t + pi3));\nvec2 dir3c = dir + 0.25 *( c * (1. + sin(-t + pi3) * cos(t + pi3))\n                  + (1. - c) * (1. + cos(t + pi3))) * vec2(cos(t + pi2),sin(t + pi2));\n  \n float d = 20. * min(length(dir2),length(dir3));\nd *= (0.5 + cos(2. * theta + 0.1 * t));\n\n float db = 20. * min(length(dir2b),length(dir3b));\ndb *= (0.5 + cos(2. * theta + 0.1 * t));\n\n float dc = 20. * min(length(dir2c),length(dir3));\ndc *= (0.5 + cos(2. * theta + 0.1 * t));\n\n\n\n    // Time varying pixel color\n  vec3 col = 1. - vec3(\n  smoothstep(abs(0.5 + 0.15 * (1. + cos(t / 2. + theta)) - d)\n  ,0.1 + 0.15 * (1. + cos(theta + t/2. + 3.14159))\n  , 0.1),\n  smoothstep(abs(0.5 + 0.15 * (1. + cos(t / 2. + theta)) - db)\n  ,0.1 + 0.15 * (1. + cos(theta + t/2. + 3.14159))\n  , 0.1),\n  smoothstep(abs(0.5 + 0.15 * (1. + cos(t / 2. + theta)) - dc)\n  ,0.1 + 0.15 * (1. + cos(theta + t/2. + 3.14159))\n  , 0.1)\n  );\n\n  \n   // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}