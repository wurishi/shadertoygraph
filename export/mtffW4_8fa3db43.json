{"ver":"0.1","info":{"id":"mtffW4","date":"1692919521","viewed":80,"name":"Patterns #1","username":"Nimerya","description":"First shader on shadertoy, big thanks to Kishimisu for he's instructive video !\nhttps://www.youtube.com/watch?v=f4s1h2YETNY","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hexagones"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBlobbyCross( in vec2 pos, float he )\n{\n    pos = abs(pos);\n    pos = vec2(abs(pos.x-pos.y),1.0-pos.x-pos.y)/sqrt(2.0);\n\n    float p = (he-pos.y-0.25/he)/(6.0*he);\n    float q = pos.x/(he*he*16.0);\n    float h = q*q - p*p*p;\n    \n    float x;\n    if( h>0.0 ) { float r = sqrt(h); x = pow(q+r,1.0/3.0)-pow(abs(q-r),1.0/3.0)*sign(r-q); }\n    else        { float r = sqrt(p); x = 2.0*r*cos(acos(q/(p*r))/3.0); }\n    x = min(x,sqrt(2.0)/2.0);\n    \n    vec2 z = vec2(x,he*(1.0-2.0*x*x)) - pos;\n    return length(z) * sign(z.y);\n}\n\nvec3 palette( in float t )\n{\n    vec3 a = vec3(0.848, 0.358, 0.538);\n    vec3 b = vec3(0.718, 0.718, 0.628);\n    vec3 c = vec3(0.560, 0.560, 0.537);\n    vec3 d = vec3(0.448, -0.532, -0.482);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy ) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 3.0; ++i)\n    {\n        uv = fract(uv * sin(iTime * 0.2) * 1.42) - 0.5;\n\n        float d = sdBlobbyCross(uv, 0.3) * exp(-length(uv0));\n        vec3 col = palette(length(uv0) + i * 0.5 + sin(iTime));\n\n        d = tan(d * 32.0 + iTime * 2.0) / 16.0;\n        d = abs(d);\n        d = 0.4 / pow(0.1 / d, 1.2);\n        d = step(0.95, d);\n\n        finalColor += col * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}