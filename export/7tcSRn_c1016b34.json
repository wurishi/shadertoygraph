{"ver":"0.1","info":{"id":"7tcSRn","date":"1638583641","viewed":145,"name":"Vogel Disks","username":"mileslacey","description":"Test of rendering vogel disks","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["disks","disk","vogel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvec4 circle(in vec2 pos, in float radius, in vec4 color, in vec2 uv)\n{\n\tfloat amInPoint = length(pos - uv) / radius;\n\treturn color * (1.f-step(1.f, amInPoint));\n}\n\n\n\nvec2 sample_vogel(float i, float totalPoints, float time)\n{\n    const float goldenAngle = 2.39996322972865332;\n    float xg = i * goldenAngle;\n    float x = sqrt((i+0.5f)/totalPoints);\n    float s = sin(xg+(time*0.25f));\n    float c = cos(xg+(time*0.25f));\n    return vec2(c, s) * x;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 aspect = vec2(iResolution.x / iResolution.y, 1.f);\n\tvec2 uv = aspect * (vec2(2.f) * (fragCoord.xy / iResolution.xy) - vec2(1.f));\n    \n    const vec4 baseColor = vec4(0.8f, 0.5f, 0.05f, 1.f);\n    \n    const int numPointsi = 512;\n    const float numPointsf = float(numPointsi);\n    int currentPoint = int(iTime*2.f) % numPointsi;\n    \n    for (int i = 0; i < numPointsi; ++i)\n    {\n        float n = float(i);\n        vec2 p = sample_vogel(n, numPointsf, iTime)*0.9f;\n        vec4 c = (i == currentPoint) ? vec4(1.f) : baseColor;\n        \n        fragColor += circle(p, 0.0125f, c, uv);\n    }\n}","name":"Image","description":"","type":"image"}]}