{"ver":"0.1","info":{"id":"MfVXzh","date":"1714828442","viewed":30,"name":"WebGL 1 driver bug","username":"reneu","description":"This for loop that does not produce the expected results on an Apple M2 Max.\n\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["loop","bug","for","driver"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Assuming MAX is a uniform and can't be used in for loop condition (WebGL 1)\n// Changing this to e.g. 6.0, 6.6, 7.0 fixes the issue \nfloat MAX = 6.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float r = 7.0;\n    \n    // Changing the condition to 'i < 100' (or lower) fixes the issue\n    for (float i = 0.0; i < 101.0; i+= 1.0) {\n        if (i > 1.) {\n            break;\n        }\n\n        // value should be equal MAX for i = 0 \n        float value = sqrt(pow(MAX, 2.0) + i);\n        // should be updated as MAX < initial r\n        if (r > value) {\n            r = value;\n        }\n    }\n\n    // r should be equal MAX but it's not?!\n    // output is red but should be green (Apple M2 Max)\n    fragColor = r <= MAX ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}