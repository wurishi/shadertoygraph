{"ver":"0.1","info":{"id":"XlKyRh","date":"1535054003","viewed":380,"name":"Self displace","username":"badjano","description":"Created from this idea: https://www.reddit.com/r/generative/comments/99knbc/images_warped_with_themselves/","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["2d","texture","displace"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int   c_samplesX    = 25;  // must be odd\nconst int   c_samplesY    = 25;  // must be odd\nconst float c_textureSize = 512.0;\n\nconst int   c_halfSamplesX = c_samplesX / 2;\nconst int   c_halfSamplesY = c_samplesY / 2;\nconst float c_pixelSize = (1.0 / c_textureSize);\n\nfloat Gaussian (float sigma, float x)\n{\n    return exp(-(x*x) / (2.0 * sigma*sigma));\n}\n\nvec3 BlurredPixel (in sampler2D channel, in vec2 uv, float sigma)\n{\n    float c_sigmaX      = sigma;\n\tfloat c_sigmaY      = c_sigmaX;\n    \n    float total = 0.0;\n    vec3 ret = vec3(0);\n        \n    for (int iy = 0; iy < c_samplesY; ++iy)\n    {\n        float fy = Gaussian (c_sigmaY, float(iy) - float(c_halfSamplesY));\n        float offsety = float(iy-c_halfSamplesY) * c_pixelSize;\n        for (int ix = 0; ix < c_samplesX; ++ix)\n        {\n            float fx = Gaussian (c_sigmaX, float(ix) - float(c_halfSamplesX));\n            float offsetx = float(ix-c_halfSamplesX) * c_pixelSize;\n            total += fx * fy;            \n            ret += texture(channel, uv + vec2(offsetx, offsety)).rgb * fx*fy;\n        }\n    }\n    return ret / total;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col0 = BlurredPixel(iChannel0, uv, 5.0);\n    \n    float t = iTime;\n    vec2 dif = col0.rr * (col0.b-col0.g) * vec2(sin(t),cos(t));\n    vec2 uv2 = uv + dif * (1.0-col0.g) * 2.;\n    vec3 col = texture(iChannel0,uv2).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}