{"ver":"0.1","info":{"id":"llj3z3","date":"1431098739","viewed":281,"name":"Loader bar","username":"caiwan","description":"Customizable loader bar, just in case if need one. Something Farbrausch-like.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","bar","loader","loaderbar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//uniform float transition;\n#define transition fract(iTime)\n\n#define LIM .001\n#define THICK .1\n#define BORDER .01\n\nconst vec4 barColor    = vec4(1.,1.,1.,1.);\nconst vec4 borderColor = vec4(1.,1.,1.,1.);\n\nfloat udBox(vec2 p, vec2 b){return length(max(abs(p)-b,0.0));}\n\nvec2 sincos( float x ){return vec2(sin(x), cos(x));}\nvec2 rotate2d(vec2 uv, float phi){vec2 t = sincos(phi); return vec2(uv.x*t.y-uv.y*t.x, uv.x*t.x+uv.y*t.y);}\n\nvec4 getLoader(vec2 uv){\n    if (udBox(uv , vec2(1., THICK + BORDER))<LIM && udBox(uv , vec2(1. - BORDER, THICK - BORDER))>LIM) return borderColor;\n    if (udBox(uv + vec2(1.-transition, 0.) , vec2(transition - BORDER*2., THICK - BORDER*3.))<LIM) return barColor;\n    return vec4(0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ar = iResolution.x /iResolution.y;\n    vec2 uv = 2.*(fragCoord.xy / iResolution.y) - vec2(ar, 1.);\n\n    // fancy background goez here\n    //if (udBox(uv,vec2(1.))<LIM) \n    //    fragColor.rgb = vec3(uv/2.+.5, transition);\n    \n    //vec4 color = getLoader(rotate2d((uv - vec2(-.403, .637)) * 2.32, -.4347)); //twist and turn around everything\n\tvec4 color = getLoader(uv * (1.8 / vec2(ar, 1.)) );\n    fragColor = vec4(mix(fragColor.rgb, color.rgb, color.a),1.);\n}","name":"Image","description":"","type":"image"}]}