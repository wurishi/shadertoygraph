{"ver":"0.1","info":{"id":"3dyyzR","date":"1602061921","viewed":59,"name":"Gamma-correct color blending","username":"jensweh","description":"Demonstrates how blended colors look in gamma-corrected vs non-gamma-corrected space.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gamma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GAMMA 1.0\n//#define GAMMA 2.3\n\n\nvec3 blend1(in vec3 c1, in vec3 c2, float interp)\n{\n    return mix(c1, c2, interp);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{ \n    const vec3 color1 = vec3(0., 1., 0.);\n    const vec3 color2 = vec3(1., 0., 0.);\n    vec3 linear_color;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n\n    linear_color = blend1(color1, color2, smoothstep(0.45, 0.55, uv.x));\n\n    // Apply gamma correction\n    fragColor = vec4(pow(linear_color, vec3(1.0 / GAMMA)), 1.0);\n\n}","name":"Image","description":"","type":"image"}]}