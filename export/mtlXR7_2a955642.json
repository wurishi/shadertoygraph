{"ver":"0.1","info":{"id":"mtlXR7","date":"1674840013","viewed":90,"name":"Mandelbrot zoom (30s)","username":"FliegendeWurst","description":"Click to zoom in. Only works for less than a minute due to floating point limitations.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_ITERATIONS 128\n\n//Hue to RGB (red, green, blue).\n//Source: https://github.com/tobspr/GLSL-Color-Spaces/blob/master/ColorSpaces.inc.glsl\n// https://www.shadertoy.com/view/wt23Rt\n#ifndef saturate\n#define saturate(v) clamp(v,0.,1.)\n//      clamp(v,0.,1.)\n#endif\nvec3 hue2rgb(float hue){\n\thue=fract(hue);\n\treturn saturate(vec3(\n\t\tabs(hue*6.-3.)-1.,\n\t\t2.-abs(hue*6.-2.),\n\t\t2.-abs(hue*6.-4.)\n\t));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 z = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    if (abs(z.x) + abs(z.y) > 100.) {\n        //fragColor = vec4(hue2rgb(log(length(z))), 1.0);\n        fragColor = vec4(hue2rgb(float(z.z) / float(MAX_ITERATIONS / 3)), 1.0);\n    } else {\n        fragColor = vec4(1.);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MAX_ITERATIONS 128\n\nmat3 get_transform() {\n    if (iFrame <= 10) {\n        return mat3(vec3(1., 0., 0.), vec3(0., 1., 0.), vec3(0., 0., 1.));\n    } else {\n        mat3 t = mat3(vec3(0.), vec3(0.), vec3(0.));\n        for (int i = 0; i < 9; i++) {\n            t[i / 3][i % 3] = texelFetch(iChannel0, ivec2(i, 0), 0).w;\n        }\n        return t;\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    mat3 transform = get_transform();\n\n    vec2 p = fragCoord;\n    if (iMouse.z > 0.) { // mouse pressed\n        vec3 m_h = transform * vec3(vec2(iMouse.xy), 1.);\n        vec2 m = m_h.xy / m_h.z;\n        float f = 1.01;\n        transform = mat3(vec3(1., 0., 0.), vec3(0., 1., 0.), vec3(-m, 1.)) * transform;\n        transform = mat3(vec3(1./f, 0., 0.), vec3(0., 1./f, 0.), vec3(0., 0., 1.)) * transform;\n        transform = mat3(vec3(1., 0., 0.), vec3(0., 1., 0.), vec3(m, 1.)) * transform;\n    }\n    vec3 p_h = transform * vec3(p, 1.);\n    p = p_h.xy / p_h.z;\n\n    vec2 c = vec2(-3.0, -1.25) + 2.5 * p/iResolution.y;\n\n    vec2 z = vec2(0.0);\n\n    int i;\n    for (i = 0; i < MAX_ITERATIONS; i++) {\n        z = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) + c;\n        //z = vec2(z.x * z.x - z.y * z.y, (2. + .75*cos(iTime)) * z.x * z.y) + c;\n\n        if (abs(z.x) + abs(z.y) > 100.) {\n            break;\n        }\n    }\n\n    fragColor = vec4(z, i, 0.0);\n    \n    if (fragCoord.y == 0.5 && fragCoord.x <= 8.5) {\n        int i = int(floor(fragCoord.x));\n        fragColor.w = transform[i/3][i%3];\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}