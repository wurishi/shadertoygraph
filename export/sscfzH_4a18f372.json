{"ver":"0.1","info":{"id":"sscfzH","date":"1656015233","viewed":202,"name":"sRGB Gamma Correction","username":"cppio","description":"Demonstrating how 0.5 does not represent an equal blend with black unless gamma correction is used.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["gamma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 gamma(vec3 linear) {\n    return mix(1.055 * pow(linear, vec3(1.0 / 2.4)) - 0.055, 12.92 * linear, lessThanEqual(linear, vec3(0.0031308)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float x;\n    if (uv.x < 0.5 && uv.y > 0.5) {\n        x = fragCoord.x + fragCoord.y;\n    } else if (uv.x > 0.5 && uv.y < 0.5) {\n        x = 0.5;\n    } else if (fragCoord.x + 0.5 * iResolution.y < fragCoord.y + 0.5 * iResolution.x ^^ uv.x < 0.5) {\n        x = fragCoord.y - 0.5 + float(uv.x > 0.5);\n    } else {\n        x = fragCoord.x - 0.5 + float(uv.x > 0.5);\n    }\n    vec3 col = 0.5 + 0.5 * cos(iTime + vec3(0, 2, 4));\n    fragColor = vec4(vec3(mod(x, 2.0)) * col, 1);\n    if (iMouse.z <= 0.0) fragColor.rgb = gamma(fragColor.rgb);\n}","name":"Image","description":"","type":"image"}]}