{"ver":"0.1","info":{"id":"X3VXDK","date":"1720509805","viewed":33,"name":"The cell division","username":"mike2367","description":"the cell division using fractal","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define ITER 64\n#define PI 3.141592653\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = 0.75*(-iResolution.xy+2.*fragCoord.xy)/iResolution.y;\n\n\tvec2 z = p;\n\tfloat f = 4.;\n\tfloat g = 4.;\n\t\n\tfor( int i=0; i<ITER; i++ ) \n\t{\n\t\tfloat w = (float(i)*1.32457+sin(iTime) / 10000.);\n\t\tvec2 z1 = vec2(2.*cos(w),2.*sin(w));\t\t   \n\t\tz = vec2( z.x*z.x+z.y*z.y, abs(2.*z.x)*z.y) + p*0.8* sin(iTime* PI/ 15.0) ;\n\t\tf = min( f, abs(dot(z-p,z-p) -.4*float(i)));\n\t\tg = min( g, dot(z+z1,z+z1))+ 0.4 *abs((p.x-p.y));\n        if(length(z) > float(ITER) / 30.0)\n            break;\n        \n\t}\n\t\n\tf = 0.8+log(f)/5.0;\n\tg = 1.0+log(g)/18.0;\n\n\n\tfragColor = 1.-abs(vec4(g*0.9 * p.y,f*g,f*0.8 * p.x*p.y,1.0));\n}","name":"Image","description":"","type":"image"}]}