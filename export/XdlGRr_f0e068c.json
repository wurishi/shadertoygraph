{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n\t\n\t\n\tfloat modeTimer = iTime;\n\n\tfloat vignetteVal = 1.5 - 2.0 * length( p - vec2( .5, .5 ) );\n\tfloat progress = 1.0 - fract( modeTimer * .05 );//.5 + .5 * cos( modeTimer * 0.15 );\n\tprogress *= 1.0;\n\tfloat phase = pow( progress, 6.0 ) * 1.0;\n\tfloat scale = pow( progress, 6.0 ) * .4  + .00003;\n\tfloat sinuses = pow( 1.0 - progress, 0.5 );\n\tfloat angle = pow( progress, 3.0 ) * 4.0;\n\tvec2 rot = vec2( sin(angle), -cos( angle) );\n\tp = (-1.5 + 3.0*p)*vec2(1.7,1.0);\n\t\n\tvec2 pRotated = vec2( rot.x * p.x - rot.y * p.y, rot.y * p.x + rot.x * p.y );\n\t\n\tfloat fractZScale = 1.0 + pow( progress, 1.5 ) * 19.0;\n\tsinuses = -.3 + 5.8 * sinuses;\n\t//sinuses = .3 - 20.0 * progress * (progress - 1.0 );\n\n\n\tvec2 cc = vec2( 0.1 + sin( phase ) * .2, 0.61 - sin( phase ) * .2) * 1.0;\n\t\n\tvec3 dmin = vec3( 1000.0, 1000.0, 1000.0 );\n\tvec3 norm = vec3( 0.0, 0.0, 0.0 );\n    vec2 z = scale * pRotated + vec2( -.415230, -.568869);\n    for( int i=0; i<48; i++ )\n    {\n        z = cc + vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y );\n\t\tz += 0.15*sin(float(i));\n\t\tnorm.y = dot( z, z );\n\t\tnorm.x = norm.y + 0.1 * z.y / ( z.x * z.x + .01) + sinuses * sin(1.0 * norm.y ) ;\n\t\tnorm.z = 0.1 / length( fract( z * fractZScale ) - 0.5 );\n\t\tnorm.z *= norm.z;\n\t\t\n\t\t//norm = .050 * ( prev + norm );\n\t\t\n\t\t\n\t\tdmin=min(dmin, norm );\n    }\n\tfloat val = ( dmin.x - dmin.y + .83 );\n\t\t\t\t\t\t\t\t\n\tfloat inWeight = clamp( norm.z * 1.0, .0, 1.0 );\n\tvec3 colorIn = mix( vec3( 1.3, .984, .820 ), vec3( 1.8, .3, -.2 ), inWeight );\n\t\n\tfloat outWeight = clamp( 3.0 -5.0 *  norm.z, .0, 1.0 );\n\tvec3 colorOut = mix( vec3( 0.7, .2, .3 ), vec3( .173, .0, .137 ), outWeight );\n\t\t\t\t \n\t\n\tfloat backgroundBlack = clamp(.3 * val * (vignetteVal - .5 ), .0, 1.0 );\n\tfloat backgroundWhite = clamp(-.3 * val, .0, 1.0 );\n    val =  clamp( val * 3.0, .0, 1.0 );\n    vec3 color = mix( vec3( 1.3, .984, .820 ), vec3( .173, .0, .137 ), val );\n\t\n\tcolor = mix( color, colorOut, backgroundBlack * 1.0);\n\tcolor = mix( color, colorIn, backgroundWhite * 1.0);\n\t\n\t\n\tcolor *= vignetteVal;\n\t\n\t\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdlGRr","date":"1361528930","viewed":389,"name":"Julia - mare version","username":"mare","description":"Exploration of Julia fractal, based on iq's version","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","julia"],"hasliked":0,"parentid":"","parentname":""}}