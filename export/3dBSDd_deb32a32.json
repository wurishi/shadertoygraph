{"ver":"0.1","info":{"id":"3dBSDd","date":"1555263768","viewed":199,"name":"Slime Isle","username":"tristanwhitehill","description":"blibblob! exploring alternate versions of previous shader, just a beginner","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 hash( vec2 x ) \n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    x = x*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \n                     dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \n                     dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 r = vec2( fragCoord.xy - 0.5*iResolution.xy );\n\t\n\tr = 1.5 * r.xy / iResolution.xy;\n    float colorwave=sin(.5 * iTime)*4.0;\n    vec3 col1 = vec3 (0.3*colorwave,0.6,.9);\n    vec3 col2 = vec3 (0.4*colorwave,0.7,.9);\n    vec3 col3 = vec3 (0.3,0.1*colorwave,.9);\n    vec3 col4 = vec3 (0.7,0.9,.7*colorwave);\n    \n    vec3 pixi;\n    float n = noise(5.*uv);\n    float width = (sin(.05 * iTime)*.60);\n   \n    float width2 = cos(sin(.06 * iTime)*10.0);\n    float mody = dot(width*width2,sin(cos(r.x+iTime)*10.));\n    float mody2 = dot(width/width2,sin(cos(r.y+iTime*.5)*.4));\n    if(tan(sin(iTime+length(r)*.05))*r.y*n> mody){\n        \n        pixi = col1;\n        \n    \t}\n    else {\n        \n        pixi = col1*col2;\n    \n        }\n      if(sin(sin(iTime+length(r)*.03))*cos(length(r)+iTime*.03)/4.*n< mody2){\n        \n        pixi = col3;\n        \n    \t}\n     \tif(sin(cos(iTime+length(r)*.03))*sin(length(r)+iTime*.03)*n < mody2){\n        \n        pixi = col4;\n        \n    \t}\n      \n\n    fragColor = vec4(pixi,1.0);\n}","name":"Image","description":"","type":"image"}]}