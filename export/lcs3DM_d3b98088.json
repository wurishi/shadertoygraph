{"ver":"0.1","info":{"id":"lcs3DM","date":"1703157318","viewed":34,"name":"Hex Fish Scale %scouttea","username":"scouttea","description":"Simple Shader to generate a fish scale pattern, might be useful as a background for other shaders\nDetails: https://www.desmos.com/geometry/dhbnduwnyp","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["template","pattern","repeating"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // uv alternative where the coordinate grid is not stretched i.e. a square is square\n    // and (-1,-1) to (1,1) is on screen\n    vec2 ab = (2.*fragCoord - iResolution.xy )/min(iResolution.x,iResolution.y);\n    // zoom in, enhance\n    ab *= 6.;\n    \n    mat2 proj_i2c = 1./2. * mat2( sqrt(3.), 1., -sqrt(3.), 1. );\n    mat2 proj_c2i = 1./3. * mat2( sqrt(3.), -sqrt(3.), 3., 3. );\n    \n    vec2 tmp = proj_c2i * ab;\n    vec2 C = proj_i2c * floor( tmp );\n    vec2 Cl = proj_i2c * vec2( floor(tmp.x) - 1., ceil(tmp.y) - 1. );\n    vec2 Cr = proj_i2c * vec2( ceil(tmp.x) - 1., floor(tmp.y) - 1. );\n    \n    float dist = min( dot( ab - Cl, ab - Cl ), dot( ab - Cr, ab - Cr ) );\n    \n    if( dist > 1. ) dist = dot( ab - C, ab - C );\n    \n    dist = sqrt(dist);\n    \n    fragColor = vec4( vec3( dist ), 1. );\n}","name":"Image","description":"","type":"image"}]}