{"ver":"0.1","info":{"id":"4c3yRX","date":"1730920732","viewed":117,"name":"color caleidoscope ","username":"nayk","description":"source https://www.shadertoy.com/view/mtyGWy","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","color","rotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float cheap_star(vec2 uv, float anim)\n{\n    uv = abs(uv);\n   uv*=vec2(fract(log(length(uv.xy))-iTime*.5));\n    vec2 pos = min(uv.xy/uv.yx, anim);\n    float p = (2.0 - pos.x - pos.y);\n    return (2.0+p*(p*p-1.5)) / (uv.x+uv.y);      \n}\n vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nvec2 uv2 = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv2;\n    vec3 finalColor = vec3(0.0);\n    uv2*=vec2(fract(log(length(uv2.xy))+iTime*.5));\n    for (float i = 0.0; i < 5.0; i++) {\n        uv2 = fract(uv2 * 2.5) - 0.5;\n   uv2*=vec2(fract(log(length(uv2.xy))-iTime*.05));\n        float d = length(uv2) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.2);\n\n        finalColor += col * d;\n    }\n       \n    vec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    uv *= 2.0 * ( cos(iTime * 2.0) -2.5); // scale\n    float anim = sin(iTime * 12.0) * 0.1 + 1.0;  // anim between 0.9 - 1.1\n    fragColor= vec4(cheap_star(uv, anim)*finalColor * vec3(0.55,0.5,0.55)*0.5, 1.0);\n}\n\n\n","name":"Image","description":"","type":"image"}]}