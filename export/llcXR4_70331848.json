{"ver":"0.1","info":{"id":"llcXR4","date":"1478401796","viewed":223,"name":"Zigzag iterations","username":"kellyegan","description":"triangle pattern","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["triangles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU 6.28318530718\n\n\nfloat diagonal( vec2 uv, float w, float i ) {\n  return i < 0.0 ? uv.y - uv.x : (uv.x + uv.y) - w;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.y;\n    float c = 40.0;\n    \n    vec2 pos_f = fract(uv * c);\n    vec2 pos_i = floor(uv * c);\n\n    float a = sin(3.0 + (pos_i.y + pos_i.x * c) * (iTime * 0.001) );   \n        \n    float l = smoothstep( -0.1, 0.0, diagonal( pos_f, 1.0, a))\n            - smoothstep( 0.0, 0.1, diagonal( pos_f, 1.0, a ));\n    \n    vec3 h = l * vec3( 0.5 + pos_i.x / (c* 2.0), pos_i.y / c, (a + 1.0) / 2.0 );\n    \n    fragColor = vec4( h ,1.0);\n    \n}\n\n\n\t\n","name":"Image","description":"","type":"image"}]}