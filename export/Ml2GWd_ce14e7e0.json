{"ver":"0.1","info":{"id":"Ml2GWd","date":"1433805127","viewed":187,"name":"Normalmap Circles Experrment","username":"KitVanDeBunt","description":"Normalmap Circles","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["normalmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define PI 3.14159265359/3.0*2.0\n#define twelfthPI 3.14159265359/12.0\nvec3 lightPos = vec3(0.5,0.5,0.2);\n\nbool drawCircle(vec2 circlePos, vec2 pixelPos, float radius)\n{\n    float deltaX = circlePos.x-pixelPos.x;\n    float deltaY = circlePos.y-pixelPos.y;\n    return(sqrt((deltaX*deltaX)+(deltaY*deltaY))<radius);\n}\n\nvec3 circleNormal(vec2 circlePos, vec2 pixelPos, float radius)\n{\n    float deltaX = circlePos.x-pixelPos.x;\n    float deltaY = circlePos.y-pixelPos.y;\n    float dist = sqrt((deltaX*deltaX)+(deltaY*deltaY));\n    float dist2 = (((1.0*(radius*2.0))-dist)*(1.0/(radius*2.0)));\n    vec2 dir = vec2(deltaX,deltaY);\n    \n    float normalY = (-deltaY*4.0);\n    float normalX = (-deltaX*4.0);\n    return vec3(normalX,normalY,dist2); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 aspactRatio = vec2((iResolution.x/iResolution.y),1.0);\n\tvec2 uv = fragCoord.xy / (iResolution.xy/aspactRatio);\n    vec2 center = aspactRatio*0.5;\n\tvec4 color = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    // light position\n    lightPos.xy = (vec2(sin(iTime*3.0),-cos(iTime*3.0))/3.5)+center;\n\tif( iMouse.z > 0.0 )\n\t{\n\t\tlightPos = vec3((iMouse.xy / (iResolution.xy/aspactRatio)), lightPos.z);\n\t}\n    \n    bool filled = false;\n    \n    for (float i = 0.0;i < 2.6;i+=0.5){\n        for (float j = 1.0;j < 5.0;j+=1.0){\n            float size = (0.01+(j*0.04));\n            float fromCenter = 0.05+(0.01*j)+(size*j);\n            vec2 circlePos = vec2(sin((-iTime/3.0)+(i*PI)+(j*twelfthPI)),cos((-iTime/3.0)+(i*PI)+(j*twelfthPI)));\n            circlePos = (circlePos*fromCenter)+center;\n            if(drawCircle(circlePos,uv,size)){\n\n                // normal\n                vec3 circelNormal = circleNormal(circlePos,uv,size);\n\n                vec3 lightDir = normalize(lightPos-vec3(uv.x,uv.y,0.0));\n                float lightPower = clamp( dot(lightDir,circelNormal),0.0,1.0);\n                // draw circle\n                fragColor = vec4(lightPower)*color;\n\t\t\t\t\n                // draw normalmaps\n                //fragColor = vec4(circelNormal.xyz,0) * 0.5 + 0.5; \n                filled = true;\n            }\n        }\n    }\n    \n    if(!filled){\n       fragColor = vec4(0.20);  \n    }\n}\n\n\n\n","name":"","description":"","type":"image"}]}