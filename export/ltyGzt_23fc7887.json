{"ver":"0.1","info":{"id":"ltyGzt","date":"1476135157","viewed":185,"name":"Mandelbrot  Morph","username":"decrooks","description":" Generalized Mandelbrot  Set","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 complexExp(vec2 z, vec2 w){\n   float l = length(z);\n   float zsq = l*l;\n   float argz = atan(z.y,z.x);\n   float alpha = pow(zsq,0.5*w.x)* exp(-w.y*argz);\n   float beta = w.x*argz + 0.5*w.y* log( zsq); \n    \n   return alpha*vec2(cos(beta),sin(beta)) ; \n}\n\n\nfloat mandelbrot(vec2 z,vec2 w){\n\n  vec2 c = z;\n                                                             \n  int n=1;\n  const int   maxitn = 50;                              \n  \n    for( int i = 0;i<maxitn;i++){\n      \n        z = complexExp(z,w) + c;\n        \n        if(length(z) >= 2.0) {\n            return float(i)/float(maxitn);\n        }\n    }\n   \n   return 0.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float aspectRatio = iResolution.x/iResolution.y;\n    vec2 z = 2.0*uv + vec2(-1.0,-1.3);\n    z.x = z.x*aspectRatio;\n    z = vec2(z.y,z.x);\n    \n    \n    vec2 w = vec2(4.0  + 3.0*cos(iTime),0.0);\n    float t = mandelbrot(z,w);\n\t\n    float a = cos(iTime);\n    float b = sin(iTime);        \n \tfloat c = cos(3.27*iTime);\n    \n\tfragColor = vec4(pow(t,1.0 +0.3*a ),pow(t,1.0+0.3*b),pow(t,0.7+0.3*c),1.0);\n}\n\n                                                                                       ","name":"Image","description":"","type":"image"}]}