{"ver":"0.1","info":{"id":"Xff3WN","date":"1703052377","viewed":13,"name":"Smooth level curves cycle","username":"vichoeq","description":"Cycling over the level curves of a function.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159265359 \n\nvec2 rotate(vec2 v, float a) \n{\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, s, -s, c);\n\treturn m * v;\n}\n\n// Range: -2 to 2\nfloat f(vec2 uv)\n{    \n    return sin(uv.y) + sin(uv.x);\n}\n\n// The closest fx is to level, the higher this value is, up to 1\nfloat level_curve(float fx, float level)\n{\n    float d = sqrt((fx - level)*(fx - level));\n    \n    return smoothstep(0.05,0.0, d);\n}\n\nfloat level_curves(float fx, float lowest_val, float highest_val, float n)\n{\n    float level = 0.0;\n    float delta = (highest_val - lowest_val) / float(n-1.0);\n        \n    for(float i = 0.0; i <= n; i++)\n    {\n        level += level_curve(fx, lowest_val + i*delta);\n    }\n    \n    return level;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    uv *= 10.0;\n    \n    // Move function range to 0..1\n    float fx = f(uv);\n    fx += 2.0;\n    fx /= 4.0;\n    \n    vec3 color = vec3(fx, fx, fx);\n    \n    \n    // Level curves   \n    float n = 8.0;\n    float level_curves = level_curves(fx-fract(iTime/10.), -1.0, 1.0, 2.*n+1.);\n    \n    color = mix(color, 1.0-color, level_curves);\n        \n        \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}