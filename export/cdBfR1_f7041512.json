{"ver":"0.1","info":{"id":"cdBfR1","date":"1689394473","viewed":39,"name":"fosfenos - linear","username":"davidmachadosf","description":"patterns repeats at many different scales...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fosfenos"],"hasliked":0,"parentid":"Dd2yDK","parentname":"fosfenos - scales studies"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI  =  3.141592;\nconst float DOIS_PI = 2.*PI;\n\n\nconst float pot  =   2.5;\nconst float freq =  50.;\n\n\nconst vec3 a = vec3(  .086,   .086,   .109); // bgcolor: eigengrau\n\n\nconst vec3 b = vec3(  .051,  .553, .350); \nconst vec3 c = vec3(  .552,  .361, .064);\nconst vec3 d = vec3(  .403,  .103, .813);\n\n\nvec3 palette( float t ) {\n    return a + b*cos(t*t*t) + c*sin(t*t) + d*sin(t)*cos(t*t);// + cos( 1.28318*(c*t+d+b*t*t) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float yRat = (iResolution.y/iResolution.x);\n    \n    vec2 uv = 2.*(fragCoord/iResolution.x - vec2(.5,yRat/2.));\n    \n    float x = uv.x;\n    float y = uv.y;\n\n\n    //float valxy = \n    //    1. -\n    //     pow( (1.+sin((2.*PI)*freq*sin(.00001*iTime*iTime*iTime)*(x+y)))/2., pot) * \n    //     pow( (1.+cos((2.*PI)*freq*sin(.00001*iTime*iTime*iTime)*(y-x)))/2., pot);\n    \n    \n    \n    float valxy = \n         1. -\n         ((1.+cos(freq*x*iTime)) / 2.) \n         * \n         ((1.+sin(freq*y*iTime)) / 2.) \n         ;\n    \n    //vec3 col = vec3(valxy);\n    vec3 col = palette(valxy);\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}