{"ver":"0.1","info":{"id":"l3f3zM","date":"1717602968","viewed":99,"name":"rick and morty portal effect","username":"valena","description":"Hi everyone! Here's a little portal effect","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["portal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+19.19);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nfloat hash11(float p)\n{\n    return length(hash22(vec2(p)));\n}\n\nfloat hash21(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nmat2 rmatrix(float a)    //Rotation matrix;\n{\n\tfloat c = cos(a);\n\tfloat s = sin(a);\n\n\treturn mat2(c, -s, s, c);\n}\n\nfloat S(float x)\n{\n\treturn (3.0 * x * x - 2.0 * x * x * x);\n}\n\nfloat noise(vec2 pos)\n{\n\tfloat a = hash21(vec2(floor(pos.x), floor(pos.y)));\n\tfloat b = hash21(vec2(ceil(pos.x), floor(pos.y)));\n\tfloat c = hash21(vec2(floor(pos.x), ceil(pos.y)));\n\tfloat d = hash21(vec2(ceil(pos.x), ceil(pos.y)));\n\n\tfloat s1 = S(pos.x - floor(pos.x));\n\tfloat s2 = S(pos.y - floor(pos.y));\n\n\tfloat f = a + \n\t\t\t  (b - a) * s1 +\n\t\t\t  (c - a) * s2 +\n\t\t\t  (a - b - c + d) * s1 * s2;\n\treturn (f);\n}\n\nfloat onoise(in vec2 pos)\n{\n\tfloat n = 3.0;\n\tfloat delta = 3.1415 / 6.0;\n\tfloat sum = 0.0;\n\tfloat power = 0.5;\n\n\tfor (float i = 0.0; i < n; i++)\n\t{\n\t\tsum += noise(rmatrix(delta * i) * pos) * power;\n\t\tpower *= 0.40;\n\t\tpos *= 1.9;\n\t}\n\treturn sum;\n}\n\nvec3 portalTexture(vec2 uv)\n{\n    vec2 uv2 = uv;\n    \n    uv2 = vec2(length(uv), (atan(uv.y, uv.x) + PI) / 2.0 / PI);\n    \n    //uv2 *= 3.0;\n    \n    \n    uv2.y = fract(uv2.y + uv2.x * 0.3 - iTime * 0.01);\n    uv2.x = uv2.x * 1.0 + iTime * 0.3;\n    \n    vec3 colors[4] = vec3[4]( vec3(0.184, 0.529, 0.086),\n                              vec3(0.557, 0.890, 0.161),\n                              vec3(0.349, 0.835, 0.110),\n                              vec3(0.921, 0.980, 0.847));\n    \n    vec2 k = vec2(10.0);\n    \n    float br1 = onoise(uv2 * k);\n    float br2 = onoise(vec2(uv2.x, uv2.y - 1.0) * k);\n    \n    float br = mix(br1, br2, uv2.y);\n    \n    \n    \n    br = min(0.99, pow(br * 1.5, 2.5));\n    \n    \n    int bri = int(br / 0.25);\n    \n    vec3 col = vec3(br);\n    \n    col = colors[bri];\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = portalTexture(uv);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}