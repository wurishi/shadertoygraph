{"ver":"0.1","info":{"id":"DsKXRz","date":"1680646383","viewed":82,"name":"Perlin Noise Flow Field","username":"conc2304","description":"perlin noise flow field v1","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","perlinnoise","flowfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash( vec2 p )\n{\n    float h = dot(p,vec2(127.1,311.7));\n    return fract(sin(h)*43758.5453123);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\n    vec2 u = f*f*(3.0-2.0*f);\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float time = iTime * 0.5;\n    \n    vec2 noiseOffset = vec2(1.0, 2.0) * time;\n    vec2 flowField = vec2(noise(noiseOffset + uv * 5.0), noise(noiseOffset + uv * 5.0 + vec2(100.0)));\n\n    flowField = normalize(flowField);\n\n    vec3 color = vec3(flowField.x, flowField.y, 0.0);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}