{"ver":"0.1","info":{"id":"4cS3Rc","date":"1704449855","viewed":49,"name":"Cubes :D","username":"SashaMogus","description":"floaty cubes","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand( vec3 v )\n{\n    return fract(sin(v.x*82549.3465) + sin(v.y*16854.8743) + sin(v.z*53466.12544));\n}\n\nmat2 rot2( float a )\n{\n    return mat2(cos(a), -sin(a), sin(a), cos(a));\n}\n\nfloat sdBox( vec3 p, vec3 b, float r)\n{\n  vec3 q = abs(p) - b + r;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n}\n\nfloat map( vec3 p )\n{\n    float r = rand(floor(p.xzx));\n    p.xz = fract(p.xz) - 0.5;\n    p.y += r + sin(r + iTime * (1.0 - r));\n    p.xz *= rot2(iTime*(r - 0.5)*5.0);\n    p.yz *= rot2(iTime);\n    return sdBox(p, vec3(0.1), 0.03);\n}\n\nvec3 normal( vec3 p )\n{\n    vec2 f = vec2(0.0, 0.0001);\n    return normalize(vec3(map(p + f.yxx) - map(p-f.yxx),\n                          map(p + f.xyx) - map(p-f.xyx),\n                          map(p + f.xxy) - map(p-f.xxy)));\n}\n\nfloat edge( vec3 n )\n{\n    n = 1.0 - abs(n);\n    return min(n.x, min(n.y, n.z));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord*2.0 - iResolution.xy)/iResolution.y;\n    vec3 ro = vec3(0.0, 0.0, 0.0);\n    vec3 ray = normalize(vec3(uv, 1.0));\n    ray.xz *= rot2(iTime*0.1);\n    \n    float t = 0.0;\n    vec3 clr = vec3(0.0);\n    for (int i = 0; i < 100; i += 1)\n    {\n        vec3 p = ro + ray*t;\n        \n        float d = map(p);\n        if (d < 0.01)\n        {\n            clr = (normal(ro + ray*t) + 1.0) / 2.0;\n            clr += vec3(edge(clr))*1.5;\n            break;\n        }\n        t += d * 0.20;\n    }\n    \n    fragColor = vec4(clr, 1.0);\n}","name":"Image","description":"","type":"image"}]}