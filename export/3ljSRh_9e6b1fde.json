{"ver":"0.1","info":{"id":"3ljSRh","date":"1565024696","viewed":147,"name":"sponges","username":"poipoi34","description":"sponges","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float dBox(vec3 p,vec3 size)\n{\n    return length(max(vec3(0.,0.,0.),abs(p)-size/2.));\n}\nfloat dSphere(vec3 p,float r)\n{\n    return length(p)-r;\n}\nfloat dScene(vec3 p)\n{\n    p = mod(p+10.,20.)-10.;\n    return dBox(p,vec3(2.,1.,1.)*2.0)/2.;\n}\nvec3 crossProduct (vec3 p1,vec3 p2)\n{\n    return vec3(p1.y*p2.z-p1.z*p2.y,p1.z*p2.x-p1.x*p2.z,p1.x*p2.y-p1.y*p2.x);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = fragCoord/iResolution.xy*2.-1.;\n\n    int it_max = 60;\n        \n    vec3 ro = vec3(0.+sin(iTime)*1.,3.+sin(iTime)*0.,-10.+iTime*20.+sin(iTime)*0.);\n    vec3 rd = normalize(vec3(uv,1.0));\n    vec3 rdNx = normalize(vec3(1.,1.,(-rd.x-rd.y)/rd.z));\n    vec3 rdNy = normalize (crossProduct(rd,rdNx));\n    vec3 rp = ro;\n    float k = 0.;\n    int it = 0;\n    \n    float d = dScene(ro);\n    while (d>0.01 && it < it_max)\n    {\n        k += d;\n        rp = ro + k*rd + cos(k*0.5)*rdNx + cos(k*0.5)*rdNy;\n        d = dScene(rp);\n        it++;\n    }\n    \n    vec3 col = fract(rp);\n    \n\tif (it==it_max)\n        col = vec3(0.6,0.7,0.8);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}