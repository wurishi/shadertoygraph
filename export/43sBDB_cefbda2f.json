{"ver":"0.1","info":{"id":"43sBDB","date":"1728859654","viewed":29,"name":"Gamma Correction + Exact Boolean","username":"mjacques99","description":"gamma correction and exact boolean","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["gammacorrection"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Vector to raster drawing logic\n    float pi = 3.14;\n    vec3 col, col0, col1, col2, col3;\n    float PeriodT = 20.00;   \n    float func0, func1, func2, func3, func;\n\n    vec2 p3 = vec2(iMouse.x, iMouse.y);\n    vec2 p1 = vec2(300.0, 200.0);\n    vec2 p2 = vec2(500.0, 200.0);\n    vec2 p0 = vec2(200.0, 100.0);\n\n    float r0 = 18.0;\n    float r1 = 36.0;\n    float r2 = 25.0;\n    float r3 = 50.0;\n\n    func0 = sqrt(dot((fragCoord - p0), (fragCoord - p0))) - r0;\n    func1 = sqrt(dot((fragCoord - p1), (fragCoord - p1))) - r1;\n    func2 = sqrt(dot((fragCoord - p2), (fragCoord - p2))) - r2;\n    func3 = sqrt(dot((fragCoord - p3), (fragCoord - p3))) - r3;\n\n    col0 = vec3(0.85, 0.85, 0.0);\n    col1 = vec3(0.1, 0.9, 0.1);\n    col2 = vec3(0.1, 0.1, 0.9);\n    col3 = vec3(0.9, 0.1, 0.1);\n\n    func = func0; col = col0; if(func < 0.0) col = col / 2.0;\n    if(func > func1) { func = func1; col = col1; if(func < 0.0) col = col / 2.0; }\n    if(func > func2) { func = func2; col = col2; if(func < 0.0) col = col / 2.0; }\n    if(func > func3) { func = func3; col = col3; if(func < 0.0) col = col / 2.0; }\n\n    func = sin(2.0 * pi * func / PeriodT);\n    if(func <= 0.0) { col = vec3(0.125, 0.125, 0.125); }\n\n    // Apply gamma correction\n    float gamma = pow(8.0, 2.0 * iMouse.x / iResolution.x - 1.0);\n    col = pow(col, vec3(gamma));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}