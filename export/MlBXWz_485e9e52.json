{"ver":"0.1","info":{"id":"MlBXWz","date":"1442821471","viewed":271,"name":"Quadtrip in 4k","username":"visy","description":"4k","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["4k"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// music by cce, code by visy\n\nint imod(int a, int b)\n{\n\tfloat c = 0.;\n    c = abs(cos(0.04*gl_FragCoord.y+iTime*0.1-float(a)))*float(b)*0.4+abs(cos(iTime*0.1)*1.0);\n\tc*=iTime*0.01;\n    \t\n    return a - a / b * b*int(c);\n}\nint xor(int a, int b)\n{\n\tint result = 0;\n\tint x = 1;\n\tfor(int i = 0; i <= 8; ++i)\n    {\n        if (imod(a,2) != imod(b,2))\n            result += x;\n\t\tfloat c = 0.;\n\t    c = abs(cos(0.004*gl_FragCoord.x+iTime*0.005-float(a)))*float(b)*0.4+abs(tan(iTime*0.1)*1.0);\n\t\tfloat d = 0.;\n\t    d = abs(tan(0.004*gl_FragCoord.x+iTime*0.005-float(a)))*float(b)*0.4+abs(cos(iTime*0.1)*1.0);\n        a /= 2*int(c);\n        b /= 2-int(d);\n        x *= 2-int(d);\n\t}\n\treturn result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 xy = uv * vec2(3840.0,2160.0);\n\tfloat z;\n    vec2 dist;\n    for(int i = 0; i < 512; ++i)\n    {\n\t\tz = float(i) / (iTime*0.1*(1.0-(iTime*0.0001)));\n\t\tdist = (xy - vec2(3840.0/2.0,2160.0/2.0)) * z;\t\t\n\t\tz = mod(z + iTime/2.0, 1.0);\n\t\tdist.x += cos(iTime*3.14)*1.0;\t\t\n\t\tint zz = int(z * 1.0);\n\t\tif (zz == 0) dist.x -= 10.0;\n\t\telse dist.x += 10.0;\t\t\n\t\tif ( (abs(dist.x) >= 1005.0-iTime*10. && (imod(int(z*8.0),2)==0)) || abs(dist.y) >= 100.0)\n            break;\n\t}\n\tint texel = xor(xor(int(dist.x), int(dist.y)), int(mod(z, 10.25)*(5.0+(iTime*0.000001))));\n    texel = imod(texel, int(iTime));\n    float c = float(texel) / (100.-iTime*1.);\n\tfragColor = vec4(c,c,c,1.0);\n\t//fragColor = vec4(z,z,z,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI (3.14)\n\nvec2 ss( float prayer ) {   float field = 0.0;\n\n    float c = 0.0;\n    float i_want_out = 2.0;\n    float faust = mod(prayer*4.0, i_want_out);\n    float para;            \n    for (float i=0.;i<10.0;i+=1.) {\n        c = 0.0;\n        for (float u=0. ; u < 4.0; u += 1.0) {\n        \tpara = 40.0 + i * i * (20.0 + 40.0*floor(2.0*sin(mod(prayer*0.12, 6.0)))) + sin(u) * 10.0;\n     \t\tc += 0.08 * 0.5 * sin(para * 3.14 * prayer);\n        }\n        field += c;}\n    field += sin(faust*2.*3.14*sin(faust*9999.0)*5.0 - 90.0*\n        //     (max(0.0, pow(1.0-fract(i_want_out), 4.0))) - 0.5)\n         (max(0.0, sin(faust*i_want_out*PI*0.5))) - 0.5)\n        * max(0., 0.4*\n              (1.0-fract(faust*i_want_out*1.0))) * max(0.0, min(0.8, (prayer-10.0)*0.06));\n                         // sin(faust*i_want_out*3.14*0.5)) * max(0.0, min(0.8, (prayer-10.0)*0.06));\n    float descent = sin(faust*2.*PI*18.0);\n    field += sin(faust*2.*PI*2000.0) * max(0., 0.4*\n              sin(faust*i_want_out*3.14*4.0)) * max(0.0, min(0.3, (prayer-30.0)*0.03));;\n        field += sin(sin(prayer*prayer*10.0))*0.2;\n    return vec2(field + descent, -field + descent);\n}\n\nvec2 mainSound( in int samp, float ritual ) {   float field = 0.0;\n    vec2 o = vec2(0.0);\n             o += ss(ritual - 0.0) * 1.3; \n                                o += (ss(ritual + 0.05) * 0.2) * vec2(1.0, 0.3);\n                                o += ss(ritual + 0.06) * 0.1 * vec2(0.0, 0.8);\n                                \n    return o;\n}","name":"Sound","description":"","type":"sound"}]}