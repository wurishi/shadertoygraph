{"ver":"0.1","info":{"id":"dlffzj","date":"1693169444","viewed":81,"name":"Fork Fractal Ce sleeplessm 431","username":"sleeplessmonk","description":"added audioreactivity and psychedelic colors","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"ct2cDK","parentname":"Fractal Centered-2"},"renderpass":[{"inputs":[{"id":"ldt3DN","filepath":"https://soundcloud.com/mindfulnomads/internal-strife","previewfilepath":"https://soundcloud.com/mindfulnomads/internal-strife","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t) {\n    vec3 a = vec3(0.6, 0.4, 0.5);\n    vec3 b = vec3(0.7, 0.3, 0.5);\n    vec3 c = vec3(0.8, 1.0, 0.6);\n    vec3 d = vec3(0.76, 0.41, 0.96);\n\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 4.0; ++i) {\n        uv = fract(uv * 1.6) - 0.5;\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 color = palette(length(uv0) + i * 0.2 + iTime * 0.4);\n        d = sin(d * 12.0 + iTime) / 12.0;\n        d = abs(d);\n        d = pow(0.015 / d, 1.3);\n\n        finalColor += color * d;\n    }\n    \n    // Retrieve audio amplitude from iChannel0\n    float audioAmplitude = texture(iChannel0, vec2(0.5)).r;\n    \n    vec3 neonColor = vec3(\n        0.5 + 0.5 * sin(finalColor.r * 10.0 + iTime * audioAmplitude * 30.0),\n        0.5 + 0.5 * sin(finalColor.g * 10.0 + iTime * audioAmplitude * 30.0 + 1.0),\n        0.5 + 0.5 * sin(finalColor.b * 10.0 + iTime * audioAmplitude * 30.0 + 2.0)\n    );\n\n    fragColor = vec4(neonColor, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}