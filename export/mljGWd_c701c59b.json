{"ver":"0.1","info":{"id":"mljGWd","date":"1674147844","viewed":83,"name":"raymarching with normal","username":"ZeroSkyline","description":"raymarching with normal","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct ray \n{\n    vec3 p;\n    float t;\n    vec3 d;\n};\nstruct hit\n{\n    float t;\n    vec3 n;\n};\nfloat sd_sphere(vec3 p, vec3 c, float r) \n{\n    return length(p-c)-r; \n}\nfloat sdf(vec3 p)\n{\n    return sd_sphere(p, vec3(0), .5);\n}\nvec3 pixel_dir(float fov, vec2 fragCoord) \n{\n    vec3 dir;\n    dir.xy = fragCoord-iResolution.xy*.5;\n    dir.z = -iResolution.y*.5/tan(radians(fov)*.5);\n    return normalize(dir);\n}\nvec3 get_normal(vec3 p)\n{\n    float d = .0001;\n    float x = sdf(vec3(p.x+d,p.y,p.z)) - sdf(vec3(p.x-d, p.y, p.z));\n    float y = sdf(vec3(p.x,p.y+d,p.z)) - sdf(vec3(p.x, p.y-d, p.z));\n    float z = sdf(vec3(p.x,p.y,p.z+d)) - sdf(vec3(p.x, p.y, p.z-d));\n    return normalize(vec3(x,y,z));\n}\nhit marching(ray r) \n{\n    hit h;\n    float t = r.t;\n    for(int i = 0; i != 256; i++) \n    { \n        vec3 p = r.p + vec3(t) * r.d;\n        float sd = sdf(p);\n        if(sd < .0001) \n        {\n            h.t = t;\n            h.n = get_normal(p);\n            return h;\n        }\n        t += sd; \n    }\n    return h; \n} \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n    ray r; r.p = vec3(0,0,2.); r.t = 0.; r.d = pixel_dir(30., fragCoord);\n    hit h = marching(r);\n    \n    if(h.t > 0.)\n    {\n        fragColor = vec4(h.n, 1.);\n    }\n    else\n    {\n        fragColor = vec4(0.);\n    }\n}","name":"Image","description":"","type":"image"}]}