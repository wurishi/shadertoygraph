{"ver":"0.1","info":{"id":"4sy3RV","date":"1455279482","viewed":420,"name":"Fake Diffraction","username":"trirop","description":"Quick and dirty attempt to recreate wave diffraction at a single slit.<br/>Use mouse to change slit position and size.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","simulation","animated","physics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by Robert SchÃ¼tze - trirop/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n\n#define max_iter 100\n\nfloat round_wave(vec2 r,vec2 p){\n\treturn sin(100.0*length(p-r)-iDate.w*20.0)*0.5+0.5;\n}\n\nfloat wave(vec2 p,float x){\n\treturn sin(100.0*p.x-x-iDate.w*20.0)*0.5+0.5;\n}\n\nvoid mainImage(out vec4 o, vec2 uv){\n\tvec2 p = uv/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    if((iMouse.x<=0.0)||(iMouse.y<=0.0)){mouse.x=0.2,mouse.y=0.5;};\n\tfloat color = 0.0;\n\tvec2 start = vec2(0.6,mouse.y-mouse.x*0.5-0.01);\n\tvec2 end = vec2(0.6,mouse.y+mouse.x*0.5+0.01);\n\tfor(int i=0;i<max_iter;i++){color+=round_wave(mix(start,end,float(i)/float(max_iter-1)),p);}\n\tfloat wall =(1.0-float(end.x-0.03<p.x&&p.x<end.x&&(p.y<start.y||p.y>end.y)));\n\to = vec4(mix(color/float(max_iter),wave(p,3.6),clamp((end.x-p.x)/0.03,0.,1.)))*wall;\n}\n","name":"Image","description":"","type":"image"}]}