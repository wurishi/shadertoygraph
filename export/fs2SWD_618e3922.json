{"ver":"0.1","info":{"id":"fs2SWD","date":"1620261520","viewed":583,"name":"Neon Color Falloff","username":"sdfgeoff","description":"The neon function provides a nice color ramp falloff for lighting glowing things.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["color","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 neon(float val, vec3 color) {\n\tfloat r = clamp(val, 0.0, 1.0);\n    float r2 = r * r;\n    float r4 = r2 * r2;\n    float r16 = r4 * r4;\n    vec3 c = color;\n    vec3 c2 = pow(color, vec3(4.0)); // A darker, more saturated version of color\n    \n\tvec3 outp = vec3(0.0);\n\toutp += c2 * r2; // Darker color falloff\n\toutp += c * r4; // Specified Color main part\n\toutp += vec3(1.0) * r16; // White core\n\treturn outp;\n}\n\nfloat ncos(float val) {\n    return cos(val) * 0.5 + 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // A gradient from white in the center to black at the edges\n    float center_bar = (1.0 - abs(uv.x - 0.5)) * 2.0 - 1.0;\n    \n    // Color for the bar\n    vec3 color = vec3(ncos(iTime), ncos(iTime + 2.0), ncos(iTime + 4.0));\n    \n    vec3 col = neon(center_bar, color);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}