{"ver":"0.1","info":{"id":"lc3GWN","date":"1711699516","viewed":51,"name":"Circle Sound","username":"kiyamada96","description":"cicle","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raym"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // ビューポートの中心\n    vec2 center = iResolution.xy * 0.5;\n    // 画面上の現在のピクセルと中心との距離\n    float distance = length(fragCoord - center);\n    \n    // スペクトルデータの取得\n    float lowFreq = texture(iChannel0, vec2(0.1, 0.5)).r; // 低音域\n    float midFreq = texture(iChannel0, vec2(0.5, 0.5)).r; // 中音域\n    float highFreq = texture(iChannel0, vec2(0.9, 0.5)).r; // 高音域\n    \n    // スケーリングファクター\n    float scale = 200.0;\n    \n    // 各音域に応じた半径の調整\n    float lowRadius =100.0 + lowFreq * 400.0f;\n    float midRadius = 100.0 + midFreq * scale;\n    float highRadius = 100.0 + highFreq * scale;\n    \n    // アウトラインの幅\n    float lineWidth = 1.5;\n    \n    \n    // アウトラインの描画\n    if (abs(distance - lowRadius) < lineWidth) {\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0); // 白低音\n    } else if (abs(distance - midRadius) < lineWidth) {\n        fragColor = vec4(1.0, 1.0, 1.0, 1.0); // 青紫で中音域\n    } else if (abs(distance - highRadius) < lineWidth) {\n        fragColor = vec4(0.0, 114.0/256.0, 255.0/256.0, 1.0); // 白で高音域\n    } else {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0); // 背景色\n    }\n}\n","name":"Image","description":"","type":"image"}]}