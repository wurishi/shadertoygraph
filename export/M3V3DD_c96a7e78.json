{"ver":"0.1","info":{"id":"M3V3DD","date":"1717686172","viewed":62,"name":"(EasyTutorial) Laser Beams","username":"Muhammad","description":"tutorial on how to create laser beams","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["laser"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //blinkish laser beam  , maybe fract func required cuz 0 -> 1 => 0 -> 1 ...\n    vec2 originaluv = (fragCoord.xy / iResolution.xy); // range (0->1) bottom left to right. uv.x starts from 0 to 1 left to right. remember this\n    \n    vec2 pos = ( fragCoord.xy / iResolution.xy * 2.0 ) - 1.0; // offsetting the center to middleo f the screen uv range = (-1 , 1);\n    \n    float blinking =sin(fract(iTime * 2.) * 3.); // ok so if given iTime with multiplication inside it it determines the speed of the blinking effect. multiplying as a whole give a good amplitude. smoothing it out with sin!\n    \n    vec3 color =  (vec3(0.,0.5,1.) * blinking / abs(pos.y * 5.)) * originaluv.x * 2.; // the first vec3(0.,0.5,1.) determines color , dividing by just pos.y will give a blinking from 0 to 1 leaving the black as black so we take abs\n    //multiplying in last with uv.x means that from 0->1 the original uv we make an offset to increase the size of the beam\n    \n    fragColor = vec4(color ,1.);\n\n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}