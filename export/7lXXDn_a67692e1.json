{"ver":"0.1","info":{"id":"7lXXDn","date":"1625472917","viewed":90,"name":"Pentagonal Star","username":"Spongman","description":"Draws a pentagonal star using winding rules","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["starwindingrule"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415926;\n\nvec2 poly(float i, float N) {\n    float a = (i * 2. + 0.5) * PI / N;\n    return vec2(cos(a), sin(a));\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return mix(min2, max2, (value - min1) / (max1 - min1));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = 3.*(fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    \n    float C = 0.;\n    const float N = 5.;\n    for (float i = 0.; i < N; i ++) {\n        vec2 p0 = poly(i+0., N);\n        vec2 p1 = poly(i+2., N);\n        float px = map(uv.y, p0.y, p1.y, p0.x, p1.x);\n        C += smoothstep(0., .05, px - uv.x) * sign(p0.y - p1.y);\n    }\n    \n    col.rgb = vec3(smoothstep(-1./N, -1.5/N, C/N));\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}