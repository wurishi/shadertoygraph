{"ver":"0.1","info":{"id":"XlVGDV","date":"1476959137","viewed":157,"name":"Space Warp","username":"Patapom","description":"Ludicrous speed!","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["space","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 ComputeOuterColor( vec2 _uv, float _radius ) {\n   \nfloat\tamplitude = 2.0;\n_uv.x += amplitude * sin( -0.6519 * iTime ) * cos( 0.23532 * iTime );\n_uv.y += amplitude * sin( -0.13219 * iTime ) * cos( 0.198492 * iTime );\n    \n\tfloat\trotationAngle = -iTime;\n    vec2\trot = vec2( cos(rotationAngle), sin(rotationAngle) );\n\tvec2\tuv = vec2( _uv.x * rot + _uv.y * vec2( -rot.y, rot.x ) );\n\n    float\tgridSize = 4.0 + 2.0 * sin( iTime );\n\n    vec2\ttileUV = abs( 2.0 * fract( gridSize * uv ) - 1.0 );\n    float\tthreshold = max( -100.0 * gridSize, 0.95 - 0.01 * _radius * _radius * gridSize );\n    float\tgrid = smoothstep( threshold, 1.0, max( tileUV.x, tileUV.y ) );\n\treturn mix( vec3( 1.0 ), vec3( 0.0 ), grid );\n}\n\nvec3 ComputeInnerColor( vec2 _uv, float D ) {\n    float\td = 1.0 / D;\n    vec2\tinsideUV = _uv * d*d;\n    return ComputeOuterColor( insideUV, d );\n}\n\nvec3 ComputeOuterColor2( vec2 _uv, float d ) {\n    float\tD = pow( d, 2.0 * sin( 0.33 * iTime ) );\n    vec2\toutsideUV = _uv * D;\n    return ComputeInnerColor( outsideUV, D );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2\tuv = vec2( (iResolution.x / iResolution.y) * (2.0 * fragCoord.x / iResolution.x - 1.0),\n                      \t\t\t\t\t\t\t\t\t  2.0 * fragCoord.y / iResolution.y - 1.0 );\n   \n\tuv *= 2.0 + 1.5 * sin( iTime );\n    \n    float\tradius = length( uv );\n    \n    fragColor = vec4( radius < 1.0 ? ComputeInnerColor( uv, radius ) : ComputeOuterColor2( uv, radius ), 1.0 );\n}","name":"Image","description":"","type":"image"}]}