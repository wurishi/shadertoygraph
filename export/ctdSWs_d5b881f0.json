{"ver":"0.1","info":{"id":"ctdSWs","date":"1685877823","viewed":82,"name":"tan hyberpolique","username":"mtoon","description":"shader","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    vec3 palette( float t ) {\n    vec3 a = vec3(0.300, 0.500, 0.300); \n    vec3 b = vec3(1.248, -0.932, 0.448);\n    vec3 c = vec3(1.438, 0.748, 1.328); \n    vec3 d = vec3(1.198, 1.532, 1.865);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n    vec3 palette2( float t ) {  \n    vec3 a = vec3(0.529,0.529,0.529);\n    vec3 b = vec3(1., -0.292, -1.);\n    vec3 c = vec3(0.638, -1.492, 1.648);\n    vec3 d = vec3(-1.305, -1.123, 0.235);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/(iResolution.xy);\n    uv = uv +(-iMouse.xy/iResolution.xy);\n    vec2 fractUV = fract(uv) - 0.5;\n    float d = length(uv);\n    float fractD = length(fractUV);\n\n    // Time varying pixel color\n    vec3 col = palette(tanh(fractD*2.)+(iTime/5.));\n    col = (cos(iTime)/3.+0.5)/col;\n    col = col * palette2(tanh(d)+(iTime/3.));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}