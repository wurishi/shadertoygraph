{"ver":"0.1","info":{"id":"4dyBDt","date":"1530939441","viewed":86,"name":"Mountain Road","username":"ThanksSkeleton","description":"Playing around with some basic trig and masking","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["newbie"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.y) -\n          smoothstep( pct, pct+0.02, st.y);\n}\n\nfloat plot_inv(vec2 st, float pct){\n  return  smoothstep( pct-0.02, pct, st.x) -\n          smoothstep( pct, pct+0.02, st.x);\n}\n\nfloat invert(float f){\n    return -f + 1.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 st = (2.* (fragCoord.xy) / iResolution.xy) - vec2(1., 1.);\n\n    float negx_mask = step(st.x, 0.);\n    float negy_mask = step(st.y, 0.);\n\n    float centerCircle = step(sqrt(st.x*st.x + st.y * st.y), .2);\n\n    float gridmask = step(cos(st.x*50.), .5) * step(cos(st.y*50.), .5)  ;\n\n    float fenceMask = step(cos(st.x*200. + iTime *-70.), .9) * step(cos(st.y*50.), .9);\n    float fenceMask2 = fenceMask * step(st.y, -.4) * step(-.5, st.y);\n\n\n    float mtGreen = step(st.y, .2 *sin(st.x* 20. + iTime * -3.) + .1* cos(st.x* 10. + iTime * -3.) + .1);\n    float mtWhite = step(st.y, .01 *sin(st.x* 90. + iTime * -3.) + .1);\n    float mtRiver = \n    step(st.y, .04 *sin(st.x* 90. + iTime * -3.)* .4 *sin(st.x* 20. + iTime * -3.)  - .6)\n    * step(.04 *sin(st.x* 90. + iTime * -3.) * .4 *sin(st.x* 20. + iTime * -3.) - .8, st.y);\n\n    vec3 riverColor = vec3(0,0,1) + .2* sin(st.x*1.+iTime*3.) * cos(st.y*4.+iTime*4.) * vec3(1,1,0);\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(u_time+st.xyx+vec3(0,2,4)+ negx_mask *vec3(0,3,4)+ negy_mask * vec3(0,1,1) + gridmask);\n    vec3 col = \n             //plot(st, 2.*st.x*st.x) * vec3(.0, 1., 1.) \n             //+ plot(st, 2.*st.x*st.x*st.x) * vec3(.0, 1., 0)\n             //+ plot(st, 0.) * vec3(1, 1., 1)\n             + mtGreen * vec3(0,.4,0) * invert(fenceMask2)\n             + invert(mtWhite) * mtGreen * vec3(1,1,1) \n             + mtRiver * riverColor\n             + fenceMask2 * vec3(.3, .3, .3)\n             //+ plot_inv(st, 0.) * vec3(1, 1., 1)\n             // + centerCircle * invert(gridmask) * vec3(.2, .2, .9)\n             + gridmask * vec3(.3, .4, .7) * invert(mtGreen);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}