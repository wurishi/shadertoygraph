{"ver":"0.1","info":{"id":"7sSXRW","date":"1619754139","viewed":128,"name":"test_ddx_ddy_fwidth","username":"winsen","description":"ddx,ddy,fwidth","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fwidth","ddx","ddy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    //dFdx\n    bool testddx = false;\n    if(testddx)\n    {\n        float ddx = dFdx(uv.x * uv.x);\n        ddx *= 1000.0;\n        fragColor.r = ddx;\n\n        //simulate\n        float uvx2 = uv.x + 1.0 / iResolution.x;\n        float ddx2 = uvx2 * uvx2 - uv.x * uv.x;\n        ddx2 *= 1000.0;\n        fragColor.r = ddx2;\n    }\n    \n    //dFdy\n    bool testddy = false;\n    if(testddy)\n    {\n        float ddy = dFdy(uv.y * uv.y);\n        ddy *= 1000.0;\n        fragColor.g = ddy;\n\n        //simulate\n        float uvy2 = uv.y + 1.0 / iResolution.y;\n        float ddy2 = uvy2 * uvy2 - uv.y * uv.y;\n        ddy2 *= 1000.0;\n        fragColor.g = ddy2;\n    }\n    \n    //fwidth\n    bool testfwidth = true;\n    if(testfwidth)\n    {\n        vec2 dduv = fwidth(-uv * uv);\n        dduv *= 1000.0;\n        fragColor.rg = dduv;\n        \n        //simulate\n        vec2 ddxuv = dFdx(-uv * uv);\n        vec2 ddyuv = dFdy(-uv * uv);\n        vec2 dduv2 = abs(ddxuv) + abs(ddyuv);\n        dduv2 *= 1000.0;\n        fragColor.rg = dduv2;\n    }\n}","name":"Image","description":"","type":"image"}]}