{"ver":"0.1","info":{"id":"7slSW4","date":"1618669418","viewed":136,"name":"Simple loading icon","username":"SnoopethDuckDuck","description":"e","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["cool"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float func(vec2 uv, float t)\n{\nvec2 dir = uv - 0.5;\nfloat theta = atan(dir.y, dir.x);\nfloat d = length(dir + .28 * (1. +cos( theta + 3. * t)) * vec2(cos(t), sin(t))) * length(dir);\nreturn 1. - smoothstep(d,0.015 + 0.005 * cos(0.5 * t), 0.015 + 0.005 *  (1. +cos(0.5 * t)));\n}\n\nconst float pi = 3.1415;\nconst float pi2 = 2. * pi / 3.;\nconst float pi3 = 4. * pi /3.;\nconst float pi4 = 1. * pi /180.;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.y - vec2(0.375,0);\nfloat t= 0.95 * iTime;\n\nvec2 m = 0.01 * vec2(cos(t),sin(t));\nvec2 n = 0.01 * vec2(cos(t+ 3.14159),sin(t+3.14159));\nvec3 col = vec3(func(uv,t + pi4 * cos(3. * t)), func(uv + m,t+pi4 * cos(3. * t+pi2)),func(uv+ n,t+pi4 * cos(3. * t+pi3)));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}