{"ver":"0.1","info":{"id":"ttffRl","date":"1597427923","viewed":109,"name":"A Simple triangle","username":"vlequang","description":"Just a simple triangle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float point(vec2 uv, vec2 pt) {\n    return distance(pt, uv);\n}\n\nfloat line(vec2 uv, vec2 pt1, vec2 pt2) {\n    vec2 p = uv;\n    vec2 a = pt1;\n    vec2 b = pt2;\n    // from https://www.shadertoy.com/view/tt23WW\n    vec2 v = a, w = b;\n    \n    float l2 = pow(distance(w, v), 2.);\n    if(l2 == 0.0) return distance(p, v);\n    \n    float t = clamp(dot(p - v, w - v) / l2, 0., 1.);\n    vec2 j = v + t * (w - v);\n    \n    return distance(p, j);\n}\n\nvec4 draw(vec4 originalColor, float dist, vec4 color, float thickness) {\n    vec4 col = (1. - smoothstep(.0001, thickness, dist)) * color;\n\treturn max(originalColor, col);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx;\n    vec4 m = iMouse / iResolution.xxxx;\n    \n    vec4 color = vec4(0.);\n    \n    vec2 pt1 = vec2(.3, .3);\n    vec2 pt2 = vec2(.7, .3);\n    \n    color = draw(color, point(uv, pt1), WHITE, THICK);\n    color = draw(color, point(uv, pt2), WHITE, THICK);\n    color = draw(color, point(uv, m.xy), RED, THICK);\n    color = draw(color, line(uv, pt1, pt2), BLUE, THIN);\n    color = draw(color, line(uv, pt1, m.xy), YELLOW, THIN);\n    color = draw(color, line(uv, m.xy, pt2), YELLOW, THIN);\n    \n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define RED vec4(1., 0., 0., 1.)\n#define WHITE vec4(1.)\n#define BLUE vec4(0., 0., 1., 1.)\n#define YELLOW vec4(1., 1., 0., 1.)\n#define THICK .02\n#define THIN .005\n","name":"Common","description":"","type":"common"}]}