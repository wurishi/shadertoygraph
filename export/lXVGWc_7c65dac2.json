{"ver":"0.1","info":{"id":"lXVGWc","date":"1718354825","viewed":61,"name":"Random Moving Stars","username":"ldldldl","description":"Grid based random moving stars","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["random","star"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float star(vec2 uv, vec2 pos, float size, float lifeValue, float lifeThres){\n    float star = 1.0 - clamp(distance(uv, pos) / size, 0.0, 1.0);\n    star = star * star *0.6;\n    star = max(star, clamp((1.0 - distance(uv, pos) / (size * 0.05)) * 2.0, 0.0, 1.0));\n    star *= clamp((lifeValue - lifeThres) * 10.0, 0.0, 1.0);\n    return star;\n}\n\nfloat randomMoving(vec2 uv){\n    float seed = fract(dot(floor(uv), vec2(0.8514, 19.5812)) * 0.001) * 1000.0;\n    vec2 uvs = fract(uv);\n    vec4 speed = fract(seed * vec4(0.581, 0.442, 0.535, 0.491) + vec4(0.813, 0.442, 1.955, 0.112));\n    vec4 offset = seed * vec4(3.813, 4.415, 2.581, 5.191) + vec4(0.235, 0.653, 0.313, 0.854);\n    vec4 spX = (sin(iTime * speed + offset) + 1.25) * 0.4;\n    speed = fract(seed * vec4(0.481, 0.593, 0.575, 0.511) + vec4(1.857, 0.137, 1.024, 2.151));\n    offset = seed * vec4(2.191, 5.773, 0.145, 5.187) + vec4(0.995, 1.833, 0.248, 0.112);\n    vec4 spY = (cos(iTime * speed + offset) + 1.25) * 0.4;\n    vec4 size = fract(offset * 19.815) * 0.1 + 0.08;\n    float life = fract(seed * 11.513 + 13.995);\n    //size = vec4(0.15, 0.15, 0.15, 0.15);\n    \n    float result = star(uvs, vec2(spX.x, spY.x), size.x, 0.75, life);\n    result += star(uvs, vec2(spX.y, spY.y), size.y, 0.5, life);\n    result += star(uvs, vec2(spX.z, spY.z), size.z, 0.25, life);\n    result += star(uvs, vec2(spX.w, spY.w), size.w, 0.0, life);\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 uvcol = normalize(vec3(uv, 1.0 - distance(uv, vec2(0.0, 0.0))));\n    uv  *= iResolution.xy / iResolution.y;\n    // Time varying pixel color\n    vec3 col = 2.0 * uvcol * randomMoving(uv * 9.0);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}