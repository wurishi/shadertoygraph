{"ver":"0.1","info":{"id":"4tscWS","date":"1506939323","viewed":81,"name":"RayMarching_Part 3","username":"guyue","description":"第三次","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_RAY_SCALE = 255;\nconst float MAX_DIST = 100.0;\nconst float MIN_DIST = 0.0;\nconst float SCALE = 0.0001;\n\nfloat cubeSDF(vec3 p){\n\n    vec3 d = abs(p)-vec3(1.0,1.0,1.0);\n    \n    float insideDistance  = min(max(d.x,max(d.y,d.z)),0.0);\n  \n    float outsideDistance = length(max(d,0.0));\n    \n    return insideDistance+outsideDistance;\n\n}\n\n\nfloat sphereSDF(vec3 p){\n\n  \n   return length(p)-1.0;\n\n}\n\n\nfloat sceneSDF(vec3 p){\n\n\n   return cubeSDF(p)-0.1;\n  \n\n}\n\n\nfloat ShortestDistanceToObjSurface(vec3 eye, vec3 rayDir,float start,float end){\n\n       float depth = start;\n    \n    \n    for(int i = 0;i<MAX_RAY_SCALE;i++){\n        \n        float dist = sceneSDF(eye+rayDir*depth);\n        \n        if(dist<SCALE){\n        \n         return depth;        \n        }\n        depth+=dist;\n        \n        if(depth>=end){\n        \n        return end;\n        \n        }\n\n    }\n   \n     return end;\n}\n\n\n\nvec3 RayDir(vec2 size,vec2 fragcood){\n\n    vec2 xy = fragcood-size/2.0;\n    \n    float z = size.y+500.0;\n    \n    return normalize(vec3(xy,-z));\n   \n\n    \n    \n}\n\n\nvec3 createNormal(vec3 p){\n\nreturn normalize(vec3(\n\n    sceneSDF(vec3(p.x+SCALE,p.y,p.z))-sceneSDF(vec3(p.x-SCALE,p.y,p.z)),\n    sceneSDF(vec3(p.x,p.y+SCALE,p.z))-sceneSDF(vec3(p.x,p.y-SCALE,p.z)),\n    sceneSDF(vec3(p.x,p.y,p.z+SCALE))-sceneSDF(vec3(p.x,p.y,p.z-SCALE))\n\n));\n\n}\n\n\n\n\nvec3 PhongLight(vec3 k_d,vec3 k_s,vec3 eye,vec3 p,vec3 LightPos,vec3 LightColor,float alpha){\n    \n     vec3 N = createNormal(p);\n     vec3 L = normalize(LightPos-p);\n     vec3 V = normalize(eye-p);\n     vec3 R = normalize(reflect(-L,N));\n     \n     float LdotN = max(dot(L,N),0.0);\n    \n     float RdotN = max(dot(R,N),0.0);\n    \n    if(LdotN<0.0){\n    \n       return vec3(0.0,0.0,0.0);\n        \n    }\n    \n    if(RdotN<0.0){\n    \n       \n       return LightColor*LdotN*k_d;\n        \n    }\n    \n    \n    \n    \n    return LightColor*LdotN*k_d+pow(RdotN,alpha)*k_s;\n\n\n\n\n}\n\n\nvec3 PhongLightPosColor(vec3 k_d,vec3 k_a,vec3 k_s,vec3 eye,vec3 p,float alpha){\n        \n    vec3 color = k_a*vec3(0.5,0.5,0.5);\n    \n    vec3 LightPos1 = vec3(4.0*sin(iTime),2.0,4.0*cos(iTime));\n    \n    vec3 LightColor1 = vec3(0.2,0.2,0.2);\n    \n    color+= PhongLight(k_d, k_s, eye, p, LightPos1, LightColor1, alpha);\n    \n    \n\n\nreturn color;\n\n\n\n}\n\n\n\nmat4 ViewMatri(vec3 eye,vec3 center,vec3 up){\n    vec3 f = normalize(center-eye);\n    vec3 s = normalize(cross(f,up));\n    vec3 u = cross(s,f);\n\nreturn mat4(\n    \n    vec4(s,0.0),\n    vec4(u,0.0),\n    vec4(-f,0.0),\n    vec4(0.0,0.0,0.0,1.0)\n\n\n\n);\n\n}\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 eye = vec3(8.0, 5.0,7.0);\n    \n    \n    vec3 dir = RayDir(iResolution.xy,fragCoord);\n   \n\n    \n    mat4 viewtoworld = ViewMatri(eye,vec3(0.0,0.0,0.0),vec3(0.0,1.0,0.0));\n    \n    vec3 worldView =(viewtoworld*vec4(dir,0.0)).xyz;\n    \n    float dis = ShortestDistanceToObjSurface(eye,worldView,MIN_DIST,MAX_DIST);\n    \n    vec3 surface = eye+worldView*dis;\n  \n    float alpha = 10.0;\n    \n    vec3 LightColor = vec3(0.4,0.3,0.8);\n    \n    vec3 k_d = vec3(0.5,0.6,0.9);\n    \n    vec3 k_a = vec3(0.2,0.2,0.2);\n    \n    vec3 k_s = vec3(1.0,1.0,1.0);\n    \n    if(dis>50.0){\n    \n      fragColor = vec4(0.0,0.0,0.0,1.0);\n     return;\n    \n    }\n    \n       vec3 col =  PhongLightPosColor( k_d, k_a,k_s,eye,surface, alpha);\n        //  vec3 col =  vec3(1.0,0.3,0.0);\n        fragColor = vec4(col,1.0);\n    \n   // fragColor = vec4(1.0,0.3,0.0,1.0);\n\t//vec2 uv = fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n}","name":"Image","description":"","type":"image"}]}