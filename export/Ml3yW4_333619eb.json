{"ver":"0.1","info":{"id":"Ml3yW4","date":"1532592930","viewed":807,"name":"Bilinear software filtering","username":"ThomasSchander","description":"Recursive. Expected result: No image change.","likes":3,"published":3,"flags":32,"usePreview":1,"tags":["bilinear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = textureLod(iChannel0, uv, 0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec4 textureLodEmu(sampler2D sampler, vec2 uv, float DUMMY)\n{\n    vec2 samplingPosition = uv;\t\t \n    vec2 samplingFragment = samplingPosition * vec2(textureSize(sampler, 0)) - vec2(0.5);\n    vec2 f = fract(samplingFragment);\n    ivec2 samplingInteger = ivec2(samplingFragment);\t\n    ivec2 bilinearOffsets[4] = ivec2[4](ivec2(0, 0), ivec2(1, 0), ivec2(0, 1), ivec2(1, 1));\n\n    vec4 bilinearReads[4];\n    bilinearReads[0] = texelFetch(sampler, samplingInteger + bilinearOffsets[0], 0);\n    bilinearReads[1] = texelFetch(sampler, samplingInteger + bilinearOffsets[1], 0);\n    bilinearReads[2] = texelFetch(sampler, samplingInteger + bilinearOffsets[2], 0);\n    bilinearReads[3] = texelFetch(sampler, samplingInteger + bilinearOffsets[3], 0);\n\n    vec4 tA = mix( bilinearReads[0], bilinearReads[1], vec4(f.x) );\n    vec4 tB = mix( bilinearReads[2], bilinearReads[3], vec4(f.x) );\n    return mix( tA, tB, vec4(f.y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    if(iFrame < 10)\n    {\n    \tfragColor = textureLod(iChannel0, uv, 0.0);\n    }\n    else\n    {\n        vec2 samplingPosition = uv;\n\t\tfragColor = textureLodEmu(iChannel1, uv, 0.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}