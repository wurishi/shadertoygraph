{"ver":"0.1","info":{"id":"3lsXzH","date":"1562098172","viewed":152,"name":"AuroraBorealis vs. solar eclipse","username":"clintolibre","description":"Mashup of https://www.shadertoy.com/view/MdBfzR AuroraBorealis  by albertelwin and https://www.shadertoy.com/view/ttlXzn solar eclipse by jn\nClick to move the moon!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["mashup"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 day=vec3(0.2,0.3,0.5);\nvec3 night=vec3(0.0,0.0,0.0);\nvec3 sun=vec3(2.0,2.0,2.0);\n\nvec3 background(vec2 pos,vec2 mouse)\n{\n\n    float m=length(pos);\n    float ml=length(mouse);\n    \n    vec3 bgcol=mix(night,day,ml/0.5);\n    if (ml>.5) {\n    bgcol = day;\n    }\n    float moomcircle=step(0.08,distance(mouse,pos));\n    float suncircle=step(0.09,m);\n    vec3 returncol=mix(sun,bgcol,suncircle);\n\treturncol*=moomcircle;\n    return returncol;\n}\nfloat rand(float x) {\n\tfloat res = 0.0;\n\t\n\tfor (int i = 0; i < 5; i++) {\n\t\tres += 0.240 * float(i) * sin(x * 0.68171 * float(i));\n\t\t\n\t}\n\treturn res;\n\t\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n#define TAU 6.2831853071\n\n\tvec2 uv2 = fragCoord.xy / iResolution.xy;\n    \n    float o = texture(iChannel1, uv2 * 0.25 + vec2(0.0, iTime * 0.025)).r;\n    float d = (texture(iChannel0, uv2 * 0.25 - vec2(0.0, iTime * 0.02 + o * 0.02)).r * 2.0 - 1.0);\n    \n    float v = uv2.y + d * 0.1;\n    v = 1.0 - abs(v * 2.0 - 1.0);\n    v = pow(v, 2.0 + sin((iTime * 0.2 + d * 0.25) * TAU) * 0.5);\n    \n    vec3 color = vec3(0.0);\n    \n    float x = (1.0 - uv2.x * 0.75);\n    float y = 1.0 - abs(uv2.y * 2.0 - 1.0);\n    color += vec3(x * 0.5, y, x) * v;\n    \n    vec2 seed = fragCoord.xy;\n    vec2 r;\n    r.x = fract(sin((seed.x * 12.9898) + (seed.y * 78.2330)) * 43758.5453);\n    r.y = fract(sin((seed.x * 53.7842) + (seed.y * 47.5134)) * 43758.5453);\n\n    float s = mix(r.x, (sin((iTime * 2.5 + 60.0) * r.y) * 0.5 + 0.5) * ((r.y * r.y) * (r.y * r.y)), 0.04); \n    color += pow(s, 70.0) * (1.0 - v);\n    \n    night = color;\n    fragColor.a = 1.0;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-0.5;\n\tuv.x*=iResolution.x/iResolution.y;\n    float floorBounceCount = 0.0;\n    float rk = 0.025;\n    float speed = 5.0;\n    vec2 mouse=iMouse.xy/iResolution.xy-0.5;\n    if (iMouse.z>0.0) {\n    } else {\n    mouse = vec2(abs(mod(iTime/speed, 2.0)-1.0)*(1.0-2.0*rk)+rk, pow(0.5, floorBounceCount)*abs(sin(iTime/speed))*0.45+rk);\n    mouse.x=mouse.x-.5;\n    mouse.y=mouse.y*2.0;\n    mouse.y=mouse.y-.5;\n    \n    }\n    mouse.x*=iResolution.x/iResolution.y;;\n    \n    \n    \n\tvec3 col=background(uv,mouse);\n    \n\t\n    \n    vec3 light=vec3(0.0,0.0,0.0);\n    int iterations=50;\n    vec2 incr=uv/float(iterations);\n    vec2 p=vec2(0.0,0.0)+incr;\n    for(int i=2;i<iterations;i++)\n    {\n        light+=background(p,mouse);\n        p+=incr;\n    }\n    light/= float(iterations)*max(0.001,dot(uv,uv))*80.0;\n    \n    vec2 star = fragCoord.xy;\n    \n    //col+=step(2.1,rand(star.y * star.x))*step(0.7,rand(star.y + star.x))*step(length(mouse),0.15)*mix(vec3(2.0,2.0,2.0),day,length(mouse)/0.5);\n\n    float moomcircle=smoothstep(0.08,0.085,distance(mouse,uv));\n    col*=moomcircle;\n    if (moomcircle <1.) {\n    \tcol += vec3((1.0-moomcircle)*length(mouse)*texture(iChannel2, uv-mouse+.3));\n    }\n    // Output to screen\n    fragColor = vec4(col+light,1.0);\n}","name":"Image","description":"","type":"image"}]}