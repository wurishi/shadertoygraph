{"ver":"0.1","info":{"id":"l3lfWS","date":"1730163423","viewed":64,"name":"turkish_flag_cleansheet","username":"XiFT","description":"flag","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    vec3 toNormalizedRGB(float r, float g, float b) {\n    return vec3(r/255.0, g/255.0, b/255.0);\n    }\n\n    vec4 drawRectangle(vec2 uv, vec2 pos, float width, float height, vec3 color) {\n    vec2 d = abs(uv - pos) - vec2(width, height) / 2.0;\n    float dist = length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n    float alpha = 1.0 - smoothstep(0.0, 1.0/iResolution.y, dist);\n    return vec4(color, alpha);\n    }\n\n    vec4 drawCircle(vec2 uv, vec2 pos, float radius, vec3 color) {\n    float dist = length(uv - pos) - radius;\n    float alpha = 1.0 - smoothstep(0.0, 1.0/iResolution.y, dist);\n    return vec4(color, alpha);\n    }\n\n    float sdStar5(in vec2 p, in float r, in float rf) {\n    float angle = 3.141592653589793 / 10.0;\n    float c = cos(angle);\n    float s = sin(angle);\n    p = mat2(c, -s, s, c) * p;\n    \n    const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n    const vec2 k2 = vec2(-k1.x, k1.y);\n    p.x = abs(p.x);\n    p -= 2.0*max(dot(k1,p), 0.0)*k1;\n    p -= 2.0*max(dot(k2,p), 0.0)*k2;\n    p.x = abs(p.x);\n    p.y -= r;\n    vec2 ba = rf*vec2(-k1.y, k1.x) - vec2(0,1);\n    float h = clamp(dot(p,ba)/dot(ba,ba), 0.0, r);\n    return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n    }\n\n    void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 center = vec2(0.5*iResolution.x/iResolution.y, 0.5);\n    float width = 1.5;\n    float height = 1.0;\n    \n    float leftEdge = center.x - width/2.0;\n    \n    vec4 backgroundLayer = vec4(toNormalizedRGB(.0, .0, .0), 1.0);\n    \n    vec3 rectangleColor = toNormalizedRGB(227.0, 10.0, 23.0);\n    vec4 rectangleLayer = drawRectangle(uv, center, width, height, rectangleColor);\n    \n    float firstCircleRadius = height * 0.5 / 2.0; \n    vec2 firstCirclePos = vec2(center.x - 0.250, center.y);; \n    \n    float secondCircleRadius = height * 0.4 / 2.0; \n    vec2 secondCirclePos = vec2(center.x - 0.1875 , center.y );\n    vec3 circleColor = toNormalizedRGB(255.0, 255.0, 255.0);\n    float outerDist = length(uv - firstCirclePos) - firstCircleRadius;\n    float innerDist = length(uv - secondCirclePos) - secondCircleRadius;\n    \n    float crescentEdge = smoothstep(-1.0/iResolution.y, 1.0/iResolution.y, outerDist);\n    float crescentHole = smoothstep(-1.0/iResolution.y, 1.0/iResolution.y, innerDist);\n    vec4 crescentLayer = vec4(circleColor, (1.0 - crescentEdge) * crescentHole);\n    \n    vec2 starCenterPos = vec2(center.x + 0.0708333333333 , center.y ); \n    float r = height*0.25/2.0;\n    float rf = 0.38;\n    float d = sdStar5(uv - starCenterPos, r, rf);\n    float starAlpha = 1.0 - smoothstep(-1.0/iResolution.y, 1.0/iResolution.y, d);\n    vec4 starLayer = vec4(circleColor, starAlpha);\n    \n    vec4 finalColor = mix(backgroundLayer, rectangleLayer, rectangleLayer.a);\n    finalColor = mix(finalColor, crescentLayer, crescentLayer.a);\n    finalColor = mix(finalColor, starLayer, starLayer.a);\n    fragColor = finalColor;\n    }","name":"Image","description":"","type":"image"}]}