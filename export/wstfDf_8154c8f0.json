{"ver":"0.1","info":{"id":"wstfDf","date":"1606191559","viewed":81,"name":"Resonant ballistic conductance","username":"Lay","description":"for scientific conference","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["smth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"int N = 3;\n\nfloat E_KT = 0.01;\nvec3 e_col = vec3(.27,.51,.89);\nvec3 p_col = vec3(1.,.41,.11);\n\nfloat rect(vec2 aa, vec2 bb, vec2 uv)\n{\n    float h = 0.002;\n    float res = 1.;\n    res *= smoothstep(aa.x-h,aa.x,uv.x);\n    res *= smoothstep(aa.y-h,aa.y,uv.y);\n    res *= (1.-smoothstep(bb.x,bb.x+h,uv.x));\n    res *= smoothstep(bb.y+E_KT,bb.y-E_KT,uv.y);\n    return res;\n}\n\nfloat dotted_line(float q, float x)\n{\n    x = fract(x/q);\n    return smoothstep(.505,.495,x);\n}\n\nfloat wave(vec2 center, vec2 radius, vec2 uv)\n{\n    uv -= center;\n    uv /= radius;\n    float l = length(uv);\n    return smoothstep(1., .85, l);\n}\n\nvec2 channel_h(float h, float kt, float a, float b, vec2 uv)\n{\n    float temp = uv.x - .5*(a+b);\n\ttemp /= (.5*(b-a));\n    temp *= temp;\n    temp *= temp;\n    //temp *= temp;\n    //temp *= temp;\n    uv.y -= h * (temp*temp*temp*temp*temp*temp*temp - 1.);\n    uv.y /= 1. + (temp+0.3)*(temp+0.3)*(temp+0.3)*(temp+0.3)*(temp+0.3)*(temp+0.3)*(temp+0.3);\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float Ef = 0.6;\n    float dE = 0.1;\n    float E_up = 0.17;\n\n    vec3 col = vec3(1.); \n    \n    float s = .2, d = .8;\n    \n    float source = rect(vec2(.0,.0), vec2(.2,Ef), uv);\n    float drain = rect(vec2(.8,.0), vec2(1.,Ef), uv);\n    \n    col = source * e_col + (1. - source) * col;\n\tcol = drain * vec3(.27,.51,.89) + (1. - drain) * col;\n    \n    vec2 ch_b = uv;\n    ch_b.y -= Ef;\n    vec2 ch_t = ch_b;\n    ch_b.y -= E_up + dE;\n    ch_t.y -= E_up - dE;\n\n    ch_b = channel_h(0.17, 0.04, s+0.0005, d-0.0005, ch_b);\n    ch_t = channel_h(0.17, 0.04, s+0.0005, d-0.0005, ch_t);\n    \n    {    \n        float electrons = smoothstep(0.0001, 0.000, ch_b.y*ch_t.y);\n        electrons *= smoothstep(Ef+E_KT, Ef-E_KT, uv.y);\n        electrons *= smoothstep(s-0.001, s, uv.x);\n        electrons *= smoothstep(d+0.001, d, uv.x);\n\n        col = electrons * e_col + (1. - electrons) * col;\n    }\n    \n    if (true)\n    {\n        float time = 0.3 * iTime;\n        \n        float q = 2. / (2. * float(N) - 1.);\n        \n        \n        float w;\n        float ch = (uv.x - s) / (d - s);\n        \n        for (int i = 0; i < N; ++i)\n        {\n            w = smoothstep(0.0001, 0.000, ch_b.y*ch_t.y);\n            w *= wave(vec2((fract(time+0.5))*q + float(i)*q, Ef), vec2(0.25*q,3.*E_KT), vec2(ch,uv.y));\n            w *= smoothstep(Ef+0.5*E_KT, Ef-0.5*E_KT, uv.y);\n            col = w * p_col + (1. - w) * col;\n            \n            w = smoothstep(0.0001, 0.000, ch_b.y*ch_t.y);\n            w *= wave(vec2((-fract(time))*q + float(i)*q + 0.5*q, Ef), vec2(0.25*q,3.*E_KT), vec2(ch,uv.y));\n            w *= smoothstep(Ef+0.5*E_KT, Ef-0.5*E_KT, uv.y);\n            col = w * p_col + (1. - w) * col;\n            \n            w = smoothstep(0.0001, 0.000, ch_b.y*ch_t.y);\n            w *= wave(vec2((fract(time))*q + float(i)*q, Ef), vec2(0.25*q,3.*E_KT), vec2(ch,uv.y));\n            w *= (1.-smoothstep(Ef, Ef-2.*E_KT, uv.y));\n            col = w * (0.85*e_col) + (1. - w) * col;\n            \n            w = smoothstep(0.0001, 0.000, ch_b.y*ch_t.y);\n            w *= wave(vec2((-fract(time-0.5)+0.5)*q + float(i)*q, Ef), vec2(0.25*q,3.*E_KT), vec2(ch,uv.y));\n            w *= (1.-smoothstep(Ef, Ef-2.*E_KT, uv.y));\n            col = w * (0.85*e_col) + (1. - w) * col;\n        }\n        \n        // contacts\n        w = smoothstep(Ef+1.*E_KT, Ef+0.*E_KT, uv.y);\n        w *= (1.-smoothstep(Ef-2.3*E_KT-3.*E_KT*(cos(6.283*time)-1.), Ef-3.*E_KT-3.*E_KT*(cos(6.283*time)-1.), uv.y));\n        w *= smoothstep(d, d+0.001, uv.x);\n        w *= cos(6.283*time);\n        w = max(w, 0.);\n        col = w * p_col + (1. - w) * col;\n        \n        w = smoothstep(Ef+1.*E_KT, Ef+0.*E_KT, uv.y);\n        w *= (1.-smoothstep(Ef-2.3*E_KT+3.*E_KT*(cos(6.283*time)+1.), Ef-3.*E_KT+3.*E_KT*(cos(6.283*time)+1.), uv.y));\n        w *= smoothstep(s, s-0.001, uv.x);\n        w *= -cos(6.283*time);\n        w = max(w, 0.);\n        col = w * p_col + (1. - w) * col;\n        \n        w = smoothstep(Ef+3.*E_KT+3.*E_KT*(cos(6.283*time)-1.), Ef+2.3*E_KT+3.*E_KT*(cos(6.283*time)-1.), uv.y);\n        w *= (1.-smoothstep(Ef-0.*E_KT, Ef-1.*E_KT, uv.y));\n        w *= smoothstep(s, s-0.001, uv.x);\n        w *= cos(6.283*time);\n        w = max(w, 0.);\n        col = w * (0.85*e_col) + (1. - w) * col;\n        \n        w = smoothstep(Ef+3.*E_KT-3.*E_KT*(cos(6.283*time)+1.), Ef+2.3*E_KT-3.*E_KT*(cos(6.283*time)+1.), uv.y);\n        w *= (1.-smoothstep(Ef-0.*E_KT, Ef-1.*E_KT, uv.y));\n        w *= smoothstep(d, d+0.001, uv.x);\n        w *= -cos(6.283*time);\n        w = max(w, 0.);\n        col = w * (0.85*e_col) + (1. - w) * col;\n    }\n    \n    {\n        float bottom = smoothstep(-0.005,0.,ch_t.y) * \n            smoothstep(+0.005,0.,ch_t.y);\n\n        bottom *= smoothstep(s-.002, s, uv.x);\n        bottom *= smoothstep(d+.002, d, uv.x);\n\n        float sd_line = smoothstep(s-0.002, s, uv.x) * \n            smoothstep(s+0.002, s, uv.x);\n\n        sd_line += smoothstep(d-0.002, d, uv.x) * \n            smoothstep(d+0.002, d, uv.x);\n\n        bottom = max(bottom, sd_line);\n\n        bottom *= smoothstep(Ef+E_up-dE + 0.001, Ef+E_up-dE, uv.y);\n\n        col = bottom * vec3(0.) + (1. - bottom) * col;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}