{"ver":"0.1","info":{"id":"NtKfRD","date":"1664205150","viewed":80,"name":"Colored Mandelbrot zoom test","username":"b_artdek","description":"Simple Mandelbrot test","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hot(float t)\n{\n    return vec3(smoothstep(0.00,0.33,t),\n                smoothstep(0.33,0.66,t),\n                smoothstep(0.66,1.00,t));\n}\n\nstruct MandelbrotResult {int i; bool div;};\n\n\nMandelbrotResult Mandelbrot(vec2 c, int maxIter){\n    int  i    = 0;\n    vec2 z    = vec2(0);\n    bool div  = (length(z) >= 2.);\n    \n    float z_real;\n    float z_imag;\n    \n    while (!div && (i < maxIter)){\n        i++;\n        \n        z_real = z.x*z.x-z.y*z.y + c.x;\n        z_imag = 2.*z.x*z.y + c.y;\n        \n        z = vec2(z_real,z_imag);\n        \n        div = (length(z) >= 2.);\n    }\n       \n    return MandelbrotResult(i,div);\n}\n\n\nvec2 remap(vec2 xy){\n\n    float asp = iResolution.x/iResolution.y;\n    vec2 uv   = xy/iResolution.xy;\n    uv.x *= asp;\n    uv.x -= asp/2.;\n    uv.y -= 0.5;\n    \n    uv *= 2.5;\n    return uv;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 center = vec2(0.2798827531157871,\n                       0.008581804405015523);\n\n\n    int maxIter = 1500;\n    vec2 c      = remap(fragCoord)*exp(-12.*pow(sin(iTime/10.),2.)) + center;\n    vec3 col    = vec3(0.);\n    \n    MandelbrotResult result = Mandelbrot(c, maxIter);\n    \n    if (result.div){\n        float f  = pow(sin(float(result.i)/50.),2.);\n        col      = hot(pow(f,0.3));\n    }\n\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}