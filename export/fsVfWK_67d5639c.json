{"ver":"0.1","info":{"id":"fsVfWK","date":"1659002690","viewed":199,"name":"Procedural mario","username":"maze_maze","description":"Procedural mario","likes":12,"published":1,"flags":96,"usePreview":0,"tags":["mario"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XtBXzw","filepath":"https://soundcloud.com/paulo-siqueira/super-mario-bros-theme-song?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/paulo-siqueira/super-mario-bros-theme-song?utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define read(O) texelFetch(iChannel0, ivec2(O, 0), 0).x\n#define RGBA(R,G,B,A) vec4(float(R)/255.0,float(G)/255.0,float(B)/255.0,float(A)/255.0)\n\nvec4 block(ivec2 uv){uv.x-=uv.x<0?uv.x/16*16-16:uv.x/16*16;uv.y-=uv.y<0?uv.y/16*16-16:uv.y/16*16;switch(uv.x+uv.y*16){case 241:case 242:case 243:case 244:case 245:case 246:case 247:case 248:case 249:case 250:case 251:case 252:case 253:case 254:case 224:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 208:case 209:case 211:case 212:case 213:case 214:case 215:case 216:case 217:case 218:case 219:case 220:case 192:case 193:case 194:case 196:case 197:case 198:case 199:case 200:case 201:case 202:case 203:case 176:case 177:case 178:case 179:case 160:case 161:case 162:case 163:case 144:case 145:case 146:case 147:case 128:case 129:case 130:case 131:case 112:case 113:case 114:case 115:case 96:case 97:case 98:case 99:case 80:case 81:case 82:case 83:case 64:case 65:case 66:case 67:case 48:case 49:case 50:case 32:case 33:case 16:return RGBA(255,206,197,255);case 240:case 225:case 210:case 195:case 180:case 181:case 182:case 183:case 184:case 185:case 186:case 187:case 164:case 165:case 166:case 167:case 168:case 169:case 170:case 171:case 148:case 149:case 150:case 151:case 152:case 153:case 154:case 155:case 132:case 133:case 134:case 135:case 136:case 137:case 138:case 139:case 116:case 117:case 118:case 119:case 120:case 121:case 122:case 123:case 100:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 68:case 69:case 70:case 71:case 72:case 73:case 74:case 75:case 60:case 45:case 30:case 15:return RGBA(156,74,0,255);default:return RGBA(0,0,0,255);}}\nvec4 rocks(ivec2 uv){uv.x-=uv.x<0?uv.x/16*16-16:uv.x/16*16;uv.y-=uv.y<0?uv.y/16*16-16:uv.y/16*16;switch(uv.x+uv.y*16){case 249:case 233:case 239:case 217:case 223:case 201:case 207:case 185:case 187:case 191:case 169:case 171:case 172:case 173:case 174:case 153:case 159:case 137:case 143:case 121:case 127:case 105:case 111:case 80:case 81:case 88:case 95:case 66:case 67:case 72:case 79:case 52:case 53:case 54:case 55:case 63:case 39:case 47:case 23:case 30:case 31:case 1:case 2:case 3:case 4:case 5:case 6:case 9:case 10:case 11:case 12:case 13:case 14:return RGBA(0,0,0,255);case 241:case 242:case 243:case 244:case 245:case 246:case 247:case 248:case 251:case 252:case 253:case 254:case 224:case 234:case 208:case 218:case 192:case 202:case 176:case 186:case 160:case 144:case 154:case 155:case 156:case 157:case 158:case 128:case 138:case 112:case 122:case 96:case 106:case 89:case 64:case 65:case 73:case 48:case 50:case 51:case 56:case 32:case 36:case 37:case 38:case 40:case 16:case 24:case 8:return RGBA(255,206,197,255);default:return RGBA(156,74,0,255);}}\nvec4 marioJump(ivec2 uv){uvec2 u=uvec2(uv);if(u.x<16u&&u.y<16u)switch(uv.x+uv.y*16){case 53:case 54:case 55:case 58:case 61:case 62:case 63:case 68:case 70:case 74:case 77:case 78:case 79:case 84:case 86:case 87:case 91:case 95:case 100:case 101:case 106:case 107:case 108:case 109:case 110:case 125:case 130:case 131:case 132:case 133:case 134:case 136:case 137:case 138:case 140:case 145:case 146:case 147:case 148:case 149:case 150:case 151:case 153:case 154:case 155:case 159:case 162:case 163:case 164:case 165:case 166:case 167:case 175:case 182:case 190:case 191:case 195:case 206:case 207:case 210:case 211:case 212:case 222:case 223:case 225:case 226:case 227:case 241:return RGBA(107,109,0,255);case 22:case 23:case 24:case 25:case 26:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 135:case 139:case 152:case 156:case 168:case 169:case 170:case 171:case 172:case 180:case 181:case 183:case 184:case 186:case 187:case 189:case 196:case 197:case 198:case 199:case 200:case 201:case 202:case 203:case 204:case 205:case 213:case 214:case 215:case 216:case 217:case 218:case 219:case 220:case 221:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 244:case 245:case 246:case 247:return RGBA(181,49,32,255);case 13:case 14:case 15:case 29:case 30:case 31:case 46:case 47:case 56:case 57:case 59:case 69:case 71:case 72:case 73:case 75:case 76:case 85:case 88:case 89:case 90:case 92:case 93:case 94:case 102:case 103:case 104:case 105:case 118:case 119:case 120:case 121:case 122:case 123:case 124:case 160:case 161:case 176:case 177:case 178:case 185:case 188:case 193:return RGBA(234,158,34,255);default:return RGBA(0,0,0,0);}return vec4(0);}\nvec4 marioWalk1(ivec2 uv){uvec2 u=uvec2(uv);if(u.x<16u&&u.y<16u)switch(uv.x+uv.y*16){case 5:case 6:case 7:case 8:case 9:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 118:case 119:case 134:case 135:case 136:case 150:case 152:case 153:case 154:case 164:case 165:case 166:case 167:case 168:case 169:case 170:case 179:case 180:case 181:case 182:case 183:case 184:case 185:case 186:case 187:case 194:case 195:case 196:case 197:case 198:case 199:case 200:case 201:case 202:case 203:case 211:case 212:case 213:case 217:case 218:case 219:return RGBA(181,49,32,255);case 36:case 37:case 38:case 41:case 51:case 53:case 57:case 67:case 69:case 70:case 74:case 83:case 84:case 89:case 90:case 91:case 92:case 114:case 115:case 116:case 117:case 120:case 121:case 130:case 131:case 132:case 133:case 137:case 138:case 139:case 148:case 149:case 155:case 156:case 173:case 188:case 189:case 204:case 205:case 209:case 210:case 220:case 221:case 225:case 226:case 227:case 242:case 243:case 244:return RGBA(107,109,0,255);case 39:case 40:case 42:case 52:case 54:case 55:case 56:case 58:case 59:case 60:case 68:case 71:case 72:case 73:case 75:case 76:case 77:case 85:case 86:case 87:case 88:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 128:case 129:case 140:case 141:case 142:case 144:case 145:case 146:case 151:case 157:case 158:case 160:case 161:return RGBA(234,158,34,255);default:return RGBA(0,0,0,0);}return vec4(0);}\nvec4 marioWalk2(ivec2 uv){uvec2 u=uvec2(uv);if(u.x<16u&&u.y<16u)switch(uv.x+uv.y*16){case 36:case 37:case 38:case 41:case 51:case 53:case 57:case 67:case 69:case 70:case 74:case 83:case 84:case 89:case 90:case 91:case 92:case 116:case 117:case 119:case 120:case 121:case 131:case 132:case 133:case 134:case 137:case 138:case 147:case 148:case 149:case 163:case 164:case 165:case 166:case 180:case 181:case 197:case 216:case 217:case 218:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 245:case 246:case 247:case 248:return RGBA(107,109,0,255);case 5:case 6:case 7:case 8:case 9:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 118:case 135:case 136:case 150:case 151:case 153:case 154:case 167:case 168:case 169:case 170:case 171:case 179:case 185:case 186:case 187:case 196:case 200:case 201:case 202:case 213:case 214:case 215:return RGBA(181,49,32,255);case 39:case 40:case 42:case 52:case 54:case 55:case 56:case 58:case 59:case 60:case 68:case 71:case 72:case 73:case 75:case 76:case 77:case 85:case 86:case 87:case 88:case 101:case 102:case 103:case 104:case 105:case 106:case 107:case 152:case 155:case 182:case 183:case 184:case 198:case 199:return RGBA(234,158,34,255);default:return RGBA(0,0,0,0);}return vec4(0);}\nvec4 marioWalk3(ivec2 uv){uvec2 u=uvec2(uv);if(u.x<16u&&u.y<16u)switch(uv.x+uv.y*16){case 53:case 54:case 55:case 58:case 68:case 70:case 74:case 84:case 86:case 87:case 91:case 100:case 101:case 106:case 107:case 108:case 109:case 133:case 134:case 135:case 136:case 138:case 149:case 150:case 151:case 152:case 153:case 154:case 166:case 167:case 168:case 169:case 170:case 179:case 180:case 195:case 210:case 211:case 226:case 231:case 232:case 233:case 247:case 248:case 249:case 250:return RGBA(107,109,0,255);case 22:case 23:case 24:case 25:case 26:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 137:case 165:case 181:case 182:case 183:case 184:case 185:case 186:case 187:case 196:case 197:case 198:case 199:case 200:case 201:case 202:case 203:case 212:case 213:case 214:case 216:case 217:case 218:return RGBA(181,49,32,255);case 56:case 57:case 59:case 69:case 71:case 72:case 73:case 75:case 76:case 77:case 85:case 88:case 89:case 90:case 92:case 93:case 94:case 102:case 103:case 104:case 105:case 118:case 119:case 120:case 121:case 122:case 123:case 124:case 140:case 148:case 155:case 156:case 157:case 163:case 164:case 171:case 172:return RGBA(234,158,34,255);default:return RGBA(0,0,0,0);}return vec4(0);}\n\nvoid blend(inout vec4 a, vec4 b) {\n    a = mix(a, b, b.a);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragCoord.x -= iResolution.x * .25; // Make the view offset a little bit\n    vec2 luv = fragCoord / min(iResolution.x, iResolution.y) * (8. / 1.);\n    vec2 guv = luv + vec2(iTime * 3., 0.);\n    \n    ivec2 luvi = ivec2(luv * 16.0);\n    luvi.y = 15 - luvi.y;\n    ivec2 guvi = ivec2(guv * 16.0);\n    guvi.y = guvi.y;\n    \n    ivec2 blockPos = ivec2(guv);\n    \n    fragColor = RGBA(148, 148, 255, 255); // Background\n    \n    int height = int(terrain(guv.x)); // Height of the terrain\n    if (blockPos.y < height) {\n        if (blockPos.y == 0) {\n            fragColor = rocks(guvi);\n        } else {\n            fragColor = block(guvi);\n        }\n    }\n    \n    ivec2 marioCoord = luvi + ivec2(0, int(read(POSITION) * 16.));\n    vec4 mario;\n    switch (int(iTime * 8.) % 3 + int(read(POSITION) != read(HEIGHT)) * 3) {\n    case 0:\n        mario = marioWalk1(marioCoord);\n        break;\n    case 1:\n        mario = marioWalk2(marioCoord);\n        break;\n    case 2:\n        mario = marioWalk3(marioCoord);\n        break;\n    default:\n        mario = marioJump(marioCoord);\n        break;\n    }\n    \n    blend(fragColor, mario);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float smootherstep(float t) {\n    return (t * (t * 6.0 - 15.0) + 10.0) * t * t * t;\n}\nfloat noise1D(int x) {\n    return float((x * 676769 ^ x * 53769) * 676769) * 4.656613e-10;\n}\nfloat smoothNoise1D(float x) {\n    float xo = fract(x);\n    int xf = int(x - xo);\n    int xc = xf + 1;\n    return mix(noise1D(xf), noise1D(xc), smootherstep(xo));\n}\nfloat terrain(float x) {\n    return floor(smoothNoise1D(floor(x) / 6.) * 3. + 4.);\n}\n\nconst int HEIGHT = 0;\nconst int POSITION = 1;\nconst int SPEED = 2;","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define read(O) texelFetch(iChannel0, ivec2(O, 0), 0).x\n\n// Physics of mario\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 uv = ivec2(fragCoord);\n    fragColor = vec4(0);\n    if (iFrame == 0) {\n        if (uv.x == POSITION) {\n            fragColor = vec4(6); // Start y position\n        }\n    } else {\n        if (uv.y == 0) {\n            float pos = iTime * 3.;\n            if (uv.x == HEIGHT) { // Height of the rocks below mario\n                float height = max(\n                    terrain(pos),\n                    terrain(pos + 1.)\n                );\n                fragColor = vec4(height);\n            }\n            if (uv.x == POSITION) { // Current mario y position\n                float speed = read(SPEED);\n                float newPos = read(POSITION) + speed * iTimeDelta;\n                if (speed < 0.) {\n                    fragColor = vec4(max(newPos, read(HEIGHT)));\n                } else {\n                    fragColor = vec4(newPos);\n                }\n            }\n            if (uv.x == SPEED) { // Mario y speed\n                float speed = read(SPEED);\n                speed -= 32. * iTimeDelta; // Gravitation\n                if (read(POSITION) == read(HEIGHT)) { // If standing on the floor\n                    speed = 0.;\n                    if (terrain(pos + 2.) > read(0)) { // If there is a wall in front of mario\n                        speed = 14.0;                  // Jump\n                    }\n                }\n                fragColor = vec4(speed);\n            }\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}