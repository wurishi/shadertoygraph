{"ver":"0.1","info":{"id":"NdGcDR","date":"1654653388","viewed":120,"name":"Distorted cubicspline noise test","username":"Dubswitcher","description":"A bit of a test with my cubic spline noise after I added a Z channel to the function.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test","noise","perlin","painting","spline","pattern","cubic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float h41(vec3 pos, float s)\n{\n    vec4 p = fract(vec4(pos,s)*64.23);\n    p += dot(p, p.xywz*36.5);\n    return fract(p.z-(p.x-p.y)*p.w);\n}\n\nfloat cubicSp (float x, float a, float b, float c, float d) \n{\n    float p = d-c-(a-b);\n    return p*x*x*x + (a-b-p)*x*x + (c-a)*x + b;\n}\n\nfloat cubicSpNoise3d(vec3 pos, float size, float seed)\n{\n    vec3 v = floor(pos*size), c = fract(pos*size);\n    vec3 b[4];\n    for (int z = 0; z < 4; z++)\n    {\n        for (int y = 0; y < 4; y++)\n        {\n            for (int x = 0; x < 4; x++)\n            {\n                b[x].x = h41(v+vec3(x,y,z),seed);\n            }\n            b[y].y = cubicSp(c.x,b[0].x,b[1].x,b[2].x,b[3].x);\n        }\n        b[z].z = cubicSp(c.y,b[0].y,b[1].y,b[2].y,b[3].y);\n    }\n    return cubicSp(c.z,b[0].z,b[1].z,b[2].z,b[3].z);\n}\n\nvec2 rot(vec2 uv, in float r, in vec2 o)\n{\n    return (uv-0.5+o) * mat2(cos(r),-sin(r),sin(r),cos(r)) + 0.5-o;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec2 rc = uv;\n    \n    float rp = 0.;\n    float fAmt = 1., fade = 0.56, scale = 1., shrink = 1.4,\n        dspeed = 1.2, speed = 2., spin = 2.3;\n    \n    for (int i = 0; i < 15; i ++)\n    {\n        rp = mix(rp, cubicSpNoise3d(\n            vec3(rc,(iTime*speed)/40.),\n            scale, float(i)+0.374*3.57),fAmt);\n        \n        fAmt *= fade; scale *= shrink; speed /= dspeed;\n        rc = rot(rc,spin,vec2(0.5));\n    }\n    \n    rc = uv;\n    float n = 0.;\n    fAmt = 1., fade = 0.39, scale = 5., shrink = 1.9,\n        dspeed = 1.2, speed = 2., spin = 2.6;\n    \n    for (int i = 0; i < 8; i ++)\n    {\n        n = mix(n, cubicSpNoise3d(\n            vec3(rc,(iTime*speed)/20.+rp*9.),\n            scale, float(i)+0.345*3.56),fAmt);\n        \n        fAmt *= fade; scale *= shrink; speed /= dspeed;\n        rc = rot(rc,spin,vec2(0.5));\n    } n = n*0.8+0.1;\n    \n    n = smoothstep(0.,0.9,pow(n,1.2));\n    \n    vec3 col = mix(vec3(0.05,0.04,0.),vec3(0.4,0.6,0.4),n);\n    col = mix(col,vec3(0.5,0.4,0.6),\n        clamp(smoothstep(0.4,0.6,n)-smoothstep(0.7,0.6,n),0.,1.));\n    col *= vec3(1.3,0.5,0.6)*n;\n    col += vec3(0.4,0.6,1.)*pow(1.-n,4.);\n    col = mix(col,vec3(1.,0.9,0.6),n/2.);\n    col = pow(col,vec3(2.8,2.5,1.9))*4.5;\n    \n    col += max(0.,sin(n*30.)-0.5)*1.2;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}