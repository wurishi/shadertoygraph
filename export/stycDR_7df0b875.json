{"ver":"0.1","info":{"id":"stycDR","date":"1661246115","viewed":308,"name":"chr_cat","username":"USSRCoder","description":"My first shader with reflections. Used \"Efficient Sparse Voxel Octrees\" for ray;\nadd hardcoded transparency(monolith, per voxel), perfomance increased;\nI would like to make a pervoxel shadow, but I don't know how )\n\n","likes":11,"published":1,"flags":48,"usePreview":0,"tags":["ray","raycast","voxel","raymatch","cast","octree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//some oct stuff from https://github.com/AdamYuan/SparseVoxelOctree/tree/opengl\n//RAY MARCH METHOD IS COPIED FROM https://code.google.com/archive/p/efficient-sparse-voxel-octrees/\n#define STACK_SIZE 23u //must be 23\n#define EPS 3.552713678800501e-15\n\nint uViewType = 0; // 0 - color, 1 - normals, 2 - oct tree iterations\nuint iter = 0u;\nmat4 uProjection;\nmat4 uView;\nvec4 uPosition;\nmat4 uModel = mat4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);\nconst vec3 modelsize = vec3(19,19,17);\nconst vec3 octsize = vec3(32);\n\nvoid NewCam(inout Cam cam) {\n\tcam.m_width = iResolution.x;\n\tcam.m_height = iResolution.y;\n\tcam.m_sensitive = 0.0005;\n\tcam.m_speed = 2.; \n\tcam.m_fov = (PI / 3.0);\n    cam.m_position = vec3(1.5, 1.5f, 50.0f);\n    cam.m_yaw = 0.;\n    cam.m_pitch = 0.;\n}\n\n// trasparency\nbool opacity_on = true;\nfloat opacity = 0.3; //opacity strength\nvec3 prevColor = vec3(0);\nvec3 colorAdd = vec3(0); \nfloat colorMult = 1.0;\n\nstruct StackItem { uint node; float t_max; } stack[STACK_SIZE];\nbool RayMarchLeaf(vec3 o, vec3 d, out vec3 o_pos, out vec3 o_color, out vec3 o_normal) {\n\n\td.x = abs(d.x) > EPS ? d.x : (d.x >= 0. ? EPS : -EPS);\n\td.y = abs(d.y) > EPS ? d.y : (d.y >= 0. ? EPS : -EPS);\n\td.z = abs(d.z) > EPS ? d.z : (d.z >= 0. ? EPS : -EPS);\n\n\t// Precompute the coefficients of tx(x), ty(y), and tz(z).\n\t// The octree is assumed to reside at coordinates [1, 2].\n\tvec3 t_coef = 1.0f / -abs(d);\n\tvec3 t_bias = t_coef * o;\n\n\tuint oct_mask = 0u;\n\tif(d.x > 0.0f) oct_mask ^= 1u, t_bias.x = 3.0f * t_coef.x - t_bias.x;\n\tif(d.y > 0.0f) oct_mask ^= 2u, t_bias.y = 3.0f * t_coef.y - t_bias.y;\n\tif(d.z > 0.0f) oct_mask ^= 4u, t_bias.z = 3.0f * t_coef.z - t_bias.z;\n\n\t// Initialize the active span of t-values.\n\tfloat t_min = max(max(2.0f * t_coef.x - t_bias.x, 2.0f * t_coef.y - t_bias.y), 2.0f * t_coef.z - t_bias.z);\n\tfloat t_max = min(min(       t_coef.x - t_bias.x,        t_coef.y - t_bias.y),        t_coef.z - t_bias.z);\n\tt_min = max(t_min, 0.0f);\n\tfloat h = t_max;\n\n\tuint parent = 0u;\n\tuint cur    = 0u;\n\tvec3 pos    = vec3(1.0);\n\tuint idx    = 0u;\n\tif(1.5 * t_coef.x - t_bias.x > t_min) idx ^= 1u, pos.x = 1.5f;\n\tif(1.5 * t_coef.y - t_bias.y > t_min) idx ^= 2u, pos.y = 1.5f;\n\tif(1.5 * t_coef.z - t_bias.z > t_min) idx ^= 4u, pos.z = 1.5f;\n\n\tuint  scale      = STACK_SIZE - 1u;\n\tfloat scale_exp2 = 0.5f; //exp2( scale - STACK_SIZE )\n\n\twhile( scale < STACK_SIZE ) {\n\t\t++iter;\n        \n\t\t//if(cur == 0u) cur = uOctree[ parent + ( idx ^ oct_mask ) ];\n        //thanx to mdb, now load data fom texture 3\n        if(cur == 0u) {\n            uint _idx = parent + ( idx ^ oct_mask );\n            vec4 data = texelFetch(iChannel3, ivec2(_idx % 64u, _idx / 64u), 0);\n            cur = (uint(data.x) + (uint(data.y)<<8) + (uint(data.z)<<16) + (uint(data.w)<<24));\n        }\n        \n\t\t// Determine maximum t-value of the cube by evaluating\n\t\t// tx(), ty(), and tz() at its corner.\n\n\t\tvec3 t_corner = pos * t_coef - t_bias;\n\t\tfloat tc_max = min(min(t_corner.x, t_corner.y), t_corner.z);\n\n\t\tif( (cur & 0x80000000u) != 0u && t_min <= t_max ) {\n\t\t\t// INTERSECT\n\t\t\tfloat tv_max = min(t_max, tc_max);\n\t\t\tfloat half_scale_exp2 = scale_exp2 * 0.5f;\n\t\t\tvec3 t_center = half_scale_exp2 * t_coef + t_corner;\n\n\t\t\tif( t_min <= tv_max ) {\n\t\t\t\tif( (cur & 0x40000000u) != 0u ) {// leaf node\n                \n                    //trasparency materials (materials with colors ff3399 and aaaaaa)\n                    bool is_tarsparent_mat = ((cur & 0xffffffu) == 0xff3399u) || ((cur & 0xffffffu) == 0xaaaaaau);\n                    \n                    if (is_tarsparent_mat && opacity_on) {\n                        vec3 color = vec3(cur & 0xffu, (cur >> 8u) & 0xffu, (cur >> 16u) & 0xffu) * 0.00392156862745098;\n                        if (prevColor!=color) {\n                          colorAdd += colorMult * opacity * color;\n                          colorMult *= 1.0 - opacity;\n                          prevColor = color;\n                        }\n                    } else\n                    \n\t\t\t\t\tbreak;\n                }\n\n\t\t\t\t// PUSH\n\t\t\t\tif( tc_max < h ) {\n\t\t\t\t\tstack[ scale ].node = parent;\n\t\t\t\t\tstack[ scale ].t_max = t_max;\n\t\t\t\t}\n\t\t\t\th = tc_max;\n\n\t\t\t\tparent = cur & 0x3fffffffu;\n\n\t\t\t\tidx = 0u;\n\t\t\t\t--scale;\n\t\t\t\tscale_exp2 = half_scale_exp2;\n\t\t\t\tif(t_center.x > t_min) idx ^= 1u, pos.x += scale_exp2;\n\t\t\t\tif(t_center.y > t_min) idx ^= 2u, pos.y += scale_exp2;\n\t\t\t\tif(t_center.z > t_min) idx ^= 4u, pos.z += scale_exp2;\n\n\t\t\t\tcur = 0u;\n\t\t\t\tt_max = tv_max;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t//ADVANCE\n\t\tuint step_mask = 0u;\n\t\tif(t_corner.x <= tc_max) step_mask ^= 1u, pos.x -= scale_exp2;\n\t\tif(t_corner.y <= tc_max) step_mask ^= 2u, pos.y -= scale_exp2;\n\t\tif(t_corner.z <= tc_max) step_mask ^= 4u, pos.z -= scale_exp2;\n\n\t\t// Update active t-span and flip bits of the child slot index.\n\t\tt_min = tc_max;\n\t\tidx ^= step_mask;\n\n\t\t// Proceed with pop if the bit flips disagree with the ray direction.\n\t\tif( (idx & step_mask) != 0u ) {\n\t\t\t// POP\n\t\t\t// Find the highest differing bit between the two positions.\n\t\t\tuint differing_bits = 0u;\n\t\t\tif ((step_mask & 1u) != 0u) differing_bits |= floatBitsToUint(pos.x) ^ floatBitsToUint(pos.x + scale_exp2);\n\t\t\tif ((step_mask & 2u) != 0u) differing_bits |= floatBitsToUint(pos.y) ^ floatBitsToUint(pos.y + scale_exp2);\n\t\t\tif ((step_mask & 4u) != 0u) differing_bits |= floatBitsToUint(pos.z) ^ floatBitsToUint(pos.z + scale_exp2);\n\t\t\tscale = findMSB(differing_bits);\n\t\t\tscale_exp2 = uintBitsToFloat((scale - STACK_SIZE + 127u) << 23u); // exp2f(scale - s_max)\n\n\t\t\t// Restore parent voxel from the stack.\n\t\t\tparent = stack[scale].node;\n\t\t\tt_max  = stack[scale].t_max;\n\n\t\t\t// Round cube position and extract child slot index.\n\t\t\tuint shx = floatBitsToUint(pos.x) >> scale;\n\t\t\tuint shy = floatBitsToUint(pos.y) >> scale;\n\t\t\tuint shz = floatBitsToUint(pos.z) >> scale;\n\t\t\tpos.x = uintBitsToFloat(shx << scale);\n\t\t\tpos.y = uintBitsToFloat(shy << scale);\n\t\t\tpos.z = uintBitsToFloat(shz << scale);\n\t\t\tidx  = (shx & 1u) | ((shy & 1u) << 1u) | ((shz & 1u) << 2u);\n\n\t\t\t// Prevent same parent from being stored again and invalidate cached child descriptor.\n\t\t\th = 0.0f;\n\t\t\tcur = 0u;\n\t\t}\n\t}\n\n\tvec3 norm, t_corner = t_coef * (pos + scale_exp2) - t_bias;\n\tif(t_corner.x > t_corner.y && t_corner.x > t_corner.z)\n\t\tnorm = vec3(-1, 0, 0);\n\telse if(t_corner.y > t_corner.z)\n\t\tnorm = vec3(0, -1, 0);\n\telse\n\t\tnorm = vec3(0, 0, -1);\n\tif ((oct_mask & 1u) == 0u) norm.x = -norm.x;\n\tif ((oct_mask & 2u) == 0u) norm.y = -norm.y;\n\tif ((oct_mask & 4u) == 0u) norm.z = -norm.z;\n\n\t// Undo mirroring of the coordinate system.\n\tif ((oct_mask & 1u) != 0u) pos.x = 3.0f - scale_exp2 - pos.x;\n\tif ((oct_mask & 2u) != 0u) pos.y = 3.0f - scale_exp2 - pos.y;\n\tif ((oct_mask & 4u) != 0u) pos.z = 3.0f - scale_exp2 - pos.z;\n\n\t// Output results.\n\to_pos = clamp(o + t_min * d, pos, pos + scale_exp2);\n\tif(norm.x != 0.) o_pos.x = norm.x > 0. ? pos.x + scale_exp2 + EPS*2. : pos.x - EPS;\n\tif(norm.y != 0.) o_pos.y = norm.y > 0. ? pos.y + scale_exp2 + EPS*2. : pos.y - EPS;\n\tif(norm.z != 0.) o_pos.z = norm.z > 0. ? pos.z + scale_exp2 + EPS*2. : pos.z - EPS;\n\n\to_normal = norm;\n\to_color = vec3( cur & 0xffu, (cur >> 8u) & 0xffu, (cur >> 16u) & 0xffu) * 0.00392156862745098; // (...) / 255.0f\n    if (opacity_on) {\n        o_color = o_color * colorMult + colorAdd;\n    }\n    \n\treturn scale < STACK_SIZE && t_min <= t_max;\n}\n\nbool TraceShadow(vec3 ro, vec3 rd) {\n\tvec3 o_pos, color, normal;\n\treturn RayMarchLeaf(ro, rd, o_pos, color, normal);\n}\nvec3 GenRay(in vec2 FragCoord) {\n\tvec2 coord = vec2(FragCoord.xy) / iResolution.xy;\n\tcoord = coord * 2.0 - 1.0;\n    return normalize( mat3(inverse(uView)) * (inverse(uProjection) * vec4(coord, 1, 1) ).xyz);\n}\n\nvoid mainImage(out vec4 oFragColor, in vec2 FragCoord ) {\n    vec3 lightPos = vec3(1.5);\n    \n    //unknow why my shadow stay on place. it must(!) move, because i rotate model??? \n    //line below, rotate ligth manually, but do some glicthes; wtf?\n    //lightPos = lightPos * mat3(rotate(mat4_identity(), sin(iTime),vec3(0,0,1)));\n    \n    NewCam(cam);\n    vec4 moffset = texelFetch(iChannel0, ivec2(1, 0), 0) * cam.m_sensitive;\n    cam.m_pitch = clamp(cam.m_pitch, -PI * .015, PI * .015);\n\tcam.m_yaw = mod(cam.m_yaw, PI * 2.);\n    cam.m_yaw = cam.m_pitch = 0.;\n    camUpdate(cam);\n    \n    uProjection = cam.m_projection;\n    uView = cam.m_view;\n    uPosition = vec4(cam.m_position,1.);\n    \n\tvec3 o = vec3(uPosition.xyz);\n\tvec3 d = GenRay(FragCoord);\n\n    //rotate model about center\n    vec3 voxelsize = vec3(1.) / octsize; \n    vec3 Mcenter = (octsize * voxelsize * .5) + 1. - \n        ((octsize-modelsize) * voxelsize * .5);\n\tuModel = translate2(uModel, vec3(Mcenter.x, Mcenter.y, Mcenter.z));\n    uModel = rotate(uModel,PI / 2., vec3(1,0,0));\n    uModel = rotate(uModel,sin(iTime * PI * 0.02), vec3(0,1,0));\n    uModel = rotate(uModel,-iMouse.x * 0.1, vec3(0,1,0));\n    uModel = rotate(uModel,iMouse.y * 0.1, vec3(1,0,0));    \n    uModel = translate2(uModel, vec3(-Mcenter.x, -Mcenter.y, -Mcenter.z));\n    \n    //some up correct\n    uModel = translate2(uModel, vec3(0./*-0.19*/,-0.3,0));\n    \n    //transform rays (local model matrix)\n\to = vec3(uModel * vec4(o,1));\n\td = vec3(uModel * vec4(d,0));\n    \n\tvec3 o_pos, color, normal;\n\tbool hit = RayMarchLeaf(o, d, o_pos, color, normal);\n    \n    vec3 diffuse;\n    opacity_on = true;\n    // lighting\n    vec3 lighting;\n\tif (uViewType == 0) {\n\t\tvec3 lightColor = vec3(.8);\n\t\t// ambient\n\t\tvec3 ambient = 0.8 * lightColor;\n\n\t\t// diffuse\n\t\tvec3 lightDir = normalize(lightPos - d);\n\t\tfloat diff = max(dot(lightDir, normal), 0.0);\n\t\tdiffuse = diff * lightColor;\n\n\t\tlighting = (ambient + diffuse) * color;\n        \n        \n        //shadow\n        if (hit && TraceShadow(o_pos, lightPos))\n            lighting *= 0.65;\n            \n    \n        //reflections\n        if (hit && o_pos.z <= 1. + voxelsize.z) {\t\n            vec3 ro = o_pos;\n            vec3 rd = ((-2.0*(dot(d, normal))*normal)+d);\n            vec3 o_color,o_normal;\n            RayMarchLeaf(ro+rd*0.04, rd, o_pos, o_color, o_normal);\n            lighting = mix(lighting, o_color, .2);\n        }\n    }    \n\n\tif(uViewType == 2) \n\t\toFragColor = vec4( vec3(float(iter) / 64.0), 1 );\n\telse \n\t\tif (hit)\n\t\t\toFragColor = vec4( uViewType == 0 ? lighting : normal * 0.5f + 0.5f, 1 );\n\t\t//else \n\t\t\t//discard;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float PI = 3.14159265359;\n\nfloat kCamNear = 1.0f / 512.0f;\nfloat kCamFar = 55.0f;\n\nstruct Cam {\n\tfloat m_width;\n\tfloat m_height;\n\tvec3 m_position;\n\tmat4 m_view;\n\tmat4 m_projection;\n\tfloat m_yaw;\n\tfloat m_pitch;\n\tfloat m_sensitive;\n\tfloat m_speed;\n\tfloat m_fov;\n};\nCam cam;\n\n\nuint findMSB(in uint i) {\n\tif (i==0u)\n        return -1u;\n        \n\tfor (uint result = 31u;; --result) {\n\t\tif ((i & 0x80000000u) != 0u) \n            return result;\n\t\ti <<= 1;\n\t}\n}\n\n//matrix manipulate\nmat4 mat4_identity() {return mat4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);}\nmat4 translate2(mat4 m, vec3 v) { mat4 Result = m; Result[3] = m[0] * v[0] + m[1] * v[1] + m[2] * v[2] + m[3]; return Result;}\nmat4 glhScalef2(mat4 m, float x, float y, float z) {m[0][0]*=x;\tm[1][0]*=y;\tm[2][0]*=z;\tm[0][1]*=x;\tm[1][1]*=y;\tm[2][1]*=z;\tm[0][2]*=x;\tm[1][2]*=y;\tm[2][2]*=z;\tm[0][3]*=x;\tm[1][3]*=y;\tm[2][3]*=z;\treturn m;}\nmat4 scale(mat4 m, vec3 d) {return glhScalef2(m, d.x,d.y,d.z);}\nmat4 glhRotatef2(mat4 mx, float angleInRadians, float x, float y, float z) {\n\tfloat m[16], r[16];\n\tfloat CosAngle=cos(angleInRadians);\n\tfloat OneMinusCosAngle=1.0-CosAngle;\n\tfloat SinAngle=sin(angleInRadians);\n\tfloat A_OneMinusCosAngle=x*OneMinusCosAngle;\n\tfloat C_OneMinusCosAngle=z*OneMinusCosAngle;\n\tm[0]=mx[0][0];\tm[1]=mx[0][1];\tm[2]=mx[0][2];\tm[3]=mx[0][3];\n\tm[4]=mx[1][0];\tm[5]=mx[1][1];\tm[6]=mx[1][2];\tm[7]=mx[1][3];\n\tm[8]=mx[2][0];\tm[9]=mx[2][1];\tm[10]=mx[2][2];\tm[11]=mx[2][3];\n\tm[12]=mx[3][0];\tm[13]=mx[3][1];\tm[14]=mx[3][2];\tm[15]=mx[3][3];\n\tr[ 0]=x*A_OneMinusCosAngle+CosAngle;\tr[ 1]=y*A_OneMinusCosAngle+z*SinAngle;\tr[ 2]=z*A_OneMinusCosAngle-y*SinAngle;\tr[ 3]=0.0;\n\tr[ 4]=y*A_OneMinusCosAngle-z*SinAngle;\tr[ 5]=y*y*OneMinusCosAngle+CosAngle;\tr[ 6]=y*C_OneMinusCosAngle+x*SinAngle;\tr[ 7]=0.0;\n\tr[ 8]=x*C_OneMinusCosAngle+y*SinAngle;\tr[ 9]=y*C_OneMinusCosAngle-x*SinAngle;\tr[10]=z*C_OneMinusCosAngle+CosAngle;\tr[11]=0.0;\n\tmx[0][0]=m[0]*r[0]+\t\tm[4]*r[1]+\t\tm[8]*r[2];\n\tmx[1][0]=m[0]*r[4]+\t\tm[4]*r[5]+\t\tm[8]*r[6];\n\tmx[2][0]=m[0]*r[8]+\t\tm[4]*r[9]+\t\tm[8]*r[10];//mx[3][0]=mx[3][0];\n\tmx[0][1]=m[1]*r[0]+\t\tm[5]*r[1]+\t\tm[9]*r[2];\n\tmx[1][1]=m[1]*r[4]+\t\tm[5]*r[5]+\t\tm[9]*r[6];\n\tmx[2][1]=m[1]*r[8]+\t\tm[5]*r[9]+\t\tm[9]*r[10];//mx[3][1]=mx[3][1];\n\tmx[0][2]=m[2]*r[0]+\t\tm[6]*r[1]+\t\tm[10]*r[2];\n\tmx[1][2]=m[2]*r[4]+\t\tm[6]*r[5]+\t\tm[10]*r[6];\n\tmx[2][2]=m[2]*r[8]+\t\tm[6]*r[9]+\t\tm[10]*r[10];//mx[3][2]=mx[3][2];\n\tmx[0][3]=m[3]*r[0]+\t\tm[7]*r[1]+\t\tm[11]*r[2];\n\tmx[1][3]=m[3]*r[4]+\t\tm[7]*r[5]+\t\tm[11]*r[6];\n\tmx[2][3]=m[3]*r[8]+\t\tm[7]*r[9]+\t\tm[11]*r[10];//mx[3][3]=mx[3][3];\n\treturn mx;\n}\nmat4 rotate(mat4 m, float angleInRadians, vec3 d) {return glhRotatef2(m, angleInRadians, d.x, d.y, d.z);}\nmat4 Frustumf2(float left, float right, float bottom, float top, float znear, float zfar) {\n    float t, t2, t3, t4;\n    t = 2.0 * znear;\n    t2 = right - left;\n    t3 = top - bottom;\n    t4 = zfar - znear;\n\treturn mat4(\n\t\tvec4(t / t2,\t\t\t\t0.0,\t\t\t\t\t0.0,\t\t\t\t\t\t0.0),\n        vec4(0.0,\t\t\t\t\tt / t3,\t\t\t0.0,\t\t\t\t\t\t0.0),\n        vec4((right + left) / t2,\t(top + bottom) / t3,\t(-zfar - znear) / t4,\t-1.0),\n\t    vec4(0.0,\t\t\t\t\t0.0,\t\t\t\t\t(-t * zfar) / t4,\t\t0.0)\n\t);\n}\nmat4 Perspectivef2(float fovyInDegrees, float aspectRatio, float znear, float zfar) {\n    float ymax, xmax;\n    float t, t2, t3, t4;\n    ymax = znear * tan(fovyInDegrees * PI / 360.0);\n    xmax = ymax * aspectRatio;\n    return Frustumf2(-xmax, xmax, -ymax, ymax, znear, zfar);\n}\nvoid camUpdate(inout Cam cam) {\n\tcam.m_view = rotate(mat4_identity(), -cam.m_pitch, vec3(1.0f, 0.0f, 0.0f));\n\tcam.m_view = rotate(cam.m_view, -cam.m_yaw, vec3(0.0f, 1.0f, 0.0f));\n\tcam.m_view = translate2(cam.m_view, -cam.m_position);\n\tcam.m_projection = Perspectivef2(cam.m_fov, float(cam.m_width) / float(cam.m_height), kCamNear, kCamFar);    \n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 col, in vec2 uv0 )\n{  \n    col = vec4(0.0);\n    \n    vec2 uv = uv0 - 0.5;\n    \n    \n    vec4 iMouseLast     = texelFetch(iChannel0, ivec2(0, 0), 0);\n    vec4 iMouseAccuLast = texelFetch(iChannel0, ivec2(1, 0), 0);\n\n    bool shift = texelFetch(iChannel1, ivec2(16, 0), 0).x != 0.0;\n    \n    vec2 mouseDelta = (iMouse.xy - iMouseLast.xy);\n    \n    bool cond0 = iMouse.z > 0.0 && iMouseLast.z > 0.0;\n    vec2 mouseDelta2 = cond0 && !shift ? mouseDelta.xy : vec2(0.0);\n    vec2 mouseDelta3 = cond0 &&  shift ? mouseDelta.xy : vec2(0.0);\n    \n    vec2 iMouseAccu1 = iMouseAccuLast.xy + mouseDelta2;\n    vec2 iMouseAccu2 = iMouseAccuLast.zw + mouseDelta3;\n    \n    if(uv.x == 0.0 && uv.y == 0.0) col = iMouse;  \n    if(uv.x == 1.0 && uv.y == 0.0) col = vec4(iMouseAccu1, iMouseAccu2);\n}\n","name":"Buffer D","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{       \n        if (fragCoord.x >= 64.0)return;\n        if(iFrame > 2){\n            fragColor = texture(iChannel3, fragCoord/iResolution.xy);\n            return;\n        }\n        uint idx = uint(fragCoord.x) + 64u*uint(fragCoord.y); \n        \n        if(0u <= idx && idx < 2504u){\n\nconst uint uOctree[2504] = uint[](0x80000008u,0x80000010u,0x80000018u,0x80000020u,0x80000028u,0u,0u,0u,\n0x80000030u,0x80000038u,0x80000040u,0x80000048u,0x80000050u,0x80000058u,0x80000060u,0x80000068u,\n0x80000070u,0u,0x80000078u,0u,0u,0u,0u,0u,\n0x80000080u,0x80000088u,0u,0u,0u,0u,0u,0u,\n0x80000090u,0u,0u,0u,0u,0u,0u,0u,\n0x80000098u,0x800000a0u,0x800000a8u,0x800000b0u,0u,0u,0u,0u,\n0x800000b8u,0x800000c0u,0x800000c8u,0x800000d0u,0u,0u,0u,0x800000d8u,\n0x800000e0u,0x800000e8u,0x800000f0u,0x800000f8u,0u,0u,0x80000100u,0x80000108u,\n0x80000110u,0x80000118u,0x80000120u,0x80000128u,0x80000130u,0x80000138u,0u,0u,\n0x80000140u,0x80000148u,0x80000150u,0x80000158u,0x80000160u,0x80000168u,0x80000170u,0u,\n0u,0u,0u,0x80000178u,0u,0u,0u,0x80000180u,\n0u,0u,0x80000188u,0x80000190u,0u,0u,0x80000198u,0x800001a0u,\n0u,0x800001a8u,0u,0x800001b0u,0u,0x800001b8u,0u,0x800001c0u,\n0x800001c8u,0x800001d0u,0x800001d8u,0x800001e0u,0x800001e8u,0x800001f0u,0x800001f8u,0x80000200u,\n0x80000208u,0u,0x80000210u,0u,0u,0u,0u,0u,\n0x80000218u,0u,0x80000220u,0u,0u,0u,0u,0u,\n0x80000228u,0x80000230u,0u,0u,0u,0u,0u,0u,\n0x80000238u,0x80000240u,0u,0u,0u,0u,0u,0u,\n0x80000248u,0u,0u,0u,0u,0u,0u,0u,\n0u,0u,0u,0x80000250u,0u,0u,0u,0u,\n0u,0u,0u,0x80000258u,0u,0u,0u,0u,\n0u,0x80000260u,0u,0u,0u,0u,0u,0u,\n0u,0x80000268u,0u,0u,0u,0u,0u,0u,\n0x80000270u,0x80000278u,0x80000280u,0x80000288u,0u,0u,0u,0u,\n0x80000290u,0x80000298u,0x800002a0u,0x800002a8u,0u,0u,0u,0u,\n0x800002b0u,0x800002b8u,0x800002c0u,0x800002c8u,0u,0u,0u,0u,\n0x800002d0u,0x800002d8u,0x800002e0u,0x800002e8u,0u,0u,0u,0x800002f0u,\n0u,0u,0u,0x800002f8u,0u,0u,0u,0x80000300u,\n0x80000308u,0x80000310u,0x80000318u,0x80000320u,0u,0u,0u,0u,\n0x80000328u,0x80000330u,0x80000338u,0x80000340u,0u,0u,0u,0u,\n0x80000348u,0x80000350u,0x80000358u,0x80000360u,0u,0u,0u,0u,\n0x80000368u,0x80000370u,0x80000378u,0x80000380u,0u,0u,0x80000388u,0u,\n0u,0u,0u,0u,0u,0u,0x80000390u,0x80000398u,\n0u,0u,0x800003a0u,0u,0u,0u,0x800003a8u,0u,\n0x800003b0u,0x800003b8u,0x800003c0u,0x800003c8u,0u,0u,0u,0u,\n0x800003d0u,0x800003d8u,0x800003e0u,0x800003e8u,0x800003f0u,0x800003f8u,0u,0x80000400u,\n0x80000408u,0x80000410u,0x80000418u,0x80000420u,0u,0u,0u,0u,\n0x80000428u,0x80000430u,0x80000438u,0x80000440u,0x80000448u,0u,0u,0u,\n0u,0x80000450u,0u,0u,0u,0u,0u,0u,\n0x80000458u,0x80000460u,0u,0x80000468u,0u,0x80000470u,0u,0x80000478u,\n0x80000480u,0x80000488u,0x80000490u,0x80000498u,0x800004a0u,0x800004a8u,0x800004b0u,0x800004b8u,\n0x800004c0u,0x800004c8u,0x800004d0u,0x800004d8u,0x800004e0u,0u,0x800004e8u,0u,\n0x800004f0u,0x800004f8u,0x80000500u,0x80000508u,0u,0u,0u,0u,\n0x80000510u,0x80000518u,0x80000520u,0x80000528u,0u,0x80000530u,0u,0u,\n0x80000538u,0x80000540u,0x80000548u,0x80000550u,0x80000558u,0x80000560u,0x80000568u,0x80000570u,\n0x80000578u,0u,0x80000580u,0u,0x80000588u,0u,0x80000590u,0u,\n0u,0u,0u,0u,0x80000598u,0x800005a0u,0u,0u,\n0u,0u,0x800005a8u,0x800005b0u,0u,0u,0x800005b8u,0x800005c0u,\n0u,0u,0x800005c8u,0x800005d0u,0u,0u,0x800005d8u,0x800005e0u,\n0u,0u,0u,0u,0u,0u,0x800005e8u,0x800005f0u,\n0u,0u,0x800005f8u,0x80000600u,0u,0u,0x80000608u,0x80000610u,\n0u,0u,0x80000618u,0x80000620u,0u,0u,0x80000628u,0x80000630u,\n0u,0u,0x80000638u,0x80000640u,0u,0u,0x80000648u,0x80000650u,\n0x80000658u,0x80000660u,0x80000668u,0x80000670u,0x80000678u,0x80000680u,0x80000688u,0x80000690u,\n0x80000698u,0u,0u,0u,0x800006a0u,0x800006a8u,0u,0x800006b0u,\n0x800006b8u,0x800006c0u,0x800006c8u,0x800006d0u,0x800006d8u,0x800006e0u,0x800006e8u,0x800006f0u,\n0x800006f8u,0x80000700u,0u,0u,0u,0u,0u,0u,\n0x80000708u,0x80000710u,0x80000718u,0x80000720u,0x80000728u,0x80000730u,0x80000738u,0x80000740u,\n0x80000748u,0x80000750u,0x80000758u,0x80000760u,0x80000768u,0x80000770u,0x80000778u,0x80000780u,\n0x80000788u,0x80000790u,0u,0u,0x80000798u,0x800007a0u,0u,0u,\n0u,0x800007a8u,0u,0u,0x800007b0u,0x800007b8u,0x800007c0u,0u,\n0x800007c8u,0x800007d0u,0x800007d8u,0x800007e0u,0x800007e8u,0x800007f0u,0x800007f8u,0x80000800u,\n0x80000808u,0x80000810u,0x80000818u,0x80000820u,0x80000828u,0x80000830u,0x80000838u,0x80000840u,\n0x80000848u,0x80000850u,0u,0u,0u,0u,0u,0u,\n0x80000858u,0x80000860u,0u,0u,0u,0u,0u,0u,\n0x80000868u,0x80000870u,0x80000878u,0x80000880u,0u,0u,0u,0u,\n0x80000888u,0x80000890u,0x80000898u,0x800008a0u,0u,0u,0u,0u,\n0x800008a8u,0x800008b0u,0x800008b8u,0x800008c0u,0u,0u,0u,0u,\n0x800008c8u,0x800008d0u,0x800008d8u,0x800008e0u,0u,0u,0u,0u,\n0x800008e8u,0x800008f0u,0x800008f8u,0x80000900u,0u,0u,0u,0u,\n0x80000908u,0x80000910u,0x80000918u,0x80000920u,0u,0u,0u,0u,\n0x80000928u,0x80000930u,0x80000938u,0x80000940u,0u,0u,0u,0u,\n0x80000948u,0x80000950u,0x80000958u,0x80000960u,0u,0u,0u,0u,\n0x80000968u,0x80000970u,0x80000978u,0x80000980u,0u,0u,0u,0u,\n0u,0u,0x80000988u,0x80000990u,0u,0u,0u,0u,\n0u,0u,0x80000998u,0x800009a0u,0u,0u,0u,0u,\n0x800009a8u,0x800009b0u,0u,0u,0u,0u,0u,0u,\n0x800009b8u,0x800009c0u,0u,0u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0u,0xc0555555u,0xc0111111u,0u,0u,0u,0u,\n0u,0u,0u,0u,0u,0u,0u,0xc0cc3366u,\n0u,0u,0u,0xc0cc6699u,0u,0u,0u,0xc0cc6699u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0u,0xc0111111u,0xc0555555u,0u,0u,0u,0u,\n0u,0u,0u,0u,0u,0u,0xc0cc3366u,0u,\n0u,0u,0u,0u,0u,0u,0u,0xc0cc3366u,\n0u,0u,0u,0u,0u,0u,0xc0cc3366u,0u,\n0u,0u,0xc0cc6699u,0u,0u,0u,0xc0cc6699u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0u,0u,0xc0222222u,0u,0u,0xc0222222u,0u,\n0xc0222222u,0u,0xc0222222u,0u,0u,0xc0444444u,0u,0xc0222222u,\n0xc0222222u,0u,0xc0555555u,0xc0111111u,0u,0xc0444444u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0u,0u,0u,0u,0xc0cc3366u,0u,0u,\n0u,0u,0u,0xc0222222u,0u,0u,0u,0u,\n0u,0u,0u,0u,0u,0u,0xc0222222u,0u,\n0u,0u,0u,0xc06699ffu,0u,0u,0u,0xc0cc6699u,\n0u,0u,0xc0cc3366u,0u,0u,0u,0u,0xc0cc3366u,\n0u,0u,0u,0xc06699ffu,0u,0xc0cc3366u,0xc0663333u,0xc0222222u,\n0u,0u,0xc0cc3366u,0u,0u,0xc0cc3366u,0u,0xc0cc3366u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0993366u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0xc0993366u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0u,0xc06699ffu,0u,0xc0111111u,0u,0xc06699ffu,0xc0111111u,\n0u,0u,0u,0xc06699ffu,0u,0xc0111111u,0xc0111111u,0xc06699ffu,\n0u,0u,0u,0u,0xc0111111u,0xc0222222u,0u,0u,\n0u,0u,0u,0u,0xc0222222u,0xc0111111u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0xc0222222u,0u,0xc0222222u,0xc0444444u,0u,0xc0222222u,0u,\n0u,0xc0222222u,0xc0111111u,0xc0555555u,0xc0444444u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0u,0u,0u,0u,0xc0cc3366u,0u,0u,0u,\n0xc0222222u,0xc0111111u,0xc0222222u,0xc0222222u,0xc0111111u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0111111u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0444444u,0xc0111111u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0111111u,0u,0u,0xc0222222u,0xc0222222u,0u,0u,\n0xc0111111u,0xc0222222u,0u,0u,0xc0222222u,0xc0222222u,0u,0u,\n0xc0222222u,0xc0111111u,0xc0222222u,0xc0222222u,0xc0cc3366u,0xc0111111u,0xc0cc3366u,0xc0cc3366u,\n0xc0111111u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0111111u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,\n0xc0222222u,0xc0cc3366u,0xc0cc3366u,0u,0xc0cc3366u,0xc0cc3366u,0u,0xc0cc3366u,\n0xc0cc3366u,0xc0222222u,0u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0u,\n0u,0u,0xc06699ffu,0u,0u,0u,0xc0cc6699u,0u,\n0u,0u,0u,0xc0cc3366u,0u,0u,0xc0cc3366u,0u,\n0u,0u,0xc06699ffu,0u,0xc0cc3366u,0u,0xc0222222u,0xc0663333u,\n0u,0u,0u,0xc0cc3366u,0xc0cc3366u,0u,0xc0cc3366u,0u,\n0u,0u,0u,0u,0u,0xc0cc3366u,0u,0u,\n0u,0u,0u,0u,0xc0cc3366u,0u,0u,0u,\n0u,0u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0u,0u,0u,0xc0cc6699u,0u,0u,0xc0663333u,0xc0cc3366u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0xc0222222u,0u,0xc0cc3366u,0xc0663333u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0xc0222222u,0u,0xc0ffffffu,0u,0xc0222222u,0u,0xc0ffffffu,\n0xc0ffffffu,0xc0ffffffu,0xc0ffffffu,0xc0222222u,0xc0ffffffu,0xc0ffffffu,0xc0ffffffu,0xc0222222u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0u,0u,0u,0xc0222222u,\n0u,0u,0xc0cc3366u,0u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0u,0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0u,0xc0cc6699u,0u,0u,0u,0xc0cc3366u,0xc0663333u,\n0u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0u,0xc0222222u,0xc0663333u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0u,0u,0u,0u,\n0xc0ffffffu,0xc0ffffffu,0xc0222222u,0xc0ffffffu,0xc0ffffffu,0xc0ffffffu,0xc0222222u,0xc0ffffffu,\n0xc0222222u,0u,0xc0ffffffu,0u,0xc0222222u,0u,0xc0ffffffu,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0u,0u,0xc0222222u,0u,\n0xc0222222u,0u,0xc0222222u,0u,0u,0u,0u,0u,\n0u,0u,0u,0u,0u,0u,0u,0xc0cc3366u,\n0xc0663333u,0xc0cc3366u,0u,0xc0cc3366u,0xc0663333u,0xc0cc3366u,0xc0cc3366u,0xc06699ffu,\n0u,0u,0u,0xc0222222u,0u,0u,0u,0xc0222222u,\n0xc0663333u,0xc0cc3366u,0u,0xc0cc3366u,0xc0663333u,0xc0cc3366u,0xc0663333u,0xc0cc3366u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0xc0663333u,0xc0cc3366u,0xc0663333u,0xc0cc3366u,0xc0cc99ffu,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0xc0663333u,0xc0cc3366u,0xc0222222u,0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0u,0u,0u,0u,0xc0222222u,0u,0u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0xc0ffffffu,0xc0222222u,0xc0cc99ffu,0xc0222222u,0xc0ffffffu,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0cc99ffu,0xc0222222u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0xc0222222u,0u,0xc0222222u,0u,0u,0u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc06699ffu,0xc06699ffu,0xc0cc3366u,0xc0cc3366u,0xc0111111u,0xc099ccffu,0xc0cc3366u,0xc0cc3366u,\n0xc099ccffu,0xc099ccffu,0xc0cc3366u,0xc0cc3366u,0xc099ccffu,0xc0111111u,0xc0cc3366u,0xc0cc3366u,\n0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0u,0xc0cc3366u,\n0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0u,\n0xc0cc3366u,0xc06699ffu,0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0cc3366u,0xc0663333u,0xc0cc3366u,0u,0xc0cc3366u,0xc0663333u,0xc06699ffu,0xc0cc3366u,\n0u,0u,0u,0u,0u,0u,0xc0cc3366u,0u,\n0xc0cc3366u,0xc0663333u,0xc0cc3366u,0u,0xc0cc3366u,0xc0663333u,0xc0cc3366u,0xc0663333u,\n0u,0u,0xc0222222u,0u,0u,0u,0xc0222222u,0u,\n0xc0cc3366u,0xc0663333u,0xc0cc3366u,0xc0663333u,0xc0222222u,0xc0cc99ffu,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0xc0cc3366u,0xc0663333u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0cc3366u,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0xc0cc3366u,0xc0cc3366u,0u,0u,0xc0cc3366u,0xc0cc3366u,0u,0u,\n0xc0cc3366u,0xc0cc3366u,0u,0u,0xc0cc3366u,0xc0cc3366u,0u,0u,\n0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0cc3366u,0xc0cc3366u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0u,0u,0u,0u,0xc0222222u,0u,0u,0u,\n0u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0xc0222222u,0u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0ffffffu,0xc0222222u,0xc0cc99ffu,0xc0222222u,0xc0ffffffu,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0cc99ffu,0xc0222222u,0xc0cc3366u,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,0xc0222222u,0u,\n0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,0xc0222222u,\n0xc0222222u,0u,0xc0222222u,0u,0u,0u,0xc0222222u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0u,0u,0u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0u,0u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0xc0666699u,0xc0666699u,0xc0666699u,0xc0666699u,0u,0u,0xc0ff3399u,0xc0ff3399u,\n0u,0u,0u,0u,0u,0u,0u,0xc0222222u,\n0u,0u,0xc0222222u,0u,0u,0u,0u,0u,\n0u,0u,0u,0xc0222222u,0u,0u,0u,0u,\n0u,0u,0u,0u,0u,0u,0xc0222222u,0u,\n0u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0u,0u,0u,0u,0u,0u,0u,\n0u,0xc0222222u,0u,0u,0u,0u,0u,0u,\n0xc0222222u,0u,0u,0u,0u,0u,0u,0u); \n\n           uint data = uOctree[idx];\n            fragColor = vec4(float(data&255u), \n                             float((data>>8u)&255u),\n                             float((data>>16u)&255u),\n                             float((data>>24u)&255u));\n            return;\n        }\n        fragColor = texture(iChannel3, fragCoord/iResolution.xy);    \n}","name":"Buffer A","description":"","type":"buffer"}]}