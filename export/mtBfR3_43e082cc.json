{"ver":"0.1","info":{"id":"mtBfR3","date":"1694333176","viewed":37,"name":"Fluid Circles","username":"hotdudehvfun","description":"Fluid circles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles","colors","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// generate colors\nvec3 palette(float t) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(0.8, 0.8, 0.5);\n    vec3 d = vec3(0.0, 0.200, 0.500);\n    return a + b * cos(6.28318 * (c * t + d));\n}\n\n// main function\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    \n    // uv from center of screen\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n\n    // Normalize oscillation to [0, 1]\n    float osc = 0.5 * (sin(iTime) + 1.0);\n\n    // Use smoothstep directly to control appearance\n    float appearance_control = smoothstep(0.0, 1.0, osc) * 19.0 + 1.0;\n\n    float d = length(uv);\n    d = sin(d * 4.0 + iTime) / appearance_control;\n    d = abs(d);\n    d = smoothstep(0.0, 0.1, d);\n    d = 0.2 / d;\n    vec3 col = palette(uv.x * uv.y * sin(iTime)) * d;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}