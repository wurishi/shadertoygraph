{"ver":"0.1","info":{"id":"DdtcRH","date":"1694733625","viewed":88,"name":"Everyday Skeletons","username":"Apologet","description":"First try","likes":4,"published":1,"flags":64,"usePreview":0,"tags":["everydayskeletons"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdt3WM","filepath":"https://soundcloud.com/kordhell/murder-in-my-mind","previewfilepath":"https://soundcloud.com/kordhell/murder-in-my-mind","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// based on https://www.shadertoy.com/view/MslBDN\n// used here: https://www.youtube.com/watch?v=hj3q7xZME1M\n#define s(x) smoothstep(0.15, 0.3, x * 1.1 - 0.1)\n\nvec3 chromaKey(vec3 x, vec3 y){\n\tvec2 c = s(vec2(x.g - x.r * x.y, x.g));\n    \n    return mix(x, y, c.x * c.y);\n}\nvec3 getTexture(vec2 p){\n\tvec4 s = texture(iChannel0, p);\n    return s.xyz * s.w;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n\n    //vec2 uv = -1.0 + 2.0 * vUv; // for use within shaderamp\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec2 nuv = uv* 2.0 - 1.0;\n    //vec2 nuv = uv; //* 2.0 - 1.0; // for use within shaderamp\n\n    nuv.x /= iResolution.y / iResolution.x;\n    nuv.x /= 0.9;\n    nuv.y /= 0.9;\n\n    float bpm = 1.0 / 60.0 * 84.3;\n    float t = iTime;\n    float pi = 3.1415926535;\n    float drum = pow(abs(sin(t * bpm * pi)), 32.0);\n    float texstep = 1.0 / 512.0;\n\n    // 23hz per pixel; 512 pixels\n\n    fragColor.x = drum;\n    fragColor.y = pow(abs(sin(t * bpm * pi * 4.0)), 32.0) * uv.y;\n\n    // uv = 0..1\n    // resx = 800~\n    float pixel = uv.x * iResolution.x;\n    float muvx = length(nuv);\n    float mx = muvx / 512.0 * iResolution.x * (0.15 + 0.5 * pow(muvx, 4.0));\n    float mu = texture(iChannel1, vec2(mx, 0.25)).x;\n    float outer = step(0.0, muvx);\n    float inner = step(0.15, 1.0 - muvx);\n\n    vec3 col0 = vec3(0.0, 0.0, 2.8) * mu * 0.2;\n    col0 += pow(mu, 11.0) * 0.2;\n    col0 += pow(drum * mu * muvx, 1.2) * 0.2;\n\n    vec3 col1 = vec3(sin(iTime)/1.5 + 0.4 + 0.4 * mu, 0.3 + 0.2 * mu, 0.2 + 0.3 * mu) * pow(mu, 2.0) * 3.0;\n    vec3 col2 = vec3(0.0, 0.0, 0.0);\n\n        \n    vec3 col_greenscreen = getTexture(uv);\n    col0 = chromaKey(col_greenscreen, col0);\n    col1 = chromaKey(col_greenscreen, col1);\n    col2 = chromaKey(col_greenscreen, col2);\n    \n\n    fragColor.xyz = col2 * max(0.0, (1.0 - inner));\n    fragColor *= pow(max(fragColor - .2, 0.0), vec4(1.4)) * .5;\n\n    fragColor.xyz += abs(sin(nuv.y * 10.0 * bpm * (1.0 - inner) + t * 5.0)) * (1.0 - inner) * 0.1;\n    fragColor.xyz += fract(sin(nuv.y * 30.0 * bpm * (1.0 - inner) + t * 2.0)) * (1.0 - inner) * 0.2 * mx * 0.5;\n    \n    \n    fragColor.xyz += col1 * inner * outer * 1.0;\n    fragColor.xyz += col0 * inner * outer;\n    fragColor.xyz += col1 * inner * outer * sin(t * bpm + nuv.y * 15.0 * mu);\n    \n    fragColor *= pow(max(fragColor - .2, 0.0), vec4(1.4)) * .5;\n\n}","name":"Image","description":"","type":"image"}]}