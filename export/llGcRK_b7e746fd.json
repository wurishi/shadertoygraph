{"ver":"0.1","info":{"id":"llGcRK","date":"1536942105","viewed":1039,"name":"Kaleidoscope Illusion ","username":"tiff","description":"Kaleidoscope","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define rot(a) mat2(cos(a + PI*0.25*vec4(0,6,2,0)))\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n    uv /= iResolution.y;\n    uv *= cos(iTime*0.5) + 1.5;\n    \n    fragColor.rgb = vec3(0);\n    \n    float scale = PI/3.0;\n    float m = 0.5;\n    \n    for (int i = 0 ; i < 10 ; i++) {\n        float scaleFactor = float(i)+(sin(iTime*0.05) + 1.5);\n        uv *= rot(iTime * scaleFactor * 0.01);\n        float theta = atan(uv.x, uv.y)+PI;\n        theta = (floor(theta/scale)+0.5)*scale;\n        vec2 dir = vec2(sin(theta), cos(theta));\n        vec2 codir = dir.yx * vec2(-1, 1);\n        uv = vec2(dot(dir, uv), dot(codir, uv));\n        uv.xy += vec2(sin(iTime),cos(iTime*1.1)) * scaleFactor * 0.035;\n        uv = abs(fract(uv+0.5)*2.0-1.0)*0.7;\n        vec3 p = vec3(1,5,9);\n        fragColor.rgb += exp(-min(uv.x, uv.y)*16.) * (cos(p*float(i)+iTime*0.5)*.5+.5)*m ;\n        m *= 0.9;\n        \n    }\n    \n    \n    fragColor.rgb *= 1.2;\n\tfragColor.a = 20.0;\n}","name":"Image","description":"","type":"image"}]}