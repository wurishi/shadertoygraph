{"ver":"0.1","info":{"id":"stfXRX","date":"1626168392","viewed":139,"name":"写轮眼","username":"Satenkai","description":"1","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv,vec2 center,float radius,float blur)\n{\n    float d = length(uv-center);\n    float c = smoothstep(radius,radius - blur,d);\n    return c;\n}\n\nvec3 xielunyan(vec2 uv,vec2 offset,float size)\n{\n    \n    vec3 c1 = vec3(Circle(uv + offset,vec2(0.0,0.0),0.1 * size,0.01));\n    vec3 c2 = vec3(Circle(uv + offset,vec2(size * 0.1,0.0),0.2 * size,0.01));\n    vec3 c3 = vec3(Circle(uv + offset,vec2(size * 0.15,0.05 * size),0.16 * size,0.01));\n    \n    vec3 cmix = max(c1, mix(c2 - c3,vec3(0.0),step((uv + offset).y,0.0)));\n    return cmix;\n}\n\nvec2 rot(vec2 uv,float angle)\n{\n    //uv = uv - vec2(0.5);\n    float s = sin(angle);\n    float c = cos(angle);\n    uv = mat2(c,-s,s,c) * uv;\n    //uv = uv + vec2(0.5);\n    return uv;\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    uv-= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n\n    vec2 offset1 = vec2(0.0,0.0); \n\n    vec3 c1 = 1.0 - xielunyan(rot(rot(uv,iTime * 0.1 +  0.0) + vec2(0.0,0.33),2.1),offset1,0.8);\n    vec3 c2 = 1.0 - xielunyan(rot(rot(uv,iTime * 0.1 +  2.0) + vec2(0.0,0.33),2.1),offset1,0.8);\n    vec3 c3 = 1.0 - xielunyan(rot(rot(uv,iTime * 0.1 +  4.2) + vec2(0.0,0.33),2.1),offset1,0.8);\n    vec3 center = 1.0 - vec3(Circle(uv,vec2(0.0),0.1,0.01));\n    vec3 cmix = min(min(min(c1,c2),c3),center);\n    \n    vec3 bg = vec3(Circle(uv,vec2(0.0,0.0),0.5,0.01)) \n    * vec3(1.0,0.0,0.0) * smoothstep(0.2,1.2,1.0-length(uv));\n    \n    bg = mix(vec3(0.25),bg,Circle(uv,vec2(0.0,0.0),0.525,0.01));\n    \n    \n    vec3 incircle = 1.0 - (vec3(Circle(uv,vec2(0.0,0.0),0.35,0.01) - Circle(uv,vec2(0.0,0.0),0.34,0.01)));\n    \n    bg = min(bg,incircle);\n   \n    vec3 col = min(cmix,bg);//mix(bg,1.0 - clamp(cmix + 0.75,0.0,1.0),c3);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}