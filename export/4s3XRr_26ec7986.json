{"ver":"0.1","info":{"id":"4s3XRr","date":"1457358935","viewed":1131,"name":"naruto","username":"thu_yumeng","description":"2d distance","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2ddistance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 backColor = vec4(227./256.,206./256.,178./256.,0.);\n\nfloat circle(vec2 pos, vec2 center, float radius){\n\t//float d = length(pos - center) - radius;\n    float d = ((pos.x - center.x) * (pos.x - center.x) +\n        \t  (pos.y - center.y) * (pos.y - center.y) -\n        \t   radius * radius)/(radius * radius);\n    \n    return d;\n}\n\n//æ¤­åœ†éšå‡½æ•°\nfloat ellipse(vec2 center, float a, float b, vec2 coord){\n\tfloat a2 = a * a;\n    float b2 = b * b;\n    return (b2 * (coord.x - center.x) * (coord.x - center.x) +\n            a2 * (coord.y - center.y) * (coord.y - center.y) -\n            a2 * b2)/(a2 * b2);\n}\n\n//æ­£æ–¹å½¢\nfloat rect(vec2 pos, vec2 center, float len){\n\tvec2 dis = abs(pos - center);\n    float d = (max(dis.x,dis.y)-len)/len;\n    return d; \n}\n\n\n//ä¸‰è§’å½¢\nfloat cross2d(vec2 A, vec2 B,vec2 P){\n\treturn (B.x - A.x)*(P.y - A.y) - (B.y - A.y)*(P.x - A.x);\n}\n\nfloat triangle(vec2 A,vec2 B, vec2 C, vec2 pot){\n    float d = 1.0;\n    float scale = 1.;\n\tfloat d1 = scale*cross2d(A, B ,pot);\n    d = min(d1,d);\n    float d2 = scale*cross2d(B, C ,pot);\n    d = min(d2,d);\n    float d3 = scale*cross2d(C, A ,pot);\n    d = min(d3,d);\n\t\n    d = (-1.)*d;\n    \n    return d;\n}\n//union\nfloat sdunion(float a, float b){\n\treturn min(a, b);\n}\n\n//intersection\nfloat sdintersection(float a, float b){\n\treturn max(a, b);\n}\n\n//difference\nfloat sddifference(float a, float b){\n\treturn max(a, (-1.)*b);\n}\n\n//åšæ—‹è½¬\nvec2 rotation(vec2 vec,float angle){\n\tmat2 rot_matrix;\n    rot_matrix[0] = vec2(cos(angle),sin(angle));\n    rot_matrix[1] = vec2(-sin(angle),cos(angle));\n    return vec*rot_matrix;\n}\n\nvec2 transform(vec2 vec, vec2 offset){\n\tvec = vec - offset;\n    return vec;\n}\n\n\nvec4 tail(vec2 originalPos,vec2 offset, float angle, vec2 scale)\n{\n    vec2 vec = originalPos;\n\n    vec = transform(vec,offset);\n    vec = rotation(vec,angle);\n    vec = vec/scale;\n\tvec2 ct = vec2(0.,0.1);\n\n    float d1 = 2.*circle(vec,ct,.2);\n    \n    vec2 ep = vec2(0.,0.);\n   // ep = transform(ep,offset);\n    float d2 = smoothstep(-1.2,1.6,ellipse(ep,.18,.1,vec));\n    \n    float d = smoothstep(0.,1.,sdintersection(d1,d2));\n\t//d =d2;\n    vec4 bcol = vec4(.6,.1,.2,d);\n    return bcol;\n}\n\n\nvec4 eye(vec2 originalPos,vec2 offset, float angle, vec2 scale){\n\tvec2 vec = originalPos;\n    vec = transform(vec,offset);\n    vec = rotation(vec,angle);\n    vec = vec/scale;\n    \n    vec2 ep1 = vec2(0.,.06);\n    float d1 = ellipse(ep1,.14,.1,vec);\n    \n    vec2 ep2 = vec2(0.04,-.04);\n    float d2 = ellipse(ep2,.14,.1,vec);\n    \n    vec2 rc = vec2(0.,-.0006);\n    vec.x = vec.x*.1;\n    vec.y = vec.y*.3;\n    float d3 = rect(vec,rc,0.02);\n    \n    float d = smoothstep(0.,1.,sdintersection(sdintersection(d1,d2),d3));\n    \n    \n    vec4 bcol = vec4(.9,.4,.2,d);\n    return bcol;\n}\n\nvec4 nose(vec2 A, vec2 B, vec2 C,vec2 originalPos,vec2 offset, float rot, vec2 scale){\n    vec2 vec = originalPos;\n    vec = transform(vec, offset);\n    vec = rotation(vec, rot);\n    vec = vec/scale;\n\tfloat d = triangle(A,B,C,vec);\n    \n    d = smoothstep(-1.,1.,120.*d);\n    //vec4 bcol = vec4(.9,.1,.2,d);\n    vec4 bcol = vec4(.6,.4,.4,d);\n    //vec4 bcol = vec4(.8,.7,.2,d);\n    return bcol;\n}\n\nvec4 quad(vec2 A, vec2 B, vec2 C, vec2 originalPos, vec2 offset, float rot, vec2 scale, vec3 col){   \n\tvec2 vec = originalPos;\n    vec = transform(vec, offset);\n    vec = rotation(vec, rot);\n    vec = vec/scale;\n    float d = triangle(A,B,C,vec);\n    \n    d = smoothstep(-1.,1.,100.*d);\n    vec4 bcol = vec4(col,d);\n    return bcol;\n}\n\nvec4 lips(vec2 originalPos){\n    vec2 vec = originalPos;\n    vec2 scale = vec2(1.5,1.3);\n    vec = vec/scale;\n    vec = transform(vec,vec2(0.,-.15));\n    float pi = 3.1415926;\n    vec = rotation(vec, pi/12.);\n    \n\tfloat d1 = rect(vec,vec2(0.,0.),0.1);\n    float d2 = ellipse(vec2(0.03,-.08),.04,.03,vec);\n    float d3 = ellipse(vec2(-.03,-.08),.04,.03,vec);\n    \n    float d = sdintersection(d1,d2);\n    d3 = sdintersection(d1,d3);\n    d = sdunion(d,d3);\n    d = smoothstep(-1.,1.,4.*d);\n    vec4 bcol = vec4(0.7,0.4,0.2,d);\n    return bcol;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 originalPos = (2.0 * fragCoord - iResolution.xy)/iResolution.yy;\n    float pi = 3.1415926;\n    \n    //èƒŒæ™¯\n    vec3 col = backColor.rgb* (1. - .2*length(originalPos));\n    //tail1\n    float off = 0.1;\n    float off_y = .1;\n    vec4 bcol = tail(originalPos,vec2(.6+off,.2+off_y),pi/6.,vec2(3.0,.6));\n    col = mix(bcol.rgb,col,bcol.a);\n    //tail2\n    bcol = tail(originalPos,vec2(.65+off,.05+off_y),pi/12.,vec2(3.2,.6));\n    col = mix(bcol.rgb,col,bcol.a);\n    //tail3\n    bcol = tail(originalPos,vec2(.66+off,-.125+off_y),0.,vec2(3.1,.5));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    //eye\n    bcol = eye(originalPos,vec2(-.2,.2),pi/12.,vec2(.9,.95));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    //nose\n    bcol = nose(vec2(-.06,.0),vec2(.1,-.06),vec2(.06,.26),originalPos,\n                vec2(-.42,-.2),pi*.05,vec2(1.,1.));\n    col = mix(bcol.rgb,col,bcol.a);\n    //lips\n    bcol = lips(originalPos);\n    col = mix(bcol.rgb,col,bcol.a);\n    //hair\n    off = .08;\n    off_y = -.07;\n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(-.4+off,0.6+off_y),pi/6.,vec2(1.,1.),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(-.1+off,0.67+off_y),.0,vec2(1.,1.),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(0.16+off,0.61+off_y),pi/(-6.),vec2(1.,1.),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(0.20+off,0.61+off_y),pi/(-3.),vec2(.5,.5),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n\n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(0.04+off,0.65+off_y),pi/(-12.),vec2(.8,.5),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(-.24+off,0.65+off_y),pi/(12.),vec2(.8,.7),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    bcol = quad(vec2(-.15,-.1),vec2(.14,-.1),vec2(0.,.45),originalPos,\n                vec2(-.55+off,0.4+off_y),pi/(3.),vec2(.8,.5),vec3(.8,.6,.2));\n    col = mix(bcol.rgb,col,bcol.a);\n    \n    //è¡£é¢†\n    bcol = quad(vec2(-.15,0),vec2(.27,-.0),vec2(0.,.5),originalPos,\n                vec2(0.26,-.6),pi/-2.4,vec2(1.8,1.6),vec3(.9,.4,.3));\n    col = mix(bcol.rgb,col,bcol.a);\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}