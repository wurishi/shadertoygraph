{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"/* Compiled with Shaderforth: https://github.com/daeken/Shaderforth\n:globals\n\t@vec3 uniform =iResolution\n\t@float uniform =iTime\n;\n\n:m time iTime ;\n\niResolution frag->position cart->polar [ 1 time 2 / sin 2 * ] * =p\n\n[ p .y 5 * time 30 * - p .x p .y 3 * + 5 * + sin dup 1 swap - dup ] [ time p .y - -.2 time 30 * sin .2 * ] + hsv1->rgb ->fragcolor\n*/\n\nvec2 cart_polar(vec2 p) {\n\treturn vec2(atan(p.y, p.x), length(p));\n}\nvec3 hsv1_rgb(vec3 hsv) {\n\treturn mix(vec3(1., 1., 1.), clamp(abs(mod(hsv.x * 6. + vec3(0., 4., 2.), 6.) - 3.) - 1., 0., 1.), hsv.y) * hsv.z;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = cart_polar((fragCoord.xy / iResolution.xy * 2. - 1.) * vec2(iResolution.x / iResolution.y, 1.)) * vec2(1., sin(iTime / 2.) * 2.);\n\tfloat var_1 = sin(p.y * 5. - iTime * 30. + (p.x + p.y * 3.) * 5.);\n\tfloat var_2 = 1. - var_1;\n\tfragColor = vec4(hsv1_rgb(vec3(var_1 + iTime - p.y, var_2 + -.2, var_2 + sin(iTime * 30.) * .2)), 1.);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xlf3z7","date":"1419715394","viewed":191,"name":"Seizure Candy","username":"daeken","description":"Random color experimentation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["shaderforth"],"hasliked":0,"parentid":"","parentname":""}}