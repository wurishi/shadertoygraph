{"ver":"0.1","info":{"id":"wtyGzw","date":"1578499412","viewed":145,"name":"Multicolour Bayer","username":"oskanberg","description":"Bayer dithering with multiple colours. Picks a colour proportionally to its euclidean distance from the target colour. The proportionality is imperfect (especially with more colours), but seems good enough.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dithering","bayer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec3 colours[3] = vec3[](\n        vec3(1.0, 1.0, 1.0),\n        vec3(1.0, 0.0, 0.0),\n\t\tvec3(0.0, 0.0, 0.0)\n\t);\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 hc = texture(iChannel0, uv).rgb;\n    float bayer = texture(iChannel1, fragCoord / iChannelResolution[1].xy).r;\n    \n    vec3 closest = colours[0];\n    float d = 100.;\n   \n    for(int i = 0; i < colours.length(); i++) {\n        float di = distance(colours[i], hc);\n        if (di < bayer * d * 2.) {\n            closest = colours[i];\n            d = di;\n        }\n    }       \n    \n    fragColor.rgb = closest;\n}\n","name":"Image","description":"","type":"image"}]}