{"ver":"0.1","info":{"id":"lfGyRz","date":"1731401787","viewed":41,"name":"Simple Plate","username":"BBhonmyou","description":"Try to mimic plate of metal with basic math","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["background","metal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float warp = 1./pow(length((uv.xy-iMouse.xy/iResolution.xy)/vec2(9./16.,1.))*1.5,1.2);\n    vec3 warpSpace = normalize(vec3(normalize(uv.xy-iMouse.xy/iResolution.xy),1./warp))*warp*(sin(iMouse.x/300.+iTime*2.)*0.2+0.8);\n    vec3 specific = normalize(vec3(0.4,0.6,1.));\n    // Time varying pixel color\n    vec3 col = 0.7*specific + 0.2*cos(iTime*vec3(21,34,55)/21.+(uv.xyx+warpSpace)*4.+vec3(0,2,4))*(vec3(1.)-specific);\n    \n    \n    fragColor = vec4(col,1.0);\n    vec2 space = (uv.xy) * 9000. + vec2(sin(iTime/60000.)*1000.0,0);\n    float metal = clamp(tan(space.x),0.,1.)*0.5+sin(space.x/2.+21203.1239024)*0.25*sin(space.x)+cos(space.x/4.+21230.213)*0.125*cos(space.x/2.+123.12)*cos(space.x+98543.23);\n    metal = pow(metal,1.23) * (0.7+sin(space.y/1000.+0.00001*space.x)*0.3)*0.6+0.3;\n    // Output to screen\n    fragColor = vec4(vec3(metal),1.0)*fragColor*1.95;\n    \n}","name":"Image","description":"","type":"image"}]}