{"ver":"0.1","info":{"id":"MlVcDD","date":"1536661046","viewed":81,"name":"Smilefaces","username":"shiming","description":"smile","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["smile"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a, b, t) smoothstep(a, b, t)\n#define sat(x) clamp(x, 0.0, 1.0)\n\nfloat remap01(float a, float b, float t)\n{\n    return sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t)\n{\n    return remap01(a, b, t) * (d - c) + c;\n}\n\nvec2 within(vec2 uv, vec4 rect)\n{\n    return (uv - rect.xy)/ (rect.zw - rect.xy);\n}\n\nvec4 Head(vec2 uv)\n{\n    vec4 col = vec4(0.9, 0.65, 0.1, 1.0);\n    \n    float d = length(uv);\n        \n    col.a = S(0.5, 0.49, d);\n    \n    float edgeShade = remap01(0.35, 0.5, d);\n    edgeShade *= edgeShade;\n    col.rgb *= 1.0 - edgeShade * 0.5;\n    \n    \n    col.rgb = mix(col.rgb, vec3(0.6, 0.3, 0.1), S(0.47, 0.48, d));\n    \n    float highlight = S(0.41, 0.405, d) * 0.75;\n    \n    highlight *= remap(0.41, 0.0, 0.75, 0.0, uv.y);\n    \n    col.rgb = mix(col.rgb, vec3(1.0), highlight);\n    \n    \n    \n    d = length(uv-vec2(0.25, -0.2));\n    float cheek = S(0.2, 0.01, d) * 0.4;\n    cheek *= S(0.17, 0.16, d);\n    col.rgb = mix(col.rgb, vec3(1.0, 0.1, 0.1), cheek);\n    return col;\n}\n\nvec4 Mouth(vec2 uv)\n{\n    uv -= 0.5;\n    vec4 col = vec4(0.5, 0.18, 0.05, 1.0);\n    \n    uv.y *= 1.5;\n    uv.y -= uv.x * uv.x * 2.0;\n    float d = length(uv);\n    col.a = S(0.5, 0.48, d);\n    \n    float td = length(uv - vec2(0.0, 0.6));\n    \n    vec3 toothCol = vec3(1.0) * S(0.6, 0.35, d);\n    col.rgb = mix(col.rgb, toothCol, S(0.4, 0.37, td));\n    \n    \n    td = length(uv + vec2(0.0, 0.5));\n    col.rgb = mix(col.rgb, vec3(1.0, 0.5, 0.5), S(0.5, 0.2, td));\n    return col;\n}\n\nvec4 Eye(vec2 uv)\n{\n    uv -= 0.5;\n    vec4 col = vec4(1.0);\n    \n    float d = length(uv);\n    \n    vec4 irisCol = vec4(0.3, 0.5, 1.0, 1.0);\n    col = mix(vec4(1.0), irisCol, S(0.1, 0.7, d) * 0.5);\n    \n    col.rgb *= 1.0 - S(0.45, 0.5, d) * 0.5 * sat(-uv.y - uv.x);\n    col.rgb = mix(col.rgb, vec3(0.0), S(0.3, 0.28, d));\n    \n    irisCol.rgb *= 1.0 + S(0.3, 0.05, d);\n    col.rgb = mix(col.rgb, irisCol.rgb, S(0.28, 0.25, d));\n    \n    col.rgb = mix(col.rgb, vec3(0.0), S(0.16, 0.14, d));\n    \n    \n    float highlight = S(0.1, 0.09, length(uv - vec2(-0.15, 0.15)));\n    highlight += S(0.07, 0.05, length(uv - vec2(-0.08, 0.08)));\n    col.rgb = mix(col.rgb, vec3(1.0), highlight);\n    col.a = S(0.5, 0.48, d);\n    return col;\n}\n\nvec4 Smiley(vec2 uv)\n{\n    vec4 col = vec4(0.0);\n    \n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eye = Eye(within(uv, vec4(0.03, -0.1, 0.37, 0.25)));\n    vec4 mouth = Mouth(within(uv, vec4(-0.3, -0.4, 0.3, -0.1)));\n    \n    col = mix(col, head, head.a);\n    col = mix(col, eye, eye.a);\n    col = mix(col, mouth, mouth.a);\n    \n    return col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n\n    uv -= 0.5;\n    \n    uv.x *= iResolution.x / iResolution.y;\n\n    // Output to screen\n    fragColor = Smiley(uv);\n}","name":"Image","description":"","type":"image"}]}