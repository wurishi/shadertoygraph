{"ver":"0.1","info":{"id":"csscD2","date":"1687216508","viewed":42,"name":"Push Down Transition","username":"ScratchDev","description":"For editing and shi","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["video"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    // Convert the fragment coordinate to Shader Toy's coordinate system\n    vec2 stCoord = fragCoord / iResolution.xy; \n    \n    // Define the dimensions of the rectangle\n    vec2 rectSize = vec2(1.0, 2.0); // Adjust the width and height as needed\n    \n    float t = clamp(iTime -0.5, 0.0, 1.2);  // Clamp time between 0 and 1\n    float currentValue = mix(6.0, 0.0, t);\n    // Center the rectangle on the screen\n    vec2 rectCenter = vec2(0.5, sin(sin(currentValue * iTime) * iTime) + 0.2);\n   \n    \n    // Calculate the minimum and maximum coordinates of the rectangle\n    vec2 rectMin = rectCenter - rectSize * 0.5;\n    vec2 rectMax = rectCenter + rectSize * 0.5;\n    \n    // Check if the current fragment is inside the rectangle\n    if (stCoord.x > rectMin.x && stCoord.x < rectMax.x &&\n        stCoord.y > rectMin.y && stCoord.y < rectMax.y)\n    {\n        // Set the color of the rectangle\n        fragColor = vec4(0.0, 0.0, 1.0, 0.0); // Red color (adjust as needed)\n    }\n    else\n    {\n        // Set the background color\n        fragColor = vec4(0.0, 0.0, 1.0, 0.0); // Black color (adjust as needed)\n    }\n    \n    //SEPPPPPPPPPPPPP-------\n    \n    vec2 rectSize2 = vec2(1.0,2.0); // Adjust the width and height as needed\n    \n    float t2 = clamp(iTime -0.5, 0.0, 1.2);  // Clamp time between 0 and 1\n    float currentValue2 = mix(6.0, 0.0, t2);\n    // Center the rectangle on the screen\n    vec2 rectCenter2 = vec2(0.5, atan(sin(currentValue2 * iTime+ 2.5) * iTime) + 2.0);\n   \n    \n    // Calculate the minimum and maximum coordinates of the rectangle\n    vec2 rectMin2 = rectCenter2 - rectSize2 * 0.5;\n    vec2 rectMax2 = rectCenter2 + rectSize2 * 0.5;\n    \n    // Check if the current fragment is inside the rectangle\n    if (stCoord.x > rectMin2.x && stCoord.x < rectMax2.x &&\n        stCoord.y > rectMin2.y && stCoord.y < rectMax2.y)\n    {\n        // Set the color of the rectangle\n        fragColor = vec4(0.0, 1.0, 0.0, 0.0); // Red color (adjust as needed)\n    }\n \n    \n    \n}\n","name":"Image","description":"","type":"image"}]}