{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Echophon poured some soap onto this.\n// Made into third eye tye-dye by Cale Bradbury - @netgrind 2015\n// Edited version of https://www.shadertoy.com/view/MsfGzM Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n\n\nfloat f(vec3 p) \n{ \n    p.z-=iTime*.05;\n    return length(cos(p)-.001*cos(9.*(p.z*.09*p.x-p.y)+iTime*2.0))-(0.9+sin(iTime)*.1); \n}\n\nfloat g(vec3 p)\n{\n    p.x-=iTime*.08;\n    p.y-=iTime*.13;\n    return 1./(1.-p.x*p.y*p.z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat i = iTime;\n    vec3 d = .5-vec3(fragCoord,1.)/iResolution.x;\n    d.y+=sin(0.01*i);\n    vec3 o=d;\n    float l = length(d.xyz)*5.;\n    float a = atan(d.y,d.x)*.2;\n    o.xy*= mat2(cos(i+sin(a+i))*0.1, 1.-sin(i*.05+a*l)*2.0, sin(i+a),cos(i*d.z+l)+2.0);\n    for(int i=0;i<4;i++){\n        o+=f(o)*d-g(d);\n        o*=-d-f(o)-g(d.zxy);\n    }\n    o.z = length(o*d);\n    fragColor=vec4(sin(i+abs((o+d)+length(o.xy*step(o.z,700.0))))*.3+.7,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XtS3zh","date":"1427162054","viewed":196,"name":"Glycerin Plasma","username":"echophon","description":"learn & edit shadeaday plasma","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["plasma","remix","shadeaday","edit"],"hasliked":0,"parentid":"","parentname":""}}