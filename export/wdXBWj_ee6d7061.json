{"ver":"0.1","info":{"id":"wdXBWj","date":"1589061468","viewed":117,"name":"coincoin","username":"zener","description":"My first raymarcher (thx to Iq)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarcher"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// sorry, it's a little quick & dirty, just a wink for a friend ;-)\n\n// originaly made using bonzomatic, so define fGlobalTime\n#define fGlobalTime\tiTime\n\n\nfloat smin(float a,float b,float k)\n{\n  // found on internet from Iq I presume\n  float h=max(k-abs(a-b),0.);\n  return min(a,b)-h*h/(k*4.);\n}\n\nfloat sdSphere(vec3 p,float r)\n{\n    return length(p)-r;\n}\n\nfloat sdEllipse(vec3 p,vec3 r)\n{\n  float h=length(p/r);\n  float n=length(p/r/r);\n  return h*(h-1.)/n;  \n}\n\nvec2 scene(vec3 p)\n{\n    float matNum=0.;\n\n    float d,h;\n   \n    p.x+=sin(fGlobalTime*3.1415926/4.);\n    p.z+=fract(fGlobalTime/100.)*100.;\n  \n    float rng1=4.;\n    float idx=floor((p.x+rng1/2.)/rng1)*rng1;\n    float idz=floor((p.z+rng1/2.)/rng1)*rng1;\n    p.xz=fract((p.xz+rng1/2.)/rng1)*rng1-rng1/2.;\n\n    // coincoin\n\n    vec3 pBeforeRot=p;\n    float a=fGlobalTime*3.+idx*12.+idz*42.; // this will cut\n    float sina=sin(a);\n    float cosa=cos(a);\n\n  \n    // rotate coin\n    p.xz*=mat2(cosa,-sina,sina,cosa);\n\n  \n    // head\n    h=sdSphere(p-vec3(0.,0.,0.),0.15);\n    matNum=3.;\n\n     //body\n    d=sdEllipse(p-vec3(-.2,-.3,0.),vec3(.4,.2,.3));\n    h=smin(h,d,0.1);\n    \n    d=sdEllipse(p-vec3(-.5,-.15,0.),vec3(.05,.1,.08));\n    h=smin(h,d,0.1);\n \n    // bec\n    vec3 p2=p-vec3(.15,.05,0.);\n    d=sdEllipse(p2-vec3(.0,p2.x/4.,0.),vec3(.1,.03,.08));\n    if(d<h)\n    {\n      matNum=4.;\n    }\n    h=smin(h,d,.01);\n    \n    p2=p-vec3(.15,0.,0.);\n    d=sdEllipse(p2-vec3(.0,-p2.x/4.,0.),vec3(.1,.03,.08));\n    if(d<h)\n    {\n      matNum=4.;\n    }\n\n    h=smin(h,d,.01);\n  \n    // eyes : just color\n    // white\n    p2=vec3(p.x,p.y,abs(p.z))-vec3(.16-p.y/1.5,.1,.05);\n    d=sdEllipse(p2,vec3(.02,.04,.03));\n    if(d<h)\n    {\n      matNum=5.;\n    }\n    // black\n    p2=vec3(p.x,p.y,abs(p.z))-vec3(.16-p.y/1.5,.1,.05);\n    d=sdEllipse(p2,vec3(.02,.04,.03)*0.7);\n    if(d<h)\n    {\n      matNum=6.;\n    }\n\n    p=pBeforeRot;\n    \n    // floor\n    float dfl=p.y+0.4;\n    float hole=sdEllipse(p-vec3(0.,0.2,0.),vec3(2.,1.,2.));\n    dfl=max(dfl,-hole);\n    dfl=min(dfl,p.y+0.47+0.01*sin(length(p.xz)*20.0-(fract(fGlobalTime/100.0)*100.)*10.));\n    \n    if(dfl<h)\n    {\n        h=dfl;\n        matNum=1.; // floor\n        if(length(vec2(p.x,p.z))<(1.5+0.*sin(p.z*10.)/8.))\n        {\n          matNum=2.;\n        }\n    }\n    \n    \n    return vec2(h,matNum);\n}\n\n\nvec2 raym(vec3 ro,vec3 rd)\n{\n  float t=0.0;\n  float matNum=-1.;\n  for(int i=0;i<100;i++)\n  {\n    vec3 p=ro+t*rd;\n    \n    vec2 hm=scene(p);\n    matNum=hm.y;\n    if(hm.x<0.0001)  break;\n    t+=hm.x;\n    if(t>20.)\n    {\n      matNum=-1.;\n      break;    \n    }\n  }\n    return vec2(t,matNum);\n}\n\n\nvec3 norm(vec3 p)\n{\n    vec2 e=vec2(0.0001,0.);\n    return normalize(vec3(scene(p+e.xyy).x-scene(p-e.xyy).x,\n                          scene(p+e.yxy).x-scene(p-e.yxy).x,\n                          scene(p+e.yyx).x-scene(p-e.yyx).x));\n}\n\nfloat shadow(vec3 ro,vec3 rd)\n{\n  float res=1.;\n  \n  float t=0.01;\n  for(int i=0;i<100;i++)\n  {\n    vec3 p=ro+t*rd;\n    \n    float h=scene(p).x;\n\n    res=min(res,8.*h/t);\n    \n    if(h<0.00001) break;\n    t+=h;\n    if(t>20.) break;\n    \n  }\n    return res;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{  \n  vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= 0.5;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  uv*=2.;\n  \n  \n  vec3 col=vec3(0.1,0.2,0.5);\n\n  col=mix(col,vec3(0.2),1.-uv.y);\n  \n  \n  vec3 ro=vec3(0.,0.,-1);\n  vec3 rd=normalize(vec3(uv.x,uv.y,0.)-ro);\n    \n  \n  vec3 sunDir=normalize(vec3(1.,1.,0.));\n  vec3 sunCol=vec3(4.,4.,1.);\n  vec3 bounceDir=normalize(vec3(0.,-1.,0.));\n  \n  vec3 mate1=vec3(.01,.2,.01); // ground\n  vec3 mate2=vec3(.01,.05,.5); // ground2\n  vec3 mate3=vec3(.4,.4,.01); // body\n  vec3 mate4=vec3(.4,.1,.01); // bec\n  vec3 mate5=vec3(1.); // eye white\n  vec3 mate6=vec3(.01); // eye black\n\n  \n  vec2 tm=raym(ro,rd);\n  float t=tm.x;\n  float matNum=tm.y;\n  if(matNum>0.)\n  {\n      vec3 p=ro+t*rd;    \n      vec3 nor=norm(p);\n\n      vec3 newCol=col;\n    \n      float sunDif=clamp(dot(nor,sunDir),0.,1.);\n      float sunSha=clamp(shadow(p+nor*0.002,sunDir),0.,1.);\n\n      float bounceDif=clamp(dot(nor,bounceDir),0.,1.);\n    \n      vec3 curMate=vec3(0.);\n    \n      if(matNum<1.5) // floor 1\n        curMate=mate1;\n      else if(matNum<2.5) // floor 2\n        curMate=mate2;\n      else if(matNum<3.5) // body\n        curMate=mate3;\n      else if(matNum<4.5) // bec\n        curMate=mate4;\n      else if(matNum<5.5) // eye wh\n        curMate=mate5;\n      else if(matNum<6.5) // eye bl\n        curMate=mate6;\n      \n\n      newCol=curMate*sunCol*sunDif*sunSha;\n      newCol+=curMate*bounceDif*0.2;\n      \n      \n      col=mix(newCol,col,clamp(t/20.,0.,1.));\n  }\n  \n  \n  \n    col=pow(col,vec3(.4));\n \n    \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}