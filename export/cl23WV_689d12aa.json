{"ver":"0.1","info":{"id":"cl23WV","date":"1673957669","viewed":68,"name":"GTP Golden Spiral Mandelbrot.","username":"AV2012","description":"This code generates a 3D fractal animation using the Mandelbrot set. The animation features an infinite zoom effect and a twist effect that follows the golden ratio. This was generated using ChatGTP.\n\n","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","goldenratiozoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 background = vec4(0.0, 0.0, 0.0, 0.0);\nvec3 mandelbrot(vec3 z, vec3 c) {\n    return vec3(\n        (z.x * z.x) - (z.y * z.y) - (z.z * z.z) + c.x,\n        (2.0 * z.x * z.y) + c.y,\n        (2.0 * z.x * z.z) + c.z\n    );\n}\nvec4 mandelbrot(vec4 z, vec4 c) {\n    return vec4(\n        (z.x * z.x) - (z.y * z.y) - (z.z * z.z) - (z.w * z.w) + c.x,\n        (2.0 * z.x * z.y) + c.y,\n        (2.0 * z.x * z.z) + c.z,\n        (2.0 * z.x * z.w) + c.w\n    );\n}\nfloat mandelbrot(vec3 z, vec3 c, int iterations) {\n    float n = 0.0;\n    float r2 = dot(z, z);\n    for (int i = 0; i < iterations; i++) {\n        if (r2 > 4.0) break;\n        z = mandelbrot(z, c);\n        r2 = dot(z, z);\n        n++;\n    }\n    return n;\n}\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 colorPalette(float t) {\n    return hsv2rgb(vec3(t, 1.0, 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy / iResolution.y) * 4.0 - vec2(2.0);\n    float zoom = (sin(iTime*0.5)+1.0)*0.5;\n    p *= zoom;\n    float angle = iTime * 1.6180339887;\n    vec2 rotate = mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * p;\n    vec3 z = vec3(rotate, 0);\n    vec3 c = vec3(rotate, 0);\n    int iterations = 64;\n    float n = mandelbrot(z, c, iterations);\n    vec3 color = colorPalette(n / float(iterations));\n    fragColor = vec4(color, 1.0);\n    fragColor = mix(background, fragColor, n / float(iterations));\n}","name":"Image","description":"","type":"image"}]}