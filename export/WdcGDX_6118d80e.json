{"ver":"0.1","info":{"id":"WdcGDX","date":"1621020823","viewed":56,"name":"JustForTheF***ingFun","username":"CaveDraft","description":"Fun","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fun"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(float v, float a, float b, float a_, float b_) {\n    v = (v-a)/(b-a);\n    v = v*(b_-a_)+a_;\n    return v;\n}\nvec2 map(vec2 v, vec2 a, vec2 b, vec2 a_, vec2 b_) {\n    return vec2(map(v.x,a.x,b.x,a_.x,b_.x), map(v.y,a.y,b.y,a_.y,b_.y));\n}\nvec3 map(vec3 v, vec3 a, vec3 b, vec3 a_, vec3 b_) {\n    return vec3(map(v.xy,a.xy,b.xy,a_.xy,b_.xy), map(v.z,a.z,b.z,a_.z,b_.z));\n}\n\nvec2 fromScreenSpace(vec2 screen_coordinate) {\n    return ( 2.* screen_coordinate - iResolution.xy ) / iResolution.y;;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fromScreenSpace(fragCoord);\n    vec3 color = vec3(0.0);\n    \n    vec2 uv5 = uv*5.0;\n    vec2 cell_uv = fract(uv5-0.5);\n    cell_uv = 2.0*cell_uv-1.0;\n\t\n    float n = map(sin(length(uv5)-iTime), -1.0, 1.0, 0.1, 0.9);\n    float m = smoothstep(sqrt(n),sqrt(n*.6), dot(cell_uv,cell_uv));\n    \n    color = vec3(m);\n    \n    fragColor.xyz = color;\n}\n","name":"Image","description":"","type":"image"}]}