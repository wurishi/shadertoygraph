{"ver":"0.1","info":{"id":"4tsXDn","date":"1435869082","viewed":397,"name":"Spinning Lights","username":"StanRee","description":"Uv Manipulation\nBased on https://www.shadertoy.com/view/lll3DB\n","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["uv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Get uvs\n\tvec2 uv = vec2(iResolution.x/iResolution.y,1.0);\n    uv *= (-1.0 + 2.0*fragCoord.xy / iResolution.xy);   \n    \n    //Save old uvs\n    vec2 origUvs = uv;\n    \n    //Rotation Angle\n    float a = sin(iTime*0.05)*4.2;\n    \n    //Create Rotation Matrix, Rot uvs by it\n    float cosa = cos(a);\n    float sina = sin(a);    \n    uv *= mat2(cosa, sina, -sina, cosa);\n\t\n    //Warp Uvs   \n    float warp = abs(uv.y+2.6)*(uv.y*.3+uv.x)*uv.x;\n    uv *= 3.0+1.9*warp;\n    \n    //Move uvs iwth time\n    uv.x += iTime*2.0;\n    uv.y += iTime*2.0;\n    \n    //scale up\n    uv *= 2.0;\n    \n    //Gen imagry\n    uv.y = abs(1. * 1. * sin(uv.y));\n    uv.x = abs(1. * 1. * sin(uv.x + iTime*10.0));\n\n    //Makes smaller balls!\n    //uv = pow(uv, vec2(1.0, 4.0));\n    \n    fragColor = vec4(uv.y+uv.x+0.0, (uv.y+uv.x)*1.0 - warp, 0.25+uv.y, 1.0) * vec4(.5 - (abs(clamp(warp, 0., 1.)))*0.05, 1., 0., 1.);\n}","name":"","description":"","type":"image"}]}