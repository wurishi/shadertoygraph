{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#define t iTime\n\nmat2 m(float a) {\n    float c = cos(a), s = sin(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat noise(vec3 p) {\n    vec3 i = floor(p);\n    vec3 f = fract(p);\n    f = f * f * (3.0 - 2.0 * f);\n    vec3 uvw = vec3(1.0, 57.0, 113.0);\n\n\n    float n = mix(\n        mix(\n            mix(dot(i, uvw), dot(i + vec3(1.0, 0.0, 0.0), uvw), f.x),\n            mix(dot(i + vec3(0.0, 1.0, 0.0), uvw), dot(i + vec3(1.0, 1.0, 0.0), uvw), f.x),\n            f.y),\n        mix(\n            mix(dot(i + vec3(0.0, 0.0, 1.0), uvw), dot(i + vec3(1.0, 0.0, 1.0), uvw), f.x),\n            mix(dot(i + vec3(0.0, 1.0, 1.0), uvw), dot(i + vec3(1.0, 1.0, 1.0), uvw), f.x),\n            f.y),\n        f.z);\n    return fract(sin(n) * 43758.5453);\n}\n\n\nfloat water(vec2 uv, float time) {\n    float wave = sin(uv.x * 10.0 + time) + cos(uv.y * 15.0 - time);\n    wave += sin((uv.x + uv.y) * 5.0 + time * 1.5);\n    wave *= 0.5;\n    return wave;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y; \n\n    float wave = water(uv, t);\n\n\n    float n = noise(vec3(uv * 3.0, t * 0.5));\n    wave += n * 0.2;\n\n\n    vec3 color = mix(vec3(0.0, 0.2, 0.5), vec3(0.1, 0.4, 0.8), wave * 0.5 + 0.5);\n\n\n    color += vec3(0.1) * smoothstep(0.0, 0.2, wave);\n\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4fVBWW","date":"1734048203","viewed":68,"name":"tripple","username":"zhuo1","description":"6","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["graphic"],"hasliked":0,"parentid":"","parentname":""}}