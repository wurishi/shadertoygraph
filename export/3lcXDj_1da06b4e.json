{"ver":"0.1","info":{"id":"3lcXDj","date":"1582017731","viewed":152,"name":"Monochrome Voronoi","username":"taso69","description":"Voronoi function from https://www.shadertoy.com/view/4sl3Dr","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 hash22( vec2 p) {\n    return fract(sin(dot(p, vec2(12.9898,78.233))) * vec2(245.587,437.585));\n}\n\nvec3 hsv2rgb(float h, float s, float v){\n    return ((clamp(abs(fract(h+vec3(0,2,1)/3.)*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 p = fragCoord.xy*2.0 - iResolution.xy;\n    p /= min(iResolution.x,iResolution.y);\n\n    p *= 3.0;\n    vec2 uv = fract(p) - 0.5;\n    vec2 id = floor(p);\n\n    float minDist = 100.0;\n    vec2 cid = vec2(0.0);\n    vec3 col = vec3(0.0);\n    vec2 res = vec2(8.0);\n    for(float i = -1.; i <= 1.; i++){\n        for(float j = -1.; j <= 1.; j++){\n            vec2 o = vec2(i,j);\n            vec2 n = hash22(id + o);\n            vec2 pos = o + sin(n*iTime)*0.3;\n            \n            float d = abs(uv.x - pos.x) + abs(uv.y - pos.y);\n           \n            if(d < res.x){\n                res.y = res.x;\n                res.x = d;\n                cid = id + o;\n            }else if(d < res.y){\n                res.y = d;\n                cid = id+o;\n            }  \n\n        } \n    }\n    minDist  = res.y -res.x;\n    //if(minDist < 0.3) minDist = smoothstep(0.3, 1., 1.-minDist)*.03;\n    col += vec3(minDist); \n    col += vec3(abs(sin(minDist*(10.0+5.0*cos(iTime)))));\n    float m = step(abs(sin(minDist*(10.0+5.0*cos(iTime)))),1.0);\n    //col += m*vec3(1.0,0.0,0.0);\n    //col += vec3(0.0,uv);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}