{"ver":"0.1","info":{"id":"NlVfWh","date":"1664439916","viewed":139,"name":"Line SDF Example","username":"luffy531","description":"Line SDF function example","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","line"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfSegment(vec2 p, vec2 a, vec2 b) {\n    float h = min(1.0, max(0.0, dot(p - a, b - a) / dot(b - a, b - a))); //dot(b - a, b - a) == b-a * b-a\n    return length(p - (a + h * (b - a))); // return distance from point to line\n\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    vec2 pointA = vec2(0.2, 0.5);\n    vec2 pointB = vec2(0.8, 0.5);\n    float thickness = 0.03;\n    float crispness = 0.01;\n    \n    float distance = sdfSegment(uv, pointA, pointB);\n    \n    float smoothStep = smoothstep(thickness, (thickness + crispness), distance);\n    \n    col = 1.0 - vec3(smoothStep);\n    \n    //col = 1.0 - vec3(distance - thickness) * 50.0;\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}