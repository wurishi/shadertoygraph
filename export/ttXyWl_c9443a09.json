{"ver":"0.1","info":{"id":"ttXyWl","date":"1593383990","viewed":332,"name":"A perfectly square grid","username":"toocanzs","description":"idea from @InertialObservr on twitter\n\nhttps://twitter.com/InertialObservr/status/1276612257288294400","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["grid","illusion","square","perception"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a) \n{\n    float c = cos(a);\n    float s = sin(a);\n\treturn mat2(c,s,-s,c);\t\n}\n#define PI 3.141596\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    ivec2 gridI = ivec2(uv * 10.);\n    bool grid = (gridI.x % 2 == gridI.y % 2);\n    vec3 col = grid ? vec3(0.749) : vec3(0.596);\n    vec2 ruv = -1. + 2. * fract(uv * 10. + 0.5);\n    float x = smoothstep(0., 0.5, fract(iTime*0.5))*(0.5*PI);\n    ruv *= rot(x);\n    float lineBlur = 0.05;\n    float lineWidth = 0.07;\n    float horizontal = smoothstep(lineWidth+lineBlur,lineWidth, abs(ruv.y)) * smoothstep(0.5 + lineWidth + lineBlur,0.5 + lineWidth, abs(ruv.x));\n    float vert = smoothstep(0.5 + lineWidth + lineBlur,0.5 + lineWidth, abs(ruv.y)) * smoothstep(lineWidth + lineBlur,lineWidth, abs(ruv.x));\n    float d = max(horizontal, vert); \n    ivec2 rotI = ivec2(uv * 10. + 0.5);\n    bool rotGrid = rotI.x % 3 == rotI.y % 3;\n    vec3 rotCol = rotGrid ? vec3(0.839) : vec3(0.533);\n    col = mix(col, rotCol, d);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}