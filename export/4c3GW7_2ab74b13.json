{"ver":"0.1","info":{"id":"4c3GW7","date":"1711736533","viewed":28,"name":"Metaball Experiment","username":"ewine","description":"Metaballs for stylized light halos\nMove the little ball with left click","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["metaball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//SETTINGS\nfloat outerIntensity = 0.7;\nfloat innerAlpha = 0.8;\nfloat innerSoftness = 0.08;\n\n\nstruct MetaBall{\n    vec2 center;\n    float radius;\n    vec3 color;\n};\n\nconst int BALL_COUNT = 5;\nMetaBall balls[BALL_COUNT] = MetaBall[BALL_COUNT](\n    MetaBall(vec2(0.5),0.2,vec3(1.0,0.0,0.0)),\n    MetaBall(vec2(0.0),0.2,vec3(0.0,1.0,0.0)),    \n    MetaBall(vec2(-0.6,-0.5),0.3,vec3(0.0,0.0,1.0)),    \n    MetaBall(vec2(0.7,-0.6),0.2,vec3(1.0,0.0,1.0)),    \n    MetaBall(vec2(-0.7,0.6),0.2,vec3(1.0,1.0,0.0))\n);\n\nfloat distSquared( vec2 A, vec2 B )\n{\n    vec2 C = A - B;\n    return dot( C, C );\n}\nfloat roundedRectSDF( in vec2 p, in vec2 b, in float r )\n{\n    vec2 q = abs(p)-b+r;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r;\n}\n\nfloat metaBall(vec2 uv, vec2 center, float radius){\n    float d= (radius * radius) / distSquared(uv,center);\n    return min(d,1.0);\n}\n\nfloat inverseLerp(float a, float b, float v){\n    v = clamp(v,a,b);\n    return (v - a) / (b - a);\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0);\n    vec2 uv = fragCoord / iResolution.xy;\n    col = texture(iChannel0,uv).rgb * 0.3;\n    \n    //UV (-1 to 1)\n    uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n     \n    //WOBBLE\n    uv.x *= 1.0 + sin(iTime*5.0+uv.y*5.0) * 0.025;\n    //NOISE\n   //uv+=texture(iChannel1,uv*0.3+iTime*0.1).rg*0.02;\n    \n    float total = 0.0;\n    vec3 totalColor = vec3(0);\n    for(int i = 0; i < BALL_COUNT; i++){\n        \n        vec2 center = balls[i].center + vec2(cos(iTime+float(i)),sin(iTime+float(i))) * 0.2;\n        float inf = metaBall(uv,center,balls[i].radius);\n        total+=inf;\n        totalColor+=balls[i].color * inf;\n    }\n    //Add metaball at mouse\n    float inf = metaBall(uv,(2.0*iMouse.xy-iResolution.xy)/iResolution.y,0.1);\n    total+=inf;\n    totalColor+=vec3(0.0,1.0,1.0)*inf;\n    \n    vec3 normColor = normalize(totalColor);\n    \n    //Blobs\n    float d = inverseLerp(1.0-innerSoftness,1.0,total);\n    col = mix(col,normColor,d*innerAlpha);\n    //Soft outer glow\n     d = inverseLerp(0.0,1.0,total);\n    col += d * totalColor * outerIntensity;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n   // fragColor = vec4(vec3(total),1.0);\n}","name":"Image","description":"","type":"image"}]}