{"ver":"0.1","info":{"id":"sdlGWN","date":"1615998927","viewed":218,"name":"5. Domain Distorted Rectangle","username":"Sp3cim4n","description":"Learning Shaders","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["distortion","learning","domaindistortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Band(float t, float start, float end, float blur)\n{\n    float step1 = smoothstep(start - blur, start + blur, t);\n    float step2 = smoothstep(end + blur, end - blur, t);\n    \n    return step1 * step2;\n}\n\nfloat Rect(vec2 uv, float left, float right, float top, float bottom, float blur)\n{\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, top, bottom, blur);\n    return band1 * band2;\n}\n\nfloat Remap01(float a, float b, float t)\n{\n    return (t - a) / (b - a);\n}\n\nfloat Remap(float a, float b, float c, float d, float t)\n{\n    return Remap01(a,b,t) * (d - c) + c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv -= vec2(0.5);\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float x = uv.x;\n    float t = iTime;\n    float m = 0.1*sin(t + x * 10.);\n    float y = uv.y - m;\n    \n    float blur = Remap(-.8, .8, 0.01, .8, x);\n    blur = blur * blur * blur;\n    float mask = Rect(vec2(x,y), -.8, .8, -.1, .1, blur);\n    \n    vec3 color = vec3(1.,1.,0.);\n    color *= mask;\n    \n    fragColor = vec4(color, 1.);\n}","name":"Image","description":"","type":"image"}]}