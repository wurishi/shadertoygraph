{"ver":"0.1","info":{"id":"4dscW7","date":"1488490209","viewed":264,"name":"FM test tatmos","username":"tatmos","description":"FM test いろんな音を鳴らしてみるテスト\nFM音　ピアノ、ベル、矩形デューティ比 0.5 0.25 0.125\nしばらくすると音が鳴らなくなるので先頭に戻す必要があるみたい。\n参考にしたもの http://qiita.com/notargs/items/2ffe487cc6cb3844fc21 http://qiita.com/gaziya5/items/d4b4f7a75a1d0b0ab69e","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["music","tatmos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n#define A 0.0\n#define B 2.0\n#define C 3.0\n#define D 5.0\n#define E 7.0\n#define F 8.0\n#define G 10.0\n\n//================================================\n// Utils\n//================================================\n\nfloat rand(vec2 co)\n{\n\treturn fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat calcHertz(float scale)\n{\n    return 441.0 * pow(2.0, scale / 12.0) * PI;\n}\n\nfloat calcHertz(float octave, float note)\n{\n    return calcHertz(octave * 12.0 + note);\n}\nfloat rect(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.5);\n}\nfloat rect2(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.25);\n}\nfloat rect3(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.125);\n}\n\nfloat eg(float time,float gate)\n{\n    return  exp(-gate*(time));\n}\n\n//================================================\n// Sound\n//================================================\n#define Sin1(u, v) sound += clamp(sin(time * calcHertz(u, v)) * (1.0 - localTime2 + sin(time * 80.0) * 0.1), -0.3, 0.3);\n#define Rect1(u, v, l) sound += rect(time * calcHertz(u, v)) * l;\n#define Rect2(u, v, l) sound += rect2(time * calcHertz(u, v)) * l;\n#define Rect3(u, v, l) sound += rect3(time * calcHertz(u, v)) * l;\n#define BD_Rect1(u, v, l) sound += rect(time * calcHertz(u, v +  eg( localTime2,2.0) )) * l;\n\nvec2 mainSound( in int samp, float time )\n{\n    float localTime = mod(time*0.5 , 8.0);\n    float localTime2 = mod(localTime , 1.0);\n    \n    vec2 sound = vec2(0.0);\n        \n    if(localTime < 4.0)\n    {\n        if(rand(vec2 ( localTime2))*2.0 > 0.2)\n        {\n            //\tBD \n            localTime2 = mod(localTime *16.0, 1.0);\t//\tL8\n            BD_Rect1(0.0, C, eg( localTime2,8.0));\n        }\n    }\n    \n    \n    if (localTime < 2.0)\n    {\n        localTime2 = mod(localTime *2.0, 1.0);\t//\tL8\n        //\tpiano tabla\n        float op0 = sin(1.0* calcHertz(1.0, C)*time) * eg( localTime2,1.0);\n        float op1 = sin(1.14*op0)* eg( localTime2,2.0);\n        float op2 = sin(1.5*calcHertz(1.0, C)*time)* eg(localTime2,5.0);\n        float op3 = sin(2.14*op2) * eg( localTime2,2.0);\n        \n        sound += vec2(  \n        op1* 0.5 \n        + op3* 0.5 \n        );\n    } else \n    if (localTime < 4.0)\n    {\n        localTime2 = mod(localTime *2.0, 1.0);\t//\tL8\n        //\tbell\n        float op0 = sin(8.0* calcHertz(1.0, C )*time) * eg( localTime2,3.0);\n        float op1 = sin(6.5*op0)*  eg( localTime2,1.0);\n        float op2 = sin(3.14*calcHertz(1.0, C )*time)* eg( localTime2,1.0);\n        float op3 = sin(6.5*op2) *  eg( localTime2,1.0);\n        \n        sound += vec2(  \n        op1* 0.5 \n        + op3* 0.5 \n        );\n       \n    } else  \n    if (localTime < 6.0)\n    {\n        localTime2 = mod(localTime *1.0, 1.0);\t// L4\n        //\tduty 0.5\n     \tRect1(0.0, C, eg( localTime2,1.0));\n     \tRect1(1.0, E, eg( localTime2,1.0));\n     \tRect1(1.0, G, eg( localTime2,1.0));\n     \tRect1(1.0, B, eg( localTime2,1.0));     \n        sound*=0.25;\n    } else \n    if (localTime < 7.0)\n    {  \n        localTime2 = mod(localTime *3.0, 1.0);\t//\tL6\n        //\tduty 0.25\n     \tRect2(0.0, C, eg( localTime2,1.0));\n     \tRect2(1.0, E, eg( localTime2,1.0));\n     \tRect2(1.0, F, eg( localTime2,1.0));\n     \tRect2(1.0, A, eg( localTime2,1.0));      \n        sound*=0.25;     \n    }\n    else \n    if (localTime < 8.0)\n    {\n        localTime2 = mod(localTime *6.0, 1.0);\t//\tL12\n        //\tduty 0.125\n     \tRect3(0.0, G, eg( localTime2,2.0));\n     \tRect3(2.0, E, eg( localTime2,2.0));\n     \tRect3(1.0, F, eg( localTime2,3.0));\n     \tRect3(1.0, B, eg( localTime2,3.0));      \n        sound*=0.25;     \n    }\n    \n    return vec2(sound);\n               \n}\n\nfloat rand(float a, float b)\n{\n    return fract(sin(dot(vec2(a, b) ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t//vec2 uv =  fragCoord.xy / iResolution.xy;\n\t//fragColor = vec4(uv,0.25+0.75*mainSound( in int samp,iTime).x,1.0);\n    \n    vec2 pos =fragCoord.xy / iResolution.xy - 0.5;\n\t\n\tvec3 color = vec3(0, 0, 0);\n    float time = iTime;\n\t\n\tfor(int i = 0; i < 70; i++)\n\t{\n\t\tfloat fi = float(i);\n\t\t//float t  = pow(fract(time * 2.), 0.5);\n\t\t//float t2 =     floor(time * 2.);\n\t\tfloat a = float(i)*0.3 / PI;\n\t\tfloat len = 0.4 * mainSound( in int samp,iTime - fi*0.001).x;// + (1. - t) * 0.2 * rand(fi, t2);\n\t\tvec2 p = pos + vec2(cos(a), sin(a)) * len;\n\t\tfloat intencity = pow(0.003 / length(p), 1.5);\n\t\tcolor += intencity * vec3(rand(fi, 1.), rand(fi, 2.), rand(fi, 3.));\n\t}\n\n\tfragColor = vec4(color, 1.0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"XsfGRr","channel":0}],"code":"#define PI 3.1415926535\n#define A 0.0\n#define B 2.0\n#define C 3.0\n#define D 5.0\n#define E 7.0\n#define F 8.0\n#define G 10.0\n\n//================================================\n// Utils\n//================================================\nfloat rand(vec2 co)\n{\n\treturn fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat calcHertz(float scale)\n{\n    return 441.0 * pow(2.0, scale / 12.0) * PI;\n}\n\nfloat calcHertz(float octave, float note)\n{\n    return calcHertz(octave * 12.0 + note);\n}\nfloat rect(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.5);\n}\nfloat rect2(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.25);\n}\nfloat rect3(float time)\n{\n    return sign(fract(time / PI / 2.0) - 0.125);\n}\n\nfloat eg(float time,float gate)\n{\n    return  exp(-gate*(time));\n}\n\n//================================================\n// Sound\n//================================================\n#define Sin1(u, v) sound += clamp(sin(time * calcHertz(u, v)) * (1.0 - localTime2 + sin(time * 80.0) * 0.1), -0.3, 0.3);\n#define Rect1(u, v, l) sound += rect(time * calcHertz(u, v)) * l;\n#define Rect2(u, v, l) sound += rect2(time * calcHertz(u, v)) * l;\n#define Rect3(u, v, l) sound += rect3(time * calcHertz(u, v)) * l;\n#define BD_Rect1(u, v, l) sound += rect(time * calcHertz(u, v +  eg( localTime2,2.0) )) * l;\n\nvec2 mainSound( in int samp, float time )\n{\n    float localTime = mod(time*0.5 , 8.0);\n    float localTime2 = mod(localTime , 1.0);\n    \n    vec2 sound = vec2(0.0);\n    \n    \n    if(rand(vec2 ( localTime2))*2.0 > 0.2)\n    {\n        //\tBD\n        localTime2 = mod(localTime *16.0, 1.0);\t//\tL8\n     \tBD_Rect1(0.0, C, eg( localTime2,8.0));\n    }\n    \n    if (localTime < 2.0)\n    {\n        localTime2 = mod(localTime *2.0, 1.0);\t//\tL8\n        //\tpiano\n        float op0 = sin(1.0* calcHertz(1.0, C)*time) * eg( localTime2,1.0);\n        float op1 = sin(1.14*op0)* eg( localTime2,2.0);\n        float op2 = sin(1.5*calcHertz(1.0, C)*time)* eg(localTime2,5.0);\n        float op3 = sin(2.14*op2) * eg( localTime2,2.0);\n        \n        sound += vec2(  \n        op1* 0.5 \n        + op3* 0.5 \n        );\n    } else \n    if (localTime < 4.0)\n    {\n        localTime2 = mod(localTime *2.0, 1.0);\t//\tL8\n        //\tbell\n        float op0 = sin(8.0* calcHertz(1.0, C )*time) * eg( localTime2,3.0);\n        float op1 = sin(6.5*op0)*  eg( localTime2,1.0);\n        float op2 = sin(3.14*calcHertz(1.0, C )*time)* eg( localTime2,1.0);\n        float op3 = sin(6.5*op2) *  eg( localTime2,1.0);\n        \n        sound += vec2(  \n        op1* 0.5 \n        + op3* 0.5 \n        );\n       \n    } else  \n    if (localTime < 6.0)\n    {\n        localTime2 = mod(localTime *1.0, 1.0);\t// L4\n        //\tduty 0.5\n     \tRect1(0.0, C, eg( localTime2,1.0));\n     \tRect1(1.0, E, eg( localTime2,1.0));\n     \tRect1(1.0, G, eg( localTime2,1.0));\n     \tRect1(1.0, B, eg( localTime2,1.0));     \n        sound*=0.25;\n    } else \n    if (localTime < 7.0)\n    {  \n        localTime2 = mod(localTime *3.0, 1.0);\t//\tL6\n        //\tduty 0.25\n     \tRect2(0.0, C, eg( localTime2,1.0));\n     \tRect2(1.0, E, eg( localTime2,1.0));\n     \tRect2(1.0, F, eg( localTime2,1.0));\n     \tRect2(1.0, A, eg( localTime2,1.0));      \n        sound*=0.25;     \n    }\n    else \n    if (localTime < 8.0)\n    {\n        localTime2 = mod(localTime *6.0, 1.0);\t//\tL12\n        //\tduty 0.125\n     \tRect3(0.0, G, eg( localTime2,2.0));\n     \tRect3(2.0, E, eg( localTime2,2.0));\n     \tRect3(1.0, F, eg( localTime2,3.0));\n     \tRect3(1.0, B, eg( localTime2,3.0));      \n        sound*=0.25;     \n    }\n    \n    return vec2(sound);\n               \n}","name":"Sound","description":"","type":"sound"}]}