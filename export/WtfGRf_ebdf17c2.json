{"ver":"0.1","info":{"id":"WtfGRf","date":"1557116325","viewed":86,"name":"BlurZML","username":"Menglei","description":"Blur","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["blur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 Blur(vec2 tc, float aa){\n    vec4 sum = vec4(0.0);\n\tfloat blur = 0.007;\n    float hstep = 0.0;\n    float vstep = 1.0 * aa;\n    \n    sum += texture(iChannel0, vec2(tc.x - 4.0*blur*hstep, tc.y - 4.0*blur*vstep)) * 0.0162162162;\n    sum += texture(iChannel0, vec2(tc.x - 3.0*blur*hstep, tc.y - 3.0*blur*vstep)) * 0.0540540541;\n    sum += texture(iChannel0, vec2(tc.x - 2.0*blur*hstep, tc.y - 2.0*blur*vstep)) * 0.1216216216;\n    sum += texture(iChannel0, vec2(tc.x - 1.0*blur*hstep, tc.y - 1.0*blur*vstep)) * 0.1945945946;\n    sum += texture(iChannel0, vec2(tc.x, tc.y)) * 0.2270270270;\n    sum += texture(iChannel0, vec2(tc.x + 1.0*blur*hstep, tc.y + 1.0*blur*vstep)) * 0.1945945946;\n\tsum += texture(iChannel0, vec2(tc.x + 2.0*blur*hstep, tc.y + 2.0*blur*vstep)) * 0.1216216216;\n\tsum += texture(iChannel0, vec2(tc.x + 3.0*blur*hstep, tc.y + 3.0*blur*vstep)) * 0.0540540541;\n\tsum += texture(iChannel0, vec2(tc.x + 4.0*blur*hstep, tc.y + 4.0*blur*vstep)) * 0.0162162162;\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\t//if(uv.x + uv.y == 0)\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    float dis = distance(vec2(abs(cos(iTime * 0.6)),abs(sin(iTime * 0.6))), uv);\n    float test = 1.0 - smoothstep(0., abs(1. * sin(iTime * 0.6)), dis);\n    \n    // Output to screen\n    fragColor = vec4(Blur(uv, test).xyz, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = fragCoord/iResolution.xy;\n    \n    p.x += 0.1*sin(7.0*p.y + 3.*iTime);\n    //p.y += 0.5*sin(4.0*p.x + 0.5*iTime);\n    \n    vec3 col = texture( iChannel0, p ).xyz;\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec4 Blur(vec2 tc, float aa){\n    vec4 sum = vec4(0.0);\n\tfloat blur = 0.007;\n    float hstep = 1.0 * aa;\n    float vstep = 0.0 * aa;\n    \n    sum += texture(iChannel0, vec2(tc.x - 4.0*blur*hstep, tc.y - 4.0*blur*vstep)) * 0.0162162162;\n    sum += texture(iChannel0, vec2(tc.x - 3.0*blur*hstep, tc.y - 3.0*blur*vstep)) * 0.0540540541;\n    sum += texture(iChannel0, vec2(tc.x - 2.0*blur*hstep, tc.y - 2.0*blur*vstep)) * 0.1216216216;\n    sum += texture(iChannel0, vec2(tc.x - 1.0*blur*hstep, tc.y - 1.0*blur*vstep)) * 0.1945945946;\n    sum += texture(iChannel0, vec2(tc.x, tc.y)) * 0.2270270270;\n    sum += texture(iChannel0, vec2(tc.x + 1.0*blur*hstep, tc.y + 1.0*blur*vstep)) * 0.1945945946;\n\tsum += texture(iChannel0, vec2(tc.x + 2.0*blur*hstep, tc.y + 2.0*blur*vstep)) * 0.1216216216;\n\tsum += texture(iChannel0, vec2(tc.x + 3.0*blur*hstep, tc.y + 3.0*blur*vstep)) * 0.0540540541;\n\tsum += texture(iChannel0, vec2(tc.x + 4.0*blur*hstep, tc.y + 4.0*blur*vstep)) * 0.0162162162;\n    return sum;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n\t//if(uv.x + uv.y == 0)\n    \n    float dis = distance(vec2(abs(cos(iTime * 0.6)),abs(sin(iTime * 0.6))), uv);\n    float test = 1.0 - smoothstep(0., abs(1. * sin(iTime * 0.6)), dis);\n    \n    // Output to screen\n    fragColor = vec4(Blur(uv, test).xyz , 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}