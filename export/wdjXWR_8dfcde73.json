{"ver":"0.1","info":{"id":"wdjXWR","date":"1553485817","viewed":112,"name":"Sine Wave Illusion","username":"SouthernPotato","description":"One wave will become many","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["illusion","opticalillusion","sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float amplitude = 0.25;\nfloat dialationFactor = 3.0;\nfloat radius = 0.01;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0,0,0);\n    \n    for (float f = fragCoord.x - radius*iResolution.y; f < fragCoord.x + radius*iResolution.y; f += 1.) {\n        float dialation = f/500.0f * dialationFactor;\n\n        float targety = 0.5f + sin(iTime * (1.0f + dialation)) * amplitude;\n\n        float distSqr = pow(uv.y - targety, 2.) + pow((f - fragCoord.x)/iResolution.y, 2.);\n\n\n        if (distSqr < radius*radius)\n            col.y += 1. - sqrt(distSqr)/radius;//1. - abs(uv.y - targety) / radius;//1.0f;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}