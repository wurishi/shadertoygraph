{"ver":"0.1","info":{"id":"XdKGWG","date":"1456175499","viewed":624,"name":"Lofify","username":"berber","description":"Playing around","likes":24,"published":1,"flags":0,"usePreview":1,"tags":["2d","video","cartoon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEPS 5.\n#define STEP_DIFF (1. / STEPS)\n#define LINE_THRESH (STEP_DIFF - 0.05)\n#define GREEN_TOLERANCE 0.1\n\nbool isEven(in float v) {\n    return mod(v, 2.) == 0.;\n}\n\nfloat quantize(in vec3 tex) {\n    float col = 0.2126 * tex.r + 0.7152 * tex.g + 0.0722 * tex.b;\n    col = ceil(col * STEPS) / STEPS;\n    return col;\n}\n\nfloat dither(in float col, in vec2 fragCoord) {\n    float r3 = mod(col / STEP_DIFF, 3.);\n    if(r3 == 0.) {\n        return col;\n    } else if(r3 == 1.) {\n        if(isEven(fragCoord.x + fragCoord.y)) {\n        \treturn col + STEP_DIFF;\n    \t} else {\n        \treturn col - STEP_DIFF;\n    \t}\n    } else {\n        if(isEven(fragCoord.x + 0.5) && isEven(fragCoord.y + 0.5)) {\n        \treturn col - STEP_DIFF;\n    \t} else {\n        \treturn col + STEP_DIFF;\n    \t}\n    }\n}\n\nbool isGreenPixel(in vec3 tex) {\n    vec3 green = vec3(13., 163., 37.) * (1. / 255.);\n    vec3 ut = tex - (green + GREEN_TOLERANCE);\n    vec3 dt = tex - (green - GREEN_TOLERANCE);\n    return ut.x < 0. && ut.y < 0. && ut.z < 0. && dt.x > 0. && dt.y > 0. && dt.z > 0.;\n}\n\nvec3 lofify(in sampler2D chan, vec2 uv, vec2 uvStep, vec2 fragCoord) {\n    \n    vec3 tex = texture(chan, uv).xyz;\n    vec3 texr = texture(chan, uv + vec2(uvStep.x, 0.)).xyz;\n    vec3 texl = texture(chan, uv + vec2(-uvStep.x, 0.)).xyz;\n    vec3 texu = texture(chan, uv + vec2(0., -uvStep.y)).xyz;\n    vec3 texd = texture(chan, uv + vec2(0., uvStep.y)).xyz;\n    \n    float c = quantize(tex);\n    float cr = quantize(texr);\n    float cl = quantize(texl);\n    float cu = quantize(texu);\n    float cd = quantize(texd);\n    \n    bool thresh = (cr - c >= LINE_THRESH\n    \t|| cd - c >= LINE_THRESH\n        || cl - c >= LINE_THRESH\n        || cu - c >= LINE_THRESH)\n        && isEven(c / STEP_DIFF);\n    \n    bool green = isGreenPixel(texr)\n        || isGreenPixel(texd)\n        || isGreenPixel(texu)\n        || isGreenPixel(texl);\n    \n    if(thresh || green) {\n        return vec3(0.);\n    } else {\n        return vec3(dither(c, fragCoord));\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvStep = 1. / iResolution.xy;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    vec3 fg = lofify(iChannel0, uv, uvStep, fragCoord);\n    vec3 bg = lofify(iChannel1, uv + iTime * vec2(0., 0.1), uvStep, fragCoord);\n    \n    vec3 fcol = isGreenPixel(texture(iChannel0, uv).xyz) ? bg : fg;\n\t\n\tfragColor = vec4(fcol, 1.0);\n}","name":"Image","description":"","type":"image"}]}