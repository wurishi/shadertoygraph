{"ver":"0.1","info":{"id":"mssyW2","date":"1687226326","viewed":28,"name":"Polar Grid Plot","username":"gorplex","description":"polar plotting (r, theta) where r=theta=each int","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["demo","polar","prime","radian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat nearRadian(vec2 uv, int intVal) {\n    return smoothstep(0.3, 0., abs(mod(float(intVal)-atan(uv.y, uv.x)+3.14, 6.28)-3.14));\n}\n\nfloat radiusNearInt(vec2 uv) {\n    return 1.-pow(abs(mod(2.*length(uv), 2.)-1.), 2.);\n}\n\nfloat tGridLines(vec2 uv) {\n    return smoothstep(0.1, 0., abs(uv.y)) + smoothstep(0.1, 0., abs(uv.x)) +\n        smoothstep(0.1, 0., abs(uv.x-uv.y)) + smoothstep(0.1, 0., abs(uv.x+uv.y));\n}\n\nfloat rGridLines(vec2 uv, float scaleFactor) {\n    float descreteScale = 5.*floor(scaleFactor/5.)+1.;\n    return smoothstep(0.1, 0., 1.-abs(mod(2.*length(uv)/descreteScale, 2.)-1.));\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord-iResolution.xy/2.;\n    uv = uv/iResolution.y*20.;\n    float scaleFactor = 15.*(cos(iTime/20.*6.28)+1.);\n    \n    vec3 col = vec3(0.,0.,0.);\n    \n    col += vec3(1.,0.,0.)*tGridLines(uv);\n\n    uv*=scaleFactor;\n    col += vec3(1.,1.,0.)*rGridLines(uv, scaleFactor);\n    \n    float x = length(uv);\n    int intVal = int(floor(x));\n    col += vec3(0.,1.,1.) * radiusNearInt(uv) * nearRadian(uv, intVal);\n    \n    \n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}