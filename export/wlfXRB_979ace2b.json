{"ver":"0.1","info":{"id":"wlfXRB","date":"1563460190","viewed":384,"name":"The Fruition","username":"xeno","description":"Seven eyed, seven horned lamb, and his compadres from the Revelations of Saint John of Patmos.\nFire, sangre, heavens heard. Heart and head, just change the rate!","likes":2,"published":1,"flags":36,"usePreview":0,"tags":["face"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragCoord = fragCoord.xy / iResolution.xy;\n    vec4 m =texture(iChannel0,fragCoord);//+texture(iChannel1,fragCoord);\n    //m= -tan(m);\n    fragColor = m;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n// co3moz - mandelbrot and FRACTALIZE(from glslsandbox where originally developed)\n// Xevin Christmas: Christ Jesus made all. (developed on glslsandbox and ported it here)\n//Check out www.zonex.rf.gd\n     \n    precision highp float;\n\n#define ITERATION 23\n#define pi 3.1416\n\nfloat rate = 0000.;//opens mandelbrot inversion mode\nfloat degrees2radians = 180./pi;\n#define golden_mean 1.618033\nfloat b = pow(2.,2.);\nfloat speeed = 0.01;\nbool frameByFrame = false;\nfloat frame = 0.;\n//*******~~~variables below~~~*******\\\\\n//faces and objects brightness\nconst float generalFace = 1.;\nconst float lambFace = .78*generalFace,//powerful adjuster.\n    oxFace = generalFace*3.,\n    manFace = generalFace*5.,\n    lionFace = generalFace*5.,\n    eagleFace = generalFace*7.,\n\tswordBlade = generalFace*200.,\n    scrollVisibility =generalFace*15.,\n    lampLight =1.; \n//auras strength\nconst float generalAura = 104./float(ITERATION);\nconst float lambAura = generalAura,\n    oxAura = generalAura*1.,\n    manAura = generalAura*1.,\n    lionAura = generalAura*1.,\n    eagleAura = generalAura*1.,\n    centralCollectiveAura= 10.8;\n//misc\nconst float zoom =.2,\n    bubbleMitigator = 0.817,  //may go up or down to adjust\n\tcreaturesSpacing =4.*zoom,\n\tcreaturesSize = 1.*zoom;\n//*******~~~variables above~~~*******\\\\\n\n\n\n\n//vvvv below from https://shadertoy.fandom.com/wiki/Color_Processing vvvv\n\nvec3 hsv2rgb (vec3 hsv) {\n  // from HSV to RGB color vector\n  hsv.yz = clamp (hsv.yz, 0.0, 1.0);\n  return hsv.z * (1.0 + 0.63 * hsv.y * (cos (2.0 * 3.14159 * (hsv.x + vec3 (0.0, 2.0 / 3.0, 1.0 / 3.0))) - 1.0));\n}//^^^^^^above from https://shadertoy.fandom.com/wiki/Color_Processing^^^^^\n\nvec4 audioEq(in vec2 uv )//Shekina Glory\n{\n   uv *=.5;\n    float rotation =0.*iTime;\n    float angle = atan(uv.y,uv.x)+2./12.*pi*2.;\n\tangle +=1.57;\n    float frAmp=0.;\n    for (float n = 1.; n<20.;n+=1.0)\n    frAmp += texture(iChannel2, vec2( pow(((-angle/2.+pi*n)/(pi*16.)),.5) ,0.)).r;\n    float d = length( uv);\n    float power = 5.;\n    float b = pow(frAmp,power)/pow(d,power*.7);\n    if (b<37.)\n\n    return 3.* vec4(clamp(hsv2rgb(vec3(mod(angle+16./12.*pi,2.*pi)/2./pi,1.,.3))*b/16.,.0,1.),1.-b/8.);\n    else return vec4(.0);\n}\n\n\nvec4 starns(in vec2 uv,float note)//Seven stars, two witnesses\n{\n    float scalar = 10.;\n    float angle1 = note/12.*2.*pi;//atan(uv.y,uv.x);\n\tuv.x += -sin(angle1)*scalar;\n    uv.y += -cos(angle1)*scalar;\n   uv *=26.5;\n    float rotation =0.*iTime;\n        float angle = atan(uv.y,uv.x)+2./12.*pi*2.;//\n        angle += 2.*pi*note/12.;\n\n\t//angle +=1.57;\n    \tangle +=pi;\n\n    float frAmp=0.;\n    float oct = float(int(angle/pi/2.*10.))/10.;\n    float note0 = mod((-angle/2.+pi*float(int(oct/2.))+note/12.)/(16.*pi)-.5,1.);\n    float note1 =  pow(note0+oct,.5);\n    float noteAmp = texture(iChannel2,\n    vec2(note1                  \n    ,0.)).r;\n            \n    float d = length( uv);\n    //fr=(fr)*(fr)/3.;\n    float power = 5.;\n    float b = 100.*noteAmp/d;//pow(noteAmp,power)/pow(d,power*.7);\n    float rote = .0;\n   \n       if(\n        note==12. ||\n                note==2. +rote ||\n                        note==5.  +rote||\n                        note== 7. +rote||\n                        note== 10. +rote)\n        return vec4(-2.*b,-2.*b,-2.*b,1.);\n\telse\n    \treturn vec4(b,b,b,1.);\n\n}\n\nvec3 scroll(vec2 p,\tbool unleashed) {\n    vec2 s = p.yx;\n\tp=p.yx;\n    float d = 0.0, l;\n    float flip;\n\tif(rate!=0.) flip=-sin(3.14/2.+rate*((iTime*speeed+frame)));\n    else\t     flip=-sin(1.0*((iTime*speeed+frame))+1.0)-1.15;\n\tif (flip<0.) p = -p;\n\tif (abs(p.x*p.x+p.y*p.y)<7.0||unleashed) for (int t = 0; t < ITERATION; t++) \n    {\n        s = vec2(((s.x * s.x - s.y * s.y) +flip* p.x*p.x), (2.0* s.x * s.y + flip*p.y*p.y));\n        if(b==2. ||rate == 0.)\n        s.x = -1./s.x;\n        else\n            s.x = pow(s.x,flip)*sign(s.x*flip);\n        l = length(s);\n        d += l/40.;\n        if (l > 19.0 && t > -1)  \n            return vec3(1.);\n    }\n    return vec3(0.);\n}\n\n\nvec3 man(vec2 p,bool unleashed) {\n    vec2 s = p.yx;\n    p=p.yx;\n    float d = 0.0, l;\n    float flip=-sin(3.14*3./2.+rate*((iTime*speeed+frame)));\n    if (flip<0.) p = -p;\n    if (abs(p.x*p.x+p.y*p.y)<2.0||unleashed){for (int t = 0; t < ITERATION; t++) \n    {\n        s = vec2(((s.x * s.x - s.y * s.y) +flip* p.x), (1.* s.x * s.y + flip*p.y));\n        if(b==2. ||rate == 0.) s.x = 1./s.x;\n        else s.x = 1./pow(s.x,flip)*sign(s.x*flip);\n        l = length(s);\n        d += l/25.;\n        if(t!=0 && l >20.0 ) return vec3((-sin(((iTime*speeed+frame))))+(-sin(((iTime*speeed+frame))+3.14/2.)))*sin(golden_mean*((iTime*speeed+frame)))/2.;\n    }\n    return vec3(-(-sin(((iTime*speeed+frame))))*2.+(-sin((iTime*speeed+frame)+3.14/2.)))*-sin((iTime*speeed+frame))/2.;\n    } return vec3(-0.);}\nvec3 eagle(vec2 p,\tbool unleashed) {\n    vec2 s = p.yx;\n    p=p.yx;\n    float d = 0.0, l, flip=-sin(3.14*3./2.+rate*(iTime*speeed+frame))/abs(sin((iTime*speeed+frame))*2.+1.);\n    if (flip<0.) p = -p;\n    if(abs(6.67*p.x*p.x+p.y*p.y*2.)<700.0 ||unleashed)\n    for (int i = 0; i < ITERATION; i++)\n    {\n        s = vec2(-((sin((iTime*speeed+frame)*2.)+1.5)/2.*(s.x * s.x - s.y * s.y) +flip* p.x), (1.* s.x * s.y + flip*p.y)); //2 changed to 1 in this draft\n        if(b<=.5 ||rate == 0.) s.x = 1./s.x;\n        else s.x = 1./pow(s.x,flip)*sign(s.x*flip); //\"1./\" is new for this draft\n        s.y = s.x*s.y;\n        l = length(s);\n        d +=2.;\n        float nn = 0.0;\n        if (l >(20.0+nn) ) if( float(i)>3.&&float(i)>3.) return vec3(1.-sin(d * 0.003)-.5,1.- sin(d * 0.9)-.5,1.- sin(d * 0.1)-.5);\n    }\n    return vec3(.0);\n}\n\nvec3 lion(vec2 p,\tbool unleashed) {\n    vec2 s = p.yx;\n    p=p.yx;\n    float d = 0.0, l, flip=-sin(3.14/2.+rate*(iTime*speeed+frame));\n    if (flip<0.) p = -p;\n    if(p.x*p.x*1.+p.y*p.y*2.<21.||unleashed)\n    for (int t = 0; t < ITERATION; t++) \n    {\n        s = vec2(((s.x * s.x - s.y * s.y) +flip* p.x), (2.0* s.x * s.y + flip*p.y));\n        s/=2.0;\n        if(b==2. ||rate == 0.)\n            s.x = -1./s.x;\n        else\n            s.x = pow(s.x,flip)*sign(s.x*flip);\n        l = length(s);\n        d += l/40.;\n        if (l >14.0 && float(t)  >2.) return vec3(-sin(d +(iTime*speeed+frame)/10.*1./golden_mean*2.)+.2,-sin(d +(iTime*speeed+frame)/10.*golden_mean*2.)+.2,-sin(d /10.*(iTime*speeed+frame)*2.)+.2);\n    }\n    return vec3(.0);\n}\n\n\nvec3 ox(vec2 p,\tbool unleashed) {\n    vec2 s = p.yx;\n    p=p.yx;\n    float d = 0.0, l, flip=-sin(3.14/2.+rate*(iTime*speeed+frame));\n\tif (flip<0.) p = -p;\n\tif( (p.x+.25)*(p.x+.25)+p.y*p.y<1.||(p.x>0.&& p.x*p.x+p.y*p.y<7. )||unleashed)\n    for (int t = 0; t < ITERATION; t++) \n    {\n        s = vec2(((s.x * s.x - s.y * s.y) +flip* p.x), (3.0* s.x * s.y + flip*p.y));\n        if(b==2. ||rate == 0.) s.x = -1./s.x;\n        else s.x = pow(s.x,flip)*sign(s.x*flip);\n        l = length(s);\n        d += l/10.+l;\n        if (l >14.0 ) \n            if (float(t)  >2.) \n                             //   d*= 4.;\n\n                return \n                vec3(-sin(d +(iTime*speeed+frame)*1./golden_mean*2.)*.5+.5,\n                     -sin(d +(iTime*speeed+frame)*golden_mean*2.)*.5+.5,\n                     -sin(d +(iTime*speeed+frame)*2.)*.5+.5);\n    }\n    return vec3(.0);\n}\n\n\nvec3 lamb(vec2 p, bool helmed) {\n  vec2 s = p.yx;\n\tp=p.yx;\n    float speed = 1./(speeed+frame);\n\t\tfloat  ll;\n\t    float change = 8.+-sin(-(iTime*speeed+frame))*6.;\n  float d = 0.0, l;\n\t\t\tfloat flip=-sin(3.14/2.+rate*(iTime*speeed+frame));\n\tif (flip<0.) p = -p;\n\t\t  float nn = (p.x*p.x+p.y*p.y);\n\tvec3 coloration;\n  for (int t = 0; t < ITERATION; t++){\n    s = vec2(((s.x * s.x - s.y * s.y) +flip* p.x), (2.0* s.x * s.y + flip*p.y)); \n\t  if(b==2. ||rate == 0.)\n\t  s.x = -1./s.x;\n\t else\n\t  s.x = pow(s.x,flip)*sign(s.x*flip);\n d +=-abs(s.x+s.y)+20.;\nll = length(s);\n\t  if (ll >(20.0+nn)&&helmed )\n\t\t\t  return vec3(1.-sin(d * 0.0061),1.- sin(d * 0.006),1.- sin(d * 0.0069));\n\t  l = 3.+length(s*golden_mean/3.5);\n\t  \t\t    d += golden_mean*.777;\n\t\t\t\t  coloration = .5-vec3(1.-sin(d * 0.0061),1.- sin(d * 0.0063),1.- sin(d * 0.0069));\n\t\t   if( length(p)<7.2 && t>(ITERATION/2) )\n\t\t\t\t \t\t \t\t\t if(flip<0.)return coloration;\n\t\t\telse return vec3(01.0,.0,0.);\n\t\t\t   \n\t\t\t   change = 15.;\n\t  if (l >35.0-change) \n\t  {\n\n\n\t  \n\n\t  float colorshift = .5+-abs(sin(-(iTime*speeed+frame)/2.+3.14*.25))/2.;\n\t  float colorshift1 = .5+-abs(sin(-(iTime*speeed+frame)/2.-3.14*.25))/2.;\n\t  float colorshift2 = .5+-sin(-(iTime*speeed+frame)-3.14/3.);\n\t\t  \t    if (t != 1 || (p.x>-.1 || abs(p.y)<.3))\n\t    if (t > 3)\n\t\t     \n\t\t    return 2.*colorshift2*colorshift2*vec3(.5+sin(float(t) * 0.05)-.5,.5-sin(float(t) * 0.2)-.5,sin(d * 0.01)-.5)\n\t\t    \n\t\t    +2.*colorshift1*colorshift1*vec3(10.)+\n\t\t    \t\t    -2.*colorshift*colorshift*vec3(10.)+\n\t\t    2.*vec3(-sin(d+golden_mean +(iTime*speeed+frame)*1./golden_mean*.7),-sin(d*1. +(iTime*speeed+frame)*golden_mean*.7),-sin(d+1./golden_mean +(iTime*speeed+frame)*.7));\n\t    \n                    else if( abs(p.y)>2.||( ( p.x>(.8+change/10.)||p.x<1.)) || rate != 0.0 )\n\t    {\n    s = vec2(((p.x * p.x - p.y *p.y) +flip* p.x), (2.0* p.x * p.y + flip*p.y)); \n\t\t    \t  l = 3.+length(s*golden_mean/3.5);\n\t\t return \n\t\t// (vec3(1.-sin(100.*d *1.618+(iTime*speeed+frame)*.618),1.- sin(10.*d *1.0+(iTime*speeed+frame)*1.618),1.-sin(50.*d * 0.618+ti)me*1.)) )\n\t\tvec3(1.-(sin(333.*golden_mean/l*-sin((iTime*speeed+frame)*1./golden_mean/5.)*-sin((iTime*speeed+frame)*-golden_mean/5.+1.57))-sin(1.1*1./golden_mean*-(iTime*speeed+frame)))/2.,\n\t\t     1.- (sin(333./golden_mean*-l*(-sin((iTime*speeed+frame)*-golden_mean/5.+1.57)*-sin((iTime*speeed+frame)*golden_mean/5.+1.57/2.)*+2.))-sin(.1*(iTime*speeed+frame)*golden_mean))/2.\n\t\t     ,1.-(sin(333.*l* -(sin((iTime*speeed+frame)*golden_mean/5.+1.57/2.)*-sin((iTime*speeed+frame)*1./golden_mean/5.)+2.))-sin(1.1* golden_mean*-(iTime*speeed+frame)))/2.\n\t\t    )/2.;\n\t    }\n\t  \n\t  else\n\t\t  //blood from being slain and pierced\n\t\t  \t\t//  return\t vec3(0.,0.,1.)/p.x/p.x/p.x*8.*(abs(-sin(-(iTime*speeed+frame)/2.+3.14/2.))-.5);\n\t\t  //firebreath! vvvv\n\n\t\t  \treturn\t vec3((1.-.5*sin(p.x/2.)),(1.-.9*sin(p.x*1.)),(.1-.7*sin(p.x*2.)))/p.x/p.x/p.x*5.;\n\t\t  }\n      \n}\n\n\n  return vec3(flip*((-sin((iTime*speeed+frame))-1.)/2.));\n}\n\n//ezekiel describes these creatures with 4 wings, revelations with 6, so I went with something related\nvec3 wings (vec2 p){\n\t\n\n    vec3 destColor = vec3(.2);\n    float f = 0.0;\n\tp*=5.;\n\tvec2 reincrementation = vec2 (0.);\n\t    for(float m = 0.0; m < 7.0; m++){\n    for(float i = 0.0; i < 6.0; i++){\n        float s = -sin(3.141/3.*i);\n        float c = -cos(3.141/3.*i);\n\n\t    float val = pow((p.y+s+reincrementation.y)*(p.y+s+reincrementation.y)+(p.x+c+reincrementation.x)*(p.x+c+reincrementation.x),.5);\n\t    if (val>1.&& val<1.04)\n        f = 2.*(val+(p.y*p.y+p.x*p.x-9.)/10.);\n    }\n\t\t    reincrementation = vec2(-sin(3.141/3.*m),-cos(3.141/3.*m));\n}\n\treturn vec3(f*destColor);\n}\n\t\n\nvec3 sword(vec2 p,\tbool unleashed) {\n\t\n\t//p.y = 1./p.y;\n  vec2 s = p.yx;\n\tp=p.yx;\n\tp.x+=100.*(-sin((iTime*speeed+frame)*2.)+1.)/2.-6.;\n  float d = 0.0, l;\nif (p.x>-4.0 && abs(p.y*p.x) <1.77 &&abs(p.y)<1.11111111||unleashed)\n\n  for (int i = 0; i < 14; i++) {\n    s = vec2(2./(1.-pow((s.x * s.x - s.y * s.y + p.x),2.)), -1.77/(2.0 * s.x * s.y + p.y));\n\n\t  \n\t  l = length(s);\n    d +=s.x+s.y+20.;\n\t \n    if (l >5.4 && (i == 2 || i==13))  return vec3(sin(d * 0.0061),sin(d * 0.0063),sin(d * 0.0069));\n  }\nreturn vec3(.0);\t\n  //return vec3(1.-sin((1./p.y*1./p.x)*3.14-time*.819),1.-sin(1./p.x*1.618*p.y-time*.618),1.-sin(0.-p.x*.618*3.14*p.y-time*.618*.618));\n}\nvec2 FRACTALIZE(vec2 p) {\n\tp*=(-cos((iTime*speeed+frame))+2.5)*5.;\n\tfloat s = .5;\n\tfloat cs = -cos((iTime*speeed+frame)*5.618);\n\tfloat sn = sin(-(iTime*speeed+frame));\n\tmat2 rot = mat2(cs, sn, -sn, cs);\n\tfor (int i = 0; i < 8; i++) {\n\t\tp = abs(p) / dot(p, p) - .5;\n\t\tp *= rot;\n\t\ts += .5-abs(sin(-(iTime*speeed+frame)*sin((iTime*speeed+frame))));\n\t}\n\treturn p;\n}\n\n\nvec3 fiveEightsStarMandelbrot(vec2 p) {\n  vec2 s = p;\n  float d = 0.0, l;\n\t\n  for (int i = 0; i < ITERATION; i++) {\n    s = vec2(s.x * s.x - s.y * s.y + p.x, 2.0 * s.x * s.y + p.y);\n\t  s.y=-1./s.y;\n    l = length(s);\n    d +=20.;\n    if (l > 20.0) return vec3(1.-sin(d * 0.003)-.5,1.- sin(d * 0.9)-.5,1.- sin(d * 0.1)-.5)*.1;//return vec3(1., 1, 1.);\n  }\n\t\n  return vec3(0.0);\n}\n\n\n\nvec3 lamp(vec2 p,bool unleash) {\n  vec2 s = p;\n\tp.xy = -p.yx;\n\n  float d = 0.0, l;\n\tif (!(p.x<-4.)&&abs(p.y)<1.789||unleash)\n  for (int i = 0; i < 5; i++) {\n    s = vec2(-1./(s.x * s.x - s.y * s.y + p.x),-1./( 2.0 * s.x * s.y + p.y));\n    l = length(s);\n   d +=s.x+s.y+20.;\n\t \n    if (l >7.)  return vec3(1.-sin(d * 0.001),1.- sin(d * 0.0015),1.- sin(d * 0.0069)); \n  }\n\t\n  return vec3(0.0);\n}\n\n\n\nvec3 crown(vec2 p){\n\n\tp.x+=1.5;\n\tp*=2.5;\n\tvec2 s=p;\n\tfloat l=0.;\n\tfloat m=0.;\n\tfloat k = 0.;\n\t    \n\tif(abs((p.x+k)*(p.x+k)+(p.y*p.y)*2.5)<15.){\n\t\tfor (int f=0;f<20;f+=1)if(abs(s.x+s.y)>20.)l=1.;\n\t\telse s=vec2(1./(s.x*s.x+s.y*s.y+p.x),-(2.0*s.x*s.y-p.y));\n\t\t}\t   \n\t    //^^^^ halo hat of the golden eagle (good and evil, as a circle, which is only sort of an oval..)\n\ts=p;\n\t   // if (false)\n\t     if(abs(p.y)<2.0)\n\tfor (int f=0;f<20;f+=1)if(abs(s.x+s.y)>20.) m=1.;\n\t//else s=vec2(1./(s.x*s.x+s.y*s.y+p.x),1./(2.0*s.x*s.y-p.y));\n\t\telse s=vec2(1./(s.x*s.x+s.y*s.y+p.x),1./(2.0*s.x*s.y+p.y)); //halo split in four\n\t   //^^^^ the cross (\n\n\n\t\nreturn vec3(l+m,l+m,m-l);}\n\nvec3 flames (vec2 p){\n    p.x = -p.x;\n    p*=1.5;\n    p.y*=3.;\nvec2 s=p;\nfloat l=0.;\n\t    float m = 0.;\n\t    float k = 0.;\n\t    if(abs((p.x)*(p.x)+(p.y*p.y))<50.)\nfor (int f=0;f<20;f+=1)if(abs(s.x+s.y)>20. && f>1)l=1.;\n\telse{ s=vec2(-1./(s.x*s.x+s.y*s.y+p.x),-(2.0*s.x/s.y+p.y));\n\t\tm += abs(s.x+s.y);\n\t    }\n\t\nreturn vec3(m*l, m*l/400.,-sin(m*1.618)*l);}\n\n\nvec4 body (vec2 p) {\n    p/=3.;\n    \n    float time = iTime;\n//vv legs vv\n\tvec2 g = p;\n\tg*=.45;\n\tg.x+=.1;\n\tvec2 s=g;\n\tfloat c = 0.;\n\tif (g.x>.5 && g.x<1.65)for (int f=0;f<70;f+=1)if(abs(s.x+s.y)>100.&&f>4)c=1.;\n\t\telse {s=vec2(-1./((s.x*s.x-s.y*s.y)-g.x),(73.0*s.x*s.y-g.y-sin(time)/100.));s*=3.; s.y = -1./s.y;}\n//vv body vv\n\tfloat l=0.;\n\tg = p;\n\tg.x+=.1;\n\ts=g;\n\tfor (int f=0;f<20;f+=1)if(abs(s.x+s.y)>52.&&f>4)l=1.;\n\t\telse {s=vec2(-1./((s.x*s.x-s.y*s.y)-g.x),(2.0*s.x*s.y-g.y-sin(time)/100.));s*=2.; s.x=sqrt(abs(s.x)); }\n//vv musculature vv\n\tg=p;\n\tfloat m =0.,o = 0.;\n\tg.x+=.5;\n\tg.y/=1.1;\n\ts=g;\nfor (int f=0;f<20;f+=1)if(abs(s.x+s.y)>11.&&f>7)o=1.; \n\telse {s=vec2(-1.5/((s.x*s.x-2.*s.y*s.y)-g.x),(1.9*s.x*s.y-1.9*g.y -sin(time)/100.));s*=1.2; s.x=pow(abs(s.x),.6125 );\n\t      \t  m += length(s)/15.;\n\t     }\n\t//vv robe vv\n\tfloat r = 0.;\n\tg=p;\n\tg.x+=.2;\n\tg/=1.2;\n\ts=g;\n\t\nif (g.x>.50)for (int f=0;f<20;f+=1)if(abs(s.x+s.y)>11.&&f>7)r=.9; \n\telse {s=vec2(-2./((s.x*s.x-1.8*s.y*s.y)-g.x),(3.*s.x*s.y-1.3*g.y -sin(time)/100.));s*=1.11; s.x=pow(abs(s.x),.8 );; \n\t      ;\n\t     }\n//vv face vv\n\tg = p;\n\tg.x+=.2;\n\tg*=2.5;\n\n\ts=g;    \n\tfloat t = 0.;\n\n\tfor (int f=0;f<0;f+=1)if(abs(s.x+s.y)>20.&&f!=2 )t=1.;\n\t\telse s=vec2(-1./((s.x*s.x-s.y*s.y)-g.x),(2.0*s.x*s.y-g.y));\n//vv mandelbrot \\ heart vv\n\tg = p;\n\tg*=.5;\n\ts=g;\n\tfloat b = 0.;\n\tfloat n=0.;\n\tfloat k = 0.;    \n\tfor (int f=0;f<30;f+=1)if(abs(s.x+s.y)>20.&&f!=2)break;\n\t\telse {s=vec2(((s.x*s.x-s.y*s.y)-g.x),(2.0*s.x*s.y-g.y));n+=0.1;};\n\t\t\n//seat\t\t\t\n\tg = p;\n\tg.x-=.30;\n\tg*=.54;\n\ts=g;\n\tvec4 chair= vec4(0.);\n\tfloat v=0.;\n\tfor (int t = 0; t < 9; t++)  {\n    \t\ts = vec2(1./((s.x * s.x - s.y * s.y) - g.x), (2.0* s.x * s.y *g.y));\n\t\tv += length(s)/15.;\n\t\tif((t==3||t==6||t==8)&&length(s)>2.22 )   chair = vec4(v/4.);\n        (-sin(v *.618+iTime*.618*1.),-sin(v*1.618 +iTime*1.618*1.),-sin(v +iTime*1.),1.);\n\t}\nvec4 gems = vec4(-sin(m *.618-iTime*.618*10.),-sin(m*1.618 +iTime*1.618*10.),-sin(m +iTime*10.),1.);\nreturn vec4(l+t+c+n+r,l/2.+t+c/2.+r,t+r,1.)+gems*.08+clamp(chair,0.,1.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tif (frameByFrame) frame = float(iFrame)/10000.;\n    else frame = 0.;\n\n\tfloat time_ = iTime*speeed+frame;\n\tif (b == 2.0) rate = 0.;\n\t\n  vec2 a = iResolution.xy / min(iResolution.x, iResolution.y);\n  vec2 p = ((fragCoord.xy / iResolution.xy) * 4.0  - 2.0) ;\n\t\t\t\tfloat flip=-sin(rate*time_+3.14);\n\n\t\n\tfloat variate = 1.;\n\n    bool radar = false;\n        for(float rad = 0.; rad<7.; rad++) \n    {\n\tfloat angle = (atan(p.y,p.x)-atan(-sin((iTime+frame)*variate),\n                                     -cos((iTime+frame)*variate)));\n        if (angle <.1 && angle >-.1)\n        radar = true;\n        variate+=-(1.618*variate)*.5-sign(mod(variate,1.));\n    }\n\tp/=1.1715;\n\t//p*=1.*(abs(-sin(time_))*.5+1.);\n\t// p+=sin(time_)*-1.;\n  float f = sin(time_ * 0.10 + 99.0) * 0.5 + 0.5;\n // p *= pow(1.5, f * (-31.0));\n  //ep += vec2(-1.002029, 0.303864);\n\t\n  //gl_FragColor = vec4(1.0 - mandelbrot(p), 1.0);\n\t\np/=zoom;\n\t\tfloat vertshift =0.;\n\tp.y-= vertshift;\n\tfloat shift = 4.2+creaturesSpacing;\n  float size = 5.3*creaturesSize;\n  vec2 oxCoord = vec2(p.x-shift,p.y-shift)*a/1.2*size;\nvec2 lionCoord = vec2(p.x+shift,p.y+shift+vertshift)*a/1.2*size;\n\tvec2 eagleCoord = vec2(p.x-shift,p.y+shift +vertshift)*a/1.2*size;\n\tvec2 manCoord = vec2(p.x+shift,p.y-shift)*a/1.2*size;\n\n\tp*=a;\n\t\tfloat ratio = min(iResolution.x, iResolution.y)/max(iResolution.x, iResolution.y)*2.;\n\tfloat wingScale = 4./ratio;\n\n\t//lion head tilt\n\tfloat pixelangle = atan(lionCoord.y,lionCoord.x)-sin(time_)/6.+3.14/8.;\n\tfloat pixeldistance = pow((lionCoord.y*lionCoord.y+lionCoord.x*lionCoord.x),.5);\n\tvec2 lionTiltCoord = -vec2(pixeldistance*ratio*2.*-cos(pixelangle),pixeldistance*ratio*2.*-sin(pixelangle));\n  vec3 wingss = wings(oxCoord/wingScale)+wings(lionCoord/wingScale)+wings(eagleCoord/wingScale)+wings(manCoord/wingScale);\n\tvec3 swordDelimited = vec3(0.);\n\tif (p.y <-.2/zoom)swordDelimited=1.*sword(vec2(p.x,-p.y),false);\n\n\nvec4 zeroCenter =vec4(1.0);\n\tfloat dist = length(p);\n\t\tfloat distM = length(manCoord);\n\t\tfloat distL = length(lionCoord);\n\t\tfloat distO = length(oxCoord);\n\t\tfloat distE = length(eagleCoord);\n\t\t if(dist<4. )\n\t zeroCenter = vec4(dist/4.); \n\t\t\telse if(distM<3. )\n\t zeroCenter -= vec4(.7); \n\t\t\t\t\n\t\n\t\t\telse if(distL<3. )\n\t zeroCenter -= vec4(.7); \n\t\t\telse if(distO<3. )\n\t zeroCenter -= vec4(.7); \n\n\t\t\telse if(distE<3. )\n\t zeroCenter -= vec4(.7); \n\t\t\t\t\n    vec4 throne = \n        vec4(\n        (\n         lambFace+lamb(p,false)*2.+\n\n\n                        +ox(ratio*oxCoord/2.,false)*oxFace\n            +ox(ratio*oxCoord/2.,false)*oxFace\n+lion(lionTiltCoord/2.,false)*lionFace\n            +eagle(ratio*4.115*eagleCoord, false)*eagleFace\n            +man(ratio*.5*manCoord,false)*manFace\n\t+ wingss*5.)\n\t, .5);\n\t\t   float temporalVar = (iTime*speeed+frame);\n    vec4\tcolorBuffer ,colorBufferOriginal ;\n            vec2 bbbb = p;\n\t\t//p = FRACTALIZE(p);\n    \n    \n\t\t\t\tfloat timeBuffer = time_;\n\n    vec4 creatureWings;\n    for (int m = 0; m<7; m++)\n        if( radar || m==0 ){\n\n\t                float quasifractilator_gate =(-sin(temporalVar)*.1);\n\n        oxCoord = FRACTALIZE(oxCoord)-cos(-temporalVar)*quasifractilator_gate;\n        lionCoord = FRACTALIZE(lionCoord)-cos(temporalVar+1.)*quasifractilator_gate;\n        eagleCoord =FRACTALIZE(eagleCoord)-cos(-temporalVar+2.)*quasifractilator_gate;\n        manCoord = FRACTALIZE(manCoord)-cos(temporalVar+3.)*quasifractilator_gate;\n        creatureWings += \n            vec4( //this is the individual creatures self/own distinct aura\n                oxAura*ox(ratio*oxCoord,true)\n                +lionAura*lion(lionCoord,true)\n                +manAura *man(ratio*2./2.0*manCoord,true)\n                +eagleAura*eagle(ratio*13./2.0*eagleCoord, true)\n            ,1.);\n      \n    timeBuffer*=timeBuffer;\n                }\n\n    vec4 tol = audioEq(p/zoom/2.);\n    for (float x = 1.; x<13.;x++) \n        tol+=starns(p/zoom/2.,x);\n       vec3 lampBuffer = lamp(vec2(p.x,p.y+8.),false)*lampLight;\n    \n     vec4 filterable =  (tol*2.+throne)/3. +creatureWings/14.;\n            if (filterable.r>1. )filterable.r = 1.;\n        if (filterable.g>1.)filterable.g = 1.;\n        if (filterable.b>1.)filterable.b = 1.;\n    // p*=.3525;\n\tp.y = -p.y;\n  vec2 s = p.yx;\n\tp=p.yx;\nvec4 lastLambStanding = vec4(.0);\nfloat l=0.;\n    if (p.x*p.x+p.y*p.y<16.)\n\n    for (int f=0;f<50;f+=1)if(abs(s.x+s.y)>20.&&f!=2)l=1.;\nelse s=vec2(-1./((s.x*s.x-s.y*s.y)-p.x),(2.0*s.x*s.y-p.y));\n\t\t  lastLambStanding += vec4(l);\n  fragColor=(clamp(body(p),0.,1.)+lastLambStanding+(texture(iChannel0, fragCoord.xy).rgba+ \n           + vec4(\n      \t\tclamp(filterable.xyz*(1.-clamp((swordDelimited+lampBuffer)*100.,0.,1.)),-1.,1.)\n            +swordDelimited+lampBuffer*2.+crown(p)+flames(vec2(p.x-1.,p.y))\n      ,1.)))*.4;}\n\n\n\n\n\n\n\n//a core concept in this piece is that nothing is twice itself (0 = 0*0 but if x/=0 then x/=2*x) since nothing IS twice nothing,\n//and no nothing is anything then 0*0 = oo or really anything for that matter.  Except what it is said to equal which is 0.\n//another aspect to attain the same result is that 0 = (0*0)= ( (0*0)* (0*0))= (( (0*0)* (0*0))*( (0*0)* (0*0)))...=0*oo = undefined = definable\n//to reiterate think about the notion of calculus and integration and sums of infinitesimals.\n//yet another aspect of this is that of the liars paradox (\"this statement is false\") and Godel's II theorem of Incompleteness\n//to continue the Matiyasevich result to Hilbert's 10th(?) is said to prove Godel's aforementioned theorem.\n//Matiyasevich used the golden ratio (or rather the fibonacci (son of good and bad as I've translated it) numbers)\n///(and his predecessors on the theorem he established called the MRDP (matiyasevich Robinson Davis Putnam) used the silver ration)\n//the result is interesting because the equation that inspired this mentioned earlier is x <= 1/(1/x-x) has it's first result at root(2)\n//the silver ratio is 1+root(2).  The golden ratio is very similar to the Mandelbrot equation x = x^2 - 1 vs. x <= x^2 - c.\n//long story short there are too many concepts to count or list, but believe this: \n//There is The God of Israel, The God of the Christian, The God of Creation.\n//I believe this to be His Face, The Face of His Son, who was in the beginning and who forever will be.\n\n//fruition - http://glslsandbox.com/e#74101.4\n\n//originals at II:http://glslsandbox.com/e#52855.0 (up to around .24 I think)\n//I: http://glslsandbox.com/e#52851.2 (.2 is max draft)\n//III: at this time_ caps at .47 http://glslsandbox.com/e#55353.47\n//IIII: and this one http://glslsandbox.com/e#55496.0 goes up to ???\n//actually this one is the parent of the present as of next post: http://glslsandbox.com/e#55945\n//here's the current: http://glslsandbox.com/e#56016.32\n///a new one to add: http://glslsandbox.com/e#56679 \n//http://glslsandbox.com/e#55945\n//http://glslsandbox.com/e#57624\n//http://www.glslsandbox.com/e#57858\n//http://glslsandbox.com/e#57907\n//http://glslsandbox.com/e#57911.2\n//http://glslsandbox.com/e#69956\n//http://glslsandbox.com/e#64909\n//http://glslsandbox.com/e#73072.4\n//http://glslsandbox.com/e#73325.0//pentagonal octagonal chromatical\n//(some may be missing)\n//this one is actually from before manny appeared, I called it the silver heart: http://glslsandbox.com/e#52755.2","name":"Buffer A","description":"","type":"buffer"}]}