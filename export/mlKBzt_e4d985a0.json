{"ver":"0.1","info":{"id":"mlKBzt","date":"1702403162","viewed":32,"name":"A Simple Camera ","username":"sarahannstarmer","description":"ShaderToy Tutorial - The simplest 3D from Art of Code\nhttps://www.youtube.com/watch?v=dKA5ZVALOhs\nhttps://www.youtube.com/watch?v=PBxuVlp7nuM","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["artcode"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// This shader is part of a tutorial on YouTube\n// https://youtu.be/dKA5ZVALOhs\n// ShaderToy Tutorial - The simplest 3D from Art of Code\n// https://www.youtube.com/watch?v=dKA5ZVALOhs\n// https://www.youtube.com/watch?v=PBxuVlp7nuM\n// p-or is a vector from the origin of the ray to the point p\n// and rd is a vector along the line that acts as a ray from the camera\n// what you return is the closest distance from the point to the line\n// If you draw a line from r0 to lookOutPoint Lp it will pass through the center of the \n//  virtual camera screen at right angles.\n\nfloat DistLine(vec3 ro, vec3 rd, vec3 p) {\n\treturn length(cross(p-ro, rd))/length(rd);\n}\n\nfloat DrawPoint(vec3 ro, vec3 rd, vec3 p) {\n\tfloat d = DistLine(ro, rd, p);\n    d = smoothstep(.06, .05, d);\n    return d;\n} \n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    float t = iTime;\n\tvec2 uv = fragCoord.xy / iResolution.xy; // 0 <> 1\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(3.*sin(t), 1., 3.*cos(t));\n    vec3 lookat = vec3(0.7*sin(t), 0.5, 0.7*cos(t));\n    \n    float zoom =1.;\n    \n    vec3 f =normalize(lookat -ro);\n    vec3 r = normalize(cross(vec3(0., 1., 0.),f));\n    vec3 u = cross(f, r);\n    vec3 c = ro + f*zoom;\n    vec3 i = c + uv.x*r + uv.y*u;\n    vec3 rd = i-ro;\n\n    \n    float d = 0.;\n    d += DrawPoint(ro, rd, vec3(0., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(0., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(0., 1., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 0.));\n    d += DrawPoint(ro, rd, vec3(1., 0., 1.));\n    d += DrawPoint(ro, rd, vec3(1., 1., 1.));\n\tfragColor = vec4(d);\n}","name":"Image","description":"","type":"image"}]}