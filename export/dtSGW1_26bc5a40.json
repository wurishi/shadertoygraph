{"ver":"0.1","info":{"id":"dtSGW1","date":"1673221081","viewed":119,"name":"intensity aberration","username":"ylegall","description":"chromatic aberration by input intensity. magnitude of offset is a function of input intensity.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["color","aberration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rgb2gray(vec4 rgb)\n{\n    return 0.2126 * rgb.r + 0.7152 * rgb.g + 0.0722 * rgb.b;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 color = texture(iChannel0, uv);\n    float intensity = rgb2gray(color);\n    float max_shift = 0.01 + 0.05 * (0.5 + 0.5 * sin(2. * (iTime + uv.y))); // uv dist\n    // float max_shift = 0.005;\n    float shift_size_in_pixels = max_shift * iResolution.x;\n    \n    float red_samples = 0.;\n    float blue_samples = 0.;\n    \n    vec4 total_color = color;\n    if (intensity > (1. / (shift_size_in_pixels - 1.))) {\n        total_color = vec4(0., color.g, 0., 1.);\n    }\n    \n    for (float i = 1.; i < shift_size_in_pixels; i++) {\n        float min_shift = (i - 0.) / (shift_size_in_pixels - 1.);\n        float max_shift = (i + 1.) / (shift_size_in_pixels - 1.);\n        // float shift_pct = i / (shift_size_in_pixels - 1.);\n        float uvdist = i / iResolution.x;\n    \n        vec2 ruv = vec2(fragCoord.x + i, fragCoord.y) / iResolution.xy;        \n        vec4 right_color = texture(iChannel0, ruv);\n        intensity = rgb2gray(right_color);\n        \n        if (intensity >= min_shift && intensity < max_shift) {\n            red_samples++;\n            total_color += vec4(right_color.r, 0., 0., 1.);\n        }\n        \n        vec2 luv = vec2(fragCoord.x - i, fragCoord.y) / iResolution.xy;\n        vec4 left_color = texture(iChannel0, luv);\n        intensity = rgb2gray(left_color);\n        \n        if (intensity >= min_shift && intensity <= max_shift) {\n            blue_samples++;\n            total_color += vec4(0., 0., left_color.b, 1.);\n        }\n    }\n    total_color.r /= max(0.5 * red_samples, 1.);\n    total_color.b /= max(0.5 * blue_samples, 1.);\n    fragColor = total_color;\n\n}\n","name":"Image","description":"","type":"image"}]}