{"ver":"0.1","info":{"id":"ftsXD2","date":"1626609933","viewed":80,"name":"fractal swirl","username":"TLC123","description":"swirl distorting noise octaves\nBroken with discontinuities","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, -s, s, c );\n}\nmat2 transMatrix(vec2 t)\n{\n \n    return mat2( t.x,0, 0, t.y );\n}\n\nvec3 tex(vec2 uv)\n{\n uv*=1.;\n\nvec2 offs,juv ,f ,c;\nfloat scale=1.,le;\n\n for(int i=0;i<5;i++){\n\n f=floor(uv);\n  \nvec2 s=vec2(0,scale);\nvec2[] tab =vec2[](f+s.xx,f+s.yx,f+s.yy,f+s.xy);\nfor(int j=0;j<4;j++){\noffs=tab[j]-uv;\nuv -=offs*1.;\n  le=length(uv+offs*scale*scale );\nuv *= rotationMatrix( (sin( 7.*(iTime/7.)+float(i+j*10))*4.) *4.0 * sin(iTime*.1) * clamp( 1./   le   ,0.,3.));\nuv+=offs*1.;\n }\n uv*=2.2;\n scale*=2.2;\n uv *= rotationMatrix(PI/3.+sin(float(i))*.7);\n }\n \nreturn vec3(mod(floor(uv.x *15./scale)   ,2.) ) ;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\nvec3 col=tex(uv);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}