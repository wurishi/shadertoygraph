{"ver":"0.1","info":{"id":"WtK3zK","date":"1579377032","viewed":744,"name":"Continuum Mechanics","username":"wyatt","description":"divergence and curl is just about all you can say about a vector field - ignore torsion (ie delete w channel) - and this becomes a fluid simulation. This simulates a solid because it stores torsional energy. ","likes":25,"published":3,"flags":32,"usePreview":0,"tags":["wave","fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define X vec2(5,4)\nfloat time;\nfloat ln (vec2 p, vec2 a, vec2 d,float i) {\n    float r = clamp(dot(p-a,d)/dot(d,d),0.,1.);\n\treturn length(p-a-d*r);\n}\nvoid mainImage( out vec4 Q, vec2 U )\n{\n    vec4 a ;\n    float r = 1e3;\n    float z = 20.;\n    Q = vec4(0);\n    for (int x = -2; x <= 3; x++)\n    for (int y = -2; y <= 3; y++) {\n        vec2 V = floor(U/X+0.5+vec2(x,y))*X;\n        V.x += mod(V.y/X.y,2.)*2.;\n        a = A(V);\n        r = min(1e3, ln(U,V,-z*X*a.xy,0.));\n        V -= z*X*a.xy;\n        a = A(V);\n        r = min(r,ln(U,V,-z*X*a.xy,1.));\n        Q += exp(-2.*r);\n    }\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution.xy\n#define A(U) texture(iChannel0,(U)/R)\n#define B(U) texture(iChannel1,(U)/R)\n#define C(U) texture(iChannel2,(U)/R)\n\n#define Main void mainImage( out vec4 Q, in vec2 U )\n#define Neighborhood vec4 n = A(U+vec2(0,1)), e = A(U+vec2(1,0)), s = A(U-vec2(0,1)), w = A(U-vec2(1,0)), m = 0.25*(n+e+s+w); \n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"Main {\n\tQ = A(U);\n    Neighborhood;\n    // Gradient of Pressure\n    Q.xy += 0.25*vec2(w.z-e.z,s.z-n.z);\n    // Curl of Torsion\n    Q.xy += 0.25*vec2(s.w-n.w,e.w-w.w);\n    \n    \n    // Boundary conditions :\n    if (iMouse.z>0.) {\n    \tif (length(iMouse.xy-U)<10.)\n            Q.xy = vec2(0.5,0);\n    }\n    if (iFrame < 1) {\n    \tif (length(0.5*R-U)<10.)\n            Q.xy = vec2(0,0.5);\n    }\n    if (U.x<1.||U.y<1.||R.x-U.x<1.||R.y-U.y<1.)\n        Q.xy *= 0.;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"Main {\n\tQ = A(U);\n    Neighborhood;\n    // convergence of velocity\n    Q.z += 0.25*(w.x-e.x+s.y-n.y);\n    // curl of velocity\n    Q.w += 0.25*(e.y-w.y+s.x-n.x);\n    // Make this a fluid simulation :\n    // Q.w *= 0.;\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"Main {\n\tQ = A(U-A(U).xy);\n    // Make this a fluid simulation :\n    // Q.w *= 0.;\n}","name":"Buffer C","description":"","type":"buffer"}]}