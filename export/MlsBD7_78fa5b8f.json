{"ver":"0.1","info":{"id":"MlsBD7","date":"1512157396","viewed":247,"name":"All chordz","username":"Kushulain","description":"Mix of frequencies fading with higher and higher pitch.","likes":8,"published":1,"flags":8,"usePreview":0,"tags":["musicchords"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define count 30\n#define dotSize 1.5\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float ratio = iResolution.x / iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float time = iTime;\n        \n    time -= 20.0;\n    \n    float loopLength = 30.0;    \n    vec2 result = vec2(0.0);\n    \n    float fcount = float(count);\n    \n    for (int i=0; i<count; i++)\n    {\n        loopLength *= 0.9166666;\n        \n    \tfloat freq = fract((time + ((float(i)/fcount))*loopLength )/loopLength);\n        \n        float side = mod(float(i),2.0);\n        \n        \n        vec2 dist = vec2(0.0,abs(uv.y-freq));\n        \n        if (side < 1.0)\n            dist.x = abs(uv.x-0.5 + (float(i)/fcount) * 0.5);\n        else\n            dist.x = abs(uv.x-0.5 - (float(i)/fcount) * 0.5);\n        \n        \n        dist.x *= ratio * 0.5;\n        \n        \n        if ((dist.x) < dotSize && (dist.y) < dotSize)\n        {\n        \tfloat fade =  pow((1.0-abs(2.0*freq-1.0)),2.0);\n            \n            fade *= 0.2 + pow((float(i)/fcount),2.0)*1.2;\n            \n            if (mod(float(i),2.0) < 1.0)\n            \tresult.x += pow(max(0.0,1.0-length(dist)/dotSize),16.0*(1.9-fade*(float(i)/fcount))) * fade;\n            else\n            \tresult.y += pow(max(0.0,1.0-length(dist)/dotSize),16.0*(1.5-fade*(float(i)/fcount))) * fade;\n            \n        }\n        \n    }\n    \n\tfragColor = vec4(0.7,0.7,0.6,1.0) * result.x + vec4(0.50,0.60,0.60,1.0) * result.y;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define count 30\n#define brass 1.0\n\nvec2 mainSound( in int samp, float time )\n{\n    time -= 20.0;\n    \n    float freqBase = 4000.0;\n    float speedInc = 800.0;\n    float loopLength = 30.0;    \n    vec2 result = vec2(0.0);\n    \n    float fcount = float(count);\n    \n    for (int i=0; i<count; i++)\n    {\n        loopLength *= 0.9166666;\n        \n    \tfloat freq = fract((time + ((float(i)/fcount))*loopLength )/loopLength);\n    \tfreq = sin((freq*(freqBase+freq*speedInc))) * pow((1.0-abs(2.0*freq-1.0)),1.0 + brass*float(i)/fcount);\n        \n        freq += pow(freq,8.0);\n        \n        if (mod(float(i),2.0) < 1.0)\n        \tresult.x += freq / fcount;\n        else\n        \tresult.y += freq / fcount;\n    }\n    \n    \n    return vec2(result * 2.0);\n}","name":"Sound","description":"","type":"sound"}]}