{"ver":"0.1","info":{"id":"fstfzM","date":"1656258027","viewed":401,"name":"Oil Painiting Shader","username":"yd4011439","description":"This shader creates oil painting effect!!","likes":6,"published":1,"flags":0,"usePreview":1,"tags":["oilpainting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int KERNEL_SIZE = 20;\nconst int NUM_LEVELS = 10;\nvec4 colorArr[NUM_LEVELS];\nint counts[NUM_LEVELS];\n\nvec4 tx(vec2 uv, vec2 l){\n    return texture(iChannel0, uv + l/iResolution.xy);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Count different levels\n    // For performance, we can skip pixels as well\n    // Skipping pixels produces grainer image\n    int skip = 3;\n    int KS = int(KERNEL_SIZE/2);\n    for(int i=-KS; i<KS;i+=skip){\n        for(int j=-KS; j<KS; j+=skip){\n            vec4 t = tx(uv, vec2(i, j));\n            int level = int(dot(vec4(1.0), t)/4.0*float(NUM_LEVELS));\n            counts[level] += 1;\n            colorArr[level] += t;\n        }\n    }\n    \n    // Find the maximum and return the average of that\n    int mx_index = 0;\n    int mx_val = counts[0];\n    for(int i=1;i<NUM_LEVELS;i++){\n        if(counts[i]>mx_val){\n            mx_index = i;\n            mx_val = counts[i];\n        }\n    }\n    \n    fragColor = colorArr[mx_index]/float(mx_val);\n}","name":"Image","description":"","type":"image"}]}