{"ver":"0.1","info":{"id":"MscczH","date":"1553110212","viewed":82,"name":"Simple mandelbrot","username":"dPerez","description":"Simple MandelbrotSet","likes":1,"published":1,"flags":16,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//float scale=.1;\nfloat speed=0.5;\n\nfloat minScale = 0.0001;\nfloat maxScale =4.0;\n\nconst int KEY_DOWN  = 40;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 c = fragCoord/iResolution.xy;\n    \n    float scale = mix(minScale,maxScale, pow(iMouse.x/iResolution.x,4.));\n\t//float scale = maxScale;\n    c.x*=scale;\n \tc.x-=scale/2.;\n    c.x-=1.4999;\n    c.y*=scale*2./3.;\n    c.y-=scale*2./6.;\n    \n    vec2 z=vec2(c);\n    float size=(z.x*z.x)+(z.y*z.y);\n    vec2 zNew;\n    \n    int iteration=0;\n    int maxIt=620;\n    //int maxIt=32*10;\n    float colorStep=float(1)/float(maxIt);\n    \n    vec4 color=vec4(0.,1.,1.,1.);\n    \n    while(iteration<maxIt && size<4.){\n    \t\n        zNew.x=(z.x*z.x)-(z.y*z.y)+c.x;\n        zNew.y=(2.*z.x*z.y)+c.y;\n        \n        z=zNew;\n        size=(z.x*z.x)+(z.y*z.y);\n        \n        //color.y-=colorStep;\n    \titeration++;\n    }\n    //iteration +=int(mix(0.0,355.0,iMouse.x/iResolution.x));\n    //color.xyz-=colorStep*float(iteration);\n    //iteration/=10;\n    color = vec4((-cos(0.025*float(iteration))+1.0)/2.0,\n                      (-cos(0.08*float(iteration))+1.0)/2.0,\n                      (-cos(0.12*float(iteration))+1.0)/2.0,\n                      1.0);\n    \n    // Output to screen\n    fragColor = color;\n    // fragColor=vec4(c.y,0.,0.,1.);\n}\n","name":"Image","description":"","type":"image"}]}