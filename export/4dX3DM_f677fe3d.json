{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    int CELL_SIZE = 6;\n    float CELL_SIZE_FLOAT = float(CELL_SIZE);\n    int RED_COLUMNS = int(CELL_SIZE_FLOAT/3.);\n    int GREEN_COLUMNS = CELL_SIZE-RED_COLUMNS;\n\n    \n\tvec2 p = floor(fragCoord.xy / CELL_SIZE_FLOAT)*CELL_SIZE_FLOAT;\n\tint offsetx = int(mod(fragCoord.x,CELL_SIZE_FLOAT));\n\tint offsety = int(mod(fragCoord.y,CELL_SIZE_FLOAT));\n\n\tvec4 sum = texture(iChannel0, p / iResolution.xy);\n\t\n\tfragColor = vec4(0.,0.,0.,1.);\n\tif (offsety < CELL_SIZE-1) {\t\t\n\t\tif (offsetx < RED_COLUMNS) fragColor.r = sum.r;\n\t\telse if (offsetx < GREEN_COLUMNS) fragColor.g = sum.g;\n\t\telse fragColor.b = sum.b;\n\t}\n\t\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dX3DM","date":"1371451555","viewed":1499,"name":"RGB display","username":"Daniil","description":"RGB display simulation.\nI think compensation for brightness and color should be added, but i haven't got an idea how to do that.","likes":36,"published":1,"flags":0,"usePreview":0,"tags":["2d","rgb","oldstyle","display"],"hasliked":0,"parentid":"","parentname":""}}