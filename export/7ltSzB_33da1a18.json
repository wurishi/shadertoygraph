{"ver":"0.1","info":{"id":"7ltSzB","date":"1639391837","viewed":102,"name":"secret symbol","username":"cxm","description":"secret symbol","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["symbol"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise( in vec2 p )\n{\n\treturn sin(p.x)*sin(p.y);\n}\n\nfloat MakeShape( in vec2 uv, vec2 center, float resRa ){\n \n    float rr = distance( vec2( center.x, center.y * resRa ), vec2( uv.x, uv.y * resRa ) );\n    \n\n    rr = smoothstep( .15, .15, rr ) ;\n    rr = mix(\n        1.,\n        rr,\n        ( step( uv.x, center.x ) )\n    );\n    \n    float rr2 = distance( vec2( center.x, center.y * resRa ), vec2( uv.x, uv.y * resRa ) );\n    \n    rr2 = smoothstep( .13, .13, rr2 ) ;\n    rr2 = mix(\n        1.,\n        rr2,\n        ( step( uv.x, center.x - .02 ) )\n    );\n\n    return 1. - mix( ( 1. ), rr, rr2 );\n \n}\n\nvoid allocatedColor( inout vec3 col, vec3 color, float shape ){\n    col = mix(\n        col,\n        color,\n        shape\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = vec3(  .09, .21, .23  );\n    \n    vec2 center = vec2( .48, .53 );\n    \n    float resRa = iResolution.y / iResolution.x;\n    \n    \n    \n    // bg\n    \n    float bg = 1. - distance( vec2( .5, .5 * resRa ), vec2( uv.x, uv.y * resRa ) );\n    allocatedColor( col, vec3( 1. ), bg );\n    \n    // symbol\n    \n    allocatedColor( col, vec3( .0, .76, .91 ), MakeShape( uv, vec2( center.x, center.y + .1 ), resRa ) );\n    allocatedColor( col, vec3( .97, .33, .18 ), MakeShape( 1. - uv, vec2( center.x, center.y - .1 ), resRa ) );\n    \n    // reflect\n    \n    float r1, r2, p1, p2, l1, l2;\n    \n    l1 = smoothstep( center.y - .45 + .3 - .02, 0., uv.y );\n    l2 = smoothstep( center.y - .45 + .4 - .1, 0., uv.y );\n\n    float count = 50.;\n    \n    for( float i = 1.; i < count; i ++ ){\n        p1 +=  noise( vec2( uv.x * ( count - i ), uv.y ) ) * i * .002 * cos( iTime * .5 ) + noise( vec2( uv.x * ( count - i ), uv.y ) ) * .01;\n        r1 = MakeShape( uv + p1 * l1, vec2( center.x, center.y - .45 ), resRa );\n        \n        p2 += noise( vec2( 1. - ( uv.x ) * ( count - i ), ( uv.y ) ) ) * i * .002 * cos( iTime * .5 ) + noise( vec2( 1. - ( uv.x ) * ( count - i ), ( uv.y ) ) ) * .01;\n        r2 = MakeShape( 1. - uv + p2 * l2, vec2( center.x, center.y + .45 ), resRa );\n    }\n    \n    \n    allocatedColor( col, vec3( .0, .76, .91 ), r1 * uv.y );\n    allocatedColor( col, vec3( .97, .33, .18 ), r2 * uv.y );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}