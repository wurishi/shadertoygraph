{"ver":"0.1","info":{"id":"MfB3Rz","date":"1703741079","viewed":64,"name":"2DVoronoiNoise","username":"Leabemo","description":"basic noise","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//网格噪声\nvec2 random2(vec2 st){\n\n    return fract(sin(vec2(dot(st,vec2(127.1,311.7)),dot(st,vec2(269.5,183.3))))*43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    uv*=5.;\n    vec2 f = fract(uv);\n    vec2 i = floor(uv);\n    \n    float mindis = 1.;    \n    vec2 minpoint = vec2(1.);    \n    vec2 diff1 = vec2(1.);\n\n\n    //9个特征点，自己和周围的八个\n    // first pass: regular voronoi\n    for(int x=-1;x<=1;x++){\n        for(int y=-1;y<=1;y++){\n            vec2 offest = vec2(float(x),float(y));\n            vec2 point = random2(i+offest);\n            point = sin(point*6.2831 + iTime)*.5+.5;\n            vec2 diff = offest + point - f;\n            float dist = length(diff);\n            if(dist<mindis){ \n            diff1 = diff;\n            mindis = dist;\n            minpoint = point;\n            }\n        }\n    }\n    // second pass: distance to borders\n    for(int x=-1;x<=1;x++){\n        for(int y=-1;y<=1;y++){\n            vec2 offest = vec2(float(x),float(y));\n            vec2 point = random2(i+offest);\n            point = sin(point*6.2831 + iTime)*.5+.5;\n            vec2 diff = offest + point - f;\n            \n            if(dot(diff1-diff,diff1-diff)>0.0001){\n            mindis = min(mindis, dot( 0.6*(diff1+diff), normalize(diff-diff1)));\n            }\n            \n        }\n    }\n    \n    vec3 col = vec3(0.);\n    \n    col += dot(minpoint,vec2(.3,.6));\n    //add isolines\n    col -= abs(sin(30.*mindis))*0.2;\n    //add center point\n    col += step(mindis,.03);\n    \n    //add color\n    //col.rg += minpoint*0.2;\n    \n    //add outline\n    //col.r += step(f.x,0.02);    \n    //col.r += step(f.y,0.02);\n    //add borders\n    col = mix( vec3(1.0), col, smoothstep( 0.01, 0.02, mindis) );\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}