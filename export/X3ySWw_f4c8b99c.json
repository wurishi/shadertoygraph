{"ver":"0.1","info":{"id":"X3ySWw","date":"1720387908","viewed":41,"name":"rotating rainbow","username":"Eolc","description":"rainbow\nARTS1308 ShanghaiTech University","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","rainbow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // 将像素坐标转换为[-1,1]范围的归一化坐标\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // 时间变量，用于动画效果\n    float time = iTime * 0.5;\n    \n    // 计算旋转角度\n    float angle = atan(uv.y, uv.x);\n    float radius = length(uv);\n    \n    // 旋转扭曲\n    float twist = sin(radius * 10.0 - time * 5.0) * 0.5;\n    angle += twist;\n    \n    // 将极坐标转换回笛卡尔坐标\n    uv = vec2(cos(angle), sin(angle)) * radius;\n    \n    // 生成颜色\n    vec3 color = vec3(0.5 + 0.5 * cos(iTime + uv.xyx + vec3(0,2,4)));\n    \n    // 将颜色输出到片元\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}