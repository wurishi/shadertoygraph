{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Sinus Infection visualizer by Orblivius\n// Feel free to use it as you wish...\n\n// Sources used: https://shadertoy.com/view/lcByRh\n\nconst float PI   = 3.1415926535;\nconst float PI_2 = 1.5707963267;\n\n\nconst float yMulti = 8.88;\nconst vec2 fadeBoundaries = vec2(0.035, 1.9);\nconst float minimumColor = .5;\n\n// Fork of \"格子空间\" by langzai. https://shadertoy.com/view/XflyDs\n// 2024-07-24 12:07:17\n\nvec2 CenterUV(vec2 fragCoord )//uv的居中与反拉伸https://www.shadertoy.com/view/M3cSDS\n{\n    return (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n}\nfloat CrateGrid(vec2 uv,float cellSize)//创建网格https://www.shadertoy.com/view/4fXyzr\n{\n    vec2 line = vec2(0.005)*uv.y;\n    uv = abs(mod(uv - 0.5 * cellSize,cellSize)-0.5 * cellSize);\n    vec2 gridUV= 1.- pow(uv,vec2(.4));\n    gridUV += 1.- (smoothstep(line-0.01, line +0.01,uv));\n    return gridUV.x * gridUV.y;\n}\nvec3 xyz(vec2 uv)\n{\n    float z = 1./abs(uv.y);\n    return vec3(uv.x*z,uv.y,z);\n}\nvec2 RotateUV(vec2 uv,float angle)\n{\n    return vec2(uv.x * cos(angle) - uv.y * sin(angle),uv.x * sin(angle) + uv.y *cos(angle));\n}\nvoid mainImage2( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = RotateUV(CenterUV(fragCoord ),iTime*.3);\n    \n    vec3 xyz = xyz(uv);\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+vec3(xyz.x,xyz.y,xyz.x)+vec3(0,2,4));\n    \n    float grid = CrateGrid(vec2(xyz.x+iTime*3.,xyz.z ),.4) *(1.-smoothstep(2.,5.,xyz.z)) ;\n    vec3 gridColor = grid * col;\n    \n    \n    fragColor = vec4(gridColor,1.);\n}\n\n#define AMP 1.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float timeTravel = (sin(iTime*.1));\n    vec2 uv = RotateUV(CenterUV(fragCoord.xy),iTime*.3);\n    uv /= iResolution.xy;\n    float x = uv.x;\n    float sineX = AMP*texture(iChannel0, vec2(uv.x*200.+.5,1.)).r;\n    float y = (uv.y/0.0015+AMP)*yMulti;\n    float time = iTime;\n    time *= timeTravel;\n    x += time * timeTravel;\n \n    float c = abs(sineX*17.-y);\n    c = 0.3 / c;\n    float rgbX = x + (time) * abs(cos(0.03*time)); \n    vec3 rgb = vec3(sin(rgbX*0.2+time)+cos(rgbX*0.4), clamp(cos(rgbX*0.5), 0.0, 0.9), smoothstep(0., 1.0, sin(rgbX)+cos(rgbX+time*0.5)));\n    bool isblack = false;\n    for (int i = 0; i < 3; i+=1)\n    { \n        int j = i;\n        if (rgb[j] > minimumColor)\n        { \n            isblack = false;\n        }\n    }\n    if (isblack) \n    { \n        \n        rgb[0] = minimumColor;\n        rgb[2] = minimumColor*(1.0);\n    }\n    vec2 uv2 = RotateUV(CenterUV( fragCoord.xy ),iTime*.3);\n    vec3 xyz = xyz(uv2*.5);\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+vec3(xyz.x,xyz.y,xyz.x)+vec3(0,2,4));\n    \n    float grid = CrateGrid(vec2(xyz.x+iTime*3.,xyz.z ),.4) *(1.-smoothstep(2.,5.,xyz.z)) ;\n    vec3 gridColor = grid * (col+.2*rgb);\n    \n    \n    float alpha = 5.22;\n    rgb = pow(rgb, vec3(2.0));\n   \n    vec4 color = vec4(c*rgb.r, c*rgb.g, c*rgb.b, alpha);\n    color = 1.0-exp(0.001-color);\n    fragColor.rgb =  color.rgb+ .5*gridColor;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MfBcRD","date":"1734849947","viewed":121,"name":"Sinus Infection Viz","username":"orblivius","description":"Sinus Infection visualizer","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["fft","wave","neon","sinewave"],"hasliked":0,"parentid":"","parentname":""}}