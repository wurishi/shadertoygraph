{"ver":"0.1","info":{"id":"lsKXzy","date":"1465213910","viewed":821,"name":"2D Sheap Cellular Tile Layers","username":"aiekick","description":"2D Sheap Cellular Tile based on the shane version [url=https://www.shadertoy.com/view/MdKXDD]One Tweet Cellular Pattern[/url]","likes":7,"published":3,"flags":0,"usePreview":0,"tags":["2d","cellular","tile","sheap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f(vec2 p, float t)\n{\n\tp = fract(p/70.+vec2(cos(t), sin(t)))-0.5;\n\treturn  min(abs(p.x), abs(p.y)) + 0.2;\n}\n\nvoid mainImage( out vec4 o, in vec2 p )\n{\n    p /= 3.; \n    \n    o -= o;\n    \n    mat2 m = mat2(10., -5.4, 5.4, 10.) * 0.09;\n    \n\tfloat t = iTime * 0.1;\n\n\tconst float iter = 3.;\n\tfloat lay = 0., olay;\n\tfor (float i = 0.; i < iter; i++)\n\t{\n\t\tlay = f(p, t * 10. * i / iter);\n\t\tif (i > 0.)\tlay = min(olay, lay); olay = lay;\n\t\tp *= m;\n\t}\n    o += lay;\n\t\n\to /= 0.53;\n}\n","name":"Image","description":"","type":"image"}]}