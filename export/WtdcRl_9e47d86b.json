{"ver":"0.1","info":{"id":"WtdcRl","date":"1609714593","viewed":124,"name":"Twin Dragon Fractal Pattern","username":"oneshade","description":"I really liked @Gijs shader \"Basic: Twin Dragon.\" I started messing with it and made this.","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["fractal","dragon","curve","fork","pretty","twindragon","twin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// fork of https://www.shadertoy.com/view/MtXSWj\n\nfloat alternate(in float p, in float d){;\n\treturn sign(fract(p * d * 0.5) * 2.0 - 1.0);\n}\n\nvec3 TwinDragon(in vec2 p) {\n    p /= iResolution.y;\n    p += 0.25 * iTime;\n    p.y = abs(mod(floor(p.y), 2.0) - fract(p.y));\n    p.x = abs(mod(floor(p.x), 2.0) - fract(p.x));\n\n    p.y += alternate(p.x, 256.0) / 512.0;\n    p.x -= alternate(p.y, 128.0) / 256.0;\n    p.y += alternate(p.x,  64.0) / 128.0;\n    p.x -= alternate(p.y,  32.0) /  64.0;\n    p.y += alternate(p.x,  16.0) /  32.0;\n    p.x -= alternate(p.y,   8.0) /  16.0;\n    p.y += alternate(p.x,   4.0) /   8.0;\n    p.x -= alternate(p.y,   2.0) /   4.0;\n\n    return pow(texture(iChannel0, p * 0.1).rgb, vec3(1.5));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    fragColor.rgb += TwinDragon(fragCoord);\n    fragColor.rgb += TwinDragon(fragCoord + vec2(0.5, 0.0));\n    fragColor.rgb += TwinDragon(fragCoord + vec2(0.0, 0.5));\n    fragColor.rgb += TwinDragon(fragCoord + 0.5);\n    fragColor.rgb *= 0.25;\n}","name":"Image","description":"","type":"image"}]}