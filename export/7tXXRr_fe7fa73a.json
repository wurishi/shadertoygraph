{"ver":"0.1","info":{"id":"7tXXRr","date":"1625060209","viewed":85,"name":"light cross","username":"ejosiah","description":"cell noise with using minimum of absolute distances between points","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noisecellworley"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.283185307179586\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 8.0;\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    \n   float minDist = 100.0;\n   for(int y = -1; y <= 1; y++){\n       for(int x = -1; x <= 1; x++){\n           vec2 neigbhour = vec2(float(x), float(y));\n           vec2 p = hash22(i + neigbhour);\n           \n           p = 0.5 + 0.5*sin(iTime + TWO_PI*p);\n           \n           p += neigbhour;\n           vec2 d = f - p;\n           float dist = min(abs(d.x) , abs(d.y));\n           minDist = min(minDist, dist);\n       }\n   }\n    vec3 col = vec3(minDist);\n\n    fragColor = vec4(1. - col,1.0);\n}","name":"Image","description":"","type":"image"}]}