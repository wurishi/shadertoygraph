{"ver":"0.1","info":{"id":"4tSfWh","date":"1515475201","viewed":328,"name":"Don't be Evil","username":"Passion","description":":)","likes":10,"published":1,"flags":96,"usePreview":0,"tags":["art","expression","freespeech"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dBSzw","filepath":"https://soundcloud.com/zentone/yuutsu-sun","previewfilepath":"https://soundcloud.com/zentone/yuutsu-sun","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define NUM_SAMPLES 25\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 buffer = texture(iChannel0,uv);\n    float decay=0.96815;\n    float exposure=0.31;\n    float density=0.926;\n    float weight=0.58767;\n    \n    vec2 tc = uv;\n    vec2 lightPos = iMouse.xy;\n    vec2 deltaTexCoord = tc;\n    \n    vec2 vu = vec2(sin(iTime*1.75)*.3, cos(iTime*2.5)*.1);\n\n    deltaTexCoord =  (uv-.5)+vu;\n    deltaTexCoord *= 1.0 / float(NUM_SAMPLES)  * density;\n    \n    float illuminationDecay = 1.0;\n    vec4 color =texture(iChannel0, tc.xy)*0.305104;\n    \n    tc += deltaTexCoord * fract( sin(dot(uv.xy+fract(iTime), \n                                         vec2(12.9898, 78.233)))* 43758.5453 );\n    \n    for(int i=0; i < NUM_SAMPLES; i++)\n    {\n        tc -= deltaTexCoord;\n        vec4 sampleTex = texture(iChannel0, tc)*0.305104;\n        sampleTex *= illuminationDecay * weight;\n        color += sampleTex;\n        illuminationDecay *= decay;\n    }\n    fragColor = pow(color*exposure+(buffer*.75), vec4(vec3(1.0/0.75), 1.0));\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define TEXT_THICKNESS 0.154\n#define FENCE iMouse.z\n\nvec3 yellow = vec3(1.0,1.0,0.0);\nvec3 red = vec3(1.0,0.0,0.0);\nvec3 blue = vec3(0.0,0.0,1.0);\nvec3 green = vec3(0.0,0.6,0.0);\nvec3 pink = vec3(1.0, .5, .5);\n\nconst float PI = acos(-1.0);\n\nfloat degToRad(float a){\n    \n    return a * PI / 180.0;\n}\n\nmat2 R2(float a){\n    float s = sin(a);\n    float c = cos(a);\n    return mat2(s,c,-c,s);\n}\n\nfloat circle(in vec2 p, in float r){\n    return length(p) - r;\n}\n\nfloat rect(vec2 p, vec2 size) {  \n  vec2 d = abs(p) - size;\n  return min(max(d.x, d.y), 0.0) + length(max(d,0.0)*8.);\n}\n\nfloat O(vec2 p, float scale, vec2 tr){\n    p+=tr;\n    p*=scale;\n    float c = circle(p, 1.0);\n    float c2 = circle(p, 0.85);\n    return max(c2, -c);\n}\nfloat g(vec2 p, float scale, vec2 tr){\n    float og = O(p, scale, tr);\n    tr-=.3;\n    float c = rect(p+vec2(tr.x-.2,tr.y),vec2(.2,.3))-.27;\n    tr+=vec2(.04,.5);\n    float rec = rect(p+tr, vec2(.21));\n    rec = max(rec, -rect(p+tr+.1, vec2(.6,.4)));\n    return min(max(og,-c), rec);\n}\n\nfloat a(vec2 p, vec2 tr){\n    float o = O(p, 3., tr);\n    float l = rect(vec2(p.x-0.91,p.y+.06), vec2(0.00,0.3));\n    return min(o, l);\n}\n\n\nvoid stepAndColor(inout vec3 color, float shape, vec3 scol, float thinness, float thickness){\n    shape = smoothstep(thinness, thickness, shape);\n    color = mix(scol, color, shape);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uv2 = uv;\n    uv = uv*2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    uv*= 1.75+sin(iTime)*.52+.2;\n    uv*=R2(.3*sin(iTime)+1.5);\n    uv.x -=.3;\n    \n    vec2 vu = vec2(sin(iTime*1.75)*.3, cos(iTime*2.5)*.1);\n    uv2-=.5;\n    \n    vec3 color = vec3(0.05) / (length(uv2+vu)*3.2);\n    \n    float c  = O(uv, 3., vec2(.3,0.0));\n    float c2 = O(uv, 3., vec2(1.,0.0));\n    float l  = rect(vec2(uv.x-.17,uv.y-.1), vec2(0.005,0.4));\n    float aa = a(uv, vec2(-0.6, 0.0));\n    float gagl = g(uv, 2., vec2(1.9,-.1));\n    float gagl2 = g(uv, 2., vec2(-1.5,-.1));\n    \n    if( FENCE > 0.){\n        float l2  = rect(mod(uv,0.4)-.2, vec2(1.5,0.002));\n        float l3  = rect(mod(uv,0.4)-.2, vec2(0.002,1.5));\n        l2 =min(l2,l3);\n        stepAndColor(color, l2,   vec3(0.),  .21, .45);\n    }\n\n    stepAndColor(color, c,   yellow, .1, TEXT_THICKNESS);\n    stepAndColor(color, c2,  red,    .1, TEXT_THICKNESS);\n    stepAndColor(color, l,   blue,  .1, TEXT_THICKNESS);\n    stepAndColor(color, aa,  green,   .1, TEXT_THICKNESS);\n    stepAndColor(color, gagl2, red,  .1, TEXT_THICKNESS);\n    stepAndColor(color, gagl, blue,  .1, TEXT_THICKNESS);\n    \n    fragColor = vec4(color, 1.0);  \n}","name":"Buf A","description":"","type":"buffer"}]}