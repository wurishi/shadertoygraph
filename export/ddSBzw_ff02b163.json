{"ver":"0.1","info":{"id":"ddSBzw","date":"1689607397","viewed":232,"name":"Rain & Floods 2","username":"kastorp","description":"not realistic... but ascending bubbles are satisfying!\n\nmouse = pour water\nSHIFT + MOUSE: paint walls\nTAB + MOUSE: paint air\nspace bar to reset\n","likes":16,"published":1,"flags":48,"usePreview":0,"tags":["water","rain","ca"],"hasliked":0,"parentid":"dsjfRW","parentname":"Brownian Blocks"},"renderpass":[{"inputs":[{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Rain & Floods 2 by Kastorp\n//------------------------\n// better implementation of https://www.shadertoy.com/view/WdjBDV\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n   \n    \n    vec2 p=I/R.y*SIZE;\n    ivec2 c=  ivec2(p);\n    O = texelFetch(iChannel0,c,0);\n    vec3 col= vec3(0);\n    p-= vec2(c)+.5;\n    const vec3 WHITE=vec3(1);\n    if(GROUND)   col= vec3(0.7,.7,0.5);\n    if(EMPTY) col=O.w>0.? vec3(0,0,.5):vec3(0) ;\n    if(WATER ) col=O.w>0.? vec3(0.682,0.890,0.976):vec3(0.004,0.431,0.616) ;\n   \n    O.xyz=col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MS  3.\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    \n    bool rc =texelFetch(iChannel0,ivec2(R.x-1.,0),0)==vec4(0);\n    if(iFrame==0|| rc ||texelFetch(iChannel3,ivec2(32,0),0).x>.5) { \n    \n        //initialize\n        O = vec4(0); //VOID\n        //if(I.y>SZ*.4 && hash13(vec3(I,iFrame))<.1) O = vec4(8.,I.x/SZ,3,0);\n        vec2 box= SIZE*vec2(R.x/R.y,1.)*.5;\n        if(max(abs(I.x-box.x)-box.x,abs(I.y-box.y)-box.y)>-1.) O = vec4(4,0,0,0);\n \n \n        if(I.y<SIZE/4.) {\n        vec2 p=I/2. -vec2(iTime)*5.; \n         float mode= mod( iTime,3.), ang=.3;;\n         if(mode>=2.) p = vec2(p.x*sin(ang) -p.y*cos(ang),+p.x*cos(ang) +(p.y )* sin(ang));\n         else if(mode>=1.) p = p + vec2(0., sin(p.x/5.)*5.);\n         \n\n        O.x= 4.*step(.4,O.x +step( mod( p [ int( 1e4*length(ceil(p/8.)) ) % 2 ] , 8. ),.7));\n        \n        }\n       \n        \n        \n        if(I.y<1. && I.x>iResolution.x-2.)O=vec4(1);      \n        return;\n    }\n    else if(iMouse.z>0. && length(iMouse.xy*SIZE/R.y -I)<3.){\n    \n        if(texelFetch(iChannel3,ivec2(16,0),0).x>.5)  O=vec4(4,0,0,0);\n        else if(texelFetch(iChannel3,ivec2(9,0),0).x>.5)   O=vec4(0);\n        else O=vec4(8,0,0,0);\n        return;\n    }\n    else  _mainImage(  O, I , iChannel0,  iFrame,R.x/R.y,SIZE);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//configuration:\n#define SIZE ceil(iResolution.y*.5)    //400.\n//#define ARROWS\n#define STRAIGHT 0 //c[i].w\n#define RAINLEVEL 0.003\n//------------------\n//definitions\n#define NG c[i].x //near group\n#define NT c[i].y //near type\n#define NV c[i].z //near value  \n#define ND int(c[i].w) //near value \n#define RULE(check,val) if( check) O=val;\n#define RULE_ANY(check,val) for(int j=0;j<4;j++){ int i=(iFrame%2==1?j:3-j); if( check){ O=val;}}\n#define RULE_ALL(check,val) {bool ch=true; for(int i=0;i<4;i++) ch=ch&& check; if(ch) {O=val;}}\n#define BOTTOM 1 \n#define UP 0 \n#define LEFT 2 \n#define RIGHT 3  \n#define OPPOSITE(a,b)  (a+b==7 || a+b==3) \n\n//NEIGHBORS CONDITIONS\n#define N_EMPTY (NG==0.)\n#define N_WATER (NG==8.)\n\n//CURENT BLOCK CONDITIONS\n#define EMPTY (O.x==0.)\n#define WATER (O.x==8.)\n#define GROUND (O.x==4.)\n\n#define R iResolution.xy\n//https://www.shadertoy.com/view/4djSRW\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.zyx + 31.32);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvoid _mainImage( out vec4 O, in vec2 I , sampler2D ch, int iFrame,float ratio,float SZ)\n{\n    \n    //get current\n    O=texelFetch(ch,ivec2(I),0);\n    \n    \n   // if(iFrame%2>0) return;\n    if(I.y>SZ  || I.x> SZ* ratio) return;\n\n    //rain\n    if(I.y>SZ*.99 && hash13(vec3(I,iFrame))<RAINLEVEL) O = vec4(8.,I.x/SZ,3,0);\n\n\n    //get neighbors\n    vec4[4] c ;\n    for(int i=0;i<4;i++){ \n       //0:Bottom, 1:up, 2:left, 3:right \n       vec2 d =vec2(i<2?0:i==2?-1:1, i>1?0:i==0?1:-1);\n       c[i]= texelFetch(ch,ivec2(I+d),0);      \n    }\n\n    //commit (swap)\n    RULE_ANY(EMPTY && N_WATER  && int(O.w)==i+1 && ND>0 && OPPOSITE(int(O.w),ND) ,vec4(c[i].xyz,(i<2 || c[1].x!=0.)?c[i].w:0.);return);\n    RULE_ANY(WATER  && N_EMPTY && int(O.w)==i+1 && ND>0 && OPPOSITE(int(O.w),ND) ,vec4(0);return);\n\n     float rn=hash13(vec3(I ,iFrame));\n    int rq =c[1].x==0.? clamp(int(rn*8.-4.),1,3)\n                      :min(c[2].x,c[3].x)==0.? int(rn*2.) +2 \n                      :c[2].x==0.?2:3;\n\n    //request\n    RULE_ANY(WATER  && N_EMPTY && O.w==0. && ND==0  && rq==i,vec4(O.xyz,i+1);return);\n    //confirm\n    RULE_ANY(EMPTY && N_WATER  && O.w==0. && ND>0  && OPPOSITE(i+1,ND),vec4(O.xyz,i+1);return);      \n\n    //rollback \n    RULE_ANY(EMPTY && int(O.w)==i+1 && (!N_WATER || ND==0 || (  ND>0  && !OPPOSITE(int(O.w),ND))),vec4(O.xyz,0.);return;);\n    RULE_ANY(WATER && int(O.w)==i+1 && (!N_EMPTY || ( ND>0  &&  !OPPOSITE(int(O.w),ND))),vec4(O.xyz,0.);return;);\n\n}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define MS  3.\nvoid mainImage( out vec4 O, in vec2 I )\n{   \n    _mainImage(  O, I , iChannel0,  iFrame,R.x/R.y,SIZE);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"#define MS  3.\nvoid mainImage( out vec4 O, in vec2 I )\n{  \n  _mainImage(  O, I , iChannel0,  iFrame,R.x/R.y,SIZE);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"#define MS  3.\nvoid mainImage( out vec4 O, in vec2 I )\n{  \n  _mainImage(  O, I , iChannel0,  iFrame,R.x/R.y,SIZE);\n}","name":"Buffer D","description":"","type":"buffer"}]}