{"ver":"0.1","info":{"id":"mlS3WW","date":"1673295179","viewed":106,"name":"Fire with smoke","username":"ianertson","description":"Simple fire with smoke","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","fire","smoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14\n#define TAU (PI*2.0)\n\nfloat noise0(vec2 uv) {\n    uv = (uv*1.03145) + vec2(0.018, 0.0191);\n    uv /= 1.661516;\n    vec2 id = floor(uv);\n    vec2 lv = smoothstep(0.0, 1.0, fract(uv));\n    \n    vec3 n = texture( iChannel0, (uv+ 0.5)/6.0).xyz;\n    \n    return mix(n.x, n.y, lv.x);\n}\n\nfloat noise1(vec2 uv) {\n    uv = (uv*1.03145) + vec2(0.018, 0.0191);\n    uv /= 1.661516;\n    vec2 id = floor(uv);\n    vec2 lv = smoothstep(0.0, 1.0, fract(uv));\n    \n    vec3 n = texture( iChannel1, (uv+ 0.5)/6.0).xyz;\n    \n    return mix(n.x, n.y, lv.x);\n}\n\nfloat noise2(vec2 uv) {\n    float n1 = noise0(uv);\n    float n2 = noise1(2.6*uv+vec2(1.629, 0.9915));\n    float n3 = noise1((vec2(n1, n2)*0.1)+uv);\n    \n   return noise1((vec2(n2,n3)*(n1*0.1))+uv);\n\n}\n\nfloat noise(vec2 uv) {\n    uv *= 1.0029;\n    uv *= 0.676;\n    return mix(noise2(uv), noise1(uv+vec2(-2.12, 1.16)), noise0(uv));\n}\n\nvec3 smoke(vec2 fc, vec2 uv, vec2 pos, vec2 dir, vec2 top) {\n    dir *= -1.0;\n    \n    uv += 0.25*noise(dir+(uv*0.1));\n    \n    float n0 = noise(uv + vec2(32.15, 23.51) + (dir*(iTime*0.089)));\n    vec2 adir = normalize(dir + (0.0001 * vec2(cos(n0*TAU), sin(n0*TAU))));\n    vec2 vel = adir * ((iTime*0.1)-cos(uv.y*PI*0.5*+(n0*TAU*0.1)));\n    \n    \n\n    \n    \n    uv = uv + (vel);\n    float radius = 24.0 + ((cos(n0*10.0)*6.0+n0) * max(0.0, dot(adir, dir)));\n    float dist = abs(distance(fc, pos));\n    float invDist = clamp(radius / max(0.00001, dist), 0.0, 1.0);\n    float distTop = abs(distance(fc, top));\n    float invDistTop = clamp(1.0 / max(0.00001, distTop), 0.0, 1.0);\n    float itop = 1.0;\n    \n    vec2 r = iResolution.xy;\n    float ptop = max(0.0, (r.y-fc.y));\n    float pbot = max(0.0, fc.y/pos.y);\n   \n    float pleft = max(0.0, (r.x-fc.x) / pos.x);\n    float pright = max(0.0, (fc.x) / pos.x);\n    itop *= smoothstep(0.0, 1.0, pleft);\n    itop *= smoothstep(0.0, 1.0, pright);\n    itop *= smoothstep(0.0, 1.0, ptop);\n    itop *= smoothstep(0.0, 1.0, pbot);\n    itop *= (0.09+(n0*noise(pos*uv*vel)))+(invDistTop/radius);\n    \n    float n = noise((uv*1.0241) + vel + vec2(6.1, 3.4));\n    float f = smoothstep(TAU / (radius-n), 1.0, invDist+itop);\n    \n   \n    float nv = noise(uv);\n    \n    nv = (nv + n0 + n) / (3.0);\n    \n    return vec3(nv * f);\n    \n}\n\nconst vec3 fireColor0 = vec3(226.0, 88.0, 34.0) / 255.0;\nconst vec3 fireColor1 = vec3(128.0,9.0,9.0) / 255.0;\nconst vec3 fireColor2 = vec3(1.0, 1.0, 1.0);\n\nvec3 fire(vec2 fc, vec2 uv, vec2 pos, vec2 dir, vec2 top, vec3 sm) {\n    vec2 distort = 0.1*vec2(cos(iTime*0.1), sin(iTime*0.1)) * TAU * (noise(sin(0.1*iTime+uv.x)*uv+cos(0.1*iTime-uv.y)));\n    \n    dir += 0.5 * noise((uv+dir)*vec2(sin(uv.x*iTime*0.1+noise(uv*dir)), cos(noise(uv*0.9)+uv.y*iTime*0.1)));\n    dir += 0.1 * cos(sm.xy*TAU+sm.z);\n    distort += (dir*cos(iTime+noise(distort*0.01))*TAU);\n    distort *= (0.1+(33.6 * (sm.xy+sm.z)));\n    pos += distort*noise(distort);\n    \n    float n0 = noise(fc*distort);\n    \n    float n = noise(uv+(distort*0.05));\n    float radius = 24.0 + (n*TAU+n0);\n    float dist = abs(distance(fc, pos));\n    float invDist = clamp((radius+cos(dot(uv, distort)*n0*TAU)) / max(0.00001, dist + cos(64.6*noise(n0+sm.xy+(distort*0.1)+uv))), 0.0, 1.0);\n    float distTop = abs(distance(fc, top));\n    float invDistTop = clamp(1.0 / max(0.00001, distTop), 0.0, 1.0);\n    \n    vec3 color = mix(fireColor0, fireColor1, smoothstep(1.9*invDistTop, 1.0, invDistTop));\n    color += fireColor2 * invDist*(0.5+noise(sm.xy*1.9));\n    \n    return color * invDist;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 sm = smoke(fragCoord.xy, uv, iResolution.xy/2.0, vec2(0, 1), vec2(iResolution.x/2.0, iResolution.y));\n    vec3 fir = fire(fragCoord.xy+vec2(0, 86.0), uv+vec2(0, 86.0 / iResolution.y), iResolution.xy/2.0, vec2(0, 1), vec2(iResolution.x/2.0, iResolution.y), sm);\n    vec3 col = sm + fir;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}