{"ver":"0.1","info":{"id":"Xdd3RM","date":"1448624586","viewed":793,"name":"Chapter 6 - color","username":"hamoid","description":"Chapter 6 of the book of shaders","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color","learnig"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define MODE1\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 c1 = vec3(0.1, 0.1, 0.7);\n    vec3 c2 = vec3(0.7, 0.2, 0.2);\n    vec3 c3 = vec3(0.2, 0.7, 0.1);\n    \n    float s1 = sin(iTime * 0.6 + iTime * 0.01);\n    float s2 = sin(iTime * 1.2);\n    \n    if(s1 < 0.0) {\n        s1 = -(pow(abs(s1), 5.0));\n    } else {\n        s1 = pow(s1, 20.0);\n    }\n\n    if(s2 < 0.0) {\n        s2 = -(pow(abs(s2), 15.0));\n    } else {\n        s2 = pow(s2, 10.0);\n    }\n\n    #ifdef MODE1\n    vec3 color = ((uv.x * 2.0 - 1.0) < s1 ? c1 : c2) + \n        ((uv.y * 2.0 - 1.0) < s2 ? c2 : c3);\n    #endif\n\t\n    fragColor = vec4(color, 1.0);\n    \n}","name":"","description":"","type":"image"}]}