{"ver":"0.1","info":{"id":"DtsBWr","date":"1692804983","viewed":67,"name":"Wavy Deformation","username":"Pi101","description":"Silly Wave shader, originally made for my game. ","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["2d","wave","distortion","deformation","effect","wavy","trippy","acid","distorted"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // custom floats!\n    float Frequency = 5.0;\n    float Amplitude = 0.10;\n    float Trippy = 1.2;\n    float Speed = 1.0;\n\n    // Create a time variable for animation\n    float time = iTime * Speed;\n\n    // Calculate UV coordinates\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Apply distortion\n    vec2 distortion = vec2(\n        sin(uv.y * Frequency + time) * Amplitude,\n        sin(uv.x * Frequency + time) * Amplitude\n    );\n\n    // Add some diagonal distortion\n    distortion += vec2(\n        sin((uv.x + uv.y) * Frequency + time) * Amplitude * 0.5,\n        sin((uv.x - uv.y) * Frequency + time) * Amplitude * 0.5\n    );\n\n    // Apply trippy effect\n    distortion += vec2(\n        sin(time) * Trippy,\n        cos(time) * Trippy\n    );\n\n    // Apply the distortion to the UV coordinates\n    vec2 distortedUV = uv + distortion;\n\n    // Sample the image texture\n    vec3 color = texture(iChannel0, distortedUV).xyz;\n\n    // Output!\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}