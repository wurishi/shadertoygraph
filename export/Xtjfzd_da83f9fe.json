{"ver":"0.1","info":{"id":"Xtjfzd","date":"1516884231","viewed":75,"name":"signed distance function orchids","username":"edapx","description":"flower, patterns, orchids","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["patterns","flowers","orchidssdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TWO_PI 6.28318530718\n\n// bool ops\nfloat merge(float d1, float d2){\n\treturn min(d1, d2);\n}\n\nfloat smoothMerge(float d1, float d2, float k){\n    float h = clamp(0.5 + 0.5*(d2 - d1)/k, 0.0, 1.0);\n    return mix(d2, d1, h) - k * h * (1.0-h);\n}\n\nfloat substract(float d1, float d2){\n\treturn max(-d1, d2);\n}\n\n// sdf\nfloat ellipseDist(vec2 p, float radius, vec2 dim){\n  vec2 pos = p;\n  pos.x = p.x / dim.x;\n  pos.y = p.y / dim.y;\n  return length(pos) - radius;\n}\n\n//matrix transformations\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nfloat orcSepals(vec2 toCenter, float resize, float defX, float defY, \nfloat power, float nPetals, float smoothness){\n    float angle = atan(toCenter.y,toCenter.x) + 0.5;\n    // try out different functions for different shapes\n    //float grow = pow(length(toCenter), power);\n    //float grow = exp(length(toCenter)) * 0.15;\n    //float grow = exp2(length(toCenter)) * 0.19;\n    //float grow = sqrt(length(toCenter)) * 0.35;\n    float grow = sin(length(toCenter)) * 0.58;\n\n    float deformOnY = toCenter.y * defY;\n    float deformOnX = abs(toCenter.x) * defX;\n    float radius = length(toCenter)*resize * (grow+deformOnY+deformOnX);\n\n    float f = cos(angle*nPetals);\n    return smoothstep(f, f+smoothness,radius);\n}\n\nfloat halfMoon(vec2 pos, vec2 oval, vec2 ovalSub,float radius, float offset){\n  float A = ellipseDist(pos, radius, oval);\n  vec2 posB = pos;\n  posB.y += offset;\n  float B = ellipseDist(posB, radius, ovalSub);\n  float p = substract(B,A);\n  return p;\n}\n\nfloat lip(vec2 pos, vec2 oval, vec2 ovalSub,float radius, float offset){\n  float A = ellipseDist(pos, radius, oval);\n  vec2 posB = pos;\n  posB.y += offset;\n  float B = ellipseDist(posB, radius, ovalSub);\n  float p = smoothMerge(B, A, 0.1);\n  return p;\n}\n\nfloat orcColumn(vec2 pos, vec2 oval, vec2 ovalSub,float radius, float offset){\n  float A = ellipseDist(pos, radius, ovalSub);\n  vec2 posB = pos;\n  posB.y -= offset;\n  float B = ellipseDist(posB, radius, oval);\n  float p = substract(B,A);\n  posB.y += 0.035;\n  float cone = ellipseDist(posB, radius, vec2(0.08, 0.15));\n  p = smoothMerge(cone,p, 0.1);\n  return p;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 st = fragCoord.xy / iResolution.xy;\n  st.x *= iResolution.x /iResolution.y;\n  // general parameters\n  float smoothness = 0.02;\n  float addSmoothnessToSetals = 2.9;\n\n  st *= 2.;\n  st = fract(st);\n  st+=vec2(-0.5, -0.5);\n  //column parameters\n  float colResize = 0.5;\n  vec2 posCol = st;\n  posCol.y += 0.05;\n  float colYoffset = 0.038;\n  float powerCol = 2.;\n  vec2 colRatio = vec2(0.3*colResize, 0.3*colResize);\n  vec2 colSubRatio = vec2(0.9*colResize, 0.9*colResize);\n  float colRadius = 0.52*colResize;\n  // sepals parameters\n  float deformX = 0.2;\n  float deformY = -0.28;\n  float resizePetals = 21.9;\n  float powerSepals = 2.0;\n  float nPetals = 3.;\n  // lateral petals parameter\n  float lateralPetResize = 1.0;\n  vec2 posHalfMoon = st;\n  posHalfMoon.y += -0.09;\n  float moonResize = 0.41;\n  float petYoffset = -0.12 * moonResize;\n  float power = 2.;\n  vec2 hMoonRatio = vec2(0.7*moonResize, 0.5*moonResize);\n  vec2 hMoonSubRatio = vec2(0.98*moonResize, 0.7*moonResize);\n  float hMoonRadius = 1.*moonResize;\n  // lip parameter\n  vec2 posLip = st;\n  posLip.y += 0.18;\n  float lipResize = 0.5;\n  float lipYoffset = 0.15;\n  vec2 lipRatio = vec2(0.35*lipResize, 0.6*lipResize);\n  vec2 smallLipRatio = vec2(0.15*lipResize, 0.2*lipResize);\n  float lipRadius = 1.*lipResize;\n\n  float column = orcColumn(posCol*rotate2d(TWO_PI/2.),\n                        colRatio,\n                        colSubRatio,\n                        colRadius, colYoffset);\n  float sepals = orcSepals(st,\n                        resizePetals,\n                        deformX,\n                        deformY, powerSepals, nPetals,\n                        smoothness+addSmoothnessToSetals);\n  float latPetals = halfMoon(posHalfMoon,\n                        hMoonRatio,\n                        hMoonSubRatio,\n                        hMoonRadius, petYoffset);\n  float lip = lip(posLip,\n                      lipRatio,\n                      smallLipRatio,\n                      lipRadius, lipYoffset);\n\n  float orchids = merge(latPetals, sepals);\n  orchids = merge(orchids, lip);\n  orchids = substract(column, orchids);\n  // add smoothness\n  orchids = smoothstep(orchids,orchids+smoothness,0.09);\n  fragColor = vec4(vec3(orchids), 1.);\n}","name":"Image","description":"","type":"image"}]}