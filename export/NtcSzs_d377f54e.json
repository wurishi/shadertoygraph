{"ver":"0.1","info":{"id":"NtcSzs","date":"1639560824","viewed":109,"name":"Spinning round","username":"ololeecn","description":"a loading  animation of  a small project. Special thanks to  @FabriceNeyret2 for his prefect recommendations.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define TEST \nprecision highp float;\n#define RANGE 0.02\n#define NUMBER 8\n#define RADIUS 0.76\n#define MAX_R 0.2\n#define SPEED -5.0\n#define PI 3.14159265358979\n\nfloat sdCircle(vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat symmetricFunc(int i){\n    return float(min(NUMBER-i,i))*RANGE;\n} \n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);//background\n#ifdef TEST\n     col = mix( vec3(1.0,0.0,0.0),col, smoothstep(0.0,0.01,abs(sdCircle(p,RADIUS))) );\n#endif \n    float part = 2.0*PI/float(NUMBER);\n    for(int i=0;i<NUMBER;i++){\n      float rad = part*(float(NUMBER)*0.25-float(i)) +iTime*SPEED;\n      float d = sdCircle(p-RADIUS*vec2(cos(rad),sin(rad)),MAX_R-symmetricFunc(i));\n      col = mix(vec3(1.0),col,smoothstep(0.0,0.01,d) );\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}