{"ver":"0.1","info":{"id":"4tKyDV","date":"1537816230","viewed":149,"name":"Draw a shape with lines","username":"billyboy123","description":"testererer","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["tester"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float DrawLineArea(vec2 Pixel ,vec2 Point0, vec2 Point1){\n\tvec2 Dir0\t\t= Point1 - Point0;\n\tvec2 Dir1\t\t= Pixel - Point0;\n    vec2 Tan\t\t= normalize(cross(normalize(vec3(Dir0.xy,0.0)),vec3(0.0,0.0,1.0)).xy);\n\tfloat LineT\t\t= dot( -Dir0, Dir1) / dot( -Dir0, Dir0);\n    if ( LineT > 1.0 || LineT < 0.0){\n        return 0.0;\n    }\n    vec2 LinePos\t= mix( Point0, Point1, LineT);\n    return\t\t\tdot( normalize(Pixel-LinePos), Tan);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //float Stored = texture( iChannel0, uv).x;\n    float Stored = 0.0; //comment and uncomment above line to enable a texture grab from buffer a.\n    float Shape = Stored;\n    \n    //Triangle//\n    //Shape += DrawLineArea( uv, vec2( 0.5, 0.75), vec2( 0.75, 0.25));\n    //Shape += DrawLineArea( uv, vec2( 0.75, 0.25), vec2( 0.25, 0.25));\n    //Shape += DrawLineArea( uv, vec2( 0.25, 0.25), vec2( 0.5, 0.75));\n    \n    //Square//\n    //Shape += DrawLineArea( uv, vec2( 0.25, 0.25), vec2( 0.25, 0.75));\n    //Shape += DrawLineArea( uv, vec2( 0.25, 0.75), vec2( 0.75, 0.75));\n    //Shape += DrawLineArea( uv, vec2( 0.75, 0.75), vec2( 0.75, 0.25));\n    //Shape += DrawLineArea( uv, vec2( 0.75, 0.25), vec2( 0.25, 0.25));\n    \n    //WeirdShape//\n    Shape += DrawLineArea( uv, vec2( 0.25, 0.25), vec2( 0.25, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.25, 0.75), vec2( 0.35, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.35, 0.75), vec2( 0.35, 0.5));\n    Shape += DrawLineArea( uv, vec2( 0.35, 0.5), vec2( 0.5, 0.5));\n    Shape += DrawLineArea( uv, vec2( 0.5, 0.5), vec2( 0.5, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.5, 0.75), vec2( 0.75, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.75, 0.75), vec2( 0.75, 0.25));\n    Shape += DrawLineArea( uv, vec2( 0.75, 0.25), vec2( 0.25, 0.25));\n    \n    Shape = sign(Shape-0.1);\n    fragColor = vec4(Shape, 1.0-Shape,Stored,1.0);\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float DrawLineArea(vec2 Pixel ,vec2 Point0, vec2 Point1){\n    Pixel += vec2(0.25,0.25);\n\tvec2 Dir0\t\t= Point1 - Point0;\n\tvec2 Dir1\t\t= Pixel - Point0;\n    vec2 Tan\t\t= normalize(cross(normalize(vec3(Dir0.xy,0.0)),vec3(0.0,0.0,1.0)).xy);\n\tfloat LineT\t\t= dot( -Dir0, Dir1) / dot( -Dir0, Dir0);\n    if ( LineT > 1.0 || LineT < 0.0){\n        return 0.0;\n    }\n    vec2 LinePos\t= mix( Point0, Point1, LineT);\n    return\t\t\tdot( normalize(Pixel-LinePos), Tan);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float Shape = 0.0;\n    //Triangle//\n    //Shape += DrawLineArea( uv, vec2( 0.5, 0.75), vec2( 0.75, 0.25));\n    //Shape += DrawLineArea( uv, vec2( 0.75, 0.25), vec2( 0.25, 0.25));\n    //Shape += DrawLineArea( uv, vec2( 0.25, 0.25), vec2( 0.5, 0.75));\n    //Square//\n    //Shape += DrawLineArea( uv, vec2( 0.25, 0.25), vec2( 0.25, 0.75));\n    //Shape += DrawLineArea( uv, vec2( 0.25, 0.75), vec2( 0.75, 0.75));\n    //Shape += DrawLineArea( uv, vec2( 0.75, 0.75), vec2( 0.75, 0.25));\n    //Shape += DrawLineArea( uv, vec2( 0.75, 0.25), vec2( 0.25, 0.25));\n    //WeirdShape//\n    Shape += DrawLineArea( uv, vec2( 0.25, 0.25), vec2( 0.25, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.25, 0.75), vec2( 0.35, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.35, 0.75), vec2( 0.35, 0.5));\n    Shape += DrawLineArea( uv, vec2( 0.35, 0.5), vec2( 0.5, 0.5));\n    Shape += DrawLineArea( uv, vec2( 0.5, 0.5), vec2( 0.5, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.5, 0.75), vec2( 0.75, 0.75));\n    Shape += DrawLineArea( uv, vec2( 0.75, 0.75), vec2( 0.75, 0.25));\n    Shape += DrawLineArea( uv, vec2( 0.75, 0.25), vec2( 0.25, 0.25));\n    \n    Shape = sign(Shape-0.001);\n    fragColor = vec4(Shape, 0.0,0.0,1.0);\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}