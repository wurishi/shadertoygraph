{"ver":"0.1","info":{"id":"sstyRs","date":"1653988897","viewed":95,"name":"mnikn-bullet","username":"mnikn","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat sat(float t) {\n    return clamp(t, 0.0, 1.0);\n}\n\nfloat remap01(float a, float b, float t) {\n    return sat((t - a) / (b - a));\n}\n\nfloat remap(float a, float b, float c, float d, float t) {\n    return remap01(a, b, t) * (d - c) + c;\n}\n\n\nfloat traperbox(vec2 uv, float wb, float wt, float yb, float yt, float blur) {\n    float m = smoothstep(-blur, blur, uv.y - yb);\n    m *= smoothstep(blur, -blur, uv.y - yt);\n    \n    uv.x = abs(uv.x);\n    \n    float w = mix(wb, wt, (uv.y - yb) / (yt - yb));\n    m *= smoothstep(blur, -blur, uv.x -w);\n    \n    return m;\n}\n\nfloat circle(vec2 uv, float radius, float blur) {\n    uv -= 0.5;\n    \n    // float x = uv.y;\n    // uv.y += pow(min(cos(PI * x / 2.0), 1.0 - abs(x)), 2.5);\n    \n    float d = length(uv);\n        \n    return smoothstep(radius, radius - blur, d);\n}\n\nfloat rect(vec2 uv, vec2 size) {\n    float blur = 0.000;\n    // 让 size 成正比\n    size = 0.5 - size * 0.5;\n    // 先画一边\n    vec2 r = vec2(step(size.x, uv.x), step(size.y, uv.y));\n    // 再画相反的边，相乘得出相交位置就是对应的矩形\n    r *= vec2(step(size.x, 1.0 - uv.x), step(size.y, 1.0 - uv.y));\n    // x 和 y 相乘得出矩形的像素点值\n    return r.x * r.y;\n}\n\nfloat bullet(vec2 uv) {\n    float m = traperbox(vec2(uv.x+0.2, uv.y), 0.5, 0.5, 0.35, 0.65, 0.0005);\n    m += traperbox(vec2(uv.x-0.4, uv.y), 0.1, 0.4, 0.35, 0.5, 0.0005);\n    m += traperbox(vec2(uv.x-0.4, 1.0 - uv.y+0.15), 0.1, 0.4, 0.5, 0.65, 0.0005);\n    \n    // rect\n    m = min(m, 1.0);\n    m += rect(vec2(uv.x+0.6, uv.y), vec2(0.02,0.3));\n    m = max(m, 0.0);\n    \n    return m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n    uv.y += 0.5;\n    \n    vec4 col = vec4(vec3(0.3), 1.0);\n    \n    float m = bullet(uv);\n    col.rgb = mix(col.rgb, vec3(0.96, 0.75, 0.3), m);\n    \n    \n    // bottom gradient\n    float t = bullet(uv);\n    t *= remap(0.7, 0.55, 1.3, 0.0, 1.0-uv.y); \n    col.rgb = mix(col.rgb, vec3(0.0), t);\n    t = bullet(uv);\n    t *= remap(1.0, 0.2, 0.8, 0.0, 0.8 + uv.x) * smoothstep(0.4, 0.35, uv.y);\n    col.rgb *= 1.0 - t;\n    \n    // highlight\n    t = bullet(uv);\n    t *= remap(0.5, 0.45, 0.8, 0.0, uv.y-0.1) * 0.5; \n    col.rgb = mix(col.rgb, vec3(1.0), t);\n    t = bullet(uv);\n    t *= remap(1.0, 0.2, 0.8, 0.0,  uv.x+0.8) * smoothstep(0.5, 0.8, uv.y);\n    col.rgb *= t+1.0;\n    \n    // pointer highlight\n    t = bullet(uv);\n    t *= remap(0.5, 0.35, 0.3, 0.0, uv.x-0.25) * 1.3;\n    col.rgb *= 1.0 + t;\n    \n    t = bullet(uv);\n    t *= remap(1.0, 0.4, 1.0, 0.0, 0.1 - uv.x);\n    col.rgb *= 1.0 - t;\n    \n    \n    \n    \n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}