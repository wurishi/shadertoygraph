{"ver":"0.1","info":{"id":"sl2SRW","date":"1627227959","viewed":46,"name":"Simple Planets","username":"AshutoshR","description":"Simple Planets rotating around a star","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle","circlerotation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Circle {\n    vec2 position;\n    float radius;\n};\n\nCircle planets[5];\n\nvoid setUpScene() {\n\n    planets[0] = Circle(vec2(300,300), 40.0);\n\n    planets[1] = Circle(vec2(20 , 20), 4.0);\n    \n    planets[2] = Circle(vec2(0 , 0), 9.0);\n    \n    planets[3] = Circle(vec2(0 , 0), 10.0);\n    \n    planets[4] = Circle(vec2(0 , 0), 3.0);\n}\n\nvec3 getPColor(vec2 cord) {\n    for(int i = 0; i < 5; i++) {\n        float dist = distance(cord, planets[i].position);\n        if (dist < planets[i].radius) {\n            if (i == 0) {\n                return vec3(1.0 , 1.0, 0.0);\n            }\n            else if (i == 1) {\n                return vec3(1.0, 0.5, 0.0);\n            } \n            else if (i == 2) {\n                return vec3(0.4, 0.4, 0.0);\n            }\n            else if (i == 3) {\n                return vec3(0.0, 0.0, 1.0);\n            }\n            else if (i == 4) {\n                return vec3(0.5, 0.5, 0.5);\n            }\n            else {\n                return vec3(0.8, 0.5 , 1.0);\n            }\n        }\n    }\n    \n    return vec3(0.0 , 0.0 , 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    setUpScene();\n    \n    planets[0].position = vec2(iResolution.x / 2.0, iResolution.y / 2.0);\n    \n    planets[1].position.x = sin(iTime / 5.0) * 60.0 + planets[0].position.x;\n    planets[1].position.y = cos(iTime / 5.0) * 60.0 + planets[0].position.y;\n    \n    planets[2].position.x = sin(iTime / 8.0) * 90.0 + planets[0].position.x;\n    planets[2].position.y = cos(iTime / 8.0) * 90.0 + planets[0].position.y;\n    \n    planets[3].position.x = sin((iTime / 8.0) + 150.0) * 150.0 + planets[0].position.x;\n    planets[3].position.y = cos((iTime / 8.0) + 150.0) * 150.0 + planets[0].position.y;\n    \n    planets[4].position.x = sin(iTime / 2.0) * 20.0 + planets[3].position.x;\n    planets[4].position.y = cos(iTime / 2.0) * 20.0 + planets[3].position.y;\n    \n    vec3 col = getPColor(fragCoord);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}