{"ver":"0.1","info":{"id":"wtB3zW","date":"1558625962","viewed":314,"name":"Bliem_004","username":"onebus","description":"Here is another basic example ","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["hajdee"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy First steps\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n   \n    float t = iTime;\n    \n    float k = floor(fract(t+uv.y*10.0)*2.0);\n    \n   // vec3 img = texture(iChannel0,uv).rgb;\n    vec3 img = texture(iChannel1,uv).rrr;\n   \n    \n    vec3 col = vec3(k);\n    \n    col -= img;\n   // col *= img;\n   // col += img;\n    \n   \n    \n\tfloat cut = fract(t);\n    \n    cut = (sin(t)+1.0)*0.5;\n    if(uv.x > cut){\n    \tcol = img;\n    }\n    \n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}