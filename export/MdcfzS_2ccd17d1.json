{"ver":"0.1","info":{"id":"MdcfzS","date":"1525669181","viewed":164,"name":"Zoomed variant Logistic map","username":"akhgary","description":"variable population initialization helps to distinguish more fixed points.\n\npoints are colored based on if its odd or even iteration. try mod 4  as well.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["map","chaos","logistic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hue(float n) {\n    return 0.6+0.6*cos(6.3*n+vec3(0,23,21));\n}\n\nfloat draw(float dist){\n    return 1.-smoothstep(-1./iResolution.y,1./iResolution.y, dist);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy+vec2(3,0); \n    vec3 col = vec3(0);\n\n    // population initial value is calculated using \n    // triangle wave that alternates between 0 and 1\n    float lambda = uv.x, pop = abs(mod(iTime/5.+.5,2.)-1.); \n    \n    for(int i=0;i<300;i++){\n        pop *= lambda*(1.-pop);\n        \n        if(i>150)\n            col += draw(abs(uv.y-pop)-1e-4)\n            \t  *hue(mod(float(i),2.)/2.); //also try mod(float(i),4.)/4.\n          \n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}