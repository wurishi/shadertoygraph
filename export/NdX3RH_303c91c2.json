{"ver":"0.1","info":{"id":"NdX3RH","date":"1615457801","viewed":81,"name":"Layer Slice display","username":"nebbul","description":"Draw slices to display different layers of something\n\nI use this is my solar system shader to display the different render passes: https://www.shadertoy.com/view/3tyfWy","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["visualization","slice","debug","render","layer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LAYER_DISPLAY 1\n\n// background grid from https://www.shadertoy.com/view/XtBfzz\nconst float N = 2.0; // grid ratio\nfloat gridTexture( in vec2 p )\n{\n    // coordinates\n    vec2 i = step( fract(p), vec2(1.0/N) );\n    //pattern\n    //return (1.0-i.x)*(1.0-i.y);   // grid (N=10)\n    \n    // other possible patterns are these\n    //return 1.0-i.x*i.y;           // squares (N=4)\n    return 1.0-i.x-i.y+2.0*i.x*i.y; // checker (N=2)\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // default \"beautypass\"\n    vec3 col = 0.2 * vec3(1., 1., 1.) * gridTexture(fragCoord.xy/iResolution.xx * vec2(5., 5.)) + 0.6;\n\n    // display render layers by using global flag\n#if LAYER_DISPLAY\n    vec2 visuv = fragCoord.xy / iResolution.yy + fragCoord.y/iResolution.y;\n    float sliceCount = 6.;\n    float sliceWidth = 2.;\n    \n    float lineWidth = 0.05;\n    float speed = 0.2;\n    \n    float slice = floor(mod(visuv.x * sliceWidth - iTime * speed, sliceCount)) / sliceCount;\n    float line = 1.-(smoothstep(0., lineWidth, mod((visuv.x - iTime * speed * (1./sliceWidth)) * sliceWidth * sliceCount, sliceCount)) * smoothstep(0., lineWidth, mod((-visuv.x + iTime * speed * (1./sliceWidth)) * sliceWidth * sliceCount, sliceCount)));\n    \n    float sliceStep = 1. / sliceCount;\n\n    // just increase this with number of slices\n    if(slice >= sliceStep && slice <= sliceStep*2.) col = vec3(1.,0.,0.);\n    if(slice >= sliceStep*2. && slice <= sliceStep*3.) col = vec3(0.,1.,0.);\n    if(slice >= sliceStep*3. && slice <= sliceStep*4.) col = vec3(0.,0.,1.);\n    if(slice >= sliceStep*4. && slice <= sliceStep*5.) col = vec3(1.,0.,1.);\n    if(slice >= sliceStep*5. && slice <= sliceStep*6.) col = vec3(1.,1.,0.);\n    \n    col = mix(col, vec3(0.,0.,0.), line);\n#endif\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}