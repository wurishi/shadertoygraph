{"ver":"0.1","info":{"id":"stdGR8","date":"1635724141","viewed":127,"name":"Breathing Big Dipper","username":"jaeylee","description":"Breathing effect of the Big Dipper constellation. Change mouse position to change colors.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["constellation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Daniel Lee\n//10/31/2021\n//Help from https://www.shadertoy.com/view/3s3GDn\n//Help from https://www.shadertoy.com/view/MlGSDK\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(0., 0., 0., 1.);\n    //coordinates of the stars in Big Dipper\n    const float dipperPos[14] = float[14](0.1, 0.9, 0.3, 0.85, 0.4, 0.7, 0.5, 0.5, 0.47, 0.3, 0.75, 0.35, 0.7, 0.2);\n    //using mouse position to change colors\n    float mouseX = iMouse.x / iResolution.x;\n    float mouseY = iMouse.y / iResolution.y;\n    //default color\n    if (mouseX == 0. && mouseY == 0.) {\n        mouseX = 0.35;\n        mouseY = 0.5;\n    }\n    //plotting all the stars\n    for (int i = 0; i < 14; i += 2) {\n        //position relative to center of stars\n        vec2 pos = vec2(dipperPos[i], dipperPos[i + 1]) - uv;\n        //adjusting y for uniform transforms\n        pos.y /= iResolution.x / iResolution.y;\n        //using 1/x plot to simulate change in brightness\n        float dist = 1.0 / length(pos);\n        //dist value changes the brightness value\n        dist *= 0.005;\n        //setting color depending on distance, time, and mouse position\n        vec3 col = dist * (1.2 + vec3(cos(time), cos(time), cos(time))) * vec3(mouseX, mouseY, mouseX / mouseY);\n        //ensuring that color does not exceed 1\n        col = 1.0 - exp(-col);\n        //adding the stars to fragColor\n        fragColor += vec4(col, 1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}