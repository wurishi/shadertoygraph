{"ver":"0.1","info":{"id":"tdtGzX","date":"1569010750","viewed":209,"name":"Megalovania","username":"KittyGuy2019","description":"A soundtrack for Undertale.","likes":3,"published":1,"flags":64,"usePreview":0,"tags":["undertale","sansbattle","tobyfox"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"llsGWS","filepath":"https://soundcloud.com/angrysausage/toby-fox-undertale","previewfilepath":"https://soundcloud.com/angrysausage/toby-fox-undertale","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec4 col = vec4(vec3(0.0), 1.0);\n    float yd = iResolution.y;\n    float ym = yd - 16.0;\n    float xoffset = 15.0;\n    float xlength = iResolution.x-30.0;\n    vec4 rlayer, glayer, blayer, alayer;\n    for (float x=0.0; x<=1.0; x+=0.05) {\n        vec4 samplepoint = soundsample(iChannel0, int(x*255.0));\n        vec2 cont = vec2(x*xlength+xoffset, 0.0);\n        sans_BoneImage(rlayer, vec4(1.0), fragCoord, cont, ym*samplepoint.r, 8.5);\n        sans_BoneImage(glayer, vec4(1.0), fragCoord, cont, ym*samplepoint.g, 8.5);\n        sans_BoneImage(blayer, vec4(1.0), fragCoord, cont, ym*samplepoint.a, 8.5);\n        blend(col, vec4(rlayer.r, glayer.r, blayer.r, max(max(rlayer.a, glayer.a), blayer.a)));\n    }\n    \n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"const float pi = 3.1415926535897932384626433832795;\nconst float eps = 0.18;\n\nvoid rotate(inout vec2 coord, float angle)\n{\n    coord = vec2(\n        coord.x * cos(angle) + coord.y * sin(angle),\n        coord.x * sin(angle) - coord.y * cos(angle)\n    );\n}\n\nvoid blend(inout vec4 pixel, vec4 pixcolor)\n{\n    pixel.rgb = mix(pixel.rgb, pixcolor.rgb, pixcolor.a);\n    pixel.a = mix(pixel.a, 1.0, pixcolor.a);\n}\n\nvec4 soundsample(sampler2D waveform, int x)\n{\n    float repeat = fract(float(x)/256.0);\n    float leftTreble = texture(waveform, vec2(repeat, 0.0)).r;\n    float rightTreble = texture(waveform, vec2(repeat, 0.25)).r;\n    float leftBass = texture(waveform, vec2(repeat, 0.5)).r;\n    float rightBass = texture(waveform, vec2(repeat, 0.75)).r;\n    return vec4(leftTreble, rightTreble, leftBass, rightBass);\n}\n\nvoid sdBox(inout vec4 pixel, vec4 pixcolor, vec2 coord, vec2 size)\n{\n    vec2 ns = size / 2.0;\n    vec2 center = coord + ns;\n    vec2 maxp = clamp(center, -ns, ns);\n    float dist = distance(maxp, center);\n    float md = 1.0-dist;\n    pixcolor.a *= clamp(md, 0.0, 1.0);\n    blend(pixel, pixcolor);\n}\nvoid sdCircle(inout vec4 pixel, vec4 pixcolor, vec2 coord, float radius)\n{\n    float dist = length(coord)-radius;\n    float md = 1.0-dist;\n    pixcolor.a *= clamp(md, 0.0, 1.0);\n    blend(pixel, pixcolor);\n}\n\nvoid sans_BoneImage(inout vec4 pixel, vec4 pixcolor, vec2 coord, vec2 offset, float size, float thickness)\n{\n    vec2 cm = coord - offset;\n    vec2 top = cm+vec2(thickness/2.0, -size);\n    vec2 tl = vec2(thickness, 0.0);\n    sdBox(pixel, pixcolor, cm+vec2(0.0, -size), vec2(thickness, size));\n    sdCircle(pixel, pixcolor, top-tl, thickness);\n    sdCircle(pixel, pixcolor, top+tl, thickness);\n}","name":"Common","description":"","type":"common"}]}