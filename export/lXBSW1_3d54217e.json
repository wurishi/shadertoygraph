{"ver":"0.1","info":{"id":"lXBSW1","date":"1710517585","viewed":106,"name":"Frost window","username":"ykropchik","description":"Frost window","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["glass","window","frost"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Open debug console and insert commad to set frost texture \n// gShaderToy.SetTexture(0, {mSrc:'https://static3.depositphotos.com/1000627/114/i/950/depositphotos_1141542-stock-photo-frost-texture.jpg', mType:'texture', mID:1, mSampler:{ filter: 'mipmap', wrap: 'repeat', vflip:'true', srgb:'false', internal:'byte' }});\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 frostTexture = texture(iChannel0, uv);\n    vec4 mask = texture(iChannel1, uv);\n    \n    vec2 possitiveShift = uv + mask.xy;\n    vec2 negativeShift = uv - mask.xy;\n    \n    vec2 distortion = mix(possitiveShift, negativeShift, frostTexture.xy);\n    fragColor = texture(iChannel3, distortion);\n    \n    //fragColor = vec4(distortion, 0., 1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define MARGIN map(cos(iTime), 0., 1., 1., 20.)\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 margins = vec2(MARGIN);\n    vec2 topRightMask = pow(uv, margins);\n    vec2 leftBottomMask = pow(vec2(1) - uv, margins);\n    \n    vec3 mask = vec3(topRightMask.x) + vec3(topRightMask.y) + vec3(leftBottomMask.x) + vec3(leftBottomMask.y);\n    \n    fragColor = vec4(clamp(mask, vec3(0), vec3(1)), 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}