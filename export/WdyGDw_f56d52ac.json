{"ver":"0.1","info":{"id":"WdyGDw","date":"1570236612","viewed":54,"name":"Some simple test","username":"RayRayB","description":"This is just a simple program I've done a few years before just to toy with the language.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define M_PI 3.14159\n\nfloat Circle(vec2 uv, vec2 p, float r, float blur) {\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // 0<>1\n    uv -= 0.5;\t\t\t\t\t\t\t// -0.5<>0.5\n    uv.x *= iResolution.x/iResolution.y;\n    \n    \n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    /*\n\tfloat c = Circle(uv, vec2(0.), 0.3, 0.01);\n    c -= Circle(uv, vec2(sin(iTime)*0.3, cos(iTime)*0.3), 0.05, 0.01);\n    */\n    \n    float c = 0.;\n    float r = .02;\n    float b = 0.01;\n    float sn = 1000.;\n    float midsn = sn/2.;\n    \n    for(float i; i<sn; i++) \n    {\n        float vx = sin(M_PI*(i/midsn*iTime*0.1))*.5;\n        float vy = cos(M_PI*(i/midsn))*.3;\n        vec2 p = vec2(vx, vy);\n    \tc += Circle(uv, p, r, b);\n\t}\n    \n    // Output to screen\n    fragColor = vec4(vec3(c)*col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}