{"ver":"0.1","info":{"id":"ct2yWy","date":"1692232154","viewed":34,"name":"mdm_xor_draw","username":"mariano_dm","description":"first example, some simple shapes","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["xor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/(iResolution.xy - vec2(1.0,1.0));\n\n    // Output to screen\n    uv *=2.0;\n    uv -= 1.0;\n    \n    uv.y *= iResolution.y/iResolution.x;\n\n    float m = 12.5*sin(iTime/2.0);\n    m = max(0.0005,abs(m))*sign(m);\n    // y=mx+b\n    //float m = 0.01;\n    float lv=abs((uv.y-m*uv.x)/m);\n\n    fragColor.r = float(int((uv.x+1.0) * 128.0) ^ int((uv.y+1.0)*128.0))/255.0;\n\n    if(abs(lv) < 0.05) {\n     fragColor.rgb = vec3(1.0,1.0,1.0);\n    }\n    \n    if (length(uv+vec2(0.35, -0.1)) < 0.3 + 0.2*sin(iTime) ) {\n        fragColor.b = 1.0;\n    }\n}","name":"Image","description":"","type":"image"}]}