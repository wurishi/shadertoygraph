{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Iain Melvin 2014\n\n// gradient from: https://www.shadertoy.com/view/4dsSzr\n\n#define REFLECT \n\n\nvec3 heatmapGradient(float t) {\n\treturn clamp((pow(t, 1.5) * 0.8 + 0.2) * vec3(smoothstep(0.0, 0.35, t) + t * 0.5, smoothstep(0.5, 1.0, t), max(1.0 - t * 1.7, t * 7.0 - 6.0)), 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n#ifdef REFLECT\n\tuv=abs(2.0*(uv-0.5));\n#endif\n\t\n    // 0.25 = fft 0.75 = wave\n\tfloat wave1 = texture(iChannel0, vec2(uv.y, 0.75)).x;\n    float wave2 = texture(iChannel0, vec2(uv.x, 0.75)).x;\n    float wave= wave1 * wave2;\n    \n\tfloat a = abs(wave-sqrt(uv.y*uv.y+uv.x*uv.x));\n    a=a*2.0;\n    fragColor = vec4( heatmapGradient(1.0-a),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xls3RN","date":"1419653675","viewed":207,"name":"wave fft test ","username":"pixelbeast","description":"distance of wave*fft = some elements of both","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wavefft"],"hasliked":0,"parentid":"","parentname":""}}