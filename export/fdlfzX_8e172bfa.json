{"ver":"0.1","info":{"id":"fdlfzX","date":"1645135985","viewed":61,"name":"l1ghthouse","username":"natnatnat","description":"l1ghthouse","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["light","lighthouse"],"hasliked":0,"parentid":"NslBRX","parentname":"l3ght"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision highp float;\n\nconst float PI = 3.14;\nconst float e = 2.71;\nconst float PHI = 1.61;\n\nvec2 rotateZ(vec2 point, float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    vec2 finalPoint = mat2(c, -s, s, c) * point;\n    return finalPoint;\n}\n\nvec3 draw(vec2 uv, float angle) {\n    uv = uv * PI;\n    uv = rotateZ(uv, angle);\n    float z1 = (PHI * length(uv));\n    float z2 = round(z1);\n    vec3 c1 = vec3(pow(e, -abs(uv.y - z1)));\n    vec3 c2 = vec3(pow(e, -abs(uv.y - z2)));\n    return c1 * c2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( 2. * fragCoord - iResolution.xy ) / iResolution.y;\n \n    float angle = iTime;\n\n    fragColor = vec4(draw(uv, angle + PI), 1.);\n}","name":"Image","description":"","type":"image"}]}