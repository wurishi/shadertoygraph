{"ver":"0.1","info":{"id":"NllcR2","date":"1648320084","viewed":113,"name":"Space distorted repetition","username":"rodgzilla","description":"Distorting the space according to time and scene coordinates.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","repetition"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time .8 * iTime\n#define ZPOS -5. + .2 * time\n\n\nvec3 glow = vec3(0, 0, 0);\n\nmat2 rot2d(float a){\n  float c = cos(a), s = sin(a);\n  \n  return mat2(c, s, -s, c);\n}\n\nfloat sph(vec3 p, float r) {\n  return length(p) - r;\n}\n\nvec3 repeat(vec3 p, vec3 r) {\n  vec3 q = mod(p, r) - .5 * r;\n  return q;\n}\n\nfloat at = 0.;\nfloat map(vec3 p) {\n  float d = 1000.;\n  p.xy *= rot2d(p.z * .05);\n  p.xz *= rot2d(sin(p.y) * .3);\n  p.zy *= rot2d(p.x * 0.0001);\n  p = repeat(p, vec3(\n      9. + .142857 * sin(time * .6), \n      8. + .5 * sin(time * 1.4), \n      8. + 2. * sin(time * 1.2)\n    )\n  );\n  d = min(d, sph(p - vec3(0, 0, 0), 1.));\n  \n  at += 1. / (d * 5.1);\n  \n  return d;\n  \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n    uv -= 0.5;\n    uv /= vec2(iResolution.y / iResolution.x, 1);\n\n    vec3 col = vec3(0);\n    vec3 ro = vec3(0, 0, ZPOS);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.));\n    rd.xy *= rot2d(time * .3);\n    rd.yz*= rot2d(time * .4);\n\n    float d = 0.;\n    vec3 glow = vec3(0);\n\n    for (int i = 0; i < 150; i++) {\n      vec3 p = ro + d * rd;\n      float ds = map(p);\n    \n      if (ds < 0.01 || ds > 100.) {\n        break;\n      }\n      d += ds * (.3 + .5 * sin(cos(time * .21)));\n      glow += .001 * at * vec3(.15 + (.5 * sin(p.x * .1) + .5), .53 + .2 * sin(sin(time)), .13 + (.5 * cos(p.z * .05) + .5));\n    }\n  \n    vec3 p = ro + d * rd;\n    vec2 e = vec2(0.01, 0);\n    vec3 n = normalize(map(p) - \n      vec3(\n        map(p - e.xyy),\n        map(p - e.yxy),\n        map(p - e.yyx)\n      )\n    );\n\n    vec3 lp = vec3(0., 0., ZPOS);\n    vec3 tl = lp - p;\n    vec3 tln = normalize(tl);\n    float dif = dot(tln, n);\n  \n    col = vec3(dif);\n    col = dif * glow;\n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}