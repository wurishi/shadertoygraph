{"ver":"0.1","info":{"id":"WsSfRt","date":"1590775990","viewed":54,"name":"AK ok","username":"alexkrav","description":"AK ok","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["akok"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// function that draws a band\nfloat Band(float t, float start, float end, float blur) \n{\n\tfloat step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    return step1*step2;\n}\n\n// function that draws a rectangle\nfloat Rect(vec2 uv, float left, float right, \n           float bottom, float top, float skew, float blur)\n{\n    uv.x += uv.y*skew; // bend a rectangle to left/right\n    float band1 = Band(uv.x, left, right, blur);\n    float band2 = Band(uv.y, bottom, top, blur);\n    return band1*band2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{    \n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n        \n    vec3 col = vec3(.0); // black color\n    float mask = 0.;\n    // save x, y coords to not affect UV coordinates\n    float x = uv.x;\n    float y = uv.y;\n    \n    // Letter A\n    mask = Rect(vec2(x+0.373,y), -.05, .05, -.3, .3, -0.3, .003);\n    mask += Rect(vec2(x+0.19,y), -.05, .05, -.3, .3, 0.3, .003);\n    mask += Rect(vec2(x+0.28,y+0.05), -.13, .13, -.04, .03, 0., .003);\n    \n    // Letter K\n    mask += Rect(vec2(x-0.1,y), -.05, .05, -.3, .3, 0., .003);\n    mask += Rect(vec2(x-0.18,y), -.05, .05, -.0, .3, -0.7, .003);\n    mask += Rect(vec2(x-0.18,y), -.05, .05, -.3, .0, 0.7, .003);\n    \n    // Lines\n    //mask += Rect(vec2(x+.3,y), -.25, .25, -.32, -.31, 0., .003);\n    //mask += Rect(vec2(x-.3,y), -.25, .25, -.32, -.31, 0., .003);\n    \n    // set yellow color and apply mask\n\tcol = vec3(1., 1., 0.) * mask;\n   \tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}