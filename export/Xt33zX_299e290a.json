{"ver":"0.1","info":{"id":"Xt33zX","date":"1470427453","viewed":524,"name":"Worley Hyperdisk - Galaxy Globe","username":"CaliCoastReplay","description":"Yeis' Worley noise and mattdamon's hyperbolic disc translation produced an unexpectedly poignant effect. ","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["noise","worley","intestine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nfloat length2(vec2 p){\n    return dot(p,p);\n}\n\n\nfloat noise(vec2 n) {\n    return abs(1.0 - 2.0 * fract(sin(cos(dot(n, vec2(1297.98,123.14)))) * 83758.5456));\n}\n\n\nfloat worley(vec2 p) {\n    //create a huge number\n float d = 1e10;\n    //check points in nine directions\n for (int xo = -1; xo <= 1; ++xo) \n {\n  for (int yo = -1; yo <= 1; ++yo) \n  {\n   vec2 tp = floor(p) + vec2(xo, yo);\n   d = min(d, length2(p - tp - noise(tp)));\n  }\n }\n    float r = 1.18-sin(sqrt(d));\n      return r;\n}\n\nfloat worley_layered(vec2 n)\n{\n    \n    return (worley(n)*2.0 + worley(n*2.0)*3.0 + worley(n*4.0) + worley(n*8.0))/7.0 + noise(n)/80.0;\n}\n\nfloat intensity(vec2 uv)\n{\n    vec2 uv2 = uv;\n    uv.x += 0.001;\n   float w = worley_layered(uv) +\n       worley_layered(uv + iTime/8.0)/5.0;\n    return w*w*w*w*sqrt(w)*0.81;\n}\n\n//hyperbolic disc/radial distortion adapted from https://www.shadertoy.com/view/XllSWf\nvoid HyperbolicDisc(inout vec2 fragCoord) {\n    fragCoord -= iResolution.xy * 0.5;\n    fragCoord /= iResolution.x;\n    float r = length(fragCoord);\n    vec2 d = fragCoord / r *.8 ;\n    fragCoord = d / atanh(r * (2.5 )) / 2.0;\n    fragCoord *= iResolution.x;\n    fragCoord += iResolution.xy *0.5;\n    fragCoord *= 0.4;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    HyperbolicDisc(fragCoord);\n\tvec2 uv = fragCoord.xy / iResolution.xy;   \n    vec2 oldUV = uv;\n    uv -= iTime/18.0;\n    uv.y /= 1.7;\n    float bi = intensity(1.2 * uv );\n    bi *= bi + sin(iTime)/5.0 + .3;\n    vec3 tint = vec3(0.25, 0.47, 0.97);\n    vec3 color = tint * bi;\n    vec3 lowrangeTint = vec3(0.98, 0.8, 0.7);\n    if (bi < 0.3)\n        color *= lowrangeTint * 0.97;\n    vec3 hsv = rgb2hsv(color);\n    hsv.z *= 1.2;\n    hsv.z -= hsv.y/7.0;\n    hsv.z += oldUV.x/3.5;\n    hsv.z += 0.4;\n    hsv.z *= hsv.z * hsv.z;\n    hsv.z /= 3.7;\n    color = hsv2rgb(hsv);\n    \n\tfragColor = ( vec4(color, 1.0) );\n\n}","name":"Image","description":"","type":"image"}]}