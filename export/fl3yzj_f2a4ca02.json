{"ver":"0.1","info":{"id":"fl3yzj","date":"1660081607","viewed":69,"name":"remap image5","username":"Akanoa","description":"a simple image remap","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noob"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 spriteSize = vec2(36.0, 24.0);\n\nconst vec2 spriteOffset = vec2(1.0, 4.0);\n\nconst vec2 spriteSpacing = vec2(4.0, 0.0);\n\nconst int columns  = 6;\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int current_frame = int(iTime*4.);\n    \n    \n    vec2 cat_pos = vec2(50. * iTime, 150);\n    \n    cat_pos = vec2(int(cat_pos.x) % int(iResolution.x), int(cat_pos.y) % int(iResolution.y));\n    \n\n    vec2 cat_size = vec2(400., 200.);\n    \n    vec2 delta = cat_pos / iResolution.xy; \n    \n\n    vec3 col = vec3(1., 0.5, 0);\n    \n    \n    //  (fg.x < cp.x + cs.x or fg.x + %iRes.x < cp.x+xs.x)\n    \n    if (   ((fragCoord.x > cat_pos.x) || (fragCoord.x + iResolution.x < cat_pos.x)) \n        && ((fragCoord.x < cat_pos.x + cat_size.x) || (fragCoord.x + iResolution.x < cat_pos.x + cat_size.x))\n        && ((fragCoord.y > cat_pos.y) || (fragCoord.y + iResolution.y < cat_pos.y ))\n        && ((fragCoord.y < cat_pos.y + cat_size.y) || (fragCoord.y + iResolution.y < cat_pos.y + cat_size.y))) {\n        \n        \n        // ratio sprite\n        vec2 ratio = iChannelResolution[0].xy;\n        vec2 frameCursor = vec2(float(current_frame % columns), 0.0);\n\n        vec2 offset = (fragCoord - cat_pos) * spriteSize / cat_size  + spriteOffset;\n        vec2 offsetSprite = (spriteSize + spriteSpacing) * frameCursor;\n\n        vec2 cat_uv = (offset + offsetSprite ) / ratio;\n        \n        col = texture(iChannel0, cat_uv).rgb;\n   }\n    \n\n    // Output to screen\n    fragColor = vec4(col, 0.0);\n}","name":"Image","description":"","type":"image"}]}