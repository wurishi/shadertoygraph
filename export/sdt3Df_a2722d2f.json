{"ver":"0.1","info":{"id":"sdt3Df","date":"1630800560","viewed":45,"name":"Project 1 - DS CC","username":"SeeingAllColor","description":"A selection of simple shaders","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["class"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float X = 0.5;\n\nfloat returnBrightness(vec3 color)\n{\n// Returns the magnitude of the vector of the color\n    float e;\n    \n    e = sqrt((((color.x)*(color.x))+((color.y)*(color.y))+((color.z)*(color.z))));\n\n    return e;\n}\n\nvec3 gradient(vec2 coord)\n{\n// Makes a Magenta and Green Gradient\n    return vec3(coord.y, (1.0f - coord.y), coord.y); \n}\n\nvec3 quadrant(vec2 coord)\n{\n// Sorts the screen into a black, cyan, yellow, and magenta quadrant\n    vec3 col;\n    if(coord.x > .5){\n        if(coord.y > .5){\n            col = vec3(1, 0, 1);\n        }\n        else{\n            col = vec3(1, 1, 0);\n        }\n    }\n    else{\n        if(coord.y > .5){\n            col = vec3(0, 1, 1);\n        }\n        else{\n            col = vec3(0, 0, 0);\n        }\n    }\n    \n    return col;\n}\n\nvec3 heatFinder(vec4 color)\n{\n// Turns an image which enough brightness into read\n    vec3 hot = color.xyz;\n    \n    if(returnBrightness(hot) < .5){\n        return hot;\n    }\n    else{\n        return vec3(1, 0, 0);\n    }\n    \n}\n\nvec3 stripes(vec3 col1, vec3 col2, vec2 coord)\n{\n// Makes stripes with col1 and col2    \n    float stripes = floor(25.0 * coord.x);\n    \n    if(mod(stripes, 2.) == 0.)\n    {\n        return col1;\n    }\n    else\n    {\n        return col2;\n    }\n    \n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Sets the Color red\n    vec3 red = vec3 (1, 0, 0);\n    \n    // Sets the Color white\n    vec3 white = vec3 (1);\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Gradient\n    vec3 col = gradient(uv.xy);\n    \n    // Quadrant\n    col = quadrant(uv.xy);\n    \n    // Heat Finder\n    col = heatFinder(texture(iChannel0, uv.xy));\n    \n    // Stripes \n    col = stripes(red, white, uv.xy);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}