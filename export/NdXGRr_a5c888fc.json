{"ver":"0.1","info":{"id":"NdXGRr","date":"1615428280","viewed":95,"name":"Tidal","username":"romeosoft","description":"Tidal Simulation.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tidal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float atan2(float y, float x)\n{\n    if(x>0.)\n        return atan(y / x);\n    else if (y>=0. && x<0.)\n        return 3.1416 + atan(y / x);\n    else if (y<0. && x<0.)\n        return -3.1416 + atan(y / x);\n    else if (y>0. && x==0.)\n        return 3.1416 / 2.;\n    else if (y<0. && x==0.)\n        return -3.1416 / 2.;\n    else   \n        return 0.;    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xx - vec2(0.5, 0.3);\n    float r = length(uv);\n    \n    float ang = atan2(-uv.y, uv.x);\n    float td = 1./ 4. * (3. * cos(2. * (ang + iTime)) + 1.);\n    if(td < 0.) td = 0.;\n    \n    vec3 col;\n    \n    if(r < 0.2)\n        col =vec3(mix(1.,0.25,  r / 0.2*r / 0.2), mix(0.3,0.2,  r / 0.2*r / 0.2), 0.0);\n    else if(r < 0.2 + td*0.01)\n        col = vec3(0., 0.2, 0.6);\n        \n        \n    if(length(uv - vec2(0.4 * cos(iTime),  0.4 * sin(iTime))) < 0.05)\n    {\n        col = vec3(0.8, 0.7, 0.0);\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}