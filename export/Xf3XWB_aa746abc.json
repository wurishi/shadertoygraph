{"ver":"0.1","info":{"id":"Xf3XWB","date":"1714361073","viewed":73,"name":"SDF capsule with axis","username":"Serret","description":"Drawing a capsule shape with a border and a central axis.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 blend_colors(vec4 front, vec4 back)\n{\n    vec3 cSrc = front.rgb;\n    float alphaSrc = front.a;\n    vec3 cDst = back.rgb;\n    float alphaDst = back.a;\n\n    vec3 cOut = cSrc * alphaSrc + cDst * alphaDst * (1.0 - alphaSrc);\n    float alphaOut = alphaSrc + alphaDst * (1.0 - alphaSrc);\n    cOut = cOut / alphaOut;\n\n    return vec4(cOut, alphaOut);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    vec4 borderColor = vec4(0.65, 0.85, 1.0, 1.0f);\n    vec4 fillColor = 0.5 * borderColor;\n    \n    float radius = 0.25;\n    \n    vec2 v1 = vec2(-0.5, 0);\n    vec2 v2 = vec2(0.5, 0);\n    \n    // distance to line segment\n    vec2 e = v2 - v1;\n    vec2 w = p - v1;\n    float we = dot(w, e);\n    vec2 b = w - e*clamp(we/dot(e,e), 0.0, 1.0);\n    float dw = length(b);\n    \n    // SDF union of capsule and line segment\n    float d = min(dw, abs(dw - radius));\n    \n    float thickness = 3.0f / iResolution.y;\n    \n    // roll the fill alpha down at the border\n    vec4 back = vec4(fillColor.rgb, fillColor.a * smoothstep(radius + thickness, radius, dw));\n    \n    // roll the border alpha down from 1 to 0 across the border thickness\n    vec4 front = vec4(borderColor.rgb, smoothstep(thickness, 0.0, d));\n    \n    vec4 col = blend_colors(front, back);\n        \n    fragColor = vec4(col.rgb * col.a, col.a);    \n}\n","name":"Image","description":"","type":"image"}]}