{"ver":"0.1","info":{"id":"XdfyDN","date":"1488162176","viewed":146,"name":"ornate artifacts of polarity","username":"jes5199","description":"These artifacts started appearing in images I was rendering back in 2012. I just figured out how to control them. How much of this is math and how much of this is the limits of the physical processor architecture?","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","cathedral","floatingpointerrors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (23.0 + pow(iTime / 5.0, 1.5)) * (fragCoord.xy / iResolution.xy - 0.5);\n    \n    float value = uv.x * uv.y;\n    float color = sin(value) * 3.0;\n    //float low = abs(color);\n    //float med = abs(color) - 1.0;\n    //float high = abs(color) - 2.0;\n    if(color > 0.0) {\n   \t  //fragColor = vec4(low, med, high,1.0);\n      fragColor = color - vec4(0,1,2,0); \n    } else {\n      //fragColor = vec4(med, med, low,1.0);\n      fragColor = -color - vec4(1,1,0,0); \n    }\n}","name":"Image","description":"","type":"image"}]}