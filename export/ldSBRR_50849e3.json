{"ver":"0.1","info":{"id":"ldSBRR","date":"1499074254","viewed":130,"name":"Rolling Shutter","username":"Alca","description":"A test shader for a rolling shutter effect. Press and hold then scrub left to right to control the frequency.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rollingshutter"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n#define TAU 6.283185307179586\n#define THIRD_TAU 2.0943951023931953\n\nfloat width, height, hw, hh;\n\nvec2 rotateVertex(vec2 coord, vec2 origin, float angle) {\n\tfloat x = coord.x - origin.x;\n\tfloat y = coord.y - origin.y;\n\tfloat heading = atan(y, x) + angle;\n\tfloat mag = sqrt(x * x + y * y);\n    vec2 result = vec2(\n\t\t\tsin(heading) * mag + origin.x,\n\t\t\tcos(heading) * mag + origin.y\n        );\n\treturn result;\n}\n\n\nbool isInRect(vec2 pos) {\n    return\tpos.x > -hw * 3.0 && pos.x < hw * 3.0 &&\n    \t\tpos.y > hh - 40.0 && pos.y < hh + 40.0;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tfragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\n    width = iResolution.x;\n    height = iResolution.y;\n\thw = width / 2.0;\n\thh = height / 2.0;\n    \n    // float freq = fragCoord.y / height * 10.0;\n    float freq = fragCoord.y / height * (iMouse.x / width * 30.0 + 2.0);\n    vec2 center = vec2(hw, hh);\n    float time = iTime * 3.0;\n    \n\tint count = 3;\n    for(int i = 0; i < count; i++) {\n        vec2 pos = rotateVertex(\n            \tfragCoord,\n                center,\n                time + freq + THIRD_TAU * float(i)\n        \t);\n\n        if(isInRect(pos)) {\n            fragColor += vec4(i == 0, i == 1, i == 2, 1.0);\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}