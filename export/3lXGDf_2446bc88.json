{"ver":"0.1","info":{"id":"3lXGDf","date":"1564720983","viewed":475,"name":"flying flag","username":"bhuwan0000","description":"flying flag ","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rect(vec2 uv, float left, float right, float up, float down, float blur)\n{\n    float l1 = smoothstep(uv.x, uv.x-blur, left);\n    float r1 = smoothstep(uv.x, uv.x+blur, right);\n    float u1 = smoothstep(uv.y, uv.y+blur, up);\n    float d1 = smoothstep(uv.y, uv.y-blur, down);\n    float result = l1*r1*u1*d1;\n    return result;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= 0.5;\n    float x = uv.x;\n    float y = uv.y;\n    float m = 0.2*sin(19.0*iTime + x*22.0);\n  \n    y = y-(m*(uv.x-0.3)/2.0);\n\n    float col = rect(vec2(x,y), -0.3, 0.3, 0.1+uv.x, -0.2, 0.01);\n\n    // Output to screen\n    fragColor = vec4(vec3(col),1.0);\n}","name":"Image","description":"","type":"image"}]}