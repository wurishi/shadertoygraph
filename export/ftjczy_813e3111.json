{"ver":"0.1","info":{"id":"ftjczy","date":"1649872884","viewed":174,"name":"Simple unbounded cut triangle","username":"mrange","description":"CC0: Simple unbounded cut triangle\n  Nothing special but another distance field can't hurt?","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// CC0: Simple unbounded cut triangle\n//  Nothing special but another distance field can't hurt?\n\nfloat cutslice(vec2 p, vec2 off) {\n  // A bit like this but unbounded\n  // https://www.shadertoy.com/view/MlycD3\n  p.x = abs(p.x);\n  off.x *= 0.5; \n\n  vec2 nn = normalize(vec2(off));\n  vec2 n  = vec2(nn.y, -nn.x);\n\n  float d0 = length(p-off);\n  float d1 = -(p.y-off.y);\n  float d2 = dot(n, p);\n  \n  bool b = p.x > off.x && (dot(nn, p)-dot(nn, off)) < 0.0;\n  \n  return b ? d0 : max(d1, d2);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 q = fragCoord/iResolution.xy;\n  vec2 p = -1. + 2. * q;\n  p.x *= iResolution.x/iResolution.y;\n  float aa = 2.0/iResolution.y;\n  \n  vec2 off = 0.8*(vec2(0.5)+0.5*sin(iTime*vec2(sqrt(0.5), 1.0)));\n  float d = cutslice(p, off);\n  vec3 col = vec3(0.1);\n  \n  col = mix(col, vec3(0.5), smoothstep(aa, -aa, d));\n  col.x += (0.5+0.5*cos(100.0*d))*0.5;\n  \n  fragColor = vec4(col, 1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}