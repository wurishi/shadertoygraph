{"ver":"0.1","info":{"id":"DdtGWj","date":"1677845391","viewed":79,"name":"Naive moving Voronoi pattern","username":"SlowMetanoia","description":"Naive moving Voronoi pattern and nothing more.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float R21(vec2 p){\n    p = fract(p*vec2(237.543,8723.456));\n    p += dot(p, p+23.534);\n    return fract(p.x*p.y);\n}\nvec2 R22 (vec2 p) {\n    float x = R21(p);\n    float y = R21(p + x);\n    return vec2(x,y);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord -.5* iResolution.xy  ) / iResolution.x;\n    \n    float cellIndex = .0;\n    float md = 2.;\n    float m;\n    for(float i=.0;i<500.;i++){\n        vec2 p = R22(vec2(i)) - .5 + sin((iTime+100.)*R22(vec2(i))/3.) *.5;\n        float d = length(uv-p);\n        if(d<md){\n            md = d;\n            cellIndex = i;\n        }\n        m = smoothstep(.0,.15,md);\n    }\n    \n    // Time varying pixel color\n    vec3 col = vec3(m);//vec3(cellIndex/500.);//vec3(m);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}