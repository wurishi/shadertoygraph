{"ver":"0.1","info":{"id":"l3lcRM","date":"1725992485","viewed":28,"name":"fake JPEG","username":"aerowave","description":"Inspired by Jam2go's \"Depth of Field, but instead of getting blurry it gets more JPEG\" video: https://youtu.be/CuNgLZiWkm8","likes":1,"published":3,"flags":2,"usePreview":0,"tags":["filter","glitch","compression","jpeg","jam2go"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CELL_SIZE 16.0\n#define COLORS 8.0\n#define CRUST_FACTOR 0.5\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    vec2 roundUV = (round(fragCoord / CELL_SIZE) * CELL_SIZE) / iResolution.xy;\n    \n    vec2 cellUV = mod((fragCoord + CELL_SIZE*0.5) / CELL_SIZE, 1.0);\n    \n    vec3 col = texture(iChannel0, roundUV).rgb;\n    \n    vec3 xDiff = \n        texture(iChannel0, roundUV + vec2(CELL_SIZE*0.5, 0) / iResolution.xy).rgb -\n        texture(iChannel0, roundUV - vec2(CELL_SIZE*0.5, 0) / iResolution.xy).rgb;\n    vec3 yDiff = \n        texture(iChannel0, roundUV + vec2(0, CELL_SIZE*0.5) / iResolution.xy).rgb -\n        texture(iChannel0, roundUV - vec2(0, CELL_SIZE*0.5) / iResolution.xy).rgb;\n    \n    vec3 reducedCol = pow(round(pow(col, vec3(0.5)) * COLORS) / COLORS, vec3(2));\n    vec3 reduceDiff = col - reducedCol;\n    col = reducedCol;\n\n    col += (mix(\n        -xDiff,\n        xDiff,\n        cellUV.x\n    ) + mix(\n        -yDiff,\n        yDiff,\n        cellUV.y\n    )) * CRUST_FACTOR;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}