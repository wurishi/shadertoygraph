{"ver":"0.1","info":{"id":"ftSfDw","date":"1652358288","viewed":99,"name":"Dithering texture (round)","username":"Soleam","description":"Test of a simple dithering texture with variable resolution","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["texture","dithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 lattice(in vec2 uv,in float size, in float fac)\n{\n    vec2 gv = fract(uv*size);\n    gv = (gv-0.5)*2.;\n    float len = length(gv);\n    float val = smoothstep(fac,fac*1.5,len);\n    return vec3(val);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = (uv-.5)*2.;\n    uv.x*=iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = lattice(uv,15.,length(uv*(1.+.2*sin(iTime))));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}