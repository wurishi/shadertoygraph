{"ver":"0.1","info":{"id":"flXGRH","date":"1621486244","viewed":96,"name":"LineVHS","username":"antoinefortin","description":"I dont really know what I am doing tbh","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rsandom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N22(vec2 p)\n{\n    vec3 a = fract(p.xyx * vec3(234.34, 323.5, 948.33));\n    a += dot(a, a+34.55);\n    return fract(vec2(a.x * a.y, a.y * a.z));\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = (2.0 * fragCoord-iResolution.xy) / iResolution.y;\n    uv *= .5;\n    float m = 0.0;\n    float t = iTime;\n    float minDist = 100.;\n    \n    \n    \n    for(float i = 0.; i < 50.; i++)\n    {\n        vec2 n = N22(vec2(i));\n        vec2 p = sin((n * t));\n        \n        float d = length(uv - p);\n        \n        m += smoothstep(.05, .03, d);\n        \n        if(d < minDist)\n        {\n            minDist = d;\n        }\n        \n    }\n    \n\n    vec2 n = N22(vec2(12. + (uv.x + abs(cos(uv.y * .056)) * .15)));\n    vec2 p = sin(n + (iTime));\n    float d = length(uv + p);\n    vec3 point1 = vec3(smoothstep(.03, .05, d));\n    \n    vec2 random2 = N22(vec2(25. + (uv.y * 0.005), 12. + (uv.y * .005)));\n    vec2 p2 = sin(random2 * (iTime));\n    float d2 = length(uv + p2);\n    vec3 point2 = vec3(smoothstep(.7, .5, d2));\n    \n    vec3 one = vec3(1.);\n    \n    //vec3 col = (point2 * point1);\n    vec3 col = one - point1;\n    col += one - point2;\n    \n    col = one - (point1 * point2);\n    col = point1 * point2;\n    \n    \n    vec3 debugShit = vec3(0.);\n    debugShit= vec3(1.) - vec3(clamp(distance(d * sin(iTime),d2 * 3. + uv.y), 0., 1.));\n    debugShit = abs(sin(debugShit) * cos(debugShit));\n    \n    // Output to screen\n    fragColor = vec4(debugShit ,1.0);\n}","name":"Image","description":"","type":"image"}]}