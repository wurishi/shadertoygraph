{"ver":"0.1","info":{"id":"WtjBRc","date":"1599502504","viewed":1951,"name":"Simple ripple shader","username":"bitbandit","description":"Very simple ripple effect.","likes":2,"published":1,"flags":0,"usePreview":1,"tags":["ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on Adrian Boeing's blog: Ripple effect in WebGL, published on February 07, 2011\n// http://adrianboeing.blogspot.com/2011/02/ripple-effect-in-webgl.html\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cp = -1.0 + 2.0 * fragCoord / iResolution.xy;\n    float cl = length(cp);\n    vec2 uv = fragCoord / iResolution.xy + (cp / cl) * cos(cl * 12.0 - iTime * 4.0) * 0.02;\n    vec3 col = texture(iChannel0, uv).xyz;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}