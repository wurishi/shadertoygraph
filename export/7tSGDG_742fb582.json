{"ver":"0.1","info":{"id":"7tSGDG","date":"1624594533","viewed":58,"name":"4 corner shader move points","username":"hive8","description":"4 corner shader move points","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n \n    //Example colors.  In practise these would be passed in\n    // as parameters\n    vec4 color0 = vec4(0.918, 0.824, 0.573, 1.0); // EAD292\n    vec4 color1 = vec4(0.494, 0.694, 0.659, 1.0); // 7EB1A8\n    vec4 color2 = vec4(0.992, 0.671, 0.537, 1.0); // FDAB89\n    vec4 color3 = vec4(0.859, 0.047, 0.212, 1.0); // DB0C36\n \n    vec2 uv = fragCoord.xy / iResolution.xy;\n \n    //Example coordinates.  In practise these would be passed in\n    // as parameters\n    vec2 P0 = vec2(0.31,0.3);\n    vec2 P1 = vec2(0.7,0.32);\n    vec2 P2 = vec2(0.28,0.71);\n    vec2 P3 = vec2(0.72,0.75);\n \n    vec2 Q = P0 - P2;\n    vec2 R = P1 - P0;\n    vec2 S = R + P2 - P3;\n    vec2 T = P0 - uv;\n \n    float u;\n    float t;\n \n    if(Q.x == 0.0, S.x == 0.0) {\n        u = -T.x/R.x;\n        t = (T.y + u*R.y) / (Q.y + u*S.y);\n    } else if(Q.y == 0.0, S.y == 0.0) {\n        u = -T.y/R.y;\n        t = (T.x + u*R.x) / (Q.x + u*S.x);\n    } else {\n        float A = S.x * R.y - R.x * S.y;\n        float B = S.x * T.y - T.x * S.y + Q.x*R.y - R.x*Q.y;\n        float C = Q.x * T.y - T.x * Q.y;\n        // Solve Au^2 + Bu + C = 0\n        if(abs(A) < 0.0001)\n            u = -C/B;\n        else\n        u = (-B+sqrt(B*B-4.0*A*C))/(2.0*A);\n        t = (T.y + u*R.y) / (Q.y + u*S.y);\n    }\n    u = clamp(u,0.0,1.0);\n    t = clamp(t,0.0,1.0);\n \n    // These two lines smooth out t and u to avoid visual 'lines' at the boundaries.  They can be removed to improve performance at the cost of graphics quality.\n    t = smoothstep(0.0, 1.0, t);\n    u = smoothstep(0.0, 1.0, u);\n \n    vec4 colorA = mix(color0,color1,u);\n    vec4 colorB = mix(color2,color3,u);\n    fragColor = mix(colorA, colorB, t);\n}","name":"Image","description":"","type":"image"}]}