{"ver":"0.1","info":{"id":"4scBRH","date":"1523993611","viewed":607,"name":"Easyp Chromatic Aberration/VHS","username":"easyp","description":"Chromatic Aberration","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["basic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define VHS 1\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float amount = sin(iTime) * 0.1;\n    \n    // uv coords\n    vec2 uv = fragCoord / iResolution.xy;\n    \n#if VHS\n    amount *= 0.3;\n    float split = 1. - fract(iTime / 2.);\n    float scanOffset = 0.01;\n    vec2 uv1 = vec2(uv.x + amount, uv.y);\n    vec2 uv2 = vec2(uv.x, uv.y + amount);\n    if (uv.y > split) {\n        uv.x += scanOffset;\n        uv1.x += scanOffset;\n        uv2.x += scanOffset;\n    }\n#else\n    // center\n    vec2 p = vec2(0.5, 0.5);\n    \n    // take the current uv and offset by variance\n    vec2 dir = normalize(p - uv);\n    // smoothstep for lens effect\n    float strength = smoothstep(0.2, 1., distance(p, uv));\n    vec2 var = amount * dir * strength;\n    \n    // add this to the uv\n    vec2 uv1 = uv + (var*0.5);\n    // add twice for channel 2\n    vec2 uv2 = uv1 + (var*0.5);\n#endif\n    \n    float r = texture(iChannel0, uv1).r;\n    float g = texture(iChannel0, uv).g;\n    float b = texture(iChannel0, uv2).b;\n   \n    fragColor = vec4(r, g, b, 1.);\n    \n    // without\n    //fragColor = texture(iChannel0, uv);\n    \n    // debug variation\n    fragColor = vec4(abs(var.x)*100., abs(var.y)*100., 0., 1.);\n}","name":"Image","description":"","type":"image"}]}