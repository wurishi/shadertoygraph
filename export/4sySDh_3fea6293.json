{"ver":"0.1","info":{"id":"4sySDh","date":"1463958860","viewed":417,"name":"Predator Thermal Vision","username":"maldicion069","description":"Simulating Predator Thermal Vision (not perfect)","likes":6,"published":1,"flags":2,"usePreview":0,"tags":["webcam","thermal","postprocesspredator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 thermal_vision(in vec3 color) {\n    vec3 colors[3];\n    colors[0] = vec3(0.0, 0.0, 1.0);\n    colors[1] = vec3(1.0, 1.0, 0.0);\n    colors[2] = vec3(1.0, 0.0, 0.0);\n    float luminance = dot(vec3(0.40, 0.38, 0.25), color);\n    if(luminance < 0.5) {\n    \tcolor = mix(colors[0], colors[1], luminance / 0.5);\n    } else {\n    \tcolor = mix(colors[1], colors[2], (luminance - 0.5) / 0.5);   \n    }\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = texture(iChannel0, uv).rgb;\n    fragColor = vec4(thermal_vision(color), 1.0);\n}","name":"Image","description":"","type":"image"}]}