{"ver":"0.1","info":{"id":"ld2yWR","date":"1491681575","viewed":312,"name":"STAD 0005","username":"tpen","description":"Entry #0005\n\nbased on http://i.imgur.com/0fDavWZ.mp4 [Clayton Shonkwiler]","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["procedural","2d","copyagif","shadereveryday"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://www.shadertoy.com/view/ld2yWR\n// based on http://i.imgur.com/0fDavWZ.mp4 [Clayton Shonkwiler]\n\n// hard lines are not preserved (yet)\n\nconst vec3 COLOR_BKG = vec3(ivec3( 69,  81, 105)) / 255.0;\nconst vec3 COLOR_0   = vec3(ivec3(186, 113, 182)) / 255.0;\nconst vec3 COLOR_1   = vec3(ivec3( 54, 194, 245)) / 255.0;\n\nconst float PATTERN_SIZE = 0.2;\nconst float PATTERN_WIDTH = 0.005;\nconst float LINE_AA = 0.001;\nconst float CIRCLE_SIZE = 0.09;\n    \nconst float PI = 3.14159265359;\n\nconst float MAX_T = 4.0;\n\nfloat aastep(float threshold, float value)\n{\n    float aaf = fwidth(value) * 0.5;\n    return smoothstep(threshold-aaf, threshold+aaf, value);\n}\n\nvec2 aastep(float threshold, vec2 value)\n{\n    vec2 aaf = fwidth(value) * 0.5;\n    return smoothstep(threshold-aaf, threshold+aaf, value);\n}\n\nfloat warpFactor(vec2 p, float t)\n{\n    float dist = length(p);\n    //dist = max(abs(p.x), abs(p.y));\n    //float quant = round(dist * 10.0 - 0.5) / 10.0;\n    \n    float factor = (t*3.0-1.0) - dist*0.5;\n    factor = smoothstep(0.0, 1.0, factor);\n    \n    return factor;\n}\n\nvec2 warp(vec2 p, float factor) \n{       \n    float a = -factor * 0.5 * PI;\n    mat2 matrix = mat2(cos(a), sin(a), -sin(a), cos(a));\n    vec2 r = matrix * p;\n\treturn r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * fragCoord.xy / iResolution.xy - vec2(1.0);\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float t = mod(iTime, MAX_T) / MAX_T;\n    \n    vec2 baseuv = uv;\n    float factor = warpFactor(uv, t);\n    uv = warp(uv, factor);\n    \n    vec2 pos = mod(uv,PATTERN_SIZE);\n    vec2 rpos = vec2(PATTERN_SIZE)-pos;\n    vec2 d = aastep(PATTERN_WIDTH,pos)*aastep(PATTERN_WIDTH,rpos);\n    \n    float c = d.x * d.y;\n    \n    vec2 upos = (fract(pos/PATTERN_SIZE + 0.5) - 0.5);\n    \n    c *= aastep(CIRCLE_SIZE, length(upos));\n     \n    float ratio = length(baseuv);\n    vec3 color = mix(COLOR_1, COLOR_0, abs(factor*2.0-1.0));\n   \tvec3 bkg = COLOR_BKG;\n        // baseuv.x>1.6 ? vec3(step(t,baseuv.y*0.5+0.5)) : COLOR_BKG;\n    vec3 cc = mix(color, bkg, c);\n    \n\tfragColor = vec4(cc, 1.0);\n}","name":"Image","description":"","type":"image"}]}