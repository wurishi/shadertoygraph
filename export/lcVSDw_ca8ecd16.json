{"ver":"0.1","info":{"id":"lcVSDw","date":"1715384906","viewed":60,"name":"bar iteration rotation test","username":"nextrix","description":":/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bars","iteration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float barRot(vec2 uv, vec2 pos, float iter, int invert) {\n    vec2 cc = uv;\n    float height = clamp(barHeight, 0., 0.5);\n    float bars = smoothstep(abs(length(cc.y)), height, 1.); // initial bars\n    \n    for(i = 0.; i < iter; i++) {\n        rot = (invert == 0) ? r2d(mix(0., i*0.1, pos.y)) : r2d(-mix(0., i*0.1, pos.y));\n        cc *= rot; bars *= mix(bars, smoothstep(abs(cc.y), height, 1.), power);\n    }\n    return bars;\n}\n\nvoid mainImage( out vec4 O, in vec2 I ) // SHITTY CODE but kinda cool\n{\n    vec2 uv = (I/R.xy) - 0.5;\n    \n    uv.x *= R.x / R.y;\n    \n    pos = (iM.z >= 1.) ? pos = vec2(iM.x/R.x, iM.y/R.y) : pos = vec2(1.,0.4);\n    \n    \n    vec3 bar1 = vec3(barRot(uv, pos, clamp(pos.x-0.25, 0., 0.3)*20., flip))\n                                        * vec3(1., 1., 1.); // color lmao\n    vec3 bar2 = vec3(barRot(uv, pos, clamp(pos.x-0.25, 0., 0.3)*20., 1)); // color lmao\n    \n    vec3 bars = mix(bar1, bar1 * bar2, vec3(mirror));\n    \n    if(bars == vec3(1., 1., 1.))\n        bars = texture(iC, // use destroy when convert to unity\n                vec2((uv.x*0.5)-0.5, uv.y-0.5)).rgb;\n    \n    if(bars == vec3(0.))\n        bars = vec3(0.); // set bar color\n    \n    // Output to screen\n    O = vec4(bars,1.0);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define R iResolution\n#define iM iMouse\n#define iC iChannel0\n\n#define no_overlap 0\n#define mirror 0\n#define flip 0\n\n#define power .1\n#define barHeight .35\n\nfloat i;\nmat2 rot;\nvec2 pos;\n\nmat2 r2d (float a)  // rotation func (no shit)\n{ \n    switch(no_overlap) {\n        case 0:\n            return mat2(cos(a), sin(a), -sin(a), cos(a));\n        case 1:\n            return mat2(cos(a), sin(a), sin(a), cos(a));\n        default:\n            return mat2(cos(a), sin(a), -sin(a), cos(a)); \n    }\n    \n}","name":"Common","description":"","type":"common"}]}