{"ver":"0.1","info":{"id":"fdyXWD","date":"1634622895","viewed":101,"name":"Manual Cubemap Shader","username":"aufheben21","description":"Manual Cubemap Shader","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["cubemap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 manualCubemap(vec3 dir)\n{\n    float maxDir = max(max(abs(dir.x), abs(dir.y)), abs(dir.z));\n    vec2 uv = vec2(0,0);\n    if(dir.x == maxDir)\n    {\n        uv = vec2(-dir.z, -dir.y) / dir.x;\n        uv = uv * vec2(0.5f, 0.5f) + vec2(0.5f, 0.5f);\n        uv.x = 1.0-uv.x;\n        return texture(iChannel0,uv);\n    }\n    else if(-dir.x == maxDir)\n    {\n        uv = vec2(dir.z, -dir.y) / -dir.x;\n        uv = uv * vec2(0.5f, 0.5f) + vec2(0.5f, 0.5f);\n        uv.x = 1.0-uv.x;\n        return texture(iChannel1,uv);\n    }\n    else if(dir.y == maxDir)\n    {\n        uv = vec2(dir.x, dir.z) / dir.y;\n        uv = uv * vec2(0.5f, 0.5f) + vec2(0.5f, 0.5f);\n        uv.x = 1.0-uv.x;\n        return texture(iChannel2,uv);\n    }\n    else if(-dir.y == maxDir)\n    {\n        uv = vec2(dir.x, -dir.z) / -dir.y;\n        uv = uv * vec2(0.5f, 0.5f) + vec2(0.5f, 0.5f);\n        uv.x =1.01-uv.x;\n        return texture(iChannel3,uv);\n    }\n    else if(dir.z == maxDir)\n    {\n        uv = vec2(dir.x, -dir.y) / dir.z;\n        uv = uv * vec2(0.5f, 0.5f) + vec2(0.5f, 0.5f);\n        uv.x = 1.0-uv.x;\n        return texture(iChannel0,uv);\n    }\n    else if(-dir.z == maxDir)\n    {\n        uv = vec2(-dir.x, -dir.y) / -dir.z;\n        uv = uv * vec2(0.5f, 0.5f) + vec2(0.5f, 0.5f);\n        uv.x = 1.0-uv.x;\n        return texture(iChannel1,uv);\n    }\n}\n\nvec3 equirectangular( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 texCoord = fragCoord.xy / iResolution.xy; \n    vec2 thetaphi = ((texCoord * 2.0) - vec2(1.0)) * vec2(3.1415926535897932384626433832795, 1.5707963267948966192313216916398); \n    vec3 rayDirection = vec3(cos(thetaphi.y) * cos(thetaphi.x), sin(thetaphi.y), cos(thetaphi.y) * sin(thetaphi.x));\n\t\n    return rayDirection;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = manualCubemap(equirectangular(fragColor,fragCoord));\n}","name":"Image","description":"","type":"image"}]}