{"ver":"0.1","info":{"id":"3lKyWw","date":"1611137505","viewed":395,"name":"Simple water 99","username":"kozura","description":"Hey this is my first shader here and one of my first shaders ever.\n\nI've tried to implement a height to normalmap function and I've created some kind waterlike distortion effect. \nYou can uncomment the debug define to see the computed normalmap.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["water","normal","disortion","heigh"],"hasliked":0,"parentid":"wlGcWm","parentname":"Fork Simple dis kozura 463"},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time \t\t\t\t0.07 * iTime\n#define normalStrength\t\t5.0\n#define normalChannel\t\tiChannel1\n#define normalSampling\t\tvec2(512,512)\n#define backgroundChannel\tiChannel0\n#define distortionStrength\t.066\n#define waterTint\t\t\tvec4(0.8, .8, 1., 1)\n#define resolution\t\t    vec2(512,512)\n#define texture2D\t\t    texture // remove this for GLSL\n\nvec4 heightToNormal(sampler2D height, vec2 samplingResolution, vec2 uv, float normalMultiplier)\n{\n    vec2 s = 1.0/samplingResolution.xy;\n    \n    float p = texture2D(height, uv).x;\n    float h1 = texture2D(height, uv + s * vec2(1,0)).x;\n    float v1 = texture2D(height, uv + s * vec2(0,1)).x;\n       \n   \tvec2 xy = (p - vec2(h1, v1)) * normalMultiplier;\n   \n    return vec4(xy + .5, 1., 1.);\n}\n\nvec4 normalMap(vec2 uv)\n{\n    return heightToNormal(normalChannel, normalSampling, uv, normalStrength);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = fragCoord.xy / resolution.xy;\n    \n    vec4 normal = normalMap(uv + time);\n    vec2 displacement = clamp((normal.xy - .5) * distortionStrength, -1., 1.);\n    vec4 background = texture2D(backgroundChannel, uv + time/6. + displacement.xy);\n    \n \n    fragColor = background * waterTint;\n}\n","name":"Image","description":"","type":"image"}]}