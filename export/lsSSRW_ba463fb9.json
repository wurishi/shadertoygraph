{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"XsXGRr","filepath":"/media/a/d96b229eeb7a08d53adfcf1ff89e54c9ffeebed193d317d1a01cc8125c0f5cca.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Created by inigo quilez - iq/2013\n// Modified by Javier Barandiaran\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\t// first texture row is frequency data\n\tfloat fft  = texture( iChannel0, vec2(uv.x,0.25) ).x; \n\t\n    // second texture row is the sound wave\n\tfloat wave = texture( iChannel0, vec2(uv.x,0.75) ).x;\n\t\n\t// convert frequency to colors\n\tvec3 col = vec3( 1.5*(1.0-fft), 4.0*fft*(1.0-fft), fft )*fft;\n\n    // add wave form on top\t\n\tcol *= 1.0 -  smoothstep( 0.0, 0.6, abs(wave - uv.y) );\n    col += 0.1*(1.0 -  smoothstep( 0.0, 0.3, abs(wave - uv.y) ));\n    col += 0.1*(1.0 -  smoothstep( 0.5, 0.1, abs(wave - uv.y) ));\n    col += 0.5*(-0.5+uv.y)*(1.0 -  smoothstep( 0.0, 0.08, abs(wave - uv.y) ));\n\t\n\t// output final color\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsSSRW","date":"1409396056","viewed":307,"name":"Spectrometer","username":"jaba","description":"Just playing with this example https://www.shadertoy.com/view/Xds3Rr# by the master Inigo Quilez.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","sound","fft","wave","reactive","music"],"hasliked":0,"parentid":"","parentname":""}}