{"ver":"0.1","info":{"id":"Mf23Dm","date":"1704572341","viewed":37,"name":"Square repeating","username":"Zarhead","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec3 palette( in float t )\n{\n\n    vec3 a = vec3(0.778, 0.500, 0.388);\n    vec3 b = vec3(0.655, 0.405, -0.471);\n    vec3 c = vec3(0.558, 1.558, -0.172);\n    vec3 d = vec3(0.000, -0.362, 0.667);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    \n    vec3 finalColour = vec3(0.0);\n    \n    for( float i = 0.0; i<3.0; i++){\n\n        uv = fract(uv * 1.5) - .5;\n\n        vec2 boxDimensions = vec2(0.5, 0.5);\n\n        float d = sdBox (uv, boxDimensions) * exp(-length(uv0));\n        vec3 colour = palette(length(uv0) + iTime*.4);\n\n        //Transformations\n        d = sin(d*8. + iTime)/8.;\n        d= abs(d);\n        d = pow(0.0075 / d, 1.2);\n\n        finalColour += colour * d;\n    }\n\n    fragColor = vec4(finalColour, 1.0);\n\n}","name":"Image","description":"","type":"image"}]}