{"ver":"0.1","info":{"id":"dltSWf","date":"1685834915","viewed":37,"name":"starring","username":"pathrik3e","description":"first ever","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(.5, .5, .5);\n    vec3 b = vec3(.5, .5, .5);\n    vec3 c = vec3(1., 1., 1.);\n    vec3 d = vec3(.150, 1.0, 1.0);\n    \n    return a+b*cos(6.2*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //normalize uv\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    //save center\n    vec2 uv0 = uv;\n    \n    //create final color\n    vec3 fCol = vec3(.0, .0, .0);\n    \n    for(float i = 0.0; i < 4.0; i++){\n        //fracture\n        uv = fract(uv * .2) -.5;\n\n        //distance from center\n        float d = length(uv);\n\n        //create color by distance from center\n        vec3 col = palette(length(uv0));\n\n        //repetition and panning \n        d = sin(d * .5 * iTime) / 5.;\n\n        //color manipulation\n        //d = abs(d);\n        d = .1/d;\n\n        //assign color\n        fCol += col * d;\n    }\n    \n    //OUTPUT\n    fragColor = vec4(fCol , 1.0);\n}","name":"Image","description":"","type":"image"}]}