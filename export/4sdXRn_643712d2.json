{"ver":"0.1","info":{"id":"4sdXRn","date":"1457367986","viewed":290,"name":"Magnectic Mouse Effect","username":"vamoss","description":"Original Work http://netgrind.tumblr.com/post/82030732540/spinbow","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["line","angle","magnectic","pointing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nOriginal Work\nhttp://netgrind.tumblr.com/post/82030732540/spinbow\n*/\n\n#define PI 3.141592653589\n#define TWO_PI 6.28318530718\n\n//  Function from IÃ±igo Quiles \n//  https://www.shadertoy.com/view/MsS3Wc\nvec3 hsb2rgb( in vec3 c ){\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),\n                             6.0)-3.0)-1.0, \n                     0.0, \n                     1.0 );\n    rgb = rgb*rgb*(3.0-2.0*rgb);\n    return c.z * mix( vec3(1.0), rgb, c.y);\n}\n\nfloat line(vec2 uv, vec2 origin, vec2 destiny, float radius){\n    destiny -= origin;\n\tfloat color = length( clamp( dot(uv-origin,destiny)/dot(destiny,destiny), 0.,1.) *destiny - uv+origin );\n    return smoothstep(color-0.05,color+0.05, radius);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy/iResolution.xy;\n    \n    //tile\n    vec2 frequency = vec2(32.0, 18.0);\n    vec2 index = floor(frequency * uv)/frequency;\n    vec2 uvTiled = fract(frequency * uv);\n\t\n    //line\n    float lineWidth = 0.15;\n    float lineLenght = 0.3;\n    vec2 origin = index;\n    vec2 dest=iMouse.xy/iResolution.xy-0.5/frequency;\n    \n    //thumbnail mouseover\n    if(iMouse.x==0.0){\n        float ratio = iResolution.y/iResolution.x;\n    \tdest.x = (cos(iTime*3.0)*0.4)*ratio+0.5;\n    \tdest.y = sin(iTime*3.0)*0.4+0.5;\n    }\n    \n    float angle = atan((dest.y-origin.y),(dest.x-origin.x));\n    \n    //line width in relation with distance\n    float distance = 1.-distance(origin, dest);\n    \n    //pulsate\n    //distance += (sin(3.0*iTime+l*20.0)+1.0)/4.0;\n    \n    lineWidth *= distance;\n    \n    //make line go to both direction around center\n    origin = vec2(cos(angle)*lineLenght,sin(angle)*lineLenght)+0.5;\n    dest = vec2(cos(angle)*-lineLenght,sin(angle)*-lineLenght)+0.5;\n    \n    //animate colors\n    //angle+=iTime*4.0;\n    \n\tvec3 color = line(uvTiled, origin, dest, lineWidth) * hsb2rgb(vec3(angle/TWO_PI,0.3,1.0));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}