{"ver":"0.1","info":{"id":"ttVfDw","date":"1614506725","viewed":56,"name":"SDF domain function","username":"FunMaster","description":"Study of repeating stuff, visualization by iq","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","domain","mod"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceFromCircle(vec2 point, float radius) {\n  float tiling = 0.05;\n  \n  point = mod(point + tiling, tiling * 2.) - tiling;\n  return length(point) - radius;\n\n}\n/*\nvoid main() {\n  vec2 uv = 2.0 * gl_FragCoord.xy / iResolution.xy - 1.0;\n  float radius = (sin(iGlobalTime * 0.25) * 0.5 + 0.5) * 0.1 + 0.05;\n  float dist = distanceFromCircle(uv, radius);\n\n  gl_FragColor = vec4(draw_distance(dist, uv), 1);\n}\n*/\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float radius = (sin(iTime * 2.) * 0.1 + 0.9) * 0.015 + 0.62;\n    \n    float d = distanceFromCircle(uv, radius);\n    \n    \n    vec3 col = vec3(1.0) - vec3(d);\n    \n    if (d > -0.595) col = vec3(0.082,0.675,0.635);\n    else if (d > -0.6) col = vec3(0.000,0.000,0.000);\n    else col = vec3(1.000,0.933,0.000);\n    \n    d = distanceFromCircle(uv + vec2(.011, -0.007), radius * 0.297);\n    if (d < -.175) col = vec3(0.); \n    if (d < -.177) col = vec3(1.); \n        d = distanceFromCircle(uv + vec2(-.011, -0.007), radius * 0.297);\n    if (d < -.175) col = vec3(0.); \n    if (d < -.177) col = vec3(1.); \n\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}