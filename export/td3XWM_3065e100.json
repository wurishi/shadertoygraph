{"ver":"0.1","info":{"id":"td3XWM","date":"1572097084","viewed":625,"name":"smoothstep graph","username":"mat44","description":"simple graph to show what smoothstep does","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["graph"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float func(float x) {\n    return smoothstep(iTime/5., 1.0, x);\n}\n\nfloat funcGrad(float x) {\n    float o = 0.01;\n    return (func(x-o) - func(x+o)) / (2.0 * o);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5*iResolution.xy)/iResolution.y;\n    \n    uv -= (iMouse.xy - 0.5*iResolution.xy)/iResolution.y;\n    \n    uv *= 2.0;\n    uv -= 0.1;\n    \n    vec3 col = vec3(1);\n    \n    float gridW = 0.1;\n    vec2 gridUv = fract(uv*10.);\n    float grid = smoothstep(1.0-gridW, 1.0, gridUv.x);\n    grid += smoothstep(gridW, 0.0, gridUv.x);\n    grid += smoothstep(1.0-gridW, 1.0, gridUv.y);\n    grid += smoothstep(gridW, 0.0, gridUv.y);\n    \n    col -= 0.1*grid;\n    \n    if (abs(uv.x) < 0.01 || abs(uv.y) < 0.01) col = vec3(1.0, 0.0, 0.0);\n    \n    float y = func(uv.x);\n    // old method, uneven thickness\n    //col -= 1.0 - smoothstep(0.01, 0.02, abs(uv.y - y));\n    // new method based off https://iquilezles.org/articles/distance\n    col -= smoothstep(0.02, 0.019, abs(uv.y - y) / sqrt(1.0 + pow(funcGrad(uv.x), 2.0)));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}