{"ver":"0.1","info":{"id":"Xf2BDm","date":"1725034262","viewed":56,"name":"carbon fiber spiral","username":"vinihg","description":"simple spiral, kind of looks like carbon fiber","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//original shader by Vin√≠cius Hirono\n\n#define t iTime\n#define res iResolution.xy\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 col = vec3(0.0);\n    float lum;\n    float zoom = t;\n\n    for (int i = 0; i < 3; i++) {\n        //normalizing and centering coordinates\n        vec2 uv = fragCoord / res;\n        uv = uv * 2.0 - 1.0;\n        uv.x *= res.x / res.y; //adjusting aspect ratio\n        //creating radial offset\n        vec2 radialOffset = vec2(sin(zoom + length(uv) * 8.0), cos(zoom + length(uv) * 8.0));\n        uv += radialOffset * 0.2;\n        //calculating luminance based on distance from center\n        lum = 0.2 / (length(mod(uv * 10.0, 1.0) - 0.5) + 0.01);\n        col[i] = lum * abs(sin(zoom + length(uv) * 5.0));\n        //incrementing zoom factor for next channel\n        zoom += 0.1;\n    }\n    //combining color components and set final fragment color\n    fragColor = vec4(col / lum, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}