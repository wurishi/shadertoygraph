{"ver":"0.1","info":{"id":"sd2GRd","date":"1617840826","viewed":77,"name":"Wednesday!","username":"xernobyl","description":"Trace a day. Wednesday.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["daily","trade"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float height(vec3 p) {\n    return sin(p.z) + cos(p.x) - 2.0;\n}\n\n\nvec3 height_normal(vec3 p) {\n    return normalize(vec3(-sin(p.x), 0.5, cos(p.z)));\n}\n\n\nvec3 pal(in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d) {\n  return a + b * cos(6.28318 * (c * t + d));\n}\n\n\nvec3 sRGB(vec3 linear)\n{\n  vec3 a = 12.92 * linear;\n  vec3 b = 1.055 * pow(linear, vec3(1.0 / 2.4)) - 0.055;\n  vec3 c = step(vec3(0.0031308), linear);\n  return mix(a, b, c);\n}\n\n\nvoid mainImage(out vec4 frag_color, in vec2 frag_coord) {\n  vec3 ray_dir = vec3(frag_coord / iResolution.xy * 2.0 - 1.0, -1.0 / 2.0);\n  ray_dir.x *= iResolution.x / iResolution.y;\n  ray_dir = normalize(ray_dir);\n  \n  ray_dir.y = -abs(ray_dir.y);\n\n  vec3 ray_origin = vec3(0.0, 5.0, -10.0 * iTime);\n  vec3 ray_pos = ray_origin;\n  \n  float total_distance = 1.0;\n  float last_distance = 1.0;\n  int sky = 1;\n  \n  const float max_dist = 100.0;\n\n  for (int iterations = 0; iterations < 256; ++iterations) {\n    float step_size = 0.0029 * exp2(total_distance);\n    total_distance += step_size;\n    \n    ray_pos = ray_origin + total_distance * ray_dir;\n\n    float y = height(ray_pos);\n    \n    if (ray_pos.y < y || -ray_pos.y > y) {\n      total_distance = total_distance * 0.5 + 0.5 * last_distance;\n      ray_pos = ray_origin + total_distance * ray_dir;\n      sky = 0;\n      break;\n    }\n    \n    if (total_distance >= max_dist) {\n      break;\n    }\n\n    last_distance = total_distance;\n  }\n  \n  \n  vec3 n = height_normal(ray_pos);\n  \n  vec3 col = pal(total_distance * .25 + iTime, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,0.5),vec3(0.8,0.90,0.30) );\n  \n  col = 2.0 * col * -dot(n, ray_dir);\n  // col *= clamp(1.0 / (total_distance - 1.0), 0.0, 1.0);\n  \n  if (sky == 1) {\n    frag_color = vec4(0.25, 0.5, 0.75, 0.0);\n  }\n  else {\n    frag_color = vec4(sRGB(col), 0.0);\n  }\n  \n  // frag_color = vec4(sRGB(vec3(1.0 - total_distance / max_dist)), 0.0);\n}\n","name":"Image","description":"","type":"image"}]}