{"ver":"0.1","info":{"id":"dtKXD3","date":"1688937250","viewed":85,"name":"#001","username":"jvincent","description":"First Shader I ever made really myself, props to kishimisu on Youtube for inspiration","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","rainbow","rotating","growshrink"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uvOrigin = (2.0*fragCoord - iResolution.xy)/iResolution.y;\n    uvOrigin = vec2(\n            uvOrigin.x * cos(iTime/8.0) - uvOrigin.y * sin(iTime/8.0),\n            uvOrigin.x * sin(iTime/8.0) + uvOrigin.y * cos(iTime/8.0)\n        );\n    vec2 uvLocal = uvOrigin;\n    vec3 finalColor = vec3(0.0, 0.0, 0.0);\n    float radialDist = length(uvOrigin);\n    \n    for(int i = 0; i < 3; i++)\n    {\n        uvLocal = fract(uvLocal * 1.5) - 0.5;\n\n\n        float s1 = abs(sin(3.14159 * (iTime - radialDist)));\n        float s2 = abs(sin(3.14159 * (iTime - radialDist - 1.0/3.0)));\n        float s3 = abs(sin(3.14159 * (iTime - radialDist - 2.0/3.0)));\n        vec3 color = vec3(s1, s2, s3);\n\n        float circle = length(uvLocal) - 0.4*abs(sin(iTime - 3.0*length(uvOrigin)));\n        circle = pow(0.03/abs(circle), 1.2);\n\n        finalColor += color * circle;\n    }\n    \n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}