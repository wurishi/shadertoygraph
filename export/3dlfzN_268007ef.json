{"ver":"0.1","info":{"id":"3dlfzN","date":"1587820976","viewed":242,"name":"rule 30 + game of life","username":"matthen","description":"rule 30 + game of life ","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["automaton"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// modified from https://www.shadertoy.com/view/XstGRf - Created by inigo quilez - iq/2016\n\n\n\nvec3 getCell2(in vec2 p) {\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    ivec2 pi = ivec2(p);\n    pi = (pi + r) % r;    \n    return texelFetch(iChannel0, pi, 0).xyz;\n}\n\nvec3 gradient(in vec3 z) {\t\n    float r = 0.9 + 2.*z.x + 0.3 * z.y + 0.1 * z.z;\n    vec3 rainbow = 0.5 + 0.5 * cos((5.5 * r + vec3(0.2, 0.45, 0.8)*6.));\n    rainbow *= smoothstep(0., 2., 2.-z.y);\n    if (z.y == 0.) {\n    \trainbow += 1.;   \n    }\n    rainbow += 0.2 * (1. - z.z);\n    return rainbow;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)  {\n    vec2 uv = fragCoord - 0.5 * iResolution.xy;\n    uv *= 0.5 * (0.2 + 0.8*smoothstep(0., 16., iTime));\n    \n    \n    vec3 col;\n    \n    \n    vec3 cell = getCell2(uv);\n    \n    \n    \n    float r = length(fract(uv) - 0.5);\n    \n //   cell *= 1. - smoothstep(0.0, 0.01, abs(r)-0.4);\n    \n    col = gradient(cell);\n    \n    fragColor = vec4(col, 1.0 );\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// modified from https://www.shadertoy.com/view/XstGRf - Created by inigo quilez - iq/2016\n\nint frameRate() {\n    return max(1, 10 - int(iTime / 2.));\n}\n\nint getCell(in ivec2 p) {\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0)) - 1;\n    p = (p + r - 1) % r + 1;\n    \n    // fetch texel\n    return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n}\n\nfloat getAge(in ivec2 p) {\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0)) - 1;\n    p = (p + r) % r;\n    \n    // fetch texel\n    return texelFetch(iChannel0, p, 0 ).y;\n}\n\n\n\nfloat getCell2(in vec2 p) {\n    ivec2 r = ivec2(textureSize(iChannel1, 0));\n    ivec2 pi = ivec2(p);\n    pi = (pi + r) % r;    \n    return texelFetch(iChannel1, pi, 0).x;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 px = ivec2( fragCoord );\n    ivec2 r = ivec2(textureSize(iChannel1, 0));\n    vec2 rf = vec2(textureSize(iChannel1, 0));\n    \n    px = ivec2(min(px.x, r.x - px.x), min(px.y, r.y - px.y));\n    \n    \n    float newCell;\n    float type = 0.;\n    \n    \n    \n    \n    vec2 px2 = vec2(px);\n    \n    px2 = vec2(min(px2.x, rf.x - px2.x), min(px2.y, rf.y - px2.y));\n    //px2 = vec2(px2.x + px2.y, px2.x - px2.y)/1.414213562;\n    px2 = abs(px2);\n    \n    if (max(float(abs(px.x)) / 2.5, float(abs(px.y))) < 18.) {    \n    \tnewCell = getCell2(vec2(px2));   \n        type = 1.;\n    }\n    else {\n        int thisCell = getCell(px);\n\n        if (iFrame % frameRate() == 0) {\n\n            ivec3 c = ivec3(1, -1, 0);\n            int numNeighbours =   (\n                getCell(px+c.yy) + getCell(px+c.zy) + getCell(px+c.xy)\n              + getCell(px+c.yz)\t\t\t\t    + getCell(px+c.xz)\n              + getCell(px+c.yx) + getCell(px+c.zx) + getCell(px+c.xx)\n            );\n\n\n            newCell = (\n                ((numNeighbours == 2) && (thisCell == 1)) || (numNeighbours == 3)\n            ) ? 1.0 : 0.0;\n        } else {\n         \tnewCell = float(thisCell);   \n        }\n    }\n     float age = getAge(px);\n    \n    if (newCell > 0.5) {\n        age = 0.;\n    } else {\n    \tage += 0.004;\n        age = min(age, 2.); \n    }\n    if (iFrame == 0) {\n        age = 2.;\n        \n    }\n    \n\t\n\tfragColor = vec4(newCell, age, type, 0.);\n    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// modified from https://www.shadertoy.com/view/XstGRf - Created by inigo quilez - iq/2016\n\n\nint frameRate() {\n    return max(1, 10 - int(iTime / 2.));\n}\n\nint getCell(in ivec2 p) {\n    // do wrapping\n    ivec2 r = ivec2(textureSize(iChannel0, 0));\n    p = (p + r) % r;\n    \n    // fetch texel\n    return (texelFetch(iChannel0, p, 0 ).x > 0.5 ) ? 1 : 0;\n}\n\n\n\nfloat hash(vec2 v) {\n    return fract(\n        sin(196.6 * v.x + 723.3 * v.y) * 128.921 + 238.6 * v.x\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 px = ivec2( fragCoord );\n        float newCell = 0.;\n    \n\n\n    int thisCell = getCell(px);\n\n    if (iFrame % frameRate() != 0) {\n        fragColor = vec4(thisCell, 0., 0., 0.);\n        return;\n    }\n\n    ivec3 c = ivec3(1, -1, 0);\n\n\n\n\n\n    if (px.y != 0) {\n        newCell = float(getCell(px + c.zy));\n    } else {\n        int left = getCell(px + c.yz);\n        int mid = getCell(px + c.zz);\n        int right = getCell(px + c.xz);\n        int val = 4 * left + 2 * mid + right;\n\n        if (1 <= val && val <= 4) {\n            newCell = 1.;\n        }\n    }\n\n\n\n    if (iFrame == 0) {\n        newCell = 0.;\n        if (px.x == 0 && px.y == 0) {\n            newCell = 1.;\n        }\n    }\n  \n    \n\t\n\tfragColor = vec4(newCell, 0., 0., 0.);\n    \n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"","name":"Common","description":"","type":"common"}]}