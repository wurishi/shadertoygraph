{"ver":"0.1","info":{"id":"ttVfWw","date":"1614500373","viewed":62,"name":"Proper staircase 0 to 1","username":"DougL_","description":"Useful if you want to treat each texel as an array item when using nearest filtering","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["filtering","nearest","lowlevel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define USE_CORRECT\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    float signal = uv.x;\n    \n    float count =4.0;\n    \n    #ifdef USE_CORRECT\n    \n    //CORRECT RANGE\n    float index = floor(signal * count) / (count-1.0);\n       \n    #else\n    //IN-CORRECT RANGE\n    float index = floor(signal * count) / count;\n    \n    #endif\n    \n    /*vec3 col = vec3(0.0,0.0,0.0);\n    if(floor(signal*count) > 0.0) {\n        col = vec3(1.0,0.0,0.0);\n    }*/\n\n    // Output to screen\n    fragColor = vec4(vec3(index),1.0);\n}","name":"Image","description":"","type":"image"}]}