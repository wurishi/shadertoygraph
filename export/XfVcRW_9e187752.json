{"ver":"0.1","info":{"id":"XfVcRW","date":"1731561237","viewed":52,"name":"starburst demo","username":"16807","description":"This is just meant to demonstrate a cheap approximation of fraunhofer diffraction for a point light source. It's meant to be simple, not necessarily physically accurate or realistic. It works by scaling the standard deviation of a gaussian by expâˆ˜cos","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sun","star","starburst","sunburst"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 screenspace = fragCoord/iResolution.xy;\n    vec2 clipspace = 2.*screenspace-1.;\n    clipspace = vec2(1.0,iResolution.y/iResolution.x)*clipspace;\n    float angle = atan(clipspace.y/clipspace.x);\n    float ray_count = 2.0*4.0; // always a multiple of 2\n    float sigma = 0.01*exp(cos(angle*ray_count))+0.4;\n    //fragColor = vec4(vec3(sigma),1);\n    fragColor = vec4(vec3(exp(-dot(clipspace,clipspace)/sigma/sigma)),1);\n}","name":"Image","description":"","type":"image"}]}