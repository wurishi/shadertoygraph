{"ver":"0.1","info":{"id":"DdVyz1","date":"1695798301","viewed":234,"name":"Star corona shader","username":"toninoni","description":"Modification of https://www.shadertoy.com/view/4lfSzS ","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["star","corona","astro","atmosphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Adapted from https://www.shadertoy.com/view/4lfSzS\n\n// mix noise for alive animation, full source\nvec4 hash4( vec4 n ) { return fract(sin(n)*1399763.5453123); }\nvec3 hash3( vec3 n ) { return fract(sin(n)*1399763.5453123); }\nvec3 hpos( vec3 n ) { return hash3(vec3(dot(n,vec3(157.0,113.0,271.0)),dot(n,vec3(271.0,157.0,113.0)),dot(n,vec3(113.0,271.0,157.0)))); }\n//vec4 hash4( vec4 n ) { return fract(n*fract(n*0.5453123)); }\n//vec4 hash4( vec4 n ) { n*=1.987654321; return fract(n*fract(n)); }\nfloat noise4q(vec4 x)\n{\n\tvec4 n3 = vec4(0,0.25,0.5,0.75);\n\tvec4 p2 = floor(x.wwww+n3);\n\tvec4 b = floor(x.xxxx+n3) + floor(x.yyyy+n3)*157.0 + floor(x.zzzz +n3)*113.0;\n\tvec4 p1 = b + fract(p2*0.00390625)*vec4(164352.0, -164352.0, 163840.0, -163840.0);\n\tp2 = b + fract((p2+1.0)*0.00390625)*vec4(164352.0, -164352.0, 163840.0, -163840.0);\n\tvec4 f1 = fract(x.xxxx+n3);\n\tvec4 f2 = fract(x.yyyy+n3);\n\tf1=f1*f1*(3.0-2.0*f1);\n\tf2=f2*f2*(3.0-2.0*f2);\n\tvec4 n1 = vec4(0,1.0,157.0,158.0);\n\tvec4 n2 = vec4(113.0,114.0,270.0,271.0);\t\n\tvec4 vs1 = mix(hash4(p1), hash4(n1.yyyy+p1), f1);\n\tvec4 vs2 = mix(hash4(n1.zzzz+p1), hash4(n1.wwww+p1), f1);\n\tvec4 vs3 = mix(hash4(p2), hash4(n1.yyyy+p2), f1);\n\tvec4 vs4 = mix(hash4(n1.zzzz+p2), hash4(n1.wwww+p2), f1);\t\n\tvs1 = mix(vs1, vs2, f2);\n\tvs3 = mix(vs3, vs4, f2);\n\tvs2 = mix(hash4(n2.xxxx+p1), hash4(n2.yyyy+p1), f1);\n\tvs4 = mix(hash4(n2.zzzz+p1), hash4(n2.wwww+p1), f1);\n\tvs2 = mix(vs2, vs4, f2);\n\tvs4 = mix(hash4(n2.xxxx+p2), hash4(n2.yyyy+p2), f1);\n\tvec4 vs5 = mix(hash4(n2.zzzz+p2), hash4(n2.wwww+p2), f1);\n\tvs4 = mix(vs4, vs5, f2);\n\tf1 = fract(x.zzzz+n3);\n\tf2 = fract(x.wwww+n3);\n\tf1=f1*f1*(3.0-2.0*f1);\n\tf2=f2*f2*(3.0-2.0*f2);\n\tvs1 = mix(vs1, vs2, f1);\n\tvs3 = mix(vs3, vs4, f1);\n\tvs1 = mix(vs1, vs3, f2);\n\tfloat r=dot(vs1,vec4(0.25));\n\t//r=r*r*(3.0-2.0*r);\n\treturn r*r*(3.0-2.0*r);\n}\n\n// glow ring\nfloat ring(vec3 ray,vec3 pos,float r,float size)\n{\n  \tfloat b = dot(ray,pos);\n  \tfloat c = dot(pos,pos) - b*b;\n   \n    float s=max(0.0,(1.0-size*abs(r-sqrt(c))));\n    \n    return s;\n}\n\n// rays of a star\nfloat ringRayNoise(vec3 ray,vec3 pos,float r,float size,mat3 mr,float anim)\n{\n  \tfloat b = dot(ray,pos);\n    vec3 pr=ray*b-pos;\n       \n    float c=length(pr);\n\n    pr*=mr;\n    \n    pr=normalize(pr);\n    \n    float s=max(0.0,(1.0-size*abs(r-c)));\n    \n    float nd=noise4q(vec4(pr*1.0,-anim+c))*2.0;\n    nd=pow(nd,2.0);\n    float n=0.4;\n    float ns=1.0;\n    if (c>r) {\n        n=noise4q(vec4(pr*10.0,-anim+c));\n        ns=noise4q(vec4(pr*50.0,-anim*2.5+c*2.0))*2.0;\n    }\n    n=n*n*nd*ns;\n    \n    return pow(s,4.0)+s*s*n;\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (-iResolution.xy + 2.0*fragCoord.xy) / iResolution.y;\n\n    float time=iTime*1.0;\n    \n\tfloat mx = iMouse.z>0.0?iMouse.x/iResolution.x*10.0:time*0.025;\n    float my = iMouse.z>0.0?iMouse.y/iResolution.y*4.0-2.0:-0.6;\n    vec2 rotate = vec2(mx,my);\n\n    vec2 sins=sin(rotate);\n    vec2 coss=cos(rotate);\n    mat3 mr=mat3(vec3(coss.x,0.0,sins.x),vec3(0.0,1.0,0.0),vec3(-sins.x,0.0,coss.x));\n    mr=mat3(vec3(1.0,0.0,0.0),vec3(0.0,coss.y,sins.y),vec3(0.0,-sins.y,coss.y))*mr;    \n    \n\tvec3 starColor = vec3(0.5, 0.6, 0.8);\n    \n    vec3 ray = normalize(vec3(p,2.0));\n    vec3 pos = vec3(0.0,0.0,3.0);\n    \n\tfragColor = vec4(0.0,0.0,0.0,1.0);\n    \n    fragColor.xyz -= vec3(ring(ray,pos,1.03,11.0))*2.0;\n    fragColor = max( vec4(0.0), fragColor );\n    \n    float s3=ringRayNoise(ray,pos,0.96,1.0,mr,time);\n    fragColor.xyz += mix(starColor, vec3(1.0,0.95,1.0),pow(s3,3.0))*s3 * 0.8;\n    \n    // Here is the core\n    fragColor.xyz = max(fragColor.xyz, pow((1.0 - length(p)) * 2.7, 3.5) * starColor);\n    \n\n    \n    fragColor = max( vec4(0.0), fragColor );\n\tfragColor = min( vec4(1.0), fragColor );\n\n}\n","name":"Image","description":"","type":"image"}]}