{"ver":"0.1","info":{"id":"lcscD4","date":"1721157475","viewed":32,"name":"Raymarched Objects","username":"Dipper98","description":"Just trying out more stuff! ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nThree Raymarched Objects.\n\nCredit to this website for the raymarching tutorial:\nhttps://inspirnathan.com/posts/47-shadertoy-tutorial-part-1\nCredit to Inigo Quilez for his 3D Primitives.\n*/\n\nconst int MAX_MARCHING_STEPS = 255;\nconst float MIN_DIST = 0.0;\nconst float MAX_DIST = 100.0;\nconst float PRECISION = 0.001;\n\nmat3 rotateX(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(1, 0, 0),\n        vec3(0, c, -s),\n        vec3(0, s, c)\n    );\n}\nmat3 rotateY(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, 0, s),\n        vec3(0, 1, 0),\n        vec3(-s, 0, c)\n    );\n}\nmat3 rotateZ(float theta) {\n    float c = cos(theta);\n    float s = sin(theta);\n    return mat3(\n        vec3(c, -s, 0),\n        vec3(s, c, 0),\n        vec3(0, 0, 1)\n    );\n}\nmat3 identity() {\n    return mat3(\n        vec3(1, 0, 0),\n        vec3(0, 1, 0),\n        vec3(0, 0, 1)\n    );\n}\n\nstruct Surface {\n    float sd; // signed distance value\n    vec3 col; // color\n};\nSurface sdSphere(vec3 p, float r, vec3 offset, vec3 col){\n  float d = length(p - offset) - r;\n  return Surface(d, col);\n}\nSurface sdRoundBox(vec3 p, vec3 b, float r, vec3 offset, vec3 col){\n  vec3 q = abs(p - offset) - b + r;\n  float d = length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0) - r;\n  return Surface(d, col);\n}\nSurface sdTorus(vec3 p, vec2 t, vec3 col, mat3 transform){\n  vec3 a = p * transform;\n  vec2 q = vec2(length(a.xz) - t.x,a.y);\n  float d = length(q)-t.y;\n  return Surface(d, col);\n}\nSurface sdFloor(vec3 p, vec3 col) {\n  float d = p.y + 1.;\n  return Surface(d, col);\n}\nSurface minWithColor(Surface obj1, Surface obj2) {\n  if (obj2.sd < obj1.sd) return obj2; // The sd component of the struct holds the \"signed distance\" value\n  return obj1;\n}\nSurface sdScene(vec3 p) {\n  Surface sphere = sdSphere(p, .7, vec3(0.0), vec3(0.749, 0, 0));\n  Surface roundBox = sdRoundBox(p, vec3(0.7), 0.2, vec3(3., 0, 0), vec3(0, 0.478, 0.749));\n  Surface torus = sdTorus(p + vec3(3., 0, 0), vec2(0.7, 0.2), vec3(0.027, 0.749, 0), rotateX(1.5));\n  vec3 floorColor = vec3(1. + 0.7*mod(floor(p.x) + floor(p.z), 2.0));\n  \n  Surface a = minWithColor(sphere, roundBox);\n  Surface a2 = minWithColor(a, torus);\n  Surface co = minWithColor(a2, sdFloor(p, floorColor));\n  return co;\n}\nSurface rayMarch(vec3 ro, vec3 rd, float start, float end) {\n  float depth = start;\n  Surface co;\n\n  for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\n    vec3 p = ro + depth * rd;\n    co = sdScene(p);\n    depth += co.sd;\n    if (co.sd < PRECISION || depth > end) break;\n  }\n\n  co.sd = depth;\n\n  return co;\n}\n\nvec3 calcNormal(in vec3 p) {\n    vec2 e = vec2(1.0, -1.0) * 0.0005;\n    return normalize(\n      e.xyy * sdScene(p + e.xyy).sd +\n      e.yyx * sdScene(p + e.yyx).sd +\n      e.yxy * sdScene(p + e.yxy).sd +\n      e.xxx * sdScene(p + e.xxx).sd);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n  vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n  vec3 col = vec3(0);\n  vec3 ro = vec3(sin(iTime) * 10., 4.5, cos(iTime) * 10.);\n  vec3 rd = normalize(vec3(uv.x, uv.y - 0.5, -1));\n  rd *= rotateY(iTime);\n\n  Surface co = rayMarch(ro, rd, MIN_DIST, MAX_DIST);\n\n  if (co.sd > MAX_DIST) {\n    col = vec3(0.835, 1, 1);\n  } else {\n    vec3 p = ro + rd * co.sd;\n    vec3 normal = calcNormal(p);\n    vec3 lightPosition = ro / 0.1;\n    vec3 lightDirection = normalize(lightPosition - p);\n\n    float dif = clamp(dot(normal, lightDirection), 0.3, 1.);\n      col = dif * co.col + vec3(0.835, 1, 1) * .2;\n  }\n\n  fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}