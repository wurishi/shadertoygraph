{"ver":"0.1","info":{"id":"mlcfWf","date":"1701671888","viewed":52,"name":"CrbLight","username":"jackyhowe","description":"crblight-jacky","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["jacky","crblight"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    \"Shield\" by @XorDev\n    \n    Inspired by @cmzw's work: witter.com/cmzw_/status/1729148918225916406\n    \n    X: X.com/XorDev/status/1730436700000649470\n    Twigl: twigl.app/?ol=true&ss=-NkYXGfK5wEl4VaUQ9zS\n*/\nvoid mainImage( out vec4 O,vec2 I)\n{\n    //Iterator, z and time\n    float i,z,t=iTime;\n    //Clear frag and loop 100 times\n    for(O*=i; i<1.; i+=.05)\n    {\n        //Resolution for scaling\n        vec2 v=iResolution.xy,\n        //Center and scale outward\n        p=(I+I-v)/v.y*i;\n        //Sphere distortion and compute z\n        p/=.6+sqrt(z=max(1.-dot(p,p),1.))*0.01;\n        //Offset for hex pattern\n        p.y+=fract(ceil(p.x=p.x/.9+t)*.1)+t*i;\n        //Mirror quadrants\n        v=abs(fract(p)-.5);\n        //Add color and fade outward\n        O+=vec4(5.5,5,9,8)/2.2e3*z/\n        //Compute hex distance\n        (abs(max(v.x*1.5+v,v+v).y-1.)+.1-i*.1);\n    }\n    //Tanh tonemap\n    O=tanh(O*O);\n}","name":"Image","description":"","type":"image"}]}