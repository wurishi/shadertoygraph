{"ver":"0.1","info":{"id":"mlBXRz","date":"1675558691","viewed":69,"name":"Voronoi by V","username":"Vazpera","description":"A voronoi shader I'm working on.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["voronoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define POINT_COUNT 32\n#define fPOINT_COUNT 32.\n\nstruct vPoint {\n    float x, y, r, g, b;\n};\n\nfloat rand(float co) { return fract(sin(co*(91.13458)));}\nfloat dist(vPoint v, float x, float y) {\n    float iX = x-v.x;\n    float iY = y-v.y;\n    return sqrt(iX*iX+iY*iY);\n}\n vPoint vPoints[32];\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(iFrame == 0) {\n       for(float i = 0.; i<fPOINT_COUNT; i++) {\n         vPoint P;\n         P.x = rand(i+1.) * iResolution.x;\n         P.y = rand(i+2.) * iResolution.y;\n         vPoints[int(i)].x = P.x;\n         vPoints[int(i)].y = P.y;\n       };\n    }\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float b = dist(vPoints[2], fragCoord.x, fragCoord.y)/100.;\n    // Time varying pixel color\n\n    // Output to screen\n    fragColor = vec4(uv,b,1.0);\n}","name":"Image","description":"","type":"image"}]}