{"ver":"0.1","info":{"id":"mtKSRK","date":"1686220975","viewed":107,"name":"Purple/monochrome fractal","username":"anti","description":"This shader stuff is really cool. Hoping to continue making cooler stuff!","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","circles","repetition","animated","monochrome","purple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n    Made with kishimisu's tutorial (very good)\n\n    Video URL: https://youtu.be/f4s1h2YETNY\n*/\n\n\nvec3 palette( in float t)\n{\n    vec3 a = vec3(0.938, 0.328, 0.718);\n    vec3 b = vec3(0.659, 0.438, 0.328);\n    vec3 c = vec3(0.388, 0.388, 0.296);\n    vec3 d = vec3(2.538, 2.478, 0.168);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (2.*fragCoord-iResolution.xy) / iResolution.y;\n    float l = length(uv);\n    vec3 finalCol = vec3(0.);\n    \n    for (float i=0.;i<1.2;i++) {\n        uv = fract(uv*1.5)-0.5;\n\n        float d = length(uv) * exp(-l);\n                    \n        d = exp(\n                0.01/(\n                        abs(\n                                sin(\n                                        8.*d+iTime\n                                   ) /8.\n                                    \n                             )\n                      )\n                )*0.9;\n\n  \n        vec3 col = palette(l-10.+iTime);\n        finalCol += col * d - 10.;\n\n    }\n\n\n    fragColor = vec4(finalCol,1.0);\n}","name":"Image","description":"","type":"image"}]}