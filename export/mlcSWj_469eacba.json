{"ver":"0.1","info":{"id":"mlcSWj","date":"1685772035","viewed":58,"name":"Shader introduction","username":"facundopri","description":"my first shader following this tutorial: https://youtu.be/f4s1h2YETNY","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["intro"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t, vec3 a, vec3 b, vec3 c, vec3 d){\n    return a+b*cos(6.28318*(c*t+d));\n}\n\nvec3 myPalette(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    return palette(t,a,b,c,d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    vec3 finalColor = vec3(0.);\n    \n    float iterations = 5.;\n    \n    for (float i = 0.; i < iterations; i++) {\n        uv = fract(uv * 1.5) - 0.5;\n    \n        float d = length(uv) * exp(-length(uv0));\n    \n        vec3 col = myPalette(length(uv0) + i*.4 + iTime * .4);\n    \n        d = sin(d * 8. + iTime)/8.;\n        d = abs(d);\n    \n        //d = step(0.02, d);\n        //d = smoothstep(0.0, 0.1, d);\n        d = pow(0.01 / d,2.);\n        \n        finalColor += col * d;\n    }\n  \n\n    //fragColor = vec4(uv.x,uv.y,0.0,1.0);\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}