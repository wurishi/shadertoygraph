{"ver":"0.1","info":{"id":"wltGWs","date":"1578017148","viewed":361,"name":"Noise Fun #1","username":"ndxbxrme","description":"a bit underwatery","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["2d","noise","radial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 rotate(in vec2 uv, in float a)\n{\n\t//uv -= .5;\n    uv *= mat2(cos(a), -sin(a),\n               sin(a), cos(a));\n    //uv += .5;\n    return uv;\n}\nfloat pn(vec3 p) {\n\t//noise function by CPU https://www.shadertoy.com/view/4sfGRH\n    vec3 i = floor(p); \n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n    vec3 f = cos((p-i)*3.141592653589793)*(-.5) + .5;  \n\ta = mix(sin(cos(a)*a), sin(cos(1.+a)*(1.+a)), f.x);\n    a.xy = mix(a.xz, a.yw, f.y);   \n\treturn mix(a.x, a.y, f.z);\n}\n\nfloat getNoise(vec2 pos, float pulse, float time) {\n\tvec3 q = vec3(pos * 2., pos.x-pos.y + time * 0.3);\n\tfloat b = (pulse * 1.6) + pn(q * 2.) + 2.8;\n\tb +=  .25 * pn(q * 4.);\n\tb +=  .25  * pn(q * 8.);\n\tb +=  .5  * pn(vec3(pos, pos.x-pos.y + time * 0.3) * 12.23);\n\tb = pow(b,0.5);\t\n\treturn b;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.y += 1.;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float r = length(uv) * 2.;\n    float f = 0.;\n    uv = rotate(uv, iTime * .1);\n    for(int j; j<10; j++)\n    {\n        uv = rotate(uv, 1.12);\n        float p = 0.0 + (getNoise(uv * 2., 0., iTime)) * .2 * abs(uv.x);\n        float a = length(uv.y);\n        f += smoothstep(p - .1, p, a) * smoothstep(p + .1, p, a);\n    }\n    f = smoothstep(.6, .9, f);\n    vec3 col = vec3(0.5, 0.5 + .2 * cos(iTime + uv.y), 1.) * (f + f * .5) * 2. - r;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}