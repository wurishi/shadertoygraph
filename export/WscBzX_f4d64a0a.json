{"ver":"0.1","info":{"id":"WscBzX","date":"1605619621","viewed":558,"name":"Flying fireflies","username":"SimpleMurad","description":"Flaying sphere in field","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["spheres"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"# define radius 0.02\n# define sphere_Counts 20.0\n\nfloat N21(vec2 p) {\n\tvec3 a = fract(vec3(p.xyx) * vec3(213.897, 653.453, 253.098));\n    a += dot(a, a.yzx + 79.76);\n    return fract((a.x + a.y) * a.z);\n}\n\nvec2 N22(vec2 p){\n    float n = N21(p);\n    return vec2(n,N21(n+p));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/(iResolution.xy /2.0)-1.0;\n\tuv.x *= iResolution.x/iResolution.y;\n    \n    vec3 pointLight;\n    for (float i=0.0; i<sphere_Counts; i+=1.0)\n    {\n        vec2 rnd = N22(vec2(i,i*2.0));\n    \tvec2 point = vec2(cos(iTime*rnd.x+i)*2.0,sin(iTime*rnd.y+i));\n    \tfloat distanceToPoint = distance(uv, point);\n    \tpointLight += vec3(radius/distanceToPoint)*vec3(sin(iTime+i)/2.5+0.7);\n    }\n    pointLight *= vec3(0.3,0.3,1.0);\n    \n    /*\n    vec3 pointLight2;\n    for (float i=60.0; i<80.0;i+=1.0)\n    {\n        vec2 rnd = N22(vec2(i,i+2.0));\n    \tvec2 point = vec2(cos(iTime*rnd.x+i)*1.5,sin(iTime*rnd.y+i));\n    \tfloat distanceToPoint = distance(uv, point);\n    \tpointLight2 += vec3(radius/distanceToPoint) * vec3(clamp(sin(iTime+i)/2.0+0.6,0.1,1.0));\n    }\n    pointLight2 *= vec3(0.5,0.8,0.5);\n   \tpointLight += pointLight2;\n    */\n    \n    fragColor = vec4(pointLight,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}