{"ver":"0.1","info":{"id":"DtBcWW","date":"1691753602","viewed":228,"name":"Bayer Matrix Generator ( 163 ch)","username":"FabriceNeyret2","description":"golfing 466 chars \"Bayer Matrix Generator\" by MartyMcFly. https://shadertoy.com/view/XtV3RG","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["dither","algorithm","short","bayer","onetweet","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// golfing 466 chars \"Bayer Matrix Generator\" by MartyMcFly. https://shadertoy.com/view/XtV3RG\n\n\n#define N 6\nfloat n = float(1<<N);  // size n x n\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    int s,i;   \n    for( ivec2 I = ivec2( n * U/iResolution.y ) ; i++ < N ; I/=2 )\n        s =  s*4 +  ( 4 - I.x%2 - I.y%2 *2 ) % 4 ;   // Bayer 2x2\n    O = vec4(s) / n/n;\n    \n    \n/* // 175 chars\n    ivec2 I = ivec2( n * U/iResolution.y) , J;\n    int s,i;   \n    for( ; i<N ; i++ )\n        J = I >> N-1-i &1,\n        s += ( 4 - J.x - 2*J.y ) % 4 << 2*i;   // Bayer 2x2\n    O = vec4(s) / n/n;\n/**/\n\n}","name":"Image","description":"","type":"image"}]}