{"ver":"0.1","info":{"id":"NlfSRr","date":"1625132027","viewed":52,"name":"learn(14)","username":"saltlemon","description":"2d\nlearn from https://www.youtube.com/channel/UCcAlTqd9zID6aNX3TzwxJXg The Art of Code","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float n21(vec2 p){\n    return fract(sin(p.x*100.+p.y*168.)*2368.);\n}\n\nfloat myLength(vec2 p,float k){\n\n    p=abs(p);\n    return pow(pow(p.x,k)+pow(p.y,k),1.0/k);\n}\nvec4 mycol(vec2 uv,vec3 linecol,float k){\n    float width=0.05;\n    vec3 col;\n    vec2 id=floor(uv);\n    vec2 gv=fract(uv);\n    float uvFlag=step(0.5,n21(id));\n    gv.x=(1.0-gv.x)*uvFlag+gv.x*(1.0-uvFlag);\n    \n    float idFlag=mod(id.x+id.y,2.0)*2.0-1.0;\n    \n    float lineMask0 = 0.;\n    vec2 gv1=gv-vec2(0.,0.);\n    vec2 gv2=gv-vec2(1.,1.);\n    gv2 = mix(gv1,gv2,step(1.0,gv.x+gv.y));\n    float flag=myLength(gv2,k);\n    float angle=atan(gv2.x,gv2.y);\n    //newUV=vec2(fract(angle/1.57+iTime*idFlag),flag);\n    float angleflag = cos(2.0*angle)*0.5+0.5;\n    float mask=step(0.5-width,flag)*step(flag,0.5+width)\n    *smoothstep(-0.3,1.0,angleflag);\n    col=linecol*mask;\n    \n\n    return vec4(col,mask);\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    //uv+=iTime*0.2;\n    uv*=3.;\n    vec4 col = mycol(uv,vec3(1,0,0),2.0);\n    vec4 col1 = mycol(uv+0.5,vec3(0,1,0),2.6);\n    \n    vec3 resultCol = col.rgb;\n    if(col.a<col1.a) resultCol = col1.rgb;\n    \n    // Output to screen\n    fragColor = vec4(resultCol,1.0);\n}","name":"Image","description":"","type":"image"}]}