{"ver":"0.1","info":{"id":"4cySWz","date":"1715011734","viewed":76,"name":"Blips","username":"motus_art","description":"A shader rewrite of my previous piece coded in p5js. Two overlaid circles animating together in a grid of random offsets.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["circles","abstract","smooth"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653589793\n\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\n\nfloat backOut(float t) {\n  float f = 1.0 - t;\n  return 1.0 - (pow(f, 3.0) - f * sin(f * PI));\n}\n\nfloat easeOutCubic(float t) {\n    return 1.0 + ((t=t-1.0)*t*t);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = (fragCoord - iResolution.xy) / iResolution.y;\n    \n    // Move the canvas\n    uv.x += iTime * 0.25;\n    uv.y -= iTime * 0.1;\n    \n    // Grid size\n    float gridSize = 6.0;\n    \n    // Grid\n\tvec2 st = uv * gridSize;\n    vec2 cell = round(st + 0.5);  \n    st = mod(st, 1.0) - 0.5;\n    \n    // Base colour\n    vec3 col = vec3(0.0);\n    \n    // Timing\n    float masterSpeed = 1.5;\n    float speed = random(cell.xy) * 0.5 + masterSpeed;\n    float timer = mod(iTime * speed + random(cell.xy) * 7.0, 3.5 * 2.0) - 3.5;\n    \n    // Outer circle\n    if (timer > 0.0) {\n        float outerPhase = backOut(clamp(timer, 0.0, 1.0));\n        float outerRadius = 0.3 * outerPhase;\n        float outerCircle = length(st) - outerRadius;\n        outerCircle = smoothstep(0.0, 0.02, outerCircle);\n        col += vec3(1.0 - outerCircle);\n    }\n    \n    // Inner circle\n    if (timer >= 1.5) {\n        float innerPhase = easeOutCubic(clamp(timer, 1.5, 2.5) - 1.5);\n        float innerRadius = 0.31 * innerPhase;\n        float innerCircle = length(st) - innerRadius;\n        innerCircle = smoothstep(0.0, 0.02, innerCircle);\n        col *= vec3(innerCircle);\n    }\n    \n    // Return colour\n\tfragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}