{"ver":"0.1","info":{"id":"7tyfWw","date":"1664593073","viewed":42,"name":"Default Shader and Circle","username":"seanim","description":"circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Playing with the default shader and circle.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;   // Time varying pixel color\n    \n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 m = iMouse.xy/iResolution.xy - vec2(0.5);\n    \n    float d = length( uv - (m) );\n    \n    float r = 0.01 * cos(2. * iTime ) * cos(uv.x*iTime/20.) * cos(uv.y*iTime/20.);\n    \n    r += 0.02 * cos(2. * iTime ) + 0.3;\n    \n    float c = smoothstep( r, r-0.2, d ) + 0.2;\n    \n    if ( c < 0.5 ) {\n    \n        c = c / ( 0.5*cos(2.*iTime) + 1. );\n    \n    }\n    \n    col = col * c;\n    \n    // Output to screen\n    fragColor = vec4( col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}