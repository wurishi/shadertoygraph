{"ver":"0.1","info":{"id":"4sjfWw","date":"1500680128","viewed":155,"name":"Hue To RGB","username":"Slyth","description":"Attempted to code a hue to rgb function. It seems to work correctly, if anyone sees any flaws feel free to correct me! Taken from the wikipedia page: https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB using the HSL formula. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hueToRGB(float h, float s, float l)\n{\n    h = h / 60.0;\n    float c = (1.0 - abs(2.0 * l - 1.0)) * s;\n    float x = c * (1.0 - abs(mod(h, 2.0) - 1.0));\n    vec3 rgb;\n    if(h <= 1.0)\n        rgb = vec3(c, x, 0.0);\n    else if(h <= 2.0)\n        rgb = vec3(x, c, 0.0);\n    else if(h <= 3.0)\n        rgb = vec3(0.0, c, x);\n    else if(h <= 4.0)\n        rgb = vec3(0.0, x, c);\n    else if(h <= 5.0)\n        rgb = vec3(x, 0.0, c);\n    else if(h <= 6.0)\n        rgb = vec3(c, 0.0, x);\n    \n    float m = l - 0.5 * c;\n        \n    return rgb + m;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float maxIter = 256.0;\n    vec2 r = (-iResolution.xy + 2.0 * fragCoord.xy) / iResolution.y;\n    vec2 z = vec2(0.0);\n    float zoom = 0.1;\n    vec2 xy = vec2(r.x, r.y);\n    vec2 c = vec2(-0.245, 0.0) + xy / (zoom * 10.0);\n    float distD = 1e20;\n    float distP = distD;\n    vec2 pointD = vec2(sin(iTime), cos(iTime));\n    vec2 pointP = vec2(pointD.x, -pointD.y);\n    float l = ((sin(iTime * 0.5) + 1.0) * 0.5) * maxIter - 1.5;\n    for(int i = 0; i >= 0; i++)\n\t{\n    \tz = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n\t\tif(z.x * z.x + z.y * z.y > maxIter * maxIter || l > maxIter) break;\n        distD = min(distD, pow(cos(abs(z.x - pointD.x) + abs(z.y - pointD.y)), 2.0));\n        distP = min(distP, pow(sin(abs(z.x - pointP.x) + abs(z.y - pointP.y)), 2.0));\n        l++;\n\t}\n    \n    //distD = pow(sqrt(distD), 0.6);\n    //distP = pow(sqrt(distP), 0.6);\n    vec3 col = hueToRGB((distD + distP) / 2.0 * 360.0, sin(iTime), 0.5); // negative S values are interesting\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}