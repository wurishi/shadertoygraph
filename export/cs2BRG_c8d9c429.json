{"ver":"0.1","info":{"id":"cs2BRG","date":"1689842038","viewed":50,"name":"corner-blur","username":"Suwu","description":"four corner blur","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["blur","corner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Falloff = 0.365;\nconst int samples = 30,\n          LOD = 2,         // gaussian done on MIPmap at scale LOD\n          sLOD = 1 << LOD; // tile size = 2^LOD\nconst float sigma = float(samples) * .25;\n\nconst float intensity = 1.f;\n\nfloat gaussian(vec2 i) {\n    return exp( -.5* dot(i/=sigma,i) ) / (  6.28 * sigma*sigma );\n}\n\nvec4 blur(sampler2D sp, vec2 U, vec2 scale) {\n    vec4 O = vec4(0);  \n    int s = samples/sLOD;\n    \n    for ( int i = 0; i < s*s; i++ ) {\n        vec2 d = vec2(i%s, i/s)*float(sLOD) - float(samples)/2.;\n        O += gaussian(d) * textureLod( sp, U + scale * d , float(LOD) );\n    }\n    \n    return O / O.a;\n}\n\nvoid mainImage(out vec4 fragColor, vec2 fragCoord) {\n    fragColor = blur( iChannel0, fragCoord/iResolution.xy, 1./iChannelResolution[0].xy );\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 coord = (uv - 0.5) * (iResolution.x/iResolution.y) * 2.0;\n    float rf = sqrt(dot(coord, coord)) * Falloff;\n    float rf2_1 = (rf * rf + 1.0) * intensity;\n    float e = 1.0 / (rf2_1 * rf2_1 * rf2_1 * rf2_1);\n    \n    vec4 src = texture(iChannel0,fragCoord/iResolution.xy);\n\tfragColor = src * e + fragColor * (1.0 - e);\n}","name":"Image","description":"","type":"image"}]}