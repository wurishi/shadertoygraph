{"ver":"0.1","info":{"id":"ld3GDH","date":"1449273214","viewed":130,"name":"Jade Gully","username":"jameswilddev","description":"This could definitely be sped up quite a lot.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["xtreme"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 spatial;\n\nvec3 chequer(vec2 uv) {\n    uv = fract(uv);\n    return uv.x > 0.5 == uv.y > 0.5 ? vec3(1.0, 1.0, 0.6): vec3(0.6, 0.6, 1.0);\n}\n\n#define PI 3.142\n\nvec2 worldUv;\nvec3 col;\n\nfloat camZ;\n\nvoid platform(float left, float right, float top, float bottom, float front, float back) {    \n    if(left < right) {\n        if(spatial.x < left || spatial.x > right) return;\n    } else {\n    \tif(spatial.x < left && spatial.x > right) return;\n    }\n    \n    float topPos = (1.0 / (spatial.y / top)) + camZ;\n    if(topPos < front) {\n        float y = spatial.y * (front - camZ);\n        if(y > bottom) return;\n        col = vec3(0.3);\n        worldUv = vec2(spatial.x * 6.0, y);\n        return;\n    }\n    if(topPos > back) return;\n    worldUv = vec2(spatial.x * 6.0, topPos);\n    col = vec3(2.0 / ((top / 3.0) + 1.0));\n}\n\nvec3 compute(vec2 coord, vec2 res, float seconds) {\n    coord -= res / 2.0;\n    float extent = min(res.x, res.y);\n    coord.y -= extent / 3.0;\n    spatial = vec2((atan(coord.x, coord.y) / PI * 2.0) + 2.0, length(coord) * 2.0 / extent);\n    seconds *= 0.25;\n    spatial.x += seconds;\n    spatial.x = mod(spatial.x, 4.0);\n    camZ = sin(PI * seconds) * 4.0 + 4.0;\n    \n    col = vec3(0.0);\n    \n    platform(3.75, 0.25, 6.0, 7.0, 5.0, 16.0);\n    \n\tplatform(0.25, 0.375, 3.0, 25.0, 7.0, 9.0);\n    \n    platform(0.25, 0.5, 6.5, 7.0, 14.0, 16.0);\n    platform(0.5, 0.75, 7.0, 7.5, 14.0, 16.0);\n    platform(0.75, 1.0, 7.5, 8.0, 14.0, 16.0);\n    platform(1.0, 1.25, 8.0, 8.5, 6.0, 16.0);\n    platform(1.25, 2.0, 6.0, 8.5, 7.5, 16.0);\n    platform(1.375, 1.625, 7.0, 7.5, 6.0, 7.5);\n    platform(1.75, 2.0, 6.0, 6.5, 6.0, 7.5);\n    platform(2.0, 2.5, 6.0, 8.5, 8.5, 16.0);\n    \n    platform(3.75, 3.8, 3.0, 6.0, 13.0, 15.0);\n    platform(3.625, 3.75, 3.0, 25.0, 13.0, 15.0);\n    \n    platform(0.25, 0.375, 3.0, 9.0, 7.0, 9.0);\n    platform(0.2, 0.25, 3.0, 6.0, 7.0, 9.0);\n    \n    platform(3.75, 3.8, 3.0, 6.0, 7.0, 9.0);\n    platform(3.625, 3.75, 3.0, 25.0, 7.0, 9.0);\n    \n    platform(1.5, 2.5, 2.0, 6.0, 10.0, 16.0);\n    platform(2.5, 2.75, 6.0, 7.0, 7.0, 16.0);\n    platform(2.5, 3.75, 6.0, 7.0, 5.0, 7.0);\n    \n    vec3 color = chequer(worldUv) * col;\n    \n    return pow(color, vec3(1.0 / 2.2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = vec4(compute(fragCoord, iResolution.xy, iTime),1.0);\n}","name":"","description":"","type":"image"}]}