{"ver":"0.1","info":{"id":"7s33Wr","date":"1629591799","viewed":65,"name":"interactive_mandelbrot","username":"aosagiheron","description":"You can scroll it with drugging your mouse.\nThe zoom level resets every 22 seconds, or you can just reset form the button.","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 complexMul(vec2 p, vec2 q)\n{\n    return vec2(p.x*q.x - p.y*q.y, q.y*p.x + p.y*q.x);\n}\n\nfloat mandelbrot(vec2 c)\n{\n    vec2 z = vec2(0,0);\n    for(int i=0; i<400; i++) {\n        z = complexMul(z,z) + c;\n        if (distance(vec2(0,0),z) > 2.0) {\n            return clamp(float(i)/32.0, 0.0, 0.625);\n        }\n    }\n    return 1.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n\n    float time = mod(iTime, 22.0);\n    float scale = 0.25 + pow(2.0, time)/16.0;\n    \n    vec2 cursorPos = texelFetch(iChannel0, ivec2(1,0), 0).zw;\n    \n    // Zoom\n    vec2 r = iResolution.xy;\n    uv -= vec2(r.x/r.y/2.0, 0.5);\n    uv *= 1.0/scale;\n    \n    // Scroll\n    uv += cursorPos;\n\n    // Output\n    fragColor = vec4(0, mandelbrot(uv), 0, 1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = mod(iTime, 22.0);\n    float scale = 0.25 + pow(2.0, time)/16.0;\n\n    vec2 mousePos = iMouse.xy/iChannelResolution[0].y;\n\n    // Write a delta mouse vector and the cursor pos(sum of delta).\n    // TODO: I don't need to write the delta actually, so get rid of it.\n    if (ivec2(fragCoord.xy) == ivec2(1,0)) {\n        if (iFrame == 0) {\n            // Initialize the cursor pos.\n            fragColor = vec4(0, 0, -1.4845825, 0);\n            \n        }else{\n            vec2 prevPos = texelFetch(iChannel0, ivec2(2,0), 0).xy;\n\n            vec2 delta = mousePos - prevPos;\n            // Prevent the cursor from jumping (Looking for a better way)\n            if (distance(vec2(0), delta) > 0.1) delta = vec2(0);\n            // The more you zoom in, the smaller the delta should be.\n            delta /= scale;\n\n            vec2 cursorPos = texelFetch(iChannel0, ivec2(1,0), 0).zw - delta;\n\n            fragColor = vec4(delta, cursorPos);\n        }\n    }\n\n    // Write current mouse position\n    if (ivec2(fragCoord.xy) == ivec2(2,0)) {\n        fragColor = vec4(mousePos, 0, 0);\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"}]}