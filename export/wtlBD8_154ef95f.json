{"ver":"0.1","info":{"id":"wtlBD8","date":"1596634299","viewed":84,"name":"gradient_area","username":"Sakurai_ken","description":"gradient_area","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 5\n\nfloat dot2( in vec2 v ) { return dot(v,v); }\nfloat sdPolygon(in vec2[N]v,in vec2 p)\n{\n  float d=dot(p-v[0],p-v[0]);\n  float s=1.;\n  for(int i=0,j=N-1;i<N;j=i,i++)\n  {\n    vec2 e=v[j]-v[i];\n    vec2 w=p-v[i];\n    // 距离矢量，由端点到点的矢量减去端点到投影点的矢量\n    vec2 b=w-e*clamp(dot(w,e)/dot(e,e),0.,1.);\n    d=min(d,dot(b,b));\n    // 还是even_odd着色, y在端点间，且叉积为正\n    bvec3 c=bvec3(p.y>=v[i].y,p.y<v[j].y,e.x*w.y>e.y*w.x);\n    if(all(c)||all(not(c)))s*=-1.;\n  }\n  return s*sqrt(d);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 p=(2.*fragCoord-iResolution.xy)/iResolution.y;\n  \n  vec2 v0=.8*cos(.40*iTime+vec2(0.,2.)+0.);\n  vec2 v1=.8*cos(.45*iTime+vec2(0.,1.50)+1.);\n  vec2 v2=.8*cos(.50*iTime+vec2(0.,3.)+2.);\n  vec2 v3=.8*cos(.55*iTime+vec2(0.,2.)+4.);\n  vec2 v4=.8*cos(.60*iTime+vec2(0.,1.)+5.);\n  \n  vec2[]poly=vec2[](v0,v1,v2,v3,v4);\n  float d=-sdPolygon(poly,p) + 0.01;\n  float i = step(abs(d), 0.01);\n  // 截取的着色函数\n  float alpha=pow(1.-clamp(d * 5.,0.,1.)-step(d,0.),2.);\n  vec3 color=  i * vec3(0.1, 0.1, 1.) + (1.-i) * vec3(0., 0., alpha);\n  \n  fragColor=vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}