{"ver":"0.1","info":{"id":"3sXBDM","date":"1601864825","viewed":56,"name":"emerald noise","username":"aberkson1","description":"Fun with noise","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noisegreen"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.141593262\n#define scale 25.0\n\nfloat random (vec2 st) \n{\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat plot(vec2 uv, float pct)\n{\n\treturn smoothstep(pct-10.0, pct, uv.y) - smoothstep(pct, pct+10.0, uv.y);   \n}\n\nfloat func(vec2 ipos)\n{\n    vec3 center = vec3(floor(0.5 * scale), floor(0.5 * scale), -1.0);\n    float dist = distance(vec3(ipos,-1.0), center);\n\treturn sin(dist * 400.0*sin(iTime / 200.0) / 2.0) - 0.2;    \n}\n\nfloat _smooth(in vec2 ipos, in vec2 uv)\n{\n    \n    float a = func(ipos);\n    float b = func(ipos + vec2(1.0, 0.0));\n    float c = func(ipos + vec2(0.0, 1.0));\n    float d = func(ipos + vec2(1.0, 1.0));\n   \n    \n    vec2 u = smoothstep(0.0, 1.0, uv );\n    \n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) +\n        \t  (d - b) * u.x * u.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n\t\n    vec2 ipos = floor(uv * scale);\n    float y = _smooth(ipos, fract(uv * scale));\n    float pct = plot(ipos, y);\n    \n\n    fragColor = vec4(vec3(0., y, 0.),1.0);\n}","name":"Image","description":"","type":"image"}]}