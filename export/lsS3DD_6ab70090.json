{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"//piecewise dragon curve by nimitz (stormoid.com) (twitter: @stormoid)\n\n//using kali's tree function from \"lonely tree\": https://www.shadertoy.com/view/Xds3R7\n\n#define tau 6.28318530718\n\nconst float maxiter=254.;\n\nvec2 rotate(in vec2 p,in float angle)\n{\n\tfloat c = cos(angle);\n\tfloat s = sin(angle);\n\treturn p*mat2(c,-s,s,c);\n}\n\nfloat tree(vec2 p)\n{\n\tint n = 0;\n\tfloat angle=tau*0.25;\n\tfloat t = iTime;\n\tfloat dtree;\n\tfloat dir = 1.;float dir2 = 1.;float dir3 = 1.;float dir4 = 1.;float dir5 = 1.;\n\tfloat dir6 = 1.;float dir7 = 1.;float dir8 = 1.;float dir9 = 1.;\n\t\n\tfor (float n=0.; n < maxiter; n++) \n\t{\t\n\t\tif (n > mod(t*30., 512.)) break;\n\t\tfloat d=length((p+vec2(.0,1.))*vec2(5./(cos(t*0.5+tau*0.5)*2.+3.),1.2));\n\t\t\n\t\tif (n<2.) dtree=d;\n\t\t\n\t\tdtree= min(dtree,d);\n\t\t\n\t\tif (mod(n,128.)==0.)\n\t\t{\n\t\t\tdir8 *= -1.;\n\t\t\tp=rotate(p,-dir8*angle);\n\t\t}\n\t\telse if (mod(n,64.)==0.)\n\t\t{\n\t\t\tdir7 *= -1.;\n\t\t\tp =rotate(p,-dir7*angle);\n\t\t}\n\t\telse if (mod(n,32.)==0.)\n\t\t{\n\t\t\tdir6 *= -1.;\n\t\t\tp =rotate(p,-dir6*angle);\n\t\t}\n\t\telse if (mod(n,16.)==0.)\n\t\t{\n\t\t\tdir5 *= -1.;\n\t\t\tp =rotate(p,-dir5*angle);\n\t\t}\n\t\telse if (mod(n,8.)==0.)\n\t\t{\n\t\t\tdir4 *= -1.;\n\t\t\tp = rotate(p,-dir4*angle);\n\t\t}\n\t\telse if (mod(n,4.)==0.)\n\t\t{\n\t\t\tdir3 *= -1.;\n\t\t\tp = rotate(p,-dir3*angle);\n\t\t}\n\t\telse if (mod(n,2.)==0.)\n\t\t{\n\t\t\tdir2 *= -1.;\n\t\t\tp = rotate(p,-dir2*angle);\n\t\t}\n\t\telse if (mod(n,1.)==0.)\n\t\t{\n\t\t\tdir *= -1.;\n\t\t\tp = rotate(p,-dir*angle);\n\t\t}\n\t\tp.y-=1.5; //move forward\n\t}\n\treturn clamp(dtree*dtree,0.,1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfloat t = iTime;\n\tvec2 p = fragCoord.xy/iResolution.xy-.5;\n\tvec2 aspect=vec2(iResolution.x/iResolution.y,1.);\n\tfloat rz = 1.-dot(p,p*.6);\n\tp.y+=.14;\n  \tp.x-= 0.22+iResolution.x*1e-4;\n\tp*=aspect;\n\tp*=24.+iResolution.x*6e-3;\n\tp = rotate(p,tau*-0.25);\n\tfloat drg = tree(p);\n\trz = mix(rz,drg,1.-drg);\n\tvec3 col = vec3(rz*0.9,rz*0.9,rz*0.75);\n\tfragColor = vec4(col,1.);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsS3DD","date":"1388189802","viewed":1577,"name":"Piecewise dragon","username":"nimitz","description":"Very few shaders around here show the dragon curve, probably because it's not all that cheap to generate, I couldn't find any information how to produce it piecewise so I had to figure it out myself, still looking for ways to optimize the code.","likes":41,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","ifs","dragon"],"hasliked":0,"parentid":"","parentname":""}}