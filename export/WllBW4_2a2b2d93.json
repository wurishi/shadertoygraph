{"ver":"0.1","info":{"id":"WllBW4","date":"1596740428","viewed":301,"name":"centered square uv circle","username":"3SvBop3F","description":"circle","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nconst float pi = 3.141592;\n    \n// lower right quadrant of circle\n// 1^2 = (y-1)^2 + (-x)^2\n//\n//     |\n//    /\n// .--\n//\nfloat arcramp(float x)\n{\n    return 1. - sqrt(\n        -(\n            pow(-x,2.)\n            - pow(1., 2.)\n        )\n    );\n}\n\n// upper left quadrant of circle\n// 1^2 = y^2 + (x-1)^2\n//\n//   -``\n//  /\n// |\n//\nfloat rarcramp(float x)\n{\n    return sqrt(\n        -(\n            pow(x-1., 2.)\n            -sqrt(1.)\n        )\n    );\n}\n\n// cos(x) adjusted to be periodic 0 to 1\n// y = (cos(x * pi * 2) / 2) + .5\n// \n// ``-       -``\n//    \\     /\n//      -..-\n//\nfloat bathtub(float x)\n{\n    return (\n        (\n            cos(x * pi * 2.)\n            / 2.\n        ) \n        + .5\n    );\n}\n\n\n// value {0...1} mapped to {-1...1}\nfloat s_p0p1_to_n1p1(float value)\n{\n    return mix(-1., 1., value);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    // compute uv\n    float max_res_dim = max(iResolution.x, iResolution.y);\n    vec2 uvsq_offset = (1.-(iResolution.xy/max_res_dim))/2.;\n\n    vec2 uvsq = (        // special case screen-is-uv-but-square-uv-space\n        gl_FragCoord.xy  // width/height\n        / max_res_dim    // of max width/height\n    ) + uvsq_offset;     // plus half the w/h margin\n\t\t\t\t\t     // is centered\n\n    vec2 uv = (          // optionally, use regular uv\n        gl_FragCoord.xy\n        / iResolution.xy\n    );\n    \n\tvec2 uvc = vec2(0.5,0.5); // center point to draw circle arround\n\n    // color expressions\n\t// shadertoy example color, to make it shinney\n    vec3 feature_color = 0.5 + 0.5*cos((iTime)+uv.xyx+vec3(0,2,4));\n\tvec3 background_color = vec3(0.10) + (vec3(0.10) * bathtub(iTime / 7.));\n\n    \n    fragColor = vec4(\n        mix(\n            feature_color, background_color,  // shade circle, or background\n            \n        \trarcramp(rarcramp(rarcramp(  // decay gradient to a thin ring\n                abs(s_p0p1_to_n1p1(  // circle gradient to two-band circle gradient\n          \t\t\t(distance(uvsq, uvc)*2.) // special case uv circle gradient, 0. center, 1. edge\n\t\t\t\t))\n        \t)))\n        ),\n        1.  // solid color (no alpha)\n    );\n}","name":"Image","description":"","type":"image"}]}