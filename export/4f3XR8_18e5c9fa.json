{"ver":"0.1","info":{"id":"4f3XR8","date":"1713534514","viewed":31,"name":"Moving Ball test xyz","username":"matheusfs2","description":"test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, vec2 offset)\n{\n    uv -= offset;\n    return 1.0 - smoothstep(0.01, 0.1, length(vec2(uv.x * iResolution.x/iResolution.y, uv.y)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    //uv.x *= iResolution.x/iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = vec3(0.0);\n    \n    float velocity = 0.4;\n    float ratioY = iResolution.y/iResolution.x;\n    vec2 offset = vec2(mix(-0.5, 0.5, mod(iTime*velocity, 1.)), mix(-0.5,0.5, mod(iTime*velocity, 1.)));\n    float circle = circle(uv, offset);\n        \n    col += vec3(circle);\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}