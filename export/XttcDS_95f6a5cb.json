{"ver":"0.1","info":{"id":"XttcDS","date":"1536426150","viewed":577,"name":"Automata Fun","username":"Ebanflo","description":"Mouse enabled. Found this strange automata amidst some old shaders.","likes":2,"published":3,"flags":32,"usePreview":0,"tags":["2d","interactive","automata","cellular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\n    fragColor.rgb =\n        0.5 + 0.5*cos(vec3(6,2,4) + 6.0*texture(iChannel0, fragCoord/iResolution.xy).rgb);\n    fragColor.rgb = fragColor.bgr;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int SCALE = 20;\n\n// not really random but close enough\nfloat rand(vec2 n)\n{\n\treturn fract(sin(dot(n, vec2(12.9898, 4.1414))) * 4358.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord -= mod(fragCoord, float(SCALE));\n    \n    if (iFrame < 60 && distance(fragCoord, iMouse.xy) < 100.0)\n    {\n        fragColor = vec4(step(.5, rand(fragCoord.xy+iTime)));\n    }\n    else\n    {\n        vec2 o = float(SCALE) / iResolution.xy;\n        vec2 uv = (fragCoord / iResolution.xy) + (o * .5);\n        \n        float accum = 0.;\n        float self = 0.;\n        for (int i = -1; i <= 1; ++i)\n        {\n            for (int j = -1; j <= 1; ++j)\n            {\n\t\t\t\tfloat s = texture(iChannel0, uv + o * vec2(i, j)).a;\n                if (i == 0 && j == 0)\n                    self = s;\n                else\n                    accum += step(0.9,s);\n            }\n        }\n        \n        fragColor = vec4(accum == 3. || (accum == 2. && self >= 1.));\n        if(fragColor.a < 1.)\n        \tfragColor += self*.996;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}