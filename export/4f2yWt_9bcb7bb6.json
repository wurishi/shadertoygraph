{"ver":"0.1","info":{"id":"4f2yWt","date":"1723160245","viewed":70,"name":"huawei logo animation","username":"jonasfrey","description":"i tried to remake the huawai harmony os logo, but i kind of failed, i think motion blur is missing on the bottom","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float f_n(\n    vec2 o_trn\n){\n    float n = length(o_trn);\n    n = abs(n-.5)/.5;\n    n = smoothstep(0.16, 0.9, n);\n    n = pow(n, 1./6.);\n    n = 1.-n;\n    return n;\n    \n}\nvec4 f_o_col(\n    vec2 o_trn_nor\n){\n\n    \n    int n_b = int(o_trn_nor.y < 0.);\n    float n_y2 = -0.62;\n    float n_y = (cos(iTime)*.5+.5)*n_y2;\n    vec2 o_2 = abs(o_trn_nor)-vec2(0.0, n_y);\n    vec2 o_trn_nor_one = vec2(1.)/iResolution.xy; \n    //float n = f_n(o_2); \n    float n = length(o_2);\n    n = abs(n-.5)/.5;\n    n = smoothstep(0.16, 0.9, n);\n    n = pow(n, 1./6.);\n    n = 1.-n;\n    if(n_b==1){\n        float n_sum = 0.;\n        vec2 o_scl_krnl = vec2(2.);\n        vec2 o_scl_krnl_half = floor(o_scl_krnl/2.);\n        for(\n            int nx= -int(o_scl_krnl_half.x);\n            nx < int(o_scl_krnl.x);\n            nx+=1\n        ){\n                for(\n                    int ny= -int(o_scl_krnl_half.y);\n                    ny < int(o_scl_krnl.y);\n                    ny+=1\n                ){\n                    vec2 o_trn_nor2 = vec2(\n                        o_trn_nor\n                        + o_trn_nor_one * vec2(nx, ny)\n                    );\n                    vec2 o_22 = abs(o_trn_nor2)-vec2(0.0, n_y);\n                    n_sum +=f_n(o_22);\n                }\n        }\n        \n        //n = n_sum / (o_scl_krnl.x*o_scl_krnl.y);\n        \n        float n2 = length(o_2);\n        n2 = abs(n2-.5)/.5;\n        n2 = smoothstep(0.01, 0.2+(o_2.y*o_2.y)*0.6, n2);\n        n2 = 1.-n2;\n        n += n2;\n    }\n    return vec4(n);\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float n_min_scl = min(iResolution.x, iResolution.y);\n    vec2 o_trn = (fragCoord.xy-iResolution.xy*.5)/ n_min_scl;\n    o_trn*=2.;\n    vec4 o = f_o_col(o_trn);\n    float n = abs(o_trn.y);\n    n = pow(n, 1./3.)*2.;\n    //n = 1.-n;\n    //if(o_trn.y>0.){n = 1.;}\n    fragColor = o;\n    //fragColor = vec4(n);\n}","name":"Image","description":"","type":"image"}]}