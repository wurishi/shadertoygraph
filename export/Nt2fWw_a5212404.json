{"ver":"0.1","info":{"id":"Nt2fWw","date":"1652293319","viewed":130,"name":"ColorI-1/2","username":"Evgeniy2030","description":"ColorI-1/2","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["colori12"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 xy = fragCoord.xy; //Получаем координаты текущего пикселя\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    xy.x = xy.x / iResolution.x; //Делим координаты на размер экрана\n    \n    xy.y = xy.y / iResolution.y;\n    // Теперь x для самого левого пикселя равен 0, а для самого правого равен 1\n\n    vec4 solidRed = vec4(1.0,0.0,0.0,1.0); //красный экран\n    \n    vec4 solidBlack = vec4(0.0,0.0,0.0,1.0); //Теперь он стал чёрным\n    \n    if(xy.x > 0.5) {  //Произвольное число, мы не знаем размер экрана! делим экран пополам(х - по вертикали, y - по горизонтали)\n    \n    //solidBlack.r = 1.0; //Присваиваем черному компоненту значение 1.0 (мах.яркость)\n    solidBlack.r = xy.x; //Присваиваем градиент\n    \n    }\n    // Output to screen\n    fragColor = solidBlack;\n}","name":"Image","description":"","type":"image"}]}