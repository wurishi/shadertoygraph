{"ver":"0.1","info":{"id":"XfycW3","date":"1732452449","viewed":92,"name":"mandala 3","username":"nayk","description":"source  https://www.shadertoy.com/view/MfccDB https://www.shadertoy.com/view/stsXDl originals https://www.shadertoy.com/view/mtyGWy","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractal","color","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R(p,a,r)mix(a*dot(p,a),p,cos(r))+sin(r)*cross(p,a)\n#define H(h)(cos((h)*6.3+vec3(0,23,21))*.5+.5)\n// cosine based palette, 4 vec3 params\nvec3 palette(in float t)\n{\n    vec3 a = vec3(0.5);\n    vec3 b = vec3(0.5);\n    vec3 c = vec3(1.0);\n    vec3 d = vec3(0.0, 0.1, 0.2);\n    \n    return a + b*cos( 6.283185*(c*t+d) );\n}\nvoid mainImage(out vec4 O, vec2 C)\n{\n    O=vec4(0);\n    \n     vec2 uv =C/iResolution.y * 2.0 - iResolution.xy/iResolution.y;\n    vec2 uv0 = uv;\n        uv*=vec2(fract(log(length(uv.xy))+iTime*.5));\n    uv.x *= iResolution.x / iResolution.y; // Correct aspect ratio\n\n    // Parameters\n    float halfLines = 5.0; // Number of radial lines\n    float time = iTime; // Time for animation\n    float spinSpeed = 0.75; // Speed of rotation\n    float numBands = 10.0;\n    float bandStep = 1.0 / numBands; // Size of each rotating section\n    float spiralFactor = 3.0; // Controls the amount of spiral\n    float groupSize = 2.5;\n    float groupOffset = 0.25;\n\n    // Compute distance and angle from center\n    float distance = length(uv);\n    float angle = atan(uv.y, uv.x);\n\n    // Add spiral effect\n    angle += distance * spiralFactor;\n\n    // Determine band index and adjust rotation\n    float bandIndex = floor(distance / bandStep);\n    float speedAdjust = mod(bandIndex, groupSize) * (groupOffset / groupSize) + 1.0; // Alternate speeds\n    float groupIndex = floor(bandIndex / groupSize);\n    speedAdjust += modf(groupIndex, groupSize) * (groupOffset / groupSize);\n    float rotation = speedAdjust * time * spinSpeed;\n\n    // Apply rotation\n    angle += rotation;\n\n    // Create line pattern\n    float linePattern = abs(sin(angle * halfLines));\n    float radialFade = smoothstep(0.0, 0.2, distance);\n    float intensity = radialFade * smoothstep(0.6, 0.9, linePattern);\n\n    vec3 finalColor = vec3(0.0,0.0,0.0);\n    float NUM_ITERATIONS = 3.0;\n    vec4 O2=O;\n    vec3 r2 = normalize(vec3(uv, 1.1 - dot(uv, uv) *4.002*cos(iTime)));\n     vec4 fragColor=O;\n    vec2 u=C;\n    vec2 R = iResolution.xy,\n         U = abs( u+u - R ) / R.y,\n         I = floor( 2.93* U* mat2(1,1,-1,1) ),   // tiles\n         S = cos(92.*U); S /= fwidth(S);  \n            S *=vec2(fract(log(length(S.xy))+iTime*.5));// strips\n             S*=r2.xy;\n             I *=vec2(fract(log(length(I.xy))+iTime*.5));\n    float s = sign( min(I.x,I.y) < 1. && max(I.x,I.y) < 3.\n                      ? S = -S, .5 - mod(I.x+I.y,2.)\n                      :            U.y - U.x+.342\n                  );\n    O2 = vec4(.5 + s* S[ s > 0. ? 0:1 ] );\n    for (float i = 0.0; i < NUM_ITERATIONS; i++) {\n    \n        uv = fract(uv*2.5+intensity)-0.5;\n\n        vec3 col = palette(length(uv0) + 0.4*iTime + 0.7*i);\n\n        float d = length(uv) * exp(-length(uv0));\n        d = sin(d * 8.0 + iTime)/8.0;\n        d = abs(d);\n        d = 0.01 / d;\n        \n        d = pow(d, 1.3);\n\n        col *= d*O2.xyz;\n        finalColor += col;\n    }\n    \n    // Output to screen\n    fragColor = vec4(finalColor, 1.0);\n    vec3 p,q,r=iResolution,\n    d=normalize(vec3((C*2.-r.xy)/r.y,1));  \n    for(float i=0.,a,s,e,g=0.;\n        ++i<70.;\n        O.xyz+=mix(vec3(0.1,.2,2.),H(g*.1),.8)*5./e/8e3\n    )\n    {\n     \n        p=g*d+intensity*r2;\n       p.z+=iTime;\n        a=50.;\n        p=mod(p-a,a*2.)-a;\n        s=2.;\n        for(int i=0;i++<8;){\n            p=.3-abs(p);\n            p.x<p.z?p=p.zyx:p;\n            p.z<p.y?p=p.xzy:p;\n            s*=e=1.7+sin(iTime*.001)*.1;\n            p=abs(p)*e-\n                vec3(\n                    5.*3.,\n                    120,\n                    8.*5.\n                 )*O2.xyz+finalColor.xyz;\n         }\n         g+=e=length(p.yzzz)/s;\n    }\n}","name":"Image","description":"","type":"image"}]}