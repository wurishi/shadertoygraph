{"ver":"0.1","info":{"id":"fdGBzt","date":"1658652537","viewed":119,"name":"Rotating Cubes (Recreation)","username":"Legonzaur","description":"Recreation of an existing shader for training","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nfloat btwn(float x, float from, float to){\n\treturn ((sign(x+from)+1.)/2.)*(sign(-x+to)+1.)/2.;\n\t}\nfloat n(float coord){\n\treturn (coord+1.)/2.;\n}\n\nfloat square(vec2 uv){\n  vec2 a = vec2(n(cos(iTime)),n(sin(iTime)));\n  vec2 b = vec2(n(cos(iTime+PI/2.)),n(sin(iTime+PI/2.)));\n  vec2 d = vec2(n(cos(iTime+PI*1.5)),n(sin(iTime+PI*1.5)));\n  vec2 ba = b-a ;\n  vec2 da = d-a ;\n  float test = btwn(dot(uv-a,ba),0.,dot(ba,ba)) * btwn(dot(uv-a,da),0.,dot(da,da)); \n  return test;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / min(iResolution.x, iResolution.y);\n    uv *= 5.;\n    uv+=vec2(step(0.,sin(iTime*2.))*0.5);\n\tuv=fract(uv);\t\n    fragColor = vec4(step(0.,sin((iTime*2.)+PI))+square(uv)*(step(0.,sin((iTime*2.)))-0.5)*2.);\n}","name":"Image","description":"","type":"image"}]}