{"ver":"0.1","info":{"id":"7lSfzD","date":"1664044398","viewed":51,"name":"FBM with GradientNoise Tileable","username":"rge15","description":"Noise pattern using Fractional Brownian Motion with gradient noise pattern.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","randomness","gradientnoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14156295358979\n\nvec2 N22( in vec2 p )\n{\n    p = 50.*fract((p+vec2(0.24342,709.23))/PI);\n    return 1. - 2.*fract(p * vec2(p.x+p.y, p.y*p.x) + vec2(0.29137,0.9348));\n}\n\nvec2 modulo( in vec2 divident, in vec2 divisor )\n{\n    vec2 diviPos = mod(divident, divisor) + divisor;\n    return mod(diviPos, divisor);\n}\n\nfloat gradientNoise( in vec2 p, in vec2 freq)\n{\n    vec2 imin = floor(p);\n    vec2 imax = ceil(p);\n    vec2 f = fract(p);\n    \n    vec2 func = f * f * ( 3. - 2. * f );\n\n    imin = modulo(imin, freq);\n    imax = modulo(imax, freq);\n\n    vec2 a = N22( imin );\n    vec2 b = N22( vec2(imax.x,imin.y) );\n    vec2 c = N22( vec2(imin.x,imax.y) );\n    vec2 d = N22( imax );\n\n    float gA = dot( a, f - vec2(0., 0.));\n    float gB = dot( b, f - vec2(1., 0.));\n    float gC = dot( c, f - vec2(0., 1.));\n    float gD = dot( d, f - vec2(1., 1.));\n\n    return gA + (gB - gA) * func.x + (gC - gA) * func.y + (gA - gB - gC + gD) * func.x * func.y;\n}\n\n\nfloat gradientFBM( in vec2 p, in float H ,in vec2 freq)\n{\n    float d = 0.;\n    int numOctaves = 6;\n    for(int i = 0; i < numOctaves; i++)\n    {\n        float f = pow(2., float(i));\n        float a = pow(f,-H);\n        d += a*gradientNoise(f*p, freq);\n    }\n\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (2. * fragCoord - iResolution.xy)/iResolution.y;\n\n    float p = 0.3 + 0.5 * gradientFBM(uv, 1., vec2(5.));\n    \n    float p2 = gradientNoise(8.*uv, vec2(8.));\n\n    // Output to screen\n    fragColor = vec4( vec3(p2) ,1.0);\n}","name":"Image","description":"","type":"image"}]}