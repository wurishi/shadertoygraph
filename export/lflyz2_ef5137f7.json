{"ver":"0.1","info":{"id":"lflyz2","date":"1721347073","viewed":43,"name":"Filter Sépia ","username":"gabrielcunha","description":"eu que fiz","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sepia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Função para converter uma cor para escala de cinza\nfloat grayscale(vec3 color) {\n    return (color.r + color.g + color.b) / 3.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Coordenadas de textura\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Carregar a imagem de Londres\n    vec3 color = texture(iChannel0, uv).rgb;\n    \n    // Converter para preto e branco usando a função grayscale\n    float gray = grayscale(color);\n    \n    // Aplicar o efeito sépia\n    vec3 sepiaColor = vec3(1.0, 0.9, 0.6);\n    vec3 sepia = gray * sepiaColor;\n    \n    // Definir a cor de saída\n    fragColor = vec4(sepia, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}