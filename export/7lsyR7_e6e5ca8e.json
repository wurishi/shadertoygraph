{"ver":"0.1","info":{"id":"7lsyR7","date":"1647726433","viewed":142,"name":"Shockwave effect","username":"yessica_sd","description":"Showckwave effect","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["wave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 focalPoint = vec2(0.5,0.5);\nfloat size = 0.2;\nfloat magnification = -0.1;\nfloat speed = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n   vec2 uv = fragCoord/iResolution.xy;\n   vec2 modifiedUV = uv - focalPoint;\n   float screenRatio = iResolution.x/iResolution.y;\n   modifiedUV.x = screenRatio * modifiedUV.x;\n   vec2 normalizedUV = normalize(modifiedUV);\n\n    \n    // Time varying pixel color\n   vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n   float edgecut = fract(iTime*speed);\n    \n   float res =  smoothstep( edgecut - size , edgecut + size,length(modifiedUV));\n   float invertedRes = 1.0 - res;\n   res = res * invertedRes;\n   \n   vec2 modifiedUVMagnified = normalizedUV * magnification;\n   vec2 resultUV = uv + res * modifiedUVMagnified;\n   \n   fragColor = texture(iChannel0, resultUV);\n    // Output to screen\n   //fragColor = vec4(res,0.0, 0.0,1.0);\n}","name":"Image","description":"","type":"image"}]}