{"ver":"0.1","info":{"id":"3lKfzm","date":"1614458933","viewed":279,"name":"3x3 Convolution Experiment","username":"oneshade","description":"A cool embossing filter with a 3x3 convolution kernel.","likes":9,"published":3,"flags":0,"usePreview":0,"tags":["imageprocessing","effect","convolution","emboss","kernel","3x3"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    fragColor = vec4(0.0);\n\n    float emb = 1.5 + 1.5 * sin(iTime);\n    mat3 kernel = mat3(emb,  0.0,  0.0,\n                       0.0,  1.0,  0.0,\n                       0.0,  0.0, -emb);\n\n    for (int i=-1; i < 2; i++) {\n        for (int j=-1; j < 2; j++) {\n            vec4 color = texture(iChannel0, (fragCoord + vec2(i, j)) / iResolution.xy);\n            float convWeight = kernel[j + 1][i + 1];\n            fragColor += color * convWeight;\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}