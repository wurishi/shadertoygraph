{"ver":"0.1","info":{"id":"dlKfzG","date":"1702237639","viewed":38,"name":"Stars for Stefy ","username":"ShaderMharum","description":"stars for Stefy","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["stars"],"hasliked":0,"parentid":"mtKfzG","parentname":"Fork Stars_for_ Shader_Mhar 377"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// from a study starting point thanks to BigWings\n\n#define NUM_LAYERS 4.\n\nmat2 Rot(float a) {\n    float s=sin(a), c=cos(a);\n    return mat2(c, -s, s, c);\n}\n\nfloat Star(vec2 uv, float flare) {\n\tfloat d = length(uv);\n    float m = .05/d;\n    \n    float rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*flare;\n    uv *= Rot(3.1415/4.);\n    rays = max(0., 1.-abs(uv.x*uv.y*1000.));\n    m += rays*.3*flare;\n    \n    m *= smoothstep(1., .2, d);\n    return m;\n}\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p+45.32);\n    return fract(p.x*p.y);\n}\n\nvec3 StarLayer(vec2 uv) {\n\tvec3 col = vec3(0);\n\t\n    vec2 gv = fract(uv)-.5;\n    vec2 id = floor(uv);\n    \n    for(int y=-1;y<=1;y++) {\n    \tfor(int x=-1;x<=1;x++) {\n            vec2 offs = vec2(x, y);\n            \n    \t\tfloat n = Hash21(id+offs); // random between 0 and 1\n            float size = fract(n*345.32);\n            \n    \t\tfloat star = Star(gv-offs-vec2(n, fract(n*34.))+.5, smoothstep(.9, 1., size)*.6);\n            \n            vec3 color = sin(vec3(.2, .3, .9)*fract(n*2345.2)*123.2)*.5+.5;\n            color = color*vec3(1,.25,1.+size)+vec3(.2, .2, .1)*2.;\n            \n            star *= sin(iTime*3.+n*6.2831)*.5+1.;\n            col += star*size*color;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 M = (iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    \n    float t = iTime*.02;\n    \n    uv += M*4.;\n    \n    uv *= Rot(t);\n    vec3 col = vec3(0);\n    \n    for(float i=0.; i<1.; i+=1./NUM_LAYERS) {\n    \tfloat depth = fract(i+t);\n        \n        float scale = mix(20., .5, depth);\n        float fade = depth*smoothstep(1., .9, depth);\n        col += StarLayer(uv*scale+i*453.2-M)*fade;\n    }\n    \n    col = pow(col, vec3(.4545));\t// gamma correction\n    \n    fragColor = vec4(col,1.0);\n    \n}\n\n\n    ","name":"Image","description":"","type":"image"}]}