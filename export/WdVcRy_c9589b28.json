{"ver":"0.1","info":{"id":"WdVcRy","date":"1603142024","viewed":78,"name":"First Shader - Planet Orbitals","username":"aaron_li9","description":"My first shader. It's supposed to look like planets orbiting the center circle.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["stuff"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(float radius, vec2 center, vec2 uv) {\n\tfloat d = distance(center, uv);\n    //return 1.0 - step(radius, d);\n    //return 1.0 - smoothstep(radius-0.002, radius+0.002, d); //no magic number\n    return 1.0 - smoothstep(radius-1./iResolution.y, radius+1./iResolution.y, d);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    \n\tfloat radius = 0.05;\n    float speed = 2.0;\n    \n    //vec2 center = vec2(.0, .0);\n    vec2 center = vec2(sin(iTime * speed) / 4.0, cos(iTime * speed) / 8.0);\n    vec2 center2 = vec2(sin(iTime * 0.7 * speed + 0.1) / 2.0, cos(iTime * 0.7 * speed + 0.1) / 4.0);    \n    vec2 center3 = vec2(sin(iTime * 0.4 * speed + 0.35) / 1.5, cos(iTime * 0.4 * speed + 0.35) / 3.0);\n        \n    float c = circle(radius, center, uv);\n    c += circle(0.075, vec2(0.0), uv);\n    c += circle(0.06, center2, uv);\n    c += circle(0.07, center3, uv);\n    \n    vec3 col = vec3(c);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}