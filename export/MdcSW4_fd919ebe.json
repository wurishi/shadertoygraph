{"ver":"0.1","info":{"id":"MdcSW4","date":"1459600421","viewed":99,"name":"my","username":"sergear","description":"2d","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EdgeColor vec4(0.2, 0.2, 0.2, 1.0)\nfloat line(vec2 p, vec2 p0, vec2 p1, float width) {\n    vec2 dir0 = p1 - p0;\n    vec2 dir1 = p - p0;\n    float h = clamp(dot(dir1, dir0)/dot(dir0, dir0), 0.0, 1.0);\n    float d = (length(dir1 - dir0 * h) - width * 0.5);\n    return d;\n}\n// Plot color\nfloat plot(vec2 uv, float pct) {\n    float width = 0.11;\n    return smoothstep(pct - width, pct, uv.y) - smoothstep(pct, pct + width, uv.y);\n}\nvec4 drawline(vec2 p, vec2 p0, vec2 p1, float width) {   \t\t\n    float d = line(p, p0, p1, width);\n    \n    float w = fwidth(d) * 1.0;\n    \n    return vec4(EdgeColor.rgb, 1.-smoothstep(-w, w, d));\n}\n\nfloat getLen(vec2 pos){\n    return length(pos * cos(iTime));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = (fragCoord.xy - iResolution.xy / 2.0) / min(iResolution.x / 22.0, iResolution.y / 16.0);\n    float time =\tiTime;\n    vec3 color;\n    float len;\n    float len2;\n    len = getLen(position);\n     len2 = length(position * sin(time));\n\n  // drawline(len, len2, len, 10);\n     // Calucurate UV coordinate\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n\n    \n    // percent from axis x position.\n    vec3 pct = vec3(uv.x);\n    \n    if(len < 2.0  ) {\n        color = vec3(1.0);\n    \n\t\n    \n    } else if(len2 < 10.0  ) {\n        color = vec3(0.0, 0.659, 0.349);\n    }\n        // Plot transition lines\n    color = mix(color, vec3(1.0, 0.0, 0.0), plot(uv, pct.r));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}