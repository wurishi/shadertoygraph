{"ver":"0.1","info":{"id":"ddcGRN","date":"1677041628","viewed":92,"name":"Rotate Triangles","username":"massv","description":"Rotate Triangles","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n\nmat2 rotate2d(float _angle){\n\treturn mat2(cos(_angle),-sin(_angle),\n\t\t\t\t\t\t\tsin(_angle),cos(_angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / min(iResolution.x, iResolution.y);\n    uv *= .7;\n\n    int N = 3;\n    const int NUM = 5;\n    float d[NUM]; \n\n    vec2 uv2;\n    vec3 col;\n    for (int i = 0; i < NUM; i++) {\n        uv2 = uv * rotate2d((iTime * 0.4 * float(i*i/3+1) + float(0)));\n        float a = atan(uv2.x,uv2.y) + PI,\n              r = PI * 2. / float(N);\n        d[i] = cos(floor(0.5 + a / r) * r - a) * length(uv);\n        col += vec3(0.0) + smoothstep(0.3, 0.42, d[i])*vec3(sin(iTime) *0.3 +0.7, \n                                                             sin(iTime+1.2) *0.2 +0.6, \n                                                             sin(iTime+1.2) *0.3 +0.8);\n    }\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}