{"ver":"0.1","info":{"id":"tlSGzG","date":"1559943251","viewed":1413,"name":"Arc (circle segment) - 2D SDF","username":"vegardno","description":"Exact arc (circle segment) SDF.","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","circle","segment","arc","exact"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// The MIT License\n// Copyright Â© 2017 Inigo Quilez\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfloat sdArc (in vec2 p, in float a0, in float a1, in float r )\n{\n    float a = mod(atan(p.y, p.x), radians(360.));\n\n    float ap = a - a0;\n    if (ap < 0.)\n        ap += radians(360.);\n    float a1p = a1 - a0;\n    if (a1p < 0.)\n        a1p += radians(360.);\n\n    // is a outside [a0, a1]?\n    // https://math.stackexchange.com/questions/1044905/simple-angle-between-two-angles-of-circle\n    if (ap >= a1p) {\n        \t// clamp angle to [a0, a1] by finding the closer one of the two\n        \t// https://gamedev.stackexchange.com/questions/4467/comparing-angles-and-working-out-the-difference\n            float da0 = abs(abs(a0 - a) - radians(180.)); \n            float da1 = abs(abs(a1 - a) - radians(180.)); \n            if (da0 > da1)\n                a = a0;\n            else\n                a = a1;\n    }\n\n    vec2 q = vec2(r * cos(a), r * sin(a));\n    return length(q - p); \n}\n\nfloat sdArc2 (in vec2 p, in float a0, in float a1, in float r )\n{\n    float a = mod(atan(p.y, p.x), radians(360.));\n\n    float ap = a - a0;\n    if (ap < 0.)\n        ap += radians(360.);\n    float a1p = a1 - a0;\n    if (a1p < 0.)\n        a1p += radians(360.);\n\n    // is a outside [a0, a1]?\n    // https://math.stackexchange.com/questions/1044905/simple-angle-between-two-angles-of-circle\n    if (ap >= a1p) {\n        // snap to the closest of the two endpoints\n        vec2 q0 = vec2(r * cos(a0), r * sin(a0));\n        vec2 q1 = vec2(r * cos(a1), r * sin(a1));\n        return min(length(p - q0), length(p - q1));\n    }\n\n    return abs(length(p) - r);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n\tfloat a0 = mod(1. * iTime, radians(360.));\n    float a1 = mod(3. * iTime, radians(360.));\n\n\tfloat d = sdArc2( p, a0, a1, .5 );\n\n    vec3 col = vec3(1.0) - sign(d)*vec3(0.1,0.4,0.7);\n\tcol *= 1.0 - exp(-2.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(140.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.02,abs(d)) );\n\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}