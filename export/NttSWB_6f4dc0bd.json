{"ver":"0.1","info":{"id":"NttSWB","date":"1639712038","viewed":48,"name":"Fork Simple Sob gchipunov 028","username":"gchipunov","description":"Learning how to use sobel filter for edge detection.\nHave made no extensions at all, so it is very sensitive to noise.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["edgedetection","sobelfilter"],"hasliked":0,"parentid":"MlBSWW","parentname":"Simple Sobel filter - webcamera"},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 col;\n    \n    /*** Sobel kernels ***/\n    // Note: GLSL's mat3 is COLUMN-major ->  mat3[col][row]\n    mat3 sobelX = mat3(-1.0, -2.0, -1.0,\n                       0.0,  0.0, 0.0,\n                       1.0,  2.0,  1.0);\n    mat3 sobelY = mat3(-1.0,  0.0,  1.0,\n                       -2.0,  0.0, 2.0,\n                       -1.0,  0.0,  1.0);  \n    \n    float sumX = 0.0;\t// x-axis change\n    float sumY = 0.0;\t// y-axis change\n    \n    for(int i = -1; i <= 1; i++)\n    {\n        for(int j = -1; j <= 1; j++)\n        {\n            // texture coordinates should be between 0.0 and 1.0\n            float x = (fragCoord.x + float(i))/iResolution.x;\t\n    \t\tfloat y =  (fragCoord.y + float(j))/iResolution.y;\n            \n            // Convolve kernels with image\n            sumX += length(texture( iChannel0, vec2(x, y) ).xyz) * float(sobelX[1+i][1+j]);\n            sumY += length(texture( iChannel0, vec2(x, y) ).xyz) * float(sobelY[1+i][1+j]);\n        }\n    }\n    \n    float g = abs(sumX) + abs(sumY);\n    //g = sqrt((sumX*sumX) + (sumY*sumY));\n    \n    if(g > 0.95)\n        {      \n        col = col * 0.0;\n      //   col = vec4(0.0,0.0,0.0,0.70);\n        col = vec4(0.0,0.0,0.0,1.00);\n    //  col =  texture( iChannel0, vec2(uv.x, uv.y ));\n       }\n    else    if(g > 0.75)\n        {      \n        col = col * 0.0;\n         col = vec4(0.0,0.0,0.0,0.70);\n      //   col = vec4(0.0,0.0,0.0,1.00);\n    //  col =  texture( iChannel0, vec2(uv.x, uv.y ));\n       }\n    else\n    {\n    \n      // col = vec4(1.0,1.0,1.0,0.70);\n      col =  texture( iChannel0, vec2(uv.x, uv.y ));\n    }\n\tfragColor.xyzw = col;\n}","name":"Image","description":"","type":"image"}]}