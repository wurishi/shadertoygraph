{"ver":"0.1","info":{"id":"dlSXDG","date":"1676499568","viewed":125,"name":"Mirror dimension","username":"creikey","description":"Trying to be mirror dimension from doctor strange, I think needs more interesting line pattern","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["mirror","dimension"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid spinline(vec2 uv, vec2 line_dir, vec2 line_origin, out float spinning_line, out float below_spinning_line)\n{\n    vec2 line_normal = vec2(-line_dir.y, line_dir.x);\n    spinning_line = clamp(1.0 - abs(dot(uv - line_origin, line_dir))*100.0, 0.0, 1.0);\n    vec2 from_origin = uv - line_origin;\n    below_spinning_line = clamp(dot(line_normal, vec2(-from_origin.y, from_origin.x))*100.0, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    \n    //float line_height = uv.x*sin(iTime*3.0) + 0.5;\n    /*if(uv.y > uv.x*sin(iTime*3.0 + cos(iTime*2.0)) + 0.5) uv += vec2(0.05, 0.03);\n    if(uv.y > (uv.x + 0.5)*sin(iTime*0.5 + 3.0) + 0.5) uv += vec2(-0.02, 0.03);\n    if(uv.y > (uv.x + 0.9)*sin(iTime*0.7 + 2.0) + 0.4) uv += vec2(0.02, -0.03);\n    if(uv.y > (uv.x + 1.5)*sin(-iTime*0.9 + 2.0) + 0.4) uv += vec2(0.07, -0.07);\n    */\n    //if(uv.x > 0.5) uv.x *= -1.0;\n    \n    \n    // spinning line distance function\n    \n    float below_spinning_line;\n    float spinning_line;\n    \n    spinline(uv, vec2(cos(iTime), sin(iTime)), vec2(0.3, 0.4),spinning_line,below_spinning_line);\n    uv += vec2(0.01, 0.01)*spinning_line;\n    uv += vec2(-0.06, 0.01+sin(iTime*0.2)*0.05)*below_spinning_line;\n    \n    spinline(uv, vec2(cos(iTime*0.3+0.5), sin(iTime*0.3+0.5)), vec2(0.5, 0.6),spinning_line,below_spinning_line);\n    uv += vec2(0.01, 0.01)*spinning_line;\n    uv += vec2(-0.015, 0.02+sin(iTime*0.1)*0.04)*below_spinning_line;\n    \n    spinline(uv, vec2(cos(-iTime*0.1+0.5), sin(-iTime*0.1+0.5)), vec2(0.2, 0.8),spinning_line,below_spinning_line);\n    uv += vec2(0.01, 0.01)*spinning_line;\n    uv += vec2(-0.015, 0.02+sin(iTime*0.1 + 0.5)*0.04)*below_spinning_line;\n    \n    spinline(uv, vec2(cos(-iTime*0.4+0.5), sin(-iTime*0.4+0.5)), vec2(0.9, 0.3),spinning_line,below_spinning_line);\n    uv += vec2(0.01, 0.01)*spinning_line;\n    uv += vec2(-0.015, 0.02+cos(iTime*0.1 + 0.5)*0.04)*below_spinning_line;\n    \n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    \n    //col = vec3(spinning_line);\n    //col = vec3(below_spinning_line);\n    //col = vec3(below_spinning_line + spinning_line);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}