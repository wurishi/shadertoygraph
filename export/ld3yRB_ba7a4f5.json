{"ver":"0.1","info":{"id":"ld3yRB","date":"1519323311","viewed":1002,"name":"textureGrad is not anisotropic","username":"FabriceNeyret2","description":"By default, no anisotropy shows up. So disappointing.  \nBut If I set nvidia panel to override application prefs and force anisotropic filtering, then it works. \n\nMouse controls dFdx.x and dFdy,y.   Or auto-demo: click bottom-left corner.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["texture","glsl","anisotropic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         M = ( 2.*iMouse.xy - R ) / R.y,\n         U = ( 2.*u - R ) / R.y;\n    \n    if ( length(iMouse.xy)<10. )               // auto-demo\n        M =  .9 * vec2( cos(iTime), sin(iTime) ) / (1.+.1*cos(4.*iTime));\n    \n    float k = 50./256.;\n    O = textureGrad(iChannel0, U/2., vec2(k*M.x,0), vec2(0,k*M.y) );\n    O = .5 + ( O -.5 ) *(1.+length(M)*100.);   // restore contrast\n    \n    O = .5 + .5 * sign(O-.5)*sqrt(abs(O-.5));  // amplify crests and valleys\n    //O *= step(.5,O);\n    \n    u -= .5+R/2.; O += float( u.x*u.y == 0. ); // mouse axis guides\n    O += smoothstep(2./R.y,0.,length(U-M)-.03);\n}","name":"Image","description":"","type":"image"}]}