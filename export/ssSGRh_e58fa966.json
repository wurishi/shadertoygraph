{"ver":"0.1","info":{"id":"ssSGRh","date":"1616918417","viewed":66,"name":"regularPerlinNoise","username":"lonelywaiting","description":"regular Perlin Noise","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 gradientHash(in vec2 p)\n{\n    const vec2 k = vec2( 0.3183099, 0.3678794 );\n    p = p*k + k.yx;\n    return -1.0 + 2.0*fract( 16.0 * k*fract( p.x*p.y*(p.x+p.y)) );\n}\n\n// result range: 【-1， 1】\nfloat perlinNoise(in vec2 pos)\n{\n    vec2 floor_pos = floor(pos);\n    vec2 frac_pos  = fract(pos);\n    \n    vec2 g00 = gradientHash(floor_pos);\n    vec2 g10 = gradientHash(floor_pos + vec2(1.0, 0.0));\n    vec2 g01 = gradientHash(floor_pos + vec2(0.0, 1.0));\n    vec2 g11 = gradientHash(floor_pos + vec2(1.0, 1.0));\n    \n    vec2 f = frac_pos * frac_pos * frac_pos * (frac_pos * (6.0 * frac_pos - 15.0) + 10.0);\n    \n    float v00 = dot(g00, frac_pos);\n    float v10 = dot(g10, frac_pos - vec2(1, 0));\n    float v01 = dot(g01, frac_pos - vec2(0, 1));\n    float v11 = dot(g11, frac_pos - vec2(1, 1));\n    \n    float v0 = v00 + (v10 - v00) * f.x;\n    float v1 = v01 + (v11 - v01) * f.x;\n    float v = v0 + (v1 - v0)* f.y;\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord.xy / iResolution.y;\n    float n = 0.5 + 0.5 * perlinNoise(8.0 * pos);\n    fragColor = vec4(n,n,n,1.0);\n}","name":"Image","description":"","type":"image"}]}