{"ver":"0.1","info":{"id":"DlXSWH","date":"1674672859","viewed":213,"name":"many dots - genuary 25/2023","username":"sleeping","description":"square and shift the complex plane multiple times + apply repetition operator to circle sdf\n\ninspired by Yayoi Kusama - today's prompt of #genuary2023","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["sdf","repetition","genuary"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float _noise(vec2 uv) {\n    // some weird noise\n    return fract(1e3*sin(1e3*dot(uv, vec2(1234., 1321.))));\n}\n\nvec2 _map(vec2 z, vec2 c, int n) {\n    for (int i=0; ++i<n;)\n        z = mat2(z, -z.y, z.x) * z + c;\n    return z;\n}\n\nfloat sdf(vec2 uv){\n    uv = _map(uv, vec2(-.5 - .3*cos(.5*iTime), .4 + .3*sin(.7*iTime)), 5);\n    \n    float c = .08;\n    vec2 q = mod(uv + .5*c, c) - .5*c; // repetition of shape    \n    vec2 m = mod(uv + .5*c, 2.*c) - c;\n    float v = dot(q,q) - c*c*.13;\n    return mix(\n        .7+.9*sign(m.y), // odd-even coloring\n        q.y*9., // background\n        smoothstep( -.7, .7, v/fwidth(v) ) // antialias\n    );\n}\n\nvec3 _colorize(float d){\n    return sin(d + .45)*vec3(\n        .6 + .3*d,\n        .5 - .3*d,\n        .9 - .3*d \n    );\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = .7*fragCoord/iResolution.y - vec2(.4, .5);\n    float d = sdf(uv);\n    vec3 col = _colorize(d) - _noise(uv)*.1;\n\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}