{"ver":"0.1","info":{"id":"wtfyWs","date":"1593409043","viewed":159,"name":"fluidfucnasdfasdf","username":"suitzero","description":"simple fluid simulation-study of me and my neighbor ","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["fluid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define LOOKUP(COORD) texture(iChannel0,(COORD)/iResolution.xy)\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = LOOKUP(fragCoord).w;\n    \n    // Output to screen\n    fragColor = vec4(a-sin(iTime*0.1)*0.1,a+sin(iTime*0.3)*0.1,a-sin(iTime*0.5)*0.1,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define LOOKUP(COORD) texture(iChannel0,(COORD)/iResolution.xy)\n\nvec4 Field(vec2 position){\n    // 1st rule\n    vec2 velocityGuess = LOOKUP(position).xy;\n    vec2 positionGuess = position - velocityGuess;\n    return LOOKUP (positionGuess);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n       \n    fragColor = Field(fragCoord);\n    \n    // why pX and nX? rather than right and left neighour\n    vec4 pX = Field(fragCoord + vec2(1,0));\n    vec4 pY = Field(fragCoord + vec2(0,1));\n    vec4 nX = Field(fragCoord - vec2(1,0));\n    vec4 nY = Field(fragCoord - vec2(0,1));\n    \n    // 2st rule\n    fragColor.b = (pX.b + pY.b + nX.b + nY.b)/4.0;\n\t\n    // 3nd rule\n    vec2 Force;\n    \n    Force.x = nX.z - pX.z;\n    Force.y = nY.z - pY.z;\n    \n    fragColor.xy += Force/4.0;\n    \n    // 4th rule\n    fragColor.b += (nX.x - pX.x + nY.y - pY.y)/4.;\n    // Gravity effect :\n    fragColor.y -= fragColor.w/300.0;\n    // Mass concervation :\n    fragColor.w += (nX.x*nX.w-pX.x*pX.w+nY.y*nY.w-pY.y*pY.w)/4.;\n    \n    //Boundary conditions :\n    if(fragCoord.x<10.||fragCoord.y<10.||iResolution.x-fragCoord.x<10.||iResolution.y-fragCoord.y<10.)\n    {\n    \tfragColor.xy *= 0.;\n    }\n\tif (iFrame == 0 && fragCoord.x>0.9) {\n        fragColor.w = 1.;\n    }\n    \n}","name":"Buf A","description":"","type":"buffer"}]}