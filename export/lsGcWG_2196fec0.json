{"ver":"0.1","info":{"id":"lsGcWG","date":"1523110538","viewed":123,"name":"GLSL Bug 3 3","username":"ketschik","description":"GLSL Bug 3 3","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["glsl","bug"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// If the value is greater than 0.5 the rectangle should be white. Otherwise it should be black. However, I got a strange error. The rectangle at the position 3, 3 is displayed as black although the value should be 0.9299.  Line 21 shows (in blue color), that the rectangle really is at the position 3, 3. Line 30 shows (in red color), that the function really returns a value greater than 0.5. After experimenting a while I found out that it thinks that the value is somewhere between 0.0036621 and 0.0036622\nfloat random (vec2 v) {\n    return fract(sin(dot(v, vec2(1.0983, 94.0))) * 3758.0);\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    vec2 uv = gl_FragCoord.xy/iResolution.xy;\n\n    uv *= 5.0;\n    vec2 ipos = floor(uv);\n    vec3 color = vec3(0.0);\n\t\n\tif(random(ipos) > 0.5)\n\t{\n\t    color = vec3(1.0);\n    }\n\t\n\tif(ipos.x == 3.0 && ipos.y == 3.0)\n\t{\n\t    // color = vec3(0.0, 0.0, 1.0);\n\n\t    if(random(ipos) > 0.5)\n\t    {\n\t        color = vec3(0.0, 1.0, 0.0);\n\t    }\n\t   \n\t    if(random(vec2(3.0, 3.0)) > 0.5)\n\t    {\n\t        // color = vec3(1.0, 0.0, 0.0);\n\t    }  \n    }\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}