{"ver":"0.1","info":{"id":"lldSR2","date":"1480886581","viewed":200,"name":"gamma-corrected gradient","username":"MacSlow","description":"small example for a friend about... gamma corrected gradient/blur on the top half and non-corrected one on the bottom half","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gamma","correction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 red = vec3 (1., .0, .0);\nconst vec3 green = vec3 (.0, 1., .0);\n\n// map 'value' from range a..b to p..q\nfloat map (float a, float b, float p, float q, float value)\n{\n    float vn = (value - a) / (b - a);\n    float delta = q - p;\n\treturn p + vn * delta;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    float brightness = .0;\n\n    if (uv.x < .4) {\n        // \"black\"\n\t    brightness = .0;\n    } else if (uv.x >= .4 && uv.x <= .6) {\n        // gradient in between\n\t    brightness = map (.4, .6, .0, 1., uv.x);\n    } else {\n        // \"white\"\n\t    brightness = 1.;\n    }\n\n    if (uv.y > .5) {\n\t    // top half with correct (gamma corrected) gradient/blur\n    \tfragColor = vec4 (sqrt (mix (red, green, brightness)), 1.);\n    } else if (uv.y <= .5 && uv.y > .4975) {\n\t    // small black horizontal bar\n\t    fragColor = vec4 (.0, .0, .0, 1.);\n    } else {\n\t    // bottom half wrong (non-gamma corrected) gradient/blur\n\t    fragColor = vec4 (mix (red, green, brightness), 1.);\n    }\n}","name":"Image","description":"","type":"image"}]}