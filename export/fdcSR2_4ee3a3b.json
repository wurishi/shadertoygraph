{"ver":"0.1","info":{"id":"fdcSR2","date":"1633477802","viewed":59,"name":"Not Malevich Square","username":"Ludmila","description":"My first toy.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["square","shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 rectangle(vec2 uv, vec2 pos, float width, float height, vec3 color)\n{\n\tfloat t = 0.;\n\tif ((uv.x > pos.x - width / 2.0) && (uv.x < pos.x + width / 2.)\n\t\t&&\n        (uv.y > pos.y - height / 2.) && (uv.y < pos.y + height / 2.)) \n      {\n\t\tt = 1.;\n\t  }\n\treturn vec4(color, t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;;\n    float kx=max(iResolution.x, iResolution.y)/iResolution.x;\n    float ky=max(iResolution.x, iResolution.y)/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col1 = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col2=vec3(1.-col1.r,1.-col1.g, 1.-col1.b);\n   \n    vec4 rect = rectangle(uv, vec2(.5), .25*kx , .25*ky, col2 );\n    // Output to screen \n    fragColor = mix(vec4(col1, 1), rect, rect.a);\n}","name":"Image","description":"","type":"image"}]}