{"ver":"0.1","info":{"id":"lX2yRd","date":"1727618816","viewed":48,"name":"Black hole RayTracer","username":"Tinius","description":"Simulation of looking at a black hole\nblack pixels within the black hole before an event horizon forms is due to a limit on steps for the light rays","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["beginner","space","science"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float holeMass = 100.0;\n    vec3 camera = vec3(iResolution.x / 2.0, iResolution.y / 2.0, 0.0 - iResolution.y);\n    float speed = 5.0;\n    \n    vec3 hole = vec3(iResolution.xyx / 2.0);\n    \n    vec3 raypos = vec3(fragCoord, 0.0);\n    vec3 raydir = normalize(vec3(fragCoord, 0.0) - camera) * speed;\n    float raylife = 32.0;\n    \n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    do {\n        raydir += (holeMass / pow(length(hole - raypos), 2.0)) * normalize(hole - raypos);\n        raydir = normalize(raydir) * speed;\n        raylife -= 0.0;\n        raypos += raydir;\n        if (raypos[0] < 0.0, raypos[0] > iResolution.x) {\n            fragColor = texture(iChannel0, vec2(raypos[2] / iResolution.x, raypos[1] / iResolution.y));\n        } else {\n            if ( raypos[1] < 0.0, raypos[1] > iResolution.y ) {\n                fragColor = texture(iChannel0, vec2(raypos[0] / iResolution.x, raypos[2] / iResolution.x));\n            } else {\n                if ( raypos[2] < 0.0, raypos[2] > iResolution.x ) {\n                    fragColor = texture(iChannel0, vec2(raypos[0] / iResolution.x, raypos[1] / iResolution.y));\n                }\n            }\n            if ( raypos[0] < 0.0 ) {\n                fragColor = texture(iChannel0, vec2(raypos[2] / iResolution.x, raypos[1] / iResolution.y));\n            } else {\n                if ( raypos[1] < 0.0 ) {\n                    fragColor = texture(iChannel0, vec2(raypos[0] / iResolution.x, raypos[2] / iResolution.x));\n                } else {\n                    if ( raypos[2] < 0.0 ) {\n                        fragColor = texture(iChannel0, vec2(raypos[0] / iResolution.x, raypos[1] / iResolution.y));\n                    }\n                }\n            }\n        }\n    } while ( raylife > 0.0);\n}","name":"Image","description":"","type":"image"}]}