{"ver":"0.1","info":{"id":"XcB3R3","date":"1704446115","viewed":24,"name":"dontshowtoyourtrippingroommate","username":"kywi","description":"dontshowtoyourtrippingroommate","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 getColor(float t) {\n    vec3 a = vec3(0., .5, .1); \n    vec3 b = vec3(0., .5, .5);\n    vec3 c = vec3(0., 1., 1.);\n    vec3 d = vec3(0., 1., .5);\n    \n    return a + b * cos(6.28318*(c*t + d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 -1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float d = tan(uv.x/uv.y);\n    d = tan(d + iTime);\n    d = tan(tan(d));\n    \n    float ring = sin(log(length(uv))+ iTime / 2.);\n\n    // Time varying pixel color\n    vec3 col = d * getColor(iTime/4.) * ring * vec3(0.000,0.588,4.000);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}