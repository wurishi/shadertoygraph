{"ver":"0.1","info":{"id":"wdVGzh","date":"1569756346","viewed":159,"name":"Hypercube Compound","username":"omeometo","description":"24-cell, or a hypercube compound","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["math","4d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 qmul(in vec4 p, in vec4 q){\n\treturn vec4(cross(p.xyz, q.xyz)+p.w*q.xyz+p.xyz*q.w, -dot(p.xyz, q.xyz)+p.w*q.w);\n}\n\nvec4 qconj(in vec4 p){return vec4(-p.xyz, p.w);}\n\nmat2 rot(in float t){return mat2(cos(t), sin(t), -sin(t), cos(t));}\nvec3 trsf(in vec4 q){\n    float t=iTime;\n\tq.xy *= rot(t*0.34);\n    q.zw *= rot(t*0.53);\n    q.yz *= rot(t*0.36);\n    q.wx *= rot(t*0.13);\n    return q.xyz / (3.0 - q.w);\n}\n\n\nvec2 line_seg_dist(in vec3 p, in vec3 q, in vec3 ro, in vec3 rd){\n\tp-=ro;q-=ro;\n\tvec3 u=cross(p, rd), v=cross(q-p, rd);\n    float t=-dot(u,v)/dot(v,v);\n    t=clamp(t, 0.05, 0.95);\n    vec3 r=mix(p,q,t);\n\tfloat d=length(cross(r, rd));\n    float tt=dot(r, rd) / dot(rd, rd);\n\treturn vec2(d, tt);\n}\n\nvec3 dist(in vec3 ro, in vec3 rd, in float r0, in float r1, in float r2){\n    vec4 v[16];\n    v[ 0] = vec4(+1,+1,+1,+1); \n    v[ 1] = vec4(+1,+1,+1,-1); \n    v[ 2] = vec4(+1,+1,-1,+1); \n    v[ 3] = vec4(+1,+1,-1,-1); \n    v[ 4] = vec4(+1,-1,+1,+1); \n    v[ 5] = vec4(+1,-1,+1,-1); \n    v[ 6] = vec4(+1,-1,-1,+1);\n    v[ 7] = vec4(+1,-1,-1,-1); \n    v[ 8] = vec4(-1,+1,+1,+1); \n    v[ 9] = vec4(-1,+1,+1,-1); \n    v[10] = vec4(-1,+1,-1,+1); \n    v[11] = vec4(-1,+1,-1,-1); \n    v[12] = vec4(-1,-1,+1,+1); \n    v[13] = vec4(-1,-1,+1,-1); \n    v[14] = vec4(-1,-1,-1,+1);\n    v[15] = vec4(-1,-1,-1,-1);\n    \n    vec3 d_best=vec3(1e3, 1e3, 0); // dist, hit_dist, material\n    for(int i=0;i<16;i++){\n        for(int j=1;j<16;j*=2){\n            for(int t=0;t<3;t++){\n               \tvec4 q;\n                if(t==0){q=vec4(0,0,0,1);}\n                if(t==1){q=vec4(0.5, 0.5, 0.5, 0.5);}\n                if(t==2){q=vec4(0.5, 0.5, 0.5, -0.5);}\n                vec3 v0=trsf(qmul(v[i], q)), v1=trsf(qmul(v[i^j], q));\n\t\t\t\tvec2 d=line_seg_dist(v0, v1, ro, rd); // dist, normal\n                if(t==0 && d.x>=r0)continue;\n                if(t==1 && d.x>=r1)continue;\n                if(t==2 && d.x>=r2)continue;\n                if(d_best.y > d.y){\n                    d_best.xy = d.xy;\n                    d_best.z = float(t);\n                }\n            }\n        }\n    }\n    return d_best;\n}\n\n\nvec3 getMaterialColor(in float idx){\n    if(idx<0.5){\n    \treturn vec3(1,0,0);\n    }else if(idx<1.5){\n    \treturn vec3(0,1,0);\n    }else{\n    \treturn vec3(0,0,1);\n    }\n}\n\nvoid getColor(out vec4 fragColor, in vec3 cen, in vec3 rd, in float r_min){\n\tfloat t=iTime*0.2-0.5;\n    float u=smoothstep(0.8, 0.9, cos(t));\n    float rm=u*0.016;\n    float r0=mix(r_min, 0.03, smoothstep(0.8, 0.9, cos(t-1.57)));\n    float r1=mix(r_min, 0.03, smoothstep(0.8, 0.9, cos(t-3.14)));\n    float r2=mix(r_min, 0.03, smoothstep(0.8, 0.9, cos(t-4.71)));\n    r0 = max(r0, rm);\n    r1 = max(r1, rm);\n    r2 = max(r2, rm);\n    vec3 d = dist(cen, rd, r0, r1, r2);\n    vec3 col = getMaterialColor(d.z);\n    col = mix(col, vec3(1,1,1), u);\n    float r;\n    if(d.z<0.5)r=r0;\n    else if(d.z<1.5)r=r1;\n    else r=r2;\n    fragColor = vec4(max(1.0-d.x/r, 0.0)*col, 1);\n    fragColor = pow(fragColor, vec4(0.45));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\t\n    vec3 cen = vec3(0,0,2.5);\n    vec3 fwd = normalize(-cen);\n    vec3 up = vec3(0,1,0);\n    vec3 right = cross(fwd, up);\n    \n    vec3 rd = normalize(fwd + 0.3 * (uv.x * right + uv.y * up));\n    \n    getColor(fragColor, cen, rd, 1.3 / iResolution.y);\n}","name":"Image","description":"","type":"image"}]}