{"ver":"0.1","info":{"id":"wldGDr","date":"1576105629","viewed":213,"name":"curve drawer","username":"Anskiere","description":"-","likes":4,"published":1,"flags":32,"usePreview":0,"tags":["backbuffer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// Fork of \"Graffiti Time\" by dirkadirkadan. https://shadertoy.com/view/XdtGDB\n// 2019-12-11 11:36:20\n\nfloat smin( float a, float b, float k )\n{\n    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\n    return mix( b, a, h ) - k*h*(1.0-h);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    float s = 1. - texture(iChannel0, fragCoord.xy / iResolution.xy).r;\n        \n    //s -= 0.001;\n    \n    //s = smin(s, length(uv - vec2(cos(iTime * 1.5), sin(iTime * 2.5))*0.3) - 0.01, 0.05);\n    \n    s = smoothstep(0.01, 0., s);\n    \n    fragColor = vec4(s);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iChannelResolution[0].xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"float rand11(float x)\n{\n    x += 133.;\n    return fract(sin(x * 35.7313) * 437.5453);\n}\n\nfloat noise11(float t)\n{\n    float t1 = floor(t);\n    float t2 = t1 + 1.;\n    float k = fract(t);\n\n    k = 3.*k*k-2.*k*k*k;\n\n    return mix(rand11(t1), rand11(t2), k);\n}\n\nfloat sdLine(vec2 a, vec2 b, vec2 p)\n{\n    vec2 ba = b - a;\n    vec2 pa = p - a;\n\n    float t = dot(pa, ba) / dot(ba, ba);\n    t = clamp(t, 0., 1.);\n\n    vec2 m = ba * t;\n    return distance(pa, m);\n}\n\nvec2 getPos(float t)\n{\n    vec2 pos;\n\n    int steps = 7;\n    float p = 1.;\n\n    for (int i = 0; i < steps; i++)\n    {\n        float n = noise11(t * p);\n        n *= 3.1415*2.;\n\n        vec2 locPos;\n        locPos.x = cos(n)/p;\n        locPos.y = sin(n)/p;\n\n        vec2 newPos = pos + locPos;\n\n        pos = newPos;\n        p *= 1.71;\n    }\n\n    return pos;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy - 0.5 * iChannelResolution[0].xy);\n    uv /= iChannelResolution[0].y;\n    uv *= 5.;\n\n    float timeScale = 0.125;\n    float deltaT = 0.05 * timeScale;\n    float t = iTime * timeScale;\n\n    vec2 pos1 = getPos(t);\n    vec2 pos2 = getPos(t + deltaT);    \n    \n    float sd = sdLine(pos1, pos2, uv);\n    \n    float old = 1. - texture(iChannel0, fragCoord/iChannelResolution[0].xy).r;\n    \n    if (iMouse.z > 0.)\n    {\n        fragColor = vec4(0);\n        return;\n    }\n    \n    fragColor.rgb = vec3(1. - min(sd, old));\n}","name":"Buffer B","description":"","type":"buffer"}]}