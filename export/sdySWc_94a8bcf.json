{"ver":"0.1","info":{"id":"sdySWc","date":"1635395406","viewed":80,"name":"Harmonic Line Segment","username":"hydrocarborane","description":"Harmonic Line Segment","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["harmonic","linesegment","complexanalysis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 clog(vec2 x){\n    return vec2(log(x.x), atan(x.y, x.x));\n}\n\nvec2 div(vec2 a, vec2 b){\n    return vec2(((a.x * b.x) + (a.y * b.y))/\n                ((b.x * b.x) + (b.y * b.y)),\n                ((a.y * b.x) - (a.x * b.y))/\n                ((b.x * b.x + b.y * b.y)));\n}\n\nvec2 mul(vec2 a, vec2 b){\n    return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\n}\n\nvec2 conj(vec2 x){\n    return vec2(x.x, -x.y);\n}\n\nfloat segment(vec2 z, vec2 p, vec2 q){\n    return clog(div((z - p), (z - q))).y;\n}\n\n\nvec3 colorMap(float x){\n    vec3 colA = vec3(0, 1, 0);\n    vec3 colB = vec3(0, 0, 1);\n    return colA * x + colB * (1.0f - x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 p = vec2(0.5 + cos(iTime) / 2.5,0.5 + sin(iTime) / 2.5);\n    vec2 q = vec2(0.5,0.5);\n\n    vec3 col = colorMap((segment(uv, p, q) / 10.) + 0.3);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}