{"ver":"0.1","info":{"id":"tdlGRH","date":"1545064429","viewed":320,"name":"try fbm noise 01","username":"cailuming","description":"try some fbm noise ","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592657\n\nmat2 rot2D(float a){\n   float c =cos(a);\n   float s = sin(a);\n   \n   return mat2(c,s,-s,c); \n}\n\nvec3 getColor(float v){\n   float r = cos((v-0.78)*PI);\n   float g = cos((v-0.52)*PI);\n   float b = cos((v-0.20)*PI);\n   \n   return vec3(r,g,b);\n}\n\nvec2 hash2(vec2 uv){\n   float drive = 1.0+iTime*0.2*PI; \n   float r = fract(sin(dot(uv,vec2(3.7345236,PI))*PI*128493.0)); \n   float r1 = fract(sin(dot(uv,vec2(r,PI))*PI*14327.0)); \n   \n   return vec2(r,r1)*rot2D(drive);\n}\n\nfloat noise2D(vec2 uv){\n   vec2 p = floor(uv);\n   vec2 f = fract(uv);\n   vec2 e = vec2(1,0);\n   vec2 p00 = p;\n   vec2 p10 = p+e;\n   vec2 p11 = p+e.xx;\n   vec2 p01 = p+e.yx;\n   float v00 = dot(f-e.yy,hash2(p00));\n   float v10 = dot(f-e.xy,hash2(p10));\n   float v11 = dot(f-e.xx,hash2(p11));\n   float v01 = dot(f-e.yx,hash2(p01));\n    \n   f = f*f*f*(f*(f*6.-15.)+10.); \n   \n   return mix(mix(v00,v10,f.x),mix(v01,v11,f.x),f.y);\n}\n\nfloat fbm(vec2 uv){\n    float freq = 0.2;\n    float ampli = 3.0;\n    float ret   = 0.5;\n    for (int i=0;i<8;i++){\n       ret+= noise2D(uv*freq)*ampli;\n       //0.3425617\n       uv +=vec2(ret,ret);\n       //freq*=ret;\n       freq*=2.0;\n       ampli*=0.45;\n    }\n    return ret;\n}\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy-vec2(0.5);\n    float as =  iResolution.x/iResolution.y;\n    uv.x*=as;\n\n    // Time varying pixel color\n    vec3 col = vec3(0);\n    \n    float a = atan(uv.y,uv.x);\n    uv *= 2.;\n    float v = fbm(uv*2.);\n    col = getColor(v*0.45);\n    col = smoothstep(0.,1.,col);\n    col = pow(col,vec3(0.8));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}