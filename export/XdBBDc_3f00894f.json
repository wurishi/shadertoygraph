{"ver":"0.1","info":{"id":"XdBBDc","date":"1502396540","viewed":201,"name":"Upper Reflection","username":"koboldstyle","description":"beginner exploration","likes":1,"published":1,"flags":2,"usePreview":0,"tags":["2d","simple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 uvFlipped;\n    uvFlipped.x = uv.x;\n    \n    if (uv.y > 0.8) {\n        uvFlipped.y = (1.0 - uv.y) * 2.5 + 0.3;\n    } else {\n        uvFlipped.y = uv.y;\n    }\n    \n    vec3 webCam = texture(iChannel0, uvFlipped).rgb;\n\tfragColor = vec4(webCam, 1.0);\n}","name":"Image","description":"","type":"image"}]}