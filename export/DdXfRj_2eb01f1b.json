{"ver":"0.1","info":{"id":"DdXfRj","date":"1688921052","viewed":257,"name":"Rutt Etra Effect","username":"Akascape","description":"A try to replicate the rutt etra modulation effect...please like and share :)","likes":13,"published":1,"flags":32,"usePreview":0,"tags":["depth","vj","videoeffect","ruttetra","videosynthesis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Main Image\n\nconst int samples = 5;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\n    vec2 uv = fragCoord / iResolution.xy;\n\n    float img = texture(iChannel0, uv).g;\n\n\tvec2 n[samples];\n\t\n\tfor(int i = 0 ; i < samples ; ++i) {\n        float lines = texture(iChannel0, uv + vec2(float(i - (samples / 2)) / iResolution.x, 0.)).r;\n\t\tlines += fract(Animation * iTime);\n\t\tn[i] = vec2(floor(lines * LineNum * iResolution.x)); \n\t}\n\n\tfloat br = 0.;\n\n\tfor(int i = 0 ; i < samples - 1 ; ++i) {\n\t\tif(n[i+1].x - n[i].x > 0.1) {\n\t\t\tfloat s = float(i - (samples / 2));\n\t\t\tbr += max(0.,1.-abs(s/(LineWidth + img)));\n\t\t}\n\t}\n\t\n\tvec3 color = mix(vec3(0),vec3(img),pow(br,1.0/Brightness));\n    \n\tfragColor = vec4(color,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    float screen = 0.1;\n\n    for(float i = 0. ; i < fragCoord.x ; i++) {\n\t\tscreen += texture(iChannel0, vec2(i, fragCoord.y) / iResolution.xy).g / iResolution.x;\n\t}\n    \n    float channel = texture(iChannel0, fragCoord / iResolution.xy).r;\n    \n    fragColor = vec4(screen, channel, 0, 1);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Depth Map Effect inspired from TekF's 'Retro Parallax'\n// Source: https://www.shadertoy.com/view/4sSGD1\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n\tfloat time = iChannelTime[0];\n\n\tvec2 pixel = (fragCoord.xy - iResolution.xy*.5)/iResolution.xy + vec2(0.0,.1);\n\n\tvec3 col;\n\n\tfor (int i = 1; i < 50; i++)\n    {\n\t\tpixel = pixel;\n\n\t\tfloat depth = 60.0+float(i);\n\n\t\tvec2 uv = pixel * depth/Depth;\n\n\t\tcol = texture(iChannel0, fract(uv+vec2(.5,.4))).rgb;\n\n\t\t  if ((1.0-(col.y*col.y)) < float(i+1) / 20.0)\n\t\t  {\n\t\t  \tbreak;\n\t\t  }\n\t}\n\n\tcol = min(col*col*Intensity, 1.0);\n\n\tfragColor = vec4(col, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"// RUTT ETRA EFFECT SHADER BY AKASCAPE\n\n// Customizable properties for the effect:\nconst float LineNum \t\t= 0.2;\nconst float Brightness\t\t= 5.0;\nconst float Animation\t\t= 0.01;\nconst float Depth           = 80.0;\nconst float Intensity       = 1.5;\nconst float LineWidth       = 1.0;\n","name":"Common","description":"","type":"common"}]}