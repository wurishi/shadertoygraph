{"ver":"0.1","info":{"id":"dtlfDl","date":"1693641395","viewed":205,"name":"LED Spectrogram mockup","username":"TimoKinnunen","description":"Simulation of a wall-mounted spectrogram with a 128x10 resolution using an LED matrix size 130x10.","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["sound","fft","music","led","equalizer","frequency","eq","spectrogram"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//******************************************************\n//\n// LED Music spectrogram mockup, Timo Kinnunen 2023\n//\n// Licence: MIT\n//\n//******************************************************\n\nconst float cols = 130.;\nconst float rows = 10.;\nconst float size = 5.;\nconst float radius = size * 0.5 * 0.9;\n\nvec3 hsv2rgb(vec3 c) {\n    vec3 p = cos(radians(c.x * 360. + vec3(0,240,120)))*1.+0.5;\n    return c.z * mix(vec3(1), clamp(p, 0.0, 1.0), c.y);\n}\n\t\t\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 p = fragCoord.xy - 0.5 * iResolution.xy;\n    vec3 intTotal = vec3(0.03,0.03,0.1);\n    vec3 extTotal = vec3(0);\n    \n    for(float col = 0.; col < cols; col++) {\n        float i = col / (cols - 1.)*6./7.;\n        vec3 intCol = hsv2rgb(vec3(i,1.0,1.0));\n        vec3 extCol = hsv2rgb(vec3(i,0.9375,0.75));\n        i = clamp((col-1.)/(cols-3.),0.,1.) * (iChannelResolution[0].x - 1.);\n\t\n\t\tfloat vol = texelFetch(iChannel0, ivec2(i, 0), 0).x;\n\t\t\n        float x = size * (col - 0.5 * cols);\n\n        for(float row = 0.; row < rows; row++) {\n        \n            float y = size * row;\n            vec2 o = vec2(x,y) + 0.125;\n            float dist = distance(p, o);\n\t    \n            float b = clamp(vol * (rows + 1.) - row, 0., 1.);\n            b = 1. - b;\n            b *= b;\n            b = 1. - b;\n            \n            float intContrib = smoothstep(0.,1.,radius-dist);\n            float extContrib = clamp(0.25/(16.*radius+0.125*0.125*dist*dist), 0., 1.);\n            \n            intTotal = mix(intTotal, b * intCol, intContrib);\n            extTotal += b * extCol * extContrib;\n        }\n    }\n\tfragColor = vec4(intTotal + extTotal, 1);\n}\n","name":"Image","description":"","type":"image"}]}