{"ver":"0.1","info":{"id":"sslyD4","date":"1642116846","viewed":59,"name":"Fractal Carpet","username":"DaggerBall","description":"Original fractal screensaver.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\treturn mat2(c, -s, s, c) * v;\n}\n\nfloat h(float x) {\n    float p;\n    float c = round(x);\n    float s = 0.0;\n    for (int i = 0; i < 12; i++) {\n        p = c;\n        c = round(x *= 0.4142135623730950488016887242097);\n        s += p * c + p;\n    }\n    return s;\n}\n\nfloat g(vec2 p) {\n    const float a = 0.0;\n    const float b = 0.0;\n    float x = round(p.x);\n    float y = round(p.y);\n    return mod(h(x) + h(y) + (x+a)*(y+a)-a*a + b, 2.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float k_min = 1.0;\n    const float k_max = 4.0;\n    const float dk = (log(k_max) + log(k_min)) * -0.5;\n    const float sk = (log(k_max) - log(k_min)) * -0.5;\n    \n    const float v = 0.2;\n    const float w = 0.1;\n    float a = iTime*w;\n    float s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n    \n    float k = exp(dk + sk*cos(iTime*v));\n    \n    vec2 p = k * (fragCoord - iResolution.xy/2.0);\n    k /= 3.0;\n    float t = (g(m * p)\n            + g(m * vec2(p.x-k, p.y-k))\n            + g(m * vec2(p.x-k, p.y))\n            + g(m * vec2(p.x-k, p.y+k))\n            + g(m * vec2(p.x,   p.y-k))\n            + g(m * vec2(p.x,   p.y+k))\n            + g(m * vec2(p.x+k, p.y-k))\n            + g(m * vec2(p.x+k, p.y))\n            + g(m * vec2(p.x+k, p.y+k))) / 9.0;\n    \n    vec3 col = (0.5 + 0.5*cos(v*iTime + vec3(0,2,4))) * t;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}