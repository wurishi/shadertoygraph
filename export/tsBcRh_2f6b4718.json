{"ver":"0.1","info":{"id":"tsBcRh","date":"1586108334","viewed":87,"name":"Black Body Radiation","username":"SeaiaeS","description":"Black body radiation for metals. Texture pattern, mass and heating speed are adjustable.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["blackbody","radiation","black","micro","body","heater","heating","microwave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define PI 3.141592\n\n//grid -> # of sections each direction. Set an even number for symmetry. 0 to inf. 0 is fullscreen.\n//mass -> how hard to heat material\n//power -> power of the heater\n\n\n#define grid 16.\n#define mass 20.\n#define power 4.\n\n\nfloat heat(float s) {return power*cos(s*PI*time*grid)/(mass*s);}\n\nfloat burnerKnob(float c) {return c * iMouse.y/20.;}\n\nfloat microwave(vec2 uv){return uv.x*uv.y*(heat(uv.x/time)*heat(uv.y/time));}\n\nfloat chaos(float c) {return  (-1./heat(1.-c));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float pat = microwave(uv);\n    \n    //pat = burnerKnob(pat); // Change heater power along y-axis\n    //pat = chaos(pat); //EXPERIMENTAL\n    \n    vec3 col = vec3(pat*0.27,pat*0.07,pat*0.05);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}