{"ver":"0.1","info":{"id":"lfsXzl","date":"1705613137","viewed":72,"name":"primordial soup","username":"wainggan","description":"game background 7 i think","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"lflSzl","parentname":"fractal noise test"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define OCTAVES 6\n\nfloat random(vec2 p) {\n    return fract(sin(dot(p.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n}\n\nfloat noise(vec2 p) {\n    \n    vec2 s = floor(p);\n    \n    float a = random(s);\n    float b = random(s + vec2(1.0, 0.0));\n    float c = random(s + vec2(0.0, 1.0));\n    float d = random(s + vec2(1.0, 1.0));\n    \n    vec2 f = smoothstep(0.0, 1.0, fract(p));\n    \n    float ab = mix(a, b, f.x);\n    float cd = mix(c, d, f.x);\n    \n    float o = mix(ab, cd, f.y);\n    \n    return o;\n    \n}\n\nfloat fractal(vec2 p) {\n\n    float o = 0.0;\n    float strength = 0.5;\n    vec2 position = p;\n    \n    for (int i = 0; i < OCTAVES; i++) {\n        \n        o += noise(position) * strength;\n        position *= 2.0;\n        strength *= 0.5;\n        \n    }\n    \n    // attempt to fix darkness issues\n    o /= 1.0 - 0.5 * pow(0.5, float(OCTAVES - 1));\n    \n    return o;\n    \n}\n\nmat2 rotate(float r) {\n    return mat2(\n        cos(r), -sin(r),\n        sin(r), cos(r)\n    );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv *= 0.5;\n    uv += vec2(4.0);\n    \n    float n = fractal((uv + iTime / 200.0) * 1.0);\n    float r = n * 3.1415 * 2.0;\n    \n    uv += vec2(0.0, 1.0) * rotate(r);\n    \n    float n_0 = fractal((uv + iTime / 100.0) * 8.0);\n    float r_0 = n_0 * 3.1415 * 2.0;\n    \n    float n_1 = fractal((uv + vec2(0.0, 0.1) * rotate(r_0) - iTime / 200.0) * 8.0);\n    float r_1 = n_1 * 3.1415 * 2.0;\n    \n    uv += vec2(0.0, 0.1) * rotate(r_1);\n    \n    float m1 = sin(uv.y * 60.0 + iTime / 1.0) / 2.0 + 0.5;\n    float m2 = sin(uv.y * 5.0 + iTime / 2.0) / 2.0 + 0.5;\n    float m3 = sin(uv.y * 10.0 + iTime / 5.0) / 2.0 + 0.5;\n    \n    vec3 c1 = vec3(0.8, 0.2, 1.0);\n    vec3 c2 = vec3(0.4, 0.5, 0.9);\n    vec3 c3 = vec3(0.7, 0.4, 0.7);\n    \n    vec3 col = vec3(0.0) + (m1 * c1) + (m2 * c2) + (m3 * c3);\n    col /= c1 + c2 + c3;\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}