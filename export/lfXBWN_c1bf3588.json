{"ver":"0.1","info":{"id":"lfXBWN","date":"1723758860","viewed":55,"name":"basic distance constraint","username":"jonasfrey","description":"inspiration https://zalo.github.io/blog/constraints/","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["constraint"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"push points\" by jonasfrey. https://shadertoy.com/view/XcfBD4\n// 2024-08-15 21:15:36\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Output to screen\n    fragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 f_n_o_rnd_hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 o_res = iResolution.xy;\n    float n_scl_min = min(o_res.x, o_res.y);\n    vec2 o_trn = (fragCoord.xy-o_res*.5)/n_scl_min;\n    vec2 o_trn_mou = (iMouse.xy-o_res*.5)/n_scl_min;\n    if(sign(iMouse.z) == 0.){\n        o_trn_mou = vec2(.0, .0);\n    }\n\n    vec2 o_trn1 = fragCoord/iResolution.xy;\n    float naa = 1./n_scl_min;\n\n    //max radius circle \n    float nrm = 0.25;\n    \n    float n_its = 100.;\n    float nrp = 0.01;\n    if(mod(float(iFrame), 1000.)== 0.){\n       \n        fragColor = (vec4(\n            f_n_o_rnd_hash22(fragCoord.xy),\n            f_n_o_rnd_hash22(fragCoord.yx)\n        )-.5);\n        return;\n    }\n    if(fragCoord.y < 1.){\n        vec4 op = texture(iChannel0, o_trn1);\n        vec2 op2 = op.xy-o_trn_mou.xy;\n        float nd1 = length(op2);\n        float ntmp = nrm-nrp;\n        if(nd1 > ntmp){\n            op.xy = o_trn_mou.xy + normalize(op2.xy)*ntmp;\n        }\n        fragColor = op;\n        \n        \n        return;\n    }\n    \n    float ndm = length(o_trn-o_trn_mou);\n    ndm = smoothstep(0., naa*4., abs(ndm-nrm)); \n    \n    float ndp_min = 1.;\n    for(float n_it_nor = 0.; n_it_nor < 1.; n_it_nor+=(1./n_its)){\n       vec4 op = texelFetch(\n           iChannel0, \n           ivec2(int(n_it_nor*n_its), 0), \n           0\n       );\n       float ndp = length(o_trn - op.xy);\n       ndp_min = min(ndp, ndp_min);\n    }\n    ndp_min = smoothstep(0., naa*4., abs(ndp_min-nrp)); \n    fragColor = vec4(\n        ndp_min\n        *ndm\n    );\n\n}","name":"Buffer A","description":"","type":"buffer"}]}