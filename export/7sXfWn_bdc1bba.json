{"ver":"0.1","info":{"id":"7sXfWn","date":"1644689372","viewed":292,"name":"Metal Slug (4bit)","username":"zproxy","description":"pixelart","likes":18,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n\nconst float zoom = 4.0;\n\n\nvoid player1(inout vec4 fragColor, in vec2 fragCoord, in int xoffset);\nvoid floor1(inout vec4 fragColor, in vec2 fragCoord, in int xoffset);\nvoid sky1(inout vec4 fragColor, in vec2 fragCoord, in int xoffset);\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n//fragColor.rgb = vec3(0,0,0.0 + (fragCoord.y - (iResolution.y / 3.0   )   ) / (iResolution.y  / 2.0  ));\nfragColor.rgb = vec3(0.63,0.91,0.97);\n\n     int xoffset = 8 + int(iTime * 20.0); // how fast do we move?\n\nsky1(fragColor,fragCoord, xoffset/6);\n//return;\nfloor1(fragColor,fragCoord, xoffset);\n\n\n    int ioffset =   int(iTime * 8.0);\n    const int xx[] = int[](0,32,61, 94,128,159,191,223, 259);\n    //int w = (ioffset % x.length() == (x.length() - 1) ? 290 - 259 : 32);\n    const int ww[] = int[](32,29, 33,34,31,32,32, 36,31);\n\n    int w =    ww[ioffset % ww.length()]  ;\n\n    int voffset =    xx[ioffset % xx.length()]  ;\n\n// tiled the whole strip. whatof fullscreen?\nint vxtimer = min( -32 + int(iTime * 30.0) ,60 * 1);// have him come from offscreen?\n//int vx = 66 - w; // right aligned frames?\nint vx = vxtimer - w/2; // center aligned frames?\n\n\nint vxc = (int((fragCoord.x -0.0 ) / zoom)   ) - vx;\nif (vxc < w * 1)\n if (vxc >=  0) // lets pretend we only want the 1. element?\n    player1(fragColor,fragCoord,voffset - vx);\nelse\n{\n    //player1(fragColor,fragCoord,voffset);\n    //fragColor.rgb = fragColor.bgr;\n}    \n\n//fragColor.rgb = fragColor.bgr;\n\n}\n\nvoid floor1(inout vec4 fragColor, in vec2 fragCoord, in int xoffset)\n{\n\nint cw = 232; // { cw = 232, Width = 226, Height = 37 }\nconst uint xy[] = uint[](\n 0x00011100u,  0x11000010u,  0x00000110u,  0x11000100u,  0x00011100u,  0x11000010u,  0x00000110u,  0x11000100u,  0x00011100u,  0x11000010u,  0x00000011u,  0x01100010u,  0x00001110u,  0x01100001u,  0x00000011u,  0x01100010u,  0x00001110u,  0x01100001u,  0x00000011u,  0x01100010u,  0x00001110u,  0x01100001u,  0x00000011u,  0x01100010u,  0x00001110u,  0x01100001u,  0x00000011u,  0x01100010u,  0x00000000u,\n 0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11111111u,  0x11000000u,\n 0x22222222u,  0x22332222u,  0x22223333u,  0x22223222u,  0x22222222u,  0x22332222u,  0x22223333u,  0x22223222u,  0x22222222u,  0x22332222u,  0x22222333u,  0x32222322u,  0x22222222u,  0x22233222u,  0x22222333u,  0x32222322u,  0x22222222u,  0x22233222u,  0x22222333u,  0x32222322u,  0x22222222u,  0x22233222u,  0x22222333u,  0x32222322u,  0x22222222u,  0x22233222u,  0x22222333u,  0x32222322u,  0x22000000u,\n 0x33334433u,  0x33335433u,  0x33335433u,  0x33335433u,  0x33334433u,  0x33335433u,  0x33335433u,  0x33335433u,  0x33334433u,  0x33335433u,  0x33333543u,  0x33333543u,  0x33333443u,  0x33333543u,  0x33333543u,  0x33333543u,  0x33333443u,  0x33333543u,  0x33333543u,  0x33333543u,  0x33333443u,  0x33333543u,  0x33333543u,  0x33333543u,  0x33333443u,  0x33333543u,  0x33333543u,  0x33333543u,  0x33000000u,\n 0x22662226u,  0x26222246u,  0x66442266u,  0x66662222u,  0x22262226u,  0x26222246u,  0x66442266u,  0x66222222u,  0x22662226u,  0x26222246u,  0x66444226u,  0x66666222u,  0x22226222u,  0x62622224u,  0x66644226u,  0x66622222u,  0x22266222u,  0x62622224u,  0x66644226u,  0x66666222u,  0x22226222u,  0x62622224u,  0x66644226u,  0x66622222u,  0x22266222u,  0x62622224u,  0x66644226u,  0x66666222u,  0x22000000u,\n 0x66664522u,  0x54446655u,  0x44445522u,  0x64666666u,  0x66224422u,  0x54446655u,  0x44445522u,  0x64466264u,  0x66664522u,  0x54446655u,  0x44444552u,  0x26466666u,  0x66622442u,  0x25444665u,  0x54444552u,  0x26446626u,  0x46666452u,  0x25444665u,  0x54444552u,  0x26466666u,  0x66622442u,  0x25444665u,  0x54444552u,  0x26446626u,  0x46666452u,  0x25444665u,  0x54444552u,  0x26466666u,  0x66000000u,\n 0x44446455u,  0x26554444u,  0x55555577u,  0x26444666u,  0x44666455u,  0x26644466u,  0x57554455u,  0x26444466u,  0x44446455u,  0x26554444u,  0x55555557u,  0x72644466u,  0x64466645u,  0x52664446u,  0x65755445u,  0x52644446u,  0x64444645u,  0x52655444u,  0x45555557u,  0x72644466u,  0x64466645u,  0x52664446u,  0x65755445u,  0x52644446u,  0x64444645u,  0x52655444u,  0x45555557u,  0x72644466u,  0x64000000u,\n 0x66554444u,  0x55665555u,  0x77722666u,  0x44226546u,  0x66544664u,  0x57664454u,  0x65575466u,  0x57266754u,  0x66554444u,  0x55665555u,  0x77722266u,  0x64422654u,  0x66654466u,  0x45766445u,  0x46557546u,  0x65726675u,  0x46655444u,  0x45566555u,  0x57772266u,  0x64422654u,  0x66654466u,  0x45766445u,  0x46557546u,  0x65726675u,  0x46655444u,  0x45566555u,  0x57772266u,  0x64422654u,  0x66000000u,\n 0x55457554u,  0x45552226u,  0x66664554u,  0x65556225u,  0x44655446u,  0x45776245u,  0x54547754u,  0x65776665u,  0x55457554u,  0x45552226u,  0x66666455u,  0x46555622u,  0x54465544u,  0x64577624u,  0x55454775u,  0x46577666u,  0x55545755u,  0x44555222u,  0x66666455u,  0x46555622u,  0x54465544u,  0x64577624u,  0x55454775u,  0x46577666u,  0x55545755u,  0x44555222u,  0x66666455u,  0x46555622u,  0x54000000u,\n 0x00000010u,  0x00000000u,  0x00000000u,  0x11000100u,  0x00011171u,  0x10000000u,  0x00000000u,  0x11000100u,  0x00000010u,  0x00000000u,  0x00000000u,  0x01100010u,  0x00001117u,  0x11000000u,  0x00000000u,  0x01100010u,  0x00000001u,  0x00000000u,  0x00000000u,  0x01100010u,  0x00001117u,  0x11000000u,  0x00000000u,  0x01100010u,  0x00000001u,  0x00000000u,  0x00000000u,  0x01100010u,  0x00000000u,\n 0x11001777u,  0x11110001u,  0x77177711u,  0x77111771u,  0x10000117u,  0x77110001u,  0x77177711u,  0x77711771u,  0x11001777u,  0x11110001u,  0x77177771u,  0x17711177u,  0x11000011u,  0x77711000u,  0x17717771u,  0x17771177u,  0x11100177u,  0x71111000u,  0x17717771u,  0x17711177u,  0x11000011u,  0x77711000u,  0x17717771u,  0x17771177u,  0x11100177u,  0x71111000u,  0x17717771u,  0x17711177u,  0x11000000u,\n 0x88822888u,  0x28228888u,  0x88888822u,  0x88888888u,  0x88822888u,  0x28228888u,  0x88888822u,  0x88888888u,  0x88822888u,  0x28228888u,  0x88888882u,  0x28888888u,  0x88882288u,  0x82822888u,  0x88888882u,  0x28888888u,  0x88882288u,  0x82822888u,  0x88888882u,  0x28888888u,  0x88882288u,  0x82822888u,  0x88888882u,  0x28888888u,  0x88882288u,  0x82822888u,  0x88888882u,  0x28888888u,  0x88000000u,\n 0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22000000u,\n 0x21228880u,  0x81288888u,  0x81288088u,  0x21228888u,  0x21228880u,  0x81288888u,  0x81288088u,  0x21228888u,  0x21228880u,  0x81288888u,  0x81288808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82000000u,\n 0x82288000u,  0x02808000u,  0x82800008u,  0x82208080u,  0x82288000u,  0x02808000u,  0x82800008u,  0x82208080u,  0x82288000u,  0x02808000u,  0x82800000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08000000u,\n 0x82333333u,  0x92229333u,  0x30333333u,  0x33333333u,  0x33333333u,  0x33333333u,  0x33999333u,  0x33333333u,  0x33333333u,  0x33333333u,  0x33999823u,  0x33233339u,  0x98333933u,  0x39888333u,  0x33099823u,  0x33339929u,  0x98233333u,  0x33333333u,  0x33333333u,  0x33333333u,  0x33399933u,  0x33333333u,  0x33333333u,  0x33333333u,  0x33333333u,  0x39222933u,  0x33099823u,  0x33233339u,  0x98000000u,\n 0x89233999u,  0x88993333u,  0x30310800u,  0x00800008u,  0x00008000u,  0x08000080u,  0x01993800u,  0x00800008u,  0x00008000u,  0x08000080u,  0x01999908u,  0x89923399u,  0x98999339u,  0x98899993u,  0x33099908u,  0x89999929u,  0x98931080u,  0x00080000u,  0x80000800u,  0x00800008u,  0x00199380u,  0x00080000u,  0x80000800u,  0x00800008u,  0x00123399u,  0x98899333u,  0x33099908u,  0x89923399u,  0x98000000u,\n 0x82223988u,  0x82933233u,  0x30310120u,  0x00120001u,  0x20089300u,  0x01200812u,  0x01930120u,  0x00120001u,  0x20081200u,  0x01200812u,  0x01299990u,  0x08222339u,  0x98293398u,  0x88828883u,  0x33093390u,  0x08829929u,  0x98231012u,  0x00012000u,  0x12008930u,  0x00120081u,  0x20193012u,  0x00012000u,  0x12008120u,  0x00120081u,  0x20122398u,  0x88293323u,  0x33029990u,  0x08222339u,  0x98000000u,\n 0x8aba9888u,  0xb933ba33u,  0x30300228u,  0x00228002u,  0x28003210u,  0x02280022u,  0x80310228u,  0x00228002u,  0x28002280u,  0x02280022u,  0x80399929u,  0x90899239u,  0x98933988u,  0x8333abb3u,  0x33033999u,  0x90839929u,  0x98b30022u,  0x80022800u,  0x22800321u,  0x00228002u,  0x28031022u,  0x80022800u,  0x22800228u,  0x00228002u,  0x280aa988u,  0x8b933bb3u,  0x33039929u,  0x90899239u,  0x98000000u,\n 0x83998833u,  0x93333333u,  0x30300080u,  0x80888080u,  0x88001100u,  0x00800008u,  0x00310080u,  0x00880000u,  0x80008800u,  0x00800008u,  0x00399933u,  0x39088329u,  0x98399883u,  0x93333333u,  0x33033333u,  0x99088939u,  0x98330008u,  0x08088808u,  0x08800110u,  0x00080000u,  0x80031008u,  0x00088000u,  0x08000880u,  0x00080000u,  0x80099883u,  0x39333333u,  0x33039933u,  0x39088329u,  0x98000000u,\n 0x89888223u,  0x33222233u,  0x30320008u,  0x08888808u,  0x88000100u,  0x00000000u,  0x01300000u,  0x00000000u,  0x00880800u,  0x00000000u,  0x01399933u,  0x33900839u,  0x98988833u,  0x39333223u,  0x33033333u,  0x39900839u,  0x98932000u,  0x80888880u,  0x88800010u,  0x00000000u,  0x00130000u,  0x00000000u,  0x00088080u,  0x00000000u,  0x00188822u,  0x33322223u,  0x33039933u,  0x33900839u,  0x98000000u,\n 0x88889abau,  0xba999933u,  0x30322000u,  0x88880800u,  0x08800000u,  0x00000000u,  0x01310000u,  0x00000000u,  0x00888000u,  0x00000000u,  0x009999aau,  0xcca99089u,  0x98888333u,  0xbbaabaa3u,  0x330999aau,  0xaaa99089u,  0x98832200u,  0x08888080u,  0x00880000u,  0x00000000u,  0x00131000u,  0x00000000u,  0x00088800u,  0x00000000u,  0x000889a1u,  0x03399993u,  0x330999bau,  0xbba99089u,  0x98000000u,\n 0x08993333u,  0x22332399u,  0x30381008u,  0x80800000u,  0x00000000u,  0x00000000u,  0x00310000u,  0x00000000u,  0x00080800u,  0x00000000u,  0x00333322u,  0x22233988u,  0x90899333u,  0x32233239u,  0x93033322u,  0x22233988u,  0x90838100u,  0x88080000u,  0x00000000u,  0x00000000u,  0x00031000u,  0x00000000u,  0x00008080u,  0x00000000u,  0x00099333u,  0x32233239u,  0x93033322u,  0x22233988u,  0x90000000u,\n 0x09999333u,  0x33333333u,  0x30310000u,  0x08000000u,  0x00000000u,  0x00000000u,  0x00300000u,  0x00000000u,  0x00008000u,  0x00000000u,  0x00333333u,  0x33333333u,  0x30999933u,  0x33333333u,  0x33033333u,  0x33333333u,  0x30931000u,  0x00800000u,  0x00000000u,  0x00000000u,  0x00030000u,  0x00000000u,  0x00000800u,  0x00000000u,  0x00099933u,  0x33333333u,  0x33033333u,  0x33333333u,  0x30000000u,\n 0x08888800u,  0x88880088u,  0x30310000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00310000u,  0x08000000u,  0x00000000u,  0x00000000u,  0x03888008u,  0x80088808u,  0x30888880u,  0x08888008u,  0x83088008u,  0x80088808u,  0x30831000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00031000u,  0x00800000u,  0x00000000u,  0x00000000u,  0x00388880u,  0x08888008u,  0x83088008u,  0x80088808u,  0x30000000u,\n 0x023333ddu,  0xdddbdb99u,  0x90300000u,  0x00000000u,  0x00000000u,  0x08080000u,  0x01310000u,  0x80008880u,  0x00000000u,  0x00000000u,  0x03bbbacau,  0xbabab922u,  0x902bddbbu,  0xbba33339u,  0x99033333u,  0xbabaa922u,  0x90230000u,  0x00000000u,  0x00000000u,  0x00808000u,  0x00131000u,  0x08000888u,  0x00000000u,  0x00000000u,  0x003bdbb0u,  0x03232aa9u,  0x990ababbu,  0xaaaa8922u,  0x90000000u,\n 0x02229999u,  0x99999999u,  0x90310000u,  0x00000000u,  0x00000008u,  0x88808080u,  0x00310000u,  0x00088808u,  0x00000000u,  0x00000000u,  0x13999999u,  0x99999029u,  0x90222999u,  0x99999999u,  0x99099999u,  0x99999029u,  0x90231000u,  0x00000000u,  0x00000000u,  0x88880808u,  0x00031000u,  0x00008880u,  0x80000000u,  0x00000000u,  0x01322999u,  0x99999999u,  0x99099999u,  0x99999029u,  0x90000000u,\n 0x89888999u,  0x99999933u,  0x90300800u,  0x00800008u,  0x00008000u,  0x88080880u,  0x01300800u,  0x00808008u,  0x00008000u,  0x08000080u,  0x01999999u,  0x99900899u,  0x98988899u,  0x99999993u,  0x39099999u,  0x99900899u,  0x98930080u,  0x00080000u,  0x80000800u,  0x08808088u,  0x00130080u,  0x00080800u,  0x80000800u,  0x00800008u,  0x00188899u,  0x99999993u,  0x39099999u,  0x99900899u,  0x98000000u,\n 0x82998822u,  0x22222233u,  0x30308120u,  0x00930081u,  0x20081200u,  0x01208812u,  0x01308120u,  0x00120081u,  0x20081200u,  0x01200812u,  0x00222222u,  0x29088229u,  0x98299882u,  0x22222223u,  0x33022222u,  0x29088229u,  0x98230812u,  0x00093008u,  0x12008120u,  0x00120881u,  0x20130812u,  0x00012008u,  0x12008120u,  0x00120081u,  0x20099882u,  0x22222223u,  0x33022222u,  0x29088229u,  0x98000000u,\n 0x0a339888u,  0xaaaaaa33u,  0x30318228u,  0x00321082u,  0x28002280u,  0x02280028u,  0x13918228u,  0x00228082u,  0x28002280u,  0x02280022u,  0x81333339u,  0x90833339u,  0x90333988u,  0x83333333u,  0x33033339u,  0x908baac9u,  0x90331822u,  0x80032108u,  0x22800228u,  0x00228002u,  0x81391822u,  0x80022808u,  0x22800228u,  0x00228002u,  0x281aa988u,  0x83833333u,  0x33033339u,  0x90833339u,  0x90000000u,\n 0x0a333988u,  0x8aaacc33u,  0x30311080u,  0x00110000u,  0x80000800u,  0x08800180u,  0x13911080u,  0x00880000u,  0x80000800u,  0x08800108u,  0x11333390u,  0x08333339u,  0x90333398u,  0x88333333u,  0x33033390u,  0x083bdbb9u,  0x90a31108u,  0x00011000u,  0x08000080u,  0x00880018u,  0x01391108u,  0x00088000u,  0x08000080u,  0x00880010u,  0x811bbb98u,  0x88293323u,  0x33033390u,  0x08333339u,  0x90000000u,\n 0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22000000u,\n 0x82288000u,  0x02808000u,  0x82800008u,  0x82208080u,  0x82288000u,  0x02808000u,  0x82800008u,  0x82208080u,  0x82288000u,  0x02808000u,  0x82800000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08228800u,  0x00280800u,  0x08280000u,  0x88220808u,  0x08000000u,\n 0x21228880u,  0x81288888u,  0x81288088u,  0x21228888u,  0x21228880u,  0x81288888u,  0x81288088u,  0x21228888u,  0x21228880u,  0x81288888u,  0x81288808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82122888u,  0x08128888u,  0x88128808u,  0x82122888u,  0x82000000u,\n 0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22222222u,  0x22000000u,\n 0x33333333u,  0x33339999u,  0x93333333u,  0x33333333u,  0x33333333u,  0x33339999u,  0x93333333u,  0x33333333u,  0x33333333u,  0x33339999u,  0x93333333u,  0x33333333u,  0x33333333u,  0x33333999u,  0x99333333u,  0x33333333u,  0x33333333u,  0x33333999u,  0x99333333u,  0x33333333u,  0x33333333u,  0x33333999u,  0x99333333u,  0x33333333u,  0x33333333u,  0x33333999u,  0x99333333u,  0x33333333u,  0x33000000u,\n 0x00008000u,  0x00000000u,  0x00880000u,  0x00008888u,  0x00008000u,  0x00000000u,  0x00880000u,  0x00008888u,  0x00008000u,  0x00000000u,  0x00888000u,  0x00000888u,  0x80000800u,  0x00000000u,  0x00088000u,  0x00000888u,  0x80000800u,  0x00000000u,  0x00088000u,  0x00000888u,  0x80000800u,  0x00000000u,  0x00088000u,  0x00000888u,  0x80000800u,  0x00000000u,  0x00088000u,  0x00000888u,  0x80000000u\n);\nvec3 pal[] = vec3[](\nvec3(0.47,0.41,0.22), vec3(0.69,0.63,0.38), vec3(0.25,0.19,0.06), vec3(0.19,0.13,0.03)\n, vec3(0.53,0.38,0.13), vec3(0.69,0.56,0.28), vec3(0.38,0.25,0.09), vec3(0.88,0.82,0.53)\n, vec3(0.35,0.28,0.13), vec3(0.16,0.09,0.00), vec3(0.66,0.66,0.56), vec3(0.63,0.63,0.53)\n, vec3(0.69,0.69,0.60), vec3(0.60,0.60,0.50));\n\n//int zy = int(floor((iResolution.y - fragCoord.y -46.0) / zoom)) ;\n  int zy = int(floor((iResolution.y - fragCoord.y -0.0  ) / zoom))- 32 ;\n  \n        // make it repeat...\n        //% (xy.length() / 12);\n \n    if (zy < 0)\n        return;\n   if (zy >= (xy.length() / (cw/8)))\n    return ;\n    \n    \n    //int xoffset = 0;\n   // int xoffset = 8 + int(iTime * 20.0);\n    int zx =  ( (int((fragCoord.x -000.0 ) / zoom) ) + xoffset)\n    % 226\n        //% (xy.length() /32) ;\n        //% (xy.length() / 2) \n        ;\n    \n    if (zx < 0)\n        return  ;\n    \n    if (zx >= (8 * (cw/8)))\n    return ;\n    \n    int i = (zx % (8 * xy.length())) / 8;\n    \n    if (zy > 0)\n    {\n        i += (cw/8) * zy;\n    }\n       \n    int x = 7 - (zx % 8); // fixup lsb \n    \n    int ii = int ((xy[i] >> (4 * x)) & (0xfu ));\n        \n    //if (ii>0) // shades of black? reorder pal?\n\n        fragColor.rgb = pal[ii] ;\n    \n    \n    \n}\n\n\n\nvoid player1(inout vec4 fragColor, in vec2 fragCoord, in int xoffset )\n{\nint cw = 296; // { cw = 296, Width = 290, Height = 41 }\nconst uint xy[] = uint[](\n 0x00000000u,  0x00000000u,  0x00110000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00110000u,  0x00000000u,  0x00000000u,  0x00000001u,  0x10000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00110000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00110000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x11100000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x11000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000110u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000011u,  0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000111u,  0x11221000u,  0x00000000u,  0x00000000u,  0x00000111u,  0x11221100u,  0x00000000u,  0x00000000u,  0x00111112u,  0x21000000u,  0x00000000u,  0x00000000u,  0x00000111u,  0x11221000u,  0x00000000u,  0x00000000u,  0x00000111u,  0x11221100u,  0x00000000u,  0x00000000u,  0x00001111u,  0x32211000u,  0x00000000u,  0x00000000u,  0x00011111u,  0x22100000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x11111221u,  0x10000000u,  0x00000000u,  0x00000000u,  0x01111122u,  0x11000000u,  0x00000000u,\n 0x00000000u,  0x00011332u,  0x22321100u,  0x00000000u,  0x00000000u,  0x00011332u,  0x22321310u,  0x00000000u,  0x00000000u,  0x11332223u,  0x21000000u,  0x00000000u,  0x00000000u,  0x00011332u,  0x22321100u,  0x00000000u,  0x00000000u,  0x00011332u,  0x22323310u,  0x00000000u,  0x00000000u,  0x00113322u,  0x23233100u,  0x00000000u,  0x00000000u,  0x01133222u,  0x32100000u,  0x00000000u,  0x00000000u,  0x00000011u,  0x33222321u,  0x31000000u,  0x00000000u,  0x00000001u,  0x13322232u,  0x33100000u,  0x00000000u,\n 0x00000000u,  0x00133221u,  0x11332310u,  0x00000000u,  0x00000000u,  0x00133221u,  0x11332100u,  0x00000000u,  0x00000001u,  0x33221111u,  0x31000000u,  0x00000000u,  0x00000000u,  0x00133221u,  0x11332310u,  0x00000000u,  0x00000000u,  0x00133221u,  0x11132100u,  0x00000000u,  0x00000000u,  0x01332211u,  0x11111000u,  0x00000000u,  0x00000000u,  0x13322111u,  0x13100000u,  0x00000000u,  0x00000000u,  0x00000133u,  0x22111332u,  0x10000000u,  0x00000000u,  0x00000013u,  0x32211113u,  0x21000000u,  0x00000000u,\n 0x00000000u,  0x00132114u,  0x44111100u,  0x00000000u,  0x00000000u,  0x00132114u,  0x44111000u,  0x00000000u,  0x00000001u,  0x32114441u,  0x13100000u,  0x00000000u,  0x00000000u,  0x00132114u,  0x44111100u,  0x00000000u,  0x00000000u,  0x00132114u,  0x44411000u,  0x00000000u,  0x00000000u,  0x01321144u,  0x44100000u,  0x00000000u,  0x00000000u,  0x13211444u,  0x11310000u,  0x00000000u,  0x00000000u,  0x00000132u,  0x11444111u,  0x00000000u,  0x00000000u,  0x00000013u,  0x21144441u,  0x10000000u,  0x00000000u,\n 0x00000000u,  0x01331544u,  0x44410000u,  0x00000000u,  0x00000000u,  0x01331544u,  0x44410000u,  0x00000000u,  0x00000013u,  0x31544444u,  0x11000000u,  0x00000000u,  0x00000000u,  0x01331544u,  0x44410000u,  0x00000000u,  0x00000000u,  0x01331544u,  0x44410000u,  0x00000000u,  0x00000000u,  0x13315444u,  0x44100000u,  0x00000000u,  0x00000001u,  0x33154444u,  0x41100000u,  0x00000000u,  0x00000000u,  0x00001331u,  0x54444410u,  0x00000000u,  0x00000000u,  0x00000133u,  0x15444441u,  0x00000000u,  0x00000000u,\n 0x00000000u,  0x01315551u,  0x16710000u,  0x00000000u,  0x00000000u,  0x01315551u,  0x16710000u,  0x00000000u,  0x00000013u,  0x15551767u,  0x10000000u,  0x00000000u,  0x00000000u,  0x01315551u,  0x16710000u,  0x00000000u,  0x00000000u,  0x01315551u,  0x16710000u,  0x00000000u,  0x00000000u,  0x13155511u,  0x67100000u,  0x00000000u,  0x00066601u,  0x31555176u,  0x71000000u,  0x00000000u,  0x00000000u,  0x00001315u,  0x55116710u,  0x00000000u,  0x00000000u,  0x00000131u,  0x55511671u,  0x00000000u,  0x00000000u,\n 0x00000000u,  0x01151118u,  0x81891000u,  0x00000000u,  0x00000000u,  0x01151118u,  0x81891000u,  0x00000006u,  0x66600011u,  0x51118818u,  0x91000000u,  0x00000000u,  0x00000000u,  0x01151118u,  0x81891000u,  0x00000000u,  0x00066666u,  0x01151118u,  0x81891000u,  0x00000000u,  0x00666660u,  0x11511188u,  0x18910000u,  0x00000000u,  0x06645561u,  0x15111881u,  0x89100000u,  0x00000000u,  0x00000066u,  0x66001151u,  0x11881891u,  0x00000000u,  0x00000006u,  0x66600115u,  0x11188189u,  0x10000000u,  0x00000000u,\n 0x00066660u,  0x06118189u,  0x98884100u,  0x00000000u,  0x00066660u,  0x06118189u,  0x98884100u,  0x00000064u,  0x55a66061u,  0x18189988u,  0x84100000u,  0x00000000u,  0x00066660u,  0x06118189u,  0x98884100u,  0x00000000u,  0x006455bbu,  0x61118189u,  0x98884100u,  0x00000000u,  0x06455bb6u,  0x61181899u,  0x88841000u,  0x00000000u,  0x655bbba6u,  0x11818998u,  0x88410000u,  0x00000000u,  0x00000655u,  0x55666118u,  0x18998884u,  0x10000000u,  0x00000064u,  0x55566c11u,  0x81899888u,  0x41000000u,  0x00000000u,\n 0x006455b6u,  0x6cc18788u,  0x99711000u,  0x00000000u,  0x006455b6u,  0x6cc18788u,  0x99711000u,  0x00000065u,  0xbbaaa6ccu,  0x18788987u,  0x11000000u,  0x00000000u,  0x006455b6u,  0x6cc18788u,  0x99711000u,  0x00000000u,  0x065bbb66u,  0xcc118788u,  0x99711000u,  0x00000000u,  0x655bbb66u,  0xcc187889u,  0x97110000u,  0x00000000u,  0x65bbbaa6u,  0xc1878898u,  0x71100000u,  0x00000000u,  0x00006bb4u,  0xabba6c18u,  0x78899711u,  0x00000000u,  0x00000655u,  0xbbbb6cc1u,  0x87889971u,  0x10000000u,  0x00000000u,\n 0x0655bbb6u,  0xcddc6178u,  0x88810000u,  0x00000000u,  0x065bbb6du,  0xdddc6178u,  0x88810000u,  0x00000065u,  0xbbaa6dddu,  0xc6178888u,  0x10000000u,  0x00000000u,  0x0655bbb6u,  0xcddc6178u,  0x88810000u,  0x00000000u,  0x065bb6cdu,  0xddc11178u,  0x88810000u,  0x00000000u,  0x65bbb6ddu,  0xddc11788u,  0x88100000u,  0x00000000u,  0x65bbba6cu,  0xdc617888u,  0x81000000u,  0x00000000u,  0x00006bb5u,  0xabba6cc6u,  0x17888810u,  0x00000000u,  0x0000065bu,  0xbbb6cdccu,  0x61788881u,  0x00000000u,  0x00000000u,\n 0x065bbb6cu,  0xddddc678u,  0x75410000u,  0x00000000u,  0x065bb6ddu,  0xdcccc678u,  0x87410000u,  0x00000006u,  0xaab6dddcu,  0x11678754u,  0x10000000u,  0x00000000u,  0x065bbb6cu,  0xddddc678u,  0x75410000u,  0x00000000u,  0x06bb6dddu,  0xdccc1178u,  0x88710000u,  0x00000000u,  0x6bbb6cddu,  0xdccc1788u,  0x97100000u,  0x00000000u,  0x06bba6cdu,  0xddc67875u,  0x41000000u,  0x00000000u,  0x000006b5u,  0xabb6ccddu,  0x67887410u,  0x00000000u,  0x0000006au,  0xaa6cddddu,  0xc6788871u,  0x00000000u,  0x00000000u,\n 0x065bb6cdu,  0xd111c617u,  0x86660000u,  0x00000000u,  0x06bb6dc6u,  0x611cc117u,  0x88660000u,  0x00000006u,  0xbb6cddc1u,  0x88617866u,  0x60000000u,  0x00000000u,  0x065bb6cdu,  0xd111c617u,  0x86660000u,  0x00000000u,  0x0066cdd6u,  0x116cc117u,  0x88910000u,  0x00000000u,  0x06aa6ddcu,  0xc1166178u,  0x98100000u,  0x00000000u,  0x06aaa6cdu,  0xdc161786u,  0x66000000u,  0x00000000u,  0x000006a5u,  0xabb6cdd1u,  0x11788660u,  0x00000000u,  0x0000065bu,  0xb6ccddd1u,  0x1c178891u,  0x00000000u,  0x00000000u,\n 0x006aa6cdu,  0x18871c61u,  0x78910000u,  0x00000000u,  0x006a6d61u,  0x7771cc11u,  0x78910000u,  0x0000006bu,  0xbb6ddc18u,  0x94961789u,  0x10000000u,  0x00000000u,  0x006aa6cdu,  0x18871c61u,  0x78910000u,  0x00000000u,  0x0066dc61u,  0x7716c111u,  0x78810000u,  0x00000000u,  0x06b6cdccu,  0x17716617u,  0x88100000u,  0x00000000u,  0x65bb6cddu,  0xc1886178u,  0x91000000u,  0x00000000u,  0x00006b5au,  0xaa6cdd17u,  0x77178910u,  0x00000000u,  0x0000065bu,  0xb6ccdd17u,  0x71c17881u,  0x00000000u,  0x00000000u,\n 0x006b6cddu,  0x194971c1u,  0x17710000u,  0x00000000u,  0x006b6c17u,  0x9491cc11u,  0x17710000u,  0x00000065u,  0xb6cdcc18u,  0x99971771u,  0x00000000u,  0x00000000u,  0x006b6cddu,  0x194971c1u,  0x17710000u,  0x00000000u,  0x06b6dc18u,  0x4976cc11u,  0x77100000u,  0x00000000u,  0x65b6ddc1u,  0x78491611u,  0x77100000u,  0x00000000u,  0x65bb6cdcu,  0x18949177u,  0x10000000u,  0x00000000u,  0x00006b5au,  0xbb6cd179u,  0x49117710u,  0x00000000u,  0x000065bbu,  0x6ccdd184u,  0x976c1771u,  0x00000000u,  0x00000000u,\n 0x065b6cd1u,  0x899976c1u,  0x51100000u,  0x00000000u,  0x065b6c17u,  0x99971c14u,  0x11100000u,  0x0000065bu,  0xb6cdcc17u,  0x99871110u,  0x00000000u,  0x00000000u,  0x065b6cd1u,  0x899976c1u,  0x51100000u,  0x00000000u,  0x0656cc18u,  0x9981cc11u,  0x11100000u,  0x00000000u,  0x6b6cdcc1u,  0x789976b1u,  0x11000000u,  0x00000000u,  0x65ba6cdcu,  0x18999711u,  0x00000000u,  0x00000000u,  0x0006b5abu,  0xb6ccd179u,  0x99711100u,  0x00000000u,  0x000065bbu,  0x6ccdd189u,  0x981c1110u,  0x00000000u,  0x00000000u,\n 0x06b6cdc1u,  0x78987115u,  0x4c110000u,  0x00000000u,  0x0656cc18u,  0x89871c14u,  0x5c110000u,  0x0000065bu,  0xb6cddc17u,  0x78771510u,  0x00000000u,  0x00000000u,  0x06b6cdc1u,  0x78987115u,  0x4c110000u,  0x00000000u,  0x6b6ccc18u,  0x9881cc15u,  0x1c100000u,  0x00000006u,  0xba6cdcc1u,  0x78987651u,  0xc1100000u,  0x00000006u,  0xabb6cdccu,  0x17998711u,  0x00000000u,  0x00000000u,  0x0006a5abu,  0xb6ccd188u,  0x98710000u,  0x00000000u,  0x0006bbb6u,  0xccdcc189u,  0x881c1000u,  0x00000000u,  0x00000000u,\n 0x6bb6cdc1u,  0x77887115u,  0x4c110000u,  0x00000000u,  0x65b6cc17u,  0x88871c14u,  0x4c110000u,  0x000006aau,  0x6cdcdc17u,  0x88871511u,  0x00006000u,  0x00000000u,  0x6bb6cdc1u,  0x77887115u,  0x4c110000u,  0x00000000u,  0x6b6cc178u,  0x8871c144u,  0x1c110000u,  0x00000006u,  0xbb6dccc1u,  0x78871141u,  0xc1100000u,  0x00000006u,  0x5aa6cdccu,  0x1778771cu,  0x10000000u,  0x00000000u,  0x00065aaau,  0xa6cdd178u,  0x88710000u,  0x00000000u,  0x0006aaa6u,  0xccdc1788u,  0x871c1000u,  0x00000000u,  0x00000000u,\n 0x6aa6ccc1u,  0x78887155u,  0xc1786000u,  0x00000000u,  0x6aa6dc18u,  0x88711115u,  0x1c671000u,  0x000006bbu,  0x6cdcccc1u,  0x78777118u,  0x11066600u,  0x00000000u,  0x6aa6ccc1u,  0x78887155u,  0xc1786000u,  0x00000000u,  0x6b6dc178u,  0x8871c141u,  0xc6710000u,  0x00000006u,  0xb6ccccc1u,  0x78871b1cu,  0x17100000u,  0x00000006u,  0x5bb6ccccu,  0x1788871cu,  0x10000060u,  0x00000000u,  0x00065abbu,  0x6ccdc188u,  0x87110000u,  0x06000000u,  0x0006bbb6u,  0xcdcc1788u,  0x87110000u,  0x00000000u,  0x00000000u,\n 0x6b6cccccu,  0x17888711u,  0x11776600u,  0x00000000u,  0x6bb6dc17u,  0x88871155u,  0x1c666000u,  0x000006bau,  0x6cccccc1u,  0x78998711u,  0x766ab560u,  0x00000000u,  0x6b6cccccu,  0x17888711u,  0x11776600u,  0x00000000u,  0x66cdc178u,  0x88871151u,  0xc6671000u,  0x00000000u,  0x6cccccc1u,  0x7888711cu,  0x17660000u,  0x00000006u,  0xbb6cccccu,  0xc1787771u,  0x10000666u,  0x00000000u,  0x00065abbu,  0x6ccdc178u,  0x88711000u,  0x06660000u,  0x0006bbb6u,  0xcdcc1788u,  0x88710000u,  0x66000000u,  0x00000000u,\n 0x6b6cccccu,  0x1789987bu,  0xb166ab66u,  0x00000000u,  0x6b6ccdc1u,  0x89987b11u,  0x66ab5660u,  0x00000066u,  0x66ccccccu,  0x198898bbu,  0x1166aa56u,  0x00000000u,  0x6b6cccccu,  0x1789987bu,  0xb166ab66u,  0x00000000u,  0x06ccdc17u,  0x8987b116u,  0x6ab66600u,  0x00000000u,  0x06ccccc1u,  0x78988811u,  0x66ab6660u,  0x00000000u,  0x666cccccu,  0xc1789987u,  0x11066ab5u,  0x60000000u,  0x00006666u,  0xccccdc18u,  0x9987b116u,  0x6ab56600u,  0x00006666u,  0xccccc178u,  0x987b1166u,  0xab666000u,  0x00000000u,\n 0x0666ccccu,  0xc198998bu,  0xb8876ab5u,  0x60000000u,  0x066cccc1u,  0x98998bb8u,  0x876aabb6u,  0x00000000u,  0x006666ccu,  0xc1888abau,  0x88916aabu,  0x60000000u,  0x0666ccccu,  0xc198998bu,  0xb8876ab5u,  0x60000000u,  0x006ccc17u,  0x8998bba8u,  0x77ab5b66u,  0x00000000u,  0x006cccccu,  0x18998bbau,  0x8876b5b6u,  0x66000000u,  0x00a666ccu,  0xcc198898u,  0xbb1166aau,  0x56000000u,  0x000006ccu,  0xddcccc19u,  0x8998bb88u,  0x76aabb60u,  0x00000000u,  0x666cc178u,  0x998bba87u,  0x7ab5b660u,  0x00000000u,\n 0x0000666cu,  0xcc1788abu,  0xa88916aau,  0xb6600000u,  0x00066cccu,  0x1788aba8u,  0x8976aaabu,  0x60000000u,  0x006abb66u,  0x6617aaa8u,  0x89716aaau,  0xb6000000u,  0x0000666cu,  0xcc1788abu,  0xa88916aau,  0xb6600000u,  0x00666cc1u,  0x778abaa8u,  0x977aaabbu,  0x66000000u,  0x06a666ccu,  0x17788baau,  0x88976aabu,  0xbb660000u,  0x06bbbb66u,  0x6cc1888au,  0xba88916au,  0xab600000u,  0x00006a66u,  0x66ddccc1u,  0x788aba88u,  0x976aaab6u,  0x00000000u,  0x6ab66617u,  0x78abaa89u,  0x77aaabb6u,  0x60000000u,\n 0x000006a6u,  0x66611aaau,  0x889716aau,  0xabb60000u,  0x00006666u,  0x611aaaa8u,  0x8976aaaau,  0xb6600000u,  0x006a5bbbu,  0x55516a88u,  0x887186aau,  0xab600000u,  0x0006ba56u,  0x66611aaau,  0x889716aau,  0xabb60000u,  0x006ab666u,  0x11aaaa88u,  0x897aaaaau,  0xb5600000u,  0x06abb566u,  0x6117aaa8u,  0x88977aaau,  0xaa560000u,  0x065b6b55u,  0x566617aau,  0xa889716au,  0xaab60000u,  0x00006abbu,  0xb56666ccu,  0x11aaaa88u,  0x976aaaabu,  0x66000000u,  0x6a5bb551u,  0x1aaaa888u,  0x97aaaaabu,  0x56000000u,\n 0x00006bb6u,  0x6666a668u,  0x8887186au,  0xaaab6000u,  0x0006bb55u,  0xbaa66a88u,  0x88118aaau,  0xab560000u,  0x006a5bb5u,  0xbb555618u,  0x8717116au,  0xaab60000u,  0x0006ba5bu,  0x55555668u,  0x8887186au,  0xaaab6000u,  0x006a5bbbu,  0xb666a888u,  0x88186aaau,  0xab600000u,  0x06a5bbbbu,  0x5bb66aa8u,  0x88817666u,  0xaab60000u,  0x0656bbb5u,  0x55ba616au,  0x88887186u,  0xaaab6000u,  0x00006bbbu,  0x55555a66u,  0x6b66a888u,  0x8118aaaau,  0xb5600000u,  0x6a5bbbbbu,  0x566a8888u,  0x8186aaaau,  0xb6000000u,\n 0x00006bb5u,  0x55bb6aa1u,  0x11817116u,  0xaaaa5600u,  0x0006b555u,  0x55b66111u,  0x1817166au,  0xaab60000u,  0x006ba5bbu,  0xb55ab561u,  0x11110006u,  0xaaa56000u,  0x00065ba5u,  0xbbbb5b51u,  0x11817116u,  0xaaaa5600u,  0x006a5bbbu,  0xbb551111u,  0x88716666u,  0xab600000u,  0x06a5bbb5u,  0x55555111u,  0x18871600u,  0x66600000u,  0x0065bb5bu,  0xb55a66a6u,  0x18871711u,  0x6aaab600u,  0x000065b5u,  0xbb555b6bu,  0xbb5b1111u,  0x817166aau,  0xab600000u,  0x6babbb5bu,  0xb5511118u,  0x8716666au,  0xb6000000u,\n 0x00006bbbu,  0x5555565bu,  0x66111000u,  0x66aab600u,  0x0006b555u,  0x5555b666u,  0x11110006u,  0xab600000u,  0x0006babbu,  0xbbab5556u,  0x66000000u,  0x6ab66000u,  0x00006bbau,  0xbbb5b5abu,  0x66111000u,  0x66aab600u,  0x0065a5bbu,  0xbbb5554au,  0x11100000u,  0x66000000u,  0x006a5bbbu,  0x55555666u,  0x11110000u,  0x00000000u,  0x006ab555u,  0x555b6abbu,  0x61111100u,  0x06aaa560u,  0x000065abu,  0xbbb55b6bu,  0xbbbb5661u,  0x1110006au,  0xb6000000u,  0x06abbbb5u,  0x555b6611u,  0x11000006u,  0x60000000u,\n 0x00006bb5u,  0xb555556au,  0xb66a0000u,  0x006b6000u,  0x0006bb55u,  0x55555b66u,  0x6ba00000u,  0x66000000u,  0x000066abu,  0xbba6a5b5u,  0x5a000000u,  0x06660000u,  0x000006abu,  0x6abbbab5u,  0x5665a000u,  0x006b6000u,  0x0006babbu,  0xbb5bb555u,  0xa0000000u,  0x00000000u,  0x00066aabu,  0xb555554au,  0x66000000u,  0x00000000u,  0x0006bbb5u,  0x555b6abbu,  0xb6660000u,  0x006ab660u,  0x000006abu,  0xbbb5556bu,  0xbabbbb66u,  0x00000006u,  0x60000000u,  0x066aabbbu,  0xbbb55566u,  0x00000000u,  0x00000000u,\n 0x000006abu,  0xbbb5456au,  0xbb5ba000u,  0x00060000u,  0x00006bb5u,  0xbb54556bu,  0x55a00000u,  0x00000000u,  0x00006a66u,  0x66666655u,  0xa0000000u,  0x00000000u,  0x000006aau,  0x6666aaa5u,  0xb55a0000u,  0x00060000u,  0x0006666au,  0xbaab5555u,  0xa0000000u,  0x00000000u,  0x0000066au,  0xab55555au,  0x00000000u,  0x00000000u,  0x00006bb5u,  0x555b666bu,  0x5a000000u,  0x00066600u,  0x66600066u,  0xbbbb556au,  0xabbbbb5au,  0x00000000u,  0x00000000u,  0x0066aaaau,  0xa5555500u,  0x00000000u,  0x00000000u,\n 0x0000006au,  0xa555556au,  0xab55a000u,  0x00000000u,  0x00006aaau,  0xb555556bu,  0x55a00000u,  0x00000000u,  0x0006aaaau,  0x666abb66u,  0xa0000000u,  0x00000000u,  0x000066bau,  0xa66666bbu,  0xbbba0000u,  0x00000000u,  0x0006b6a6u,  0xaaab5b55u,  0xa0000000u,  0x00000000u,  0x00006666u,  0x6abbb55au,  0x00000000u,  0x00000000u,  0x00006ab5u,  0x554b6ab6u,  0x6a000000u,  0x00000000u,  0x65566655u,  0xaabb556au,  0xabbbba6au,  0x00000000u,  0x00000000u,  0x006a666au,  0xb55b5500u,  0x00000000u,  0x00000000u,\n 0x0000006bu,  0xb5555b66u,  0xaab5a000u,  0x00000000u,  0x000006abu,  0x5555bb6bu,  0xb5a00000u,  0x00000000u,  0x0006baaau,  0xa6abb5b6u,  0x00000000u,  0x00000000u,  0x00065b6au,  0xa6a6006bu,  0xb6a60000u,  0x00000000u,  0x006ba66au,  0x66bbbb55u,  0xa0000000u,  0x00000000u,  0x00066666u,  0xbbb555b6u,  0x00000000u,  0x00000000u,  0x0006bbabu,  0x55b6abbbu,  0x60000000u,  0x00000000u,  0x65bbb65bu,  0x55bbb560u,  0xaabaa6aau,  0xa000aa00u,  0x00000000u,  0x006ba6a6u,  0x6bbb5a00u,  0x00000000u,  0x00000000u,\n 0x000006bbu,  0x5bb5bb6au,  0xabb5a000u,  0x00000000u,  0x000006bbu,  0x5666bb6au,  0xb5a00000u,  0x00000000u,  0x00666baau,  0xa6bb5560u,  0x00000000u,  0x00000000u,  0x0065bbaau,  0x6a600006u,  0x6abba000u,  0x00000000u,  0x006baa66u,  0xa6bbb55bu,  0xa0000000u,  0x00000000u,  0x0006ba6bu,  0xbb5b55a0u,  0x00000000u,  0x00000000u,  0x00066bb5u,  0x55baabb6u,  0x00000000u,  0x00000006u,  0x5bbaaa6bu,  0xbbbbb560u,  0x0aa66aabu,  0xbaaab600u,  0x00000000u,  0x06ba66aau,  0xa6bbba00u,  0x00000000u,  0x00000000u,\n 0x000006bbu,  0x6666b6abu,  0xbb55a000u,  0x00000000u,  0x00000066u,  0x6aaa6babu,  0x5a000000u,  0x00000000u,  0x66aa6bbbu,  0x6bbbbba0u,  0x00000000u,  0x00000000u,  0x6665baaau,  0xa6000000u,  0x6abb5a00u,  0x00000000u,  0x06baaaa6u,  0xa6abbbbau,  0x00000000u,  0x00000000u,  0x0006aa66u,  0x6bb55560u,  0x00000000u,  0x00000000u,  0x066bb655u,  0xb6aabbbau,  0x00000000u,  0x00000006u,  0x5ba66a6bu,  0xbbbb5600u,  0x0a66a6bbu,  0xbbbbb600u,  0x00000000u,  0x06ba6abbu,  0xb56aa000u,  0x00000000u,  0x00000000u,\n 0x00000666u,  0xaaa6666au,  0xbbb60000u,  0x00000000u,  0x0000006au,  0xaabb6abbu,  0xba000000u,  0x00000006u,  0xaaaaa666u,  0x0aaab55au,  0x00000000u,  0x00000066u,  0xbaa6bbb6u,  0x60000000u,  0x6bb555a0u,  0x00000000u,  0x06ba6666u,  0x66666a60u,  0x00000000u,  0x00000000u,  0x00006a6au,  0xa6b55600u,  0x00000000u,  0x00000000u,  0x6bbbbb66u,  0x60aaaabbu,  0xa0000000u,  0x00000006u,  0x5a600666u,  0x6bbb6000u,  0x000066bbu,  0xbbbb6000u,  0x00000000u,  0x6a66aaabu,  0x55600000u,  0x00000000u,  0x00000000u,\n 0x00006aaau,  0xaa666666u,  0x66600000u,  0x00000000u,  0x000006aau,  0xbba666abu,  0xa0000000u,  0x0000006au,  0xaaab6000u,  0x06666bb5u,  0x5a000000u,  0x0000006bu,  0xaab66660u,  0x00000000u,  0x6bbbb55au,  0xa0000000u,  0x6a660000u,  0x666abba0u,  0x00000000u,  0x00000000u,  0x0000066bu,  0xbb666000u,  0x00000000u,  0x00000006u,  0xbbbb5600u,  0x006666aau,  0xbaa00000u,  0x00000006u,  0xb6000000u,  0x66660000u,  0x000006bbu,  0xba660000u,  0x00000006u,  0xaaa6abb5u,  0x56000000u,  0x00000000u,  0x00000000u,\n 0x00006aabu,  0xa6006aaau,  0x60000000u,  0x00000000u,  0x000006abu,  0xbaa66666u,  0x00000000u,  0x00000006u,  0xaab60000u,  0x00000666u,  0x66000000u,  0x00000006u,  0xab560000u,  0x00000000u,  0x6666bbb5u,  0x5a000000u,  0x66000000u,  0x006abba0u,  0x00000000u,  0x00000000u,  0x000006bbu,  0xb5a00000u,  0x00000000u,  0x00000000u,  0x6bb56000u,  0x00000066u,  0x66600000u,  0x00000006u,  0x60000000u,  0x00000000u,  0x000006bau,  0x66000000u,  0x0000006au,  0xaab66bbbu,  0x5a000000u,  0x00000000u,  0x00000000u,\n 0x0006abbbu,  0xba6666aau,  0xb6000000u,  0x00000000u,  0x00006aabu,  0xb5b6a600u,  0x00000000u,  0x00000000u,  0x6a560000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x6a560000u,  0x00000000u,  0x00006666u,  0x66000000u,  0x00000000u,  0x006abb5au,  0x00000000u,  0x00000000u,  0x00006abbu,  0xb5a00000u,  0x00000000u,  0x00000000u,  0x06b56000u,  0x00000000u,  0x00000000u,  0x00000006u,  0x60000000u,  0x00000000u,  0x00000666u,  0x00000000u,  0x0000006au,  0xab60066bu,  0xb5a00000u,  0x00000000u,  0x00000000u,\n 0x0006aaabu,  0x5ba6aaabu,  0xb5600000u,  0x00000000u,  0x00006aaau,  0xbbbb6b60u,  0x00000000u,  0x00000000u,  0x06b60000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x6ab60000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x06abbbb5u,  0xaa000000u,  0x00000000u,  0x00006bbbu,  0xbb5aa000u,  0x00000000u,  0x00000000u,  0x006b6000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000066u,  0xaa560006u,  0x6b5a0000u,  0x00000000u,  0x00000000u,\n 0x000666aau,  0xbbb666aau,  0xbbba6000u,  0x00000000u,  0x0000666au,  0xaaaaa6b6u,  0x00000000u,  0x00000000u,  0x06ab6000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x06b60000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x06aaaaabu,  0x5ba00000u,  0x00000000u,  0x00006666u,  0xbbb55a00u,  0x00000000u,  0x00000000u,  0x006bb600u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x6aab6600u,  0x06660000u,  0x00000000u,  0x00000000u,\n 0x00000066u,  0x66600066u,  0x66666000u,  0x00000000u,  0x00000006u,  0x66666abbu,  0x60000000u,  0x00000000u,  0x00666000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x06ab6000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x06666666u,  0x66600000u,  0x00000000u,  0x00000000u,  0x66666600u,  0x00000000u,  0x00000000u,  0x00066600u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x06666600u,  0x00000000u,  0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000006u,  0x66666666u,  0x60000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00666000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u,  0x00000000u\n);\nvec3 pal[] = vec3[](\nvec3(0.00,0.00,0.00), vec3(0.26,0.13,0.00), vec3(1.00,0.90,0.29), vec3(0.90,0.61,0.16)\n, vec3(1.00,1.00,0.94), vec3(0.74,0.71,0.45), vec3(0.06,0.06,0.03), vec3(0.55,0.35,0.13)\n, vec3(0.84,0.65,0.35), vec3(1.00,0.94,0.58), vec3(0.23,0.19,0.06), vec3(0.45,0.42,0.23)\n, vec3(0.48,0.00,0.00), vec3(0.71,0.26,0.00));\n\n\n\n\n  //int zy = int(floor((iResolution.y - fragCoord.y -46.0) / zoom)) ;\n  int zy = int(floor((iResolution.y - fragCoord.y -0.0  ) / zoom))- 0 ;\n  \n        // make it repeat...\n        //% (xy.length() / 12);\n \n    if (zy < 0)\n        return;\n   if (zy >= (xy.length() / (cw/8)))\n    return ;\n    \n    \n    // int xoffset = 0;\n     \n   // int xoffset = 8 + int(iTime * 20.0);\n    int zx =  ( (int((fragCoord.x -000.0 ) / zoom) ) + xoffset)\n        //% (xy.length() /32) ;\n        % ( cw) \n        ;\n    \n    if (zx < 0)\n        return  ;\n    \n    if (zx >= (8 * (cw/8)))\n    return ;\n    \n    int i = (zx % (8 * xy.length())) / 8;\n    \n    if (zy > 0)\n    {\n        i += (cw/8) * zy;\n    }\n       \n    int x = 7 - (zx % 8); // fixup lsb \n    \n    int ii = int ((xy[i] >> (4 * x)) & (0xfu ));\n        \n    if (ii>0) // shades of black? reorder pal?\n\n        fragColor.rgb = pal[ii] ;\n}\n\n//void sky()\nvoid sky1(inout vec4 fragColor, in vec2 fragCoord, in int xoffset)\n{\nint cw = 16; // { cw = 16, Width = 16, Height = 109 }\nint ww = 16; //\nconst uint xy[] = uint[](\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000000u,  0x00000000u,\n 0x00000100u,  0x00000100u,\n 0x01000000u,  0x01000000u,\n 0x00010001u,  0x00010001u,\n 0x10100000u,  0x10100000u,\n 0x10001010u,  0x10001010u,\n 0x01010001u,  0x01010001u,\n 0x10101010u,  0x10101010u,\n 0x01010101u,  0x01010101u,\n 0x10101011u,  0x10101011u,\n 0x01110101u,  0x01110101u,\n 0x11101110u,  0x11101110u,\n 0x11011101u,  0x11011101u,\n 0x01111111u,  0x01111111u,\n 0x11111011u,  0x11111011u,\n 0x11111111u,  0x11111111u,\n 0x11111111u,  0x11111111u,\n 0x11111211u,  0x11111211u,\n 0x12111111u,  0x12111111u,\n 0x11121112u,  0x11121112u,\n 0x21211111u,  0x21211111u,\n 0x21112121u,  0x21112121u,\n 0x12121112u,  0x12121112u,\n 0x21212121u,  0x21212121u,\n 0x12121212u,  0x12121212u,\n 0x21212122u,  0x21212122u,\n 0x12221212u,  0x12221212u,\n 0x22212221u,  0x22212221u,\n 0x22122212u,  0x22122212u,\n 0x12222222u,  0x12222222u,\n 0x22222122u,  0x22222122u,\n 0x22222222u,  0x22222222u,\n 0x22222222u,  0x22222222u,\n 0x22222322u,  0x22222322u,\n 0x23222222u,  0x23222222u,\n 0x22232223u,  0x22232223u,\n 0x32322222u,  0x32322222u,\n 0x32223232u,  0x32223232u,\n 0x23232223u,  0x23232223u,\n 0x32323232u,  0x32323232u,\n 0x23232323u,  0x23232323u,\n 0x32323233u,  0x32323233u,\n 0x23332323u,  0x23332323u,\n 0x33323332u,  0x33323332u,\n 0x33233323u,  0x33233323u,\n 0x23333333u,  0x23333333u,\n 0x33333233u,  0x33333233u,\n 0x33333333u,  0x33333333u,\n 0x33333333u,  0x33333333u,\n 0x33333433u,  0x33333433u,\n 0x34333333u,  0x34333333u,\n 0x33343334u,  0x33343334u,\n 0x43433333u,  0x43433333u,\n 0x43334343u,  0x43334343u,\n 0x34343334u,  0x34343334u,\n 0x43434343u,  0x43434343u,\n 0x34343434u,  0x34343434u,\n 0x43434344u,  0x43434344u,\n 0x34443434u,  0x34443434u,\n 0x44434443u,  0x44434443u,\n 0x44344434u,  0x44344434u,\n 0x34444444u,  0x34444444u,\n 0x44444344u,  0x44444344u,\n 0x44444444u,  0x44444444u,\n 0x44444444u,  0x44444444u,\n 0x44444544u,  0x44444544u,\n 0x45444444u,  0x45444444u,\n 0x44454445u,  0x44454445u,\n 0x54544444u,  0x54544444u,\n 0x54445454u,  0x54445454u,\n 0x45454445u,  0x45454445u,\n 0x54545454u,  0x54545454u,\n 0x45454545u,  0x45454545u,\n 0x54545455u,  0x54545455u,\n 0x45554545u,  0x45554545u,\n 0x55545554u,  0x55545554u,\n 0x55455545u,  0x55455545u,\n 0x45555555u,  0x45555555u,\n 0x55555455u,  0x55555455u,\n 0x55555555u,  0x55555555u,\n 0x55555555u,  0x55555555u,\n 0x55555655u,  0x55555655u,\n 0x56555555u,  0x56555555u,\n 0x55565556u,  0x55565556u,\n 0x65655555u,  0x65655555u,\n 0x65556565u,  0x65556565u,\n 0x56565556u,  0x56565556u,\n 0x65656565u,  0x65656565u,\n 0x56565656u,  0x56565656u,\n 0x65656566u,  0x65656566u,\n 0x56665656u,  0x56665656u,\n 0x66656665u,  0x66656665u,\n 0x66566656u,  0x66566656u,\n 0x56666666u,  0x56666666u,\n 0x66666566u,  0x66666566u,\n 0x66666666u,  0x66666666u\n);\nvec3 pal[] = vec3[](\nvec3(0.31,0.63,0.75), vec3(0.35,0.66,0.82), vec3(0.41,0.72,0.85), vec3(0.44,0.75,0.91)\n, vec3(0.50,0.82,0.94), vec3(0.56,0.85,0.94), vec3(0.63,0.91,0.97));\n\n\n int zy = int(floor((iResolution.y - fragCoord.y -0.0  ) / zoom))- 0 ;\n  \n        // make it repeat...\n        //% (xy.length() / 12);\n \n    if (zy < 0)\n        return;\n   if (zy >= (xy.length() / (cw/8)))\n    return ;\n    \n    \n    //int xoffset = 0;\n   // int xoffset = 8 + int(iTime * 20.0);\n    int zx =  ( (int((fragCoord.x -000.0 ) / zoom) ) + xoffset)\n    % ww\n        //% (xy.length() /32) ;\n        //% (xy.length() / 2) \n        ;\n    \n    if (zx < 0)\n        return  ;\n    \n    if (zx >= (8 * (cw/8)))\n    return ;\n    \n    int i = (zx % (8 * xy.length())) / 8;\n    \n    if (zy > 0)\n    {\n        i += (cw/8) * zy;\n    }\n       \n    int x = 7 - (zx % 8); // fixup lsb \n    \n    int ii = int ((xy[i] >> (4 * x)) & (0xfu ));\n        \n    //if (ii>0) // shades of black? reorder pal?\n\n        fragColor.rgb = pal[ii] ;\n    \n    \n\n\n\n\n}\n","name":"Image","description":"","type":"image"}]}