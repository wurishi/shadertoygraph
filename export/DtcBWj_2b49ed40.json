{"ver":"0.1","info":{"id":"DtcBWj","date":"1701571358","viewed":15,"name":"Atividade - 01","username":"TheShadersX","description":"Minha atividade de teste","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["exerccio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 loadImage(vec2 fragCoord)\n{\n    // Coordenadas da tela (x e y)\n    vec2 uv = fragCoord/iResolution.xy * 1.0;\n    \n    vec4 image = texture(iChannel0, uv);\n\n    return image;\n}\n\nvec4 psBW(vec4 color)\n{\n    float bw = (min(color.r, min(color.g, color.b)) + max(color.r, max(color.g, color.b))) * 0.5;\n    return vec4(bw, bw, bw, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 image = loadImage(fragCoord);\n    \n    float mask = 0.0;\n\n    vec4 maskColor = texture(iChannel1, fragCoord/iResolution.xy); // Máscara de recorte\n\n    float threshold = 0.16;\n    float greenBias = 1.75;\n    float silhouetteThreshold = 0.1;\n    \n    // Isolando a cor verde e trocando por vermelho usando a máscara de recorte\n    if(image.r - image.g > threshold * greenBias && image.r - image.b > threshold && maskColor.a > 0.5)\n    {\n        mask = 1.0;\n        fragColor = vec4(1.0, 0.0, 0.0, image.a); // Trocando para vermelho\n    }\n    else {\n        // Removendo o fundo usando chroma key\n        vec3 keyColor = vec3(0.0, 1.0, 0.0); // Cor de chroma key (verde)\n        float keyThreshold = 0.1; // Limiar de tolerância para chroma key\n\n        if (distance(image.rgb, keyColor) < keyThreshold)\n            discard;\n        else {\n            // Desenhando silhuetas com base na diferença entre pixels na horizontal\n            vec4 prevColor = texture(iChannel0, (fragCoord-1.0)/iResolution.xy);\n            vec4 nextColor = texture(iChannel0, (fragCoord+1.0)/iResolution.xy);\n            vec3 silhouetteColor = vec3(1.0, 0.0, 0.0); // Cor da silhueta (vermelho)\n\n            if (length(image.rgb - prevColor.rgb) > silhouetteThreshold || length(image.rgb - nextColor.rgb) > silhouetteThreshold)\n                fragColor = vec4(silhouetteColor, image.a);\n            else\n                fragColor = mix(psBW(image), image, mask); // Aplicando a máscara na escala de cinza\n        }\n    }\n}\n","name":"Image","description":"","type":"image"}]}