{"ver":"0.1","info":{"id":"ftfSD2","date":"1626525095","viewed":183,"name":"Lightweight Planet Shader","username":"NaitoOokami","description":"First shadertoy shader.  Felt like making as light of a planet shader that I could.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["space","planet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rr","filepath":"/media/a/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","previewfilepath":"/media/ap/79520a3d3a0f4d3caa440802ef4362e99d54e12b1392973e4ea321840970a88a.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.1415;\nconst float planetRotation = 0.1;\nconst float lightRotation = 0.5;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -0.5 to 0.5)\n    vec2 uv = (fragCoord/iResolution.xy)-vec2(0.5);\n    \n    //Correct aspect ratio (I know this can be done better)\n    uv *= vec2(3.5,2.0);\n    \n    //Slightly scaled UVs for planet\n    vec2 uv2 = uv*1.15;\n    \n    //Create spherical normals from UVs for planet\n    float planet = clamp(1.0-(dot(uv2,uv2)),0.0,1.0);\n    vec3 planetN = vec3(uv,sqrt(planet))*step(0.001,planet);\n    \n    //Planet UVs\n    vec2 planetUV;\n    planetUV.x = (atan(planetN.x,planetN.z)+0.5)/(pi*2.0)+(iTime*planetRotation);\n    planetUV.y = (asin(planetN.y)-0.5)/pi;\n    \n    //Atmosphere generation\n    float atmosphere = clamp(1.0-(dot(uv,uv)),0.0,1.0);\n    vec3 atmosphereN = vec3(uv,sqrt(atmosphere))*step(0.001,atmosphere);\n    \n    //Light Direction\n    vec3 l = normalize(vec3(sin(iTime*lightRotation),0,cos(iTime*lightRotation)));\n    float planetNL = clamp(dot(l,planetN),0.0,1.0);\n    float atmosphereNL = clamp(dot(l,atmosphereN),0.0,1.0);\n    \n    //Texture\n    vec4 tex = texture(iChannel0,planetUV)*step(0.001,planet);\n\n    // Output to screen\n    fragColor = vec4(tex*planetNL+((atmosphere*atmosphereNL)-planet));\n}","name":"Image","description":"","type":"image"}]}