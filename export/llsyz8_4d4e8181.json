{"ver":"0.1","info":{"id":"llsyz8","date":"1503490457","viewed":430,"name":"Yet Another Superformula","username":"jt","description":"Yet another implementation of the supershape / superformula [url]https://en.wikipedia.org/wiki/Superformula[/url] cycling through the examples given in the wikipedia-article.","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["superformula","polar","supershape","superprim","superprimitive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Yet another implementation of the supershape / superformula, 2017 by JT.\n// cycling through the examples given in the wikipedia-article.\n\n// https://en.wikipedia.org/wiki/Superformula\nfloat super(float phi, float a, float b, float m, float n1, float n2, float n3)\n{\n    //return pow(pow(abs(cos(m*phi/4.0)/a), n2) + pow(abs(sin(m*phi/4.0)/b), n3), -1.0 / n1);\n    // alternative implementation, suggested by Fabrice\n    #define CS(a) vec2(cos(a),sin(a))\n    vec2 v = abs(CS(m*phi/4.));\n    return pow(pow(v.x, n2) + pow(v.y, n3), -1./n1);\n}\n\nvec4 shape[24];\n\nvoid mainImage(out vec4 C, vec2 I)\n{\n    // Parameters from https://de.wikipedia.org/wiki/Superformel\n    shape[0] = vec4(3, 5, 18, 18);\n    shape[1] = vec4(6, 20, 7, 18);\n    shape[2] = vec4(4, 2, 4, 13);\n    shape[3] = vec4(7, 3, 4, 17);\n    \n    shape[4] = vec4(7, 3, 6, 6);\n    shape[5] = vec4(3, 3, 14, 2);\n    shape[6] = vec4(19, 9, 14, 11);\n    shape[7] = vec4(12, 15, 20, 3);\n    \n    shape[8] = vec4(8, 1, 1, 8);\n    shape[9] = vec4(8, 1, 5, 8);\n    shape[10] = vec4(8, 3, 4, 3);\n    shape[11] = vec4(12, 15, 20, 3);\n    \n    shape[12] = vec4(5, 2, 6, 6);\n    shape[13] = vec4(6, 1, 1, 6);\n    shape[14] = vec4(6, 1, 7, 8);\n    shape[15] = vec4(7, 2, 8, 4);\n    \n    shape[16] = vec4(3, 2, 8, 3);\n    shape[17] = vec4(3, 6, 6, 6);\n    shape[18] = vec4(4, 1, 7, 8);\n    shape[19] = vec4(7, 2, 8, 4);\n    \n    shape[20] = vec4(2, 2, 2, 2);\n    shape[21] = vec4(2, 1, 1, 1);\n    shape[22] = vec4(2, 1, 4, 8);\n    shape[23] = vec4(3, 2, 5, 7);\n    \n    vec2 R = iResolution.xy;\n\tI = (I+I-R)/R.y; // center & aspect ratio\n    I = vec2(atan(I.y, I.x),length(I)); // polar coordinates\n\n    //int i = int(fract(iTime / 24.0) * 24.0);\n    int i = int(mod(iTime,24.));\n    // no transition\n    //float r = super(I.x, 1.0, 1.0, shape[i].x, shape[i].y, shape[i].z, shape[i].w);\n    // morphing, as suggested by FabriceNeyret2\n    vec4 S = mix(shape[i],shape[(i+1)%24], smoothstep(.2,.8,fract(iTime)) ); float r = super(I.x, 1., 1., S.x, S.y, S.z, S.w);\n    //C = vec4(smoothstep(0.0, 0.01, r * 0.2 - I.y)); // solid\n    // antialiasing, as suggested by Fabrice:\n    r = r * 0.2 - I.y;\n    C = vec4(smoothstep(-1.,1., r / fwidth(r)));\n    //C = vec4(smoothstep(-1.,1., r / (abs(dFdx(r)) + abs(dFdy(r))))); // variant, suggested by ollj\n    //C = vec4(smoothstep(0.0, 0.02, abs(r * 0.2 - I.y))); // outline\n}\n","name":"Image","description":"","type":"image"}]}