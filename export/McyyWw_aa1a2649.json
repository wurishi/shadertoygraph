{"ver":"0.1","info":{"id":"McyyWw","date":"1731965317","viewed":12,"name":"NxN DCT iDCT","username":"Psyph","description":"buffer B is original image, then buffer A does the DCT coefficients for NxN chunks, and then main reconstructs it. over time more coefs are added to show a sharper image, usually 15-25% is needed to hardly tell the difference.","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["dft"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592654\nvec3 hal(vec3 a, float b)\n{\n    a.x=2.*b*a.x-b;\n    a.y=2.*b*a.y-b;\n    a.z=2.*b*a.z-b;\n    return a;\n}\n\nfloat cos2(float x, float k, float m)\n{\n    return cos((2.*x+1.)*k*PI/(m*2.));\n}\n\nvec3 sinsum(vec2 base, vec2 fr,float m)\n{\n    vec3 s=vec3(0.);\n    float i=0.;\n    vec3 d=vec3(0.5);\n    while(i<m)\n    {\n        vec3 s1=vec3(0.);\n        float j=0.;\n        while(j<m)\n        {\n            if(j+i<iTime)\n            {\n                vec2 ij=vec2(i,j)+base;\n                d=texelFetch(iChannel0,ivec2(ij),0).xyz;\n                s1+=d*cos2(fr.x,j,m);\n            }\n            j++;\n        }\n        s+=s1*cos2(fr.y,i,m);\n        i++;\n    }\n    return (s+1.)/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 col=vec3(0.);\n    float m=16.;\n    \n    float mo=3.;\n    //float mo=mod(iTime,3.);\n    if(mo<1.1)\n    {\n        col=texture(iChannel1,uv).xyz;\n    }\n    if(mo>1.1&&mo<2.1)\n    {\n        \n        col=texture(iChannel0,uv).xyz*m;\n    }\n    if(mo>2.1)\n    {\n        vec2 fr1=floor(mod(fragCoord,m));\n        vec2 fr0=fragCoord-fr1;\n        //col=abs(sinsum(fr0,fr1,m)-texture(iChannel1,uv).xyz);\n        col=sinsum(fr0,fr1,m);\n    }\n    //col=sinsum(uv);\n    //col=texture(iChannel0,uv).xyz;\n    //col=texture(iChannel1,uv).xyz;\n    \n    /*\n    ivec2 g=ivec2(120,300);\n    float s=8.;\n    ivec2 fr=ivec2(uv*s)+30;\n    col=texelFetch(iChannel1,ivec2(38,38),0).xyz;\n    */\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.141592654\nfloat cos2(float x, float k, float m)\n{\n    return cos((2.*k+1.)*x*PI/(m*2.));\n}\n\nvec3 sinsum(vec2 base, vec2 fr,float m)\n{\n    float scal=(1./(m*m/4.));\n    vec3 d=vec3(0.);\n    vec3 s=vec3(0.);\n    float i=0.;\n    while(i<m)\n    {\n        vec3 s1=vec3(0.);\n        float j=0.;\n        while(j<m)\n        {\n            float ci=1.;\n            float cj=1.;\n            if (fr.x<.5) ci=1./2.;\n            if (fr.y<.5) cj=1./2.;\n            //if (i<.5) ci=1./sqrt(2.);\n            //if (j<.5) cj=1./sqrt(2.);\n            vec2 temp=vec2(i,j)+base;\n            d=texelFetch(iChannel0,ivec2(temp),0).xyz;\n            d=(d-.5)*2.;\n            s1+=scal*d*ci*cj*cos2(fr.x,j,m);\n            j++;\n        }\n        s+=s1*cos2(fr.y,i,m);\n        i++;\n    }\n    return s;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col=vec3(0.);\n    if(iTime<.5)\n    {\n        float m=16.;\n        vec2 fr1=floor(mod(fragCoord,m));\n        vec2 fr0=fragCoord-fr1;\n        col=sinsum(fr0,fr1,m);\n    }\n    else\n    {\n        vec2 uv = fragCoord/iResolution.xy;\n        col=texture(iChannel1,uv).xyz;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define PI 3.141592654\n#define fr fragCoord\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col=vec3(1.,1.,1.);\n\n    col=texture(iChannel0,uv).xyz;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}