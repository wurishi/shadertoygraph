{"ver":"0.1","info":{"id":"wlB3zt","date":"1592998041","viewed":80,"name":"Moving Vornoi","username":"Helliaca","description":"Vornoi diagram of moving points","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["vornoi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pl 100\n\nconst vec2[pl] points = vec2[pl](\n    vec2(0.836, 0.184),\n    vec2(0.828, 0.492),\n    vec2(0.989, 0.391),\n    vec2(0.545, 0.667),\n    vec2(0.593, 0.85),\n    vec2(0.689, 0.066),\n    vec2(0.971, 0.358),\n    vec2(0.119, 0.689),\n    vec2(0.775, 0.243),\n    vec2(0.538, 0.938),\n    vec2(0.612, 0.551),\n    vec2(0.109, 0.274),\n    vec2(0.485, 0.357),\n    vec2(0.871, 0.358),\n    vec2(0.178, 0.723),\n    vec2(0.299, 0.242),\n    vec2(0.265, 0.137),\n    vec2(0.466, 0.959),\n    vec2(0.17, 0.206),\n    vec2(0.162, 0.294),\n    vec2(0.202, 0.157),\n    vec2(0.646, 0.533),\n    vec2(0.155, 0.324),\n    vec2(0.977, 0.71),\n    vec2(0.213, 0.716),\n    vec2(0.611, 0.834),\n    vec2(0.806, 0.924),\n    vec2(0.487, 0.433),\n    vec2(0.173, 0.833),\n    vec2(0.694, 0.982),\n    vec2(0.5, 0.621),\n    vec2(0.974, 0.504),\n    vec2(0.649, 0.223),\n    vec2(0.806, 0.596),\n    vec2(0.809, 0.277),\n    vec2(0.936, 0.98),\n    vec2(0.568, 0.76),\n    vec2(0.725, 0.176),\n    vec2(0.834, 0.102),\n    vec2(0.518, 0.646),\n    vec2(0.838, 0.394),\n    vec2(0.964, 0.085),\n    vec2(0.8, 0.124),\n    vec2(0.142, 0.581),\n    vec2(0.035, 0.669),\n    vec2(0.395, 0.338),\n    vec2(0.744, 0.1),\n    vec2(0.507, 0.903),\n    vec2(0.005, 0.914),\n    vec2(0.515, 0.927),\n    vec2(0.45, 0.665),\n    vec2(0.14, 0.99),\n    vec2(0.517, 0.004),\n    vec2(0.882, 0.495),\n    vec2(0.236, 0.453),\n    vec2(0.269, 0.025),\n    vec2(0.729, 0.356),\n    vec2(0.855, 0.543),\n    vec2(0.92, 0.239),\n    vec2(0.151, 0.539),\n    vec2(0.499, 0.726),\n    vec2(0.601, 0.928),\n    vec2(0.165, 0.478),\n    vec2(0.508, 0.446),\n    vec2(0.795, 0.438),\n    vec2(0.093, 0.434),\n    vec2(0.463, 0.604),\n    vec2(0.673, 0.84),\n    vec2(0.043, 0.252),\n    vec2(0.347, 0.003),\n    vec2(0.587, 0.588),\n    vec2(0.32, 0.192),\n    vec2(0.533, 0.821),\n    vec2(0.954, 0.867),\n    vec2(0.183, 0.805),\n    vec2(0.523, 0.934),\n    vec2(0.553, 0.809),\n    vec2(0.199, 0.688),\n    vec2(0.021, 0.712),\n    vec2(0.637, 0.154),\n    vec2(0.838, 0.639),\n    vec2(0.259, 0.092),\n    vec2(0.138, 0.42),\n    vec2(0.298, 0.817),\n    vec2(0.525, 0.457),\n    vec2(0.23, 0.999),\n    vec2(0.922, 0.704),\n    vec2(0.159, 0.882),\n    vec2(0.272, 0.385),\n    vec2(0.149, 0.254),\n    vec2(0.969, 0.379),\n    vec2(0.438, 0.263),\n    vec2(0.317, 0.368),\n    vec2(0.079, 0.46),\n    vec2(0.084, 0.678),\n    vec2(0.942, 0.974),\n    vec2(0.791, 0.609),\n    vec2(0.895, 0.898),\n    vec2(0.568, 0.587),\n    vec2(0.294, 0.036)\n);\n\nconst vec3[pl] colors = vec3[pl](\n    vec3(0.588, 0.856, 0.722),\n    vec3(0.34, 0.681, 0.184),\n    vec3(0.339, 0.631, 0.525),\n    vec3(0.222, 0.172, 0.744),\n    vec3(0.579, 0.098, 0.69),\n    vec3(0.621, 0.044, 0.709),\n    vec3(0.279, 0.393, 0.045),\n    vec3(0.058, 0.968, 0.579),\n    vec3(0.47, 0.78, 0.211),\n    vec3(0.44, 0.045, 0.878),\n    vec3(0.0, 0.187, 0.58),\n    vec3(0.37, 0.138, 0.532),\n    vec3(0.443, 0.996, 0.191),\n    vec3(0.538, 0.807, 0.441),\n    vec3(0.954, 0.433, 0.868),\n    vec3(0.114, 0.852, 0.864),\n    vec3(0.039, 0.481, 0.653),\n    vec3(0.135, 0.64, 0.579),\n    vec3(0.688, 0.662, 0.731),\n    vec3(0.63, 0.811, 0.944),\n    vec3(0.466, 0.834, 0.044),\n    vec3(0.215, 0.29, 0.48),\n    vec3(0.106, 0.203, 0.522),\n    vec3(0.037, 0.6, 0.832),\n    vec3(0.413, 0.313, 0.176),\n    vec3(0.716, 0.763, 0.191),\n    vec3(0.169, 0.042, 0.172),\n    vec3(0.535, 0.213, 0.633),\n    vec3(0.006, 0.668, 0.221),\n    vec3(0.761, 0.01, 0.832),\n    vec3(0.603, 0.439, 0.857),\n    vec3(0.79, 0.31, 0.424),\n    vec3(0.698, 0.868, 0.554),\n    vec3(0.742, 0.057, 0.054),\n    vec3(0.882, 0.753, 0.15),\n    vec3(0.618, 0.243, 0.21),\n    vec3(0.102, 0.621, 0.795),\n    vec3(0.897, 0.759, 0.776),\n    vec3(0.215, 0.463, 0.567),\n    vec3(0.628, 0.647, 0.518),\n    vec3(0.36, 0.408, 0.502),\n    vec3(0.155, 0.955, 0.083),\n    vec3(0.934, 0.023, 0.476),\n    vec3(0.759, 0.313, 0.41),\n    vec3(0.189, 0.624, 0.387),\n    vec3(0.326, 0.629, 0.06),\n    vec3(0.969, 0.204, 0.969),\n    vec3(0.05, 0.608, 0.539),\n    vec3(0.325, 0.515, 0.564),\n    vec3(0.166, 0.044, 0.541),\n    vec3(0.893, 0.556, 0.758),\n    vec3(0.87, 0.105, 0.549),\n    vec3(0.254, 0.082, 0.674),\n    vec3(0.987, 0.867, 0.593),\n    vec3(0.162, 0.334, 0.743),\n    vec3(0.092, 0.448, 0.802),\n    vec3(0.816, 0.999, 0.623),\n    vec3(0.012, 0.902, 0.355),\n    vec3(0.967, 0.559, 0.326),\n    vec3(0.425, 0.143, 0.988),\n    vec3(0.776, 0.52, 0.009),\n    vec3(0.468, 0.817, 0.502),\n    vec3(0.425, 0.529, 0.041),\n    vec3(0.394, 0.346, 0.523),\n    vec3(0.207, 0.322, 0.609),\n    vec3(0.382, 0.631, 0.54),\n    vec3(0.498, 0.842, 0.954),\n    vec3(0.285, 0.576, 0.832),\n    vec3(0.133, 0.736, 0.976),\n    vec3(0.062, 0.776, 0.493),\n    vec3(0.352, 0.765, 0.758),\n    vec3(0.775, 0.358, 0.041),\n    vec3(0.807, 0.759, 0.633),\n    vec3(0.907, 0.09, 0.14),\n    vec3(0.842, 0.196, 0.553),\n    vec3(0.629, 0.119, 0.303),\n    vec3(0.041, 0.135, 0.092),\n    vec3(0.478, 0.78, 0.296),\n    vec3(0.89, 0.761, 0.944),\n    vec3(0.48, 0.078, 0.508),\n    vec3(0.658, 0.678, 0.082),\n    vec3(0.62, 0.376, 0.349),\n    vec3(0.506, 0.568, 0.553),\n    vec3(0.879, 0.861, 0.989),\n    vec3(0.974, 0.164, 0.315),\n    vec3(0.076, 0.602, 0.696),\n    vec3(0.679, 0.07, 0.012),\n    vec3(0.441, 0.055, 0.293),\n    vec3(0.839, 0.666, 0.913),\n    vec3(0.048, 0.802, 0.916),\n    vec3(0.666, 0.518, 0.939),\n    vec3(0.236, 0.961, 0.754),\n    vec3(0.614, 0.894, 0.688),\n    vec3(0.659, 0.831, 0.179),\n    vec3(0.76, 0.742, 0.924),\n    vec3(0.619, 0.363, 0.334),\n    vec3(0.079, 0.453, 0.422),\n    vec3(0.184, 0.538, 0.554),\n    vec3(0.049, 0.598, 0.045),\n    vec3(0.839, 0.775, 0.278)\n);\n\n\nvec2 rotate_around(vec2 point, vec2 pivot, float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n\n  // rotate point\n  float xnew = (point.x-pivot.x) * c - (point.y-pivot.y) * s;\n  float ynew = (point.x-pivot.x) * s + (point.y-pivot.y) * c;\n\n  return vec2(xnew + pivot.x, ynew + pivot.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float min_l = 99.0f;\n    int min_i = 0;\n    int i;\n    for(i=0; i<pl-1; i++) {\n        vec2 p = rotate_around(points[i], points[i+1], iTime);\n        if(length(p-uv)<min_l) {\n            min_l = length(p-uv);\n            min_i = i;\n        }\n    }\n\n    fragColor = vec4(colors[min_i],1.0);\n}","name":"Image","description":"","type":"image"}]}