{"ver":"0.1","info":{"id":"WdfBWN","date":"1588227411","viewed":100,"name":"valuenoise perturb","username":"blepfo","description":"Test using 2d value noise to deform shapes","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define RAND_SEED (283846.698)\n\nvec2 translate(vec2 uv, vec2 t) {\n    return uv - t;\n}\n\nmat2 rotate2d(float theta) {\n    return mat2(cos(theta), -sin(theta),\n                sin(theta), cos(theta));\n}\n\n\nfloat random2(vec2 uv) {\n    return fract(\n        RAND_SEED\n        * (sin(dot(uv, vec2(21.12, 17.23)))\n        \t+ cos(dot(uv, vec2(12.2241, 22.433)))\n        )\n    );\n}\n\n\nfloat smoothRand(float x, vec2 blur) {\n    float i = floor(x);\n    return mix(random2(vec2(i)), random2(vec2(i+1.)), smoothstep(blur[0], blur[1], fract(x)));\n}\n\n\nfloat valueNoise(vec2 uv) {\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    float a = random2(i);\n    float b = random2(i + vec2(1., 0));\n    float c = random2(i + vec2(0., 1.));\n    float d = random2(i + vec2(1., 1.));\n\tvec2 u = smoothstep(0., 1., f);\n    // Bilinear\n    float ab = mix(a, b, u.x);\n    float cd = mix(c, d, u.x);\n    return mix(ab, cd, u.y);\n}\n\n\n// Rectangle centered at (0, 0)\nfloat rectSdf(vec2 uv, vec2 halfSize) {\n    vec2 edgeDist = abs(uv) - halfSize;\n    float inDist = min(max(edgeDist.x, edgeDist.y), 0.);\n    float outDist = length(max(edgeDist, 0.));\n    return inDist + outDist;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = gl_FragCoord.xy/iResolution.xy;\n    vec2 iMouse = iMouse.xy / iResolution.xy;\n    // Move to origin\n    uv = translate(uv, vec2(0.5));\n    uv.x *= iResolution.x/iResolution.y;\n\n    float globalScale = 20.;\n    vec2 scaleLayer = uv*globalScale;\n    \n    float r = rectSdf(scaleLayer, vec2(6.));\n    float noiseScale = 1.;\n    vec2 noiseLayer = translate(scaleLayer*noiseScale, vec2(2.848*sin(iTime),6.*iTime));\n    float vNoise = (2. * valueNoise(noiseLayer)) - 1.;\n    float sdf = r + vNoise;\n    float shape = step(0., sdf);\n    float border = step(0., abs(sdf) - 0.212);\n    \n    \n    vec3 color = vec3((vNoise+1.)/2.);\n    color = mix(color, vec3(1.), iMouse.y);\n    color = mix(color, vec3(0.), 1.-border);\n    color = mix(color, vec3(0.895,0.262,0.098), 1.-shape);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}