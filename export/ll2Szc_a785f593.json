{"ver":"0.1","info":{"id":"ll2Szc","date":"1445853289","viewed":132,"name":"Another hello mandelbrot!","username":"danim","description":"A hello world app. Mandelbrot set just for learning.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // mandelbrot goes from [-2,1] in the real part and [-1,1] in the imaginary part\n\tfloat ar = iResolution.x / iResolution.y;\n    vec2 uv;\n    uv.x = ( 3. * fragCoord.x - 2. * iResolution.x ) / iResolution.y;\n    uv.y = 3. * ( fragCoord.y - 0.5 * iResolution.y ) / iResolution.y;\n    \n    vec3 black = vec3( 0 );\n    vec3 white = vec3( 1 );\n    \n    fragColor = vec4(black,1);\n    // tmp will hold Zn^2\n    vec2 tmp;\n    vec2 z = uv;\n    // play with the number of its!\n    const int its = 100;\n    for( int i = 0; i < its; ++i )\n    {\n        if( length( z ) >= 4. )\n        {\n            fragColor = vec4( vec3( 1. - float(i)/float(its) ), 1 );\n            break;\n        }\n        tmp.x = z.x * z.x - z.y * z.y;\n       \ttmp.y = 2. * z.x * z.y;\n        z = tmp + uv;\n    }\n}","name":"","description":"","type":"image"}]}