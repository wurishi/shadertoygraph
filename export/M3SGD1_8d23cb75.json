{"ver":"0.1","info":{"id":"M3SGD1","date":"1708418404","viewed":53,"name":"messing with functions","username":"hackerzilla","description":"Learning stuff about coordinates and displaying functions.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // coordinates [-1, 1]\n    uv = 2.0 * uv - vec2(1.0);\n    \n    uv *= 6.28318530718;\n\n    // ignore\n    float dist = sqrt(pow(pow(sin(uv.x), 2.0) - pow(uv.y, 2.0), 2.0));\n    \n    float scaledDist = dist;\n    \n    float diff = sqrt(pow(sin(uv.x + iTime), 2.0) - pow(uv.y*0.2, 2.0));\n    \n    // graph y = sin(x) => -sin(uv.x) + uv.y = 0\n    \n    float val = pow(cos(-sin(uv.x - uv.y + iTime * 2.0) + uv.y + iTime * 2.0 ) * 10.0, 0.5) * 0.25;\n   \n   \n    // interpolate smoothly between graph 1 and graph 2\n    \n    float val1 = sin(uv.x + uv.y) + sin(uv.x - uv.y);\n    \n    float val2 = sin(uv.x + uv.y) - sin(uv.x - uv.y);\n    \n    float t = (sin(iTime * 2.0) + 1.0) / 2.0;\n    \n    float interpVal = val1 * (1.0-t) + val2 * t;\n       \n    vec3 col = vec3(interpVal, 0.0, val);\n    \n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = vec4(0.0,0.0,1.0,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}