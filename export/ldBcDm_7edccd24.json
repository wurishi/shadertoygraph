{"ver":"0.1","info":{"id":"ldBcDm","date":"1492344264","viewed":183,"name":"Revision logo","username":"Daedelus","description":"Approximated from the goodybag... hung over at the party.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["revisionlogo"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define ANIMATE\n\n#define TAU 6.28318530718\n#define PI 3.14159265359\n\nbool isPixelInLogo(vec2 uv)\n{\n    float d = length(uv);\n    int id = int(floor(d * 10.0));\n    \n    float angle = atan(uv.x, uv.y);\n    #ifdef ANIMATE\n    angle = fract((angle / TAU + 0.5) + float(id) * iTime * 0.02) * TAU - PI;\n    #endif\n\n    // this should be a switch\n    //if(id == 0)\n    //{\n    //   return false;\n    //}\n    if(id == 1)\n    {\n        return true;\n    }\n    else if(id == 2)\n    {\n        if(angle < -0.32 && angle > -1.45)\n        {\n            return true;\n        }\n    }\n    else if(id == 3)\n    {\n        if(angle < 0.35 && angle > 0.1)\n        {\n            return true;\n        }\n        if(angle < 2.3 && angle > 1.7)\n        {\n            return true;\n        }\n        if(angle < -1.9 && angle > -2.6)\n        {\n            return true;\n        }\n    }\n    else if(id == 4)\n    {\n        if(angle < 0.8 && angle > -0.2)\n        {\n            return true;\n        }\n        if(angle < 2.75 && angle > 1.0)\n        {\n            return true;\n        }\n        if(angle < -1.65 || angle > 2.95)\n        {\n            return true;\n        }\n    }\n    else if(id == 5)\n    {\n       \treturn true;\n    }\n    //else if(id == 6)\n    //{\n    //   \treturn false;\n    //}\n    else if(id == 7)\n    {\n        if(angle < -2.6 && angle > -2.77)\n        {\n            return true;\n        }\n        else if(angle > 2.75)\n        {\n            return true;\n        }\n        else if(angle > -1.55 && angle < -1.25)\n        {\n            return true;\n        }\n        else if(angle > -0.95 && angle < -0.75)\n        {\n            return true;\n        }\n        else if(angle > -0.23 && angle < 0.23)\n        {\n            return true;\n        }\n        else if(angle > 0.7 && angle < 1.7)\n        {\n            return true;\n        }\n    }\n    else if(id == 8)\n    {\n       \treturn true;\n    }\n    else if(id == 9)\n    {\n        if(angle > -2.55 && angle < -1.6)\n        {\n            return true;\n        }\n        else if(angle > 0.7 && angle < 0.85)\n        {\n            return true;\n        }\n    }\n    \n\treturn false;\n}\n\nvec3 hsv2rgb(vec3 hsv)\n{\n    int id = int(floor(hsv.x * 6.0));\n    float local = fract(hsv.x * 6.0);\n    vec3 c = vec3(1.0, local, 0.0);\n    if(id == 1)\n    {\n        c = vec3(1.0 - local, 1.0, 0.0);\n    }\n    else if(id == 2)\n    {\n        c = vec3(0.0, 1.0, local);\n    }\n    else if(id == 3)\n    {\n        c = vec3(0.0, 1.0 - local, 1.0);\n    }\n    else if(id == 4)\n    {\n        c = vec3(local, 0.0, 1.0);\n    }\n    else if(id == 5 )\n    {\n        c = vec3(1.0, 0.0, 1.0 - local);\n    }\n\treturn mix(c * hsv.z, hsv.zzz, 1.0 - hsv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy* 2.0 - iResolution.xy) / iResolution.y;\n    \n    float d = length(uv);\n    vec3 foreground = hsv2rgb(vec3(fract(d + iTime * 0.2 + atan(uv.x, uv.y) / PI), 0.4, 0.8));\n    vec3 background = vec3(0.0);\n    \n    fragColor = vec4(isPixelInLogo(uv) ? foreground : background, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}