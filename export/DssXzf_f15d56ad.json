{"ver":"0.1","info":{"id":"DssXzf","date":"1669327130","viewed":90,"name":"Sphere Mapping Normals","username":"syncryptic","description":"Spherical UV coordinate unwrap to Normal coloring... I think this math is right.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["spherenormalmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592653\n\nvec3 sphere_uv2vec(vec2 uv) {\n    uv.x *= PI*2.;\n    uv.y *= PI;\n    return vec3(sin(uv.y) * cos(uv.x),\n                sin(uv.y) * sin(uv.x),\n                cos(uv.y));\n}\n\nvec3 vec2norm(vec3 v){\n    v += vec3(1.,1.,0.);\n    v *= vec3(0.5,0.5,1.);\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor.bgr = vec2norm(sphere_uv2vec(uv));\n}","name":"Image","description":"","type":"image"}]}