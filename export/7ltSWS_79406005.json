{"ver":"0.1","info":{"id":"7ltSWS","date":"1639721383","viewed":115,"name":"GOL rendering","username":"jneen","description":"somethin","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["gameoflife","pixellation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  fragColor = texture(iChannel0, fragCoord/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"    float N = 0.;\n\n\n\nfloat box(vec3 p, vec3 a) {\nvec3 q=abs(p)-a;\nreturn length(max(q,0.)) + min(0., max(q.x,max(q.y,q.z)));\n}\n\n#define time (iTime*.3)\n\nmat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\n\nfloat w(vec3 p) {\n  p.x += sin(time);\n  p.y += cos(time);\n  p.z -= 5.*sin(time);\n\n  p.xz *= rot(sin(time*2.));\n\n  float S = length(p) - 2.;\n  p.yz *= rot(time);\n  float B = box(p, vec3(1.5));\n  return max(B,-S);\n}\n\nvec3 norm(vec3 p){\n  mat3 k=mat3(p,p,p)-mat3(.001);\n  return normalize(w(p)-vec3(w(k[0]),w(k[1]),w(k[2])));\n}\n\nvec3 dir;\nvec3 ro;\nfloat D;\nvoid ray() {\n  D=.3;for (int i=0;i<100;i++){float c=w(ro+D*dir);D+=c;if(c<.001||D>100.)break;}\n}\nfloat O;\n\nvec4 pastMe;\nvoid GOL(out vec4 fragColor, vec2 fragCoord) {\n#if 1\n    if (iFrame %5!= 0) {\n      fragColor = pastMe;\n      return;\n    }\n#endif\n\n    for (float dx = -1.; dx <= 1.; dx += 1.)\n    for (float dy = -1.; dy <= 1.; dy += 1.) {\n      if (dx == 0. && dy == 0.) continue;\n      vec2 neigh = fragCoord + SIZE*vec2(dx, dy);\n      vec4 past = texture(iChannel0, neigh/iResolution.xy);\n      N += float(past.g > .9);\n    }\n    \n    bool alive = pastMe.g > .9;\n    \n    \n    \n     O = float(N == 3. || (alive && N >= 2. && N < 4.));\n     fragColor = vec4(vec3(O),1.0);\n     //fragColor.r = 1./N;\n\n\n}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragCoord -= mod(fragCoord, SIZE);\n    vec2 uv = fragCoord / iResolution.xy - .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    if (iFrame < 10) {\n      float on = float(mod(dot(fragCoord/SIZE/5.,vec2(1.)), 2.) < .5);\n      fragColor = vec4(vec3(on), 1.);\n      return;\n    }\n    \n    pastMe = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    \n    ro = vec3(0,0,-5);\n    dir = normalize(vec3(uv,1));\n    \n    ray();\n    \n    if (D > 100.) {\n      GOL(fragColor, fragCoord); return;\n   \n    }\n    else {\n      vec3 N = norm(ro+dir*D);\n      float diff = length(.5+.5*sin(N*1.5))/sqrt(3.);\n      if (diff > .6) O = 1.;\n      else O = 0.;\n      //else O = float(mod(diff+.2*D,.3) < .1/2.);\n      \n      if (O == 0.) GOL(fragColor, fragCoord);\n      else fragColor = vec4(vec2(O),0.,1.0);\n    }\n    \n    fragColor.r = mix(fragColor.r, pastMe.b, .5);\n    \n\n\n    //fragColor.r = N/8.;\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"//#define SIZE (mix(3., 10., .5+.5*sin(.1*iTime)))\n#define SIZE 4.","name":"Common","description":"","type":"common"}]}