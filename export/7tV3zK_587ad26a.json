{"ver":"0.1","info":{"id":"7tV3zK","date":"1638027234","viewed":288,"name":"funny: init iTime is not zero","username":"FabriceNeyret2","description":"show iTime at frame 0:  try rewind multiple time.\n\nI'm not sure it really qualifies as a bug, anyway please keep it since it is very useful:\nwe can randomize differently at each rewind by putting iTime in the hash formula:\nif (iFrame==0){v = hash(U-iTime)","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["test","bug","trick","hash","itime"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// --- utils from https://www.shadertoy.com/view/llySRh -----------------\nvec4 char(vec2 p, int c) {\n    vec2 dFdx = dFdx(p/16.), dFdy = dFdy(p/16.);\n    if (p.x<.0|| p.x>1. || p.y<0.|| p.y>1.) return vec4(0,0,0,1e5);\n\treturn textureGrad( iChannel3, p/16. + fract( vec2(c, 15-c/16) / 16. ), \n                        dFdx, dFdy );\n}\n\nvec4 pInt(vec2 p, float n) { // --- display int4\n    vec4 v = vec4(0);\n    if (n < 0.) \n        v += char(p - vec2(-.5,0), 45 ),\n        n = -n;\n\n    for (float i = 3.; i>=0.; i--) \n        n /=  9.999999, // 10., // for windows :-(\n        v += char(p - .5*vec2(i,0), 48+ int(fract(n)*10.) );\n    return v;\n}\n\nvec4 pFloat(vec2 p, float n) { // --- display float4.4\n    vec4 v = vec4(0);\n    if (n < 0.) v += char(p - vec2(-.5,0), 45 ), n = -n;\n    v += pInt(p,floor(n)); p.x -= 2.;\n    v += char(p, 46);      p.x -= .5;\n    v += pInt(p,fract(n)*1e4);\n    return v;\n}// ------------------------------------\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float t = T(0).x;\n    \n    U *= 4./iResolution.y; U.y -= 2.; U.x++;\n    O-=O;\n                   O += pInt( U, floor(t) ).x;   // iTime at frame 0, with many digits\n    U.x -= 2.;     O += char( U,46).x;\n    U.x -= .5;     O += pInt( U, floor(t*1e4) ).x;\n    U.x -= 2.;     O += pInt( U, floor(t*1e8) ).x;\n    U.x -= 2.;     O += pInt( U, floor(t*1e12) ).x;\n    \n    U.y += 1.5; U.x += 4.; O += pInt( U, T(0).y ).x; // iFrame ( always 0 for me )\n\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 O, vec2 U )\n{\n    if ( iFrame < 1 ) { O.x = iTime; O.y = float(iFrame); return; }\n    O = T(U);                    \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define T(U) texelFetch( iChannel0, ivec2(U), 0 )","name":"Common","description":"","type":"common"}]}