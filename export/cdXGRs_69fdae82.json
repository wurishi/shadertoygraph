{"ver":"0.1","info":{"id":"cdXGRs","date":"1666613017","viewed":108,"name":"2D Plasma wave","username":"jvb","description":"Just a 2D shader","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2deffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\nvec2 rotz(in vec2 p, float ang) { return vec2(p.x*cos(ang)-p.y*sin(ang),p.x*sin(ang)+p.y*cos(ang)); }\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 p = 2.0*( gl_FragCoord.xy / iResolution.xy )-1.0; \n\tp.x *= iResolution.x/iResolution.y; \t\n\tvec3 col = vec3(0); \n\n\tp = rotz(p, time*0.5+atan(p.y,p.x)*5.0);\n\tp *= 1.1+sin(time*0.5); \n\t\n\tfor (int i = 0; i < 20; i++) {\n\t\t\n\t\tfloat dist = abs(p.y + sin(float(i)+time*0.1+3.0*p.x)) - 0.1;\n\t\tif (dist < 1.0) { col += (1.0-pow(abs(dist), 0.28))*vec3(0.8+0.2*sin(time),0.9+0.1*sin(time*1.1),1); }\n\t\tp *= 1.3; \n\t\tp = rotz(p, 30.0);\n\t\tp.y += 0.1*sin(0.5*time); \n\t}\n\tcol *= 0.8; \n\tfragColor = vec4(col, 1.0); \n}\n\n","name":"Image","description":"","type":"image"}]}