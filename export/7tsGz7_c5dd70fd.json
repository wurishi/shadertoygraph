{"ver":"0.1","info":{"id":"7tsGz7","date":"1621831079","viewed":64,"name":"davidbk_smiley","username":"davidbk","description":"From The Art of Code tutorial","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","smoothstep","smiley","length"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur){\n\n    //create radial gradient\n    float d = length(uv-p);\n    \n    //smoothstep(low, high, input)\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy; // 0 <> 1\n    \n    //make black screen\n    //fragColor = vec4(1., 0., 0. ,1.0);\n    \n    //display uv ramp\n    //fragColor = vec4(uv.x, uv.y, 0. ,1.0);\n    \n    //move uv center to screen center\n    uv -= .5; // -0.5 <> 0.5\n    \n    //set uvs to square aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //float c = d; \n    \n    //make harsh cutoff from white to black\n    //if(d < .3) c = 1.; else c = .0;\n    \n    //vec2 p = vec2(.2, -.1);\n    \n    //define col\n    vec3 col = vec3(0);\n    \n    //make head\n    float mask = Circle(uv, vec2(0., 0.), .4, .05);\n    \n    //make eyes\n    mask -= Circle(uv, vec2(-.2, .1), .07, .01);\n    mask -= Circle(uv, vec2(.2, .1), .07, .01);\n    \n    //make mouth\n    float mouth = Circle(uv, vec2(0., 0.), .3, .01);\n    mouth -= Circle(uv, vec2(0., 0.1), .3, .01);\n    \n    //remove mouth from head\n    mask -= clamp(mouth, 0., 1.);\n    \n    //set col to yellow\n    col = vec3(1., 1., 0.);\n    \n    //return fragColor\n    fragColor = vec4(col*mask, 1.0);\n}","name":"Image","description":"","type":"image"}]}