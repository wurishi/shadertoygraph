{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"video","id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define MAGIC_NUM 43758.5453123 \nfloat rand(float n) { return fract(sin(n) * MAGIC_NUM); }\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\n    float distFromCenter = length( uv - vec2( 0.5, 0.5 ) );\n    \n    float shift = 0.05;\n    \n    vec2 uvR, uvG, uvB;\n    vec4 color;\n    \n    // sum phases\n    shift  = clamp( sin(iTime*4.0 ), 0.0, 0.01); // slow phase distort\n    shift += clamp( sin(iTime*8.0 ), 0.0, 0.01); // medium phase distort\n    shift += clamp( sin(iTime*16.0), 0.0, 0.01); // fast phase distort\n    \n    // random factor\n    shift += clamp( sin(iTime), 0.0, 0.02);\n    \n    // outer edges have more aberration\n    shift *= distFromCenter;\n\n    // vector from center to px\n    vec2 colorVec = normalize(uv - vec2(0.5,0.5));\n    \n    // color shift in the dir of colorVec\n    uvR = vec2(uv.x-(colorVec.x*shift), uv.y-(colorVec.y*shift));\n    uvG = vec2(uv.x                   , uv.y);\n    uvB = vec2(uv.x+(colorVec.x*shift), uv.y+(colorVec.y*shift));\n    \n    color.r = texture( iChannel0, uvR).r;\n    color.g = texture( iChannel0, uvG).g;\n    color.b = texture( iChannel0, uvB).b;\n    color.a = 1.0;\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Mtf3zl","date":"1424333647","viewed":447,"name":"RadColorShift","username":"yaz","description":"hello world, first shader\nradial chromatic aberration","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["aberration"],"hasliked":0,"parentid":"","parentname":""}}