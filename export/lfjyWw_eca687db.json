{"ver":"0.1","info":{"id":"lfjyWw","date":"1722437782","viewed":67,"name":"Function preview","username":"klemek","description":"test your functions","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["function"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415927\n#define E .001\n#define SQRT2 1.4142136\n\nfloat ease_step(float x, float k) {\n    return floor(x) + (mod(x, 1.0) < k ? smoothstep(0.0, 1.0, (x - floor(x)) / k) : 1.0);\n}\n\n#define ZOOM 3.0\n\nfloat chart(float y, float x) {\n    return clamp(step(y, x + 0.006 * ZOOM) - step(y, x - 0.006 * ZOOM), 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\n    uv *= ZOOM;\n    const float inv_zoom = 1.0 / ZOOM;\n\n    vec3 c = vec3(0.);\n    \n    const vec3 grid_color = 0.6 - vec3(0.1, 0.0, 0.9);\n    \n    c += clamp(0.0\n            + step(abs(uv.x), 0.004 * ZOOM) \n            + step(abs(uv.y), 0.004 * ZOOM) \n            + step(abs(mod(uv.x, 1.0)), 0.004 * ZOOM) * 0.5\n            + step(abs(mod(uv.y, 1.0)), 0.004* ZOOM) * 0.5\n            + step(abs(mod(uv.x, 0.25)), 0.004 * ZOOM) * 0.25\n            + step(abs(mod(uv.y, 0.25)), 0.004 * ZOOM) * 0.25,\n         0.0, 1.0)  * grid_color;\n         \n    c += chart(uv.y,\n        ease_step(uv.x, 0.5) // HERE\n    );\n    \n    fragColor = vec4(1.0 - c,1.0);\n}","name":"Image","description":"","type":"image"}]}