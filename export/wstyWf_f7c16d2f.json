{"ver":"0.1","info":{"id":"wstyWf","date":"1601913350","viewed":290,"name":"CoNoise","username":"Swax97","description":"Inspired by the noise pattern in https://www.shadertoy.com/view/wtXfRH","likes":19,"published":1,"flags":0,"usePreview":0,"tags":["noise","fbm","cosine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Based on https://www.shadertoy.com/view/wtXfRH\n\nvec3 fcos( vec3 x )\n{\n    vec3 w = fwidth(x);\n    #if 0\n    return cos(x) * sin(0.5*w)/(0.5*w);     // filtered-exact\n\t#else\n    return cos(x) * smoothstep(6.28,0.0,w); // filtered-approx\n\t#endif  \n}\n\nvec2 fcos(vec2 x)\n{\n\tvec2 w = fwidth(x);\n    return cos(x) * sin(0.5*w)/(0.5*w);\n}\n\nvec3 getColor( in vec2 p )\n{\n    vec3 col = vec3(0.4,0.4,0.4);\n\t\n    col += 0.12*fcos(6.28318*p.x*  1.1+vec3(+1.0,1.0,0.0));\n    col += 0.11*fcos(6.28318*p.y*  3.1+vec3(-1.0,0.0,1.0));\n    col += 0.10*fcos(6.28318*p.x*  5.1+vec3(+1.0,1.0,0.0));\n    col += 0.09*fcos(6.28318*p.y*  9.1+vec3(-1.0,0.0,1.0));\n    col += 0.08*fcos(6.28318*p.x* 17.1+vec3(+1.0,1.0,0.0));\n    col += 0.07*fcos(6.28318*p.y* 33.1+vec3(-1.0,0.0,1.0));\n    col += 0.06*fcos(6.28318*p.x* 65.1+vec3(+1.0,1.0,0.0));\n    col += 0.05*fcos(6.28318*p.y*129.1+vec3(-1.0,0.0,1.0));\n    col += 0.04*fcos(6.28318*p.x*257.1+vec3(+1.0,1.0,0.0));\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord )\n{\n    // coordinates\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    p *= 2.0;\n    //p += 100.0;\n    vec2 q = p;\n    \n    // deform\n    float a = 1.5;\n    float b = 0.5;\n    float c = 0.0;\n    \n    vec2 o1 = vec2(1.0, 1.0);\n    vec2 o2 = vec2(1.0, 2.0);\n    for (int i = 0; i < 16; i++){\n        p += clamp(1.0, 0.0, a)*cos(b*p.yx + c*iTime + o1);\n        a *= 0.502357;\n        b *= 2.02357;\n        c += 0.05;\n        \n        vec2 ot = o1;\n        o1 += o2;\n        o2 = ot;\n    }\n\n    // base color pattern\n    vec3 col = getColor(p*0.1);\n    \n    \n    //b = dot(p-q,p-q);\n    //col *= clamp(1.0, 0.0, 1.0-b*8.0);\n \n   fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}