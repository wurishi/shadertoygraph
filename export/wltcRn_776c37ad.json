{"ver":"0.1","info":{"id":"wltcRn","date":"1608397068","viewed":84,"name":"Simple audio visualization","username":"nir","description":"Simple audio visualization for Jupylet's piano demo: \nhttps://github.com/nir/jupylet","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["oscilloscope","sound","audio"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.2 + 0.2 * cos(iTime + uv.xyx + vec3(0, 2, 4));\n\n    float amp = texture(iChannel0, vec2(uv.x, 1.)).r; \n    \n    vec3 sig = vec3(0.00033 / max(pow(amp - uv.y, 2.), 1e-6));\n    \n    sig *= vec3(.5, .5, 4.) / 2.;\n   \n    col += sig;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}