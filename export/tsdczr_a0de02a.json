{"ver":"0.1","info":{"id":"tsdczr","date":"1600336381","viewed":268,"name":"Directional Ray","username":"seung1107","description":"ray","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["ray"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int Samples = 64; //multiple of 2\nfloat Intensity = 0.2;\n\nvec4 DirectionalBlur(in vec2 UV, in vec2 Direction, in float Intensity, in sampler2D Texture)\n{\n    vec4 Color = vec4(0.0);  \n    \n    for (int i=1; i<=Samples/2; i++)\n    {\n      Color += texture(Texture,UV+float(i)*Intensity/float(Samples/2)*Direction);\n      Color += texture(Texture,UV-float(i)*Intensity/float(Samples/2)*Direction);\n    }\n\n    return Color/float(Samples);    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 UV = fragCoord.xy / iResolution.xy;\n    \n    vec2 Direction = vec2(-1.0, 0.0);    \n    \n    vec4 Color = DirectionalBlur(UV,normalize(Direction),Intensity,iChannel0);\n    \n\tfragColor = Color;\n}","name":"Image","description":"","type":"image"}]}