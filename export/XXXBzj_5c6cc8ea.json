{"ver":"0.1","info":{"id":"XXXBzj","date":"1728583725","viewed":23,"name":"матрицы смещения rotation etc","username":"ArtemDvornikov","description":"матрицы смещения rotation etc","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["rotationetc"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 bg = vec3(0.0);\n\nconst float rectanglePositionX = 0.0;\nconst float rectanglePositionY = 0.0;\nconst float rectangleWidth = 0.2;\nconst float rectangleHeight = 0.1;\n\nfloat createRectangle(in vec2 p, in vec2 b, in vec4 r) {\n    vec2 q = abs(p) - b + r.x;\n    return min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - r.x;\n}\n\nvec2 rotate(vec2 uv, float angle) {\n    return uv * mat2(cos(angle), sin(angle), -sin(angle), cos(angle));\n}\n\nvec2 moving(vec2 uv, vec2 move) {\n    return (vec3(uv, 1) * mat3(1.0, 0.0, -move.x, 0.0, 1.0, -move.y, 0.0, 0.0, 1.0)).xy;\n}\n\nvec2 scaling(vec2 uv, vec2 scale) {\n    return (vec3(uv, 1) * mat3(1.0/scale.x, 0.0, 0.0, 0.0, 1.0/scale.y, 0.0, 0.0, 0.0, 1.0)).xy;\n}\n\n\nvoid drawScene(vec2 uv) {\n\n    vec3 color = vec3(1.0); // цвет для отрисовки фигур\n\n    vec2 centerRectangleCoords = vec2(rectanglePositionX, rectanglePositionY);\n    vec2 newRectangleCoords = uv - centerRectangleCoords;\n    \n    newRectangleCoords = rotate(newRectangleCoords, 45.0);\n    newRectangleCoords = moving(newRectangleCoords, vec2(-0.5, 0.5));\n    newRectangleCoords = scaling(newRectangleCoords, vec2(3.0, 1.0));\n\n    float rectangle = createRectangle(newRectangleCoords, vec2(rectangleWidth, rectangleHeight), vec4(0.0));\n    \n    float alphaRectangle = step(0.0, -rectangle);\n    bg = mix(bg, color, alphaRectangle);\n    bg = mix(bg, color, 1.0 - smoothstep(0.0, 0.01, rectangle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    drawScene(uv);\n    \n    fragColor = vec4(bg,1.0);\n}","name":"Image","description":"","type":"image"}]}