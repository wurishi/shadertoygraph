{"ver":"0.1","info":{"id":"stlyW7","date":"1648139173","viewed":105,"name":"Shade - ATI 2","username":"Macouta","description":"ATI 2","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["audioreactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XlsXDl","filepath":"https://soundcloud.com/octotune/13-shade","previewfilepath":"https://soundcloud.com/octotune/13-shade","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"precision mediump float;\nuniform vec2 resolution;\nuniform float time;\n\nfloat PI = 3.14159265;\nfloat TAU = 6.28318;\n#define sound (texture(iChannel0, vec2(0.001,0.25)).x)\n\nfloat sdVesica(vec2 p, float r, float d)\n{\n    p = abs(p);\n\n    float b = sqrt(r*r-d*d);  // can delay this sqrt by rewriting the comparison\n    return ((p.y-b)*d > p.x*b) ? length(p-vec2(0.0,b))*sign(d)\n                               : length(p-vec2(-d,0.0))-r;\n}\n\nfloat hash21 (vec2 x)\n{return fract(sin(dot(x,vec2(12.4,14.1)))*1245.4);}\n\nvec2 moda(vec2 p, float per)\n{\n    float a = atan(p.y, p.x);\n    float l = length(p);\n    a = mod(a-per/2., per)-per/2.;\n    return vec2(cos(a),sin(a))*l;\n}\n\nmat2 rot (float a)\n{return mat2(cos(a),sin(a),-sin(a),cos(a));}\n\nfloat smin( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\nfloat sphe (vec3 p, float r)\n{return length(p)-r;}\n\nfloat cyl (vec2 p, float r)\n{return length(p)-r;}\n\nfloat needles(vec3 p)\n{\n    vec3 pp = p;\n    float l_needle = 0.8 - clamp(sound,0.,0.65);\n    \n    p.xz = moda(p.xz, 2.*PI/7.);\n    float n1 = cyl(p.yz,0.1-p.x*l_needle);\n    \n    p = pp;\n    p.y = abs(p.y);\n    p.y -= 0.1;\n    p.xz = moda(p.xz, 2.*PI/7.);\n    p.xy *= rot(PI/4.5);\n\n    float n2 = cyl(p.yz,0.1-p.x*l_needle);\n    \n    p = pp;\n    float n3 = cyl(p.xz, 0.1-abs(p.y)*l_needle);\n    \n    return min(n3,min(n2,n1));\n}\n\nfloat spikyball (vec3 p, float size)\n{\n    p.y -= iTime;\n    p.xz *= rot(iTime);\n    p.yz *= rot(iTime*0.5);\n    float s = sphe(p,size);\n    return smin(s, needles(p), 5.);\n}\n\n// provided by Shane, thank you :3\nfloat room(vec3 p)\n{\n    p += sin(p.yzx - cos(p.zxy));\n    p += sin(p.yzx/1.5 + cos(p.zxy)/2.)*.5;\n    return -length(p.xz) + 5.;\n}\n\nfloat circleSDF(vec2 uv){\n  return length(uv);\n}\n\nfloat vesicaSDF(vec2 uv, float w){\n  vec2 offset = vec2(w*.5, 0.);\n  return max(circleSDF(uv+offset),\n            circleSDF(uv-offset));\n}\n\nfloat fill(float x, float size){\n  return 1.-step(size, x);\n}\n\nfloat stroke(float x, float s, float w){\n  float d = step(s, x+w*.5) -\n            step(s, x-w*.5);\n  return clamp(d, 0., 1.);\n}\n\nfloat flip(float v, float pct){\n  return mix(v, 1.-v, pct);\n}\n\nvec2 rotate(vec2 uv, float angle){\n  return mat2(cos(angle), -sin(angle),\n       sin(angle), cos(angle)) * uv;\n}\n\nfloat vignette(vec2 uv, float radius, float smoothness) {\n    float diff = radius - distance(uv, vec2(0.5, 0.5));\n    return smoothstep(-smoothness, smoothness, diff);\n}\nvec3 pal( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec3 col = vec3(0.);\n    vec2 uv = 2.0 * fragCoord/iResolution.xy - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float eye_sdf = vesicaSDF(rotate(uv, PI/2.), clamp(sound,0.2,1.0));\n    float eye_mask = fill(eye_sdf, .65);\n    float eye_stroke = stroke(eye_sdf, 0.65, 0.04);\n    col += vec3(eye_stroke) * -vec3(cos(iTime)  * 0.5 + 0.5,sin(iTime) * 0.5 + 0.5,0.);\n\n    float dither = hash21(uv);\n    \n    vec3 ro = vec3(0.001,0.001+iTime,-3.); \n    vec3 p = ro;\n    vec3 dir = normalize(vec3(uv, 1.));\n    \n    float shad = 0.;\n    \n    for (float i = 0.; i<64.0; i++)\n    {\n        float d = spikyball(p, .4) * eye_mask ;\n        if(d<0.001)\n        {\n        \tshad = i/64.0;\n            break;\n        }\n        d *= 0.9+dither*0.1;\n        p+=d*dir;\n    }\n    \n    col += shad * 5.0 * pal( shad, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67) );\n    \n    \n\tfloat d = abs(sdVesica(rotate(uv, PI/2.), 1.4 - clamp(sound,0.4,.8),clamp(sound,0.5,1.0)*0.5 )) - 0.1;\n    d = d*d;\n    vec3 bg = vec3(clamp(sound,1.0,2.0)) - d*vec3(cos(iTime)  * 0.5 + 0.5,sin(iTime) * 0.5 + 0.5,0.);\n\n\tbg *= 1.0 - exp(-5.0*abs(d));\n\tbg *= 0.8 + 0.2*cos(100.0*d) * sin(iTime * 0.2)*0.5 + 1.0;\n    col = col + bg * vec3( 1.0 - eye_mask);\n    \n    //PP\n    vec2 pp_uv = fragCoord/iResolution.xy;\n    col *= vignette(pp_uv, 0.5, 0.5);\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}