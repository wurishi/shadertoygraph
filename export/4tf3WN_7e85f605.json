{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Hazel Quantock 2015\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// These will only save chars if they're used a few times\n//#define V vec3\n//#define N normalize\n//#define O fragColor.rgb\n//#define T(a) texture(iChannel0,a*.01)\n\nvoid mainImage( out vec4 f, in vec2 w )\n{\n    vec3 r = normalize(vec3(w-200.,300))*.2,\n         p = vec3(0,0,5)*iTime;\n\n// better camera\n//    vec3 r = normalize(iResolution.xyx-vec3(2.*fragCoord.xy,0))*.2,\n//         p = vec3(0,0,iTime)*5.+sin(iTime)*3.;\n\n    f*=.0; // my PC doesn't need this, but some might...\n    \n    float q=30.;\n\tfor(int i=0;i<99;i++)\n    {\n        vec4 t=texture(iChannel0,(p.xy+vec2(37,17)*floor(p.z)+.5)/256.);\n        f+=mix(t.y,t.x,fract(p.z))/q;\n        q*=1.03;\n        p+=r;\n    }\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4tf3WN","date":"1422009982","viewed":2680,"name":"[2TC 15] Cloudy","username":"TekF","description":"Trying to do volumetric clouds in 280 chars\nFor nimitz's 2 tweet contest: https://www.shadertoy.com/view/4tl3W8","likes":22,"published":3,"flags":0,"usePreview":1,"tags":["raymarching","clouds","volumetric"],"hasliked":0,"parentid":"","parentname":""}}