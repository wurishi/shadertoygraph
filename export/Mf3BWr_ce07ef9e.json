{"ver":"0.1","info":{"id":"Mf3BWr","date":"1732920033","viewed":81,"name":"Hex Truchet - espaguete","username":"Elsio","description":"truchet is funny â™¥","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["truchet","tiles","v4"],"hasliked":0,"parentid":"lcyyDt","parentname":"Hex Truchet - pareidolia 2"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(d)    smoothstep(0., 12. / r.y , d)                           // AA\n#define D(d)    o = (1. + (o - 1.) * S(d)) * (S(abs(d)))                // mix\n#define C(p, r) abs(length(p) - r) - e                                  // circle\n#define B(p, b) length(max(abs(p) - b, 0.)) - e                         // box\n#define H(p)    fract(sin(dot(p + iMouse.xy, vec2(12.9898, 78.233))) * 43758.5453)  // hash\n#define hex vec2(1, sq)\n#define rot(a) mat2(cos(a + vec4(0, 1, 3, 0) * pi / 2.))\n#define pi acos(-1.)\n\n// truchets list https://www.shadertoy.com/playlist/mcSSzG\n\n#define sq sqrt(3.)\n#define isq 1. / sq\n#define hisq isq / 2.\n#define tsq 3. / 2. / sq\n#define v10 vec2(1, 0)\n#define v0isq vec2(0, isq)\n\nvoid hexgrid(vec2 u, out vec2 p, out vec2 id) {\n    vec2 a = mod(u,            hex) - hex / 2.,\n         b = mod(u - hex / 2., hex) - hex / 2.;\n    \n    p = a;\n    id = floor(u / hex) * 2.;\n    \n    if(dot(a, a) > dot(b, b)) {\n        id = floor(u / hex - .5) * 2. + 1.;\n        p = b;\n    }\n}\n\n#define curva1_r(s1, s2) D(C(p + s1 vec2(s2 1, isq) / 2., hisq))\n#define curva1(s) D(C(p + s v0isq, hisq))\n#define ponto_r(s1, s2) D(C(p + s1 vec2(s2 1, sq) / 4., 0.))\n#define ponto(s) D(C(p s v10 / 2., 0.))\n#define curva2(s) D(C(p s v10, tsq))\n\nvoid mainImage(out vec4 o, vec2 u) {\n    vec2 r = iResolution.xy, p, id;\n    u = 2.4 * (u + u - r) / r.y + vec2(iTime) * .5;\n    o *= .0;\n    \n    hexgrid(u, p, id);\n\n    float e = .08,\n          coin1 = (floor(H(id) * 6.) - 3.) * pi / 3.,\n          coin3 = (floor(H(id + .2) * 2.)), coin2;\n    \n    int k = int(id.x), h = 3;\n    \n    p *= rot(coin1);\n    \n    if(k % h == 0)\n        coin2 = floor(H(id + .1) * 3.) + 4., o.r = .5;\n        \n    else if(k % h == 2)\n        coin2 = floor(H(id + .2) * 4.), o.b = 1.; \n        \n    else if(k % h == 1)\n        coin2 = 6., o.g = .5; \n    \n    if(coin2 == 0.) { // 9\n        ponto(-);  // ponto\n        ponto(+);  // ponto\n        ponto_r(-, +); // ponto rotacionado\n        ponto_r(+, +); // ponto rotacionado\n        ponto_r(+, -); // ponto rotacionado\n        ponto_r(-, -); // ponto rotacionado\n    }\n    \n    if(coin2 == 1.) { // 9\n        curva1(-);  // curva1\n        curva1(+);  // curva1\n        ponto(-);  // ponto\n        ponto(+);\n    }\n    \n    if(coin2 == 2.) { // 6\n        curva2(+);   // curva2\n        curva2(-);\n        ponto(-); // ponto\n        ponto(+); // ponto\n    }\n    \n    if(coin2 == 3.) { // a\n        curva2(-); // curva2\n        ponto(-); // ponto\n        \n        if(coin3 < 1.){\n            curva1_r(+, +); // curva1 rotacionada1\n            ponto_r(-, -); // ponto rotacionado\n        }\n    \n        else{\n            curva1_r(-, -); // curva1\n            ponto_r(+, +); // ponto rotacionado\n        }\n    }\n    if(coin2 == 4.) { // 3\n        curva1(-);  // curva1\n        curva1_r(+, -); // curva1 rotacionada1   \n        curva1_r(+, +);  // curva1 rotacionada2\n    }\n    \n    if(coin2 == 5.) { // 5  \n        curva1(-);  // curva1\n        curva1(+);  // curva1\n        D(B(p - v10 / 2., v10));  // reta\n    }\n    \n    if(coin2 == 6.) { // 6\n        curva2(+);   // curva2\n        curva1_r(-, +); // curva1 rotacionada1   \n        D(C(p + hex / 2., tsq)); // curva2 rotacionada\n    }\n    \n    o.b *= .7;\n}","name":"Image","description":"","type":"image"}]}