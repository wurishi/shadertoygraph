{"ver":"0.1","info":{"id":"4s33W7","date":"1450643517","viewed":242,"name":"Paratrooper","username":"pimuri","description":"Trying to imitate an old game. \nYes, the code is fugly. \nNot sure if we could add mouse control for shooting and perhaps some actual paratroopers.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["game","80s","unfinished","paratrooper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// color def\n#define color_transparent vec4(0.0, 0.0, 0.0, 0.0)\n#define color_white vec4(1.0, 1.0, 1.0, 1.0)\n#define color_pink vec4(1.0, 0.3137, 1.0, 1.0)\n#define color_light_blue vec4(0.3137, 1.0, 1.0, 1.0)\n\n\n// ground def\n#define ground_start vec2(-2.0, 0.85)\n#define ground_end vec2(2.0,  0.85)\n\n\n// turret base def\n#define turret_base_width 0.35\n#define turret_base_height 0.3\n#define turret_base_center vec2(0.0, - 0.7)\n\n// turret barrel def\n#define tb_mount_point vec2(0.0, -0.51)\n#define tb_fov 90.0\n\n// tb_c_radius = turret barrel circle radius\n#define tb_c_radius 0.0010\n\n// tb_a_s = turret barrel angle speed\n#define tb_a_s 0.014\n\n#define tb_length 50\n\n// turret base mount def  (tbm)\n#define tbm_center vec2(0.0, - 0.51)\n#define tbm_width 0.1\n#define tbm_height 0.08\n\n\n// stolen from https://www.shadertoy.com/view/Xd2XWR (and modified for my own purposes)\n// who got it from IÃ±igo Quilez (iq)\n// Thanks!\nvec4 line(vec2 p,vec2 start,vec2 end, vec4 currColor, vec4 newColor, bool mixColors )\n{\n    vec2 pa = -p - start;\n    vec2 ba = end - start;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    float d = length( pa - ba*h );\n    \n    if(mixColors) {\n\t\treturn clamp(((1.0 - d)-0.99)*100.0, 0.0, 1.0) * (currColor + newColor) ;    \n    }\n    return clamp(((1.0 - d)-0.99)*100.0, 0.0, 1.0) * newColor;\n}\n\nvec4 rect(vec2 p, vec2 start, vec2 end, vec4 currColor, vec4 newColor, bool mixColors)\n{\n\tvec2 minPoint, maxPoint;\n    \n    minPoint.x = min(start.x, end.x);\n    minPoint.y = min(start.y, end.y);\n    maxPoint.x = max(start.x, end.x);\n    maxPoint.y = max(start.y, end.y);\n   \n    if(p.x > minPoint.x && p.x < maxPoint.x && p.y > minPoint.y && p.y < maxPoint.y) {\n        if(mixColors)\n        {\n        \treturn currColor + newColor;\n        }\n    \treturn newColor;\n    }\n    return currColor;\n}\n\nvec4 circle(vec2 p, vec2 pos, float radius, vec4 currColor, vec4 newColor, bool mixColors)\n{\n    // x^2 + y^2 < radius\n    \n    float x2 = (p.x - pos.x) * (p.x - pos.x);\n    float y2 = (p.y - pos.y) * (p.y - pos.y);\n        \n    if(x2 + y2 < radius) {\n        if(mixColors)\n        {\n        \treturn currColor + newColor;\n        }\n    \treturn newColor;\n    \n    }\n    return currColor;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float cba = 0.0; // current barrel angle\n    \n    cba = sin(iTime) * tb_fov * tb_a_s; // tb field of view / tb angle speed\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0 * uv;\n    p.x *= iResolution.x / iResolution.y;\n    \n    // ground\n    fragColor = line(p, ground_start, ground_end, fragColor, color_light_blue, false);\n    \n    // turret base\n    fragColor = rect(p, vec2(turret_base_center.x - turret_base_width/2.0,turret_base_center.y - turret_base_height/2.0), vec2(turret_base_center.x + turret_base_width/2.0,turret_base_center.y + turret_base_height/2.0), fragColor, color_white, false);\n    \n    vec2 bsp = vec2( 0.0, tbm_center.y + 0.04); // barrel start point\n    \n    // turret barrel\n    for(int i = 1; i <= tb_length; i++)\n    {\n    \tfragColor = circle(p, vec2(bsp.x + float(i) * sin(cba)*tb_c_radius*2.0, bsp.y + float(i) * cos(cba)*tb_c_radius*2.0), tb_c_radius, fragColor, color_light_blue, false);\n    }\n    \n    \n    // turret base mount\n    fragColor = rect(p, vec2(tbm_center.x - tbm_width/2.0, tbm_center.y - tbm_height/2.0), vec2( tbm_center.x + tbm_width/2.0, tbm_center.y + tbm_height/2.0), fragColor, color_pink, false);\n    fragColor = circle(p, bsp, 0.0023, fragColor, color_pink, false);\n    fragColor = circle(p, bsp, 0.00023, fragColor, color_light_blue, false);\n    \n}","name":"","description":"","type":"image"}]}