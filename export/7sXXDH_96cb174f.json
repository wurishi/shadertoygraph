{"ver":"0.1","info":{"id":"7sXXDH","date":"1618567692","viewed":92,"name":"Simple Pixel Filter / Tile","username":"NakedBowman","description":"just pixel,im using as a working ground for somethng else atm","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["simple","pixel","filter","pixelate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    uv+=iTime*0.05;//DEMO\n    //Get the pixelSize \n    float pixelSize = 40.f;\n    float outline = 0.1;\n    vec2 onePixel = pixelSize / iResolution.xy;\n    vec2 coord = onePixel * floor(uv/onePixel);\n    uv*= iResolution.xy/pixelSize;\n    uv = fract(uv);\n    float border = step(outline,uv.y)-step(1.-outline,uv.y);\n    border = (step(outline,uv.x)-step(1.-outline,uv.x))*border;\n     \n    fragColor = texture(iChannel0, coord)*border;\n    border = (border -1.)* -1.;\n    vec3 borderColor = vec3(fract(iTime)+uv.x,sin(iTime)+uv.y, cos(iTime))*border;\n    fragColor.rgb +=borderColor;\n    fragColor = vec4(fragColor.rgb,border);\n}\n\n","name":"Image","description":"","type":"image"}]}