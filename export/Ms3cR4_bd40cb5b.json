{"ver":"0.1","info":{"id":"Ms3cR4","date":"1518536462","viewed":963,"name":"a nice mandala","username":"netgrind","description":"circles n such :)\nv messy code, oops","likes":43,"published":3,"flags":0,"usePreview":0,"tags":["mandala"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    fragCoord -= iResolution.xy*.5;\n    vec2 uv = fragCoord/iResolution.yy;\n    uv*=5.;\n\tfloat t = iTime*3.1415;\n    \n    float a = atan(uv.y, uv.x);\n    float d = length(uv)-.3; \n    vec3 col = vec3(1.);\n    float timeWobble = cos(t+d)*.01*d;\n    float tt = mod(iTime*.5, .5)-.5;\n    for(float j = 0.; j<10.; j+=.5){\n        for(float i = 0.; i<6.28; i+=3.14*.125){\n            float q = (j==0.?(tt+.5):1.);\n            float p = i;//+sin(t+d)*.2;\n            vec2 u = uv+vec2(sin(p), cos(p))*(j-timeWobble+tt-0.25)*q;\n            col += smoothstep(.0, .013, length(u)-(smoothstep(0., 3.,j+tt)+timeWobble)* q*2.);\n        }    \n    }\n\tcol = sin((mod(col, vec3(4.))+vec3(1.,0.0, 3.))*1.5707-(d*3.-a*3.)+t)*.5+.5;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}