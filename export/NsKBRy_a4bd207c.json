{"ver":"0.1","info":{"id":"NsKBRy","date":"1658409786","viewed":298,"name":"infinite oil spillage","username":"nexor","description":".","likes":16,"published":1,"flags":0,"usePreview":0,"tags":["rgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define frame iFrame\n#define resolution iResolution.xy\nconst float pi = acos(-1.);\n#define tri(x) abs(2.*fract(x)-1.)\n#define sin1(x) (sin(x)*.5+.5)\nmat2 rot(float a)\n{\n  float c=cos(a),s=sin(a);\n  return mat2(c,-s,s,c);\n}\nvec3 hash3( float n )\n{return fract(sin(vec3(n,n+1.0,n+2.0))*vec3(43758.5453123,22578.1459123,19642.3490423));}\nfloat mod289(float x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 mod289(vec4 x){return x - floor(x * (1.0 / 289.0)) * 289.0;}\nvec4 perm(vec4 x){return mod289(((x * 34.0) + 1.0) * x);}\nfloat noise(vec3 p){\n    vec3 a = floor(p);\n    vec3 d = p - a;\n    d = d * d * (3.0 - 2.0 * d);\n    vec4 b = a.xxyy + vec4(0.0, 1.0, 0.0, 1.0);\n    vec4 k1 = perm(b.xyxy);\n    vec4 k2 = perm(k1.xyxy + b.zzww);\n    vec4 c = k2 + a.zzzz;\n    vec4 k3 = perm(c);\n    vec4 k4 = perm(c + 1.0);\n    vec4 o1 = fract(k3 * (1.0 / 41.0));\n    vec4 o2 = fract(k4 * (1.0 / 41.0));\n    vec4 o3 = o2 * d.z + o1 * (1.0 - d.z);\n    vec2 o4 = o3.yw * d.x + o3.xz * (1.0 - d.x);\n    return o4.y * d.y + o4.x * (1.0 - d.y);\n}\nconst mat3 M =mat3(\n\t.74,-.52,.42,\n\t.64,.73,-.23,\n\t-.19,.45,.88\n);\nfloat fbm(vec3 p)\n{\n    float f = 0.0;\n    f += 0.5000*noise( p ); p*=M*2.02;\n    f += 0.2500*noise( p ); p*=M*2.03;\n    f += 0.1250*noise( p ); p*=M*2.01;\n    f += 0.0625*noise( p );\n    f /= 0.9375;\n    return f;\n}\nvec2 fan(vec2 p, int n)\n{\n  float N=float(n);\n  float a = atan(p.y,p.x);\n  a=mod(a,pi*2./N)-pi/N;\n  return length(p)*vec2(cos(a),sin(a));\n}\nfloat box(vec2 p, vec2 s)\n{\n  vec2 d = abs(p)-s;\n  return min(max(d.x,d.y),0.)+length(max(d,0.));\n}\nfloat line( in vec2 p, in vec2 a, in vec2 b )\n{\n\tvec2 pa = p-a, ba = b-a;\n\tfloat h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n\treturn length( pa - ba*h );\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \tfloat mx = max(resolution.x, resolution.y);\n\tvec2 uv = (2.*fragCoord.xy-resolution.xy)/mx;\n\tvec3 col = vec3(0);\n\tfloat w=fwidth(uv.y);\n float d=1e3;\n float t=float(frame)/60.;\n vec2 p=uv,q=uv;\n float a=atan(uv.y,uv.x);\n float k=length(p);\n col=vec3(1,2,3)*15.;\n t-=500.;\n int T=5;\n for(int i=0;i<T;++i)\n {\n p=\n \tsin1(p*pi*2.+t*float(i+1)*.03);\n p*=rot(float(i+1)*pi*2./float(T)-t*.3+k*5.);\n col=cross(col.zyx,vec3(p,k));\n }\n col=normalize(col)*.5+.5;\n col=col*1.2-.2;\n col=pow(col,vec3(1./2.2));\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}