{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"webcam","id":"4sf3zn","filepath":"/presets/webcam.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Implemented from this blog site post-> http://www.gamedev.net/topic/590070-glsl-droste/\n\nconst float TWO_PI = 3.141592*2.0;\n\n//ADJUSTABLE PARAMETERS:\nconst float branches = 3.0;\nconst float scale = 0.6125; // try different values :)\nconst float speed = 10.0;\n\n//Complex Math:\nvec2 complexExp(in vec2 z){\n\treturn vec2(exp(z.x)*cos(z.y),exp(z.x)*sin(z.y));\n}\nvec2 complexLog(in vec2 z){\n\treturn vec2(log(length(z)), atan(z.y, z.x));\n}\nvec2 complexMult(in vec2 a,in vec2 b){\n\treturn vec2(a.x*b.x - a.y*b.y, a.x*b.y + a.y*b.x);\n}\nfloat complexMag(in vec2 z){\n\treturn float(pow(length(z), 2.0));\n}\nvec2 complexReciprocal(in vec2 z){\n\treturn vec2(z.x / complexMag(z), -z.y / complexMag(z));\n}\nvec2 complexDiv(in vec2 a,in vec2 b){\n\treturn complexMult(a, complexReciprocal(b));\n}\nvec2 complexPower(in vec2 a, in vec2 b){\n\treturn complexExp( complexMult(b,complexLog(a))  );\n}\n//Misc Functions:\nfloat nearestPower(in float a, in float base){\n\treturn pow(base,  ceil(  log(abs(a))/log(base)  )-1.0 );\n}\nfloat map(float value, float istart, float istop, float ostart, float ostop) {\n\t   return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n}\n\nvec4 droste(in vec2 co){\n\t\t\n\t//SHIFT AND SCALE COORDINATES TO <-1,1>\n\tvec2 z = (co-0.5+sin(iTime*0.3)*0.35)*2.0;\n\t\n\t//ESCHER GRID TRANSFORM:\n\tfloat factor = pow(1.0/scale,branches);\n\tz = complexPower(z, complexDiv(vec2( log(factor) ,TWO_PI), vec2(0.0,TWO_PI) ) ); \n\t\n\t//RECTANGULAR DROSTE EFFECT:\n\tz *= 1.0+fract(iTime*speed)*(scale-1.0);\n\tfloat npower = max(nearestPower(z.x,scale),nearestPower(z.y,scale));\n\tz.x = map(z.x,-npower,npower,-1.0,.40);\n\tz.y = map(z.y,-npower,npower,-1.0,.20);\n\t\n\t//UNDO SHIFT AND SCALE:\n\tz = z*0.5+0.5;\n\t\t\n\treturn texture(iChannel0,z);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec4 result = droste(uv);\n\tfragColor = result;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":true,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdjSRK","date":"1413798720","viewed":1116,"name":"Droste Webcam","username":"JoshuaBatty","description":"droste webcam effect","likes":9,"published":1,"flags":2,"usePreview":0,"tags":["droste","webcam"],"hasliked":0,"parentid":"","parentname":""}}