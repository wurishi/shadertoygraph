{"ver":"0.1","info":{"id":"4lsyD7","date":"1505102560","viewed":759,"name":"Concentric Rectwist","username":"cacheflowe","description":"My smallest shader yet. It's been a while, and I had a few minutes to spare. ","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["blackandwhite","concentric","opart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define audio 0.\n\nvec2 rotateCoord(vec2 uv, float rads) {\n    return uv * mat2(cos(rads), sin(rads), -sin(rads), cos(rads));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 10. * (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv = rotateCoord(uv, length(uv) * 0.11 * sin(iTime * 0.5));\n    float lines = (audio == 1.) ? 5. + texture( iChannel0, vec2(0.4, 0.2) ).r * 10. : 10.;\n    float col = 0.5 + 0.5 * sin(max(abs(uv.x), abs(uv.y)) * lines + iTime * 5.);\n    float aa = 100. / iResolution.y;\n    fragColor = vec4(vec3(smoothstep(0.5 - aa, 0.5 + aa, col)), 1.);\n}","name":"Image","description":"","type":"image"}]}