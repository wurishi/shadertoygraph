{"ver":"0.1","info":{"id":"M3XfDS","date":"1729019791","viewed":33,"name":"something radar","username":"hakrackete","description":"rr","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["radar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define PI 3.14159\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdRing( vec2 p, float r, float r2)\n{\n    return sdCircle(p,r) + (-1.0)* (sdCircle(p,r2));\n}\n\n\n\nfloat Ring( vec2 p, float r, float r2)\n{\n    float num = (sdCircle(p,r) * sdCircle(p,r2));\n    return (num < 0.0) ? 1.0 : 0.0;\n}\n \nfloat atan3(vec2 st){\n    return mod(atan(st.t, st.s), 2. * PI);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 bgGreen = vec3(0.0,0.0,0.0);\n    vec3 Radarbase = vec3(0.0,1.0,0.0);\n    vec3 Dirtwhite = vec3(0.8,1.0,0.8);\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    uv *= 2.0;\n    uv -= vec2(1);\n    uv.x /= iResolution.y/iResolution.x; \n    \n    float bps = 37.5 / 60.0;\n    float angle = mod((PI/2.0) *  iTime * bps + PI, 2.  * PI);\n\n    // Time varying pixel color\n    vec3 col = bgGreen;\n    //col = vec3(uv,0.0); \n    \n    float lineth = 0.004;\n    \n    float minsize = 0.3;\n    float ringthickness = 0.012;\n    float radarsize = 0.700;\n    \n        \n    float dist1 = mod(angle - atan3(uv), 2. * PI);\n    float scan_rad = 0.07;\n    float dist2 = mod(angle - atan3(uv) - scan_rad, 2. * PI);\n\n    float trail_rad = 1.77;\n    float inv_trail = 1.0/trail_rad;\n    \n    float detect_lifespan = PI;\n    float inv_lifespan = 1.0 / detect_lifespan;\n    \n    int num_rings = 4;\n    \n    // Radar-Rings\n    for (int i = 1; i < num_rings + 1; i++){\n        float factor = float(i) / float(num_rings);\n        float start = mix(0.0,radarsize,factor);\n        col = mix(col,Radarbase, (Ring(uv, start,start+ringthickness)));\n\n    } \n    \n\n    //col = mix(col,vec3(1.0), (sdCircle(uv, 0.5)< 0.0) ? 1.0:0.0 );\n    //col = mix(col,vec3(1.0), (Ring(uv, 0.1,0.107)));\n    //col = mix(col,vec3(1.0), (Ring(uv, 0.3,0.307)));\n    //col = mix(col,vec3(1.0), (Ring(uv, 0.5,0.507)));\n    //col = mix(col,vec3(1.0), (Ring(uv, 0.7,radarsize + ringthickness)));\n    \n    vec2 box1 = vec2(0.707,0.2);\n    \n    if (((abs(uv.y) < lineth) || (abs(uv.x) < lineth)) && (length(uv) < radarsize)){\n        col = Radarbase;\n    }\n\n    \n    // Radar-Arc\n    if (dist1 < scan_rad && dist1 > 0.0 && (length(uv) < radarsize)){\n        col = Radarbase;\n    }\n    \n    // Radar-Trail\n    if (length(uv) < radarsize){\n          \n        col = mix(col,Radarbase,max(0.0,1. - (inv_trail * dist2)));\n\n    }\n    \n    //ship-Data  vec3( x | y | radius) \n    vec3 ship1 = vec3(0.2,0.2,0.017);\n    vec3 ship2 = vec3(0.4,-0.13,0.02);\n    vec3 ship3 = vec3(- 0.53,0.3,0.02);\n    vec3 ship4 = vec3(-0.14,-0.6,0.02);\n    \n    float r = 0.02;\n    \n\n\n    float factor = 0.5;\n    float o = 0.34;\n    float a1 = o + 0.0 * factor;\n    float a2 = o + factor *  PI / 4.0;\n    float a3 = o + factor *  3.0 * PI / 4.0;\n    float a4 = o + factor *  4.0 * PI / 4.0;\n    float a5 = o + factor *  6.0 * PI / 4.0;\n    float a6 = o + factor *  7.0 * PI / 4.0;\n    float a7 = o + factor *  8.0 * PI / 4.0;\n    \n    \n    float a8 = o + factor *  11.0 * PI / 4.0;\n    float a9 = o + factor *  13.0 * PI / 4.0;\n    float a0 = o + factor *  14.0 * PI / 4.0;\n\n\n\n    float r1 = 0.842 * radarsize;\n    float r2 = 0.193 * radarsize;\n    float r3 = 0.724 * radarsize;\n    float r4 = 0.399 * radarsize;\n    float r5 = 0.571 * radarsize;\n    float r6 = 0.365 * radarsize;\n    float r7 = 0.928 * radarsize;\n    float r8 = 0.254 * radarsize;\n    float r9 = 0.681 * radarsize;\n    float r0 = 0.307 * radarsize;\n\n\n    vec3 s1 = vec3(r1 * cos(a1), r1* sin(a1),r);\n    vec3 s2 = vec3(r2 * cos(a2), r2 * sin(a2),r);\n    vec3 s3 = vec3(r3 * cos(a3), r3 * sin(a3),r);\n    vec3 s4 = vec3(r4 * cos(a4), r4 * sin(a4),r);\n    vec3 s5 = vec3(r5 * cos(a5), r5 * sin(a5),r);\n    vec3 s6 = vec3(r6 * cos(a6), r6 * sin(a6),r);\n    vec3 s7 = vec3(r7 * cos(a7), r7 * sin(a7),r);\n    \n    vec3 s8 = vec3(r8 * cos(a8), r8 * sin(a8),r);\n    vec3 s9 = vec3(r9 * cos(a9), r9 * sin(a9),r);\n    vec3 s0 = vec3(r0 * cos(a0), r0 * sin(a0),r);\n\n\n\n    vec3 array[10] = vec3[10](s1,s2,s3,s4,s5,s6,s7,s8,s9,s0);\n    \n    //detected Ships\n    for(int i = 0; i< array.length(); i++){\n        if(detect_lifespan - dist2 > 0.){\n            float brightness = 1. - (inv_lifespan * dist2);\n            //brightness = cos(1.);\n            float val = ((sdCircle(uv + array[i].xy, array[i].z)< 0.0) ? 1.0:0.0) * brightness;\n            col = mix(col,mix(vec3(0.0,1.0,0.0) , vec3(1.0), val), val);\n        }\n\n    }\n    //col = mix(col,vec3(1.0), ((sdCircle(uv + vec2(0.2), 0.02)< 0.0) ? 1.0:0.0) * max(0.0,1. - (inv_lifespan * dist2)) );\n\n    //col = mix(col,vec3(1.0),max(0.0,1. - (inv_trail * dist2)));\n    //if (((2. * PI + dist1) < scan_rad) &&((2. * PI + dist1) > 0.0) && (length(uv) < radarsize)){\n    //    col = Radarbase;\n    //}\n    \n    //col = mix(col, vec3(1.0), 1. -dist1);\n    \n    //col = vec3(max(0.0,1. - (inv_trail * dist2)));\n    \n   \n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}