{"ver":"0.1","info":{"id":"DtGXz3","date":"1686233335","viewed":273,"name":"fake Ambient Occlusion","username":"ianertson","description":"fake AO","likes":3,"published":3,"flags":0,"usePreview":1,"tags":["ao"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n    // Time varying pixel color\n    vec3 s = texture(iChannel0, uv).rgb;\n    float l = dot(s, s);\n    float l2 = dot(s, vec3(0.299, 0.587, 0.114));\n    \n    l2 = l2 * l2 * (3.0 - 2.0 * l2);\n    \n    float lf = fwidth(l2);\n    float d = exp(-lf);\n    vec2 fuv = fwidth(uv)*lf;\n    \n    float z1 = distance(fwidth(uv), fwidth(s.xy));\n    float z2 = fwidth(dot(uv, vec2(exp(-z1), d)));\n  \n    \n    \n    col += (1.0-smoothstep(\n      0.04,\n      d*0.7,\n      fwidth(\n        dot(\n          normalize(0.25*d-fuv.xyy*vec3(fwidth(s.xy) - 0.33 * lf, z1)),\n          normalize(0.25*l-vec3(s.xy, z1))\n        )\n      )\n    )) * 0.25;\n    \n    col += (1.0-smoothstep(\n      0.03,\n      d*0.5,\n      fwidth(\n        dot(\n          normalize(0.25*d-fuv.yyx*vec3(fwidth(s.yz) - 0.25 * lf, z2)),\n          normalize(0.25*l-vec3(s.yz, z2))\n        )\n      )\n    )) * 0.25;\n    \n    col += (1.0-smoothstep(\n      0.02,\n      d*0.45,\n      fwidth(\n        dot(\n          normalize(0.25*l-vec3(fwidth(s.yz) - 0.5 * lf, z2)),\n          normalize(0.25*d-vec3(s.yz, z2))\n        )\n      )\n    )) * 0.25;\n    \n    col += (1.0-smoothstep(\n      0.000001,\n      d*0.33,\n      fwidth(\n        dot(\n          normalize(0.25*l-vec3(fuv - lf, z2-z1)),\n          normalize(0.25*d-vec3(s.yz, z2-z1))\n        )\n      )\n    )) * 0.25;\n    \n    col += col*(col / (1.0 + col*4.0));\n    \n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}