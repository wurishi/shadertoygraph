{"ver":"0.1","info":{"id":"Mst3zj","date":"1451036764","viewed":520,"name":"Water Refraction","username":"phi16","description":"refract [ twice | once ]","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["2deffect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec3 bgColor(vec2 p){\n    return texture(iChannel0,vec2(0.5,0.)+vec2(p.x-0.5,p.y)*vec2(iResolution.x/iResolution.y/3.,1.)).xyz;\n}\n\nfloat noise( in vec3 x )//https://www.shadertoy.com/view/4sfGzS\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\tf = f*f*(3.0-2.0*f);\n\t\n\tvec2 uv = (p.xy+vec2(37.0,17.0)*p.z) + f.xy;\n\tvec2 rg = texture( iChannel1, (uv+0.5)/256.0, -100.0 ).xy;\n\treturn mix( rg.x, rg.y, f.z );\n}\n\nfloat waterProp(vec2 p){\n    return noise(vec3(p*8.+vec2(0.,iTime*6.),0.));\n}\n\nvec2 norm(vec2 p){\n    vec2 e = vec2(0.01,0);\n    return vec2(\n        waterProp(p+e.xy)-waterProp(p-e.xy),\n        waterProp(p+e.yx)-waterProp(p-e.yx));\n}\n\nvec3 color(vec2 p){\n    float w = waterProp(p);\n    if(w < 0.3){\n        return bgColor(p);\n    }else if(w < 0.4){\n        return bgColor(p) * ((0.4-w)*10./2.+0.5);\n    }\n    float pro = smoothstep(0.,.6,(waterProp(p)-0.4)*10./6.);\n    pro = sqrt(pro);\n    vec3 n = normalize(vec3(norm(p),pro*pro/4.));\n    vec3 o = vec3(p,-pro);\n    vec3 v = vec3(0,0,1);\n    v = refract(v,n,1.3);\n    o += v*pro/20.;\n    v = refract(v,vec3(n.xy,-n.z),1./1.3);\n    if(p.x < 0.5)o += v*((-3.-o.z)/v.z)/40.;\n    vec3 base = vec3(1.,1.,3.) * (pro*0.5+0.5) * bgColor(o.xy);\n    float sp1 = pow(max(0.,dot(normalize(vec3(0,-1,0.5)),n)),8.);\n    float sp2 = pow(max(0.,dot(normalize(vec3(-2.,1,1.)),n)),3.)/3.;\n    return base + sp1 + sp2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    uv = uv * 0.5 + 0.5;\n\tfragColor = vec4(color(uv),1.0);\n    if(abs(uv.x - 0.5) < 0.01)fragColor.xyz *= 0.1;\n}","name":"","description":"","type":"image"}]}