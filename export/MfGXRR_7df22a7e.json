{"ver":"0.1","info":{"id":"MfGXRR","date":"1714683853","viewed":63,"name":"Fork sincos 3d jessesound 832","username":"jessesound","description":"sine & cosine waves with z coord\n\nExperimenting with smooth minimum functions","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","wave","sine","trig"],"hasliked":0,"parentid":"XfXGz4","parentname":"sincos 3d"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define A(v) mat2(cos(m.v+radians(vec4(0, -90, 90, 0))))  // rotate\n#define W(v) length(vec3(p.yz-v(p.x+vec2(0, pi_2)+t), 0))-lt  // wave\n//#define W(v) length(p-vec3(round(p.x*pi)/pi, v(t+p.x), v(t+pi_2+p.x)))-lt  // wave\n#define P(v) length(p-vec3(0, v(t), v(t+pi_2)))-pt  // point\nfloat smin( float a, float b, float k )\n{\n    k *=1./(1.0-sqrt(0.5));\n    float h = max( k-abs(a-b), 0.10 )/k;\n    return min(a,b) - k*0.5*(1.0+h-sqrt(1.0-h*(h-2.0)));\n}\nvoid mainImage( out vec4 C, in vec2 U )\n{\n    float lt = .1, // line thickness\n          pt = .3, // point thickness\n          pi = 3.1416,\n          pi2 = pi*2.,\n          pi_2 = pi/2.,\n          t = iTime*pi,\n          s = 1., d = 0., i = d;\n    vec2 R = iResolution.xy,\n         m = (iMouse.xy-.5*R)/R.y*4.;\n    vec3 o = vec3(0, 0, -7), // cam\n         u = normalize(vec3((U-.5*R)/R.y, 1)),\n         c = vec3(0), k = c, p;\n    if (iMouse.z < 1.) m = -vec2(t/20.-pi_2, 0);\n    mat2 v = A(y), h = A(x); // pitch & yaw\n    for (; i++<30.;) // raymarch\n    {\n        p = o+u*d;\n        p.yz *= v;\n        p.xz *= h;\n        p.x -= 1.;\n        if (p.y < -1.5) p.y = 2./p.y;\n        k.x = min( max(p.x+lt, W(sin)), P(sin) );\n        k.y = min( max(p.x+lt, W(cos)), P(cos) );\n        s = smin(s, min(k.x, k.y),min(sin(iTime), 0.2));\n        if (s < .001 || d > 100.) break;\n        d += s*.5;\n    }\n    c = max(cos(d*pi2) - s*sqrt(d) - k, 0.);\n    c.gb += .1;\n    C = vec4(c*.4 + c.brg*.6 + c*c, 1);\n}","name":"Image","description":"","type":"image"}]}