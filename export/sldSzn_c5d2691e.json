{"ver":"0.1","info":{"id":"sldSzn","date":"1638648486","viewed":153,"name":"Game of Life Thanos Edition","username":"RupertOnTheLoose","description":"Starting with BigWIngs tutorial on the Coding the Game of Life turorial - https://youtu.be/xh61Ol2X4GA\n","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["gameoflife","thanos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Starting point\n// BigWIngs\n// Coding the Game of Life turorial - https://youtu.be/xh61Ol2X4GA\n\n\n// Click on image to focus and then press the space bar to Thanos Snap\n// Reset time with previous button at the bottom left of the image\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n   // Don't forget to set iChannel0 to BufferA in misc tab\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    fragColor = vec4(col,1.0);\n} ","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"int GetNeighbors(ivec2 p)\n{\n    int num = 0;\n    \n    for(int y=-1; y<=1; y++)\n    {\n        for(int x=-1; x<=1; x++)\n        {\n            if(x==0&&y==0) continue;\n            // Don't forget to set iChannel1 to BufferA in misc tab\n            num += texelFetch(iChannel1, p+ivec2(x, y), 0).r > .5 ? 1 : 0;\n        }\n    }\n    \n    return num;\n}\n\n// Keyboard input\n// iq - https://www.shadertoy.com/view/lsXGzf\n// Also referenced\n// gPlatl - https://www.shadertoy.com/view/XsycWw\nconst int KEY_SPACE = 32;\n\nfloat KeyPress()\n{\n    // Don't forget to set iChannel1 to keyboard in the misc tab\n    return texelFetch( iChannel2, ivec2(KEY_SPACE,1),0).x;\n}\n\n// Random Function\n// https://thebookofshaders.com/10/\nfloat Random01(vec2 st)\n{\n     return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n// Try to use the position as a seed to calculate and evaluate by .5 to\n// return 0 for dead or 1 for alive\nint ThanosSnap(vec2 p)\n{\n    float r = Random01(p);\n    \n    return  r > .5 ? 1 : 0;\n}\n\n// TODO \n// Compare the neighbors with kernals of stable or \n// unstable patterns in deciding who to cull\n// Probably should be called the \"Inquisitor\" (Red Dwarf episode - season 5, episode 2)\nint TimeStoneSnap()\n{\n    return 0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec4 col = vec4(0);\n    \n    // Don't forget to set iChannel0 to Gray noise medium in the textures tab\n    if(iFrame<10) // initialize\n        col = texture(iChannel0, uv);\n    else // do life!\n    {\n        bool alive = texelFetch(iChannel1, ivec2(fragCoord), 0).r > .5;\n        int num = GetNeighbors(ivec2(fragCoord));\n        \n        int next = 0;\n        \n        if(alive && (num==2 || num==3))\n            next = 1;\n        else if(!alive && num==3)\n            next = 1;\n        else\n            next = 0;\n          \n        // key pressed\n        float spaceKey = KeyPress();\n       \n        // Alive and Key Pressed\n        if(next==1 && spaceKey==1.0)\n        {\n            next = ThanosSnap(uv);\n        }\n        \n            \n        col = vec4(next);\n    }\n\n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}