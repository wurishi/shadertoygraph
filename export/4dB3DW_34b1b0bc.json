{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define maxSteps 76.0\n#define treshold 0.001\n#define maxdist 20.0\n#define shadowsteps 10.0\n#define aosteps 10.0\n#define pi acos(-1.)\n\nfloat perlin(vec3 p) {\n\tvec3 i = floor(p);\n\tvec4 a = dot(i, vec3(1., 57., 21.)) + vec4(0., 57., 21., 78.);\n\tvec3 f = cos((p-i)*pi)*(-.5)+.5;\n\ta = mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)), f.x);\n\ta.xy = mix(a.xz, a.yw, f.y);\n\treturn mix(a.x, a.y, f.z);\n\t}\n\n\nvec2 map(vec3 p ) {\n\tp=p*0.5 + vec3(-1.5,-1.5+cos(iTime)*0.5,-iTime);\n\treturn vec2( mix(sin(p.x),sin(p.y),sin(p.z)) - perlin(p) , 1.0);\n\t}\n\n\n\nvec2 rot(vec2 k, float t) {\n\treturn vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n\t}\n\nvec3 cNor(vec3 p ) {\n\tvec3 e=vec3(0.001,0.0,0.0);\n\treturn normalize(vec3( map(p+e.xyy).x - map(p-e.xyy).x, map(p+e.yxy).x - map(p-e.yxy).x, map(p+e.yyx).x - map(p-e.yyx).x ));\n\t}\n\nfloat cShd(vec3 ro, vec3 rd, float k ) {\n\tfloat res = 1.0;\n\tfor(float i=1.0; i<shadowsteps; i+=1.0){\n\t\tfloat f=shadowsteps/i;\n        float h = map(ro + rd*f).x;\n        if( h<0.001 ) { res=0.0; break; }\n        res = min( res, k*h/f );\n    }\n    return res;\n}\n\nfloat calcAO(vec3 pos, vec3 nor ){\n\tfloat totao = 0.0;\n    float sca = 1.0;\n    for( float aoi=1.0; aoi<aosteps; aoi+=1.0 ) {\n        float hr = 0.05*aoi;\n        float dd = map( pos + nor*hr ).x;\n        totao += -(dd-hr)*sca;\n        sca *= 0.75;\n    }\n    return clamp( 1.0 - 4.0*totao, 0.0, 1.0 );\n}\n\n\nvec3 tmap(vec3 p, vec3 n) {\n\tfloat f=abs(perlin(n*6.0))*0.2+0.2;\n\tvec3 col=f*vec3(0.8)+0.5;\n\treturn col*vec3(0.6,0.3,0.2)+normalize(p)*0.2;\t\n\t}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\t{\n\tvec2 ps=(fragCoord.xy/iResolution.xy);\n\tvec3 rd=normalize( vec3( (-1.0+2.0*ps)*vec2(1.0,1.0), 1.0));\n\tvec3 ro=vec3(0.0, 0.0, -0.5);\n\tvec3 lig=vec3(0.0,0.0,-0.5);\n\n\tvec4 mouse=iMouse*0.01;\n\tlig.xz=rot(lig.xz, mouse.x);\n\tlig.xy=rot(lig.xy, mouse.y);\n\tro.xz=rot(ro.xz, mouse.x);\n\tro.xy=rot(ro.xy, mouse.y);\n\trd.xz=rot(rd.xz, mouse.x);\n\trd.xy=rot(rd.xy, mouse.y);\t\n\t\n\t//march\n\tfloat f=0.0;\n\tvec2 t=vec2(treshold,f);\n\tfor(float i=0.0; i<1.0; i+=1.0/maxSteps){\n        t= map(ro + rd*t.x);\n\t\tf+=t.x;\n\t\tt.x=f;\n        if( abs(t.x)<treshold || t.x>maxdist ) break; \n\t\t}\n\tif (t.x>maxdist) t.y=0.0;\n\n\t//draw\n\tvec3 col = vec3(0.0);\n\tif (t.y>0.5) {\n\t\t\n\t\tlig=normalize(lig);\n\t\tvec3 pos = ro + rd*t.x;\n\t\tvec3 nor = cNor(pos);\n\t\tfloat ao = calcAO( pos, nor );\n\n\t\t\n\t\tfloat amb = clamp( 0.5+0.5*nor.y, 0.0, 1.0 );\t\t\t\t\t\n\t\tfloat dif = clamp( dot( nor, lig ), 0.0, 1.0 );\t\t\t\t\n\t\tfloat bac = clamp( dot( nor, vec3(-lig.x,lig.y,-lig.z)), 0.0, 1.0 );\t\t//1.0\n\n\t\tfloat sh = cShd( pos, lig, 7.0 );\t\n\n\t\tcol = 0.20*amb*vec3(0.10,0.10,0.10)*ao;\t\t\t\t\t\t\n\t\tcol += 0.20*bac*vec3(0.15,0.15,0.15)*ao;\t\t\t\t\t\n\t\tcol += 1.00*dif*vec3(0.80,0.80,0.80);\t\t\t\t\t\n\n\t\tfloat spe = sh*pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,16.0 );\t//1.0\n\t\tfloat rim = ao*pow(clamp( 1.0+dot(nor,rd),0.0,1.0), 2.0 );\t\n\tvec3 oc=tmap(pos,nor);\n\t\t\n\t\tcol =oc*col + vec3(1.0)*col*spe + 0.3*rim*(0.5+0.5*col);\t\n\t\tcol*=exp(.07*f); col*=2.;\n\t\n\t} \n\t\t\n\tfragColor=vec4( col, 1.0);\n\t}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4dB3DW","date":"1387739979","viewed":574,"name":"space cave","username":"avix","description":"floating trough a random cave...","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""}}