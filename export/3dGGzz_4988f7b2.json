{"ver":"0.1","info":{"id":"3dGGzz","date":"1569546784","viewed":115,"name":"Wavy Yin-Yang","username":"zachThePerson","description":"Something cool I made learning shaders","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord;\n    vec2 center = iResolution.xy * 0.5;\n    float PI = radians(180.0);\n    \n    //constants\n    float rad = 150.0;\n    \n    //main circle\n    float dist = distance(fragCoord, center);\n    float circle = dist - rad;\n    float outline = clamp(abs(circle) - 1.0, 0.0, 1.0);\n    float circleCol = mix(1.0, 0.0, outline);\n    \n    //center sine\n    float sine = sin(((fragCoord.y - (iResolution.y * 0.5)) / (PI * 20.0)) + iTime);\n    float sineDiv = fragCoord.x - center.x + sine * 50.0;\n    float sinClamp = clamp(sineDiv, 0.0, 1.0);\n    float sineCropped = mix(0.0, 1.0, clamp(sinClamp - clamp(circle + 5.0, 0.0, 1.0), 0.0, 1.0));\n    \n    //Small circles\n    vec2 mirrorUV = vec2(fragCoord.x, abs(fragCoord.y - center.y));\n    float smallDist = distance(mirrorUV, vec2(center.x, center.y * 0.4));\n    float smallCirc = smallDist - 25.0;\n    float smallClamp = clamp(smallCirc, 0.0, 1.0);\n    float smallCol = mix(1.0, 0.0, smallClamp);\n    float inverted = smallCol - sineCropped * smallCol * 2.0;\n    \n    //combine\n    float comp = sineCropped + circleCol + inverted;\n\n    // Output to screen\n    fragColor = vec4(vec3(comp),1.0);\n}","name":"Image","description":"","type":"image"}]}