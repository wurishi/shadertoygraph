{"ver":"0.1","info":{"id":"sdj3zd","date":"1617845525","viewed":90,"name":"Distance to feature points I","username":"tomoe","description":"Cellular noise given by the distance to the closest feature point which is moving around the lattice","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["bd202104"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uvec3 k = uvec3(0x456789abu, 0x6789ab45u, 0x89ab4567u);\nconst uint max32 = 0xffffffffu;\nconst float PI = 3.14159265359;\nuvec2 hash22u(uvec2 n) {  \n    n ^= (n.yx << 24);\n    n ^= (n.yx >> 1);\n    n *= k.xy;\n    n ^= (n.yx << 1);\n    return n * k.xy;\n}\nvec2 hash22(vec2 p) {\n    uvec2 n = uvec2(p);\n    return vec2(hash22u(n)) / vec2(max32) - 0.5;\n}\nfloat F1(vec2 p){   \n    vec2 n = round(p);\n    vec2 f = p - round(p);\n    float dist = sqrt(2.0);\n    for(float j = - 2.0; j <= 2.0; j ++ ) {\n        for(float i = - 2.0; i <= 2.0; i ++ ){\n            vec2 nbd = vec2(i, j);\n            nbd += sin(iTime) * hash22(n + nbd);\n            dist = min(dist, distance(nbd, f));\n        }\n    }\n    return dist;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 pos = fragCoord.xy/ iResolution.xx;\n    pos *= 20.0;\n    pos += iTime;\n    fragColor = vec4(vec3(F1(pos)), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}