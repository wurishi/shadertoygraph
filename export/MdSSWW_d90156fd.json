{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#define M_PI 3.14159265358979323846\n\nvec3 colormap(float v) {\n   float r = (.5+.5*sin(M_PI * v));\n   float g = ( .5 + .5 * sin(M_PI * v + 2.0 * M_PI / 3.0));\n   float b = ( .5 + .5 * sin(M_PI * v + 4.0 * M_PI / 3.0));\n   return vec3(r,g,b);\n}\n\nfloat calc (float x, float y, float t,float cost3,float sint5,float sint2) {\n    float ar = iResolution.x / iResolution.y;\n \tfloat v = 0.0;\n    float xx = ar* x / (iResolution.x)-ar/2.0;\n\tfloat yy = y / iResolution.y - .5;\n    float cx = xx + 0.5 * sint5;\n    float cy = yy + 0.5 * cost3;\n    float v0 = sin((xx * 10.0) + t);\n    float v1 = sin(10.0 * ( xx * sint2 + yy * cost3));\n    float v2 = sin(sqrt(100.0*((cx*cx)+(cy*cy)))+1.0+t);\n   \n    v = ((v0 + v1 + v2) + cos(v2 + yy + t)) / 2.0;\n    \n    return v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n    float tt=t / 1.0;\n    float cost3 = cos(tt/3.0);\n    float sint5 = sin(tt/5.0);\n    float sint2 = sin(tt/2.0);\n    float v = calc(fragCoord.x,fragCoord.y,tt,cost3,sint5,sint2);\n\tfragColor = vec4(colormap(v),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdSSWW","date":"1411963493","viewed":280,"name":"my first Plasma","username":"foxiepaws","description":"port of my software renderer (https://gist.github.com/79b4aca5e4fe06ce75d0) to GLSL\n\nFirst GLSL shader ever by me!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["plasma","demoscene","coolstuff"],"hasliked":0,"parentid":"","parentname":""}}