{"ver":"0.1","info":{"id":"cdtSD8","date":"1679717339","viewed":131,"name":"Degauss effect using ChatGPT","username":"statico","description":"I worked with ChatGPT to build a CRT degaussing effect.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chatgpt","degauss"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shader written by ChatGPT (OpenAI) for demonstration purposes only.\n// This code is provided as-is without any warranty or guarantee of fitness for any purpose.\n// You may use, modify, and redistribute this code without permission or attribution.\n// This code is released into the public domain.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = texture(iChannel0, uv);\n    float i = iTime * 0.05; // adjust this coefficient to control the speed of the animation\n    float angle = length(fragCoord.xy - iResolution.xy / 2.0) / 200.0;\n    float s = sin(angle);\n    float c = cos(angle);\n    mat2 m = mat2(c, -s, s, c);\n\n    float degaussStrength = 0.0;\n    if (i < 1.0) {\n        float t = i;\n        for (int j = 0; j < 7; j++) {\n            t = 1.0 - abs(1.0 - t) * abs(1.0 - t);\n        }\n        degaussStrength = mix(1.0, 0.0, t);\n    }\n\n    vec2 offset = vec2(1.0, 0.0) * degaussStrength; // adjust this value for the desired strength\n    vec4 result = texture(iChannel0, uv + offset * m);\n    fragColor = mix(color, result, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}