{"ver":"0.1","info":{"id":"fss3WN","date":"1615983990","viewed":59,"name":"Distance Function - Box","username":"izhi","description":"this is distance function about box ÔºÅ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box(in vec2 p, in vec2 b) {\n    vec2 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(d.x, d.y), 0.0);\n}\n\nfloat opRound(in float p, in float r) {\n    return p - r;\n}\n\nfloat opOnion(in float p, in float r) {\n    return abs(p) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    float d = box(p, vec2(0.6, 0.5));\n    // d = opRound(d, 0.01);\n    d = opOnion(d, 0.1);\n    \n    // coloring\n    vec3 col = vec3(1.0) - sign(d);\n    col *= 1.0 - exp(-3.0*abs(d));\n\tcol *= 0.8 + 0.2*cos(150.0*d);\n\tcol = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.01,abs(d)) );\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}