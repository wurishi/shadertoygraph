{"ver":"0.1","info":{"id":"ldG3zc","date":"1455612002","viewed":218,"name":"Bones","username":"gaz","description":"3d","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["de"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI  3.14159265359\n\nmat2 rotate(float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nmat3 lookat(in vec3 eye, in vec3 target)\n{\n\tvec3 w = normalize(target-eye);\n\tvec3 u = normalize(cross(w,vec3(0.0,1.0,0.0)));\n\tvec3 v = normalize(cross(u,w));\n    return mat3(u,v,w);\n}\n\n// https://www.shadertoy.com/view/4dKGWm\nfloat smax(float a, float b, float k)\n{\n\tfloat h = clamp(0.5+0.5*(b-a)/k,0.0,1.0);\n\treturn mix(a,b,h)+k*h*(1.0-h);\n}\n\nfloat smin(in float a, in float b, in float k)\n{\n\tfloat h = clamp(0.5+0.5*(b-a)/k,0.0,1.0);\n\treturn mix(b,a,h)-k*h*(1.0-h);\n}\n\n// https://www.shadertoy.com/view/MsKGzw\nvec3 fold(vec3 p) \n{\n    float cospin = cos(PI/3.0);\n    float scospin = sqrt(0.75-cospin*cospin);\n    vec3 nc = vec3(-0.5,-cospin,scospin);\n    for(int i=0;i<2;i++)\n    {\n        p.xy = abs(p.xy);\n        p -= 2.0*min(0.0,dot(p,nc))*nc;\n    }\n    return p;\n}\n\nfloat sabs(in float n, in float k)\n{\n    return  n-2.0*smin(0.0,n,k);  \n}\n\nvec2 bend(in vec2 p, in float d)\n{\n    p.y -= d*p.x*p.x;\n    p.y *= cos(atan(2.0*d*p.x));\n \treturn p;   \n}\n\nfloat lengthN(in vec2 p, in float n)\n{\n\tp = pow(abs(p), vec2(n));\n\treturn pow(p.x+p.y, 1.0/n);\n}\n\n/*\nvec2 segment(in vec2 p, in vec2 a, in vec2 b)\n{\n\tvec2 pa=p-a,ba=b-a;\n\tfloat t=clamp(dot(pa,ba)/dot(ba,ba),0.0,1.0);\n\treturn vec2(length(pa-ba*t), t);\n}\n*/\n\nvec2 segment(in vec2 p, in float a, in float b)\n{\n    //return segment(p, vec2(a,0.0), vec2(b,0.0));\n    float n=clamp(p.x,min(a,b),max(a,b));\n    return vec2(length(p-vec2(n,0.0)),(n-a)/(b-a));\n}\n\nfloat de1(in vec3 p)\n{\n    p.xy *= rotate(PI/4.0);\n    p = fold(p);\n    vec2 sg = segment(p.zx,3.5,0.0);\n    float n = abs(sin(sg.y*30.0));\n    n = smin(0.7,n,0.1);\n    n = smax(0.4,n,0.1);\n    float de = length(vec2(sg.x, p.y))-0.2*n;  \n    //float de = length(vec2(sg.x, p.y))-0.2*clamp(abs(sin(sg.y*30.0)),0.4,0.7);  \n    return 0.5*de;\n}\n\nfloat de2(in vec3 p)\n{\n    p.x = sabs(p.x,0.08); p.x -= 1.0;\n    p.y = sabs(p.y,0.08); p.y -= 1.0;\n    p.z = sabs(p.z,0.08); p.z -= 1.0;    \n    p.xz = bend(p.xz,0.8*sin(iTime));\n    p.xy *= rotate(iTime*0.5);\n    vec2 sg = segment(p.xy,-1.0, 1.0);\n    float d0 = lengthN(vec2(sg.x, p.z), 3.0) -(0.3*pow(sg.y-0.5,2.0)+0.2);\n    return 0.5*d0;\n}\n\nfloat map(in vec3 p)\n{   \n    return min(de1(p),de2(p));\n}\n\nvec3 doColor(in vec3 p)\n{\n    float e = 0.001;\n    if (de1(p)<e) return vec3(0.6,0.5,0.2);\n    return normalize(abs(p));\n}\n\nvec3 calcNormal(in vec3 pos)\n{\n    vec2 e = vec2(1.0,-1.0)*0.001;\n    return normalize(\n        e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n        e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p2 = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n    vec3 col = vec3(0.9-0.5*p2.y*p2.y);\n    vec3 ro = vec3(0.0,1.5,6.0);\n    vec3 rd = normalize(vec3(p2,2.0));\n    ro.xz *= rotate(iTime*0.1);\n    rd = lookat(ro, vec3(0.0))*rd;\n    float maxd = 10.0;\n    float t = 0.0, d;\n    for(int i=0;i<128;i++)\n    {\n        t += d = map(ro+rd*t);\n        if(d<0.001 || t>maxd) break;\n    }\n    if(t<maxd)\n    {\n        vec3 p = ro+t*rd;\n        vec3 nor = calcNormal(p);\n\t\tcol = doColor(p);\n\t\tvec3 li = normalize(vec3(2.0,3.0,3.0));\n        float dif = clamp(dot(nor,li),0.0,1.0);\n        float amb = max(0.5+0.5*nor.y,0.0);\n        float spc = pow(clamp(dot(reflect(rd, nor),li),0.0,1.0),10.0);\n        col *= clamp(0.0,1.0,max(dif,0.3)*amb+spc);\n        col = mix(vec3(1.0),col,exp(-t*t*0.0015));\n\t\tcol = pow(col, vec3(0.5));\n    }\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}