{"ver":"0.1","info":{"id":"mtX3WN","date":"1671751639","viewed":244,"name":"Bouncy Ball in a Box","username":"oneshade","description":"A random realization.","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["box","bouncing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBall(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat sdVector(in vec2 p, in vec2 v) {\n    return length(p - v * clamp(dot(p, v) / dot(v, v), 0.0, 1.0));\n}\n\nvoid boxBounce(in vec2 b, in vec2 p0, in vec2 v0, in float t, out vec2 pos, out vec2 vel) {\n     vec2 q = 2.0 * b - mod(p0 + v0 * t + b, 4.0 * b);\n     pos = b - abs(q), vel = v0 * sign(q);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    vec2 boxSize = vec2(2.0, 1.5);\n    float ballSize = 0.2;\n    vec2 p0 = vec2(-0.6, -0.4);\n    vec2 v0 = vec2(-2.0, 1.88);\n\n    vec2 q = abs(uv) - boxSize;\n    color = mix(color, vec3(1.0), smoothstep(unit, 0.0, abs(max(q.x, q.y))));\n\n    vec2 pos, vel;\n    boxBounce(boxSize - ballSize, p0, v0, iTime, pos, vel);\n\n    uv -= pos;\n    color = mix(color, vec3(0, 0, 1), smoothstep(unit, 0.0, sdVector(uv, 0.25 * vel)));\n    color = mix(color, vec3(1, 0, 0), smoothstep(unit, 0.0, sdBall(uv, ballSize)));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}