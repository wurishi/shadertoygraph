{"ver":"0.1","info":{"id":"mtsyWS","date":"1691136653","viewed":55,"name":"画椭圆","username":"Leslie","description":"椭圆是个有趣的图形，画椭圆与找出椭圆的等距区域并不是一回事(对于圆、矩形、圆角矩形等图形来说是一回事)，画椭圆的公式几乎与画圆的公式一样简单，但是找出椭圆的等距区域的公式却非常复杂。\n本例只是画椭圆的例子，肉眼可见例子中的“等距线”并不均匀。","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 clrDist(float dist)\n{\n    vec3 col = dist>0.0 ? vec3(0.9,0.6,0.3) : vec3(0.65,0.85,1.0);\n    col *= 1. - exp(-6.*abs(dist));\n    col *= 1. + 0.2*sin(150.*abs(dist));\n    col = mix(col, vec3(1.), smoothstep(0.01, 0., abs(dist)));\n    return col;\n}\n\nfloat drowEllipse(vec2 p, vec2 a, float r)\n{\n    vec2 pa = p-a;\n    return length(pa)+length(p)-length(a)-r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = min(iResolution.x, iResolution.y);\n    vec2 p = (2.*fragCoord-iResolution.xy)/scale;\n    vec2 a = vec2(cos(iTime*0.5), cos(iTime*0.5));\n    float dist = drowEllipse(p, a, 1.-abs(sin(iTime)));\n    vec3 clr = clrDist(dist);\n    fragColor = vec4(clr, 1.);\n}\n","name":"Image","description":"","type":"image"}]}