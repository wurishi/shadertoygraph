{"ver":"0.1","info":{"id":"mt3GDf","date":"1683224573","viewed":51,"name":"Spinning Star Manuel","username":"manucaslo","description":"Projeto 2.1","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["21"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfCircle(vec2 uv, float r, vec2 c) {\n    return length(uv - c) - r;\n}\n\nfloat sdStar5(in vec2 p, in float r, in float rf, vec2 offset) {\n  p -= offset; // This will subtract offset.x from p.x and subtract offset.y from p.y\n  const vec2 k1 = vec2(0.809016994375, -0.587785252292);\n  const vec2 k2 = vec2(-k1.x,k1.y);\n  p.x = abs(p.x);\n  p -= 2.0*max(dot(k1,p),0.0)*k1;\n  p -= 2.0*max(dot(k2,p),0.0)*k2;\n  p.x = abs(p.x);\n  p.y -= r;\n  vec2 ba = rf*vec2(-k1.y,k1.x) - vec2(0,1);\n  float h = clamp( dot(p,ba)/dot(ba,ba), 0.0, r );\n  return length(p-ba*h) * sign(p.y*ba.x-p.x*ba.y);\n}\n\nfloat smooth_step( float edge0, float edge1, float x )\n{\n    float p = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n    float v = p * p * (3.0 - 2.0 * p); // smoothstep formula\n    \n    //v = smoothstep( edge0, edge1, x ); // Compare with built-in\n    \n    return v;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    float d = sdfCircle(uv, .3, vec2(0, 0));\n    vec3 ring = (abs(d) < 0.09 ? vec3(1,1,0) : vec3(1, 1, 1));\n    float speed = smooth_step(0.0, 5.0, mod(iTime, 5.0));\n    vec2 mouvCircle = vec2((sin(speed*6.28318530718)*0.3),(cos(speed*6.28318530718)*0.3));\n    float ds = sdStar5(uv - vec2(0, 0), 0.08, 0.3, mouvCircle);\n    vec3 star = (ds < 0.01 ? vec3(1,0,0) : ring);\n    fragColor = vec4(star,1.0);\n}","name":"Image","description":"","type":"image"}]}