{"ver":"0.1","info":{"id":"XcycRw","date":"1731599378","viewed":104,"name":"Simple Flip Clock","username":"DantesPlan","description":"A simple flip clock","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["time","clock","number","rectangle","digits","flip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#ifndef PI\n#define PI 3.14159265359\n#endif\n\nvec2 rot2d(vec2 uv, vec2 pivot, float angle)\n{\n\treturn vec2(\tcos(angle) * (uv.x - pivot.x) + sin(angle) * (uv.y - pivot.y) + pivot.x,\n\t\t\tcos(angle) * (uv.y - pivot.y) - sin(angle) * (uv.x - pivot.x) + pivot.y);\n}\n\nfloat sdRectangle(vec2 uv, vec2 pos, vec2 size, float radius)\n{\n\treturn length(max(abs(uv-pos)-size+radius, 0.0))-radius;\n}\n\n// Adapted from https://www.shadertoy.com/view/DsccDH\nfloat sdRing(in vec2 uv, in vec2 pos, in float a, in float g, in vec2 r)\n{\n\tuv -= pos;\n\n\tuv = rot2d(uv, vec2(0.0), a);\n\n\tvec2 cs = vec2(cos(g*PI),sin(g*PI));\n\n\tuv.x = abs(uv.x);\n\n\t//uv = mat2x2(cs.x, cs.y, -cs.y, cs.x) * uv;\n\tuv = mat2(cs.x, cs.y, -cs.y, cs.x) * uv;\n\n\treturn max(\tabs(length(uv)-r.x)-r.y*0.5,\n\t\t\tlength(vec2(uv.x,max(0.0,abs(r.x-uv.y)-r.y*0.5)))*sign(uv.x) );\n}\n\nfloat sdBox(in vec2 uv, in vec2 pos, in vec2 size)\n{\n\tvec2 d = abs(uv-pos)-size;\n\treturn length(max(d, vec2(0.0))) + min(max(d.x, d.y), 0.0);\n}\n\nfloat numbers(vec2 uv, vec2 pos, float blurval, int id)\n{\n\tfloat d = 1.0;\n\n\tif(id == -1)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), 0.0, 1.0, vec2(0.225, 0.05));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), 0.0, 1.0, vec2(0.225, 0.05)));\n\t}\n\telse if(id == 0)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), PI, -0.5, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos-vec2(0.225,0.0), vec2(0.025, 0.225)));\n\t\td = min(d, sdBox(uv, pos+vec2(0.225,0.0), vec2(0.025, 0.225)));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), PI, 0.5, vec2(0.225, 0.05)));\n\t}\n\telse if(id == 1)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), -PI*0.25, 0.25, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos+vec2(0.225,-0.125), vec2(0.025, 0.35)));\n\t}\n\telse if(id == 2)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), -PI*0.25, 0.25, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos+vec2(0.225, 0.11), vec2(0.025, 0.12)));\n\t\td = min(d, sdBox(uv, pos-vec2(0.0), vec2(0.25, 0.025)));\n\t\td = min(d, sdBox(uv, pos-vec2(0.225, 0.22), vec2(0.025, 0.225)));\n\t\td = min(d, sdBox(uv, pos-vec2(0.1, 0.45), vec2(0.15, 0.025)));\n\t}\n\telse if(id == 3)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), -PI*0.5, 0.5, vec2(0.225, 0.05));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), -PI*0.75, 0.75, vec2(0.225, 0.05)));\n\t}\n\telse if(id == 4)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), PI*0.25, 0.25, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos+vec2(-0.225, 0.125), vec2(0.025, 0.1)));\n\t\td = min(d, sdBox(uv, pos-vec2(0.0), vec2(0.25, 0.025)));\n\t\td = min(d, sdBox(uv, pos-vec2(0.0, 0.125), vec2(0.025, 0.35)));\n\t}\n\telse if(id == 5)\n\t{\n\t\td = sdBox(uv, pos+vec2(-0.09, 0.45), vec2(0.115, 0.025));\n\t\td = min(d, sdBox(uv, pos+vec2(-0.225, 0.25), vec2(0.025, 0.225)));\n\t\td = min(d, sdBox(uv, pos-vec2(0.125, 0.0), vec2(0.125, 0.025)));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), -PI*0.75, 0.75, vec2(0.225, 0.05)));\n\t}\n\telse if(id == 6)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), PI*0.25, 0.25, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos-vec2(0.225,-0.02), vec2(0.025, 0.225)));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), 0.0, 1.0, vec2(0.225, 0.05)));\n\t}\n\telse if(id == 7)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), 0.0, 0.5, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos+vec2(0.225,-0.125), vec2(0.025, 0.35)));\n\t\td = min(d, sdBox(uv, pos-vec2(-0.1, 0.0), vec2(0.1, 0.025)));\n\t}\n\telse if(id == 8)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), 0.0, 1.0, vec2(0.225, 0.05));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), 0.0, 1.0, vec2(0.225, 0.05)));\n\t}\n\telse if(id == 9)\n\t{\n\t\td = sdRing(uv, pos+vec2(0.0, 0.225), 0.0, 1.0, vec2(0.225, 0.05));\n\t\td = min(d, sdBox(uv, pos+vec2(0.225, 0.0), vec2(0.025, 0.225)));\n\t\td = min(d, sdRing(uv, pos-vec2(0.0, 0.225), -PI*0.725, 0.25, vec2(0.225, 0.05)));\n\t}\n\t//return smoothstep(0.0001+blurval, -0.0001+(blurval*0.25), (d>0.0)?d=d:d=0.0);\n\td = smoothstep(0.0001+blurval, -0.0001+(blurval*0.25), (d>0.0)?d=d:d=0.0);\n\treturn pow(d,1.3);\n}\n\n// Adapted from https://www.shadertoy.com/view/DdcBzs\nvec2 flipX(vec2 uv, float c, float a)\n{\n\tvec3 r = vec3(uv, 15.0);\n\tvec3 n = vec3(0.0, sin(a), cos(a));\n\tvec3 p = r * (r.z * n.z) / dot(n, r);\n\treturn vec2(p.x, p.y / n.z-c);\n}\n\nvoid flipClock(inout vec4 color, in vec2 uv, in vec2 pos, in vec2 size)\n{\n\tuv -= pos;\n\tuv /= size;\n\n\tif(abs(uv.x)<2.9 && abs(uv.y)<0.65)\n\t{\n\t\tfloat card = 0.0, num = 0.0;\n\t\tfloat steps=6.0, space=4.8, px=0.0, tx, T=1.0, r[6];\n\t\tfloat dst = (space/steps);\n\t\tfloat flip = smoothstep(0.5,-0.25,fract(iDate.w))*(PI*0.99);\n\n\t\tfor(float i=0.0; i<steps; i+=1.0)\n\t\t{\n\t\t\tif(i>=4.0) tx = 0.2;\n\t\t\telse if(i<=1.0) tx = -0.2;\n\t\t\telse tx = 0.0;\n\n\t\t\tpx = (i*dst-(space*0.5)) + (dst/2.0) + tx;\n\t\t\tpx = -px; // Invert sequence position\n\n\t\t\tr[int(i)] = (mod(floor(iDate.w), T))==0.0?flip:0.0;\n\t\t\tfloat t = mod(i, 2.0)==0.0 ? 10.0 : 6.0;\n\n\t\t\tcard = max(card, smoothstep(0.025,0.0,sdRectangle(flipX(uv, 0.0, r[int(i)]), vec2(px,0.0), vec2(size.x*1.4,size.y*2.3), 0.05)));\n\t\t\tnum = max(num, numbers(flipX(uv, 0.0, r[int(i)]), vec2(px,0.0), 0.05, int(mod(iDate.w/T, t))));\n\n\t\t\tT*=t;\n\t\t}\n\t\tcard = max(card, smoothstep(0.02,0.0,sdRectangle(vec2(abs(uv.x)-0.9,abs(uv.y)-0.15), vec2(0.0), vec2(0.06), 0.02)));\n\n\t\tcolor = mix(color, vec4(vec3(card),1.0),card);\n\t\tcolor = mix(color, vec4(vec3(num,0.0,0.0), 1.0), num);\n\t}\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\n\tfragColor = vec4(0.0);\n\n\tflipClock(fragColor, uv, vec2(0.0), vec2(0.25));\n}\n","name":"Image","description":"","type":"image"}]}