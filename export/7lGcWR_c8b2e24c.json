{"ver":"0.1","info":{"id":"7lGcWR","date":"1661233803","viewed":118,"name":"PlanetaryGear","username":"wchen","description":"PlanetaryGear","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["sdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat angle(vec2 pos)\n{\n    return PI * max(0., sign(-pos.x)) * sign(pos.y) + atan(pos.y/pos.x); \n}\n\nvec2 move(vec2 pos, vec2 to)\n{\n    return pos - to;\n}\n\nvec2 rotate(vec2 pos, float ang)\n{\n    return mat2x2(cos(ang), sin(ang), \n                  -sin(ang), cos(ang)) * pos;\n}\n\nvec2 fractAngle(vec2 pos, float num)\n{\n    float angSeg = 2. * PI / num;\n    float ang = angle(pos);\n    float seg = ang / angSeg + .5;\n    seg -= fract(seg);\n\n    ang -= seg *angSeg;\n\n    return vec2(cos(ang), sin(ang)) * length(pos);\n}\n\nfloat expand(float sd, float len)\n{\n    return sd - len;\n}\n\nfloat outline(float sd, float thickness)\n{\n    return expand(abs(sd), thickness);\n}\n\nfloat intersect(float sd1, float sd2)\n{\n    return max(sd1, sd2);\n}\n\nfloat substract(float sdFrom, float sdBy)\n{\n    return max(sdFrom, -sdBy);\n}\n\nfloat sdLine(vec2 pos)\n{\n    return pos.y;\n}\n\nfloat sdPoint(vec2 pos)\n{\n    return length(pos);\n}\n\nfloat sdBox(vec2 pos, vec2 halfExtend)\n{\n    vec2 d = abs(pos) - halfExtend;\n    return length(max(d, 0.)) + min(max(d.x, d.y), 0.);\n}\n\nfloat atten(float sd, float density)\n{\n    float a1 = smoothstep(.45, .55, fract(sd * density)) * .5 + .5;\n    float a2 = smoothstep(0., .005, sd)*.6 + .4;\n    return a1 * a2;\n}\n\nfloat sdGear(vec2 pos, float gear, float gearExt, float rad)\n{\n    return sdBox(move(fractAngle(pos, gear), vec2(rad, .0)), vec2(gearExt, gearExt));\n}\n\nfloat sdRing(vec2 pos, float outRad, float inRad)\n{\n    return substract(expand(sdPoint(pos), outRad), expand(sdPoint(pos), inRad));\n}\n\nfloat sdGear1(vec2 pos, float gear, float gearExt, float outRad, float inRad)\n{\n    return min(sdGear(pos, gear, gearExt, outRad), sdRing(pos, outRad-gearExt, inRad));\n}\n\nfloat sdGear2(vec2 pos, float gear, float gearExt, float outRad, float inRad)\n{\n    return min(sdGear(pos, gear, gearExt, inRad), sdRing(pos, outRad, inRad+gearExt));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 pos = (gl_FragCoord.xy - .5 * iResolution.xy) / iResolution.y;\n\n    float gearExt = .01;\n    float r1 = .15;\n    float r2 = .07;\n    float r3 = r1 + r2 * 2. + gearExt;\n\n    float gear1 = 18.;\n    float gear2 = 12.;\n    float gear3 = 48.;\n\n    float t = iTime;\n\n    float ang1 = 2. * sin(t) + 1.7 * sin(.3*t);\n    float ang2 = PI/gear2 + -gear1 * ang1 / gear2;\n    float ang3 = PI/gear3 + gear2 * ang2 / gear3;\n\n    float allAng = 5. * sin(.1 * t) + 4. * sin(.07 * t);\n    vec2 allPos = rotate(pos, allAng);\n\n    float sd1 = sdGear1(rotate(allPos, ang1), gear1, gearExt, r1, .03);\n\n    vec2 pos2 = move(fractAngle(allPos, 3.), vec2(r1+r2+.5*gearExt, 0.));\n    float sd2 = sdGear1(rotate(pos2, ang2), gear2, gearExt, r2, .05);\n\n    float sd3 = sdGear2(rotate(allPos, ang3), gear3, gearExt, r3+.05, r3);\n\n    float sd = min(sd1, sd2);\n    sd = min(sd, sd3);\n    sd = expand(sd, -0.001);\n\n    float val = 1.5 * clamp(.3 + smoothstep(.001, .0, outline(sd, .001)) + .5 * smoothstep(.001, .0, sd), 0., 1.);\n    fragColor = vec4(vec3(uv.xy, sin(.2 * iTime)) * val, 1.);\n}","name":"Image","description":"","type":"image"}]}