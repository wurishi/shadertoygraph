{"ver":"0.1","info":{"id":"XttfDS","date":"1540864519","viewed":110,"name":"Voronoi 1","username":"scratch13764","description":"This is pretty much as short as I could get it. I don't think it's terrible, though.\nI love this look.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","distance"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    float p; // Which point to check, based on noise\n    float c = 1.; // Color amount\n    float pc; // Proposed color amount\n    for (float i; i < 100.; i++)\n    {\n        pc = length(uv - (sin(iTime)+1.3)*vec2(texture(iChannel0,vec2(i*.003,0.5))));\n        if (pc < c)\n        {\n            c = pc;\n        }\n    }\n    c = 1. - 6.*c;\n    fragColor = vec4(vec3(c),1.0);\n}","name":"Image","description":"","type":"image"}]}