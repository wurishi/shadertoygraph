{"ver":"0.1","info":{"id":"lcB3Wz","date":"1705788176","viewed":106,"name":"Pattern_001_generator","username":"Imagyx","description":"Based on \"Tiny Maze\" from maze_maze, tried to generate more out of it. Thanks for this cool idea!","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["procedural","monochrome","pattern"],"hasliked":0,"parentid":"Mc23RW","parentname":"Tiny Maze"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define t1 37 // some random integer\n#define t2 3  // 1, 2, 3 for nice results, bigger for chunks\n#define t3 7  // has to be odd for a maze, even for symmetric patterns\n// Switches for totally different results, default is 0101\n// Try 0000, 0001, 0011, 1001 or 1101\n#define W1 0\n#define W2 1\n#define W3 0\n#define W4 1\nint pattern(in vec2 p){\n    p += iTime * 10.0;\n\tivec2 I = ivec2(p);\n    int r = I.x & 1;\n    int j = I.y & 1;\n#if W1==0\n    r ^= j;\n#endif\n#if W3==1\n    r &= j;\n#endif\n    I /= t2;\n    I *= t1;\n    I.x ^= I.y;\n\n#if W4==1\n    I.x %= t3;\n#endif\n    r &= I.x;\n#if W2==1\n    r ^= j;\n#endif\n    return r;\n}\nconst float scale = 0.25;\nvoid mainImage(out vec4 C, vec2 p) {\n    int r = pattern(p * scale);\n    C = vec4(r, r, r, 1.0);\n}","name":"Image","description":"","type":"image"}]}