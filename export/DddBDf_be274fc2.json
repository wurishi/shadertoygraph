{"ver":"0.1","info":{"id":"DddBDf","date":"1697717116","viewed":80,"name":"cloud 2.0","username":"g1mishra","description":"cloud with controls","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["cloud"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const mat2 m2 = mat2( 0.60, -0.80, 0.80, 0.60 );\n\nfloat random(vec2 uv) {\n    return fract(sin(dot(uv, vec2(122.456, 422.12)))*522.354);\n}\n\nfloat noise(vec2 uv) {\n    vec2 i = floor(uv);\n    vec2 f = fract(uv);\n    f = f * f * (3. - 2. * f);\n\n    float lb = random(i + vec2(0., 0.));\n    float rb = random(i + vec2(1., 0.));\n    float lt = random(i + vec2(0., 1.));\n    float rt = random(i + vec2(1., 1.));\n\n    return mix(mix(lb, rb, f.x),\n    mix(lt, rt, f.x), f.y);\n}\n\nvec3 Cloud(vec3 bgCol, vec3 rd, vec3 cloudCol, float spd) {\n    vec3 col = bgCol;\n    float t = iTime * spd;\n    vec2 sc = rd.xz*((2.)*35000.0)/rd.y;\n    vec2 p = 0.00002*sc;\n    float f = 0.05;\n  \tfloat s = 0.5;\n  \tfloat sum = 0.;\n  \tfor(int i=0; i<50; i++){\n    \tp += t;\n        t *= 0.5;\n    \tf += s*noise(p/2.); \n        p = m2*p*2.;\n    \tsum += s;\n        s*=0.6;\n  \t}\n    float val = f/sum; \n    col = mix( col, cloudCol, 0.5*smoothstep(0.5,0.8,val) );\n    return col;\n}\n\nvec3 RayMarchCloud(vec3 rd) {\n    vec3 col = vec3(0.0,0.0,0.0);  \n    \n    // sky      \n    col = vec3(0.4,0.55,0.85);\n    col = mix( col, 0.35 *vec3(0.7,0.75,0.85), pow( 1.0-max(rd.y,0.0), 4.0 ) );\n    \n    // clouds\n    col = Cloud(col, rd, vec3(1.,1.,1.0), 1.);\n            // .\n    col = mix( col, 0.68*vec3(0.4,0.65,1.0), pow( 1.0-max(rd.y,0.0), 16.0 ) );\n    return col;\n}\n\nvec3 InitCam(in vec2 fragCoord ) {\n    float time = iTime;\n    vec2 uv = fragCoord.xy / iResolution.xy;\n  \n  \tvec2 p = fragCoord.xy/iResolution.xy-0.5;\n    vec2 q = fragCoord.xy/iResolution.xy;\n\tp.x*=iResolution.x/iResolution.y;\n    vec2 mo = vec2(0, 0.45);\n    mo.x += smoothstep(0.6, 1.5, 1.0) - 1.;\n    vec3 eyedir = normalize(vec3(cos(mo.x),mo.y*2.-0.2+sin(1.57)*0.1,sin(mo.x)));\n    vec3 rightdir = normalize(vec3(cos(mo.x+1.5708),0.,sin(mo.x+1.5708)));\n    vec3 updir = normalize(cross(rightdir,eyedir));\n\tvec3 rd = normalize((p.x*rightdir+p.y*updir)*1.+eyedir);\n\treturn rd;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 col  = vec3 (0.,0.,0.);\n\tvec3 rd = InitCam(fragCoord);\t\n    col = RayMarchCloud(rd);    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}