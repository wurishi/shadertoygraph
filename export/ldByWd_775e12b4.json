{"ver":"0.1","info":{"id":"ldByWd","date":"1494342992","viewed":1668,"name":"Vegetal Flux","username":"leon","description":"Vegetal shapes","likes":56,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Vegetal Flux\n// Leon 09-05-2017\n// Refactored in 07-01-2018\n// using code from IQ, Mercury, Koltes\n\n#define PI 3.14159\n#define TAU PI*2.\n#define t iTime*.2\n#define repeat(v,r) (mod(v,r)-r/2.)\n\nconst vec4 red = vec4(0.9,0.1,0.2,1);\nconst vec4 green = vec4(0.584, 0.901, 0.270, 1);\nconst vec4 green2 = vec4(0.254, 0.301, 0.211, 1);\nconst vec4 blue = vec4(0.631, 0.901, 0.901, 1);\nconst vec4 orange = vec4(0.901, 0.835, 0.270, 1);\n\nstruct Shape { float dist; vec4 color; };\n\nfloat rng (vec2 seed) { return fract(sin(dot(seed*.1,vec2(324.654,156.546)))*46556.24); }\nmat2 rot (float a) { float c=cos(a),s=sin(a); return mat2(c,s,-s,c); }\nfloat sphere (vec3 p, float r) { return length(p)-r; }\nfloat cyl (vec2 p, float r) { return length(p)-r; }\nfloat disk (vec3 p, float r, float h) { return max(length(p.xy)-r, abs(p.z)-h); }\nfloat smoo (float a, float b, float r) { return clamp(.5+.5*(b-a)/r,0.,1.); }\nfloat smin (float a, float b, float r) { float h = smoo(a,b,r); return mix(b,a,h)-r*h*(1.-h); }\nfloat amod (inout vec2 p, float c) {\n\tfloat ca = (2.*3.14159)/c;\n\tfloat a = atan(p.y,p.x)+ca*.5;\n\tfloat index = floor(a/ca);\n\ta = mod(a,ca)-ca*.5;\n\tp = vec2(cos(a),sin(a))*length(p);\n\treturn index;\n}\n\nShape map (vec3 pos) {\n\n\tShape shape;\n\tshape.dist = 1000.;\n\tshape.color = vec4(1);\n\n\tfloat twist = .5;\n\tfloat count = 8.;\n\tfloat interval = 2.;\n\tfloat outter = 2.;\n\n\tvec3 p = pos;\n\tp.xz *= rot(sin(pos.y*twist + t));\n\tfloat index = amod(p.xz, count);\n\tfloat sens = mix(-1.,1.,mod(index,2.));\n\tp.x -= outter;\n\n\tfloat stem = cyl(p.xz, 0.04+.02*sin(p.y*4.-iTime*sens));\n\n\tfloat leaf;\n\tp.y = repeat(p.y+index+t*sens, interval);\n\tp.xy *= rot(.25*sens);\n\tp.yz *= rot(.15*sens);\n\tp.x -= .8;\n\tp.y -= sin(abs(p.z)*3.)*.1;\n\tp.y -= sin(abs(p.x-.7)*3.)*.1;\n\tleaf = disk(p.xzy,0.7, 0.01);\n\n\tfloat innerStem;\n\tp = pos;\n\tp.xz *= rot(pos.y+sin(pos.y+t*10.)-t*4.);\n\tindex = amod(p.xz, 3.);\n\tp.x -= 0.3+.2*(.5+.5*sin(pos.y+t));\n\tinnerStem = cyl(p.xz, 0.05);\n\n\tfloat seed;\n\tp = pos;\n\tinterval = 0.6;\n\tp.y = repeat(p.y+t*4., interval);\n\tseed = sphere(p, 0.3*(.5+.5*sin(pos.y+.5)));\n\n\tfloat water;\n\tp = pos;\n\tp.xz *= rot(pos.y*.5+t);\n\tp.x -= 1.2;\n\tp.xz *= rot(pos.y*.5-t*9.);\n\tindex = amod(p.xz, 8.);\n\tp.x -= 0.1+(.5*(.5+.5*sin(pos.y+3.*t)));\n\twater = cyl(p.xz, 0.04);\n\n\tfloat sceneLeaves = smin(leaf, stem, .3);\n\tfloat scene = min(seed, innerStem);\n\n\tshape.color = mix(red, orange, smoo(innerStem, seed, .1));\n\tshape.color = mix(shape.color, green2, smoo(stem, scene, .3));\n\tscene = min(stem, scene);\n\tshape.color = mix(shape.color, green, smoo(sceneLeaves, scene, .1));\n\tshape.color = mix(shape.color, blue, step(water, scene));\n\n\tshape.dist = min(water, min(sceneLeaves, scene));\n\treturn shape;\n}\n\nvec4 raymarch (vec2 coord)\n{\n\tvec2 uv = (coord.xy-.5*iResolution.xy)/iResolution.y;\n  \tfloat dither = rng(uv+fract(iTime));\n\tvec3 eye = vec3(0,0,-8);\n\tvec3 ray = normalize(vec3(uv,1.));\n\tvec3 pos = eye;\n\tvec4 color = vec4(0.);\n\tfor (float i = 0.; i <= 1.; i += 1./30.) {\n\t\tShape shape = map(pos);\n\t\tif (shape.dist < 0.01) {\n\t\t\tcolor = shape.color * (1.-i);\n\t\t\tbreak;\n\t\t}\n\t\tshape.dist *= .9 + .1 * dither;\n\t\tpos += ray * shape.dist;\n\t}\n    return color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tfragColor = raymarch(fragCoord);\n}","name":"Image","description":"","type":"image"}]}