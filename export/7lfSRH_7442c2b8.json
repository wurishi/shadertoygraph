{"ver":"0.1","info":{"id":"7lfSRH","date":"1628598415","viewed":54,"name":"Nuit éclairée","username":"TFoucour","description":"2D nuit éclairée","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["nuitclaire"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (in vec2 st) {\n    return fract(sin(dot(st.xy,vec2(23.4325,67.233)))*54634.545422);\n}\n\nfloat noise2D (vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f * f * (3.0 - 2.0 * f);\n\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\n\nfloat fbm ( vec2 st, int octaves) {\n    // Initial values\n    float value = 0.;\n    float amplitude = .4;\n\n    // Loop of octaves\n    for (int i = 0; i < octaves; i++) {\n        value += amplitude * noise2D(st);\n        st *= 4.;\n        amplitude *= .6;\n    }\n    return value*1.3;\n}\n\nfloat moon(vec2 uv, float r){\n    vec2 pos = uv - vec2(5., 8.);\n    pos.x += sin(iTime/50.)*5.;\n    \n    float delta = sin(iTime/1.)*.08+0.45;\n    return 1.-smoothstep(r,r+delta,dot(pos, pos));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv*=10.;\n    \n    float n = fbm(uv, 7);\n    \n    vec3 col = vec3(n);\n\n    for(int i = 0; i < 3; i++){\n        n *= fbm(uv+vec2(.2*iTime), 9);\n    }\n    \n    vec3 starColor = smoothstep(0.89, 0.94, texture(iChannel0, uv).rrr);\n    float star = starColor.x;\n    if(star < 0.8){\n    \tstar = 0.;   \n    }\n    \n    col += vec3(star)*3.*abs(sin(iTime));\n    \n    col += vec3(moon(uv, .1))*6.;\n    \n    col *= n;\n    \n    col *= vec3(.4, .5, .8);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}