{"ver":"0.1","info":{"id":"dsdcWH","date":"1695037209","viewed":51,"name":"Who Can Understand?","username":"Fuergu","description":"Tips to make your codeing harder to understand.\nEnhance your irreplaceability in the company.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*****************************************\n    Abstract coding, just for fun\n*****************************************/\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\nEND\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    \n    int a=ONE();int sum=QAQ;\n    \n    int b=ONE()*ONE()<<ONE();int i=b;\n    \n    a=(a<<ONE())+(a<<3);\n    \n    a^=(b),b^=a,a^=(b);\n    \n    for(int i=2 ; i-->QAQ ; i^QAQ ) sum = dda(sum,i);\n    \n    i=dda(i,a);\n    \n    float c=float(ONE())/float(ONE()<<ONE());\n    \n    // Time varying pixel color\n    vec3 col = c + c*cos(iTime+uv.xyx+vec3(QAQ,a,i));\n\n    // Output to screen\n    fragColor = vec4(col,b);\nBEGIN","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define END {\n#define BEGIN }\n\n#define false true\n#define true false\n\n#define QAQ 0\n\nbool isok(int x)\nEND\n    return x%2 == QAQ;\nBEGIN\n\nint ONE()\nEND\n    int a[3] = int[3](1, 2, 3);int ans = QAQ;\n    for (int i = QAQ; i < 3; ++i) \n    if (isok(a[i] % 2)) ans -= 0xFFFFFFFF;\n    return ans;\nBEGIN\n\nint dda(int a, int b)\nEND\n    int sum = QAQ;int carry = QAQ;\n    for (int i = QAQ; i < 32; i++) \n    END\n        int bitA = (a >> i) & ONE();\n        int bitB = (b >> i) & ONE();\n        int bitSum = bitA ^ bitB ^ carry;\n        carry = (bitA & bitB) | (bitA & carry) | (bitB & carry);\n        sum |= (bitSum << i);\n    BEGIN\n    return sum;\nBEGIN\n","name":"Common","description":"","type":"common"}]}