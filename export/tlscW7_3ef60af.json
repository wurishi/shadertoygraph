{"ver":"0.1","info":{"id":"tlscW7","date":"1592266436","viewed":364,"name":"Sin() approximation","username":"Moniewski","description":"Sine approximation based on Bhaskara I's formula\nhttps://en.wikipedia.org/wiki/Bhaskara_I%27s_sine_approximation_formula","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["sin","sine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Sine approximation based on Bhaskara I's formula\n// White pixels are difference between sin() and my function\n\n#define ZOOM 1.5\n#define SCROLL_SPEED 0.5\n\n#define M_1_PI 0.318309886183790671538  /* 1/pi */\nfloat aprSin(float x) {\n    x *= M_1_PI;\n    float a = fract(x);\n    float b = a * (1.0 - a);\n    float c = (b * 4.0) / (1.25 - b);\n    float f = -sign(fract(x * 0.5) - 0.5);\n\treturn c * f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/(iResolution.y*0.5);\n    uv *= ZOOM;\n    float xScroll = uv.x + iTime * SCROLL_SPEED;\n    float pSin = step(sin(xScroll), uv.y);\n    float pAprSin = step(aprSin(xScroll), uv.y);\n    float o = max(mix(0.5, 0.2, pAprSin), abs(pSin - pAprSin));\n    fragColor = vec4(vec3(o), 1.0);\n}","name":"Image","description":"","type":"image"}]}