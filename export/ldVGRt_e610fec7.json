{"ver":"0.1","info":{"id":"ldVGRt","date":"1455945259","viewed":633,"name":"Unex learning Contrast","username":"blfunex","description":"basic filter contrast","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["filtercontrast"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void contrast( inout vec3 color, float adjust ) {\n    adjust = adjust + 1.0;\n    color.rgb = ( color.rgb - vec3(0.5) ) * adjust + vec3(0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 color = texture(iChannel0, uv).rgb;\n    contrast(color, 1.0);\n\tfragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}