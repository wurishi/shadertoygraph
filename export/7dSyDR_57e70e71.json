{"ver":"0.1","info":{"id":"7dSyDR","date":"1643322227","viewed":264,"name":"Reaction Diffusion - 138 chars","username":"benoitM","description":"Fast and Dirty Reaction Diffusion using only mipmaps for the convolutions (blur and high pass filter)\nPlenty of artefacts due to mipmaps and the image init is really dirty (buffer B) ... but it works.\n\n\n","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["2d","diffusion","organic","highpass","onetweet","golf","reaction","mipmaps"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Moving ReactDiff - 162c - fixed\" by benoitM. https://shadertoy.com/view/stG3z1\n// Now 134 chars < one tweet ;) -  Many Thanks to Xor & Fabrice Neyret for their tips\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n//     Fast & Simple & Dirty Reaction Diffusion Pattern                //\n//                                                                     //\n//             Copyright Benoit Marini - 01/2022                       //     \n//             License Creative Commons Attribution                    //\n//         NonCommercial-ShareAlike 3.0 Unported License.              //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// Inspired by https://www.youtube.com/watch?v=ga1xt5zkmPI             //\n// Trying to use only mipmaps for \"Kernel operations\", knowing that    //\n// mipmaps are far from gaussian blur...                               //\n// High pass filter from iq  (shadertoy.com/view/XsX3zj)               //\n// Noise in Buffer B is only here for initial pertubation              //\n//                                                                     //\n//                                                                     //  \n//  ////////  Buffer A  ////////            //////  Buffer B  //////   //\n//  //                        //       \\\\   //                    //   //\n//  // 1) High pass filter B  //   \\\\\\\\\\\\\\  // 1) Blur  A         //   //\n//  // 2) Threshold B         //   ///////  // 2) Add  noise      //   //\n//  //                        //       //   //                    //   //\n//  ////////////////////////////            ////////////////////////   //\n//                                                                     //\n//                /\\                                   ////            //\n//               //\\\\                                  ////            //\n//              ///\\\\\\                                 ////            //\n//               ////                                  ////            //\n//               //////////////////////////////////////////            //\n//               //////////////////////////////////////////            //\n//                                                     ////            //\n//                                                    \\\\\\///           //\n//                                                     \\\\//            //\n//                                                      \\/             //\n//                                                                     //\n//                                            //////   Image  //////   //\n//                                            //                  //   //\n//                                            //      Buffer A    //   //\n//                                            //                  //   //\n//                                            //////////////////////   //\n//                                                                     //        \n/////////////////////////////////////////////////////////////////////////  \n\n\nM\n    T);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//////////////////////////////////////////////\n// high pass filter & threshold of Buffer B //\n//////////////////////////////////////////////\n\nM    \n    step(T,4.5), T));\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//////////////////////////////////////\n// blur buffer A +  perturbation    //\n//////////////////////////////////////\n\nM\n     T,3.5) * i.x * i.y; \n     //T,3.5) * i.y; // 134 char version but not working on all plateform\n}\n\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define M void mainImage( out vec4 o, vec2 i ) { o=\n#define T texture(iChannel0,i/iResolution.xy*.99","name":"Common","description":"","type":"common"}]}