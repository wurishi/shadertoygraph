{"ver":"0.1","info":{"id":"tttGW2","date":"1577656922","viewed":137,"name":"Antialiasing Lattice","username":"LobsterCrew","description":"First try on antialiasing with multisampling","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["antialiasing","multiisampling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float ldist = 0.1;\nconst float llength = 0.5;\n\nfloat lattice(vec2 q)\n{\n    float res = 0.;\n    float a = atan(q.y, q.x) + .1 * iTime;\n    float r = length(q);\n    \n    q = vec2(r * cos(a), r * sin(a));\n    \n    for(int i = -3; i <= 3; i++)\n    {\n        res += smoothstep(0.011, 0.01, abs(q.y - float(i) * ldist));\n    }\n    res *= smoothstep(llength + .001, llength, abs(q.x));\n    return clamp(res, 0., 1.);\n}                  \n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 q = 2.*(fragCoord - 0.5*iResolution.xy)/iResolution.y;\n\n    vec3 col;\n    //lattice on the left without AA\n    if (q.x < 0.)\n    {\n        float lat1 = lattice(q - vec2(-.9, 0.));\n        col = vec3(1, 1, 1) * lat1;\n    }\n    else\n    //lattice on the right with multisampling AA\n    {\n        float lat2 = 0.;\n        for (int i = -2; i <= 2; i++)\n        for (int j = -2; j <= 2; j++)\n        {    \n            lat2 += lattice(q - vec2(.9, 0.) - float(i + j) / (2. * iResolution.y)) / 25.;\n        }\n    \tcol = vec3(1, 1, 1) *lat2;\n    }\n    \n    // middle bar\n    col += smoothstep(.031, .03, abs(q.x));\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}