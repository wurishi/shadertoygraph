{"ver":"0.1","info":{"id":"ssfcWN","date":"1642173784","viewed":139,"name":"Sunny Clouds Plane","username":"peremoya2000","description":"Simple 2d cloud shader for a sunny day.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["noise","clouds","parallax"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    vec2 speed= vec2(sin(iTime*.009),cos(iTime*.03))*(.9+cos(.21+iTime*.023)*.15);\n    uv+=speed;   \n    vec2 uvOffset;\n    vec3 col;\n    float clouds, passes;\n    uvOffset = .05*vec2(fracNoise(uv+iTime*.005));\n    float cutoff = .3+.05*sin(iTime*.05);\n    \n    clouds = smoothstep(cutoff-.1,cutoff+.3,noise(8.*uv+uvOffset*2.));\n    clouds += smoothstep(cutoff-.25,cutoff+.25,smoothNoise(4.*uv+uvOffset+256.));\n    clouds= min(.9,clouds);\n    clouds*=pow(smoothstep(.32,.95,fracNoise(uvOffset+uv)),2.5);\n    \n    col+=vec3(clouds*.6);\n    col+=vec3(.4,.5,.9);\n    col=min(col,vec3(.98));\n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//noise from iq's www.shadertoy.com/view/lsf3WH\nfloat hash(vec2 p) {\n    p  = 50.0*fract( p*0.3183099 + vec2(0.71,0.113));\n    return -1.0+2.0*fract( p.x*p.y*(p.x+p.y) );\n}\nfloat noise( in vec2 p ){\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat smoothNoise( vec2 uv ){\n    float n;\n    lowp float div;\n    for (float i=-.2; i<.2; i+=.05){\n        for (float j=-.2; j<.2; j+=.05){\n           ++div;\n           n+=noise(uv+vec2(j,i)); \n        }\n    }\n    n/=div;\n    return n;\n}\n\nfloat fracNoise(vec2 uv){\n    uv *= 8.0;\n    mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\tfloat fr  = 0.5000*noise( uv ); \n    uv = m*uv;\n\tfr += 0.2500*noise( uv ); uv = m*uv;\n\tfr += 0.1250*noise( uv ); uv = m*uv;\n\tfr += 0.0625*noise( uv ); uv = m*uv;\n    fr = 0.5 + 0.5*fr;\n    return fr;\n}","name":"Common","description":"","type":"common"}]}