{"ver":"0.1","info":{"id":"wlVGz3","date":"1579524077","viewed":245,"name":"My test01","username":"tonywu","description":"Just for test","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur){\n\tfloat d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\tuv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    float mask = Circle(uv, vec2(0), 0.4, 0.05);\n    mask -= Circle(uv, vec2(0.3*sin(iTime), 0.3*cos(iTime)), 0.25, 0.05);\n    vec3 col = vec3(1);\n    col *= mask;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}