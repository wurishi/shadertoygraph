{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#ifdef GL_ES\nprecision highp float;\n#endif\n\n#define POINTS 25.0\n#define RADIUS 350.0\n#define BRIGHTNESS 0.95\n#define COLOR vec3(1.0, 1.0, 1.0)\n#define SMOOTHNESS 40.0\n\n#define LAG_A 2.325\n#define LAG_B 3.825\n#define LAG_C 8.825\n\nvec2 getPoint(float n) {\n     float t = iTime * 0.1;\n     vec2 center = iResolution.xy / 2.0;\n     vec2 p = (\n            vec2(100.0, 0.0) * sin(t *  2.5 + n * LAG_A)\n          + vec2(110.0, 100.0) * sin(t * -1.5 + n * LAG_B)\n          + vec2(150.0, 100.0) * cos(t * 0.05 + n * LAG_C)\n          + vec2(150.0, 0.0) * sin(t * 0.15 + n)\n     );\n     return center + p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n     vec2 position = fragCoord.xy;\n     float b = 0.3;\n    \n     for (float i = 0.0; i < POINTS; i += 0.8) {\n          vec2 p = getPoint(i);\n          float d = 1.0 - clamp(distance(p, position) / RADIUS, 0.0, 0.5);\n          b += pow(d, SMOOTHNESS);\n     }\n    \n     vec3 c = 0.9 - b+(\n            //(sin(b * 24.0) - 0.25) * vec3(0.3, 0.1, 1.0)\n          //+ b * vec3(0.57, 0.0, 0.0)\n          + clamp(1.0 - b, 1.0, 1.0) * (cos(b * 10.0) + 1.25) * vec3(1.5, 1.5, 1.5)\n     );\n    \n     fragColor = vec4(c * BRIGHTNESS, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdsXzr","date":"1396270081","viewed":741,"name":"Fluid Amoeba","username":"jpm8888","description":"Smooth amobea shader, fusing liquids","likes":20,"published":1,"flags":0,"usePreview":0,"tags":["amoebafluidfusionsmooth"],"hasliked":0,"parentid":"","parentname":""}}