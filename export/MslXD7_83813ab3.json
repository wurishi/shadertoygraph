{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"cubemap","id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"cubemap","id":"4sfGzn","filepath":"/media/a/793a105653fbdadabdc1325ca08675e1ce48ae5f12e37973829c87bea4be3232.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define PI \t\t\t3.14159265359\n#define SPHERE \t\tvec4 (0.0, 0.0, 0.0, 1.0)\n#define FOV \t\t60.0\n\n#define RI_AIR\t\t1.000293\n#define RI_SPH\t\t1.55\n\n#define ETA \t\t(RI_AIR/RI_SPH)\n#define R\t\t\t-0.02\n\n#define FR_BIAS\t\t0.0\n#define FR_SCALE\t1.0\n#define FR_POWER\t0.7\n\n#define FR0\t\t\tvec3 (0.0, 1.0, 0.7)\n#define FR1\t\t\tvec3 (0.2, 1.0, 0.7)\n\nmat3 rotate_x (float fi) {\n\tfloat cfi = cos (fi);\n\tfloat sfi = sin (fi);\n\treturn mat3 (\n\t\t1.0, 0.0, 0.0,\n\t\t0.0, cfi, -sfi,\n\t\t0.0, sfi, cfi);\n}\n\nmat3 rotate_y (float fi) {\n\tfloat cfi = cos (fi);\n\tfloat sfi = sin (fi);\n\treturn mat3 (\n\t\tcfi, 0.0, sfi,\n\t\t0.0, 1.0, 0.0,\n\t\t-sfi, 0.0, cfi);\n}\n\nmat3 rotate_z (float fi) {\n\tfloat cfi = cos (fi);\n\tfloat sfi = sin (fi);\n\treturn mat3 (\n\t\tcfi, -sfi, 0.0,\n\t\tsfi, cfi, 0.0,\n\t\t0.0, 0.0, 1.0);\n}\n\nfloat sphere_intersect (in vec3 o, in vec3 d, in vec4 c, out float t0, out float t1) {\n\tvec3 oc = o - c.xyz;\n\tfloat A = dot (d, d);\n\tfloat B = 2.0 * dot (oc, d);\n\tfloat C = dot (oc, oc) - c.w;\n\tfloat D = B*B - 4.0*A*C;\n\tfloat q = (-B - sqrt (D) * sign (B))/2.0;\n\tfloat _t0 = q/A;\n\tfloat _t1 = C/q;\n\tt0 = min (_t0, _t1);\n\tt1 = max (_t0, _t1);\n\treturn step (0.0, D);\n}\n\nfloat fresnel_step (vec3 I, vec3 N, vec3 f) {\n\treturn clamp (f.x + f.y * pow (1.0 + dot (I, N), f.z), 0.0, 1.0);\n}\n\nvec4 refraction_sample (vec3 rd, vec3 pt, vec3 pn, vec4 sp, float eta) {\n\tfloat t0, t1;\n\t\n\tvec3 pf = refract (rd, pn, eta); \t\t// outer refraction\n\t\n\tsphere_intersect (\t\t\t\t\t\t// find ray exit\n\t\tpt, pf, sp, t0, t1);\n\t\n\t\tvec3 ep = pt + pf*t1;\t\t\t\t// exit point\n\tvec3 en = normalize (sp.xyz - ep);\t\t// exit normal\n\tvec3 er = reflect (pf, en);\t\t\t\t// inner reflection\n\tvec3 ef = refract (pf, en, 1.0/eta);\t// inner refraction\n\t\n\treturn texture (iChannel0, ef);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = (2.0*fragCoord.xy - iResolution.xy)/min (iResolution.x, iResolution.y) * tan (radians (FOV)/2.0);\n\tvec2 mo = PI * iMouse.xy / iResolution.xy;\n\t\n\tvec3 up = vec3 (0.0, 1.0, 0.0); \t\t\t// up \n\tvec3 fw = vec3 (0.0, 0.0, 1.0) * \t\t\t// forward\n\t\trotate_y (mo.x * PI); \t\t\t\t\n\tvec3 lf = cross (up, fw); \t\t\t\t\t// left\n\t\n\tvec3 ro = -fw * 5.0; \t\t\t\t\t\t// ray origin\n\tvec3 rd = normalize (\n\t\tuv.x * lf + uv.y * up + fw) ; \t\t\t// ray direction\n\tvec4 sp = SPHERE + \t\t\t\t\t\n\t\tvec4 (0.0, 1.0, 0.0, 0.0)*\n\t\tsin (iTime); \t\t\t\t\t\t\t\n\t\n\tfloat t0 = 0.0, t1 = 0.0;\t\t\t\t\t// sphere intersection points\n\t\n\tfloat d = sphere_intersect (\t\t\t\t// initial intersection\n\t\tro, rd, sp, t0, t1); \n\t\n\tvec4 color;\n\t\n\tif (d > 0.0) {\n\t\tvec3 pt = ro + rd*min (t0, t1);\t\t\t// initial entry point\n\t\tvec3 pn = normalize (pt - sp.xyz);\t\t// initial point normal\n\t\tvec3 pr = reflect (rd, pn);\t\t\t\t// outer reflection\n\t\tvec4 crefl = mix (\n\t\t\ttexture (iChannel0, pr),\n\t\t\ttexture (iChannel1, pr),\n\t\t\tfresnel_step (rd, pn, FR1));\n\t\n\t\tvec4 crefr = vec4 (\n\t\t\trefraction_sample (rd, pt, pn, sp, ETA*(1.0 + R)).r,\n\t\t\trefraction_sample (rd, pt, pn, sp, ETA).g,\n\t\t\trefraction_sample (rd, pt, pn, sp, ETA*(1.0 - R)).b,\n\t\t\t1.0);\n\t\t\n\t\tcolor = mix (crefr, crefl, fresnel_step (rd, pn, FR0));\n\t}\n\telse {\n\t\tcolor = texture (iChannel0, rd);\n\t}\n\tfragColor = color;//pow (color, vec4 (1.0/2.0));\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MslXD7","date":"1402828011","viewed":312,"name":"Sphere refraction","username":"Coldberg","description":"Sphere refraction reflection","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sphererefraction"],"hasliked":0,"parentid":"","parentname":""}}