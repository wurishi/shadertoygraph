{"ver":"0.1","info":{"id":"Mf2yDc","date":"1723220234","viewed":50,"name":"plazma by lanczos","username":"vovach777","description":"plazma","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["lanczos","plazma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n        \n    vec2 sz = vec2(textureSize(iChannel0,0).xy);\n    float rsz=3.;\n    \n    vec3 col = periodic( lanczos3sample(iChannel0,  uv*rsz + \n       vec2(\n       (cos(iTime*0.2)*0.5+0.5)*rsz*4.,\n       (sin(iTime*0.2)*0.5+0.5)*rsz*4.\n       ) - 0.5) + iTime*0.7);\n    \n    \n    fragColor = vec4( col*col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n  if (iFrame > 0) {\n     fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n  } else {\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 random_color = vec3( rand(uv), rand(uv+vec2(1.,0)), rand(uv+vec2(0.,1.0)) );\n    fragColor = vec4( random_color , 1.0 );\n   }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"precision mediump float;\nprecision mediump sampler2D;\nprecision mediump int;\n\n\nvec2 rotate(vec2 uv, float angle)\n{\n\nfloat c = cos(angle);\nfloat s = sin(angle);\nmat2 rotationMatrix = mat2(c, -s, s, c);\n\n\nreturn rotationMatrix * (uv - 0.5) + 0.5;\n}\n\n\n\n// Output fragment color\n\nconst float PI = 3.14159265359; //acos(-1.0);\nconst float PI_SQ = PI*PI;\n\nconst float FLT_EPSILON = 0.0009765625;\n\n\nfloat rand(vec2 co)\n{\n    float a = 12.9898;\n    float b = 78.233;\n    float c = 43758.5453;\n    float dt= dot(co.xy ,vec2(a,b));\n    float sn= mod(dt,PI);\n    return mod(sin(sn) * c,1.0);\n}\n\nfloat lanczos3 (float x) {\n  float a=3.;\n  x=abs(x)*PI;\n  if (x>a*PI) return 0.;\n  return x<.001?1.:a*sin(x)*sin(x/a)/(x*x);\n}\n\nfloat lanczos3 (vec2 x) {\n  return lanczos3(x.x)*lanczos3(x.y);\n}\n\nvec3 lanczos3sample (sampler2D samp, vec2 f) {\n  ivec2 F=ivec2(floor(f)); f=mod(f,1.);\n  int N=3;\n  ivec2 D;\n  vec3 v=vec3(0.);\n  for (D.y=-N+1;D.y<=N;D.y++)\n  for (D.x=-N+1;D.x<=N;D.x++) {\n    vec3 x=texelFetch(samp,F+D,0).rgb;\n    v+=x*lanczos3(f-vec2(D));\n  }\n  return clamp(v,0.,1.);\n}\n\n\n\n\nfloat periodic(float v) {    \n  return clamp( abs( mod(v,1.) - 0.5)*2., 0., 1.);\n}\n\nvec2 periodic(vec2 v) {\n    \n  return clamp( abs( mod(v,1.) - 0.5)*2., 0., 1.);\n}\n\n\nvec3 periodic(vec3 v) {\n   return clamp( abs( mod(v,1.) - 0.5)*2., 0., 1.);\n}\n","name":"Common","description":"","type":"common"}]}