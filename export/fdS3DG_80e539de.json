{"ver":"0.1","info":{"id":"fdS3DG","date":"1617853827","viewed":115,"name":"Hypnotic Heart \"Plasma\"","username":"ShiftedClock_","description":"Fork of \"Concentric Plasma\" by cacheflower: https://www.shadertoy.com/view/ltyXzm\nWith heart elements from iq: https://www.shadertoy.com/view/XsfGRn","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["heart","concentric"],"hasliked":0,"parentid":"ltyXzm","parentname":"Concentric Plasma"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265358\n#define TWO_PI 6.28318530718;\nconst float timeScale = 4.;\n\nfloat saw(float rads) {\n    rads += PI * 0.5; // sync oscillation up with sin()\n    float percent = mod(rads, PI) / PI;\t\t\t\t\n    float dir = sign(sin(rads));\n    return dir * (2. * percent  - 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // set time & centered position\n    float time = 10. + iTime * timeScale;\n    vec2 uv = (2. * fragCoord.xy - iResolution.xy) / iResolution.y;\n    uv *= .8;\n    uv.y = -0.1 - uv.y*1.2 + abs(uv.x)*(1.0-abs(uv.x));\n\t// calc additive distance from control points\n    float dist = 0.;\n    for(int ii = 1; ii < 5; ii++) {\n      \tdist += (10. + 7. * sin(time/timeScale)) * distance(uv, vec2(0.));\n    }\n    // oscillate color components by distance factor. smoothstep for contrast boost\n    vec3 col = vec3(\n        smoothstep(0.1, 0.9, abs(sin(time + dist * 0.11)) * 0.5 + 0.6),\n        smoothstep(0.1, 0.8, abs(cos(time + dist * 0.22)) * 0.37 + 0.01),\n        smoothstep(0.1, 0.8, abs(sin(time + dist * 0.33)) * 0.15 + 0.4)\n    );\n\t// vignette outside of center\n    float vignetteInner = 0.75;\n    float vignetteDarkness = 0.4;\n    col -= smoothstep(0., 0.7, max(0., length(uv) - vignetteInner) * vignetteDarkness);\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}