{"ver":"0.1","info":{"id":"MdKBDG","date":"1530358285","viewed":589,"name":"Wave pattern examples","username":"JohanFlod","description":"Uncomment code to see Sawtooth and Triangle waves etc. \n\n\n\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["sine","curve","plot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* \n\nUncomment code to see Sawtooth and Triangle Waves etc. \n   \n*/\n\nconst int NUM_WAVES = 5;\nfloat pi = atan(1.0) * 4.0;\nfloat y;\n\nfloat Wave(vec2 p, float amplitude, float frequence,float offset_y)\n{\n   \t// basic sine wave ----------------------------------------------------\n    \n    y =  amplitude*(sin(p.x*frequence))+offset_y;\n    \n    // sine wave with a sampled look --------------------------------------\n    \n    //y =  amplitude*(sin(float(int(p.x*frequence))))+offset_y;\n    \n    // semi random city scape ---------------------------------------------\n    \n    y =  amplitude*(sin(float(int(p.x*frequence))*4.))+offset_y;\n    \n    \n    // triangle wave. -----------------------------------------------------\n    \n    //y = amplitude*(abs(mod(p.x*frequence,2.0)-1.))+offset_y;\n    \n    // \"sinewave\" pattern with a smoothed triangle wave -------------------\n   \n    //float triangle = abs(mod(p.x*frequence,2.0)-1.);\n    //y = amplitude*(triangle*triangle*(3.0 - 2.0 *triangle))+offset_y;\n    \n    // sawtooth -----------------------------------------------------------\n    // Return only the fraction part of a number. This is calculated as x - floor(x).\n    \n    //y = amplitude*(fract(p.x*frequence))+offset_y;\n    \n    \n\treturn p.y + y;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.xy;\n    float colour;\n   \tfloat wave;\n    \n    st=10.0*st-5.;\n    st.x+=iTime;\n     for(int j = NUM_WAVES; j >0; j--)\n    {\n        float i = float(j); \n        \n        // wave generation \n        wave = Wave(st,1./i,i,2.0/i);\n        // fill underneath the curve\n        wave = step(1.-wave,1.0);\n        // mix with previous wave in the loop \n        colour = mix(1.-.15*i,colour,wave);\n    \t\n    }\n\n    fragColor = vec4(vec3(colour),1.0);\n}\n","name":"Image","description":"","type":"image"}]}