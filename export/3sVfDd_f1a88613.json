{"ver":"0.1","info":{"id":"3sVfDd","date":"1640192831","viewed":72,"name":"Beholder","username":"jllusty","description":"Just some compositional work.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 color(in float t) {\n    float r = 0.5 + 0.5*cos(t);\n    float eps = 0.015;\n    r = smoothstep(0.75,.75+eps,r);\n    float g = .4-smoothstep(3.,3.+.05,t/5.);\n    float b = 0.;//0.5 + 0.5*cos(t)\n    return vec3(r,g,b);\n}\n\nvec3 diff(in float t) {\n    float eps = 0.0001;\n    vec3 cp = color(t-eps);\n    vec3 cf = color(t+eps);\n    return (cf-cp)/(2.*eps);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 4.5*fragCoord/iResolution.xy-2.25;\n    uv *= 5.0;\n    \n    float aspect = iResolution.x/iResolution.y;\n    uv.x = uv.x*aspect;\n\n    float theta = atan(uv.y,uv.x);\n    \n    float r = length(uv);\n    r += uv.y*sin(iTime - r);\n    \n    uv.x = r * cos(theta);\n    uv.y = r * sin(theta);\n    \n    float t1 = abs(dot(uv,vec2(1.0,0.0)));\n    \n    vec3 col = color(length(uv)+t1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}