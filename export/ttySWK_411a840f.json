{"ver":"0.1","info":{"id":"ttySWK","date":"1583581709","viewed":154,"name":"Rainbow Saturn","username":"baldand","description":"Quick test using MaterialMaker","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["generated","materialmaker"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nGenerated using MaterialMaker\nhttps://rodzilla.itch.io/material-maker\n+ custom nodes (inc Raymarching) by PauloFalc√£o\n(see https://twitter.com/paulofalcao/status/1235913934516912135?s=20)\n\nManual additions to generated shader code for aspect ratio + animation\n*/\n\nfloat rand(vec2 x) {\n    return fract(cos(dot(x, vec2(13.9898, 8.141))) * 43758.5453);\n}\n\nvec2 rand2(vec2 x) {\n    return fract(cos(vec2(dot(x, vec2(13.9898, 8.141)),\n\t\t\t\t\t\t  dot(x, vec2(3.4562, 17.398)))) * 43758.5453);\n}\n\nvec3 rand3(vec2 x) {\n    return fract(cos(vec3(dot(x, vec2(13.9898, 8.141)),\n                          dot(x, vec2(3.4562, 17.398)),\n                          dot(x, vec2(13.254, 5.867)))) * 43758.5453);\n}\n\n// From http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 rgb2hsv(vec3 c) {\n\tvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n\tvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n\tvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n\n\tfloat d = q.x - min(q.w, q.y);\n\tfloat e = 1.0e-10;\n\treturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c) {\n\tvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n\tvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 rotate3d(vec3 p, vec3 a) {\n\tvec3 rv;\n\tfloat c;\n\tfloat s;\n\tc = cos(a.x);\n\ts = sin(a.x);\n\trv.x = p.x;\n\trv.y = p.y*c+p.z*s;\n\trv.z = -p.y*s+p.z*c;\n\tc = cos(a.y);\n\ts = sin(a.y);\n\tp.x = rv.x*c+rv.z*s;\n\tp.y = rv.y;\n\tp.z = -rv.x*s+rv.z*c;\n\tc = cos(a.z);\n\ts = sin(a.z);\n\trv.x = p.x*c+p.y*s;\n\trv.y = -p.x*s+p.y*c;\n\trv.z = p.z;\n\treturn rv;\n}\nvec2 sdf3dc_union(vec2 a, vec2 b) {\n\treturn vec2(min(a.x, b.x), mix(b.y, a.y, step(a.x, b.x)));\n}\nvec2 sdf3dc_sub(vec2 a, vec2 b) {\n\treturn vec2(max(-a.x, b.x), a.y);\n}\nvec2 sdf3dc_inter(vec2 a, vec2 b) {\n\treturn vec2(max(a.x, b.x), mix(a.y, b.y, step(a.x, b.x)));\n}\nvec4 o5489_p_SkyColor_gradient_fct(float x) {\n  if (x < 0.000000000) {\n    return vec4(0.793357015,0.864655972,0.979166985,1.000000000);\n  } else if (x < 0.118182000) {\n    return mix(mix(vec4(0.510612011,0.698400021,1.000000000,1.000000000), vec4(0.287342012,0.329521000,0.557291985,1.000000000), (x-0.118182000)/0.293416000), mix(vec4(0.793357015,0.864655972,0.979166985,1.000000000), vec4(0.510612011,0.698400021,1.000000000,1.000000000), (x-0.000000000)/0.118182000), 1.0-0.5*(x-0.000000000)/0.118182000);\n  } else if (x < 0.411598000) {\n    return 0.5*(mix(vec4(0.510612011,0.698400021,1.000000000,1.000000000), vec4(0.287342012,0.329521000,0.557291985,1.000000000), (x-0.118182000)/0.293416000) + mix(mix(vec4(0.793357015,0.864655972,0.979166985,1.000000000), vec4(0.510612011,0.698400021,1.000000000,1.000000000), (x-0.000000000)/0.118182000), mix(vec4(0.287342012,0.329521000,0.557291985,1.000000000), vec4(0.171140000,0.209502995,0.416667014,1.000000000), (x-0.411598000)/0.533857000), 0.5-0.5*cos(3.14159265359*(x-0.118182000)/0.293416000)));\n  } else if (x < 0.945455000) {\n    return mix(mix(vec4(0.510612011,0.698400021,1.000000000,1.000000000), vec4(0.287342012,0.329521000,0.557291985,1.000000000), (x-0.118182000)/0.293416000), mix(vec4(0.287342012,0.329521000,0.557291985,1.000000000), vec4(0.171140000,0.209502995,0.416667014,1.000000000), (x-0.411598000)/0.533857000), 0.5+0.5*(x-0.411598000)/0.533857000);\n  }\n  return vec4(0.171140000,0.209502995,0.416667014,1.000000000);\n}\nfloat o5489_input_sdf_a(vec3 p) {\nfloat r = 360.*iTime;\nfloat o403273_0_1_sdf3d = length(((p)))-0.250000000;\nvec2 o19319_0_q = vec2(length((rotate3d(((p)), -vec3(r, 39.000000000, 9.000000000)*0.01745329251)).xy)-0.450000000,(rotate3d(((p)), -vec3(r, 39.000000000, 9.000000000)*0.01745329251)).z);\nfloat o19319_0_1_sdf3d = length(o19319_0_q)-0.030000000;\nvec2 o176921_0_1_sdf3dc = vec2(o19319_0_1_sdf3d, 0.0);\nvec2 o964145_0_1_sdf3dc = sdf3dc_union(vec2(o403273_0_1_sdf3d, 0.0), o176921_0_1_sdf3dc);\n\nreturn (o964145_0_1_sdf3dc).x;\n}\nvec4 o278313_p_gradient_gradient_fct(float x) {\n  if (x < 0.000000000) {\n    return vec4(1.000000000,0.000000000,0.000000000,1.000000000);\n  } else if (x < 0.254545000) {\n    return mix(vec4(1.000000000,0.000000000,0.000000000,1.000000000), vec4(1.000000000,0.968750000,0.000000000,1.000000000), ((x-0.000000000)/0.254545000));\n  } else if (x < 0.527273000) {\n    return mix(vec4(1.000000000,0.968750000,0.000000000,1.000000000), vec4(0.000000000,1.000000000,0.125000000,1.000000000), ((x-0.254545000)/0.272728000));\n  } else if (x < 0.772727000) {\n    return mix(vec4(0.000000000,1.000000000,0.125000000,1.000000000), vec4(0.000000000,0.062500000,1.000000000,1.000000000), ((x-0.527273000)/0.245454000));\n  } else if (x < 1.000000000) {\n    return mix(vec4(0.000000000,0.062500000,1.000000000,1.000000000), vec4(0.843750000,0.000000000,1.000000000,1.000000000), ((x-0.772727000)/0.227273000));\n  }\n  return vec4(0.843750000,0.000000000,1.000000000,1.000000000);\n}\nvec3 o5489_input_tex3d_a(vec3 p) {\nvec4 o278313_0_0_rgba = o278313_p_gradient_gradient_fct(((((p).xy+vec2(0.5)))).x);\nvec3 o279673_0_1_tex3d = ((o278313_0_0_rgba).rgb);\n\nreturn (o279673_0_1_tex3d).xyz;\n}\nfloat o5489_input_sdf_b(vec3 p) {\n\nreturn ((p)).y+1.0;\n}\nvec3 o5489_input_tex3d_b(vec3 p) {\n\nreturn (vec3(mod(floor(((p)).x)+floor(((p)).z),2.0))*0.25+0.5);\n}\nvec2 input_o5489(vec3 p) {\n    float sdfa=o5489_input_sdf_a(p);\n\tfloat sdfb=o5489_input_sdf_b(p);\n\tif (sdfa<sdfb) {\n\t  return vec2(sdfa,0.0);\n\t} else {\n\t  return vec2(sdfb,1.0);\n\t}\n}\n\nvec3 normal_o5489(vec3 p) {\n\tfloat d = input_o5489(p).x;\n    vec2 e = vec2(.001,0);\n    vec3 n = d - vec3(\n        input_o5489(p-vec3(e.xyy)).x,\n        input_o5489(p-vec3(e.yxy)).x,\n        input_o5489(p-vec3(e.yyx)).x);\n    return normalize(n);\n}\n\nvoid march_o5489(out float d,out vec3 p,out vec2 dS, vec3 ro, vec3 rd){\n    for (int i=0; i < 500; i++) {\n    \tp = ro + rd*d;\n        dS = input_o5489(p);\n        d += dS.x;\n        if (d > 50.0 || abs(dS.x) < 0.0001) break;\n    }\n}\n\n//from https://www.shadertoy.com/view/lsKcDD\nfloat calcAO_o5489( in vec3 pos, in vec3 nor ){\n\tfloat occ = 0.0;\n    float sca = 1.0;\n    for( int i=0; i<5; i++ ){\n        float h = 0.001 + 0.15*float(i)/4.0;\n        float d = input_o5489( pos + h*nor ).x;\n        occ += (h-d)*sca;\n        sca *= 0.98;\n    }\n    return clamp( 1.0 - 1.6*occ, 0.0, 1.0 );    \n}\n\n//from https://www.shadertoy.com/view/lsKcDD\nfloat calcSoftshadow_o5489( in vec3 ro, in vec3 rd, in float mint, in float tmax){\n\tfloat res = 1.0;\n    float t = mint;\n    float ph = 1e10; // big, such that y = 0 on the first iteration\n    for( int i=0; i<32; i++ ){\n\t\tfloat h = input_o5489( ro + rd*t ).x;\n        res = min( res, 10.0*h/t );\n        t += h;\n        if( res<0.0001 || t>tmax ) break;  \n    }\n    return clamp( res, 0.0, 1.0 );\n}\n\n\nvec3 raymarch_o5489(vec2 uv) {\n    uv-=0.5;\n    vec3 cam=vec3(sin(iTime)*1.200000000,0.700000000+sin(iTime*.3),cos(iTime)*1.800000000);\n\tvec3 lookat=vec3(0.000000000,0.000000000,0.000000000);\n\tvec3 ray=normalize(lookat-cam);\n\tvec3 cX=normalize(cross(vec3(0.0,1.0,0.0),ray));\n\tvec3 cY=normalize(cross(cX,ray));\n\tvec3 rd = normalize(ray*1.300000000+cX*uv.x+cY*uv.y);\n\tvec3 ro = cam;\n\t\n\tfloat d=0.;\n\tvec3 p=vec3(0);\n\tvec2 dS=vec2(0);\n\tmarch_o5489(d,p,dS,ro,rd);\n\t\n    vec3 color=vec3(0.0);\n\tvec3 objColor=(dS.y<0.5)?o5489_input_tex3d_a(p):o5489_input_tex3d_b(p);\n\tfloat fog=max(1.0-(d/50.0),0.0);\n\tvec3 light=normalize(vec3(0.950000000,1.200000000,0.450000000));\n\tif (d<50.0) {\n\t    vec3 n=normal_o5489(p);\n\t\tfloat l=clamp(dot(-light,-n),0.0,1.0);\n\t\tfloat r=clamp(dot(reflect(rd,-n),light),0.0,1.0);\n\t\tfloat cAO=calcAO_o5489(p,n);\n\t\tfloat shadow=calcSoftshadow_o5489(p,light,0.05,5.0);\n\t\tcolor=min(vec3(max(shadow,0.360000000)),max(l,0.360000000))*max(cAO,0.360000000)*objColor+pow(r,200.000000000)*0.850000000;\n\t} else {\n\t    color=o5489_p_SkyColor_gradient_fct(rd.y).xyz;\n\t}\n    return color*(fog)+o5489_p_SkyColor_gradient_fct(rd.y).xyz*(1.0-fog);\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\nvec2 UV = fragCoord/min(iResolution.x,iResolution.y);\nUV -= .5*(iResolution.xy/min(iResolution.x,iResolution.y)-1.);\nUV.y = 1.0-UV.y;\nvec4 o5489_0_d = vec4(raymarch_o5489((UV)),1.0);\n\nvec4 o5489_0_1_rgba = o5489_0_d*1.3;\nfragColor = o5489_0_1_rgba;\n}\n","name":"Image","description":"","type":"image"}]}