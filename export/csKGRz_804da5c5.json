{"ver":"0.1","info":{"id":"csKGRz","date":"1678120836","viewed":100,"name":"merging field shader","username":"Ovionyx","description":"Renders a field effect around various 2D points. Z component is the size of the field at that point,","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//List of points to render at\nconst vec3[] points = vec3[] (vec3(0.2, 0.4, 0.15), vec3(0.7, 0.28, 0.25), vec3(0.5, 0, 0.3));\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.x;\n\n    vec4 col = texture(iChannel0, uv);\n    \n    bool inField = false;\n    float a = 1.0;\n    for (int i = 0; i < 3 /*Change this to the length of the point list*/; i++) {\n        vec3 p = points[i];\n        vec2 d = uv - p.xy;\n        float dist = sqrt(d.x*d.x+d.y*d.y) / (p.z + sin(iTime+(uv.x+uv.y)*20.0)/400.0);\n        if (dist <= 1.0) {\n            inField = true;\n            float localA = 1.0-sqrt(1.0-dist*dist);\n            if (localA < a) {\n                a = localA;\n            }\n        }\n    }\n    \n    if (inField) {\n        col = mix(col, vec4(0.5, 0.95, 1.0, 1.0), pow(a, 2.0+sin(iTime+(uv.x+uv.y)*100.0)*0.5));\n    }\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}