{"ver":"0.1","info":{"id":"llsXD7","date":"1437358962","viewed":419,"name":"Tunnel Flythrough","username":"Cubed","description":"First attempt at raymarching. \nCredit to IÃ±igo QuÃ­lez for creating this page: http://iquilezles.org/articles/distfunctions/distfunctions.htm\nand dila tube for this simple raymarching tutorial: https://www.youtube.com/watch?v=yxNnRSefK94","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","grey"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"// Using IÃ±igo QuÃ­lez's distance functions from: https://iquilezles.org/articles/distfunctions\n\nfloat sdBox( vec3 p, vec3 b ) {\n  vec3 d = abs(p) - b;\n  return min(max(d.x,max(d.y,d.z)),0.0) + length(max(d,0.0));\n}\n\nfloat sdCross(in vec3 p)\n{\n  float da = sdBox(p.xyz,vec3(4.0,0.0,1.0));\n  float db = sdBox(p.yzx,vec3(1.0,2.0,2.0));\n  float dc = sdBox(p.zxy,vec3(0.5,1.0,sin(iTime*4.0)+2.5));\n  return min(da,min(db,dc));\n}\n\nfloat opRep(vec3 p, vec3 c) {\n    vec3 q = mod(p,c)-0.5*c;\n    return sdCross(q);\n}\n\nfloat trace(vec3 o, vec3 r) {\n    float t = 0.0;\n    for (int i = 0; i < 32; i++) {\n    \tvec3 p = o + r * t;\n        float d = opRep(p, vec3(6.0, 6.0, 6.0));\n        t += d * 1.0;\n    }\n    return t;\n}\n\nmat2 rotation(float theta) {\n    return mat2(cos(theta), -sin(theta), sin(theta), cos(theta));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 r = normalize(vec3(uv, 1.0));\n    r.xz *= rotation(sin(iTime) * 0.2);\n    r.xy *= rotation(cos(iTime) * 0.2);\n    vec3 o = vec3(0.0, iTime, iTime * 10.0);\n    float t = trace(o, r);\n    float fog = 1.0 / (1.0 + t * t * 0.001);  \n    vec3 fc = vec3(1.0-fog);\n\tfragColor = vec4(fc ,1.0);\n}","name":"","description":"","type":"image"}]}