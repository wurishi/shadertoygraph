{"ver":"0.1","info":{"id":"NlS3RK","date":"1624206002","viewed":192,"name":"Radio Signal kinda","username":"ashishkarn","description":"First shader using sin cos functions.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["first"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float plot(float pct, vec2 st){\n    float buffer;\n    //buffer=0.08;\n    float sinB=cos(iTime/10.)*2000.0;\n    buffer=sin(sinB*(st.x+iTime))/5.0;\n    return smoothstep(pct-buffer,pct,st.y)-smoothstep(pct,pct+buffer,st.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 st = fragCoord/iResolution.xy;\n    \n    vec3 green = vec3(0.,1.0,0.);\n\n    float y=0.5;\n    \n    vec3 color = green*plot(y,st);\n\n    // Output to screen\n    fragColor = vec4(color,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}