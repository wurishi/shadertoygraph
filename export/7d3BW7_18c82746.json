{"ver":"0.1","info":{"id":"7d3BW7","date":"1656576891","viewed":131,"name":"Fork Synaptic I","username":"molotovbliss","description":"Just play around with GPU sound and some visual ideas, nothing special... still learning :)\n","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["demo","1kb"],"hasliked":0,"parentid":"NlcGRB","parentname":"Synaptic Interference"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//         *                       .        *\n//         |   .                            |      .\n//      *--+                 +              +--*\n//          \\                              /\n//   .       *--- Synaptic Interference --*\n//          /                              \\\n//      *--+                      .         +--*\n//         |      .                         |\n//         *                                *    .\n//                                   .\n//          Shader Code from a\n//             1Kb Windows Demo\n//    .           by @P_Malin / Bitshifters\n//\n//                                              .\n//             Released at Demosplash 2021\n// \n// https://www.pouet.net/prod.php?which=90302\n// https://www.youtube.com/watch?v=lF0zUT6aiHo\n// https://www.shadertoy.com/view/NlcGRB\n\nvoid mainImage(out vec4 o,in vec2 c)\n{\n    float h=0.,t=2.5-(iTime*60.0)/2e3,d=3.;\n    vec3 f=vec3(0);\n    for(int j=0;j<122;j++){\n        vec3 p=vec3(c.xy/iResolution.y-.5,.5)*h+vec3(1,0,-1);\n        for(int j=0;j<4;\n        p.xz*=mat2(cos(t),-sin(t),sin(t),cos(t)),t/=5.,p.xy*=mat2(cos(t),-sin(t),sin(t),cos(t)),t*=5.,d=length(p=abs(p)/.8-vec3(1,2,.2)),j++);\n        h+=d=d/121.;\n        f+=(cos(vec3(.1,.8,.1)+d*350.+h+t*60.)+1.)*exp(-clamp(d*2.-1.,0.,1e5))/150.;\n    }\n    o=vec4(f,1);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\nvoid mainImage( out vec4 o, in vec2 c )\n{\n    float h=0.,t=4.5-(iTime*60.0)/2e3,d=1.;\n\t\n    //t = 4.5-51.45*60./2e3;// screenshot time\n    \n    vec3 f = vec3(0);\n\t\n    for(int j=0; j<70; j++) {\n\t\t vec3 p = vec3(c.xy/iResolution.y-.5,.5)\n\t\t\t\t\t\t*h + vec3(1,3,-1);\n\n\t\tfor(int j=0;j <16;\n\t\t\n\t\t\tp.xz *= mat2(cos(t),-sin(t),sin(t),cos(t)),\n\t\t\tt/=5.,\n\t\t\tp.xy *= mat2(cos(t),-sin(t),sin(t),cos(t)),\n\t\t\tt*=5.,\n\t\t\n\t\t\td = length(p = abs(p)/.8-vec3(1,2,.2)),\n            j++\n\t\t);\n        h += d = d/31.;\t\t\t// 32 ~= (1/.8)^16\n                \n\t\tf += (cos(vec3(.9,.6,.3)+d*50.+h+t*280.)+1.) * exp(-clamp(d*50.-1.,0.,1e5)) / 150.;\n    }\n\n\t//fc = vec3(1)*step( cos(t*280.), 0.); // Test to sync audio    \n    \n//------------------------   \n    \n    o = vec4(f,1);\n}\n*/","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// The original audio code was on the CPU \n#define B 512u\nvec2 mainSound(int s,float z)\n{\n    uint v,g=uint(z*11000.),b[B],i=0u;\n    for(;i<B;i++){\n        uint t=g+i-B,o=4u+(t>>10);\n        v=((t*(19u+(((o)^(o>>2))&4u)))/12u)&138u;\n        if((i>12u)&&(((g>>25)&1u)!=0u))v=b[i-2u];\n        if(i>2u)v=(v+b[i-1u])/2u;b[i]=v;\n    }\n    return vec2(float(v&255u)/512.);\n}","name":"Sound","description":"","type":"sound"}]}