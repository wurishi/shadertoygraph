{"ver":"0.1","info":{"id":"dlsBDl","date":"1693639832","viewed":75,"name":"pixel shuffle","username":"yoo","description":"flips the subdivided area until it is a single pixel","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["abstract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    // Calculate XOR value based on screen resolution\n    ivec2 n = ivec2(log2(iResolution.xy));\n    ivec2 xor_val = ((ivec2(1) << n) - 1) / 3;\n\n    // Apply XOR transformation to the screen space\n    ivec2 new_coord = ivec2(fragCoord) ^ xor_val;\n\n    // Convert the new coordinates to normalized coordinates\n    vec2 uv = vec2(new_coord) / iResolution.xy;\n\n    // Sample the texture using the new coordinates\n    fragColor = texture(iChannel0, uv);\n}\n","name":"Image","description":"","type":"image"}]}