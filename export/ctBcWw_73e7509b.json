{"ver":"0.1","info":{"id":"ctBcWw","date":"1691815176","viewed":22,"name":"fosfenos quadratica","username":"davidmachadosf","description":"patterns repeats at many different scales...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fosfenos"],"hasliked":0,"parentid":"dljcDD","parentname":"fosfenos palete spectra"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI   =   3.141592;\nconst float pot  =    22.;\nconst float freq = 50.;\n\n\nconst vec3 a = vec3(  .086,   .086,   .109); // bgcolor: eigengrau\n\n\nconst vec3 b = vec3(  .251,  .553, .150); \nconst vec3 c = vec3(  .052,  .561, .464);\nconst vec3 d = vec3(  .103,  .203, .813);\n\nvec3 palette( float t ) {\n    return a + b*cos(t*t*t) + c*sin(t*t) + d*cos(t);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    float yRat = (iResolution.y/iResolution.x);\n    \n    vec2 uv = 2.*(fragCoord/iResolution.x - vec2(.5,yRat/2.));\n    \n    float x = uv.x;\n    float y = uv.y;\n\n    float valxy = \n        //1. -\n         pow( 1.+sin((2.*PI)*freq*(sin(.01*iTime*(x*x/y))))/2., pot) * \n         pow( 1.+cos((2.*PI)*freq*(cos(.01*iTime*(y*y/x))))/2., pot);\n    \n    \n    vec3 col = palette(valxy);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}