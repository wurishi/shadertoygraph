{"ver":"0.1","info":{"id":"MtfBWl","date":"1513856495","viewed":507,"name":"Square Pattern","username":"PaperColor","description":"Square Pattern","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["squarepattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//I write this in Unity3d first,then implement here,:)\n#define float2 vec2\n#define frac fract\n#define speed 0.618\n#define lineNumber 5.0\n#define lineWidth 0.1\n\nbool IsInRange(float value,float pos,float width)\n{\n\treturn (value>= pos) && (value<= pos+width);\n}\n\nfloat SquareLine(float2 uv,float pos,float width)\n{\n    uv = uv*2.0 - 1.0;\n\tuv = abs(uv);\n\t//horizontal\n\tbool h = IsInRange(uv.x,pos,width) && (uv.y<pos+width);\n\t//vertical\n\tbool v= IsInRange(uv.y,pos,width)&&(uv.x<pos+width);\n\n\tif(h||v) return 1.0;\n    return 0.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;    \n    uv.x*=iResolution.x/iResolution.y; \n    uv.x -= 0.35;\n    \n\tfloat hz = iTime*0.5*speed;\n    \n\t\t\t \n\tfloat value =0.0;\n\t\t\t   \n\tfor(float index=0.0;index<lineNumber;index+=1.0)\n\t{\n\t\tvalue += SquareLine(uv,frac(hz + index/lineNumber),lineWidth);\n\t}\n\n\tfragColor = vec4(value,value,value,1); \n}","name":"Image","description":"","type":"image"}]}