{"ver":"0.1","info":{"id":"XlcSDf","date":"1481760455","viewed":335,"name":"Rainbow Pulse","username":"ptrgags","description":"Inspired by the color diffraction from https://www.shadertoy.com/view/XsXXDn","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Bell-shaped curve with maximum value 1.0\nfloat bell(float x, float center, float stretch) {\n    return exp(-pow((x - center) / stretch, 2.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    //Center the origin\n    uv -= 0.5; \n    \n    //Fix aspect ratio\n    float aspect_ratio = iResolution.x / iResolution.y;\n    uv.x *= aspect_ratio;\n    \n    //Distance from center\n    float dist_center = length(uv);\n    \n    // Iterate over the color components\n    for (int i = 0; i < 3; i++) {\n        //Each\n        float phase_shift = float(i) * 0.13;\n        \n    \t//wrap the time value to a range [0.0, 1.5]\n    \t//this is slightly greater than size of the window\n    \t//so it makes the animation smoother. This will be\n    \t//used for the radius of animated pulses\n    \tfloat pulse_radius = mod(iTime + phase_shift, 1.5);\n    \n    \t//how much to stretch the pulse (which takes the form of a bell-shaped\n    \t//curve with respect to distance from center.\n    \tfloat pulse_stretch = 0.2;\n     \n        //Make a bell curve pulsing outwards from the center of the screen.\n        fragColor[i] = bell(dist_center, pulse_radius, pulse_stretch);\n    }\n    fragColor.a = 1.0;\n}","name":"Image","description":"","type":"image"}]}