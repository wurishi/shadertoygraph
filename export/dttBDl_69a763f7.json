{"ver":"0.1","info":{"id":"dttBDl","date":"1701736743","viewed":15,"name":"bsb: background 2","username":"wainggan","description":"for a game","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["psychedelic","background"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 palette(float i) {\n    \n    vec3 a = vec3(0.7, 0.2, 0.5);\n    vec3 b = vec3(0.0, 0.5, 0.8);\n    vec3 c = vec3(0.0, 0.0, 0.0);\n    \n    float h = 0.5;\n    \n    vec3 o = mix(mix(c, a, i / h), mix(b, a, (i - h) / (1.0 - h)), step(h, i));\n    \n    return o;\n}\n\nfloat hash(float i) {\n    float s = sin(199.9 * i) + sin(77.7 * i) + sin(155.5 * i);\n    s = (s + 3.0) / 6.0;\n    return s;\n}\n\nfloat check(vec2 uv, vec2 scale) {\n    uv += iTime / scale;\n    \n    vec2 grid = round(uv * 16.0) / 16.0;\n    \n    float c = min(hash(grid.x), hash(grid.y));\n    c = smoothstep(0.30, 0.60, c);\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n        \n    float o = 0.0;\n    \n    o = max(o, check(uv, vec2(16.0, 8.0)));\n    o = min(o, check(uv, vec2(-16.0, -10.0)));\n    o = max(o, check(uv, vec2(32.0, 100.0)));\n    o = min(o, check(uv, vec2(-32.0, -100.0)));\n    \n    vec3 col = palette(o);\n    \n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}