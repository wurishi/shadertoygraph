{"ver":"0.1","info":{"id":"McdfWM","date":"1733179222","viewed":51,"name":"falling in bloom","username":"bombblob","description":"interesting patterns emerge from simple spirals offset in strange ways","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["spiral","illusion","trippy","pattern","emergingpatterns"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize UV coordinates to range [-1, 1] and correct aspect ratio\n    vec2 uv = ( 2.*fragCoord - iResolution.xy ) / iResolution.y;\n\n    // Parameters\n    float halfLines = 5.0; // Number of radial lines\n    float time = iTime; // Time for animation\n    float spinSpeed = 0.75; // Speed of rotation\n    // float numBands = 10.0;\n    float maxBands = 20.;\n    float numBands = abs(sin(iTime/7.)*maxBands);\n    // float numBands = 0.; // change this for cool ring effects\n    float bandStep = 1.0 / numBands; // Size of each rotating section\n    float spiralFactor = 3.0; // Controls the amount of spiral\n    float groupSize = 2.5;\n    float groupOffset = 0.25;\n\n    // there are 2 sets of lines-- spinning in different directions\n    // This creates a honeycomb-like pattern and emergent line-patterns\n    // rotationOffset=0 makes the lines stationary\n    float rotationOffset = 0.75;\n    // float counterclockwiseRotation = -1.0; // 1.0 for clockwise, -1.0 for counterclockwise\n    float clockwiseRotation = cos(iTime/11.)/5.;\n    float antiClockwiseRotation = -clockwiseRotation + rotationOffset;\n\n    float distance = length(uv);\n\n    // lines spiraling in opposite directions\n    vec2 angle = atan(uv.y, uv.x) + length(uv) * spiralFactor * vec2(1.,-1.);\n\n    float bandIndex = groupSize + floor(distance / bandStep);\n    float speedAdjust = mod(bandIndex, groupSize) * (groupOffset / groupSize) + 1.0; // Alternate speeds\n    float groupIndex = floor(bandIndex / groupSize);\n    speedAdjust += modf(groupIndex, groupSize) * (groupOffset / groupSize);\n    float rotation = speedAdjust * time * spinSpeed;\n\n    angle += vec2(antiClockwiseRotation,clockwiseRotation) * rotation;\n\n    vec2 linePatterns = abs(sin(angle * halfLines));\n    float radialFade = smoothstep(0.0, 0.1, distance);\n\n    vec2 intensity = radialFade * smoothstep(0.6, 0.9, linePatterns);\n\n    float combinedIntensity = intensity.x + intensity.y*mix(-1.,1.,sin(time/17.));\n\n    vec3 color = vec3(combinedIntensity);\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}