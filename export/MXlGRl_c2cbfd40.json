{"ver":"0.1","info":{"id":"MXlGRl","date":"1707836290","viewed":150,"name":"piano-Haddaway - What Is Love","username":"jorge2017a2","description":"piano-Haddaway - What Is Love\n/referencia video\n//Haddaway - What Is Love (piano tutorial)\n//https://www.youtube.com/watch?v=doBQUH_RaTE","likes":7,"published":1,"flags":8,"usePreview":0,"tags":["piano","haddawaywhatislove"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//por jorge2017a2\n\n//referencia\n//https://iquilezles.org/articles/distfunctions2d\n///\n#define antialiasing(n) n/min(iResolution.y,iResolution.x)\n\n#define S(d,b) smoothstep(antialiasing(1.5),0. , d - (b) )\n#define S2(d,b) smoothstep(8.0*antialiasing(1.5),0.,d - (b) )\n#define opU2(d1, d2) ( d1.x < d2.x ? d1 : d2 )\n\n\n#define PI     3.14159265\n#define TWO_PI 6.28318530\n\n\nvec3 DrawFigBorde(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj,0.0));\n  colOut = mix(colOut,vec3(0.0) ,S2(abs( distObj)-0.005,0.0));\n  return colOut;\n}\n\n\nvec3 DrawFig(vec3 pColObj, vec3 colOut, float distObj )\n{  colOut = mix(colOut,pColObj ,S2( distObj-0.05,0.0)); return colOut;}\n\nvec3 DrawFigSolo(vec3 pColObj, vec3 colOut, float distObj ) \n{  colOut = mix(colOut,pColObj ,S( distObj,0.0)); return colOut; }\n\n\nvec3 DrawFigDelgado(vec3 pColObj, vec3 colOut, float distObj )\n{ colOut = mix(colOut,pColObj ,S2( distObj-0.001,0.0)); return colOut; }\n\n\n\nfloat sdBox( in vec2 p, in vec2 b )\n{ vec2 d = abs(p)-b;  return length(max(d,0.0)) + min(max(d.x,d.y),0.0);  }\n\n\n\nvec3 BxLineaV(vec2 p, vec2 pos, vec2 med, vec3 colOut, vec3 colIn)\n{\n    float i,d1;\n    float d0=sdBox(p+pos, med);\n    colOut=DrawFigBorde(vec3(1.0), colOut,d0);    \n    \n    for(i=0.0;i<med.y;i+=0.25)\n    {    d1=sdBox(p+pos, vec2(med.x,i));\n         d1=abs(d1)-0.01;\n         colOut=DrawFigDelgado(colIn,colOut,d1) ;\n    }\n    \n    return colOut;\n}\n\n\nvec3 BxLineaH(vec2 p, vec2 pos, vec2 med, vec3 colOut, vec3 colIn)\n{\n    float i,d1;\n    float d0=sdBox(p+pos, med);\n    colOut=DrawFigBorde(vec3(1.0), colOut,d0);    \n    \n    for(i=0.0;i<med.x;i+=0.25)\n    {    d1=sdBox(p+pos, vec2(i,med.y));\n         d1=abs(d1)-0.01;\n         colOut=DrawFigDelgado(colIn, colOut,d1);\n    }\n    \n    return colOut;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = -1.0 + 2.0 * fragCoord.xy/iResolution.xy;\n\tuv.x *= iResolution.x/iResolution.y;\n    uv-=vec2(0.0,-0.5);\n    float esc=8.0;\n    uv*=esc;\n    vec2 uv0=uv;\n    vec3 col=vec3(1.0);\n    \n\n    col=BxLineaH(uv, vec2(0.0,0.0), vec2(15.0,15.0), col,vec3(1.0,0.0,0.0));\n    \n    col=BxLineaV(uv, vec2(10.0,-2.0), vec2(1.0,4.0), col,vec3(0.0,0.0,1.0));\n    col=BxLineaV(uv, vec2(-10.0,-2.0), vec2(1.0,4.0), col,vec3(0.0,0.0,1.0));\n    \n    col=BxLineaV(uv, vec2(7.5,-3.0), vec2(0.8,4.0), col,vec3(0.0,0.0,1.0));\n    col=BxLineaV(uv, vec2(-7.5,-3.0), vec2(0.8,4.0), col,vec3(0.0,0.0,1.0));\n    \n    col=BxLineaV(uv, vec2( 5.5,-4.0), vec2(0.8,4.0), col,vec3(0.0,0.0,1.0));\n    col=BxLineaV(uv, vec2(-5.5,-4.0), vec2(0.8,4.0), col,vec3(0.0,0.0,1.0));\n    \n    col=BxLineaV(uv, vec2( 3.5,-5.0), vec2(0.8,4.0), col,vec3(0.0,0.0,1.0));\n    col=BxLineaV(uv, vec2(-3.5,-5.0), vec2(0.8,4.0), col,vec3(0.0,0.0,1.0));\n    \n    col=BxLineaH(uv, vec2(-8.0*sin(iTime),-2.0), vec2(2.0,1.0), col,vec3(0.0,1.0,0.0));\n    \n        \n    col=pow(col,  vec3(0.554545));\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"//Referencia de sonido \n//IQ ,Gaz,AeroShark333\n\n//Modificado por Jorge2017a2---jorgefp\n\n//referencia video\n//Haddaway - What Is Love (piano tutorial)\n//https://www.youtube.com/watch?v=doBQUH_RaTE\n\n\n#define PI acos(-1.)\n#define PIH (PI*.5)\n#define TAU (PI*2.)\n#define TWO_PI 6.2831\n\n//const float PI = 3.1415926;\n\n#define DD(a,b) n=(s>=a)? vec2(a,b):n;\n#define D3(a,b,c) n3=(s>=a && s<=c)? vec3(a,b,c):n3;\n\nconst float ttotal=48.0;\nconst float pi = 3.1415927;\nconst float tau = 6.283185;\n//const float ttotal=40.0;\n\n//gaz\n#define osc_sin(x)sin((x)*TAU)\n#define osc_saw(x)(1.-fract(x)*2.)\n#define osc_sqr(x)sign(0.5-fract(x))\n#define osc_tri(x)(asin(sin((x)*PI))/PIH)\n\n\n\n//https://www.shadertoy.com/view/ss3cDN\n// Created by AeroShark333\nfloat squareWave750( float f, float x)\n{\n    return (min(1.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 3.0 )));\n}\n\nfloat squareWave500( float f, float x)\n{\n    return (floor( 2.0 * floor( f * x ) - floor( 2.0 * f * x ) + 1.0 ));\n}\n\nfloat squareWave250( float f, float x)\n{\n    return (max(0.0, floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 )));\n}\n\nvec2 squareWave250( vec2 f, float x)\n{\n    return (max(vec2(0.0), floor( 4.0 * floor( f * x ) - floor( 4.0 * f * x ) + 1.0 )));\n}\n\nfloat triangleWave500( float q, float x)\n{\n    float f = 1.0-2.0*abs(0.5-mod(q*x,1.0));\n    return (f);\n}\n\nfloat triangleWave250( float q, float x)\n{\n    float f = max(0.0,1.0-2.0*abs(0.5-2.0*mod(q*x,1.0)));\n    return (f);\n}\n\nfloat convertBassFreq (float f){\n    return (f/2.0);\n}\n\n\n\nfloat wave1( float x, float dxdt, in vec2 v, float t , float w)\n{   \n    float f2;\n    float sampleX=0.0;\n    float f=w;\n    sampleX =squareWave250(f,t)*triangleWave250(f,t) *exp(-2.5*t);\n    f2=sampleX;\n    float fx=f2;\n    return fx;\n}\n\n\nfloat SoundIq(float time)\n{ ///referencia de notas musicales... iq \n  time = mod( time+1.0, ttotal);\n // tune\n  float tempo = 0.5;\n  float s = time*tempo;\n vec3 n3=vec3(0.0);\n \n //Haddaway - What Is Love (piano tutorial)\n//https://www.youtube.com/watch?v=doBQUH_RaTE\n D3(0.,50.,0.125) D3(0.125,53.,0.25) D3(0.25,55.,1.) D3(0.375,26.,1.375) D3(0.375,31.,1.375) D3(0.375,34.,1.375)\n D3(1.,50.,1.125) D3(1.125,51.,1.25) D3(1.25,50.,1.375) D3(1.375,53.,1.625) D3(1.5,26.,2.5) D3(1.5,29.,2.5)\n D3(1.5,34.,2.5) D3(1.625,50.,2.375) D3(2.375,50.,2.5) D3(2.5,53.,2.75) D3(2.625,26.,3.625) D3(2.625,29.,3.625)\n D3(2.625,33.,3.625) D3(2.75,50.,3.5) D3(3.5,50.,3.625) D3(3.625,48.,4.375) D3(3.75,24.,4.75) D3(3.75,29.,4.75)\n D3(3.75,33.,4.75) D3(4.875,26.,5.875) D3(4.875,31.,5.875) D3(4.875,34.,5.875) D3(5.5,50.,5.625) D3(5.625,51.,5.75)\n D3(5.75,50.,5.875) D3(5.875,53.,6.125) D3(6.,26.,7.) D3(6.,29.,7.) D3(6.,34.,7.) D3(6.125,50.,6.875)\n D3(6.875,50.,7.) D3(7.125,26.,8.125) D3(7.125,29.,8.125) D3(7.125,33.,8.125) D3(7.,53.,7.25) D3(7.25,50.,8.)\n D3(8.,50.,8.125) D3(8.125,48.,8.875) D3(8.25,24.,9.25) D3(8.25,29.,9.25) D3(8.25,33.,9.25) D3(9.375,26.,10.375)\n D3(9.375,31.,10.375) D3(9.375,34.,10.375) D3(9.375,50.,9.625) D3(9.625,50.,9.875) D3(9.875,50.,10.125) D3(10.125,50.,10.375)\n D3(10.375,51.,10.5) D3(10.5,26.,11.5) D3(10.5,29.,11.5) D3(10.5,34.,11.5) D3(10.5,50.,10.75) D3(10.75,50.,11.)\n D3(11.,50.,11.25) D3(11.25,50.,11.5) D3(11.5,51.,11.625) D3(11.625,26.,12.625) D3(11.625,29.,12.625) D3(11.625,33.,12.625)\n D3(11.625,50.,11.875) D3(11.875,50.,12.125) D3(12.125,50.,12.375) D3(12.375,50.,12.625) D3(12.625,51.,12.75) D3(12.75,24.,13.75)\n D3(12.75,29.,13.75) D3(12.75,33.,13.75) D3(12.75,53.,13.) D3(13.,53.,13.25) D3(13.25,53.,13.5) D3(13.5,53.,13.75)\n D3(13.75,53.,13.875) D3(13.875,26.,14.875) D3(13.875,31.,14.875) D3(13.875,34.,14.875) D3(13.875,50.,14.125) D3(14.125,50.,14.375)\n D3(14.375,50.,14.625) D3(14.625,50.,14.875) D3(14.875,51.,15.) D3(15.,26.,16.) D3(15.,29.,16.) D3(15.,34.,16.)\n D3(15.,50.,15.25) D3(15.25,50.,15.5) D3(15.5,50.,15.75) D3(15.75,50.,16.) D3(16.,51.,16.125) D3(16.125,26.,17.125)\n D3(16.125,29.,17.125) D3(16.125,33.,17.125) D3(16.125,50.,16.375) D3(16.375,50.,16.625) D3(16.625,50.,16.875) D3(16.875,50.,17.125)\n D3(17.125,51.,17.25) D3(17.25,24.,18.25) D3(17.25,29.,18.25) D3(17.25,33.,18.25) D3(17.25,53.,17.5) D3(17.5,53.,17.75)\n D3(17.75,53.,18.) D3(18.,53.,18.25) D3(18.25,53.,18.375) D3(18.375,26.,19.375) D3(18.375,31.,19.375) D3(18.375,34.,19.375)\n D3(18.375,46.,18.5) D3(18.5,45.,18.625) D3(18.625,46.,18.75) D3(18.75,43.,18.875) D3(18.875,46.,19.) D3(19.,45.,19.125)\n D3(19.125,46.,19.25) D3(19.25,45.,19.375) D3(19.375,43.,19.5) D3(19.5,26.,20.5) D3(19.5,29.,20.5) D3(19.5,34.,20.5)\n D3(19.5,46.,19.625) D3(19.625,45.,19.75) D3(19.75,46.,19.875) D3(19.875,41.,20.) D3(20.,46.,20.125) D3(20.125,45.,20.25)\n D3(20.25,46.,20.375) D3(20.375,45.,20.5) D3(20.5,41.,20.625) D3(20.625,26.,21.625) D3(20.625,29.,21.625) D3(20.625,33.,21.625)\n D3(20.75,45.,20.875) D3(20.875,43.,21.) D3(21.,45.,21.125) D3(21.125,41.,21.25) D3(21.25,45.,21.375) D3(21.375,43.,21.5)\n D3(21.5,45.,21.625) D3(21.625,41.,21.75) D3(21.75,24.,22.75) D3(21.75,29.,22.75) D3(21.75,33.,22.75) D3(21.75,45.,21.893)\n D3(21.893,43.,22.036) D3(22.036,45.,22.179) D3(22.179,41.,22.321) D3(22.321,45.,22.464) D3(22.464,43.,22.607) D3(22.607,45.,22.75)\n D3(22.75,41.,22.893) D3(22.893,26.,23.643) D3(22.893,31.,23.643) D3(22.893,34.,23.643) D3(22.893,43.,23.268) D3(23.268,50.,23.393)\n  \n  // lower one octave\n  n3.y -=12.; //12 notas\n      \n  // compute note frequency and time  \n  float f = 440.0*pow( 2.0, float(n3.y-69.)/12.0 );\n  float t = time - float(n3.x)/tempo;\n  if( n3.x==0.0 ) return 0.0;\n\n  // prepare wave parameters\n  float w = tau*f;\n  float dwdt = w/iSampleRate; // derivative\n    \n  // mix between bandlimited and raw saw waves  \n  vec2 v = smoothstep(-0.2,0.2,sin(t*vec2(1.0,0.5)) );\n  // build instrument\n  \n  float f1,y;\n  f1=wave1(w*t,1.00*dwdt,v,t,w);\n  \n  \n  float wf  = 0.4*f1;\n  y=f1*wf;\n  //y=wf;\n  float offset=n3.x+n3.z;\n   y*=exp(-1.0/n3.z * (t -offset) );\nreturn y;\n}\n\n\nfloat noize(float t,  float a, float b)\n{\n    float g=fract(cos(t*exp2(a))*exp2(b))+6.0;\n    return exp(-0.08*g*g) *40.0-1.;\n}\n\nfloat noize01(float t,  float a, float b){\n    float g=fract(cos(t*exp2(a))*exp2(b))+6.0;\n    return exp(-0.08*g*g) *40.0-1.;\n}\n\nfloat kick(float t)\n{  return clamp(1.5*asin(cos(320.0*t-30.0*exp(-40.0*t))),-1.,1.)*exp(-4.*t);}\n\n\nfloat snare(float t)\n{   float n=noize(t,10.,10.)*exp(-t*10.);\n    float f=t*160.,a=.3*osc_tri(1.2*f)*exp(-t*3.);\n    float b=.05*osc_sin(10.*f+a)*exp(-t*3.);\n    float c=osc_sin(f+b)*exp(-t*15.), z;\n    return n+c;\n}\n\nfloat hihat01(float t)\n{ return noize01(t,10.,18.)*exp(-t*15.);}\n\n\n\nvec2 mainSound( in int samp, float time )\n{ float t1=mod(time, ttotal);\n    float y;\n    y= SoundIq(t1)*0.5;\n    float t2;\n    if(t1<30.0)\n     t2=mod(t1,0.5);\n    else\n     t2=mod(t1,0.25);\n    \n    float t3=mod(t1,0.5);\n    float t4=mod(t1,0.5);\n    float y2=kick(t2)*0.8;\n    float y3=snare(t3);\n    float y4=hihat01(t4);\n    \n    y+=y2+y3+y4;\n  return vec2(y);\n}   \n","name":"Sound","description":"","type":"sound"}]}