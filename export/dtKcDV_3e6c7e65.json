{"ver":"0.1","info":{"id":"dtKcDV","date":"1700695814","viewed":16,"name":"Squaretesting","username":"workingclasshacker","description":"just playing with some functions to explore as effects","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox(vec2 o, vec2 b, float sm){\n    vec2 d = abs(o)-b;\n    return length(max(d, 0.0))+length(min(max(d.x, d.y),1.0))+sm;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n        vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n\n    // Time varying pixel color\n    float tf2 = cos(iTime)*10.;\n    vec2 or = .5-fract(uv*tf2);\n    float tf = (sin(iTime)+1.2)/2.;\n    float r = sdBox(or, vec2(0.5,cos(tf*5.)), .0);\n    float g = sdBox(or, vec2(0.5, 0.5), 0.)*cos(tf*4.);\n    float b = sdBox(or/2.*mod(or,tf), vec2(0.6), 0.0);\n    vec3 col = vec3(min((r+1.)/2.,1.),2.*max(.2,min(g,1.)),min(1.-b*b,1.0));\n\n    // Output to screen\n    fragColor = vec4(col.rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}