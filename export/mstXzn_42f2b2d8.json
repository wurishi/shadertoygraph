{"ver":"0.1","info":{"id":"mstXzn","date":"1679334829","viewed":85,"name":"depthmapWave","username":"autodavidhu","description":"When migrating this from Flutter to Shadertoy, I was quiet drunk. Will arrange this and upload a basic depth map sample. (not so much to expect, because lots of glitch.)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","depthmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define MAX_STEPS 70.\n#define MAX_DIST 100.\n#define SURF_DIST .001\n#define TAU 6.283185\n#define PI 3.14159265358979\n#define T u_time\n#define SCRZ 7.\n#define AA 2.\n#define camRad 8.\n#define dx .001\n\nmat3 GetCamCoord(vec3 p, vec3 l) {\n    vec3 f = normalize(l-p);\n    vec3 r = normalize(cross(vec3(0,1,0), f));\n    vec3 u = cross(f,r);\n    return mat3(f, r, u);\n}\n\nvec3 GetRayDir(mat3 camRot, vec2 plotCoord) {\n    return camRot * vec3(SCRZ, plotCoord);\n}\n\nfloat depthFunc(vec2 xy){\n    // return -1. + sin(xy.x) * sin(xy.y);\n    // return -1. - cos(length(xy)*10.);\n    return -1. - .05*(cos(-iTime*3.+length(xy- vec2(.8,0.))*20.) + cos(-iTime*3.+length(xy-vec2(-.8,0.))*20.));\n}\n\nvec4 colorFunc(vec2 xy) {\n    float grid = 0.0;\n    if (min(fract(xy.x*8.), fract(xy.y*8.)) < 0.07) grid = 0.1;\n    float a = depthFunc(vec2(xy.x,xy.y));\n    float b = depthFunc(vec2(xy.x+dx,xy.y));\n    float c = depthFunc(vec2(xy.x,xy.y+dx));\n    return vec4(grid + 0.5+0.5*dot(normalize(vec3(1.,1.,1.)), normalize(vec3(b-a, c-a, -dx))));\n}\n\nvec4 RayMarch(vec3 camPos, vec3 rayDir) {\n    vec3 currentPos = camPos - ((camPos.z - 0.) / rayDir.z) * rayDir;\n    for (float i = 0.; i < 75.; i+=1.) {\n        // currentPos = currentPos - (.6*(currentPos.z - depthFunc(currentPos.xy)) / rayDir.z) * rayDir;\n        currentPos = currentPos + 0.55 * (currentPos.z - depthFunc(currentPos.xy)) * normalize(rayDir);\n    }\n    return colorFunc(currentPos.xy);\n}\n\nvoid mainImage(\n    \t\t\tout vec4 fragColor, // Output (r, g, b, a) pixel color \n\t\t\t\tin vec2 fragCoord   // Input (x, y) image coordinate\n\t\t\t  ) {\n\n    float unit = min(iResolution.x, iResolution.y) / 1. / 2.;\n\n    float u_mouse_x = -(iMouse.x-iResolution.x*.5) / iResolution.x * 3.;\n    float u_mouse_y = -(iMouse.y-iResolution.y*.5) / iResolution.y * 3.;\n    \n    vec2 plotCoord = (fragCoord - vec2(iResolution.x, iResolution.y) / 2.) / unit * vec2(1., -1.);\n\n    vec3 camPos = vec3(\n        camRad*sin(u_mouse_x)*cos(u_mouse_y), \n        camRad*sin(u_mouse_y), \n        camRad*cos(u_mouse_x)*cos(u_mouse_y) + 1.);\n    vec3 camLookAt = vec3(0., 0., 0.);\n    mat3 camRot = GetCamCoord(camPos, camLookAt);\n    vec3 rayDir = GetRayDir(camRot, plotCoord);\n\n    fragColor = RayMarch(camPos, rayDir);\n}\n\n\n","name":"Image","description":"","type":"image"}]}