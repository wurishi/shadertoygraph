{"ver":"0.1","info":{"id":"cldyWS","date":"1699642606","viewed":85,"name":"another ht shader","username":"lalaoopybee","description":"somewhat comic like\nfeel free to change iChannel0 to any render/texture/video","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["dither","halftone","ht","comic","printing","print","magazine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Size (5.+25.*iMouse.y/iResolution.y)\n#define Num int(2.+8.*iMouse.x/iResolution.x)\n\nconst float Sqrt2=1.4142136;\n\nvec2 rotVec(vec2 v, float f) {\n    float c=cos(f), s=sin(f);\n    return mat2(c, -s, s, c)*v;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv=fragCoord/iResolution.xy;\n    vec4 col=texture(iChannel0, uv);\n    \n    vec2 rCoord=rotVec(fragCoord, iTime);\n    vec2 gCoord=rotVec(fragCoord-vec2(.5, 1)*iResolution.xy, iTime);\n    vec2 bCoord=rotVec(fragCoord-vec2(iResolution.x, 0), iTime);\n    vec3 dist=Sqrt2*vec3(\n        length(.5-fract(rCoord/Size)),\n        length(.5-fract(gCoord/Size)),\n        length(.5-fract(bCoord/Size))\n    );\n    \n    //lerp between posterization levels\n    float N1=float(Num-1);\n    vec3 lower=floor(col.rgb*N1)/N1;\n    vec3 upper=ceil(col.rgb*N1)/N1;\n    //i was in a fog when i made this (i cant explain this)\n    vec3 halftone=smoothstep(dist, dist+.1, fract(col.rgb*N1));\n    fragColor=vec4(mix(lower, upper, halftone), 1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const uint AnimSpeed=4u;\n\nconst float Pi=3.1415927;\nvec2 polar(float f) {\n    return vec2(cos(f), sin(f));\n}\n\n//https://www.shadertoy.com/view/4djSRW\nfloat hash11(float x) {\n    x=fract(x*.1031);\n    x*=x+33.33;\n    return fract(2.*x*x);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float sqSz=.5*min(iResolution.x, iResolution.y);\n    \n    vec2 ctr=.5*iResolution.xy;\n    vec2 pCtr=fragCoord-ctr;\n    \n    vec2 st=1.-step(sqSz, abs(pCtr));\n    vec2 uv=pCtr/sqSz;\n    \n    float time=round(iTime*float(AnimSpeed));\n    float rotR=2.*Pi*hash11(time);\n    float rotG=2.*Pi*hash11(time+5.);\n    float rotB=2.*Pi*hash11(time+10.);\n    \n    vec2 vR=polar(rotR), vG=polar(rotG), vB=polar(rotB);\n    fragColor=vec4(.5*vec3(\n        dot(uv+vR, vR),\n        dot(uv+vG, vG),\n        dot(uv+vB, vB)\n    )*smoothstep(1.02, .98, length(uv)), 1);\n}","name":"Buffer A","description":"","type":"buffer"}]}