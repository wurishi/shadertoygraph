{"ver":"0.1","info":{"id":"tddyWX","date":"1601904316","viewed":75,"name":"hexagonal world","username":"nexor","description":".","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","hex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R iResolution\n#define T iTime\n#define pi acos(-1.)\n#define rot(a) mat2(cos(a+699.*vec4(0,-1,1,0)))\n\nfloat box(vec2 p, vec2 b)\n{\n \tp=abs(p)-b;\n    return min(0.,max(p.x,p.y))+length(max(p,.0));\n}\n\nfloat hex(vec2 p, out float id) {\n    p.x *= 2./sqrt(3.);\n\tp.y += mod(floor(p.x), 2.0)*0.5;\n    vec2 ip=floor(p)+.5;\n    p=fract(p)-.5;\n\tp = abs(p);\n    id=abs(max(ip.x*1.5 + ip.y, ip.y*2.0) - 1.0);\n\treturn abs(max(p.x*1.5 + p.y, p.y*2.0) - 1.0);\n}\n\nvoid mainImage( out vec4 O, in vec2 I )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (I-.5*R.xy)/R.y;\n\n    float k = length(uv);\n    //uv*=rot(.2*cos(k*15.+T));\n    uv=uv\n    *2./dot(uv,uv)\n    ;\n    float tt=T*.5;\n    float t=floor(tt);\n    float x=t+smoothstep(.0,.5,fract(tt));\n    float y=t+smoothstep(.5,1.,fract(tt));\n    \n    uv-=vec2(x,y);\n\n    float w =fwidth(length(uv));\n    //uv *= R.x/R.y*8.;\n    //uv *= 15.;\n    //uv = fract(uv-.5)-.5;\n    \n    //uv *= vec2(1.3,1.);\n    float id;\n    float d =hex(uv,id)-.25;\n    d=smoothstep(w*5.,.0,d);\n    //d-=sin(atan(id.y,id.x)*10.+length(id)*5.+T)*.5;\n    //id = floor(id);\n    vec3 col = (vec3(cos(id*7.)+sin(id*141.),sin(id*8.)*cos(id*31.),cos(id*13.+sin(id*17.)*12.))*.5+.5);\n    col = .3+.7*col;\n    col *= 1.-d;\n    O.rgb=col;\n}","name":"Image","description":"","type":"image"}]}