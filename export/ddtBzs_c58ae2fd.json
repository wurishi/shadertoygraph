{"ver":"0.1","info":{"id":"ddtBzs","date":"1697558818","viewed":76,"name":"ex003","username":"opqa","description":"v.0.01 for a kaleidoscope ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["kaleidoscope"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define M_PI 3.1415926535897932384626433832795\n#define M_PI2 6.2831853071795864769252867675590\nprecision mediump float;\n\nint divs = 3;\nint iterations = 4;\n\nvec3 getRamp(float p) {\n    return vec3(.5)\n        + sin(\n            p * M_PI2 + M_PI2 * vec3(.4,.2,.1)\n        )\n        * .5;\n}\n\nvec3 cNP(vec3 p, float s) {\n    float nsin = sin(iTime * 1.) * .5 + .5;\n    nsin = 1. - pow( nsin, 2.);\n    vec2 tp = vec2(nsin * .4 + .1, .4 - nsin * .4) / (s * 20. * (1.1 - nsin));\n    float tpa = atan(tp.y, tp.x) + p.z ;\n    tp = vec2(cos(tpa), sin(tpa)) * length(tp);\n    vec2 np = p.xy - tp;\n    float a = atan(np.y, np.x) + (M_PI + nsin * .5);\n    np = vec2(cos(a), sin(a)) * length(np );\n    return vec3(np.xy, a);\n}\n\nvec3 gC(vec2 p) {\n    vec3 col = (p.y < 0.001) ? vec3(1.) : vec3(.0);\n    vec3 np = vec3(p.xy, 0.);\n    for (float i = 0.; i < float(iterations); i += 1.) {\n        np = cNP(np, i + 1.);\n        float npl = length(np);\n        col *= getRamp(npl * .3 + .7 + i * .6 );\n        col += (np.y >= -0.015 && np.y < 0.015) ? vec3(.01) : vec3(.0);\n        col += (np.y >= 0.0 && np.y < 0.01 + 0.0001 * npl) ? vec3(.2 * (float(iterations)- i)) * (.1 + i * .3) : vec3(.1);\n        col += (np.y >= 0.0 && np.y < 0.001) ? vec3(.5) : vec3(.0);\n    }\n    col += (p.y < 0.001) ? vec3(.05) : vec3(.0);\n    return col;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // NORMALIZE!!! tam tam tcham!\n    vec2 p = fragCoord.xy / iResolution.x - vec2(.5) * vec2(1., iResolution.y / iResolution.x);\n    //p.y = abs(p.y);\n    vec3 col = vec3(0.);\n    float div = float(divs) * 2.;\n    float divS = M_PI2 / div;\n\n    float a = mod(atan(p.y, p.x) + M_PI * .5 + iTime * .2, M_PI2);\n    float l = length(p);\n    float q = floor(a / divS);\n    float s = 1.;\n    for (float i = 0.; i < div; i += 1.) {\n        if (q == i) {\n            a -= i * divS - (s * .5 - .5) * divS ;\n            p = vec2(cos(a), sin(a)) * l ;\n            p.y *= s;\n            col = gC(p);\n\n        }\n        s *= -1.;\n    }\n\n    fragColor = vec4(col, 1.);\n}\n\n","name":"Image","description":"","type":"image"}]}