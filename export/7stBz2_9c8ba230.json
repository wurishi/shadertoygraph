{"ver":"0.1","info":{"id":"7stBz2","date":"1656847450","viewed":151,"name":"Fluid painting","username":"Caineluo","description":"this is Fluid painting demo ","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fluidpainting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat cnoise(vec2 P){\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n  vec4 i = permute(permute(ix) + iy);\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * \n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 coord = 6.0 * fragCoord.xy / iResolution.xy;\n    coord.x *= iResolution.x/iResolution.y;\n    float time = sin(iTime);\n    coord.x += -iMouse.x * 0.01;\n    coord.y += -iMouse.y * 0.01;\n    coord += cnoise(coord);\n    coord += cnoise(coord * 10. + iTime);\n    coord += cnoise(coord * 15. + iTime);\n    for(int i = 1;i < 190;i++){\n        float n = float(i);\n        coord +=   vec2(0.7 / n * sin(n * coord.y   + 0.3) + 0.8, 0.4 / n * sin(n * coord.x  + 0.3 ) + 0.6);\n    }\n    vec3 color = vec3(0.5 * sin(coord.x) + 0.5, 0.5 * sin(coord.y) + 0.5,sin(coord.x+coord.y));\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}