{"ver":"0.1","info":{"id":"lldGzH","date":"1468039449","viewed":216,"name":"Color Chaos","username":"ldlework","description":"Further experiment based on https://www.shadertoy.com/view/ltt3RH","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 hsv2rgb(vec4 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec4 p = abs(fract(c.xxxw + K.xyzw) * 6.0 - K.wwww);\n  return c.z * mix(K.xxxw, clamp(p - K.xxxw, 0.0, 1.0), c.y);\n}\n\nvec4 rgb2hsv(vec4 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec4(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 textel = vec4(texture(iChannel0, fragCoord / iResolution.xy));\n    vec4 hsv_textel = rgb2hsv(textel);\n    hsv_textel.y = 1.0;\n\tfragColor = hsv2rgb(hsv_textel);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float pi = 3.14159265359;\n\n//Hash functions from https://www.shadertoy.com/view/4djSRW\n#define HASHSCALE1 .1031\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\n\nfloat hash13(vec3 p3)\n{\n\tp3  = fract(p3 * HASHSCALE1);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 hash33(vec3 p3)\n{\n\tp3 = fract(p3 * HASHSCALE3);\n    p3 += dot(p3, p3.yxz+19.19);\n    return fract(vec3((p3.x + p3.y)*p3.z, (p3.x+p3.z)*p3.y, (p3.y+p3.z)*p3.x));\n}\n\nvec4 randomHSV(in vec2 p2) {\n\tfloat hue = hash13(vec3(p2, float(iFrame)));\n    return vec4(hue, 1.0, 1.0, 1.0);\n}\n\nvec4 randomRGB(in vec2 p2) {\n    vec3 rgb = hash33(vec3(p2, float(iFrame)));\n    return vec4(rgb.r, rgb.g, rgb.b, 1.0);\n}\n\nvec4 rgb2hsv(vec4 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec4(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 original = texture(iChannel0, fragCoord/iResolution.xy);\n    \n    if(iFrame==0) {\n        fragColor = randomRGB(fragCoord);\n    } else {\n        \n    \tvec4 average = (texture(iChannel0,(fragCoord+vec2(-1.0, 0.0))/iResolution.xy) +\n\t\t\t\t\t\ttexture(iChannel0,(fragCoord+vec2(-1.0, 1.0))/iResolution.xy) +\n\t    \t\t\t\ttexture(iChannel0,(fragCoord+vec2(0.0, -1.0))/iResolution.xy) +\n                        texture(iChannel0,(fragCoord+vec2(1.0, 1.0))/iResolution.xy) +\n                        texture(iChannel0,(fragCoord+vec2(1.0, 0.0))/iResolution.xy) +\n                        texture(iChannel0,(fragCoord+vec2(1.0, -1.0))/iResolution.xy) +\n                        texture(iChannel0,(fragCoord+vec2(0.0, 1.0))/iResolution.xy) +\n                        texture(iChannel0,(fragCoord+vec2(-1.0,-1.0))/iResolution.xy)) / 8.0;\n\n\n        vec4 mixed = mix(average, original, 0.1);\n        vec4 hsv_mixed = rgb2hsv(mixed);\n        \n        if (hsv_mixed.z < 0.05 || hsv_mixed.y < 0.05) {\n            fragColor = randomRGB(fragCoord);\n        } else {\n        \tfragColor = mixed;\n        }\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}