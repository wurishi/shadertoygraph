{"ver":"0.1","info":{"id":"NltyR7","date":"1659472467","viewed":61,"name":"Mandakra shader","username":"fpiaggio","description":"Mandakra shader for p5js project\nhttps://www.fxhash.xyz/generative/17515","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shapes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette[7];\nvec3 getsmcolor(float c, float s) \n{\n    s*=.5;\n    c=mod(c-.5,7.);\n    vec3 color1=vec3(0.0),color2=vec3(0.0);\n    for(int i=0;i<7;i++) {\n        if (float(i)-c<=.0) {\n            color1 = palette[i];\n            color2 = palette[(i+1>6)?0:i+1];\n        }\n    }\n    return mix(color1,color2,smoothstep(.5-s,.5+s,fract(c)));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float fx = iResolution.x/iResolution.y;\n    \n    uv.x*=fx;\n    vec2 p = vec2(0.5*fx,.5) - uv;\n    float r = length(p);\n    float a = atan(p.x,p.y);\n\tpalette[6]=vec3(200,000,000)/255.;\n\tpalette[5]=vec3(255,127,000)/255.;\n\tpalette[4]=vec3(255,200,100)/255.;\n\tpalette[3]=vec3(50,200,100)/255.;\n\tpalette[2]=vec3(000,000,255)/255.;\n\tpalette[1]=vec3(075,000,130)/255.;\n\tpalette[0]=vec3(143,000,255)/255.;\n    \n    vec3 color = vec3(0.);\n    \n    // float sh = sin(r*5.+sin(a*2.)*.2+iTime);\n    float sh = sin(r*8.+sin(a*0.+sin(r*50.))*.2)*sin(r*2.-iTime);\n    sh*=sin(sh*2.+iTime)+sin(a*4.);\n    color = getsmcolor(sh-iTime*.5, .99); \n    \n    \n   \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}