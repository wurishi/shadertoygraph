{"ver":"0.1","info":{"id":"4sscz7","date":"1487527135","viewed":184,"name":"I don't know what I'm doing.","username":"marcthenarc","description":"I'm starting with The Book of Shaders and wanted to practice smooth-stepping.  I simply stringed functions together and added a little time difference. I actually like the \"brades\" effect.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sin","cos","smoothstep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 0,0 - 1,1\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    // Center 0,0.\n    uv = 2.0 * uv - 1.0;\n    \n  \t// I came up with those values as I tweaked them ...\n    float t = 400.0 + 15.0 * (sin(iTime) * 0.5 + 0.5);\n\n    // String up functions together, up and down.\n    float f = cos(uv.y * t * 3.0) * sin(uv.y * 50.0) * sin(uv.y * 10.0)\n         * sin(uv.x * 16.0) * sin(uv.x * t);\n\n    // Started with this at the beginning.\n    f = smoothstep(0.1, 0.9, f);\n   \n    // That is probably the only thing I *really* knew what I was doing. :-)\n    vec3 color = vec3(abs(uv.x),0.5,abs(uv.y)) * f;\n\n    // Drop the mic ...\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}