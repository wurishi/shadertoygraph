{"ver":"0.1","info":{"id":"NdKyz1","date":"1654434235","viewed":310,"name":"water distortion","username":"Jaan","description":"water shader","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["postprocessing","distortion","water","warp"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://gamedevelopment.tutsplus.com/tutorials/using-displacement-shaders-to-create-an-underwater-effect--cms-27191\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float X = uv.x*25.+iTime;\n    float Y = uv.y*25.+iTime;\n    uv.y += cos(X+Y)*0.005*cos(Y);\n    uv.x += sin(X-Y)*0.005*sin(Y);\n\n    fragColor = texture(iChannel0,uv) * vec4(0.2,0.4,.9,1.);\n}","name":"Image","description":"","type":"image"}]}