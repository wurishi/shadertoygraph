{"ver":"0.1","info":{"id":"7sKcDR","date":"1654898279","viewed":303,"name":"The Tensor","username":"nonsense","description":"Inspired by a certain famous movie","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["text"],"hasliked":0,"parentid":"ssKczm","parentname":"matrix0"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    fragColor += 0.05* texture(iChannel0, uv + vec2( 0.000, -0.012));\n    fragColor += 0.1 * texture(iChannel0, uv + vec2( 0.000, -0.008));\n    fragColor += 0.3 * texture(iChannel0, uv + vec2( 0.000, -0.004));\n    fragColor += 0.8 * texture(iChannel0, uv + vec2( 0.000,  0.000));\n    \n    fragColor += 0.3 * texture(iChannel0, uv + vec2(-0.003,  0.000));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// CC BY-NC-SA 3.0 Unported nonsense @ ShaderToy\n\nvec3 rand(vec2 co)\n{\n    return texture(iChannel1, 2.313122*co).rgb;\n}\n\nvec3 rand16(vec2 co)\n{\n    return (1./16.)*round(16.*rand(co));\n}\n\nvec3 getchar(vec2 block, float t)\n{\n    return rand16(block + 0.00005*vec2(t, 0.));\n}\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    uv.y *= iResolution.y / iResolution.x;\n    \n    uv *= 3.;\n    \n    \n    float xblock = (1./16.)*floor(uv.x*16.);\n    \n    uv.y += 0.14*iTime*(rand(vec2(xblock,0.)).x+0.001);\n    \n    \n    vec2 block = vec2(xblock, (1./16.)*floor(uv.y*16.));\n    \n    vec3 char = getchar(block, iTime);\n    vec3 old  = getchar(block, iTime - 0.18);\n    \n    vec2 charuv = uv - block;\n    \n    float col = char.b*round(texture(iChannel0, charuv + char.rg).r);\n    \n    if (char == old)\n        col *= 0.7;\n    \n    fragColor = vec4(0.,col,0.,1.);\n}","name":"Buffer A","description":"","type":"buffer"}]}