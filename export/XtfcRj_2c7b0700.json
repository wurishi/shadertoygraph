{"ver":"0.1","info":{"id":"XtfcRj","date":"1522683940","viewed":256,"name":"lens distortion","username":"kenhu","description":"lens distortion","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 normalized_uv = uv * 2.0 - 1.0;\n    \n    float d = dot(normalized_uv, normalized_uv);\n    float scale_max = 0.5;\n    \n    float extend_uv = d * scale_max * (iMouse.x / iResolution.x);\n    float extend_max = 2.0 * scale_max * (iMouse.x / iResolution.x);\n    \n    float falloff = 0.0;\n    \n    // falloff on x\n    falloff = pow(abs(normalized_uv.x), 8.0) + pow(abs(normalized_uv.x), 4.0); falloff *= 0.5;\n\n    // falloff on y\n    //falloff = pow(abs(normalized_uv.y), 8.0) + pow(abs(normalized_uv.y), 4.0); falloff *= 0.5;\n    \n    float distortion_with_falloff = mix((1.0 + extend_uv) / (1.0 + extend_max), 1.0 , falloff);\n    \n    // falloff intensity by mouse y\n    distortion_with_falloff = mix(distortion_with_falloff, (1.0 + extend_uv) / (1.0 + extend_max), (iMouse.y / iResolution.y));\n    \n\tvec2 distorted_uv = distortion_with_falloff * normalized_uv;\n    \n    distorted_uv = distorted_uv * 0.5 + 0.5;\n\n\tfragColor = textureLod(iChannel0, distorted_uv, 0.0);\n    \n    if (abs(normalized_uv.x - normalized_uv.y * iResolution.y / iResolution.x) < 0.01 || abs(normalized_uv.x - -normalized_uv.y* iResolution.y / iResolution.x) < 0.01)\n        fragColor = vec4(1.0,0.0,0.0,0.0);\n    \n    if (abs(normalized_uv.x - 2.0 * normalized_uv.y * iResolution.y / iResolution.x) < 0.01 || abs(normalized_uv.x - -2.0 * normalized_uv.y* iResolution.y / iResolution.x) < 0.01)\n        fragColor = vec4(1.0,0.0,0.0,0.0);\n    \n    if (abs(2.0 * normalized_uv.x - normalized_uv.y * iResolution.y / iResolution.x) < 0.01 || abs(2.0 * normalized_uv.x - -normalized_uv.y* iResolution.y / iResolution.x) < 0.01)\n        fragColor = vec4(1.0,0.0,0.0,0.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nbool near(vec2 current, vec2 base, float width)\n{\n    vec2 diff = abs(current - base);\n    return diff.x < width || diff.y < width;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    uv = uv * 0.5 + 0.5;\n    \n    fragColor = vec4(0.0,0.0,0.0,1.0);\n    \n    for (float i = -20.0; i <= 20.0; i++)\n        if (near(uv, vec2(0.1 * i), 0.005))\n            fragColor = vec4(0.8);\n\n}","name":"Buf A","description":"","type":"buffer"}]}