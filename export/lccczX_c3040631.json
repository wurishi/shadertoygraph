{"ver":"0.1","info":{"id":"lccczX","date":"1730947028","viewed":28,"name":"Color Map 4096","username":"Cotterzz","description":"Mapping all the colours to 2D coordinates, 16 levels of each colour for 4096 total colors.\nUseful for testing dithering","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["color","rgb","colormap","colour","dithering","colourmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsBSR3","filepath":"/media/a/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","previewfilepath":"/media/ap/cb49c003b454385aa9975733aff4571c62182ccdda480aaba9a8d250014f00ec.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int reds = 16;\n    int greens = 16;\n    int blues = 4; // this value gets squared\n\n    float red = floor(uv.x * float(reds));\n    float green = floor(uv.y * float(greens));\n    float blue = mod(floor(uv.x * float(reds*blues)), float(blues))+mod(floor(uv.y * float(greens*blues)), float(blues))*float(blues);\n    \n    vec3 col = vec3 (red/float(reds), green/float(greens), blue/float(blues*blues));\n    //col = step( texelFetch(iChannel0,(ivec2(fragCoord)+iFrame*ivec2(17,113))&1023,0).xyz, col ); // uncomment to test dithering\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}