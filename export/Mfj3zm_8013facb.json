{"ver":"0.1","info":{"id":"Mfj3zm","date":"1704015584","viewed":42,"name":"Soothing Rose","username":"pfrun0","description":"My first shader","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rose"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat slope_calc(in vec2 point_1, in vec2 point_2)\n{\n    return (point_2.y-point_1.y)/(point_2.x-point_1.x);\n}\n\nfloat linear_inter(in float a_pos, in float b_pos, in float a_val, in float b_val, in float x)\n{\n   float inter_par =min( max((x-a_pos),0.0)/(b_pos-a_pos),1.0);\n   return inter_par;\n}\n\n\nfloat cubicinter(in float lower_bound, in float higher_bound, in float x)\n{\n    return smoothstep(lower_bound,higher_bound,x);\n}\n\nfloat deg_to_rad(in float deg)\n{\n    return deg*(PI/180.0);\n    \n}\n\nvec2 fragCoord_rotate( in vec2 fragCoord, in vec2 center, in float angle)\n{\n    float rad_angle = deg_to_rad(angle);\n    float vx = (fragCoord.x-center.x) * cos(rad_angle) - (fragCoord.y-center.y) * sin(rad_angle) +center.x;\n    float vy = (fragCoord.x-center.x) * sin(rad_angle) + (fragCoord.y-center.y) * cos(rad_angle) + center.y;\n  \n    return vec2(vx,vy); \n}\n\nfloat flower_radius(in float inner_radius, in float slope_angle, in float i, in float segment_angle, in float petal_length, in float flower_distance)\n{\n    float initial = clamp(i,0.0,1.0);\n    float inter_val1;\n    float inter_val2;\n    if(mod(i,2.0)==0.0)\n    {\n        inter_val1 = (i*segment_angle);\n        inter_val2 = (i+1.0)*segment_angle;\n    }\n    else\n    {\n       inter_val1 = (i+1.0)*segment_angle;\n       inter_val2 = i*segment_angle;\n    }\n\n    flower_distance = slope_angle > i*segment_angle && slope_angle < (i+1.0)*segment_angle\n    ? cubicinter(inter_val1, inter_val2, slope_angle)*petal_length+segment_angle*(inner_radius/100.0) : initial*flower_distance;\n    \n    return flower_distance;\n    \n}\n\nfloat flower_distance(in vec2 rotated_fragCoord, in vec2 center, in float petal_num, in float inner_radius, in float petal_length)\n{\n    float fragCoord_slope = slope_calc(center,rotated_fragCoord);\n    float slope_angle = atan(rotated_fragCoord.y-center.y, rotated_fragCoord.x-center.x)*(180.0/PI);    \n    \n    slope_angle = slope_angle<0.0 ? 180.0+abs(slope_angle) : slope_angle;\n\n\n    float flower_distance;\n    float segment_num = petal_num*2.0;\n    float segment_angle = (360.0/segment_num);\n    \n    float min_dist = 10000.0;\n    for(float i = 0.0 ; i<segment_num ; i++)\n    {\n        flower_distance = flower_radius(inner_radius, slope_angle,i, segment_angle, petal_length, flower_distance);\n         float surface_pos = (flower_distance+inner_radius);\n         float dist_from_surface = distance(rotated_fragCoord,center)-surface_pos;\n         min_dist = min(min_dist, dist_from_surface);\n\n    }\n    \n    return min_dist;\n\n}\n\nvec3 width_inter(in float flower_dist, in float inner_radius)\n{\n    float width_low_b = 0.0*(inner_radius/100.0);\n    \n    float width_high_b = 20.0*(inner_radius/100.0);\n    float f =5.0;\n    vec3 width_inter_col = mix(vec3(0.788/f,0.239/f,0.9882/f),vec3(0.788,0.239,0.9882),linear_inter(width_low_b,width_high_b, 0.0, 1.0,abs(flower_dist)));\n    return width_inter_col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float petal_num = 8.0;\n    float inner_radius = 0.15;\n    float petal_length = 60.0*(inner_radius/100.0);\n\n    \n    \n    vec2 uv= fragCoord/iResolution.y;\n    vec3 bk = mix(vec3(0.9,0.2,0.6),vec3(0.8,0.6,0.8),sqrt(uv.y));\n    \n    vec2 center = (iResolution.xy/2.0)/iResolution.y;\n    \n    vec2 v1= fragCoord_rotate(uv, center, 0.0);\n    vec2 v2= fragCoord_rotate(uv, center, 22.5);\n    \n    float scale = inner_radius/100.0;\n    float flower1_rad = inner_radius-(40.0*scale);\n    float flower2_rad = inner_radius;\n    float flower3_4_rad = inner_radius+(60.0*scale);\n\n    \n    \n    float flower1 = flower_distance(v1,center,petal_num,flower1_rad,petal_length/1.5);\n    \n    float flower2 =  flower_distance(v2,center,petal_num,flower2_rad,petal_length);\n    \n    float flower3 = flower_distance(v1,center,petal_num,flower3_4_rad,petal_length*1.5);\n    \n    float flower4 = flower_distance(v2,center,petal_num,flower3_4_rad,petal_length*1.5);\n    \n    float f =5.0;\n    vec3 pixel_color = vec3(0.0);\n    pixel_color = flower1 <0.0 ? (mix(vec3(0.7 ,0.0, 0.7)/f,vec3(0.7 ,0.0, 0.7),linear_inter(-inner_radius, 0.0, 0.5, 1.0,flower1 ))) : pixel_color;\n    pixel_color = flower1 >0.0 && flower2< 0.0 ? (mix(vec3(0.7 ,0.0, 0.7),vec3(0.7 ,0.0, 0.7)/f,linear_inter(-inner_radius, 0.0, 0.5, 1.0,flower2 ))) : pixel_color;\n    pixel_color = flower2 >0.0 && flower3< 0.0 ? (mix(vec3(0.7 ,0.0, 0.7)/f,vec3(0.7 ,0.0, 0.7),linear_inter(-inner_radius-petal_length, 0.0, 0.5, 1.0,flower3 ))) : pixel_color;\n    pixel_color = flower3 <0.0 && flower4> 0.0 ? (mix(vec3(0.7 ,0.0, 0.7),vec3(0.7 ,0.0, 0.7)/f,linear_inter(-inner_radius, 0.0, 0.5, 1.0,flower3 ))): pixel_color;    \n    pixel_color = flower3 >0.0 && flower4< 0.0 ? (mix(vec3(0.7 ,0.0, 0.7),vec3(0.7 ,0.0, 0.7)/f,linear_inter(-inner_radius, 0.0, 0.5, 1.0,flower4 ))): pixel_color;\n\n    float width_low_b = 12.0*(inner_radius/100.0);\n    float width_high_b = 15.0*(inner_radius/100.0);\n\n    pixel_color = mix(pixel_color,width_inter(flower4, inner_radius),1.0-smoothstep(width_low_b,width_high_b,abs(flower4)));\n    \n    pixel_color = mix(pixel_color,width_inter(flower3, inner_radius),1.0-smoothstep(width_low_b,width_high_b,abs(flower3)));\n    \n    pixel_color = mix(pixel_color,width_inter(flower2, inner_radius),1.0-smoothstep(width_low_b,width_high_b,abs(flower2)));\n   \n    pixel_color = mix(pixel_color,width_inter(flower1, inner_radius),1.0-smoothstep(width_low_b,width_high_b,abs(flower1)));\n    \n\n    pixel_color = mix(bk, pixel_color+.1,smoothstep(0.0, 0.6,pixel_color.x));\n\n\n    pixel_color.rgb = pixel_color.grb;\n    fragColor = vec4(pixel_color,1.0);\n        \n}\n","name":"Image","description":"","type":"image"}]}