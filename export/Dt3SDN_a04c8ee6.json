{"ver":"0.1","info":{"id":"Dt3SDN","date":"1685383798","viewed":115,"name":"Rectangles all the way down","username":"gorillasun","description":"Rectangles all the way down","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.938, 0.328, 0.718);\n    vec3 b = vec3(0.659, 0.438, 0.328);\n    vec3 c = vec3(0.388, 0.388, 0.296);\n    vec3 d = vec3(3.538, 2.478, 0.168);\n    \n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y + 1.0;\n    vec2 uv0 = uv-1.0;\n    \n    \n    uv = fract(uv * 3.0) - .5;\n    \n \n    float d = length(uv) * exp(-length(uv0));\n    vec2 si = vec2(.5,.5);\n    d = sdBox(uv, si);\n    \n    float uvBox0 = sdBox(uv0, vec2(1.,1.));\n    \n    vec3 col = palette(uvBox0 + iTime*2.);\n   \n    d = sin(d * 32. + iTime*2.)/32.;\n    d = .02/smoothstep(0.0, 0.25, abs(d));\n    d = abs(d);\n    \n    d = pow(0.5/d, 1.5);\n    col *= d;\n    \n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}