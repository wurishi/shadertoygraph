{"ver":"0.1","info":{"id":"XcSczy","date":"1722483088","viewed":34,"name":"WhiteNoiser","username":"vschwaberow","description":"A white noise TV effect","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["retro","crt","whitenoise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 curveRemapUV(vec2 uv)\n{\n    uv = uv * 2.0 - 1.0;\n    vec2 offset = abs(uv.yx) / vec2(6.0, 4.0);\n    uv = uv + uv * offset * offset;\n    uv = uv * 0.5 + 0.5;\n    return uv;\n}\n\n\nfloat vignette(vec2 uv)\n{\n    uv = uv * 2.0 - 1.0;\n    return 1.0 - dot(uv, uv) * 0.2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\n    uv = curveRemapUV(uv);\n    \n\n    if (uv.x < 0.0 || uv.x > 1.0 || uv.y < 0.0 || uv.y > 1.0)\n    {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    \n\n    float pixelSize = 4.0;\n    vec2 pixelatedUV = floor(uv * iResolution.xy / pixelSize) * pixelSize / iResolution.xy;\n    \n\n    float noise = fract(sin(dot(pixelatedUV, vec2(12.9898, 78.233))) * 43758.5453);\n    \n\n    noise = fract(noise + iTime * 0.1);\n    \n\n    float staticEffect = step(0.5, noise);\n    \n\n    float scanline = sin(uv.y * iResolution.y * 2.0) * 0.1 + 0.9;\n    \n\n    float finalEffect = staticEffect * scanline;\n    \n\n    float vig = vignette(uv);\n    finalEffect *= vig;\n    \n\n    fragColor = vec4(vec3(finalEffect), 1.0);\n}","name":"Image","description":"","type":"image"}]}