{"ver":"0.1","info":{"id":"4styRs","date":"1519840563","viewed":86,"name":"fractal trip Julia","username":"yxo","description":"just learning","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//This function convert color from hsv to rgb\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    int numSteps = 1024;\n    float scale = 2.0;\n    vec2 translate = vec2(-0.11,-0.15554);\n    vec2 z, c;\n    c = vec2(-0.182,0.664);\n    c.x += abs(pow(0.6*sin(iTime*0.2),6.));\n    \n    scale = 0.0005;\n    scale += abs(pow(sin(iTime*0.2),6.)*3.0);\n    //scale = 2.9;\n    \n    z.x = 1.3333 * (uv.x - 0.5) * scale + translate.x;\n    z.y = (uv.y - 0.5) * scale + translate.y;\n\n    int i;\n    //z = c;\n    \n    for(i=0; i<numSteps; i++) {\n        float x = (z.x * z.x - z.y * z.y) + c.x;\n        float y = (z.x * z.y + z.y * z.x) + c.y;\n\n        if((x * x + y * y) > 4.0) break;\n        z.x = x;\n        z.y = y;\n    }\n    float r = (i == numSteps ? 0.0 : float(i)) / 100.0;\n    r = mix(r, r+1., c.y*c.x);\n    float hue = mix(0.2, 0.5, sqrt(r)*50.);\n    vec3 q = hsv2rgb(vec3(hue,1,1));\n\n    // Output to screen\n    fragColor = vec4(sqrt(q), 1);\n}\n\n","name":"Image","description":"","type":"image"}]}