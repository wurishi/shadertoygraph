{"ver":"0.1","info":{"id":"XfB3Ww","date":"1704261918","viewed":82,"name":"truchet map tunnel","username":"lijiyong","description":"it's hard to aligned random size cube without for list.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["tunnel","random","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define S smoothstep\n#define R min(I.x, I.y)\n#define I iResolution.xy\n#define d( p, l ) S( l / R, 0., abs( p ) )\n#define rot(a) mat2( cos(a), sin(a), -sin(a), cos(a) )\n#define rot2( a ) cos(a + sin(a*.5) * .9) / .9\n#define h( u ) fract( dot( u.yxx * .123, sign( u.yxx ) + 23.456 ) * 123.456 )\n#define n normalize\n\nfloat tex( vec2 u ){\n    float r = h( abs( round( u / -.2 ) - 20. ) );\n    u = mod( u + .1, .2 ) - .1, \n    u *= rot( round( r ) * 1.57 ),\n    u -= sign( u.x + u.y ) * .1;\n    float g = length(u)-.1;\n    \n    g += max(\n        abs( u.x ) - .1,\n        abs( u.y ) - .1\n    ) * 1.5;\n    \n    return d( g, 18. );\n}\n\n\nfloat df( vec3 p ){\n    \n    //vec2 q = p.xy - rot2( p.z );\n    vec2 q = p.xy;\n    \n    q.x += rot2(p.z);\n    \n    return 1. - max(\n        abs( q.x ) - .5,\n        abs( q.y ) - .5\n    );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(.5, -.5);\n  return n(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\nfloat m( vec3 p ){\n    vec3 c;\n\n    vec3 q = p;\n    q.z += rot2( p.y );\n\n    \n    \n    return max( l(p).x, 0. ) * tex( p.yz ) * step( abs(q.y)-1.3, 0. ) +\n        max( -l(p).x, 0. ) * tex( p.yz ) * step( abs(q.y)-1.3, 0. ) +\n        max( l(p).y, 0. ) * tex( p.xz ) +\n        max( -l(p).y, 0. ) * tex( p.xz );\n}\n\nvoid mainImage( out vec4 O, in vec2 V )\n{\n\n    vec2 u = ( V * 2. - I ) / R;\n    \n    vec3 c, p, o = vec3( 0., 0., -1. ), lk, r;\n\n    \n    float t, d, i;\n\n    o.z += iTime * 1.5;\n    \n    o.x -= rot2( o.z );\n    \n    \n    lk = o + vec3(0.0, 0.0, 1.);\n    lk.x -= rot2( lk.z );\n    \n    vec3 fo = n(lk-o);\n    vec3 rt = n(vec3(fo.z, 0., -fo.x )); \n    vec3 up = cross(fo, rt);\n\n    /*\n        [\n            right.x, up.x, -forward.x, p.x,\n            right.y, up.y, -forward.y, p.y,\n            right.z, up.z, -forward.z, p.x,\n        ]\n \n    */\n    \n    r = n(fo + u.x*rt + u.y*up);\n    \n    while( i++ < 64. )\n        p = o + r * t,  \n        d = df( p ),\n        t += d;\n    \n    if( d < 1e-3 )\n        c += m(p);\n\n\n    O = c.rbgg;\n}\n\n/*\n#define S smoothstep\n#define R min(I.x, I.y)\n#define I iResolution.xy\n#define d( p, l ) S( l / R, 0., abs( p ) )\n#define rot(a) mat2( cos(a), sin(a), -sin(a), cos(a) )\n#define rot2( a ) vec2( cos(a), sin(a) )\n#define h( u ) fract( dot( u.yxx * .123, sign( u.yxx ) + 23.456 ) * 123.456 )\n#define n normalize\n\nfloat tex( vec2 u ){\n    float r = h( abs( round( u / -.2 ) - 20. ) );\n    u = mod( u + .1, .2 ) - .1, \n    u *= rot( round( r ) * 1.57 ),\n    u -= sign( u.x + u.y ) * .1;\n    float g = length(u)-.1;\n    \n    return d( g, 8. );\n}\n\n\nfloat df( vec3 p ){\n    \n    vec2 q = p.xy - rot2( p.z );\n    \n    return 1. - length( q );\n}\n\nvec3 l(in vec3 b) {\n  vec2 a = vec2(.5, -.5);\n  return n(a.xyy * df(b + a.xyy * 5e-4) + a.yyx * df(b + a.yyx * 5e-4) +\n                   a.yxy * df(b + a.yxy * 5e-4) + a.xxx * df(b + a.xxx * 5e-4));\n}\n\n\nvoid mainImage( out vec4 O, in vec2 V )\n{\n\n    vec2 u = ( V * 2. - I ) / R;\n    \n    vec3 c, p, o = vec3( 0., 0., -1. ), lk, r;\n\n    \n    float t, d, i;\n\n    o.z += iTime * .5;\n    \n    lk = o + vec3(0.0, 0.0, 1.);\n    o.xy += rot2( o.z );\n    \n    vec3 fo = n(lk-o);\n    vec3 rt = n(vec3(fo.z, 0., -fo.x )); \n    vec3 up = cross(fo, rt);\n\n\n    \n    r = n(fo + u.x*rt + u.y*up);\n    \n    while( i++ < 100. )\n        p = o + r * t,  \n        d = df( p ),\n        t += d;\n    \n    if( d < 1e-3 )\n        \n        c += tex(p.zz) * .2,\n        \n        c += max(\n                l(p).z-.5, 0.\n            ) * tex( p.xy ) + max(\n                -l(p).z, 0.\n            ) * tex( 1.-p.xy );\n\n\n\n    O = c.rbgg;\n}\n*/","name":"Image","description":"","type":"image"}]}