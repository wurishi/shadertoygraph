{"ver":"0.1","info":{"id":"3sGyzR","date":"1602061711","viewed":57,"name":"Gamma Correction","username":"jensweh","description":"Basic gamma correction experiment. Shadertoy obviously expects gamma-corrected color output.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["gamma"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 linear_color;\n\n    if (uv.x < 0.5) {\n        linear_color = vec3(0.5);\n    } else {\n        linear_color = vec3(float((int(fragCoord.x) % 2) == (int(fragCoord.y) % 2)));\n    }\n    \n    // Apply sRGB compression/mapping?\n#if 1\n    const float gamma = 2.2;\n    fragColor = vec4(pow(linear_color, vec3(1.0 / gamma)), 1.0);\n#else\n    fragColor = vec4(linear_color, 1.0);\n#endif\n}","name":"Image","description":"","type":"image"}]}