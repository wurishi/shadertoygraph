{"ver":"0.1","info":{"id":"3l23R3","date":"1590850037","viewed":73,"name":"basket ball by sid","username":"sidchou","description":"basket ball by sid\n\nIG: @sid_100_days","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["basketball"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hexDist(vec2 p)\n{\n\tp = abs(p);\n    float c = dot(p,normalize(vec2 (1.,pow(3.,.5))));\n    c = max (c,p.x);\n    return c;\n}\n\nvec4 hexCo(vec2 uv){\n   \n \tvec2 r = vec2(1,pow(3.,.5));\n    vec2 h = r*.5;\n    \n    uv -= r.yx*iTime*2.;\n \n    vec2 a = mod(uv,r)-h;\n\tvec2 b = mod(uv-h,r)-h;\n    \n\tvec2 gv;\n    if(length(a)<length(b))\n    \tgv = a;\n    else\n        gv = b;\n    \n    // distance\n    float cent = hexDist(gv);\n    float edge = .5-hexDist(gv);\n    float th = atan(gv.x,gv.y);\n\n    //return vec4(gv.x,gv.y,uv.x-gv.x,uv.y-gv.y);\n    return vec4(edge,th,uv.x-gv.x,uv.y-gv.y);\n\n}\n\n\nfloat Bend(vec2 uv, float w,float x,float curve){\n    uv.y+=x*.5;\n    uv.x+=uv.y*uv.y*curve;\n    uv.x+=x;\n    //float w = .01;\n    float c=smoothstep(-w,.01-w,uv.x)*smoothstep(w+.01,w,uv.x);\n      \n    return c;\n}\nfloat spinTime(float t,float o){\nreturn t = (step(0.,sin(t+o))*2.-1.)*sin(t+.5*3.14+o); //1 => -1\n    \n}\n\nvec4 Ball(vec2 uv,vec2 p,float r){\n    \n    vec4 c = vec4(1.,.4,.1,1.);\n    \n    vec2 _p = p-uv;\n    float d = length(_p);\n    float cir= 1.- smoothstep(r-.1,r-.05,d);\n    //c = mix(vec4(0.),c,cir);\n    /*\n    vec4 c2 = vec4(1.,.7,.3,1.);\n    float highlight = smoothstep(.4, .1, length(_p+vec2(-.2,.2)));\n    c = mix(c,c2,highlight);\n    c2 = vec4(.6,.1,.01,1.);\n\t float shadow = smoothstep(.3,.7,  length(_p+vec2(-.2,.2)));\n    c = mix(c,c2,shadow);\n\n    c = mix(vec4(0.),c,cir);\n\n    \n\tfloat w = .01;\n    float t = spinTime(iTime*.4,0.)*(r+w);\n    \n    float b = Bend((_p),w,t,-t*.2);\n    t = spinTime((iTime)*.4,-.4)*(r+w);\n    b += Bend((_p),w,t,t+1.);\n\tt = spinTime((iTime)*.4,.4)*(r+w);\n    b += Bend((_p),w,t,t-1.);\n\tt = spinTime((iTime)*.4,-1.57)*(r+w);\n    b += Bend((_p),w,t,t*.2);\n    \n    t = sin(iTime*.4+2.)*.2;\n    vec2 yp = (vec2(_p).yx-vec2((_p).x*.3,0.));\n    b += Bend(yp,w,0.,-.15);\n    \n    b = min(b,1.);\n    c = mix(c,vec4(0.3,.01,.002,1.),b*cir);\n    */\n    //_p.x+=iTime; //cool shit\n    \n    vec4 tex=hexCo((_p+vec2((_p).y*.3,0.))*100.*cos(1.-d));\n    tex+=.3;\n    c*=tex.x;\n    \n    \n     vec4 c2 = vec4(1.,.7,.3,1.);\n     float highlight = smoothstep(.5, .1, length(_p+vec2(-.25,.25)))*.7;\n    c = mix(c,c2,highlight);\n    c2 = vec4(.4,.1,.01,1.);\n\t  float shadow = smoothstep(.4,.7,  length(_p+vec2(-.2,.2)))*.8;\n    c = mix(c,c2,shadow);\n\n    \tfloat w = .01;\n    float t = spinTime(iTime*.4,0.)*(r+w);\n    \n    float b = Bend((_p),w,t,-t*.2);\n    t = spinTime((iTime)*.4,-.4)*(r+w);\n    b += Bend((_p),w,t,t+1.);\n\tt = spinTime((iTime)*.4,.4)*(r+w);\n    b += Bend((_p),w,t,t-1.);\n\tt = spinTime((iTime)*.4,-1.57)*(r+w);\n    b += Bend((_p),w,t,t*.2);\n    \n    t = sin(iTime*.4+2.)*.2;\n    vec2 yp = (vec2(_p).yx-vec2((_p).x*.3,0.));\n    b += Bend(yp,w,0.,-.15);\n    \n    b = min(b,1.);\n    c = mix(c,vec4(0.2,.01,.002,1.),b);\n    \n    \n    c = mix(vec4(0.),c,cir);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv-=.5;\n    uv.x /= iResolution.y/iResolution.x;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n   \n    vec4 c = Ball(uv,vec2(0.,0.),.5);\n    vec4 col = c;\n\n\n    // Output to screen\n    fragColor = vec4(col);\n}","name":"Image","description":"","type":"image"}]}