{"ver":"0.1","info":{"id":"7lVBDw","date":"1664708552","viewed":82,"name":"snake game","username":"arkanon","description":"snake using buffers to store data","likes":3,"published":1,"flags":48,"usePreview":0,"tags":["game","snake","multipass"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 col = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    //vec4 col = texelFetch(iChannel1, ivec2(0, 0), 0);\n\n    // Output to screen\n    if (col.w >= 0.0) {\n        fragColor = vec4(col.rgb,1.0);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// pass 1: data\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if (iFrame - int(texelFetch(iChannel0, ivec2(2, 0), 0).r) <= 5) // setup\n    {\n        if (ivec2(fragCoord) == ivec2(0,0))\n        {\n            fragColor = vec4(5.0, 5.0, 0.0, 0.0);\n            return;\n        }\n        if (ivec2(fragCoord) == ivec2(1,0))\n        {\n            fragColor = vec4(4.0, 0.0, 0.0, 0.0);\n            fragColor.zw = rand12(iDate.w) * RES;\n            return;\n        }\n    }\n    else {\n        vec4 old = texelFetch(iChannel0, ivec2(fragCoord), 0);\n        //fragColor = old;\n        if (ivec2(fragCoord) == ivec2(0,0))\n        {\n            fragColor = vec4(old.xy + old.zw * iTimeDelta * SPEED, old.zw);\n            if (old.zw == vec2(-2,-2))\n            {\n                fragColor = old;\n                return;\n            }\n            if (texelFetch(iChannel1, ivec2(65, 0), 0).r > 0.5) {\n                fragColor.zw = vec2(-1, 0);\n            }\n            if (texelFetch(iChannel1, ivec2(87, 0), 0).r > 0.5) {\n                fragColor.zw = vec2(0, 1);\n            }\n            if (texelFetch(iChannel1, ivec2(68, 0), 0).r > 0.5) {\n                fragColor.zw = vec2(1, 0);\n            }\n            if (texelFetch(iChannel1, ivec2(83, 0), 0).r > 0.5) {\n                fragColor.zw = vec2(0, -1);\n            }\n            if (ivec2(old.zw) == ivec2(0, 0)) return;\n            vec4 collide = texelFetch(iChannel2, ivec2((fragColor.xy + fragColor.zw) * 20.0), 0);\n            if (collide.a >= 1.0) {\n                fragColor.zw = vec2(-2, -2);\n                return;\n            }\n        }\n        else if (ivec2(fragCoord) == ivec2(1, 0)) {\n            vec4 snekdata = texelFetch(iChannel0, ivec2(0, 0), 0);\n            fragColor = old;\n            if (ivec2(old.zw) == ivec2(snekdata.xy)) {\n                fragColor.x++;\n                fragColor.zw = rand12(iDate.w) * RES;\n                return;\n            }\n            return;\n        }\n        else if (ivec2(fragCoord) == ivec2(2, 0)) {\n            fragColor = old;\n            if (texelFetch(iChannel1, ivec2(13, 0), 0).r > 0.5) { // enter: reset\n                fragColor.r = float(iFrame);\n            }\n        }\n        else {\n            fragColor = old;\n        }\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// snake field\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 old = texelFetch(iChannel1, ivec2(fragCoord), 0);\n    vec4 snakedat1 = texelFetch(iChannel0, ivec2(0, 0), 0);\n    vec4 snakedat2 = texelFetch(iChannel0, ivec2(1, 0), 0);\n    if (iFrame <= 5) {\n        fragColor = vec4(1.0, 1.0, 1.0, 0.0);\n        return;\n    }\n    if (ivec2(fragCoord * 0.05) == ivec2(snakedat2.zw)) {\n        fragColor = vec4(2.0, 0.2, 0.1, 0.01);\n        return;\n    }\n    if (ivec2(fragCoord * 0.05) == ivec2(snakedat1.xy)) {\n        fragColor = vec4(1.0, 0.7, 0.6, snakedat2.r);\n        return;\n    }\n    fragColor = vec4(0.0, 0.5, 1.0, old.w - iTimeDelta * SPEED);\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SPEED 10.0\n#define RES (iResolution.xy*0.05-1.0)\n\n//source: https://www.shadertoy.com/view/3djyWW + adaptation\n#define FK(k) floatBitsToInt(cos(k))^floatBitsToInt(k)\nfloat hash(float a, float b) {\n    int x = FK(a); int y = FK(b);\n    return float((x*x+y)*(y*y-x)+x)/2.14e9;\n}\n\nvec2 rand12(float seed) {\n    float h1 = hash(seed, seed);\n    float h2 = hash(h1, seed);\n    return abs(vec2(h1,h2));\n}\n","name":"Common","description":"","type":"common"}]}