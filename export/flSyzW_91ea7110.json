{"ver":"0.1","info":{"id":"flSyzW","date":"1649224145","viewed":57,"name":"Shader 学习 007 - 分段圆环","username":"Liuary","description":"用反正切函数配合正弦函数来分割圆环","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["beginner"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 得到 UV\n    vec2 uv = fragCoord/iResolution.xy;\n    // 偏移 x 使之处于屏幕中央且宽高相等，偏移值仅窗口 800 * 450 时有效\n    uv.x = uv.x * iResolution.x / iResolution.y - 0.438f;\n    // 用来分段的偏移值，仅当窗口大小为 800 * 450 时有效\n    float webOffset = 5.245f;\n\n    // 外圆半径\n    float radiusOutside = 0.5f;\n    \n    // 内圆半径\n    float radiusInside = 0.4f;\n\n    // 笔刷硬度\n    float density = 100.f;\n\n    // 外圆\n    float circleOutside = 1.f - (distance(uv, vec2(0.5, 0.5)) + (1.f - clamp(radiusOutside, 0.f, 1.f)));\n    // 内圆\n    float circleInside = 1.f - (distance(uv, vec2(0.5, 0.5)) + (1.f - clamp(radiusInside, 0.f, 1.f)));\n\n    circleOutside = clamp(circleOutside * density, 0.f, 1.f);\n    circleInside = clamp(circleInside * density, 0.f, 1.f);\n    \n    // 圆 = 外圆 - 内圆\n    float circle = circleOutside - circleInside;\n    \n    // UV偏移\n    vec2 uvOffset = vec2(uv.x - 0.5, uv.y - 0.5);\n    \n    // 反正切，取得坐标点相对原点的角度，返回[-PI, PI]\n    float gradientLine = atan(uvOffset.x, uvOffset.y);\n    // 得到毫弧度，取小数部分，把负数部分的小数也变成正的了\n    gradientLine = fract(gradientLine / 6.283f), 0.f, 1.f;\n\n    // 分段\n    float pieces = floor(32.f);\n    gradientLine = sin(gradientLine * pieces * webOffset);\n\n\n    fragColor = vec4(vec3(gradientLine * circle), 1.f);\n}","name":"Image","description":"","type":"image"}]}