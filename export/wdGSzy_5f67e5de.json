{"ver":"0.1","info":{"id":"wdGSzy","date":"1587072057","viewed":188,"name":"Dot shader","username":"Trollaattori","description":"Shader that pixelates input and then makes the pixels dot shaped.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["pixel","effect","pixelate","dot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 aspect_ratio = vec2(16./9.,1);\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float accuracy = iTime;\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv *= accuracy;\n    uv *= aspect_ratio;\n    //uv += 0.5;\n    vec2 fraction = fract(uv);\n    uv = floor(uv);\n    uv /= aspect_ratio;\n    uv /= accuracy;\n    \n    vec3 col = texture(iChannel0,uv).rgb;\n\tfloat distance = length(vec2(0.5-fraction.x,0.5-fraction.y));\n    // Output to screen\n    col = col * (1.0-smoothstep(0.45,0.50,distance));\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}