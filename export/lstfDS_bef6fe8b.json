{"ver":"0.1","info":{"id":"lstfDS","date":"1526832505","viewed":739,"name":"Rainbow seaweed","username":"pudding","description":"I was twiddling around with colours and shaping and sidetracked onto this","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["rainbow","peaceful","uvstretch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float noise11(in float x) {\n\treturn fract(sin(x)*35746.1764); \n}\n    \nvec3 rgb(in float hue)\n{\n    // Hue [0..1] to RGB [0..1]\n    // See http://www.chilliant.com/rgb2hsv.html\n    vec3 rgb = abs(hue * 6. - vec3(3, 2, 4)) * vec3(1, -1, -1) + vec3(-1, 2, 2);\n    return clamp(rgb, 0., 1.);\n}\n\nvec3 point(in vec2 uv) {\n    float id = floor(uv.x);\n    uv = fract(uv) + vec2(0.5);\n    vec2 pos = uv + vec2(sin(uv.y * 3. + noise11(id) * 2004.) * 0.3 - 1., cos(iTime * 2.));\n    return rgb(id / 16.5) / length((pos) * vec2(1., 0.05)) * 0.1; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \tvec2 uv = (fragCoord.xy / iResolution.xy);\n    uv *= vec2(iResolution.x / iResolution.y * 9., 0.5);\n    fragColor = vec4(point(vec2(uv.x, uv.y * cos(iTime) + 0.5)), 1.0);\n}","name":"Image","description":"","type":"image"}]}