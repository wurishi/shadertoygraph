{"ver":"0.1","info":{"id":"ct2SzW","date":"1675760161","viewed":116,"name":"Arbitrary polygon SDF","username":"irevdev","description":"I think it's a little broken as the numbers are not negative inside the shape but I'm okay with this for now.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d","sdf","polygon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_VERTICES 32\nvec2 vertices[MAX_VERTICES];\n\nfloat sdPolygon(vec2 p, vec2 vertices[MAX_VERTICES], int numVertices) {\n  vec2 closest = vec2(float(1e37));\n  for(int i = 0; i < numVertices; ++i) {\n    vec2 v0 = vertices[i];\n    vec2 v1 = vertices[(i + 1) % numVertices];\n    vec2 e = v1 - v0;\n    vec2 w = p - v0;\n    float c1 = dot(w,e);\n    float c2 = dot(e,e);\n    float b = c1 / c2;\n    b = max(0.0, min(b, 1.0));\n    vec2 point = v0 + b * e;\n    vec2 d = p - point;\n    float dl = length(d);\n    \n    float sl = sign(e.x * w.y - e.y * w.x);\n    closest = min(closest, vec2(dl, sl));\n  }\n  return closest.x * closest.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n    \n    int numVertices = 6;\n    vertices[0] = vec2(-0.5, 0.0);\n    vertices[1] = vec2(-0.5, 0.4);\n    vertices[2] = vec2(0.0, 0.0);\n    vertices[3] = vec2(0.2, 0.4);\n    vertices[4] = vec2(0.5, 0.0);\n    vertices[5] = vec2(0.1, -0.4); \n    \n    float d = sdPolygon(p, vertices, numVertices);\n    \n    vec3 col = (d>0.0) ? vec3(0.3,0.6,0.3) : vec3(0.7,0.3,.3);\n    col *= 1.0 - exp(-7.0*abs(d));\n    col *= 0.8 + 0.2*cos(128.0*abs(d));\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,0.015,abs(d)) );\n\n\tfragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}