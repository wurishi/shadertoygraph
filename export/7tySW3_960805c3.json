{"ver":"0.1","info":{"id":"7tySW3","date":"1641417020","viewed":148,"name":"Beer by cgrabbbit","username":"cgrabbit","description":"beer","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["beer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define BEER_XSPEED 3.\n#define BEER_YSPEED 0.5\n\nfloat rand(float co, float a, float b) \n{ return fract(sin(co*(a)) * b); }\nfloat rand(vec2 co, float a, float b, float c)\n{ return fract(sin(dot(co.xy ,vec2(a,b))) * c); }\nfloat rand(vec3 co, float a, float b, float c)\n{ return rand(co.xy+rand(co.z, a, b), a, b, c); }\n\nstruct Bubble\n{\n    vec2 pos;\n    float size;\n    float speed;\n    float wave_int;\n    float wave_offset;\n};\n\n    float beerthickness = 0.25;\n\nfloat beerHeight(vec2 uv)\n{\n    float beermin = 0.5;\n    float beermax = 0.6;\n    float beerheight = sin(iTime * BEER_YSPEED) * 0.5 + 0.5; // value 0-1\n    beerheight *= beermax - beermin;\n    beerheight += beermin;\n    beerheight += sin(uv.x * 10. + iTime * BEER_XSPEED) * 0.02;\n    \n    return beerheight;\n}\n\nfloat beerMask(vec2 uv)\n{\n    float beerheight =  beerHeight(uv);\n    float beermask = smoothstep(beerheight, beerheight + 0.01 , uv.y);\n    beermask = 1. - beermask;\n    \n    return beermask;\n}\n\nfloat foamMask(vec2 uv, float beermask)\n{\n    float beerheight =  beerHeight(uv);\n    beerthickness += sin(30. * uv.x) * 0.01;\n    float beerFoamMask = smoothstep(beerheight + beerthickness, beerheight + beerthickness + 0.02 , uv.y);\n    beerFoamMask = 1. - beerFoamMask;\n    beerFoamMask -= beermask;\n    \n    return beerFoamMask;\n}\n\n\nfloat bubbleMask(vec2 uv, Bubble b)\n{\n    vec2 pos = b.pos;\n    pos.x += sin(iTime * 2. + b.wave_offset) * b.wave_int;\n    pos.y += b.speed * iTime;\n    pos.y = mod(abs(pos.y), 2.0 + b.size) - 1.;\n    float d = clamp(1. - length(uv - pos) / b.size, 0. , 1.);\n    \n    float bubbleMask = pow(d, 0.33) ;\n    \n    return bubbleMask;\n}\n\nBubble getBubble(vec2 id)\n{\n    Bubble b;\n    float rnd1 = rand(id, 12.3213, 53.13214, 531431.13413);\n    float rnd2 = rand(id, 764.312, 123.321313, 4143.31231);\n    float rnd3 = rand(id, 53.1341, 631.1312, 5136.513);\n    float rnd4 = rand(id, 15.1234, 51.3123, 7422.3123);\n    float rnd5 = rand(id, 512.321, 123.312, 875875.142);\n    float rnd6 = rand(id, 13.312, 87.3213, 16132.1234);\n    float rnd7 = rand(id, 313.123, 977.123, 61232.1563);\n    b.pos = (vec2(rnd1, rnd2) - 0.5) * 4.;\n    b.size = rnd3 * 0.02 + 0.01;\n    b.speed = rnd4 * 0.9 + 0.1;\n    b.wave_int = rnd5 * 0.1;\n    b.wave_offset = rnd6;\n    \n    return b;\n}\n\nfloat bubbleLayer (vec2 uv)\n{\n    uv = (uv - 0.5) * 2.;\n    uv.x *= iResolution.x / iResolution.y;\n    float numBubbles = 200.;\n    float bubbleLayerMask = 0.;\n    for (float i = 0.0; i<numBubbles; i++){\n        Bubble b = getBubble(vec2(i, 0));\n        bubbleLayerMask = max(bubbleMask(uv, b), bubbleLayerMask);\n    }\n    \n    return clamp(bubbleLayerMask, 0.0, 1.0);\n}\n\nvec3 beerColor (vec2 uv)\n{\n    vec3 col1 = vec3(252, 186, 3);\n    vec3 col2 = vec3(252, 186, 3) / 2.;\n    \n    return mix(col1, col2, uv.y);\n}\n\nvec3 bgColor (vec2 uv)\n{\n    float noise = texture(iChannel0, uv).b;\n    float d = length(uv - vec2(0.5));\n    vec3 col1 = vec3(107, 95, 77) / 255.;\n    vec3 col2 = vec3(145, 116, 71) / 255.;\n    \n    \n    return mix(col2, col1, d);\n}\n\nvec3 foamColor (vec2 uv)\n{\n    float beerHeight = beerHeight(uv);\n    //uv.y = beerHeight + uv.y * beerthickness;\n    vec3 col1 = vec3(.8);\n    vec3 col2 = vec3(1.);\n    \n    float asdad = smoothstep(beerHeight, beerHeight + 0.15, uv.y);\n   \n    return mix(col1, col2, asdad);\n    //return vec3(uv, 0.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float beerMask = beerMask(uv);\n    float foamMask = foamMask(uv,beerMask);\n    float bgMask = 1. - 0.9 * beerMask - foamMask;\n    float bubbleMask = bubbleLayer(uv) * beerMask;\n    \n    beerMask -= bubbleMask;\n    \n    vec3 bgColor = bgMask * bgColor(uv);\n    vec3 beerColor = beerColor(uv) / 255. * beerMask;\n    vec3 foamColor = foamColor(uv) * foamMask;\n    vec3 bubbleColor = vec3(255, 228, 153) / 255. * bubbleMask;\n      \n    vec3 col = bgColor + beerColor + foamColor + bubbleColor;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}