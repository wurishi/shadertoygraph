{"ver":"0.1","info":{"id":"DlcSzj","date":"1685556833","viewed":74,"name":"Newton fractal sinx","username":"fialo4ka","description":"Newton fractal, sin(x)","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float tep(){\n\n    return 1. + abs(sin(iTime/4.));\n}\n\nfloat IterateMandelbrot( in vec2 c )\n{\n    const float B = 5.5;\n\n    float n = 0.0;\n    vec2 z  = vec2(0.0);\n    for( int i=0; i<200; i++ )\n    {\n        //z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c/0.2; // z = zÂ² + c\n        z = tep() * sin(z)/cos(z) + c;\n        if(dot(z,z)>(B*B) ) break;\n        n += 1.0;\n    }\n\n    float sn = n - log(log(length(z))/log(B))/log(2.0); // smooth iteration count\n    //float sn = n - log2(log2(dot(z,z))) + 4.0;  \n    return sn;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy *2. - iResolution.xy) / iResolution.xy;\n    fragColor = vec4(IterateMandelbrot(uv)*0.1);\n}","name":"Image","description":"","type":"image"}]}