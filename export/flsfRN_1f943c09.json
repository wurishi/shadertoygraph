{"ver":"0.1","info":{"id":"flsfRN","date":"1650585741","viewed":71,"name":"Go to sleep","username":"mikelsv","description":"Test sound for sleep","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["sleep"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 mainSound( int samp, float time){\n    float hz = 2., cycle = 0.;\n    \n    time = mod(time, 30.); \n    \n    while(true){\n        cycle = 1. / hz;\n        \n        if(time > cycle){            \n            time -= cycle;\n            hz += .08; \n        } else\n            break;\n    }\n    \n    time *= 1.0 * hz * .9;\n\n    // A 440 Hz wave that attenuates quickly overt time\n    return vec2( sin(6.2831 * 120.0 * time) * exp(-4.0 * time) );\n}","name":"Sound","description":"","type":"sound"}]}