{"ver":"0.1","info":{"id":"lfGSDy","date":"1715698244","viewed":37,"name":"microcodec","username":"TheQWERTYCoder","description":"a very simple yet efficient video codec that packs to 3 bits per pixel, designed for massively parallel implementation, abuses temporal dithering","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["codec"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor=vec4(texelFetch(iChannel0,ivec2(fragCoord)/2,1).rgb,1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// encoder\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv = round(SIZE*uv)/SIZE;\n    if (iFrame%SKIP>0) {\n        fragColor = texture(iChannel2,uv);\n        return;\n    } else {\n        vec3 last = texture(iChannel0,uv).xyz;\n        vec3 goal = texture(iChannel1,uv).xyz;\n        vec3 attempt = vec3(0);\n        float ad = 1000.;\n        vec3 ao = vec3(0);\n        for (float r = 0.; r < 1.; r+=0.5)\n        for (float g = 0.; g < 1.; g+=0.5)\n        for (float b = 0.; b < 1.; b+=0.5) {\n            vec3 o = vec3(r,g,b)/0.5;\n            vec3 try = mix(last,o,0.25+0.0*distance(last,o));\n            vec3 try2 = mix(last,try,(sqrt(distance(try,last))));\n            float d = distance(try2,goal);\n            if (d<ad) {\n                ad=d;\n                attempt=try;\n                ao=o;\n            }\n        }\n        //fragColor=vec4(mix(last,attempt,sqrt(distance(attempt,last))),1.);\n        fragColor=vec4(ao,1.);\n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// decoder\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = round(SIZE*uv)/SIZE;\n    vec3 last = textureLod(iChannel0,uv,1.).xyz;\n    if (iFrame%SKIP>0) {\n        fragColor = vec4(last,1);\n        return;\n    } else {\n        vec3 o = texture(iChannel1,uv).xyz;\n        vec3 attempt = mix(last,o,0.25+0.0*distance(last,o));\n        fragColor = vec4(mix(last,attempt,sqrt((distance(attempt,last)))),1);\n    }\n}","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define SIZE vec2(320,240)\n#define SKIP 1\nfloat sq(float x) {return x*x;}","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// delay decoder\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texture(iChannel0,fragCoord/iResolution.xy);\n}","name":"Buffer C","description":"","type":"buffer"},{"inputs":[{"id":"4sX3Rn","filepath":"/media/a/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","previewfilepath":"/media/ap/c3a071ecf273428bc72fc72b2dd972671de8da420a2d4f917b75d20e1c24b34c.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = round(SIZE*uv)/SIZE;\n    fragColor = texture(iChannel0,uv);\n}","name":"Buffer D","description":"","type":"buffer"}]}