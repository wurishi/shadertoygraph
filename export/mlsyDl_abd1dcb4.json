{"ver":"0.1","info":{"id":"mlsyDl","date":"1691358585","viewed":82,"name":"b√©zier curves :-)","username":"chr_is","description":"simple implementation of bezier curves","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bezier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Comment out to remove white connecting lines\n#define CONNECT 1\n\n#define RED    vec3(1.0,0.1,0.2)\n#define BLUE   vec3(0.1,0.3,1.0)\n#define GREEN  vec3(0.2,1.0,0.3)\n#define YELLOW vec3(1.0,0.9,0.2)\n\nfloat drawDot(in vec2 p, in vec2 a, in float r) {\n    return 1.-smoothstep(r-.005,r+.005, length(p-a));\n}\n\nvec2 bezier(in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p3, in float t) {\n    vec2 a = mix(p0, p1, t);\n    vec2 b = mix(p1, p2, t);\n    vec2 c = mix(p2, p3, t);\n    vec2 d = mix(a, b, t);\n    vec2 e = mix(b, c, t);\n    return mix(d, e, t);\n}\n\nvec2 bezierMat(in vec2 p0, in vec2 p1, in vec2 p2, in vec2 p3, in float t) {\n    vec4 p = mat4(\n         1,  0,  0, 0,\n        -3,  3,  0, 0,\n         3, -6,  3, 0,\n        -1,  3, -3, 1\n    ) * vec4(1, t, t*t, t*t*t);\n    \n    return mat4x2(p0, p1, p2, p3) * p;\n}\n\nfloat dLine(in vec2 p, in vec2 a, in vec2 b) {\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp(dot(pa, ba)/dot(ba, ba), 0.0, 1.0);\n    return length(pa-h*ba);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0);\n    const float dotSize = 0.03;\n    \n    vec2 m = (2.*iMouse.xy-iResolution.xy)/iResolution.y;\n    \n    // Play around with these positions to get different curves\n    vec2 p0 = vec2(-0.9, -0.2);\n    vec2 p1 = vec2(-0.4,  0.2);\n    vec2 p2 = vec2( 0.4,  0.2);\n    vec2 p3 = vec2( 0.9, -0.2);\n    p1 = m;\n    \n#ifdef CONNECT\n    float w1 = 0.002;\n    col += vec3(.5)*(1.-smoothstep(w1-.005,w1+.005, dLine(uv, p0, p1)));\n    col += vec3(.5)*(1.-smoothstep(w1-.005,w1+.005, dLine(uv, p1, p2)));\n    col += vec3(.5)*(1.-smoothstep(w1-.005,w1+.005, dLine(uv, p2, p3)));\n#endif\n    \n    col += drawDot(uv, p0, dotSize)*RED;\n    col += drawDot(uv, p1, dotSize)*BLUE;\n    col += drawDot(uv, p2, dotSize)*GREEN;\n    col += drawDot(uv, p3, dotSize)*YELLOW;\n    \n    // curve width\n    float w = 0.0125;\n    \n    for (float t = 0.0; t < 1.0; t += 0.005) {\n        vec2 p_t = bezierMat(p0, p1, p2, p3, t);\n        float v = 1.-smoothstep(w-.005,w+.005, length(uv-p_t));\n        vec3 lineCol = vec3(0.4);\n\n        lineCol = mix(lineCol, RED,    1.-sqrt(length(p_t-p0)));\n        lineCol = mix(lineCol, BLUE,   1.-sqrt(length(p_t-p1)));\n        lineCol = mix(lineCol, GREEN,  1.-sqrt(length(p_t-p2)));\n        lineCol = mix(lineCol, YELLOW, 1.-sqrt(length(p_t-p3)));\n        col += v*(lineCol-0.2);\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}