{"ver":"0.1","info":{"id":"lfSXzm","date":"1706148832","viewed":127,"name":"Bridge of the Woman","username":"Kali","description":"Reproduction of a photo I took at the Bridge of the Woman in Buenos Aires, Argentina. Made for Genuary 2024 day 25.\nOriginal photo: https://lia.rebelion.digital/genuary/25/puentemujer.jpeg","likes":9,"published":1,"flags":32,"usePreview":0,"tags":["raymarching","dof","photography","reproduction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = texture(iChannel0,uv)*step(.2,uv.x)*step(uv.x,.8);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"precision highp float;\n\n#define PI 3.1416\n#define vTexCoord (gl_FragCoord.xy/iResolution.xy)\n#define time iTime\n#define resolution iResolution.xy\n\n\nfloat det=.001;\n\n\nfloat hash(vec2 p)\n{\n    p*=1000.;\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise( in vec2 p )\n{\n    vec2 i = floor( p );\n    vec2 f = fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( hash( i + vec2(0.0,0.0) ), \n                     hash( i + vec2(1.0,0.0) ), u.x),\n                mix( hash( i + vec2(0.0,1.0) ), \n                     hash( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nfloat rnd(float p)\n{\n    p*=1234.;\n    p = fract(p * .1031);\n    p *= p + 33.33;\n    return fract(2.*p*p);\n}\n\nmat2 rot(float a)\n{\n    float s=sin(a),c=cos(a);\n    return mat2(c,s,-s,c);\n}\n\nmat3 lookat(vec3 dir, vec3 up) {\n\tdir=normalize(dir);vec3 rt=normalize(cross(dir,normalize(up)));\n    return mat3(rt,cross(rt,dir),dir);\n}\n\nvec2 rand2(vec2 co){\n\treturn\n\tvec2(fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453),\n\t\tfract(cos(dot(co.xy ,vec2(4.898,7.23))) * 23421.631));\n}\n\nvec2 uniformDisc(vec2 co) {\n\tvec2 r = rand2(co);\n\treturn sqrt(r.y)*vec2(cos(r.x*6.28),sin(r.x*6.28));\n}\n\n\n\nfloat lin;\nvec3 pos;\nfloat ispas=0.;\n\nfloat de(vec3 p) {\n    p.yz*=rot(-.2);\n    p=p+noise(p.xz*30.)*.003;\n    pos=p;\n    float cab=length(p.xy)-.4;\n    lin=smoothstep(.3,.5,abs(fract(p.z*4.-p.x*8.)-.5));\n    cab+=lin*.05;\n    cab=max(cab,p.z-70.);\n    p.xy*=rot(.6);\n    p.yz*=rot(.4);\n    //p.x/=1.+p.y*.01;\n    p.z+=100.;\n    //p.z+=p.x*p.x*.1;\n    p.x-=2.5;\n    float pas=length(max(vec3(0.),abs(p)-vec3(4.+p.y*.025,100.,1.)))-0.5+noise(pos.xy*.5+12344.)*.003*max(0.,p.y);\n    float d=min(cab,pas);\n    if (d==pas) ispas=1.;\n    return d*.5;\n}\n\nvec3 normal(vec3 p)\n{\n    vec2 e=vec2(0.,det);\n    return normalize(vec3(de(p+e.yxx),de(p+e.xyx),de(p+e.xxy))-de(p));\n}\n\nvec3 march(vec3 from, vec3 dir) \n{\n    float td=0.,d=0.,maxdist=200.,g=0.;\n    vec3 p=from,col=vec3(.0);\n    float h=hash(dir.xy+mod(time,10.))-.5;\n    for (int i=0; i<500; i++)\n    {\n        p+=dir*d*(1.+h*.2);\n        det*=1.02;\n        d=de(p);\n        if (d<det || td>maxdist) break;\n        td+=d;\n        //g+=.01/(.1+d*.5);\n    }\n    vec3 ldir=normalize(vec3(2.,-1.5,1.));\n    vec3 skycolor=vec3(0.2,.4,.7)+max(-.0,-dir.x+dir.y)*.5;\n    if (d<det) \n    {\n        float ispasave=ispas;\n        vec3 n=normal(p);\n        //if (ispas>.5) n.z*=-1.;\n        col=vec3(.75,.76,.73)*1.2*max(skycolor*.3,dot(ldir,n))-lin*.3;\n        vec3 ref=reflect(ldir,n);\n        col+=pow(max(0.,dot(ldir,ref)),10.)*.3*skycolor;\n        col*=1.+ispasave*.5*vec3(1.5,1.2,.5);\n        col*=1.+p.y*.01*ispasave;\n    }\n    else\n    {\n        vec2 p=vTexCoord-.5;\n        p*=rot(.3);\n        p.x*=.7;\n        p.y*=-1.5;\n        p.x+=sin(p.y*.5);\n        p.xy*=rot(-p.x*1.5);\n        vec3 cc=vec3(0.);;\n        //cc+=(noise(p*2.))*.5;\n        cc+=(noise(p*5.))*.3;\n        cc+=(noise(p*10.))*.25;\n        cc+=(noise(p*20.))*.15;\n        cc+=(noise(p*30.))*.1;\n        cc+=(noise(p*50.))*.05;\n        cc-=smoothstep(.0,.8,noise(p*5.+123.)*.3);\n        cc*=smoothstep(.5,-1.0,p.x);\n        col=mix(skycolor,vec3(1.1,1.,.9),cc*2.);\n        col+=exp(-3.*length(vec2(vTexCoord.x,1.-vTexCoord.y)));\n    }\n    col*=normalize(.5+skycolor);\n    return col-g+hash(dir.xy+time)*.3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float FOV=1.;\n    vec2 uv = vTexCoord - .5;\n    uv*=-1.;\n    uv.x*=resolution.x/resolution.y;\n    vec3 from=vec3(0.,0.,10.);\n    vec3 target=vec3(0.,0., 0);\n    vec3 camdir=normalize(target-from);\n    vec3 up=vec3(0.,1.,0.);\n    vec3 right=vec3(1.,0.,0.);\n    mat3 look=lookat(camdir,vec3(0.,1.,0.));\n    vec3 dir=look*vec3(0.,0.,FOV);\n    up=look*up;\n    right=look*right;\n    float aper=.04;\n    float focal_plane=2.3;\n    float focalplane = distance(target,from) / FOV * focal_plane / 5.;\n    vec2 r = aper*uniformDisc(uv+time);\n\tvec2 disc = uniformDisc(uv+time); \n    vec2 pixscale=1./resolution;\n    vec2 jittered=uv+pixscale*disc*.5;\n    vec3 offset= r.x*right+r.y*up;\n    vec3 rayDir=(dir+jittered.x*right+jittered.y*up)*focalplane-offset;\n\trayDir = normalize(rayDir);\n    vec3 col=march(from+offset, rayDir);\n    col=pow(col,vec3(1.3));\n    col*=vec3(1.1,1.,.9);\n    vec3 fback=texture(iChannel0,vTexCoord).rgb;\n    col=mix(col,fback,min(.95,time*.5));\n    col=max(vec3(0.),col);\n    fragColor = vec4(col, 1.);\n}\n\n","name":"Buffer A","description":"","type":"buffer"}]}