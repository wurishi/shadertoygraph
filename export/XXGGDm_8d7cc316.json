{"ver":"0.1","info":{"id":"XXGGDm","date":"1717698160","viewed":35,"name":"Tutorial ( sine wave generator)","username":"Muhammad","description":"generates sine wave","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sinewave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Coordinates in the range (-1, 1)\n    vec2 offsetuv = (fragCoord / iResolution.xy * 2.0) - 1.0;\n    \n    // Scale uv.x to a range that gives a full sine wave cycle across the screen\n    float frequency = 5.0; // Number of sine wave cycles\n    float amplitude = 0.5; // Height of the sine wave\n    float y = uv.x  * (sin(frequency * offsetuv.x * 2.  - iTime * 7.) * .5); // Calculate y value using sine function\n\n    // Check if the current fragment is close to the sine wave line\n    float wave = smoothstep(1. , 0.01, length(offsetuv.y - y) * 2.); // 0.01 is the thickness of the line\n\n    // Output color: black background with white sine wave\n    vec3 color = mix(vec3(0.,0.8,1.), vec3(1.,0.,1.), wave);\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}