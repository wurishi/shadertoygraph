{"ver":"0.1","info":{"id":"MfjBRG","date":"1725129337","viewed":8,"name":"_g_Cone","username":"_gamma_001","description":"SDF of a cone","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sdf","cone"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1416\n\nvec2 perp(vec2 vec) {\n    return cross(vec3(vec.xy, 0.0), vec3(0.0, 0.0, 1.0)).xy;\n}\n\nfloat sdCone(vec2 pos, vec2 origin, float h, float theta) {\n    // symmetry around y-axis\n    theta = clamp(theta * 0.5, 0.0, PI / 2.0);\n    vec2 cPos = vec2(abs(pos.x - origin.x), pos.y - origin.y);\n    \n    // distance to both lines (slanted and vertical)\n    vec2 yPos = vec2(0.0, h * 0.5);\n    vec2 dir1 = vec2(1.0, 0.0);\n    vec2 dir2 = normalize(vec2(tan(theta), 1.0));\n    float ld1 = length(\n        yPos + \n        clamp(dot(cPos, dir1), 0.0, h * tan(theta)) * dir1 - \n        cPos\n    );\n    float ld2 = length(\n        -yPos +\n        clamp(dot(cPos + yPos, dir2), 0.0, h / cos(theta)) * dir2 -\n        cPos\n    );\n    \n    // negate the distance if the dot product with perpeendiculars of both lines is negative \n    return min(ld1, ld2) * sign(max((cPos.y - h * 0.5), dot(perp(dir2), cPos + yPos)));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    float fac = 0.5 * sin(iTime) + 0.5;\n    int offset = int(floor(iTime / 3.0)) % 3;\n\n    vec3 color = vec3(1.0);\n    float dist = sdCone(uv, vec2(0.0, 0.0), 0.6, fract(iTime) * PI / 2.0);\n    color = mix(vec3(1.0, 1.0, 1.0), vec3(0.25, 0.6, 1.0), sin(fract(dist) * 175.0));\n    color *= mix(vec3(1.0, 0.5, 0.4), vec3(1.0), smoothstep(0.0, 0.003, dist));\n    color *= smoothstep(0.0, 0.02, abs(dist * 0.8));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}