{"ver":"0.1","info":{"id":"3t2BWW","date":"1598955974","viewed":362,"name":"Moving zigzag pattern","username":"fra_michelini","description":"Moving zigzag pattern.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["noise","simplex","loop","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  uv.x *= iResolution.x / iResolution.y;\n\n  vec3 color = vec3(0.0);\n\n  // sinewave on UV\n  uv.y += sin(uv.x * 5.0 + iTime* 3.3) * 0.05 * cos(uv.x) * 0.3;\n\n  // move UV over time\n  uv.x += iTime * 0.09;\n  uv.y += iTime * 0.04;\n\n  // Make a grid\n  vec2 gv = fract(uv*7.0);\n\n  // Remap GV from [0..1] to [-1..1]\n  gv.x = gv.x * 2.0 - 1.0;\n  gv.x = abs(gv.x);\n\n  // Distort uv.y\n  gv.y += gv.x * 0.4;\n  gv.y -= 0.1;\n  \n  // Define the colors of the bands\n  vec3 col1 = vec3(0.3882, 0.102, 0.502);\n  vec3 col2 = vec3(0.6588, 0.0784, 0.5137);\n  vec3 col3 = vec3(1.0, 0.2, 0.7);\n  \n  // Adding the bands\n  if (gv.y <= 0.19)\n    color += col1 * (1.0 - smoothstep(0.0, 0.19, gv.y) * 0.5);\n\n  if (gv.y > 0.19 && gv.y <= 0.53)\n    color += col2 * (1.0 - smoothstep(0.34, 0.53, gv.y) * 0.5);\n\n  if (gv.y > 0.53 && gv.y <= 0.86)\n    color += col3 * (1.0 - smoothstep(0.67, 0.86, gv.y) * 0.5);\n\n  if (gv.y > 0.86)\n    color += col1 * (1.0 - smoothstep(1.0, 1.19, gv.y) * 0.5);\n\n  if (gv.y > 1.19 && gv.y <= 1.53)\n    color = col2 * (1.0 - smoothstep(1.34, 1.53, gv.y) * 0.5);\n    \n  float noise = snoise(uv*3.3 - vec2(iTime*0.7, iTime*1.4)) * 0.5 + 0.5;\n  \n  // Playing around with color values\n  color.rg -= gv.x*0.3;\n  color.rg -= min(0.35, max(0.6, gv.x)) * 1.2;\n  color.r = pow(color.r, 4.5 * noise);\n  color.g = pow(color.r, 9.5 * noise);\n  color.b = pow(color.b, 2.5 * noise);\n\n  fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"// Simplex 2D noise\n//\nvec3 permute(vec3 x) { return mod(((x*34.0)+1.0)*x, 289.0); }\n\nfloat snoise(vec2 v){\n  const vec4 C = vec4(0.211324865405187, 0.366025403784439,\n           -0.577350269189626, 0.024390243902439);\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n  vec2 i1;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n  i = mod(i, 289.0);\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n  + i.x + vec3(0.0, i1.x, 1.0 ));\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy),\n    dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n","name":"Common","description":"","type":"common"}]}