{"ver":"0.1","info":{"id":"4XscRf","date":"1726560843","viewed":11,"name":"Fork Evoke25 RichardZ 677","username":"RichardZ","description":"I've just learn how to move an item, so I just try to do this.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["clock"],"hasliked":0,"parentid":"4fXBD7","parentname":"Evoke25"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.1415925359;\nconst float TAU = 6.2831852;\n\n\nfloat wave(float x, float cycleLength, float pulseLength) {\n    float pauseLength = cycleLength - pulseLength;\n    float clampedX = mod(x, cycleLength);\n\n    if (clampedX < pauseLength) {\n        return 0.;\n    }\n    \n    float normalX = (clampedX - pauseLength) / pulseLength;\n\n    return smoothstep(0., 1., 1.-2.*abs(normalX-0.5));\n}\n\n\nfloat circle(vec2 uv, vec2 ballCenter, float radius) {\n    return distance(ballCenter, uv) - radius;\n}\n\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\n\nvec4 clock(vec2 uv) {\n    \n    vec4 color = vec4(0.);\n    const float lineThickness = 0.01;\n    \n    float border = smoothstep(0.01, 0.0, abs(circle(uv, vec2(0.), 0.52)) - lineThickness);\n    color = mix(color, vec4(1.), border);\n    \n    \n    \n    float secondDeg = floor(iDate.w) / 60. * TAU;\n    float secondArm = smoothstep(0.007, 0., sdSegment(uv, vec2(0.), vec2(sin(secondDeg), cos(secondDeg))*0.45)-lineThickness);\n    color = mix(color, vec4(1., 1., 1., 1.), secondArm);\n\n    float minuteDeg = floor(iDate.w / 60.) / 60. * TAU;\n    float minuteArm = smoothstep(0.007, 0., sdSegment(uv, vec2(0.), vec2(sin(minuteDeg), cos(minuteDeg))*0.35)-lineThickness);\n    color = mix(color, vec4(1., 1., 1., 1.), minuteArm);\n    \n    float hourDeg = floor(iDate.w / (60. * 60. )) / 12. * TAU;\n    float hourArm = smoothstep(0.007, 0., sdSegment(uv, vec2(0.), vec2(sin(hourDeg), cos(hourDeg))*0.25) - lineThickness);\n    color = mix(color, vec4(1., 1., 1., 1.), hourArm);\n    \n\n    return color;\n}\n\nfloat rand(float seed) {\n    return fract(sin(dot(vec2(seed, seed / PI) ,vec2(12.9898,78.233))) * 43758.5453);   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - 0.5;\n    uv.x = uv.x * iResolution.x/iResolution.y * 2.;\n    uv.y *= 2.;\n    uv.x += .5 * sin(iTime);\n    uv.y += .2 * cos(2. * iTime);\n    \n    vec4 color = clock(uv);\n    \n        fragColor = vec4(color.rgb,1.);\n}","name":"Image","description":"","type":"image"}]}