{"ver":"0.1","info":{"id":"X3fcRl","date":"1726529636","viewed":18,"name":"Quad Trouchet ","username":"arminkz","description":"quad trouchet pattern","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["quad","trouchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rnd(vec2 p) {\n    p = fract(p * vec2(123.456, 345.67));\n    p += dot(p, p+ 34.345);\n    return fract(p.x * p.y);\n}\n\nfloat norm(vec2 p, float k) {\n    p = abs(p);\n    return pow(pow(p.x,k)+pow(p.y,k),1./k);\n}\n\nvec4 trouchet(vec2 p, vec3 color) {\n    vec2 id = floor(p);\n    p = fract(p) - .5;\n    \n    float n = rnd(id);\n    \n    // flip cells randomly\n    if (n < .5) {\n        p.x*=-1.;\n    }\n    \n    float angle = atan(p.y,p.x);\n    vec3 col = vec3(0.);\n    float s = p.x > -p.y ? 1. : -1.;\n    \n    float dist = norm(p - vec2(.5,.5)*s,2.2);\n    float edgeBlur = 0.01;\n    float radius = 0.5;\n    float thickness = 0.05;\n    \n    float contour = smoothstep(edgeBlur,-edgeBlur,abs(dist-radius)-thickness);\n    col = color; \n    \n    float depth = mix(0.6, 1., cos(angle*2.));\n    col *= depth;\n    \n    return vec4(col,depth) * contour;\n}\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    uv *= 10.;     //goes from -12 to 12\n    \n    float t = mod(iTime, 7200.);\n    uv.x += t;\n    \n    vec4 t1 = trouchet(uv, vec3(1.,0.,0.));\n    vec4 t2 = trouchet(uv + .5, vec3(0.,1.,0.));\n    \n    col = t1.a > t2.a ? t1.rgb : vec3(0.);\n    col += t2.rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}