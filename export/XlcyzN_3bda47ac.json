{"ver":"0.1","info":{"id":"XlcyzN","date":"1531702679","viewed":380,"name":"miccall Rounded Rectangle","username":"miccall","description":"Rounded Rectangle","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float roundrect(vec2 UV , float Width , float Height ,float Radius )\n{\n    // the min value in  'width', 'height',' radius' \n    float minv = min(min(abs(Radius * 2.0), abs(Width)), abs(Height));\n    // compute a new radius \n    float r = max(minv, 0.00001);\n    // 1. remap the uv from (0,1) to the ( -1 ,1 ) \n    // 2. add the width , height and r ;\n    // 3. move the rect  to the mid of screen \n\tvec2 uv  = abs(UV * 2.0 - 1.0)- vec2(Width, Height) + r;\n    // compute the length of uv / r\n\tfloat d = length(max(vec2(0.0), uv)) / r;\n\t// the rounded \n    float Out = max((1.0 - d) / fwidth(d) , 0.0);\n    return Out ; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float mask = roundrect(uv,0.6,0.5,0.04);\n    \n    vec3 col = vec3(0,2,4);\n\n    col *= mask ;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}