{"ver":"0.1","info":{"id":"ldKBDR","date":"1528402634","viewed":95,"name":"WildWildWest","username":"RaliP","description":"west","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wild"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 uv, float time)\n{\n    //This function will make circle based on \n    //our coordinate system and the time.\n    float d = length(uv-time);\n    float c = d;\n    //Adjust the size of the circle if needed.\n    c = smoothstep(0.1,0.9,d);\n    \n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Adjusting the coordinate system to\n    //start from the center of the screen\n    //and adjusting the aspect ratio.\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    //Adding variable time to be periodical based on time. \n    float time = tan(iTime)*0.5;\n    \n    //Making the circle.\n    float c = circle(uv,time);\n    //Addin the base color here.\n    vec3 color = vec3(1.0,0.96,0.0);\n    \n    //Adding the background color.\n    float background = step(0.,-uv.y);\n    color = color - vec3(background/2.,background,0.);\n      \n    //Adding the circle with our base color.\n    color = color-vec3(0.,c,0.);\n    \n    //Adding gradient for the lower part.\n    float mixGround = smoothstep(0.0,0.7+time,-uv.y);\n    //Make sure to adjust only the lower part.\n    float up = step(0.,uv.y);\n    color = color-vec3(mixGround-up,0.,0.);\n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}