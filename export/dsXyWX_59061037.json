{"ver":"0.1","info":{"id":"dsXyWX","date":"1687267493","viewed":88,"name":"hexagonal grid testing","username":"Vexatious","description":"hexagonal","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["hexagonal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float HexDist(vec2 p) {\n\tp = abs(p);\n    \n    float c = dot(p, normalize(vec2(1,1.73)));\n    c = max(c, p.x);\n    \n    return c;\n}\n\n\n\nvec4 HexCoords(vec2 uv) {\n\tvec2 r = vec2(1, 1.73);\n    vec2 h = r*.5;\n    \n    vec2 a = mod(uv, r)-h;\n    vec2 b = mod(uv-h, r)-h;\n    \n    vec2 gv = dot(a, a) < dot(b,b) ? a : b;\n    \n    float x = atan(gv.x, gv.y);\n    float y = .5-HexDist(gv );\n    vec2 id = uv-gv;\n    return vec4(x, y, id.x,id.y);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    \n    uv = uv / (pow(length(uv),1.5)+(sin(iTime)*.5+1.));\n    vec3 col = vec3(0);\n    uv *= 30.;\n    for(float i = 1.; i <1.2; i+=1./8.){\n        float z = fract(i+iTime*.4);\n        float size = mix(2.,.5,z);\n        float fade = smoothstep(0.,.3,z) * smoothstep(1.,0.6,z);\n        vec4 hc = HexCoords(uv *size+ i*10. + z + iTime) ;\n        hc.y = hc.y / fade;\n        float c = smoothstep(0.1,0.1,hc.y) * 1.1;\n        c += smoothstep(0.7,1.,sin((hc.w * hc.z * i * 2.)+iTime)) + .2;\n        c += smoothstep(.1,0.2,sin(hc.x)) / 5.;\n        c = pow(c,2.);\n        col += c;\n    }\n    \n    fragColor = vec4(col / 8.,1.0);\n}","name":"Image","description":"","type":"image"}]}