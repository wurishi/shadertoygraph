{"ver":"0.1","info":{"id":"4ttcR8","date":"1531515788","viewed":1380,"name":"Multiple Circles Like a Flower","username":"Koji","description":"Multiple Circles","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/**\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy*2.0-iResolution.xy)/ min(iResolution.x,iResolution.y);\n\n    vec3 destColor = vec3(abs(sin(iTime)), abs(cos(iTime)), abs(sin(iTime) + cos(iTime)));\n    float f = 0.0;\n    for(float i = 0.0; i < 10.0; i++){\n        float s = sin(iTime + i * 0.628318) * 0.5;\n        float c = cos(iTime + i * 0.628318) * 0.5;\n        f += 0.0025 * 5. / abs(length(uv + vec2(c, s)) - .5);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(vec3(destColor * f), 1.0);\n}\n**/\n\n// Thank you for your suggestion, @FabriceNeyret2\n\n#define T(i) cos( i + iTime  + vec2(0,33) )\n\nvoid mainImage( out vec4 O,  vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u+u - R ) / min(R.x,R.y),  // uv\n         T =  T();\n\n    float f = 0., i = 0.;\n    \n    for( ; i++ < 10.;  )\n        f += 5. / abs( length( U +  T( i*.628 ) / 2. ) - .5 ) / 4e2;\n\n\n    O = f * abs( vec4(T.yx, T.x+T.y , 1 ) );\n}","name":"Image","description":"","type":"image"}]}