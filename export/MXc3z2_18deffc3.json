{"ver":"0.1","info":{"id":"MXc3z2","date":"1716753782","viewed":86,"name":"bae #012 ~ Not So Far Out","username":"BretHudson","description":"A bunch of rings of circles","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["sdf","loopless"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define rot(at) mat2(cos(at), -sin(at), sin(at), cos(at))\n\n// kudos to https://www.shadertoy.com/view/XljGzV\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nfloat sdCircle(vec2 p, float r)\n{\n    return length(p) - r;\n}\n\nfloat smin(float a, float b, float k)\n{\n    float h = max(k - abs(a - b), 0.) / k;\n    return min(a, b) - h * h * h * k * (1. / 6.);\n}\n\nfloat antialias(in float d)\n{\n    return smoothstep(1.0, -1.0, d / fwidth(d));\n}\n\nfloat drawRing(vec2 uv, float n, float ringRadius, float dRadius)\n{\n    float phi = (2. * PI) / n;\n    \n    float d = 1.;\n    // make sure neighbors aren't getting clipped\n    for (float i = -1.; i < 1.1; ++i)\n    {\n        float offset = i * (2. * PI / n);\n        vec2 _uv = uv * rot(offset);\n        float l = length(_uv);\n        float r = atan(_uv.y, _uv.x);\n\n        float iter = (n * floor(n * r / (2. * PI))) / n + iTime * PI;\n\n        float rr = mod(r, phi) - (phi * .5) - offset;\n\n        vec2 p = vec2(cos(rr), sin(rr)) * l;\n\n        float xx = 1. + .05 * sin(iter * 1.3);\n        d = min(d, distance(p, vec2(ringRadius, 0.) * xx) - dRadius);\n    }\n    \n    return d;\n}\n\nfloat lerp(float a, float b, float t)\n{\n    return a + (b - a) * t;\n}\n\nfloat wave(float a, float b, float t)\n{\n    return lerp(a, b, (cos(t) + 1.) / 2.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy * 2. - iResolution.xy) / iResolution.y;\n    \n    float tOffset = 4.3;\n    float t = iTime + tOffset;\n    \n    float at = t * 0.3;\n    uv *= rot(at);\n    \n    float circleRadius = 0.125;\n    \n    float center = sdCircle(uv, circleRadius * 1.);\n    \n    float c = (cos(t) + 1.) / 2.;\n    \n    float dist = 0.5;\n    \n    float r1 = drawRing(uv, 6.,\n        c,\n        circleRadius);\n    float r2 = drawRing(uv, 12.,\n        wave(dist + 0.125, 1.125, t),\n        circleRadius * 0.85);\n    float r3 = drawRing(uv, 24.,\n        (2. * dist + c) * 0.9,\n        circleRadius * 1.);\n    float r4 = drawRing(uv, 48.,\n        wave(3. * dist + 0.125, 2.125, t),\n        circleRadius * 0.75);\n    \n    float d = smin(center, r1, 0.5);\n    d = smin(d, r2, 0.5);\n    d = smin(d, r3, 0.5);\n    d = smin(d, r4, 0.7);\n    d = antialias(d);\n    \n    float a = atan(uv.y, uv.x) + length(uv) * 1.;// - iTime;\n    a /= 2. * PI;\n    a += length(uv) * length(uv) * 0.1;\n    vec3 hue = hsv2rgb(vec3(a, length(uv) * 0.175 * (sin(t) + 5.5), 1.));\n    \n    vec3 col = vec3(0.);\n    col += max(d, 0.3) * hue;\n\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}