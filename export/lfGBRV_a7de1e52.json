{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"float rect(vec2 uv, float x0, float y0, float x1, float y1)\n{\n    float X0 = min(x0, x1);\n    float X1 = max(x0, x1);\n    float Y0 = min(y0, y1);\n    float Y1 = max(y0, y1);\n    \n    return (float(X0<uv.x && X1>uv.x && Y0<uv.y && Y1>uv.y));\n}\n\nfloat sin01(float v)\n{\n    return 0.5 + sin(v*3.14159265359 - 3.14159265359/2.0)*0.5;\n}\n\n\nfloat rectstuff(vec2 uv, float minwidth, float maxwidth, float height, float t_offset, float speed)\n{\n    float transform = iResolution.x/iResolution.y;\n    float posx = sin01((iTime+t_offset)*speed)*transform;\n    float width = (minwidth + sin01(1.57079632679-(iTime+t_offset)*speed*2.0)*(maxwidth-minwidth));\n    return rect(uv, posx - width/2.0, 0.0, posx + width/2.0, height-width/2.0);\n    \n}\n\nfloat wavystuff(int n, vec2 uv, float minwidth, float maxwidth, float height, float t_offset, float T, float speed)\n{\n    float s = 0.0;\n    \n    for (float i = 0.0; i < float(n); i++)\n    {\n        s += 1.0/float(n) * rectstuff(uv, minwidth, maxwidth, height, T + t_offset*i, speed);\n    }\n    \n    return s;\n    \n}\n\nfloat circle(vec2 uv, float x, float y, float r1, float r2)\n{\n    float v = distance(uv, vec2(x, y));\n    v = smoothstep(r1, r2, v);\n    return 1.0-v;\n}\n\nfloat sun(vec2 uv, float x, float y, float R, float r, float speed)\n{\n    float sunx = cos(iTime*speed);\n    float suny = sin(iTime*speed);\n    return sin01(circle(uv, x*iResolution.x/iResolution.y + sunx * R, y + suny * R, r - 0.2, r + 0.2));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    \n    \n\n    float v = wavystuff(50, uv, 0.02, 0.2, 0.2, 0.01, 0.0, 0.5);\n    v += wavystuff(50, uv, 0.05, 0.4, 0.3, 0.03, 0.5, 0.5)*0.8;\n    v += wavystuff(50, uv, 0.2, 0.5, 0.4, 0.1, 1.0, 0.5)*0.5;\n    \n    float s = sun(uv, 0.7, 0.0, 0.7, 0.5, 0.5);\n    \n    \n    \n    float mask = 1.0-sin01(uv.y);\n    \n    vec3 layer1 = v*vec3(0.7, 0.4, 0.8) + (1.0-v)*vec3(0.3, 0.2, 0.9);\n    vec3 layer2 = s*vec3(0.95, 0.7, 0.1) + (1.0-s)*vec3(0.95, 0.2, 0.1);\n    \n    vec3 finalColor = mask*layer1 + (1.0-mask)*layer2;\n    \n\n    fragColor = vec4(finalColor, 1.0);\n    //fragColor = vec4(vec3(v), 1.0);\n}\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfGBRV","date":"1734192056","viewed":23,"name":"THE SUN","username":"buzaszendvics","description":"The Sun Sets and Rises.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["wave","sun","sin"],"hasliked":0,"parentid":"","parentname":""}}