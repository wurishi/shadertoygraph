{"ver":"0.1","info":{"id":"4tXSDS","date":"1446489484","viewed":219,"name":"MarbleticField","username":"felixfaire","description":"A 10 min 2D shader.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","noise","fbm","field","marble","magnet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n \nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n \nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n        f = f*f*(3.0-2.0*f);\n        float n = p.x + p.y*57.0;\n        float res = mix(mix( hash(n+  0.0), hash(n+  1.0),f.x), mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n        return res;\n}\n \nfloat fbm( vec2 p )\n{\n        float f = 0.0;\n        f += 0.50000*noise( p ); p = p*2.02;\n        f += 0.25000*noise( p ); p = p*2.03;\n        f += 0.12500*noise( p ); p = p*2.01;\n        f += 0.06250*noise( p ); p = p*2.04;\n        f += 0.03125*noise( p );\n        return f/0.984375;\n}\n \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{   \n    // Set up domain\n    vec2 p = ( fragCoord / iResolution.xy );\n    p = p * 2.0 - 1.0;\n    \n    //p *= mat2(cos(0.2);\n    \n    // Fix aspect ratio\n    p.x *= iResolution.x / iResolution.y;\n    \n    p.x *= 1.0 - abs(p.y) * smoothstep(0.0, 0.5, abs(p.y)) * abs(p.x) * 1.0;\n \n    vec3 col = vec3 ( 0.0, 0.0, 0.0 );\n    \n    p.y += 3.0 * fbm(p * 2.0);\n    \n    // Create noise using fBm\n    float f = fbm( vec2(5.0*p.x + iTime * 0.2, fbm(10.*p + iTime)) );\n    \n    col.x += smoothstep( 0.6, 1.0, f * 1.4);\n    col.y += smoothstep( 0.2, 0.8, f);\n    col.z += smoothstep( 0.1, 0.7, f);\n    \n    //col += palette(f, vec3(0.3,0.2,0.9), vec3(0.5,0.9,0.5), vec3(0.6, 0.4,0.3),vec3(0.0,1.0,0.5));\n    \n    col += p.y * 0.04;\n    col -= abs(p.x) * 0.1;\n\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}