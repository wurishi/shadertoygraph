{"ver":"0.1","info":{"id":"XsGyzc","date":"1522735261","viewed":404,"name":"Sparkler - Particle","username":"nawafuji","description":"Tested particle","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int numP = 500;\n\n#define twopi 6.28319\n\nconst float part_min_hue = -0.13;                             // Minimum particle hue shift (spectrum width = 1.)\nconst float part_max_hue = 0.13;                              // Maximum particle hue shift (spectrum width = 1.)\nconst float part_min_saturation = 0.5;                        // Minimum particle saturation (0. to 1.)\nconst float part_max_saturation = 0.9;                        // Maximum particle saturation (0. to 1.)\nconst float hue_time_factor = 0.035;                          // Time-based hue shift\n\n// Simple \"random\" function\nfloat random(float co)\n{\n    return fract(sin(co*12.989) * 43758.545);\n}\n\n\n// From https://www.shadertoy.com/view/ldtGDn\nvec3 hsv2rgb (vec3 hsv) { // from HSV to RGB color vector\n\thsv.yz = clamp (hsv.yz, 0.0, 1.0);\n\treturn hsv.z*(0.63*hsv.y*(cos(twopi*(hsv.x + vec3(0.0, 2.0/3.0, 1.0/3.0))) - 1.0) + 1.0);\n}\n\nvec2 getParticlePosition(int id)\n{\n    float rand_x = random(float(id));\n    float rand_y = random(float(id)*2.0);\n    vec2 offset = cos(iTime)*vec2(0.3,0.0) + sin(iTime)*vec2(0.0,0.3) + vec2(0.5,0.5);\n    //vec2 offset = vec2(0.1,0.3);\n    float rand_c = 0.05;\n    return offset + vec2(rand_x, rand_y) * rand_c;\n}\n\nvec2 getParticleVelocity(int id)\n{\n    float rand_x = random(float(float(id)*3.0)) - 0.5;\n    float rand_y = random(float(id)*4.0);\n    vec2 offset = vec2(0.,0.3);\n    vec2 rand_c = vec2(1.5, 0.1);\n    return offset + vec2(rand_x, rand_y) * rand_c;\n}\n\nvec3 getParticleColor(int id, float alpha)\n{\n\n   float hue;\n   float saturation;\n\n   saturation = mix(part_min_saturation, part_max_saturation, random(float(id+124)));\n   hue = mix(part_min_hue, part_max_hue, random(float(id + 124)));\n    \n   return hsv2rgb(vec3(hue, saturation, alpha));\n}\n\nvec3 drawParticles(vec2 uv, float t)\n{\n \tvec3 colP = vec3(0.0);\n    for(int i=0; i<numP; i++)\n    {\n        t = fract(t+random(float(i)));\n    \tvec2 pos = getParticlePosition(i);\n        pos += t*getParticleVelocity(i);\n        pos.y -= 4.9*t*t;\n        float dist = distance(pos, uv);\n        \n        float alpha = 1.0/(dist*500.0+0.1);\n        \n        vec3 color = getParticleColor(i, alpha);\n        //float alpha = 1.0 - clamp( dist/0.01, 0.0, 1.0);\n        colP += color * alpha;\n    }\n    return colP;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 vert;\n    float t = iTime;\n\n    \n    // Multipass motion blur\n    vec2 uv2 = fragCoord.xy / iResolution.xy;\n    vec3 pColor = texture(iChannel0,uv).rgb*0.7;\n    \n    pColor += drawParticles(uv, t) * 0.9;\n    \n   fragColor = vec4(pColor,1.0);\n\t//fragColor = vec4(vec3(1.0),1.0);\n}","name":"Buf A","description":"","type":"buffer"}]}