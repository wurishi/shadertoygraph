{"ver":"0.1","info":{"id":"M3VSDK","date":"1723118132","viewed":58,"name":"The Drive Home-timo","username":"li379395535","description":"drive","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["drive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define S(a,b,t) smoothstep(a,b,t)\n\n\nfloat N(float t) {\n    return fract(sin(t*3456.)*6547.);\n}\n\n\nvec4 N14(float t) {\n    return fract(sin(t*vec4(123., 1024., 3456., 9564.))*vec4(6547., 345., 8779., 1564.));\n}\n\nstruct ray {\n    vec3 o,d;\n};\n\nray GetRay(vec2 uv, vec3 camPos, vec3 lookat, float zoom) {\n    ray a;\n    \n    a.o = camPos;\n    vec3 f = normalize(lookat - camPos);\n    vec3 r = cross(vec3(0,1,0), f);\n    vec3 u = cross(f, r);\n    \n    vec3 c = a.o + f*zoom;\n    vec3 i = c + uv.x * r + uv.y*u;\n    a.d = normalize(i - camPos);\n    return a;\n}\n\nvec3 CloestPoint(ray r, vec3 p) {\n    return r.o + max(0., dot(p-r.o, r.d))*r.d;\n}\n\nfloat DistRay(ray r, vec3 p) {\n    return length(p-CloestPoint(r, p));\n}\n\nfloat Bokeh(ray r, vec3 p, float size, float blur) {\n    \n    float d = DistRay(r, p);\n    size *= length(p);\n    float c= S(size, size*(1. - blur), d);\n    \n    c *= mix(.6, 1., S(size*.8, size, d));\n    \n    return c;\n}\n\nvec3 StreatLights(ray r, float t) {\n\n    float side = step(r.d.x, 0.);\n    r.d.x = abs(r.d.x);\n    float s = .1;\n    float m = 0.;\n    for(float i = 0.; i < 1.; i+=s) {\n        float ti = fract(t + i + side*s*.5);\n        vec3 p = vec3(2,2,100. - ti * 100.);\n\n        m += Bokeh(r, p, .05, .1)*ti*ti*ti;\n    }\n    return vec3(1.,.7,.3)*m;\n}\n\nvec3 HeadLights(ray r, float t) {\n    t*=2.;\n    float w1 = .25;\n    float w2 = w1*1.2;\n    float s = 1./30.;\n    float m = 0.;\n    for(float i = 0.; i < 1.; i+=s) {\n        float n = N(i);\n        if (n > .1) {\n            continue;\n        }\n        float ti = fract(t + i);\n        float z = 100. - ti * 100.;\n        float fade = ti*ti*ti*ti*ti;\n        float focus = S(.9, 1., ti);\n        float size = mix(.05, .03, focus);\n        m += Bokeh(r, vec3(-1. - w1,.15,z), size, .1)*fade;\n        m += Bokeh(r, vec3(-1. + w1,.15,z), size, .1)*fade;\n        \n        m += Bokeh(r, vec3(-1. - w2,.15,z), size, .1)*fade;\n        m += Bokeh(r, vec3(-1. + w2,.15,z), size, .1)*fade;\n        \n        float ref = 0.;\n        ref += Bokeh(r, vec3(-1. - w2,-.15,z), size*3., 1.)*fade;\n        ref += Bokeh(r, vec3(-1. + w2,-.15,z), size*3., 1.)*fade;\n        \n        m+=ref *focus;\n    }\n    return vec3(.9,.9,1.)*m;\n}\n\n\nvec3 TailLights(ray r, float t) {\n    t *= .25;\n    float w1 = .25;\n    float w2 = w1*1.2;\n    float s = 1./15.;\n    float m = 0.;\n    for(float i = 0.; i < 1.; i+=s) {\n        float n = N(i);\n        if (n > .5) {\n            continue;\n        }\n        float lane = step(0.25, n);\n        float ti = fract(t + i);\n        float z = 100. - ti * 100.;\n        float fade = ti*ti*ti*ti*ti;\n        float focus = S(.9, 1., ti);\n        float size = mix(.05, .03, focus);\n        \n        float laneShift = S(1., .96, ti);\n        float x = 1.5 - lane * laneShift;\n        \n        float blink = step(0., sin(t*1000.))*7.*lane*step(.96, ti);\n        m += Bokeh(r, vec3(x - w1,.15,z), size, .1)*fade;\n        m += Bokeh(r, vec3(x + w1,.15,z), size, .1)*fade;\n        \n        m += Bokeh(r, vec3(x - w2,.15,z), size, .1)*fade;\n        m += Bokeh(r, vec3(x + w2,.15,z), size, .1)*fade*(1. + blink*.1);\n        \n        float ref = 0.;\n        ref += Bokeh(r, vec3(x - w2,-.15,z), size*3., 1.)*fade;\n        ref += Bokeh(r, vec3(x + w2,-.15,z), size*3., 1.)*fade;\n        \n        m+=ref *focus;\n    }\n    return vec3(1.,.1,.03)*m;\n}\n\n\nvec3 EnvLights(ray r, float t) {\n\n    float side = step(r.d.x, 0.);\n    r.d.x = abs(r.d.x);\n    float s = .1;\n    float m = 0.;\n    vec3 c = vec3(0.);\n    for(float i = 0.; i < 1.; i+=s) {\n        float ti = fract(t + i + side*s*.5);\n        float fade = ti*ti*ti;\n        vec4 n = N14(i+side*100.);\n        \n        float occlusion = sin(ti*6.28*10.*n.x)*.5 + .5;\n        \n        fade = occlusion;\n        float x = mix(2.5, 10., n.x);\n        float y = mix(.1, 1.5, n.y);\n        vec3 p = vec3(x,y,50. - ti * 50.);\n\n        vec3 col = n.wzy;\n        c += Bokeh(r, p, .05, .1)*fade*col*.5;\n    }\n    return c;\n}\n\nvec2 Rain(vec2 uv, float t) {\n    t *= 40.;\n    vec2 a = vec2(3., 1.);\n    vec2 st = uv*a;\n    vec2 id = floor(st);\n    st.y += t*.21;\n    \n    float n = fract(sin(id.x*234.)*1234.);\n    st.y += n;\n    uv.y += n;\n    id = floor(st);\n    st = fract(st) - .5;\n    \n    t += fract(sin(id.x *123. + id.y*234.)*456.) * 6.28;\n    float y = sin(t+sin(t + sin(t)*.5))*.43;\n    vec2 p1 = vec2(0., y);\n    vec2 o1 = (st - p1) / a;\n    float d = length(o1);\n    \n    float m1 = S(.07, .0, d);\n    \n    vec2 o2 = (fract(uv*vec2(1., 2.)*a.x) - .5) / vec2(1.,2.);\n    d = length(o2);\n    \n    float m2 = S(.3*(-st.y+.5), .0, d)*S(-.1, .1, st.y - p1.y);\n    \n    // if (st.x > .48 || st.y > .49) m1 = 1.;\n    \n    return vec2(m1*o1*30. + m2 *o2*10.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n\n    vec2 m = iMouse.xy/iResolution.xy;\n    vec3 camPos = vec3(0.5, .2, 0);\n    vec3 lookat = vec3(0.5, .2, 1.);\n\n    float t = iTime*.05 + m.x;\n    vec2 rainDistort = Rain(uv*5., t) * .5;\n    rainDistort += Rain(uv*7., t) * .5;\n     \n    uv.y += sin(uv.x*170.)*.003;\n    uv.x += sin(uv.y*70.)*.005;\n    ray r = GetRay(uv-rainDistort*.3, camPos, lookat, 2.);\n    \n    vec3 col = StreatLights(r, t);\n    col += HeadLights(r, t);\n    col += TailLights(r, t);\n    col += EnvLights(r, t);\n    col += (r.d.y + .25)*vec3(.2, .1, .5);\n    //col = vec3(rainDistort, 0.);\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}