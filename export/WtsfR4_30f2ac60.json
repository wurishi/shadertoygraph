{"ver":"0.1","info":{"id":"WtsfR4","date":"1596169360","viewed":90,"name":"art of code's fractal experiment","username":"rubenalexander","description":"art of code's koch snowlake with a changing trig angle and 3 channel images.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 N(float angle){\n    angle += (iTime/100.)*cos(iTime/100.);\n    return vec2(sin(angle), cos(angle));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    uv *= 1.5;\n    vec3 col = vec3(0);\n   \n    //tan(a) = y/\n    uv.x = abs(uv.x);\n    uv.y += tan((5./6.)*3.14159)*.5;\n    vec2 n = N((5./6.)*3.14159);\n    float d = dot(uv-vec2(.5,0.),n);\n    uv -= n*max(0.,d)*2.;\n    \n    n = N((2./3.)*3.14159);\n    float scale = 1.;\n    uv.x += .5;\n    for (float i=0.;i<4.;i++) {\n        uv *= 3.;\n        scale *=3.;\n        uv.x -= 1.5;\n        \n        uv.x = abs(uv.x);\n        uv.x -= .5;\n        uv -= n*min(0.,dot(uv,n))*2.;\n    }\n    \n    d = length(uv - vec2(clamp(uv.x, -1., 1.),0));\n    //col += smoothstep(1./iResolution.y,.0,d/scale);\n\tuv/= scale;\n    col += texture(iChannel0, uv).rgb + texture(iChannel1, uv).rgb - texture(iChannel2, uv).rgb;\n    \n    fragColor = vec4(col, 1.0);\n    \n   \t\n}","name":"Image","description":"","type":"image"}]}