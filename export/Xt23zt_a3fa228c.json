{"ver":"0.1","info":{"id":"Xt23zt","date":"1431464898","viewed":146,"name":"Endless Dancing I's","username":"BrwnRyce","description":"Raymarching UIUC","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec2 dSphere(vec3 p){\n  \tfloat d = length(p)-4.2;\n  \treturn vec2(d,1);\n}\n\nvec2 dFloor(vec3 p){\n  return vec2(p.y+0.2,0);\n}\n\nvec2 oSub(vec2 a, vec2 b){\n  \tfloat d = max(a.x, -b.x);\n  \treturn vec2(d,1);\n}\n\nvec2 oAdd(vec2 a, vec2 b){\n  \tfloat d = min(a.x, b.x);\n    float c;\n    if(d==a.x)\n        c = a.y;\n    else\n        c = b.y;\n  \treturn vec2(d,c);\n}\n\nfloat udRoundBox(vec3 p, vec3 b, float r){\n  return length(max(abs(p)-b,0.0))-r;\n}\n\nvec2 infiniteIs(vec3 p, vec3 c){\n    vec3 q;\n\tq.x = mod(p.x,c.x)-0.5*c.x;\n    q.y = p.y;\n    //q.y = mod(p.y,c.y)-0.5*c.y;\n    \n    q.z = mod(p.z,c.z)-0.5*c.z;\n\treturn oAdd(oAdd(oAdd(vec2(udRoundBox(q,vec3(0.2,0.1,0.5),0.1),1.0),\n                vec2(udRoundBox(q+vec3(0.0,-1.4+0.18*cos(iTime*6.0)*(1.0-0.1*sin(p.z*5.5)),0.0),vec3(0.2,0.1,0.5),0.1),1.0)),\n                vec2(udRoundBox(q+vec3(0.0,-0.7,0.0),vec3(0.2,0.69+-0.09*cos(iTime*6.0),0.1),0.1),1.0)),\n                dFloor(p));\n               \t\n}\n\nvec2 dist(vec3 p){\n  \treturn infiniteIs(p,vec3(4.0,4.0,4.0));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 q = fragCoord.xy/iResolution.xy;\n    vec2 vPos = -1.0+2.0*q;\n\n\n  \n    vec3 camPos = vec3(1.0*mod(iTime*10.0,600.0),\n                       3.7+3.0*sin(iTime*0.8),\n                       0.0);\n  \n  \tvec3 camLook = vec3(camPos.x+30.0,\n\t\t\t\t\t\t1.7,\n                        camPos.z+0.0);\n    \n    vec3 camUp = vec3(0.0,\n                      1.0+0.0*cos(iTime),\n                      0.0*sin(iTime)); \n\n    vec3 vpn = normalize(camLook-camPos);\n  \tvec3 u = normalize(cross(camUp,vpn));\n  \tvec3 v = cross(vpn,u);\n\tvec3 vcv = camPos+vpn;\n  \tvec3 scrCoord = vcv+vPos.x*u*iResolution.x/iResolution.y+vPos.y*v;\n  \tvec3 scp = normalize(scrCoord-camPos);\n\n  \tconst vec3 e = vec3(0.01,0,0);\n  \tconst float maxDepth = 256.0;\n  \tvec2 d = vec2(0.002,0.0);\n  \tvec3 p;\n\n  \tfloat f = 1.0;\n  \tfor(int i=0; i<64; i++){\n    \tif ((abs(d.x) < .001) || (f > maxDepth)) \n      \t\tbreak;\n    \n    \tf += d.x;\n    \tp = camPos+scp*f;\n    \td = dist(p);\n  \t}\n  \n  \tif (f < maxDepth){\n        vec3 color;\n        if(d.y==1.0){\n    \t\tcolor = vec3(0.863, //Orange\n                         0.447,\n                         0.118);\n        }else{\n            color = vec3(0.454,\t//Blue\n                         0.522,\n                         0.745);\n        }\n   \n  \t\tvec3 n = vec3(d.x-dist(p-e.xyy).x,\n\t\t\t\t\t  d.x-dist(p-e.yxy).x,\n                  \t  d.x-dist(p-e.yyx).x);\n        \n    \tvec3 N = normalize(n);\n    \tfragColor=vec4(color*dot(N,normalize(camPos-p))-f/128.0,1.0);\n    }else\n    \tfragColor=vec4(0.0,0.0,0.0,1.0);\n    \n}","name":"","description":"","type":"image"}]}