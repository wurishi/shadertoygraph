{"ver":"0.1","info":{"id":"4sVyRt","date":"1522962402","viewed":226,"name":"Coffee cup caustic","username":"dpiponi","description":"Renders \"coffee cup\" caustic except it takes into account diffraction effects assuming wavelength of light is significant compared to size of coffee cup. Eg. for a coffee cup a fraction of a mm across.\nMouse x-coordinate determines wavelength.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["caustic","difraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hypot(float x, float y) {\n    return sqrt(x*x+y*y);\n}\n\n// Path length\nfloat l(float x, float y, float theta) {\n    return cos(theta)+hypot(x+cos(theta),y-sin(theta));\n}\n\nfloat pi = 3.14159265;\n//float wavelength = 0.03;\n\n// Integrate over all rays from (+infinity, 0)\n// bouncing once on cup interior.\n// theta parametrises the bounce point.\n// We're computing \"path integral\"\n// of exp(2*pi*iL/wavelength) where L is length of path\n// In this case it's just a 1D integral.\nfloat integrate(float x, float y) {\n    float tx = 0.0;\n    float ty = 0.0;\n    \n    int n = 2500;\n    float wavelength = 0.01+0.1*iMouse.x/iResolution.x;\n    for (int i = 0; i < 2500; ++i) {\n        float theta = -0.5*pi+pi*float(i)/float(n);\n        float d = hypot(x+cos(theta), y-sin(theta));\n        float s = 2.0*pi/wavelength*l(x, y, theta);\n        float ct = cos(theta);\n        float form = ct/d;\n        tx += cos(s)*form;\n        ty += sin(s)*form;\n    }\n\n    return hypot(tx, ty)/float(n);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 center = vec2(0.5*iResolution.x, 0.5*iResolution.y);\n    vec2 uv = fragCoord.xy-center;\n    uv = 2.0*uv/iResolution.y;\n    if (length(uv) >= 1.0) {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n        return;\n    }\n    float c = 2.0*integrate(uv.x, uv.y);\n    fragColor = vec4(c, c, c, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}