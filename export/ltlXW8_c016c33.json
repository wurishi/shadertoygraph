{"ver":"0.1","info":{"id":"ltlXW8","date":"1436471208","viewed":305,"name":"Merge Shape","username":"anastadunbar","description":"Inspired by PowerPoint.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","shapes","intersect","union","combine","subtract","combinations"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"float combine(float a,float b) {\n    return (a+b)-(a*b*2.);\n}\nfloat custom(float a, float b, float oo, float ao, float ob, float ab) {\n    //https://www.shadertoy.com/view/Xdj3Rh\n\treturn mix(mix(oo,ob,b),mix(ao,ab,b),a);\n}\n#define clamps(x) clamp(x,0.,1.)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n    vec2 position = fragCoord.xy / iResolution.xy;\n\tvec2 uv = vec2(position.x,((position.y-0.5)*(iResolution.y/iResolution.x))+0.5);\n    \n    float sharpness = 1000.;\n    vec2 ci_position = vec2(0.4+(cos(time*3.)*0.01),(sin(time*2.)*0.02)+0.5);\n    float circle1 = clamps(1.-((length(uv-ci_position)-0.2)*sharpness));\n    float outline1 = clamps(1.-((length(uv-ci_position)-0.2)*sharpness))-clamps(1.-((length(uv-ci_position)-0.19)*sharpness));\n    float circle2 = (clamps(1.-((length(uv-(1.-ci_position))-0.2)*sharpness)));\n    float outline2 = (clamps(1.-((length(uv-(1.-ci_position))-0.2)*sharpness)))-(clamps(1.-((length(uv-(1.-ci_position))-0.19)*sharpness)));\n    float show_outlines = clamps(outline1+outline2);\n    \n    float the_intersect = clamps(circle1*circle2); //a AND b\n    float the_combine = clamps((circle1+circle2)-(circle1*circle2*2.)); //a XOR b\n    float the_subtract = clamps(circle1-circle2); //a AND(!b)\n    float the_union = clamps(circle1+circle2); //a OR b\n    \n    float display_types = 0.; //To display these 4 combinations on screen\n    float time_types = mod(time/2.,4.);\n                           display_types = the_intersect; //Show first\n    if (time_types > 1.) { display_types = the_combine; }\n    if (time_types > 2.) { display_types = the_subtract; }\n    if (time_types > 3.) { display_types = the_union; } //Show last\n    if (position.y < 0.03) { display_types = step(uv.x,ceil(time_types)/4.); } //Draw bar\n    \n\tfragColor = vec4((display_types/1.5)+((1.-show_outlines)/5.),((1.-show_outlines)/5.),((1.-show_outlines)/5.),1.0);\n}","name":"","description":"","type":"image"}]}