{"ver":"0.1","info":{"id":"tlf3Rj","date":"1556892395","viewed":108,"name":"greenscreen_test","username":"Assertores","description":"test","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    //rgb(14%, 50%, 12%)\n    vec4 green = vec4(0.14, 0.5, 0.12, 1.0);\n\n    vec4 col1 = texture(iChannel0, 3.0*uv);\n    vec4 col2 = texture(iChannel1, uv);\n    vec4 col3 = texture(iChannel2, uv);\n    \n    col2 = mix(col3, col1, step(0.25, distance(col2, green))*sin(iTime));\n    col2 = mix(col1, col2, step(0.25, distance(col2, green)));\n    \n    //col2 = 1.0 - (1.0 - col2) * (1.0 - vec4(0.5));\n    //col2 = col2 * 0.5;\n    col2 = mix(col2 * 0.5,\n               1.0 - (1.0 - col2) * (0.5),\n               ((col2.r + col2.g + col2.b)/3.0)\n              );\n    \n    \n    \n    \n    /*if(col2.r < 0.35 && col2.b < 0.35 && col2.g > 0.3){\n        col2 = col1;\n    }*/\n    // Output to screen\n    fragColor = col2;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const vec3 colors[8] = vec3[8](\n        vec3(0.47, 0.76, 0.84),\n        vec3(0.27, 0.61, 0.66),\n        vec3(0.47, 0.76, 0.40),\n        vec3(0.76, 0.84, 0.27),\n        vec3(0.96, 0.84, 0.27),\n        vec3(0.96, 0.54, 0.20),\n        vec3(0.90, 0.40, 0.64),\n        vec3(0.76, 0.38, 0.65)\n    );\n    \n    float gridCount = 8.0;\n    float frequenc = 10.0;\n    float amplitude = 5.0;\n    \n    float x = fragCoord.y/(iResolution.y/gridCount);\n    \n    frequenc *= sin(iTime);\n    amplitude *= cos(iTime);\n    \n    x += sin(fragCoord.x/iResolution.y * frequenc) * amplitude;\n    \n    x = floor(x);\n    \n    x = mod(x, gridCount);\n    fragColor = vec4(colors[int(x)], 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}