{"ver":"0.1","info":{"id":"3l3fRB","date":"1612923210","viewed":87,"name":"formographik__002","username":"formographik","description":"wip","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["opartwip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A shader by Nicole Vella. (2021)\n// @nicole.vella.art\n// www.nicolevella.com\n//\n// Attribution 4.0 International (CC BY 4.0)\n// This work is licensed under a Creative Commons Attribution 4.0 International License. \n// http://creativecommons.org/licenses/by/4.0/\n\nvec2 createGrid(in vec2 st,in vec2 grid,out vec2 cells){\n    st*=grid;\n    cells=floor(st);\n    st=fract(st);\n    return st;\n}\n\nfloat drawRectangle(vec2 st,vec2 pos,vec2 size){\n    \n    float result=1.;\n    vec2 border=(1.-size)/2.200;\n    \n    st=st-pos+vec2(.5);\n    \n    result=step(border.x,st.x);\n    result*=step(border.x,1.-st.x);\n    result*=step(border.y,1.-st.y);\n    result*=step(border.y,st.y);\n    \n    return result;\n}\n\nvec2 animationPosition(float t){\n    \n    vec2 p1,p2,p3,p4;\n    \n    p1=vec2(1.,1.);\n    p2=vec2(0.,0.5);\n    p3=vec2(0.,0.);\n    p4=vec2(0.5,0.0);\n    \n    vec2 result;\n        \n    t*=4.;\n         \n    if(t<1.){\n        result=mix(p1,p2,smoothstep(0.,1.,fract(t)));\n    } else if(t<2.){\n        result=mix(p2,p3,smoothstep(0.,1.,fract(t)));\n    } else if(t<3.){\n        result=mix(p3,p4,smoothstep(0.,1.,fract(t)));\n    } else if(t<4.){\n        result=mix(p4,p1,smoothstep(0.,1.,fract(t)));\n    }\n   \n    return result;\n}\n    \n#define drawCircle(st,pos,size)smoothstep(0.,10./iResolution.y,size-length(pos-st))\n    \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n  vec2 st=fragCoord.xy/iResolution.xy;\n    st.x*=iResolution.x/iResolution.y;\n\n    vec2 cells;\n    st=createGrid(st,vec2(6.,6.),cells);\n\n    float circSize=.5;\n    vec2 size=vec2(.25,.25);\n    vec2 pos=vec2(.5,.5);\n\n    pos=animationPosition(fract(iTime*.04));\n\n    vec3 white=vec3(1.);\n    vec3 black=vec3(0.);\n    vec3 canvas=vec3(0.);\n\n    // bg rect\n    float rect=drawRectangle(st,vec2(.5),vec2(1.));\n    float circleC=drawCircle(st,pos,circSize);\n    float circleCC=drawCircle(st,-pos+1.,circSize);\n\n    if (mod(cells.x+cells.y,2.)==1.) {\n        canvas=mix(canvas,black,rect);\n        canvas=mix(canvas,white,circleC);\n        canvas=mix(canvas,white,circleCC);\n     }else{\n        canvas=mix(canvas,white,rect);\n        canvas=mix(canvas,black,circleC);\n        canvas=mix(canvas,black,circleCC);\n     }\n\n     fragColor=vec4(canvas,1.);\n    }","name":"Image","description":"","type":"image"}]}