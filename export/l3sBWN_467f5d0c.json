{"ver":"0.1","info":{"id":"l3sBWN","date":"1728708291","viewed":46,"name":"Smoke Test Shader 1","username":"gunner","description":"Shader test","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Bend(float t, float start, float end, float blur) {\n\n    float step1 = smoothstep(start-blur, start+blur, t);\n    float step2 = smoothstep(end+blur, end-blur, t);\n    \n    return step1*step2;\n\n}\n\nfloat Rect(vec2 uv, float left, float right, float top, float bottom, float blur) {\n\n    float bend1 = Bend(uv.x, left, right, blur);  \n    float bend2 = Bend(uv.y, top, bottom, blur);\n    \n    return bend1*bend2;\n\n}\n\nfloat Remap01( float a, float b, float t) {\n\n    return (a-t) / (a-b);\n}\n\nfloat Remap( float a, float b, float c, float d, float t) {\n    \n    return Remap01(a, b, t) * (d-c) + c;\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    float t = iTime; \n    t *= 5.;\n    uv = uv - 0.5;\n    uv *= 2.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    \n    float x = uv.x;\n    float m = sin(t+x*8.)*.2;\n    float y = uv.y*2.-m;\n   \n    \n\n    float mask = 0.;\n   \n    vec3 col = vec3(0.);\n    \n    float blur = Remap(-5.8, 5.8, -.5, 1.2, x);\n    blur = pow(blur*4., 3.);\n    \n    mask = Rect(vec2(x , y), -5.8, 5.8, -0.1, 0.1, blur);\n    \n    \n    col = vec3(1.000,1.000,1.000)*mask;\n    \n    \n    \n    \n    fragColor = vec4(col , 1.);\n    \n    \n    \n    \n}","name":"Image","description":"","type":"image"}]}