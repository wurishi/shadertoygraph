{"ver":"0.1","info":{"id":"3tVGDt","date":"1580221930","viewed":95,"name":" FM SynthV2","username":"jorge2017a1","description":" FM SynthV2","likes":2,"published":1,"flags":8,"usePreview":0,"tags":["fmsynthv2"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\nSound text copied from\nhttps://www.shadertoy.com/view/MtyXRW\n*/\n\n\n// --- access to the image of ascii code c\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): texture( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.))\n//#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureLod( iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), \\\n//                                                                               log2(length(fwidth(U/16.*iResolution.xy))) )\n\n#define C(c) U.x-=.5; T+= U.x<.0||U.x>1.||U.y<0.||U.y>1. ?vec4(0): textureGrad(iChannel3, U/16. + fract( vec2(c, 15-c/16) / 16.), dFdx(U/16.),dFdy(U/16.) )\n\n\n#define initMsg vec4 T = vec4(0)\n#define endMsg  return length(T.yz)==0. ? 0. : T.x\n\nfloat message(vec2 U)\n{ \n    // to alter in the icon with the alter message\n    vec4 T = vec4(0);   // or: initMsg;\n    C(83);\n    C(111);\n    C(117);\n    C(110);\n    C(100);\n    C(32);\n    C(105);\n    C(110); // message \"Sound in\"\n    return length(T.yz)==0. ? -1. : T.x; // or: endMsg;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    //  if (iResolution.y<200.) to display only in the icon \n    if (iResolution.y<2000.) \n    {\n        float c=message((fragCoord/iResolution.y-vec2(.1,.2))*8.);\n        if(c>=0.1)\n        {\n            fragColor=vec4(c);return;\n        }\n    }\n\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n///Created by xactac in 2019-10-27\n//modificado por jorge el dia  2019-01-28\n\nstruct Note {\n    float f;\n    float r;\n    float a;\n    float on;\n    float off;\n    vec2 vol;\n};\n\n//#define n 2\n#define n 15\n\n#define repeat 6.\n\nfloat fn(float x)\n{\n    return x * abs(x);\n}\n\nfloat synth(float f, float r, float time, float a)\n{\n    float o = r * f;\n    // A 440 Hz wave that attenuates quickly overt time\n    return fn(sin(6.2831*f*time+sin(6.2831*o*time))) * exp(-time*a);\n}\n\nfloat sq(float x )\n{\n    return x*x;\n}   \n\n//--------------------------------------------\nfloat NoteToFrequency(float octave, float nota ) \n{\n//\n//''    Calculate the frequency of any note!\n//''    frequency = 440Ã(2^(n/12))\n//''\n//''    n = 0 Is A4\n//''    N=1 is A#4\n//''    etc...\n//''\n//''    notes go like so...\n//''    0  = A\n//''    1  = A#\n//''    2  = B\n//''    3  = C\n//''    4  = C#\n//''    5  = D\n//''    6  = D#\n//''    7  = E\n//''    8  = F\n//''    9  = F#\n//''    10 = G\n//''    11 = G#\n//''*/\n  \n    \n\treturn  440.0 *  sq(( (octave - 4.0) * 12.0 + nota) / 12.0);\n}   \n    \n//----------------------------------------------\n\nvec2 mainSound( in int samp,float time)\n{\n    time = mod(time, repeat);\n    \n    \n    \n    Note[n] song = Note[n](Note(440., 0.5, 2., 0., 3., vec2(1., 1.)),\n       \t\t\t           Note(480., 0.5, 2., 1., 4., vec2(1., 1.)),\n                           Note(480.0 * 2., 1.6, 3., 1.5, 3., vec2(1., 1.)),\n\t                       Note(480.0 * 3., 0.6, 3., 1.5, 3., vec2(1., 1.)),\n    \t\t\t\t\t\tNote(440., 1., 3., 2.1, 3., vec2(1., 1.)),\n    \t\t\t\t\t    Note(NoteToFrequency(1., 1.), 0.5, 2., 2., 3., vec2(1., 1.)),\n                            Note(NoteToFrequency(1., 2.), 0.5, 2.5, 2.5, 3., vec2(1., 1.)),\n                            Note(NoteToFrequency(1., 1.), 0.5, 3., 3.5, 4., vec2(1., 1.)),\n                            Note(NoteToFrequency(2., 1.), 1.5, 3.5, 4., 5., vec2(1., 1.)),\n                            Note(NoteToFrequency(4., 3.), 1.5, 4., 4.3, 5., vec2(1., 1.)),\n                            Note(NoteToFrequency(2., 1.), 1.5, 4.3, 4.6, 5., vec2(1., 1.)),\n                            Note(NoteToFrequency(4., 3.), 1.5, 4.6, 4.9, 5., vec2(1., 1.)),\n                            Note(NoteToFrequency(2., 1.), 1.5, 4.9, 5.2, 5., vec2(1., 1.)),\n                            Note(NoteToFrequency(4., 3.), 0.5, 5.2, 5.5, 4., vec2(1., 1.)),\n                            Note(NoteToFrequency(2., 4.), 0.5, 5.2, 5.8, 4., vec2(1., 1.))  );\n    \n    \n \n    \n    \n    vec2 acc = vec2(0.);\n    \n    for (int i = 0; i < n; i++) {\n        Note c = song[i];\n        if ((c.on <= time) && (c.off >= time)) {\n            acc += c.vol * synth(c.f, c.r, time - c.on, c.a);\n        }\n    }\n//  return vec2(synth(440., 0.5, time, 2.));\n    return acc*0.09;\n}","name":"Sound","description":"","type":"sound"}]}