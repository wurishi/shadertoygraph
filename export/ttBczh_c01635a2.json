{"ver":"0.1","info":{"id":"ttBczh","date":"1593691779","viewed":319,"name":"Sinusoids Wave 2D - v4: bump","username":"FabriceNeyret2","description":"variant of [url]https://shadertoy.com/view/3lScRR[/url]\nWith bump map ( with constrant-contrast blending over 7x7 neighborhood )\n\nSee analytic derivatives version here: [url]https://www.shadertoy.com/view/wljyz1[/url]\n","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["bump","2tweets","trochoid","golf","gerstner","sinusoidswave"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// variant of https://shadertoy.com/view/wtSczh\n// variant of https://shadertoy.com/view/3lScRR\n// variant of https://shadertoy.com/view/ttlcDs\n\n\nvoid mainImage(out vec4 O, vec2 u) {\n    vec2 R = iResolution.xy*.1, V = u/R.y,  C,\n    U = V*5. + V.y* cos( iTime + V.x*.56 + 11.*O.xw );\n    float d, o = 0., t = o;\n    for (int k=0; k<49; k++)\n        C = U - round((U+vec2(k%7-3,k/7-3))*.2) / .2 ,\n        V = C * inverse(transpose(mat2(dFdx(U),dFdy(U)) ))/R.y,\n        d = max(0.,1.-.05*dot(C,C)), d*=d*d*d,\n        o += sin( 36.*length(V) -0.*iTime +(U-.2*C).x ) * d   ,\n        t += d*d;\n    t = ( .5 + .1*o/sqrt(t) )* smoothstep(1.,-1.,U.y -37.);\n    O += sqrt( .4 + dot( vec2(dFdx(t),dFdy(t)) , cos(2.*iTime+vec2(0,11)) ) );\n}","name":"Image","description":"","type":"image"}]}