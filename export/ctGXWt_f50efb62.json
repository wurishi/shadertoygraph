{"ver":"0.1","info":{"id":"ctGXWt","date":"1686438403","viewed":50,"name":"attempts at clouds","username":"hammy","description":"my first attempt at shaders, some basic clouds","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["clouds"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nfloat sdCircle( vec2 p, float r )\n{\n    return length(p) - r;\n}\n\nfloat sdCloud(vec2 p, float speed) {\n    p = p + vec2(mod(iTime * speed, 7.0), 0);\n    float v = 0.0;\n    v += (1.0-step(0.7, sdBox(p, vec2(0.4, 0.02)) * 3.5));\n    v += (1.0-step(0.1, sdCircle(p + vec2(-0.25, -0.2), 0.15)));\n    v += (1.0-step(0.1, sdCircle(p + vec2(0.26, -0.2), 0.15)));\n    v += (1.0-step(0.1, sdCircle(p + vec2(0, -0.3), 0.15)));\n    return v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n\tvec2 uv = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n\n    // Time varying pixel color\n    //float v = sdCutDisk(uv, 0.3, 0.25);\n    float v = sdCloud(uv + vec2(-3, 0), 0.5) + \n        sdCloud(uv + vec2(-3.8, 0.7), 0.7) +\n        sdCloud(uv + vec2(-2.7, -0.4), 0.65) +\n        sdCloud(uv + vec2(-4.7, -0.75), 0.4) +\n        sdCloud(uv + vec2(-3.2, 0.4), 0.4);\n    if (v == 0.0) {\n        fragColor = vec4(0.529,0.808,0.922,1.0);\n    } else {\n        fragColor = vec4(1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}