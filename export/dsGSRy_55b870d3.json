{"ver":"0.1","info":{"id":"dsGSRy","date":"1707142093","viewed":27,"name":"30-60-90 mosaic","username":"Mathtician","description":"Displays an image as a mosaic of 30-60-90 triangles","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","postprocessing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const ivec2 inDims = ivec2(7, 12);\nconst ivec2 outDims = ivec2(2, 3);\nconst ivec2 t[84] = ivec2[84](\nivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(1, 0), \nivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 1), \nivec2(0, 0), ivec2(0, 0), ivec2(0, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 1), \nivec2(0, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 1), ivec2(1, 1), \nivec2(0, 1), ivec2(1, 0), ivec2(1, 0), ivec2(1, 0), ivec2(1, 1), ivec2(1, 1), ivec2(1, 1), \nivec2(0, 1), ivec2(0, 1), ivec2(0, 1), ivec2(1, 0), ivec2(1, 1), ivec2(1, 1), ivec2(1, 1), \nivec2(0, 1), ivec2(0, 1), ivec2(0, 1), ivec2(0, 2), ivec2(1, 1), ivec2(1, 1), ivec2(1, 1), \nivec2(0, 1), ivec2(0, 1), ivec2(0, 1), ivec2(0, 2), ivec2(0, 2), ivec2(0, 2), ivec2(1, 1), \nivec2(0, 1), ivec2(0, 1), ivec2(0, 2), ivec2(0, 2), ivec2(0, 2), ivec2(0, 2), ivec2(1, 2), \nivec2(0, 1), ivec2(0, 2), ivec2(0, 2), ivec2(0, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2), \nivec2(0, 1), ivec2(0, 2), ivec2(0, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2), \nivec2(0, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2), ivec2(1, 2));\n\nvoid findTriCoord(in ivec2 intCoord, out ivec2 triCoord) {\n    ivec2 rectPos = intCoord/inDims;\n    \n    int mirror = (rectPos.x^rectPos.y)&1;\n    \n    ivec2 inPos = intCoord%inDims;\n    inPos.x = mirror*(inDims.x-1)+(1-2*mirror)*inPos.x;\n    \n    ivec2 outPos = t[inPos.y*inDims.x+inPos.x];\n    outPos.x = mirror*(outDims.x-1)+(1-2*mirror)*outPos.x;    \n    \n    triCoord = rectPos*outDims+outPos;\n}\n\nvoid sampleImage(in ivec2 triCoord, out vec4 fragColor) {\n    vec2 speed = vec2(60.0, 60.0);\n    ivec2 size = ivec2(100, 70);\n    ivec2 center = ivec2(iTime*speed)%size;\n    ivec2 z = triCoord-center;\n    z = z*z;\n    if (z.x+z.y < 144) {\n    fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    } else {\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    ivec2 intCoord = ivec2(fragCoord.xy);\n    ivec2 triCoord;\n    findTriCoord(intCoord, triCoord);\n    sampleImage(triCoord, fragColor);\n}","name":"Image","description":"","type":"image"}]}