{"ver":"0.1","info":{"id":"dtGyRm","date":"1700119249","viewed":212,"name":"Unstable Fractal","username":"seven_dc","description":"small fractal marcher.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["fractal","raymarch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // put 0,0 in the center\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n       \n    // camera   \n    vec3 ro = vec3(0, 1, -1);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1));\n    \n    float d = 0., t = iTime; // distance & time\n    vec3 p; // point\n    \n    // \"Raymarcher\"\n    for(int i=0; i<10; i++) { \n        p = ro + rd * d;\n         vec2 fuv = p.xy*(1.01+t*.01) * (15.-t*.01);\n         for (float i=0.; i < 10.; i+= 1.) {\n            fuv = abs( fuv ) / dot(fuv, fuv ) - 1.65 - .1+t*.0001;\n            fuv = fuv * length(fuv) + length(fuv);\n        }\n        d+=length(fuv) - p.z*.2;\n     };\n   \n \n    fragColor = vec4(d/20.*vec3(.9,.3,.5),1.);\n}","name":"Image","description":"","type":"image"}]}