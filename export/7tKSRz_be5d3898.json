{"ver":"0.1","info":{"id":"7tKSRz","date":"1640101173","viewed":91,"name":"skinwater","username":"jneen","description":"its a hack but it works kinda","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["hack"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float a){float s=sin(a),c=cos(a);return mat2(c,s,-s,c);}\n#define nsin(X) (.5+.5*sin(X))\n#define gmix(A,B,Q) (A)*pow((B)/(A),Q)\n#define tri(X) abs(sin(X))\nvec3 water = vec3(.2, .7, .9);\nvec3 sky = vec3(.8, .9, 1.);\nvec3 orange = vec3(.7, .25, .2);\n#define T (iTime*.5)\n//abs(2.*fract(X)-1.)\nfloat G;\n\nfloat nse(vec2 p) {\n  return fract(48.7365*dot(p, vec2(1.010111, 8.99876)));\n}\n\nfloat w(vec3 p) {\n    float back = -p.z+100.;\n    float bot = -p.y;\n    G+=1.;\n    p.z += sin(p.x);\n    p.yz *= rot(-radians(25.));\n    p.xy *= rot(.2*sin(.3*T));\n    p.xz *= rot(T);\n\n\n    \n    p.z -= mod(T*10., 100.);\n    \n    float per = mix(3., 17., nsin(.1*T));\n\n    float z = mod(p.z, per)-.5*per;\n    float id = p.z-z;\n    p.z = z;\n    p.x += 10.*sin(id);\n    p.xy *= rot(radians(90.));\n    \n    p.xz *= rot(gmix(0.1, 2., tri(T*.1))*(p.y-20.));\n    p.x += .3;\n    \n    float W = length(p.xz)-.2;\n    W = mix(bot, W, .65);\n    //W -= .01*nse(p.xz);\n    return min(back,W);//.01*nse(p.xz);\n}\n\n\nvec3 d,O,N,C,H;\nfloat D,c;\nvoid ray(){D=.1;for (int i=0;i<400;i++){H=O+d*D;c=w(H);D+=c*.2;if(c<.001||D>10000.)break;}}\nvoid norm(){mat3 k=mat3(H,H,H)-mat3(.001);N=normalize(w(H)-vec3(w(k[0]),w(k[1]),w(k[2])));}\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    O = vec3(0,mix(5.,4.,.2*sin(T)),-3);\n    d = normalize(vec3(uv,1));\n    ray();\n    float glow = G,reflglow=0.;\n    if (false) {\n      C = vec3(1);\n    }\n    else {\n        norm();\n        float diff = length(.5+.5*sin(1.5*N))/sqrt(3.);\n        \n        O = H;\n        d = N;\n        //ray();\n        //N=vec3(0); if(D<10.)norm();\n        float refl = length(.5+.5*sin(1.5*N))/sqrt(3.);\n        \n        C = diff*orange;\n    }\n    \n    C += pow(.001*glow+.001*reflglow, 2.)*water;\n\n    // Output to screen\n    fragColor = vec4(sqrt(C),1.0);\n}","name":"Image","description":"","type":"image"}]}