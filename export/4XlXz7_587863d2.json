{"ver":"0.1","info":{"id":"4XlXz7","date":"1709281313","viewed":61,"name":"Visualwave Spectrum Cornea","username":"PG_TG","description":"Description","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\n// WAVE DRAWING FUNCTION\nvec4 wave(vec2 uv, float thic, float xoff, float yoff, float freq, float amp, float blur, float speed, vec3 colour) {\n    return vec4(\n        colour, \n        smoothstep(\n            .1 / iResolution.y, \n            -abs(uv.x * blur), \n            abs(yoff + (amp/2. * cos(uv.x * freq * PI + (iTime * speed) + xoff)) - uv.y) - thic)\n    );\n}\n\n// CIRCLE FUNCTION\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 col, float smt) {\n    float value = distance(pos, uv);\n\n    if (smt > 1.0) // Smooth edges mode\n        value = smoothstep(value, value + smt, rad);\n    else     // Hard edges mode\n        value = step(value, rad);\n    \n    return vec4(col, value);\n}\n\n// RING FUNCTION\nvec4 ring(vec2 uv, vec2 pos, float rad, vec3 col, float thic) {\n    float value = distance(pos, uv);\n    value = step(value, rad) - step(value + thic, rad);\n    return vec4(col, value);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Aspect Ratio Fix\n    uv = uv * 2. - 1.;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec4 background = vec4(0.);\n    vec4 foreground;\n    \n    // Colour Waves\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = col * 0.1;\n    for(float i = 0.; i < 100.; i += 1.0) {\n        background = mix(background, foreground, foreground.a);\n        foreground = wave(\n            uv,\n            0.01 + i/10000.,\n            0.0,\n            0.75 * i/1000. + 0.5,\n            i/100.,\n            i/250. * tan(iTime),\n            i/1000.,\n            iTime/1000. * cos(iTime)/10.,\n            col\n        );\n        col = col * 1.025;\n    }\n    \n    col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = col * 0.1;\n    for(float i = 0.; i < 100.; i += 1.0) {\n        background = mix(background, foreground, foreground.a);\n        foreground = wave(\n            uv,\n            0.01 + i/10000.,\n            PI,\n            0.75 * i/1000. - 0.5,\n            i/100.,\n            i/250. * tan(iTime),\n            i/1000.,\n            iTime/1000. * cos(iTime)/10.,\n            col\n        );\n        col = col * 1.025;\n    }\n    \n    col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    col = col * 0.1;\n    for(float i = 0.; i < 100.; i += 1.0) {\n        background = mix(background, foreground, foreground.a);\n        foreground = wave(\n            uv,\n            0.01 + i/10000.,\n            0.0,\n            0.75 * i/1000. * -sin(iTime),\n            i/50.,\n            i/150. * cos(iTime),\n            i/1000.,\n            iTime/1000. * sin(iTime)/10.,\n            col\n        );\n        col = col * 1.025;\n    }\n    \n    // Circle Cutout\n    background = mix(background, foreground, foreground.a);\n    foreground = ring(\n        uv,\n        vec2(0.),\n        2.5,\n        vec3(0.),\n        1.\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = ring(\n        uv,\n        vec2(0.),\n        0.75,\n        vec3(0.),\n        -0.5\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = ring(\n        uv,\n        vec2(0.),\n        0.95,\n        vec3(0.),\n        -0.5\n    );\n    background = mix(background, foreground, foreground.a);\n    foreground = ring(\n        uv,\n        vec2(0.),\n        0.99,\n        vec3(0.),\n        -0.5\n    );\n\n\n    // Output to screen\n    fragColor = mix(background, foreground, foreground.a);\n}","name":"Image","description":"","type":"image"}]}