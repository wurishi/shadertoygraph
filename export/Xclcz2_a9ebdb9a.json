{"ver":"0.1","info":{"id":"Xclcz2","date":"1721326936","viewed":124,"name":"Mode7 (my first shader)","username":"AlgumCorrupto","description":"my first shader!","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["pseudo3d","snes","mode7"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fovHalf = 3.14159 / 4.0;\nvec2 clipFar1 = vec2(0.05, 0.05);\nvec2 clipNear1 = vec2(0.001, 0.001);\nvec2 clipFar2 = vec2(0.05, 0.05);\nvec2 clipNear2 = vec2(0.01, 0.01);\n\n\n// taken from https://www.shadertoy.com/view/ftlSRS\nvec2 pixelate(vec2 resolution, float renderedPixelSize, vec2 uv) {\n    // pixelate code from: https://luka712.github.io/2018/07/01/Pixelate-it-Shadertoy-Unity/    \n    float onePixelSizeX = 1.0 / resolution.x;\n    float onePixelSizeY = 1.0 / resolution.y;\n    \n    float cellSizeX =  renderedPixelSize * onePixelSizeX;\n    float cellSizeY = renderedPixelSize * onePixelSizeY;\n    \n    float x = cellSizeX * floor(uv.x / cellSizeX);\n    float y = cellSizeY * floor(uv.y / cellSizeY);\n    return vec2(x, y);\n}\n\n\n\nvec4 mode7(vec2 position, bool perspective,vec2 coord, vec2 clipFar, vec2 clipNear, float angle)\n{\n    \n    float fovMin = angle - fovHalf;\n    float fovMax = angle + fovHalf;\n    vec2 trigMin = vec2(cos(fovMin), sin(fovMin));\n    vec2 trigMax = vec2(cos(fovMax), sin(fovMax));\n    vec2 far1 = position + trigMin * clipFar;          // 4 points that define the frustum\n    vec2 far2 = position + trigMax * clipFar;          // 4 points that define the frustum\n    vec2 near1 = position + trigMin * clipNear;        // 4 points that define the frustum\n    vec2 near2 = position + trigMax * clipNear;         // 4 points that define the frustum\n    float modifier = 1.57;\n    if(perspective)\n    {\n        modifier = 1.57;\n    }\n    \n\n    float sampleWidth = (coord.x/iResolution.x);\n    float sampleDepth = coord.y / (iResolution.y / modifier);\n    vec2 newCoords = pixelate(iResolution.xy, 4.0, vec2(sampleWidth, sampleDepth));\n    vec2 start, end;\n    if(!perspective)\n    {\n        start = near1 +(far1 - near1) / ( 1.0 - newCoords.y);\n        end = near2 +(far2 - near2) / ( 1.0 - newCoords.y);\n    }\n    else {\n        start =(far1 - near1) / (1.0 - newCoords.y) + near1;\n        end = (far2 - near2) / (1.0 - newCoords.y) + near2;\n    }\n\n    vec2 sampl = start + (end - start) * newCoords.x;\n    vec4 color;\n    if(!perspective)\n    {\n        color = texture(iChannel0, sampl);\n    }\n    else {\n        color = texture(iChannel1, sampl);\n    }\n    \n    return color;\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float angle = iMouse.x * 0.01;\n    vec2 position = vec2(iTime * 0.1, 0.5);\n    vec2 uv = (fragCoord.xy/iResolution.xy);\n    uv = pixelate(iResolution.xy, 4.0, uv.xy);\n    vec4 color;\n    if(uv.y < 0.615)\n    {   \n        color = mode7(position.xy, false, fragCoord, clipFar1, clipNear1, angle);\n    }\n    else{\n        color = mode7(vec2(0.0), true, fragCoord, clipFar2, clipNear2, angle);\n    }\n    \n    vec4 fogColor = vec4(1.0, 0.3, 0.15, 1.0);\n    \n    vec4 smth1 =  1.7 * (fogColor * (1.0 - smoothstep(uv.y, 0.615, 0.625)));\n    vec4 smth2 = 1.7 * (fogColor * (1.0 - smoothstep(uv.y, 0.615, 0.55)));\n    fragColor = (0.9*(color * 0.6) + smth1 + smth2);\n}\n\n","name":"Image","description":"","type":"image"}]}