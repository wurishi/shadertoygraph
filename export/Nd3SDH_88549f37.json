{"ver":"0.1","info":{"id":"Nd3SDH","date":"1638334436","viewed":175,"name":"spiral spiral pendulum","username":"HaleyHalcyon","description":"a","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["spiral"],"hasliked":0,"parentid":"sddSRM","parentname":"Fork weird litt haleyhalcy 279"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TAU (6.283185307)\n#define SCALE_ANGLE 12.\n#define SCALE_DIST 1.\n#define TILE_X 0.\n#define TILE_Y 1.\n#define HEX(x) (vec3((x >> 16) & 255, (x >> 8) & 255, x & 255) / 255.)\n#define HALFPI (1.57079632679)\n#define ROT(theta) mat2(cos(theta+vec4(0,-HALFPI,HALFPI,0)))\n\nfloat spiral(float x) {\n    return step( 0.5, 1. - abs(1. - 2. * fract(x)));\n}\n\nvec3 colorize(float x) {\n    return mix(\n        HEX(0xc02030),\n        mix(\n            HEX(0xffd010),\n            mix(\n                HEX(0x30a040),\n                HEX(0x2060a0),\n                step(0.75, x)\n            ),\n            step(0.5, x)\n        ),\n        step(0.25, x)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Make sure this loops\n    float time = fract(iTime / 2.0);\n    // Normalized pixel coordinates\n    vec2 uv = ( 2.* fragCoord - iResolution.xy ) / length(iResolution.xy);\n    uv = ((uv - vec2(0, 0.7)) * ROT(0.7 * sin(time * HALFPI*4.)) + vec2(0, 0.8)) * ROT(-0.25 * sin(0.7 + time * HALFPI*4.));\n    // use log distance for perspective/tunnel effect\n    float dist = log(uv.x * uv.x + uv.y * uv.y);\n    float angle = atan(uv.y, uv.x) / TAU;\n    \n    // prepare grid\n    float distS = dist * SCALE_DIST + 0.1 * cos(time * TAU);\n    float distSign = sign(mod(distS, 2.) - 1.);\n    vec2 uv_ = fract(vec2(\n        distS,\n        angle * SCALE_ANGLE + time * 2. * distSign\n    )) - 0.5;\n    \n    float smallDist = -0.5 + log2(length(uv_) + 0.05) - log2(1.0 + 0.05);\n    float smallSpirals = spiral(\n        time * 4. * distSign +\n        smallDist * 0.75 +\n        (atan(uv_.y, uv_.x) / TAU) * -1.\n    );\n    \n    // spiral\n    float spiral = fract(\n        time * 1. +\n        dist * 0.125 +\n        angle * 1.\n    );\n    float sSpiral = mod(floor(spiral * 4.), 2.);\n    \n    // blend\n    vec3 col = mix(vec3(sSpiral), colorize(spiral), smallSpirals);\n    col = mix(vec3(1.-sSpiral), col, step(smallDist, -1.5));\n    \n    // Output to screen\n    fragColor = vec4(\n        col, 1.0\n    );\n}","name":"Image","description":"","type":"image"}]}