{"ver":"0.1","info":{"id":"WdlBDX","date":"1589186368","viewed":200,"name":"2D LED Spectrum Plu - Visualiser","username":"oskycar","description":"Spectrum show ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["spectrum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n2D LED Spectrum - Visualiser\nBased on Led Spectrum Analyser by: simesgreen - 27th February, 2013 https://www.shadertoy.com/view/Msl3zr\n2D LED Spectrum by: uNiversal - 27th May, 2015\nCreative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n*/\nfloat centerx = 0.5;\nfloat speed = 0.035;\nvec4 dst=vec4(216.0/255.0,78.0/255.0,255.0/255.0,1.0);\nvec4 src=vec4(115.0/255.0,78.0/255.0,255.0/255.0,1.0);\nvec4 getgradientcolor(vec2 uv){\n\tfloat m=0.0;\n    float c = centerx;\n    if(uv.x>centerx)m=1.0;\n    float d = (uv.x - m*centerx)/centerx;\n    vec4 src1=src;\n    vec4 dst1=dst;\n    if(uv.x>centerx){\n        src1=dst;\n        dst1=src;\n    }\n    float r = d * dst1.r + (1.0-d)*src1.r;\n    float g = d * dst1.g + (1.0-d)*src1.g;\n    float b = d * dst1.b + (1.0-d)*src1.b;\n    vec4 col = vec4(r,g,b,1.0);  \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    // quantize coordinates\n    const float bands = 20.0;\n    const float segs = 60.0;\n    vec2 p;\n    p.x = floor(uv.x*bands)/bands;\n    p.y = floor(uv.y*segs)/segs;\n\n    // read frequency data from first row of texture\n    float fft  = texture( iChannel0, vec2(p.x,0.0) ).x;\n    fft=(sqrt(fft*fft*fft));\n    // led color\n    //vec3 color = mix(vec3(0.0, 2.0, 0.0), vec3(2.0, 0.0, 0.0), sqrt(uv.y));\n\tvec3 color = getgradientcolor(uv).rgb;\n    // mask for bar graph\n    float mask = (p.y < fft) ? 1.0 : 0.0;\n\n    // led shape\n    vec2 d = fract((uv - p) *vec2(bands, segs)) - 0.5;\n    float led = smoothstep(0.5, 0.35, abs(d.x)) *\n                smoothstep(0.5, 0.35, abs(d.y));\n    vec3 ledColor = led*color*mask;\n\n    // output final color\n    fragColor = vec4(ledColor, led);\n    vec4 imcolor = texture(iChannel1,uv);\n    fragColor =  vec4(fragColor.rgb +imcolor.rgb,1.0);\n}\n","name":"Image","description":"","type":"image"}]}