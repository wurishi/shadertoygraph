{"ver":"0.1","info":{"id":"7sGcRt","date":"1655367272","viewed":60,"name":"horrible cubic bezier spline","username":"JuanDeager","description":"big time","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sucks"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 bezierCubic(vec2 p0, vec2 p1, vec2 p2, vec2 p3, float t)\n{\n    float t1 = 1.0 - t;\n    return t1*t1*t1*p0 + 3.*t1*t1*t*p1 + 3.*t1*t1*t*t*p2 + t*t*t+p3;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    vec2 p0 = vec2(0, 0);\n    vec2 p1 = vec2(.5, 0);\n    vec2 p2 = vec2(1., .5);\n    vec2 p3 = vec2(1., 1.);\n    \n    vec2 curve = bezierCubic(p0, p1, p2, p3, uv.x);\n\n    // I don't know why I had to subtract 1 from the curve\n    if (distance(uv.y, curve.y-1.) < .01)\n        col = vec3(1);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}