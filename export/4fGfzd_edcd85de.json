{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).rgb;\n    //col = texture(iChannel1,uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"},{"outputs":[{"channel":0,"id":"4dXGR8"}],"inputs":[{"channel":0,"type":"buffer","id":"4dXGR8","filepath":"/media/previz/buffer00.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"buffer","id":"XsXGR8","filepath":"/media/previz/buffer01.png","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    // Normalized coordinates\n    vec2 uv0 = fragCoord / iResolution.xy;\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Adjust aspect ratio\n    float aspect = iResolution.x / iResolution.y;\n    uv.x = (uv.x - 0.5) * aspect + 0.5;\n\n    // Center the UV coordinates around the screen's center\n    vec2 center = vec2(0.5);//*sin(iTime)*cos(iTime);\n    vec2 centeredUV = uv - center;\n\n    // Scaling factor\n    float scale = 0.2+0.5*abs(sin(2.1+iTime/10.));\n    if (iMouse.z>0.) scale = iMouse.y/iResolution.y;\n\n    // Rotation angle in radians\n    float angle = floor(iTime)+iTime/8.;  // Rotates over time\n    if (iMouse.z>0.) angle = mix(0.,2.*3.14,iMouse.x/iResolution.x);\n\n    // Rotation matrix\n    mat2 rotation = mat2(\n        cos(angle), -sin(angle),\n        sin(angle),  cos(angle)\n    );\n\n    // Apply scale and rotation\n    vec2 transformedUV = rotation * (centeredUV / scale) + center;\n\n    float scrollSpeed = 0.04;\n    vec2 pushedUV = mix(uv0, center, scrollSpeed);\n    vec4 pushedColor = texture(iChannel0, pushedUV);\n\n    // Sample the texture\n    vec4 texColor = texture(iChannel1, transformedUV);\n    bool outside = transformedUV.x < 0.|| transformedUV.y < 0.|| transformedUV.x > 1.|| transformedUV.y > 1.;\n    //outside = !( distance(uv,center) < 0.2 ); // circle\n    if (outside) texColor.rgb = vec3(0.) + pushedColor.rgb;\n\n    //texColor.rgb = abs(vec3(uv.x));\n\n    // Output the final color\n#if 0\n    if (uv.x<0. || uv.y<0. || uv.x>1. || uv.y>1.) {\n        fragColor.rgb = vec3(0.);\n        return;\n    }\n#endif\n    fragColor = texColor;\n}\n","name":"Buffer A","description":"","type":"buffer"},{"outputs":[{"channel":0,"id":"XsXGR8"}],"inputs":[{"channel":0,"type":"texture","id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"#define PI 3.14159\n\nvec2 tileUV(vec2 uv, float nTiles, bool mirrorX, bool mirrorY) {\n    vec2 tiledUV = uv*nTiles;\n    if (mirrorX && (tiledUV.x = mod(tiledUV.x, 2.)) >= 1.) tiledUV.x = 1. - fract(tiledUV.x);\n    if (mirrorY && (tiledUV.y = mod(tiledUV.y, 2.)) >= 1.) tiledUV.y = 1. - fract(tiledUV.y);\n\n    return tiledUV;\n}\n\n// Random number generator function\nfloat random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(iTime + 12.9898, 78.233))) * 43758.5453123);\n}\n\n// Define a rotation matrix\nmat2 rotate(float angle) {\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, -s, s, c);\n}\n\n// Shadertoy: Psychedelic Rapid Shifting Effect\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    float time = iTime * 3.0; // Time factor to animate rapidly\n\n    // Reverse scrolling direction\n    float scanline = -time*0.2; \n\n    vec3 color;\n    float r = fract(iTime);\n    // this produces neat effects\n    float offs = fract(sin(iTime))*1.;\n    vec3 ot = texture(iChannel1, uv*offs).rgb;\n    ot = vec3(random(uv+iTime), random(uv+1.+iTime), random(uv-1.+iTime));\n\n    // Apply rotation to UV coordinates\n    vec2 rotatedUV1 = rotate(sin(iTime/4.)*1.*PI/2.0) * uv + vec2(scanline, 0.);\n    rotatedUV1 = tileUV(rotatedUV1, 2., false, true);\n    vec2 rotatedUV2 = rotate(0.*PI/2.0) * uv + vec2(scanline, 0.);\n    //rotatedUV2 = tileUV(rotatedUV2, 2., false, true);\n\n#if 0\n    // Sample the texture with rotated coordinates\n    float m4 = mod(iTime,6.);\n    bool doA = mod(iTime,2.)<1. || int(m4)==5;\n    bool doB = mod(iTime,2.)>1. || int(m4)==2;\n    // TODO: fade in and out of each?\n    if (doA)\n        color += texture(iChannel0, rotatedUV1).rgb *ot;\n    if (doB)\n        color += 1.0 - texture(iChannel0, rotatedUV2).rgb *ot;\n#else\n    float t = mod(iTime/4.,2.);\n    float mixFactor = t < 1.0 ? t : 2.0 - t;\n    vec3 ca = texture(iChannel0, rotatedUV1).rgb *ot;\n    vec3 cb = 1.0 - texture(iChannel0, rotatedUV2).rgb *ot;\n    color += mix(ca,cb, mix(0.1,0.9,mixFactor));\n#endif\n\n    //color = texture(iChannel0, vec2(scanline+uv.y, uv.x)).rgb;\n    //color += 1.-texture(iChannel0, vec2(scanline+uv.x, uv.y)).rgb;\n    //color *= ot;\n\n    //if (mod(float(iFrame),8.)==0.) color = 1.-color;\n    color *= mix(0.25,1., fract(iTime/10.));\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Buffer B","description":"","type":"buffer"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":true,"mFlagMusicStream":false},"info":{"id":"4fGfzd","date":"1734418017","viewed":37,"name":"wall cats","username":"bombblob","description":"T̷̡͖̫̻̖̤̈́̽̒̓̚H̴̱̙̩͇̮̽͛͐È̶͙̩̱̇Ŷ̸̨̡̠̫̉̑͐͛̚ ̴͕͒͂̃̊A̶̛͍̳̓̐̐ͅR̵͉͖͈̓Ȩ̶̢̊̏͌͒͌͛I̴̢͕͍̪̲͈̒̽̍͗̀Ņ̴̬͕͎̖͉̄ ̶̢̛͚͉͇͇T̷̞̒̌̄̑̚H̸̘͖̙͈̺͑̃̈̈́̋̅E̷̢͈̮͓̥͂̽͐̆W̷̨̌̏̿͊Ä̸͎̺̭́̀̉͑̇͝L̷̢̠͔̬̝̉͐̋͆̔Ļ̵̠͓̭̋S̴̨͙̲̳͍̱̈́͆̃̔̑͑\n\n\n\ninspired by https://www.youtube.com/watch?v=NWK0YOCylmk","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["illusion"],"hasliked":0,"parentid":"","parentname":""}}