{"ver":"0.1","info":{"id":"M3fBWn","date":"1728251636","viewed":12,"name":"First shader tutorial","username":"Axias","description":"Simple procedural animation","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tutorial","proceduralanimation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n\nvec3 palette(float t){\n    vec3 a = vec3(0.925, 0.620, 0.610);\n    vec3 b = vec3(0.776, 0.716, 0.148);\n    vec3 c = vec3(0.684, 0.108, 1.203);\n    vec3 d = vec3(0.022, 1.142, 3.332);\n    \n    return a + b*cos( 6.28318 * (c*t*d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord)\n    {\n        vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n        vec2 uv0 = uv;\n        vec3 finalColor = vec3(0.0);\n    \n        for (float i = 0.0; i < 4.0; i++)\n        {\n        uv = fract(uv * 1.4) - 0.5;\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i*.4 + iTime*.4);\n\n        d = sin(d*8. - iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.01 / d, 1.5);\n\n        finalColor += col* d;\n        }\n        fragColor = vec4(finalColor, 1.0);\n    }","name":"Image","description":"","type":"image"}]}