{"ver":"0.1","info":{"id":"MtKczh","date":"1535388708","viewed":167,"name":"Elliptic Curve Bounce","username":"aaecheve","description":"Animation of continuous version of ellipctic curve y^3=x^2+7, used for generating public/private key pairs in Bitcoin and other Cryptocurrencies.\nhttps://en.bitcoin.it/wiki/Secp256k1\n\nModulo factor N oscillates to create animation.\n ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["bounce","curve","ellipctic","bitcoin","secp256k1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float SCALE_FACTOR = 30.0;\nfloat EPSILON = 1.0;\n\nvec3 CURVE_COLOR = vec3(0,1,0);\n\nfloat moduloN = 5.0;\n\n\nvec2 scale(vec2 p) {\n\treturn vec2(SCALE_FACTOR, SCALE_FACTOR*iResolution.y/iResolution.x)*(p - 0.5);\n}\n\nbool ellipticCurveMod(vec2 p) {\n    float t = mod(p.y*p.y - p.x*p.x*p.x - 7.0, moduloN);\n\treturn t < EPSILON && t > -EPSILON;\n}\n\nvec3 drawCurve(vec2 pix, vec3 col) {\n\tif(ellipticCurveMod(pix))\n        col = CURVE_COLOR;\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouse = iMouse.xy/iResolution.xy;\n    \n    vec2 pix = scale(uv);\n    vec2 p = scale(mouse);\n    \n    //float freq = texture( iChannel0, vec2( 0.01, 0.25 ) ).x;\n\t\n    moduloN = SCALE_FACTOR * (sin(iTime) + 1.1);\n    \n    vec3 col = vec3(0,0,0);\n    col = drawCurve(pix, col);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}