{"ver":"0.1","info":{"id":"wdsBRn","date":"1587615712","viewed":236,"name":"Cubemap utils","username":"rory618","description":"Functions for using an x, y, faceID format for sampling and saving data into the cubemap buffer.\nBased on https://www.khronos.org/opengl/wiki/Cubemap_Texture. Local origin is at the top right of each square when unfolded for some reason.","likes":8,"published":1,"flags":32,"usePreview":0,"tags":["2d","3d","data"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rr","filepath":"/media/a//media/previz/cubemap00.png","previewfilepath":"/media/ap//media/previz/cubemap00.png","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 I )\n{\n    \n    float size = texture(iChannel1, vec2(0)).x;\n    vec3 rayDir = NetXYToRayDir(I/size*1024.);\n    \n    if(rayDir==vec3(0)){\n        O = vec4(0);\n    } else {\n    \tO = texture(iChannel0, rayDir);\n    }\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dX3Rr","channel":0}],"code":"\n\nvoid mainCubemap( out vec4 fragColor, in vec2 fragCoord, in vec3 rayOri, in vec3 rayDir )\n{\n    float size = texture(iChannel1, vec2(0)).x;\n    \n    vec2 mouseXY = iMouse.xy/size*1024.;\n    vec2 netXY = RayDirToNetXY(rayDir);\n    float l = length(mouseXY-netXY);\n    \n    vec3 col = 0.5 + 0.5*rayDir;\n\n    fragColor = vec4(col,1.0);\n    \n    ivec3 XYFace = RayDirToXYFace(rayDir);\n    float d0 = float(abs(XYFace.x-XYFace.y/2))/40.;\n    float d1 = float(abs(fragCoord.x/2.-fragCoord.y))/40.;\n    fragColor = mix(fragColor,vec4(1),max(0.,1.-d0));\n    fragColor = mix(fragColor,vec4(0),max(0.,1.-d1));\n    fragColor = mix(fragColor,vec4(0.5),max(0.,1.-l/100.));\n}","name":"Cube A","description":"","type":"cubemap"},{"inputs":[],"outputs":[],"code":"\n\nvec3 XYFaceToRayDir(ivec3 p){\n    vec2 x = vec2(p-512) + 0.5;\n           if (p.z==0){     return vec3( 512,-x.y,-x.x);\n    } else if (p.z==1){     return vec3( x.x, 512, x.y);\n    } else if (p.z==2){     return vec3( x.x,-x.y, 512);\n    } else if (p.z==3){     return vec3(-512,-x.y, x.x);\n    } else if (p.z==4){     return vec3( x.x,-512,-x.y);\n    } else if (p.z==5){     return vec3(-x.x,-x.y,-512);\n    } else return vec3(0);\n}\nivec3 RayDirToXYFace(vec3 dir){\n    \n    if        (dir.x>max(abs(dir.y),abs(dir.z))){\n        dir /= dir.x/512.;\n        return ivec3(-dir.z+512., -dir.y+512., 0);\n    } else if (dir.y>max(abs(dir.z),abs(dir.x))){\n        dir /= dir.y/512.;\n        return ivec3(dir.x+512., dir.z+512.,1);\n    } else if (dir.z>max(abs(dir.x),abs(dir.y))){\n        dir /= dir.z/512.;\n        return ivec3(dir.x+512.,-dir.y+512.,2);\n    } else if (-dir.x>max(abs(dir.y),abs(dir.z))){\n        dir /=-dir.x/512.;\n        return ivec3(dir.z+512.,-dir.y+512.,3);\n    } else if (-dir.y>max(abs(dir.z),abs(dir.x))){\n        dir /=-dir.y/512.;\n        return ivec3(dir.x+512.,-dir.z+512.,4);\n    } else if (-dir.z>max(abs(dir.x),abs(dir.y))){\n        dir /=-dir.z/512.;\n        return ivec3(-dir.x+512.,-dir.y+512.,5);\n    } else return ivec3(0,0,-1);\n}\nvec3 NetXYToRayDir(vec2 p){\n    vec2 major = floor(p/1024.);\n    vec2 minor = 1024.-mod(p,vec2(1024.));\n    \n    int face=-1;\n    if(major==vec2(0,1)){         face = 0;    \n    } else if(major==vec2(1,1)){  face = 2;    \n    } else if(major==vec2(2,1)){  face = 3;    \n    } else if(major==vec2(3,1)){  face = 5;    \n    } else if(major==vec2(1,0)){  face = 4;    \n    } else if(major==vec2(1,2)){  face = 1;\n    }\n    vec2 xy = minor - .5;\n    return XYFaceToRayDir(ivec3(xy,face));\n}\nvec2 RayDirToNetXY(vec3 rayDir){\n    ivec3 XYFace = RayDirToXYFace(rayDir);\n    if(XYFace.z==0){         return 1024.-vec2(XYFace.xy) + vec2(0,1)*1024.;\n    } else if(XYFace.z==1){  return 1024.-vec2(XYFace.xy) + vec2(1,2)*1024.;\n    } else if(XYFace.z==2){  return 1024.-vec2(XYFace.xy) + vec2(1,1)*1024.;\n    } else if(XYFace.z==3){  return 1024.-vec2(XYFace.xy) + vec2(2,1)*1024.;\n    } else if(XYFace.z==4){  return 1024.-vec2(XYFace.xy) + vec2(1,0)*1024.;\n    } else if(XYFace.z==5){  return 1024.-vec2(XYFace.xy) + vec2(3,1)*1024.;\n    } else return vec2(0);\n}","name":"Common","description":"","type":"common"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//Calculate size in pixels of one cubemap face when drawn onto the screen\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float size = min(iResolution.y/3., iResolution.x/4.);\n    fragColor = vec4(size);\n}","name":"Buffer A","description":"","type":"buffer"}]}