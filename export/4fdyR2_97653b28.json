{"ver":"0.1","info":{"id":"4fdyR2","date":"1730901918","viewed":34,"name":"Scalable checkerboard grid","username":"MackFitz","description":"My take on an issue demonstrated by Suboptimal Engineer: https://www.youtube.com/watch?v=gJFMzORWuSQ - a bit shorter than his solution, but would not win me a golf match.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["grid","checkerboard","fract"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 stripe(in float a) { // float a defines the stripe's axial orientation\n  float s = .4 + .3*cos(iTime/3.); // float s defines the scale factor of the grid, animating between .1 and .7\n  return round(fract(vec3(a/s))); // the gradient is repeated infinitely along its axis; then, anything below .5 is rounded down to 0. and everything above - to 1 \n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 uv = (fragCoord - iResolution.xy/2.)/iResolution.y;\n\n  vec3 h = stripe(uv.x); // vertical stripes repeated across the x axis\n  vec3 v = stripe(uv.y); // horizontal stripes repeated across the y axis\n\n  fragColor = vec4(abs(h - v), 1); // for short, fragColor = vec4(abs(round(fract(vec3(uv.x/.3))) - round(fract(vec3(uv.y/.3)))), 1);\n  \n  /* All permutations:\n\n  abs(1 - 0) = 1, ergo white\n  abs(0 - 1) = abs(-1) = 1, ergo also white\n  abs(0 - 0) = 0, ergo black\n  abs(1 - 1) = 0, ergo also black\n\n  */\n\n}\n","name":"Image","description":"","type":"image"}]}