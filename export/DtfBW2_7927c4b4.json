{"ver":"0.1","info":{"id":"DtfBW2","date":"1697061963","viewed":30,"name":"practice#01","username":"JohnnyDekkers","description":" ","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n\n    vec2 p = uv - vec2(-0.1, 0.0);\n    p *= 1.2;\n    \n    vec3 col = mix(vec3(1., 0.3, 0.1), vec3(1., .8, 0.3), sqrt(p.y + 0.5));\n    \n    float r = 0.3 + 0.15 * cos(atan(p.y, p.x) * 8. + 10. * p.x + iTime * 2.);\n    \n    col *= smoothstep(r, r+0.005, length(p));\n\n    r = 0.03;\n    r += 0.001 * cos(p.y * 200.);\n    r += exp(-90. * (p.y + 0.5));\n    \n    col *= 1. - (1. - smoothstep(r, r+0.005, abs(p.x - 0.3 * sin(3. * p.y)))) * (1. - smoothstep(0., 0.01, p.y));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}