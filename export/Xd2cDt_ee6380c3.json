{"ver":"0.1","info":{"id":"Xd2cDt","date":"1494372439","viewed":185,"name":"RaymarchingSphere","username":"gyabo","description":"Rehabilitation...","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["raymarchingsphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 rot(vec2 p, float a) {\n\treturn vec2(\n\t\tp.x * cos(a) - p.y * sin(a),\n\t\tp.x * sin(a) + p.y * cos(a));\n\t\n}\n\nfloat map(vec3 p) {\n\tfloat tp0 = 4.0 - dot(abs(p), vec3(0,1,0));\n\tfloat tp1 = 4.0 - dot(abs(p), vec3(1,0,0));\n\tfloat ts = length(mod(p, 2.0) - 1.0) - 0.5;\n\tfloat tx = length(mod(p.yz, 2.0) - 1.0) - 0.3;\n\tfloat ty = length(mod(p.zx, 2.0) - 1.0) - 0.3;\n\tfloat tz = length(mod(p.xy, 2.0) - 1.0) - 0.3;\n    float txs = length(mod(p.yz, 4.0) - 2.0) - 1.9;\n\tfloat tys = length(mod(p.zx, 4.0) - 2.0) - 1.9;\n\tfloat tzs = length(mod(p.xy, 4.0) - 2.0) - 1.9;\n    float txp = length(mod(p.yz, 0.2) - 0.1) - 0.04;\n\tfloat typ = length(mod(p.zx, 0.2) - 0.1) - 0.04;\n\tfloat tzp = length(mod(p.xy, 0.2) - 0.1) - 0.04;\n    float t = 10000.0;\n\tt = min(tp0, t);\n\tt = min(tp1, t);\n\tt = max(-tx, t);\n\tt = max(-ty, t);\n\tt = max(-tz, t);\n    t = max(-txp, t);\n\tt = max(-typ, t);\n\tt = max(-tzp, t);\n    t = max(-txs, t);\n\tt = max(-tys, t);\n\tt = max(-tzs, t);\n    t = min(ts, t);\n\tt = max(-txp, t);\n\tt = max(-typ, t);\n\tt = max(-tzp, t);\n\tt = max(-tx, t);\n\tt = max(-ty, t);\n\tt = max(-tz, t);\n    return t;\n}\n\nvec3 getnormal(vec3 p){\n    float d = 0.001;\n        return normalize(vec3(\n        map(p + vec3(  d, 0.0, 0.0)) - map(p + vec3( -d, 0.0, 0.0)),\n        map(p + vec3(0.0,   d, 0.0)) - map(p + vec3(0.0,  -d, 0.0)),\n        map(p + vec3(0.0, 0.0,   d)) - map(p + vec3(0.0, 0.0,  -d))\n    ));\n}\n\nvec4 getcolor(vec2 uv, float z) {\n    uv.x += z;\n    float rad = 0.3;\n\t\n\tvec3 dir = normalize(vec3(uv, 1.0));\n\tvec3 pos = vec3(rad, rad, iTime * 3.0 + sin(iTime) * 2.0);\n    pos.xy = rot(pos.xy, iTime * 0.5);\n    dir.xz = rot(dir.xz, iTime * 0.2);\n    dir.yz = rot(dir.yz, iTime * 0.1);\n    \n\tfloat t = 0.0;\n\tfor(int i = 0; i < 100; i++) {\n\t\tfloat temp = map(dir * t + pos);\n\t\tif(temp < 0.005) break;\n\t\tt += temp;\n\t}\n\tvec3 ip = dir * t + pos;\n\tvec3 V = normalize(-ip);\n\tvec3 N = getnormal(ip);\n\tvec3 L = normalize(vec3(3,4,-1));\n\tvec3 H = normalize(L + V);\n\tfloat Kd = max(dot(L, N), 0.0);\n\tfloat Ks = pow(max(dot(H, N), 0.0), 16.0);\n\tvec4 D = vec4(Kd) * vec4(1,0.3,0.3,1);\n\tvec4 S = vec4(Ks) * vec4(1,1,0.3,1);\n\tvec4 F = vec4(t * 0.1) * vec4(0.4,0.7,2,1);\n\treturn vec4((D + S + F).xyz + dir * 0.2, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    float cod = mod(fragCoord.y, 2.0);\n    if(mod(fragCoord.x + cod, 2.0) > 0.5) {\n        fragColor = vec4(0.0);\n        return;\n    }\n\n\n\tvec2 uv = ( fragCoord.xy / iResolution.xy )  * 2.0 - 1.0;\n    uv.y *= iResolution.y / iResolution.x;\n\tfloat Z = 0.007;\n\tvec4 R = getcolor(uv, -Z);\n\tvec4 G = getcolor(uv, 0.0);\n\tvec4 B = getcolor(uv, Z);\n\tfragColor.x = R.x;\n\tfragColor.y = G.y;\n\tfragColor.z = B.z;\n\tfragColor.w = 1.0;\n\tfloat v = fragColor.x * 0.298912 + fragColor.y *  0.586611 + fragColor.z * 0.114478;\n\tfragColor.xyz *= mix(vec3(0.5,0.6,0.9), vec3(0.5,0.6,0.9).zyx, v);\n    fragColor.xyz *= clamp(fragColor.xyz, vec3(0.0), vec3(1.0));\n\tfragColor.xyz *= clamp(1.0 - dot(uv * 0.7, uv), 0.0, 1.0);\n}","name":"Image","description":"","type":"image"}]}