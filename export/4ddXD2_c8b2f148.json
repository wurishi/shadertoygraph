{"ver":"0.1","info":{"id":"4ddXD2","date":"1461611835","viewed":353,"name":"Gray-Scott music visualisation","username":"piotrekli","description":"Gray-Scott music visualisation test. (my first attempt)\nOn Firefox it breaks when the Shadertoy tab is not visible.","likes":1,"published":1,"flags":96,"usePreview":0,"tags":["2d","diffusion","reactiondiffusion","reaction","grayscott"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define DEBUG\n\nfloat sampleLightY(sampler2D channel, vec2 fragCoord)\n{\n    float light = 0.0;\n#   define S(DX, DY, WEIGHT) light += texture(channel, (fragCoord+vec2(DX, DY))/iResolution.xy).y*WEIGHT;\n    S( 0,  1, -0.2)\n    S( 0, -1,  0.2)\n    S( 1,  0,  0.2)\n    S(-1,  0, -0.2)\n#   undef S\n    return light;\n}\n\nvec3 hsv2rgb(vec3 hsv)\n{\n    vec3 rgb;\n    float h = mod(hsv.x * 6.0, 6.0);\n    float q = h-float(int(h));\n    if      (h < 1.0) rgb = vec3( 1.0,    q,  0.0);\n    else if (h < 2.0) rgb = vec3(1.-q,  1.0,  0.0);\n    else if (h < 3.0) rgb = vec3( 0.0,  1.0,    q);\n    else if (h < 4.0) rgb = vec3( 0.0, 1.-q,  1.0);\n    else if (h < 5.0) rgb = vec3(   q,  0.0,  1.0);\n    else if (h < 6.0) rgb = vec3( 1.0,  0.0, 1.-q);\n    rgb = hsv.z*(1.0-hsv.y*(1.0-rgb));\n    return rgb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float uValue = texture(iChannel0, uv).x;\n    float light = sampleLightY(iChannel0, fragCoord)*30.0;\n\tfragColor = vec4(hsv2rgb(vec3(1.0-uValue*0.3-0.18,\n                                  light > 0.0 ? 1.-light : 1.,\n                                  light > 0.0 ? 1. : 1.+light)), 1.0);\n    #ifdef DEBUG\n    vec2 xy = vec2(texture(iChannel1, vec2(0.15, 1.0)).x, texture(iChannel1, vec2(0.35, 1.0)).x);\n    if (length(uv-xy) < 0.01) fragColor = vec4(1.0, 0.8, 0.0, 1.0);\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":3,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DV (0.25+1.25*texture(iChannel2, vec2(0.25, 0.25)).x) /* scale */\n#define F (0.019+0.025*texture(iChannel2, vec2(0.15, 0.25)).x) /* feed parameter, see http://mrob.com/pub/comp/xmorphia/ */\n#define K (0.056+0.009*texture(iChannel2, vec2(0.35, 0.25)).x) /* kill parameter, see http://mrob.com/pub/comp/xmorphia/ */\n#define SPEED 0.5 /* timestep */\n\nvec2 random(vec2 uv)\n{\n    return texture(iChannel3, uv).xy;\n}\n\nvec2 cr(vec2 xy)\n{\n  \tif (xy.x < 0.0) xy.x += iResolution.x;\n    if (xy.x >= iResolution.x) xy.x -= iResolution.x;\n    if (xy.y < 0.0) xy.y += iResolution.y;\n    if (xy.y >= iResolution.y) xy.y -= iResolution.y;\n    return xy;\n}\n\n#define S(DX, DY, WEIGHT) laplacian += texture(channel, cr(fragCoord+vec2(DX, DY))/iResolution.xy).xy*WEIGHT;\nvec2 laplacian(sampler2D channel, vec2 fragCoord)\n{\n    vec2 laplacian = vec2(0);\n    S( 0,  0, -1.0)\n    S( 0,  1,  0.2)\n    S( 0, -1,  0.2)\n    S( 1,  0,  0.2)\n    S(-1,  0,  0.2)\n    S( 1,  1,  0.05)\n    S( 1, -1,  0.05)\n    S(-1,  1,  0.05)\n    S(-1, -1,  0.05)\n    return laplacian;\n}\n#undef S\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 prevColor = texture(iChannel0, uv);\n    float u = prevColor.x;\n    float v = prevColor.y;\n    if (iFrame < 100)\n    {\n        vec2 rand = random(uv);\n        u = rand.x;\n        v = rand.y*rand.y*rand.y*rand.y*rand.y*rand.y*rand.y*rand.y*rand.y;\n    }\n    else\n    {\n        float rate = u * v * v;\n        vec2 diffusion = laplacian(iChannel0, fragCoord);\n        float deltaU = diffusion.x*DV*2. - rate + F*(1.0-u);\n        float deltaV = diffusion.y*DV*1. + rate - v*(F+K);\n        float dt = SPEED;\n        u += deltaU * dt;\n        v += deltaV * dt;\n    }\n    fragColor = vec4(u, v, 0.0, 0.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ldfSzs","filepath":"https://soundcloud.com/johannes-bornl-f/neptune","previewfilepath":"https://soundcloud.com/johannes-bornl-f/neptune","type":"musicstream","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    fragColor = mix(texture(iChannel1, uv), texture(iChannel0, uv), mix(texture(iChannel0, uv).x, 1.0, 0.8));\n}","name":"Buf B","description":"","type":"buffer"}]}