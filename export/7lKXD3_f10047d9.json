{"ver":"0.1","info":{"id":"7lKXD3","date":"1641459646","viewed":55,"name":"plaid cd","username":"walls","description":"first shader. wonky cd maybe?","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circles","alpha","concentric","plaid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circleAlpha(vec2 center, vec2 pos, float radius)\n{\n    float d = length(center - pos) - radius;\n    float t = clamp(d, 0., 1.);\n    return 1. - t;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy;\n    vec2 center = iResolution.xy * .5;\n    float radius = 0. == iMouse.x ? center.y * .8 : iMouse.x;\n    float outerWidth = 4.;\n    float innerWidth = 5.;\n    float centerWidth = 37.;\n\n    // Colors\n    vec3 backgroundColor = vec3(0.3);\n    vec3 outerColor = vec3(.1);\n    vec3 innerColor = vec3(.9);\n    vec3 insidesColor = vec3(sin(uv*.02)*cos(iTime), cos(5.*cos(iTime)));\n    vec3 centerColor = vec3(192./256.); //silver\n\t\n    // Blends\n    float a1 = circleAlpha(center, uv, radius + outerWidth);\n    float a2 = circleAlpha(center, uv, radius);\n    float a3 = circleAlpha(center, uv, radius - innerWidth);\n    float a4 = circleAlpha(center, uv, centerWidth);\n    \n    // Mix\n    vec3 color = \n        mix(backgroundColor,\n            mix(outerColor,\n                mix(innerColor,\n                    mix(insidesColor, centerColor, a4), a3), a2), a1);\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}