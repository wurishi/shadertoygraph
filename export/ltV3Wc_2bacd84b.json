{"ver":"0.1","info":{"id":"ltV3Wc","date":"1477298861","viewed":816,"name":"gameboytest","username":"RebelMoogle","description":"Pixelates and gameboyifies as post effect. :)\n\nNeed to work on the lighter values, images seem to bright... ","likes":11,"published":1,"flags":0,"usePreview":1,"tags":["retro","gameboy","luminance","hue","pixelated","colorchange","nostalgia"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 darkest =  vec3(0.0588235, 0.219608, 0.0588235); float lumDarkest = 0.1392156862745098;\nvec3 darker = vec3( 0.188235, 0.384314, 0.188235); float lumDarker = 0.28627450980392155;\nvec3 lighter = vec3( 0.545098, 0.67451, 0.0588235); float lumLighter = 0.3666666666666667;\nvec3 lightest = vec3(  0.607843, 0.737255, 0.0588235); float lumLightest = 0.39803921568627454;\n\nfloat CalculateHue(vec4 color, float minCol, float maxCol)\n{\n    float hue = 0.0;  \n    hue = hue*60.0;\n    \n    if(hue < 0.0)\n    {\n        hue += 360.0;\n    }\n    \n    if(abs(maxCol - color.r) < 0.000001)\n    {\n        // If Red is max, then Hue = (G-B)/(max-min)\n        hue = (color.g - color.b)/(maxCol-minCol);\n    }\n   \telse if(abs(maxCol - color.g) < 0.000001)\n    {\n        // If Green is max, then Hue = 2.0 + (B-R)/(max-min)\n        hue = 2.0 + (color.b - color.r)/(maxCol-minCol);\n    }\n    else\n    {\n        // If Blue is max, then Hue = 4.0 + (R-G)/(max-min)\n        hue = 4.0 + (color.r - color.g)/(maxCol-maxCol);\n    }\n    \n    return hue;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv *= 100.0;\n    uv = vec2(floor(uv.x), floor(uv.y));\n    uv *= 0.01;   \n    \n    \n\tfragColor = texture(iChannel0, uv);\n    float maxCol = max(max(fragColor.r, fragColor.g), fragColor.b);\n    float minCol = min(min(fragColor.r, fragColor.g), fragColor.b);\n    float lum = (minCol + maxCol)/2.0;\n    \n    float darkestDist = abs(lumDarkest - lum); //length(darkest - fragColor.rgb);\n    float darkerDist = abs(lumDarker - lum); //length(darker - fragColor.rgb);\n    float lighterDist = abs(lumLighter - lum); //length(lighter - fragColor.rgb);\n    float lightestDist = abs(lumLightest - lum); //length(lightest - fragColor.rgb);\n    \n    float minDist = min(min(min(darkestDist, darkerDist), lighterDist), lightestDist);\n    \n    if( abs(minDist - darkestDist) < 0.000001)\n    {\n        fragColor = vec4(darkest, 1.0);\n    }\n    else if(abs(minDist - darkerDist) < 0.000001)\n    {\n        fragColor = vec4(darker, 1.0);\n    }\n    else if(abs(minDist - lighterDist) < 0.000001)\n    {\n        fragColor = vec4(lighter, 1.0);\n    }\n    else\n    {\n        fragColor = vec4(lightest, 1.0);\n    }\n    \n   \n}\n               \n               \n\n","name":"Image","description":"","type":"image"}]}