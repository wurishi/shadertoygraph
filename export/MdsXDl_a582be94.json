{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"music","id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}}],"code":"const float Pi = 3.14159;\n\nvec2 q;\n\nfloat circle(float rad, float size){\n\n    return (1.0-smoothstep(rad+size,rad+size+0.01, length(q))) * smoothstep(rad, rad + 0.01, length(q)) ; \n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 p = fragCoord.xy / iResolution.xy;\n    p.x *= iResolution.x/iResolution.y;\n    p.x -= 0.39;\n\n    float fft  = texture( iChannel0, vec2(0.02,0.0) ).x; \n    float fft2  = texture( iChannel0, vec2(0.9,0.0) ).x; \n    \n    float fff = (fft-0.4)*1.6;\n    float fff2 = (fft2)*2.6;\n    \n    float tim = iChannelTime[0];\n    \n    q = p - vec2(0.5, 0.5);\n    \n    vec3 col = vec3(0.14, 0.14, 0.14); // gray\n\n    \n    vec3 col2 = vec3( 0.96, 0.47, 0.43); // salmon\n    vec3 col3 = vec3( 0.42, 0.18, 0.10); // brown\n    vec3 col4 = vec3( 0.20, 0.13, 0.15); // Purple\n    vec3 col5 = vec3( 0.87, 0.50, 0.18); // orange\n    vec3 col6 = vec3( 0.63, 0.67, 1.0); // blue\n    \n    col *= step(0.31+(fft*0.45)-0.3, length(q));\n          \n    col2 *= circle(0.2,0.06 + pow(0.01, (fft*0.9)-0.2));    \n    \n    float angle = atan( q.y, q.x ) + Pi;\n    float mod = sqrt(q.y*q.y+q.x*q.x);\n    \n    float angle2 = angle + (sin(tim*2.0)*3.0)+fff  ;\n\n    vec2 qr;\n    qr.y = sin(angle2)*mod;\n    qr.x = cos(angle2)*mod;\n            \n    float t = (atan( qr.y, qr.x ) + Pi) / (2.0 * Pi);\n    \n    col2 *= 1.0- smoothstep(0.12+fff, 0.125+fff, t);\n    col2 *= smoothstep(0.0, 0.005, t);\n\n    col += col2;\n\n\tfloat colm = fff*0.3;\n    \n    col3 += vec3( fff2*colm, fff2*colm, fff2*colm); \n    col3 *= circle(0.145+fff2*0.01, 0.03);\t\n    col += col3;\n\n    \n    angle2 = angle + (sin(tim*1.0)*6.0)+fff  ;\n\n    qr.y = sin(angle2)*mod;\n    qr.x = cos(angle2)*mod;\n            \n    t = (atan( qr.y, qr.x ) + Pi) / (2.0 * Pi);\n\n    col4 *= 2.5*fff2;\n    col4 *= circle(0.03, 0.08);\t\n    col4 *= 1.0-smoothstep(0.2+fff2*0.8, 0.205+fff2*0.8, t);    \n    col4 *= smoothstep(0.0, 0.005, t);\n    col += col4;\n\n    col5 *= 1.0 - smoothstep(0.01+fff*0.04, 0.018+fff*0.04, length(q));\t\n    col += col5;\n\t\n    \n    \n    vec3 colcol = col6;\n    for(int i=0;i<6;i++) {\n    \n        col6 = colcol;\n        angle2 = (angle + fff*3.0 + ((2.0*Pi/6.0)*(float(i)))) + sin(tim*float(i)) ;\n\n        qr.y = sin(angle2)*mod;\n        qr.x = cos(angle2)*mod;\n\n        float t = (atan( qr.y, qr.x ) + Pi) / (2.0 * Pi);\n        col6 *= circle(0.0, 3.5);\t\n        col6 *= 1.0-smoothstep(0.03*fff*1.0, 0.035*fff*1.5, t);    \n        col6 *= smoothstep(0.0, 0.01, t);\n        col += col6;\n    }\n    \n    fragColor = vec4(col, 1.0);\n    \n   \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdsXDl","date":"1408043218","viewed":403,"name":"Circle Beat","username":"shotgan","description":"My first attempt on creating one shader scene.\n","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["circles","arcs"],"hasliked":0,"parentid":"","parentname":""}}