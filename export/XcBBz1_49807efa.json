{"ver":"0.1","info":{"id":"XcBBz1","date":"1724803587","viewed":20,"name":"Noise Shadey","username":"jcraw","description":"noise","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI     3.14159265\n\nfloat N21(vec2 p) {\n    return fract(sin(p.x * 100.  +p.y * 6574.)*5000.);\n}\n\nfloat SmoothNoise(vec2 uv) {\n    vec2 local_uv = fract(uv * 10.);\n    vec2 id = floor(uv * 10.);\n    \n    // an implementation of smoothstep \n    local_uv = local_uv * local_uv * (3. - 2.*local_uv);\n    \n    float botStart = N21(id);\n    float botEnd = N21(id + vec2(1, 0));\n    float bot = mix(botStart, botEnd, local_uv.x);\n    \n    float topStart = N21(id + vec2(0, 1));\n    float topEnd = N21(id + vec2(1,1));\n    float top = mix(topStart, topEnd, local_uv.x);\n    \n    float mixed_square = mix(bot, top, local_uv.y);\n    return mixed_square;\n}\n\nfloat SmoothNoise2(vec2 uv) {\n    float smoothNoise = SmoothNoise(uv);\n    \n    //  add octaves, double the frequency, half the amplitude and then normalize \n    smoothNoise += SmoothNoise(uv * 2.) * .5; // double the frequency, half the amplitude\n    smoothNoise += SmoothNoise(uv * 4.) * .25;\n    smoothNoise += SmoothNoise(uv * 8.) * .125;\n    smoothNoise += SmoothNoise(uv * 16.) * .0625;\n   // smoothNoise += SmoothNoise(uv * 32.) * .03125;\n    smoothNoise /= 1.9375;   // normalize by adding up all the components\n    return smoothNoise;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec3 col = vec3(0);\n    \n    vec2 scroll_uv = uv - vec2(iTime*.1, 0);\n    \n    float smoothNoise = SmoothNoise2(scroll_uv) +.1;\n    float smoothNoise2 = SmoothNoise2(uv * 2.) * .7;\n    float smoothNoise3 = SmoothNoise2(uv * 4.) * .4;\n    \n    //col.b = 0.;\n   //col.rgb = vec3(smoothNoise);\n   col.g = smoothNoise;\n   col.r = smoothNoise2;\n   col.b = smoothNoise3;\n    \n   // col.rg = local_uv;\n    \n    \n    // Output to screen\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}