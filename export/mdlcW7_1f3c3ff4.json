{"ver":"0.1","info":{"id":"mdlcW7","date":"1686888658","viewed":43,"name":"interdimensional trampoline","username":"logic23","description":"boing?","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bounce"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    // [[0.731 1.098 0.192] [0.358 1.090 0.657] [1.077 0.360 0.328] [0.965 2.265 0.837]]\n\n\n    vec3 a = vec3(0.5,0.5,0.5);\n    vec3 b = vec3(0.5,0.5,0.5);\n    vec3 c = vec3(1.0,1.,1.);\n    vec3 d = vec3(0.263,0.416,0.557);\n    \n    return a + b*cos(6.28318*(c*t+d));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime;\n     vec2 uv = gl_FragCoord.xy / iResolution.xy * 2.0 - 1.0;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for (float i = 0.0; i < 2.; i++){\n    \n        // uv = fract(uv*2.)-0.5;\n        uv.x = uv.x * iResolution.x/iResolution.y;\n\n\n        float d =-length(uv*sin(0.4*t - uv)) * exp(length(uv0)) * 2.*cos(.9*t );\n\n\n        vec3 col = palette(length(uv0)+ i*.4 * t*.3);\n\n        d=sin(d*8.+ t)/16.152;\n        d = abs(d);\n\n\n        d = pow(0.01/d, 1.4);\n        finalColor += col* d * 0.2;\n    }\n    \n   fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}