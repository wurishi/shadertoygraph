{"ver":"0.1","info":{"id":"7ljGWV","date":"1624780422","viewed":184,"name":"The Abyss of Pixels","username":"Kamoshika","description":"I also posted this on NEORT.\nhttps://neort.io/art/c3bd7r43p9f8s59bf3f0","likes":17,"published":1,"flags":0,"usePreview":0,"tags":["noise"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://twitter.com/kamoshika_vrc/status/1370713495960911876\n\n// Added Anti-Aliasing.\n\n#define AA 3\n\nconst float PI2 = acos(-1.)*2.;\n\nfloat hash(in float x)\n{\n    return fract(sin(x) * 43758.5453);\n}\n\nfloat hash2D(in vec2 x)\n{\n    return fract(sin(dot(x, vec2(12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0);\n    \n    for(int m = 0; m < AA; m++) {\n        for(int n = 0; n < AA; n++) {\n            vec2 of = vec2(m, n) / float(AA) - 0.5;\n\n            vec2 p = ((fragCoord + of) * 2.0 - iResolution.xy ) / min(iResolution.x, iResolution.y);\n\n            for(float i = 0.;i < 30.;i++) {\n                float L = 1. + i - fract(iTime);\n                vec2 q = p / atan(.005, L) / 500.;\n                L = dot(q, q) * 3e2 + L * L;\n                float a = hash(ceil(iTime) + i) * PI2;\n                q = ceil(q * 20. + vec2(cos(a), sin(a)) * 2.) / 20.;\n                if(hash2D(q + a * .01) + dot(q, q) * 2. > 1.) {\n                    col += exp(-L * .01);\n                    break;\n                }\n            }\n        }\n    }\n    \n    col /= float(AA * AA);\n    \n    fragColor = vec4(vec3(col), 1.);\n}\n\n/*\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord * 2.0 - iResolution.xy ) / min(iResolution.x, iResolution.y);\n    float v = 0.;\n\n    for(float i = 0.;i < 30.;i++){\n        float L = 1. + i - fract(iTime);\n        vec2 q = p / atan(.005, L) / 500.;\n        L = dot(q, q) * 3e2 + L * L;\n        float n = hash(ceil(iTime) + i) * PI2;\n        q = ceil(q * 20. + vec2(cos(n), sin(n)) * 2.) / 20.;\n        if(v == 0.){\n            v += step(1., hash2D(q + n * .01) + dot(q, q) * 2.) * exp(-L * .01);\n        }\n    }\n    \n    fragColor = vec4(vec3(v), 1.);\n}\n*/","name":"Image","description":"","type":"image"}]}