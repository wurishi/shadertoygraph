{"ver":"0.1","info":{"id":"lcXcWS","date":"1725326908","viewed":10,"name":"thingyhackclub","username":"Duclings","description":"experiment","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["experiemental"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy compatible version\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    \n    \n    // Distance from the center\n    float dist = length(uv);\n    \n    // Circle radius oscillates with time\n    float radius = 0.5 * (1.0 + cos(iTime));\n    \n    // Smoothstep to create a smooth edge for the circle\n    float circle = smoothstep(radius, radius + 0.05, dist);\n    \n    // Inverse to create the closing effect\n    circle = 1.0 - circle;\n    \n    // Set the fragment color (circle is white, background is black)\n    fragColor = vec4(vec3(circle), 1.0);\n}\n","name":"Image","description":"","type":"image"}]}