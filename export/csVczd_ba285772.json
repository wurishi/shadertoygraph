{"ver":"0.1","info":{"id":"csVczd","date":"1696476717","viewed":85,"name":"basic CRT shader","username":"int_45h","description":"a simple CRT shader based on this video: https://www.youtube.com/watch?v=aWdySZ0BtJs","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["crt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CURVATURE 3\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2    uv = fragCoord/iResolution.xy,\n            uv2 = 2.0*uv-1.0,\n            offset = uv2 / float(CURVATURE);\n    \n    offset *= offset; // Distance from the center, squared\n    \n    uv2 += uv2*(offset.yx);\n    uv2 = 0.5*uv2+0.5;\n    \n    uv = uv2;\n    vec3 col = texture(iChannel0, uv2).xyz + vec3(0.1);\n    col = (uv.x >= 0.0 && uv.x <= 1.0 && uv.y >= 0.0 && uv.y <= 1.0) \n        ? col\n        : vec3(0.0, 0.0, 0.0);\n    col = col * (0.9+0.1*sin(uv.y*2.0*iResolution.y));\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}