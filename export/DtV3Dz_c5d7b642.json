{"ver":"0.1","info":{"id":"DtV3Dz","date":"1683822064","viewed":124,"name":"Twirl from Photoshop","username":"vec5","description":"Exact implementation of Photoshop Filter->Distort->Twirl","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["swirl","distortion","photoshop","twirl"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.141592\n\nvec2 twirl(vec2 uv, float angle)\n{   \n    uv     = 2. * uv - 1.;\n    angle *= pow(1. - min(1., length(uv)), 2.);\n    \n    float s = sin(angle);\n    float c = cos(angle);\n    \n    return .5 * (1. + uv * mat2(c, -s, s, c));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    fragColor = texture(iChannel0, twirl(uv, 2. * PI));\n}","name":"Image","description":"","type":"image"}]}