{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"const vec2 chSpace = vec2(1.125,1.500);\nfloat autoWave = 0.0; // If > 0.0 characters are waved depending on x pos\n#define BACK_COL_TOP vec3(1,0,1)\n#define BACK_COL_BOTTOM vec3(0,0,1)\n\n#define TEXT_COL1_TOP vec3(0.05, 0.05, 0.40)\n#define TEXT_COL1_BOTTOM vec3(0.60, 0.90, 1.00)\n#define TEXT_COL2_TOP vec3(0.10, 0.10, 0.00)\n#define TEXT_COL2_BOTTOM vec3(1.90, 1.30, 1.00)\n#define TEXT_COL_BORDER vec3(0.0, 0.0, 0.0)\n\n//--- Primitives ---\nfloat dfSemiArc(float rma, float rmi, vec2 uv)\n{\n\treturn max(abs(length(uv) - rma) - rmi, uv.x-0.0);\n}\n\n//--- Gradient Stuff ---\n//returns 0-1 when xn is between x0-x1\nfloat linstep(float x0, float x1, float xn)\n{\n\treturn (xn - x0) / (x1 - x0);\n}\n\n//p0 = bottom left, clockwise winding\nfloat dfQuad(vec2 p0, vec2 p1, vec2 p2, vec2 p3, vec2 uv)\n{\n\tvec2 s0n = normalize((p1 - p0).yx * vec2(-1,1));\n\tvec2 s1n = normalize((p2 - p1).yx * vec2(-1,1));\n\tvec2 s2n = normalize((p3 - p2).yx * vec2(-1,1));\n\tvec2 s3n = normalize((p0 - p3).yx * vec2(-1,1));\n\t\n\treturn max(max(dot(uv-p0,s0n),dot(uv-p1,s1n)), max(dot(uv-p2,s2n),dot(uv-p3,s3n)));\n}\n\nfloat dfRect(vec2 size, vec2 uv)\n{\n\treturn max(max(-uv.x,uv.x - size.x),max(-uv.y,uv.y - size.y));\n}\n//-----------------\n\n// Draw a colored character\nvoid colChar(inout vec3 col, inout vec2 p, float df, vec2 uv) {\n\n    vec2 pos = uv - p;\n    float y = p.y/16.+.2;\n    \n    float mid = (pow(abs(df), 0.5) * 0.1) - (y);\n\n\tvec3 grad1 = mix(TEXT_COL1_BOTTOM, TEXT_COL1_TOP, linstep(mid, .5, pos.y));\n    vec3 grad2 = mix(TEXT_COL2_BOTTOM, TEXT_COL2_TOP, linstep(-.75, mid, pos.y));\n\n\tvec3 textcol = mix(grad2, grad1, smoothstep(mid, mid + 0.04, pos.y));\n\n    textcol = mix(TEXT_COL_BORDER, textcol, smoothstep(4.0 / iResolution.y, 0.00, df));\n    df -= 0.05;\n    col = mix(col, textcol, smoothstep(4.0 / iResolution.y, 0.00, df));\n    p.x += chSpace.x;\n}\n\n// Set Y pos depending on x pos to create wave\nvoid wave(inout vec2 pos) {\n    if (floor(autoWave) > 0.0) {\n        pos.y = sin(iTime-(pos.x/5.))*autoWave;\n    }\n}\n//--- Letters ---\nvoid A(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n\tdf = min(df, dfRect(vec2(0.250, 0.825), uv - vec2(-0.625,-0.625)));\n    df = min(df, dfRect(vec2(0.250, 0.825), uv - vec2(-0.000,-0.625)));\n\tdf = min(df, dfQuad(vec2(-0.375,-0.125), vec2(-0.375,0.125), vec2(0.000, 0.125), vec2(-0.125,-0.125), uv));\t\n    df = min(df, dfSemiArc(0.3125, 0.125, (uv.yx - vec2(0.1875,-0.1875)) * -1.0));\n}\n#define _cA(c,p,u) {float d=1e6;wave(p);A(d,p,u);colChar(c,p,d,u);}\n#define _A _cA(col, pos, uv)\n// B C\n\nvoid D(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n\tdf = min(df, dfRect(vec2(0.250, 1.25), uv - vec2(-0.625,-0.625)));\n    df = min(df, dfSemiArc(0.5, 0.125, (uv.xy * vec2(-1,1) - vec2(0.375,-0.00))));\n}\n#define _cD(c,p,u) {float d=1e6;wave(p);D(d,p,u);colChar(c,p,d,u);}\n#define _D _cD(col, pos, uv)\n\nvoid E(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n\tdf = min(df, dfRect(vec2(0.250, 1.250), uv - vec2(-0.625,-0.625)));    \n    df = min(df, dfQuad(vec2(-0.375,-0.625), vec2(-0.375,-0.375), vec2(0.250, -0.375), vec2( 0.125,-0.625), uv));\t\n    df = min(df, dfQuad(vec2(-0.375,0.375), vec2(-0.375,0.625), vec2(0.250, 0.625), vec2(0.125, 0.375), uv));\t   \n    df = min(df, dfQuad(vec2(-0.375,-0.125), vec2(-0.375,0.125), vec2(0.000, 0.125), vec2(-0.125,-0.125), uv));\t\n}\n#define _cE(c,p,u) {float d=1e6;wave(p);E(d,p,u);colChar(c,p,d,u);}\n#define _E _cE(col, pos, uv)\n\n// F G \n\nvoid H(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n\tdf = min(df, dfRect(vec2(0.250, 1.250), uv - vec2(-0.625,-0.625)));\n    df = min(df, dfRect(vec2(0.250, 1.250), uv - vec2(-0.000,-0.625)));\n\tdf = min(df, dfQuad(vec2(-0.375,-0.125), vec2(-0.375,0.125), vec2(0.000, 0.125), vec2(-0.125,-0.125), uv));\t\n}\n#define _cH(c,p,u) {float d=1e6;wave(p);H(d,p,u);colChar(c,p,d,u);}\n#define _H _cH(col, pos, uv)\n\n\n// I J K L M N \n\nvoid O(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n    df = min(df, dfRect(vec2(0.25, 0.375), uv - vec2( 0.000,-0.1875)));  \n    df = min(df, dfRect(vec2(0.25, 0.375), uv - vec2(-0.625,-0.1875)));  \n    df = min(df, dfSemiArc(0.3125, 0.125, (uv.yx - vec2(0.1875,-0.1875)) * -1.0));\n    df = min(df, dfSemiArc(0.3125, 0.125, (uv.yx - vec2(-0.1875,-0.1875)) ));\n}\n#define _cO(c,p,u) {float d=1e6;wave(p);O(d,p,u);colChar(c,p,d,u);}\n#define _O _cO(col, pos, uv)\n\n// P Q \n\nvoid R(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n\tdf = min(df, dfRect(vec2(0.250, 1.250), uv - vec2(-0.625,-0.625)));\n    df = min(df, dfSemiArc(0.25, 0.125, (uv.xy * vec2(-1,1) - vec2(0.125,0.25))));    \n    df = min(df, dfRect(vec2(0.25, 0.250), uv - vec2(-0.375,0.375)));\n    df = min(df, dfQuad(vec2(-0.375,-0.125), vec2(-0.250,0.125), vec2(0.000, 0.125), vec2(-0.125,-0.125), uv));\t\n    df = min(df, dfQuad(vec2(-0.375,-0.125), vec2(-0.1,-0.125), vec2(0.250,-0.625), vec2(-0.025,-0.625), uv));\t\n\n}\n#define _cR(c,p,u) {float d=1e6;wave(p);R(d,p,u);colChar(c,p,d,u);}\n#define _R _cR(col, pos, uv)\n\nvoid S(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n\tdf = min(df, dfSemiArc(0.25, 0.125, uv - vec2(-0.250,0.250)));\n\tdf = min(df, dfSemiArc(0.25, 0.125, (uv - vec2(-0.125,-0.25)) * vec2(-1)));\n\tdf = min(df, dfRect(vec2(0.125, 0.250), uv - vec2(-0.250,-0.125)));\n\tdf = min(df, dfQuad(vec2(-0.625,-0.625), vec2(-0.500,-0.375), vec2(-0.125,-0.375), vec2(-0.125,-0.625), uv));\t\n\tdf = min(df, dfQuad(vec2(-0.250,0.375), vec2(-0.250,0.625), vec2(0.250,0.625), vec2(0.125,0.375), uv));\n}\n#define _cS(c,p,u) {float d=1e6;wave(p);S(d,p,u);colChar(c,p,d,u);}\n#define _S _cS(col, pos, uv)\n\nvoid T(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n    df = min(df, dfRect(vec2(0.250, 1.0), uv - vec2(-0.3125,-0.625))); \n\tdf = min(df, dfQuad(vec2(-0.625, 0.375), vec2(-0.625,0.625), vec2(0.250, 0.625), vec2(0.125, 0.375), uv));\t\n}\n#define _cT(c,p,u) {float d=1e6;wave(p);T(d,p,u);colChar(c,p,d,u);}\n#define _T _cT(col, pos, uv)\n\n// U V W X\n\nvoid Y(inout float df, vec2 pos, vec2 uv) {\n    uv = uv - pos;\n    df = min(df, dfRect(vec2(0.25, 0.25), uv - vec2( 0.000,0.375)));  \n    df = min(df, dfRect(vec2(0.25, 0.25), uv - vec2(-0.625,0.375)));  \n    df = min(df, dfSemiArc(0.3125, 0.125, (uv.yx - vec2(0.375,-0.1875)) ));\n    df = min(df, dfRect(vec2(0.250, 0.75), uv - vec2(-0.3125,-0.625))); \n}\n#define _cY(c,p,u) {float d=1e6;wave(p);Y(d,p,u);colChar(c,p,d,u);}\n#define _Y _cY(col, pos, uv)\n\n// Z\n\n\nvoid grid(inout vec3 col, vec2 uv) {\n\n    vec2 gdef = vec2(uv.x / abs(uv.y), 1.0 / (uv.y));\n\tgdef.y = clamp(gdef.y,-1e2, 1e2);\n\t\n\tvec2 gpos = vec2(0.0,-iTime);\n\t\n\tgdef += gpos;\n\t\n\tvec2 grep = mod(gdef*vec2(1.0,2.0), vec2(1.0));\n\t\n\tfloat grid = max(abs(grep.x - 0.5),abs(grep.y - 0.5));\n\t\n\tfloat gs = length(gdef-gpos)*0.01;\n\t\n\tcol *= mix(smoothstep(0.46-gs,0.48+gs,grid), 1.0, step(0.0,uv.y))*0.75+0.25;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 aspect = iResolution.xy / iResolution.y;\n\tvec2 uv = fragCoord.xy / iResolution.y;\n\t\n    uv = (uv - aspect/2.0)*8.0;\n\t\n    // Background\n    vec3 col = mix(BACK_COL_BOTTOM, BACK_COL_TOP, (uv.y/4.0)+0.5);\n    \n    // Grid\n    grid(col, uv);\n    \n    // Text\n    autoWave = 0.0;\n    vec2 pos = vec2(chSpace.x * -4. ,3.); \n    _S _H _A _D _E _R _T _O _Y\n    \n    pos = vec2(chSpace.x * -4. ,-3.); \n    _S _H _A _D _E _R _T _O _Y\n    \n    autoWave = 1.5;\n    pos = vec2(chSpace.x * -4. ,0.); \n    _S _H _A _D _E _R _T _O _Y\n    \n    \n    \n    fragColor = vec4(col,1.0);\n    \n}\n\n","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XfKfzh","date":"1734033593","viewed":40,"name":"Distance Field Text extended","username":"JoostAB","description":"Extended Fork of \"Distance Field Text\" by Flyguy. https://shadertoy.com/view/4lsSzX\n- moveable\n- gradient fill depending on y pos\n- autowave\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["retro","text","logo","distance","shadertoy","scifi"],"hasliked":0,"parentid":"","parentname":""}}