{"ver":"0.1","info":{"id":"msS3W3","date":"1668443802","viewed":167,"name":"Cells to Polar","username":"ChunderFPV","description":"A couple cell groups polar transformed into number spirals along with some buffer magic.  Mouse y to zoom.","likes":6,"published":1,"flags":32,"usePreview":1,"tags":["spiral","polar","cells","buffer","transform","fraction"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 RGBA, in vec2 XY )\n{\n    RGBA = texture(iChannel0, XY/iResolution.xy);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SCALE 750.0\n#define R iResolution.xy\n#define M iMouse\n#define SC ((XY-0.5*R)/R.y)\n#define TAU 6.2831853\n#define AA 0.5\n#define S(sc,m) (abs(fract(vec2(sc.x-(m), sc.y)+0.5)-0.5)/fwidth(sc))\n#define HUE(v) (.6+.6*cos(6.3*(v)+vec3(0,23,21))) // https://www.shadertoy.com/view/ll2cDc\n\nvoid mainImage( out vec4 RGBA, in vec2 XY )\n{\n    float t = iTime/60.0; // time between ints\n    t += 1.0; // starting value\n    float z = (M.z > 0.0) ? SCALE/10.0/(M.y/R.y): SCALE; // zoom\n    vec2 sc = SC*z; // screen coords\n    vec2 tc = SC*2.0; // texture coords\n    float r = length(tc);\n    sc = vec2(atan(sc.x, sc.y)/TAU, length(sc)); // to polar\n    \n    float blur = -0.005; // radial blur\n    vec3 col = vec3((sin(t*TAU)+99.0)/101.0, .97, (cos(t*TAU)+99.0)/101.0);\n    vec3 c = texture(iChannel0, mix(XY/R, vec2(0.5), blur), AA+r/2.0).rgb*col; // blur\n    \n    float ro = t*z/2.0; // counter rotation\n    float sr = (TAU/4.0); // starting rotation\n    \n    // fraction spiral\n    vec2 fs = S(sc, sqrt(t*round(sc.y)*2.0)-sqrt(ro*2.0));\n    c += max(0.0, 1.0-max(fs.x, fs.y)/3.0)*(HUE(r)+2.0)/3.0;\n    \n    // denominator spiral\n    vec2 ds = S(sc, t*round(sc.y)-ro);\n    float h = abs(sc.y)/z*2.0; // horizon\n    c += max(0.0, 1.0-max(ds.x, ds.y)/2.0)*pow(min(h, 1.0/h), 2.0)*HUE(sc.y*t);\n    \n    // background texture\n    float sphere = sqrt(abs(1.0-dot(tc, tc)));\n    if (r > 1.0) t = -t;\n    vec3 tex = texture(iChannel1, tc/sphere+vec2(t), r*AA).rgb*sphere*sphere;\n    c += vec3(0.3, 0.1, 0.7)*tex*.02/sqrt(r); // apply texture\n    \n    // dark border around screen edges to fix negative radial blur issue\n    vec2 b = abs(fract(XY/R+0.5)-0.5)/fwidth(XY/R)/10.0; // black border\n    c = min(c, min(b.x, b.y)*0.2); // blend with border\n    \n    RGBA = vec4(c, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}