{"ver":"0.1","info":{"id":"cdKfDR","date":"1698129844","viewed":22,"name":"another Reaction Diffusion","username":"MarshmallowFellow","description":"made a reaction diffusion simulation using a box blur.  Then I went off on a tangent\nclick to add white to the image, \nyou can change iChannel1 for different starting images","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["simulation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//not much to play with here\n//all the fun stuff including the init image is in Buffer A\n\nvec3 HeightToNormals(in sampler2D tex, int iterations, vec2 UV)\n{\n    vec3 _tempTexture = vec3(texture(tex, UV));\n    vec3 sum = vec3(0);\n    \n    for (int i = 0; i < iterations; i++)\n    {\n        float weight =  pow(1. - (1./float(iterations) * float(i)), 3.);\n        sum.x -=(vec3( texture( tex, UV + vec2(1. / iResolution.x * float(i + 1), 0))) - _tempTexture).x * weight;\n        sum.x +=(vec3( texture( tex, UV + vec2(1. / iResolution.x * float(0 - i - 1), 0))) - _tempTexture).x * weight;\n\n        sum.y -=(vec3( texture( tex, UV + vec2(0, 1. / iResolution.y * float(i + 1)))) - _tempTexture).x * weight;\n        sum.y +=(vec3( texture( tex, UV + vec2(0, 1. / iResolution.y * float(0 - i - 1)))) - _tempTexture).x * weight;\n\n    }\n    sum *= 0.5;\n    sum += 0.5;\n\n    return sum + vec3(0,0, distance(vec3(0), sum));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float weight = sqrt(1. - (1. / pow(uv.x, 2.) ) );\n    \n    float height = float(texture(iChannel0, uv) );\n    \n    \n    //play with the int here to change the strenght of the distortion\n    vec3 normals = HeightToNormals(iChannel0, 2, uv) * .07;    \n    vec3 col = vec3(texture(iChannel1, uv - vec2(normals.x, normals.y) )); //fetch the texture with the normals applied as an offset to the UV\n    \n    \n    //rgb output\n    //fragColor = vec4(col * smoothstep(-1., 1., float(height) ), 1);\n    //swap these for different effects\n    fragColor = vec4(vec3( smoothstep(-1., 1., float(height)) ), 1);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"precision mediump float;\n\nfloat pingPong(float value)\n{\n    return (fract(value*0.5) > 0.5 ? fract(value) : 1.0 - fract(value));\n}\n\nvec3 Blur(in sampler2D tex, int a, vec2 UV)\n{\n    vec2 pixelSize = vec2(1.) / vec2(iResolution);\n    vec3 _tempTexture = vec3(texture(tex, UV));\n    vec3 sum = vec3(0);\n    float maxChange = 0.;\n    for (int x = 1; x <= a; x++)\n    {\n        //float weight = sqrt(1. - (1. / pow(float(a / max(1,x)), 2.) ) );\n        float weight =  pow(1. - (1./float(a) * float(x)), 3.);\n        maxChange += weight;\n        sum += (vec3( texture( tex, UV + vec2(pixelSize.x * float(x), 0))) - _tempTexture) * weight;\n        sum += (vec3( texture( tex, UV + vec2(pixelSize.x * float(0 - x), 0))) - _tempTexture) * weight;\n\n        sum += (vec3( texture( tex, UV + vec2(0, pixelSize.y * float(x)))) - _tempTexture) * weight;\n        sum += (vec3( texture( tex, UV + vec2(0, pixelSize.y * float(0 - x)))) - _tempTexture) * weight;\n\n    }\n     return clamp(sum / maxChange * .25 + _tempTexture, vec3(0), vec3(1));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n   \n    //edit here to change click size\n    float distanceFromMouse = float(length(fragCoord - iMouse.zw) < 20.);\n\n    vec3 col = vec3(distanceFromMouse);\n        \n    vec3 firstBlur = Blur(iChannel0, 5, uv) * 1.1;\n    vec3 secondBlur = Blur(iChannel0, 30, uv);\n\n    vec3 stack = clamp(firstBlur - secondBlur * .1 + col * .1, vec3(0), vec3(1.));\n    \n    //vec3 stack = vec3(texture(iChannel0, uv)) * 2. + distanceFromMouse;\n\n    // Output to screen\n    if(iFrame < 9){fragColor = vec4(vec3(texture(iChannel1, uv) ), 1.);}\n    else {fragColor = vec4(vec3(max(stack, col)),1.0);}\n    \n    \n    //fragColor = vec4( vec3(texture(iChannel0, uv)) + .5, 1.);\n}\n//0.979795897113+0.916515138991+0.8+0.6","name":"Buffer A","description":"","type":"buffer"}]}