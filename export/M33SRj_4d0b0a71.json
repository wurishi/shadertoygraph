{"ver":"0.1","info":{"id":"M33SRj","date":"1719257916","viewed":85,"name":"Chatgpt Maldelbrot By Freq. Rang","username":"marcoc2","description":"ChatGPT generated shader with song input","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGzn","filepath":"/media/a/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","previewfilepath":"/media/ap/ec8a6ea755d34600547a5353f21f0a453f9f55ff95514383b2d80b8d71283eda.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Função para converter a frequência em coordenadas de textura\nfloat freqToCoord(float freq)\n{\n    // O intervalo de frequências audíveis é de 20 Hz a 20 kHz\n    float minFreq = 20.0;\n    float maxFreq = 20000.0;\n\n    // Mapear a frequência para o intervalo [0, 1]\n    return log(freq / minFreq) / log(maxFreq / minFreq);\n}\n\n// Função para amostrar uma faixa de frequências e obter a intensidade média\nfloat getAudioSample(float freqStart, float freqEnd)\n{\n    float sum = 0.0;\n    float numSamples = 0.0;\n\n    // Converter as frequências para coordenadas de textura\n    float coordStart = freqToCoord(freqStart);\n    float coordEnd = freqToCoord(freqEnd);\n\n    // Amostrar a faixa de frequências\n    for (float i = coordStart; i <= coordEnd; i += (coordEnd - coordStart) / 100.0)\n    {\n        sum += texture(iChannel0, vec2(i, 0.5)).r; // Assumindo que os dados de áudio estão na linha do meio\n        numSamples += 1.0;\n    }\n\n    return sum / numSamples;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Coordenadas normalizadas no plano complexo\n    vec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Variáveis para calcular o conjunto de Mandelbrot\n    vec2 c = uv;\n    vec2 z = vec2(0.0, 0.0);\n\n    // Amostra de áudio da faixa de frequências entre 100 e 500 Hz\n    float audioSampleLow = getAudioSample(100.0, 500.0);\n\n    // Amostra de áudio da faixa de frequências entre 5000 e 7000 Hz\n    float audioSampleHigh = getAudioSample(5000.0, 17000.0);\n    \n    // Variável para controle da animação\n    float s = 0.3;\n    float t = iTime * s;\n\n    // Iterações para o conjunto de Mandelbrot\n    for (int i = 0; i < 64; i++) {\n        if (length(z) > 2.0) {\n            break;\n        }\n\n        // Animação influenciada pelo áudio de baixa frequência\n        c.x += sin(t) * s * (sin(iTime) * s * 2.0 + audioSampleLow) + 0.05;\n        c.y += cos(t) * s * (sin(iTime) * s * 2.0 + audioSampleLow) + 0.05;\n\n        z = vec2(z.x * z.x - z.y * z.y + c.x, 2.0 * z.x * z.y + c.y);\n    }\n\n    // Gradiente de cores baseado nas iterações e influenciado pelo áudio de alta frequência\n    vec3 color = vec3(\n        sin(z.x) * 0.5 + 0.5 + audioSampleHigh * 0.5,\n        sin(z.y) * 0.5 + 0.5 + audioSampleHigh * 0.5,\n        sin(length(z)) * 0.5 + 0.5\n    );\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}