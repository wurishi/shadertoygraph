{"ver":"0.1","info":{"id":"XXlfDH","date":"1728395915","viewed":28,"name":"Bad trip","username":"Chuvirla","description":"colorful fractal","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 YELLOW = vec3(255, 242, 117)/255.;\nvec3 BLUE = vec3(102, 153, 204)/255.;\nvec3 ORANGE = vec3(255, 153, 204)/255.;\nvec3 GREEN = vec3(117, 255, 102)/255.;\n\n\nvec3 palette(float t) {\n    return YELLOW + BLUE*cos(6.3828*(GREEN*t+ORANGE));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float a = iTime * 0.5;\n    vec2 uv_rev = vec2(fragCoord.x * cos(a) - fragCoord.y * sin(a), fragCoord.x*sin(a) + fragCoord.y * cos(a));\n    vec2 uv = (fragCoord *2.0 - iResolution.xy) / iResolution.y; \n    //vec2 uv0 = uv;\n    vec2 uv0 = vec2(uv.x * cos(a) - uv.y * sin(a), uv.x*sin(a) + uv.y * cos(a));\n    vec3 finalColor = vec3(0.0);\n    for (float i =0.0 ; i < (6. -length(uv0)*2.0); i++){\n        uv0 = fract(uv0*1.5) -0.5;\n        float d0 = length(uv);\n        float d = length(uv0);\n        vec3 col = palette(length(uv0) + iTime);\n        d = sin(d + iTime * 0.5)/2.;\n        d = 0.08/d;\n        if ((i+1.) > (6. -length(uv)*2.0)){\n            float diff = (i+1.) - (6. -length(uv)*2.0);\n        \n            finalColor += (col * d)*(1.-diff);\n        }\n        else {\n            finalColor += (col * d);\n        }   \n    }\n    fragColor = vec4(finalColor,1.0);\n}","name":"Image","description":"","type":"image"}]}