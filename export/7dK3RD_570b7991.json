{"ver":"0.1","info":{"id":"7dK3RD","date":"1631735125","viewed":44,"name":"Shapes - CL","username":"cLaBounty","description":"GPR-200 Assignment - Shapes","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["assignment"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool isInRectangle(vec2 uv, vec2 center, float width, float height)\n{\n    return (abs(uv.x - center.x) <= (width / 2.0) && abs(uv.y - center.y) <= (height / 2.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float aspectRatio = iResolution.y / iResolution.x;\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.y *= aspectRatio;\n    \n    vec4 bgColor = vec4(0, 0, 1, 1);\n    vec4 rectColor = vec4(1, 0, 0, 1);\n    vec4 circleColor = vec4(1, 0, 1, 1);\n    \n    int rows = 10;\n    int columns = 10;\n    float X = 1.0 / float(columns + 1);\n    float Y = 1.0 / float(rows + 1);\n    float len = 1.0 / float(max(rows, columns) * 3);\n    float smoothness = 0.015;\n    \n    fragColor = bgColor;\n    for (int i = 1; i <= rows; i++) {\n        for (int j = 1; j <= columns; j++) {\n            vec2 center = vec2(X * float(j), Y * float(i) * aspectRatio);\n            \n            if (mod(float(i + j), 2.0) == 0.0) { // circle\n                float radius = len / 2.0;\n                float dist = distance(center, uv);\n                \n                float isInCircle;\n                if (i == 1 || j == 1 || i == rows || j == columns) { // blur outer circles\n                    isInCircle = smoothstep(radius + smoothness, radius, dist);\n                } else {\n                    isInCircle = step(dist, radius);\n                }\n                \n                fragColor = mix(fragColor, circleColor, isInCircle);\n            } else if (isInRectangle(uv, center, len, len)) { // square\n                fragColor = rectColor;\n            }\n        }\n    }\n}","name":"Image","description":"","type":"image"}]}