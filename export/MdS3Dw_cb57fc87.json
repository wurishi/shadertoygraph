{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"texture","id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"#define CamPos   \t\tvec3(0.0, 0.7, -0.9)\n#define CamDir\t\t\tvec3(0.0,0.0,0.0)\n#define LightPos \t\tvec3(1.0,2.0,-2.0)\n#define ScreenRatio  \tvec2(iResolution.x/iResolution.y, 1.0)\n#define Position \t\tvec2(fragCoord.xy/iResolution.xy)\n\n#define maxSteps \t\t60.0\n#define treshold \t\t0.001\n#define maxdist \t\t30.0\n\n#define shadowsteps \t20.0\n#define aosteps \t\t10.0\n\n#define pi \t\t\t\tacos(-1.0)\n\n#define numcorals\t\t9.0\t\t\t\t\t\n\nvec3 uvw;\n\n//rotation around all 3 axes\nvec3 rot(vec3 p, vec3 r) {\n\tfloat sa=sin(r.y); float sb=sin(r.x); float sc=sin(r.z);\n\tfloat ca=cos(r.y); float cb=cos(r.x); float cc=cos(r.z);\n\treturn p*mat3( cb*cc, cc*sa*sb-ca*sc, ca*cc*sb+sa*sc,\tcb*sc, ca*cc+sa*sb*sc, -cc*sa+ca*sb*sc,\t-sb, cb*sa, ca*cb );\n\t}\n//\n\nfloat smin( float a, float b, float k )\n{\n    float res = exp( -k*a ) + exp( -k*b );\n    return -log( res )/k;\n}\n\nvec2 map(vec3 p ) {\n\t\n\tvec2 ret=vec2(maxdist,0.0);\n\tfloat g,c,an,r,ca,sa,h;\n\tvec2 o;\n\tvec3 q;\n\t//wiggle\n\tg=sin(iTime)*0.1;\n\tfloat ws=sin(g*0.2);\n\tfloat wc=cos(g*0.1);\n\t//15\n\tr=0.10; an=2.0943; g=0.0872;\n\tfor (float i=0.0; i<numcorals; i+=1.0) {\n//\t\tif (i<3.0) {r=0.1; an=2.0943; g=0.0872; }  \n\t\tif (i>2.0) {r=0.3; an=1.0471; g=0.1745; }  \n\t\t//size\n\t\to.x=0.05;\t\t\t\t//radius\n\t\to.y=0.4 +sin(i)*0.07;\t//height\n\t\t//rotate\n\t\tc=an*i;\n\t\tca=cos(c); sa=sin(c);\n\t\tq.x=ca*p.x +sa *p.z;\n\t\tq.z=-sa*p.x +ca *p.z;\n\t\tq.y=p.y;\n\t//wiggle\n\tc=q.y;\n\tq.y = wc * c - ws * q.z;\n\tq.z = ws * c + wc * q.z;\t\t\n\t\t//translate\n\t\tq.x-=r;\n\t\t//push out\n\t\tca=cos(g); sa=sin(g);\n\t\tc=q.x;\n\t\tq.x = ca * c - sa * q.y;\n\t\tq.y = sa * c + ca * q.y;\n\t\t//shape\n\t\th=cos(2.0+p.y*5.0)*0.035;\t\n\t\t//distort\n\t\th-=sin(q.x*20.0)*sin(q.y*20.0)*3.0*sin(q.z*20.0)*0.01;\n\t\t//superminispikes\n\t\th-=0.00008*(sin(q.x*780.0)*sin(q.y*780.0)*2.0*sin(q.z*780.0));\n\t\t//obj\n\t\tc=max( length(q.xz)-o.x, abs(q.y-o.y)-o.y ) -h; //-r;\n\t\t//cap\n\t\tq.y-=o.y*2.08;\n\t\tc=smin(c, length(q) -0.08 -h, 62.0);\n\t\t\n\tif (ret.x>c) { ret=vec2(c,1.0);\tuvw=q; }\n\t}\n\t\n\t//floor\n\tc=p.y -(1.0+ sin(p.x*2.0)*sin(p.y*2.0)*2.0*sin(p.z*2.0))*0.2 ;\n\tif (ret.x>c) ret=vec2(c,2.0);\n\t\n\treturn ret;\n\t}\n\n//calculate normal\nvec3 cNor(vec3 p ) {\n\tvec3 e=vec3(0.001,0.0,0.0);\n\treturn normalize(vec3( map(p+e.xyy).x - map(p-e.xyy).x, map(p+e.yxy).x - map(p-e.yxy).x, map(p+e.yyx).x - map(p-e.yyx).x ));\n\t}\n\nfloat calcAO(vec3 pos, vec3 nor ){\n\tfloat totao = 0.0;\n    float sca = 1.0;\n    for( float aoi=0.0; aoi<5.0; aoi+=1.0 ) {\n        float hr = 0.01 + 0.05*aoi;\n        vec3 aopos =  nor * hr + pos;\n        float dd = map( aopos ).x;\n        totao += -(dd-hr)*sca;\n        sca *= 0.75;\n    }\n    return clamp( 1.0 - 4.0*totao, 0.0, 1.0 );\n}\n\n\nfloat cShd(vec3 ro, vec3 rd, float k ) {\n\tfloat res = 1.0;\n\tfloat f=0.0;\n\tfor(float i=1.0; i<shadowsteps; i+=1.0){\n\t\tf=i/shadowsteps;\n        float h = map(ro + rd*f).x;\n        if( h<0.001 ) { res=0.0; break; }\n        res = min( res, k*h/f );\n    }\n    return res;\n}\n\n\n//shader entry\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\t{\n\tvec3 myMouse=vec3(iMouse.xy*0.01,0.0);\n\n//comment below 2 lines to disable autorotation\t\nmyMouse.y+=(sin(iTime*0.13)*0.1);\nmyMouse.x-=iTime*0.13;\n\n\t\n\tvec3 rd=rot(vec3( (-1.0+2.0*Position)*ScreenRatio, 1.0),  CamDir);\n\tvec3 lig=normalize(rot(LightPos, myMouse)); //normalize(LightPos);\n\tvec3 ro=rot(CamPos, myMouse);\n\t\t rd=normalize(rot(rd, myMouse));\n\n\n\t//march\n\tfloat f=0.0;\n\tvec2 t=vec2(treshold,f);\n\tfor(float i=0.0; i<1.0; i+=1.0/maxSteps){\n        t= map(ro + rd*t.x);\n\t\tf+=t.x;\n\t\tt.x=f;\n        if( abs(t.x)<treshold || t.x>maxdist ) break; \n\t\t}\n\tif (t.x>maxdist) t.y=0.0;\n\n\n\t//draw\n\tvec3 col = vec3(0.0,0.0,1.0);\n\n\tif (t.y>0.5) {\n\n\t\tvec3 tnor,oc;\n\t\tvec3 pos = ro + rd*t.x;\n\t\tvec3 nor = cNor(pos);\t\t\n\t\t\n\t\tif (t.y==1.) {\n\t\t\tuvw=normalize(uvw);\n\t\t\ttnor=cNor(uvw);\n\t\t\toc=0.5*vec3(0.95,0.92,0.1);\t\n\t\t\tcol =texture(iChannel0, uvw.yz).xyz;\n\t\t\tuvw =texture(iChannel0, uvw.zx).xyz;\n\t\t\tro =texture(iChannel0, uvw.xy).xyz;\n\t\t}\t\t\t \n\t\tif (t.y==2.) {\n\t\t\ttnor=nor;\n\t\t\toc=vec3(0.95,0.3,0.1);\n\t\t\tcol =texture(iChannel1, pos.yz).xyz;\n\t\t\tuvw =texture(iChannel1, pos.zx).xyz;\n\t\t\tro =texture(iChannel1, pos.xy).xyz;\n\t\t}\n\t\toc+=col*abs(tnor.x) + uvw*abs(tnor.y) + ro*abs(tnor.z);\n\t\t\n\t\tfloat ao = calcAO( pos, nor );\t\t\n\t\tfloat amb = clamp( 0.5+0.5*nor.y, 0.0, 1.0 );\t\t\t\t\t\n\t\tfloat dif = clamp( dot( nor, lig ), 0.0, 1.0 );\t\t\t\t\t\n\t\tfloat bac = clamp( dot( nor, vec3(-lig.x,lig.y,-lig.z)), 0.0, 1.0 );\t\t\n\t\tfloat sh = cShd( pos, lig, 8.0 );\t\n\n\t\tcol  = 0.10*2.0*vec3(0.80,0.90,1.00);\n\t\tcol += 0.20*amb*vec3(0.10,0.15,0.20)*ao;\t\t\t\t\t\t\n\t\tcol += 0.15*bac*vec3(1.00,0.97,0.85)*ao;\t\t\t\t\t\n\t\tcol += 0.70*dif*vec3(0.50,0.60,0.80);\t\t\t\t\t\t\n\n\t\tfloat spe = sh*pow(clamp( dot( lig, reflect(rd,nor) ), 0.0, 1.0 ) ,1.0 );\t\n\t\tfloat rim = ao*pow(clamp( 1.0+dot(nor,rd),0.0,1.0), 3.0 );\n\t\t\n\t\tcol =oc*col + vec3(1.0)*col*spe + 0.2*rim*(0.5+0.5*col);\n\t\t\n\t\t//fake pointlight from top \n\t\tif (t.y==2.) {\n\t\t\tro=vec3(0.0,4.0,0.0) - pos;\n\t\t\tamb=length(ro);\n\t\t\tdif=dot(nor,normalize(ro));\n\t\t\tbac=1.0-pow(min(1.0, amb/5.4),2.0);\n\t\t\tamb=2.0*dif*bac;\n\t\t\tcol*=amb;\n\t\t}\n\t\t\n\t\tcol*=exp(0.07*f); col*=0.8;\t\n\t} else {\n\t\tcol*=pow(1.0/iResolution.y*fragCoord.y, 5.0+ pow(iMouse.y*0.05,5.0));\n\t}\n\t\n\tfragColor=vec4( col, 1.0);\n\t}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MdS3Dw","date":"1389148260","viewed":375,"name":"Corals","username":"avix","description":"underwater corals...","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d","underwater"],"hasliked":0,"parentid":"","parentname":""}}