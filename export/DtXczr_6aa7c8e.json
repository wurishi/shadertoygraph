{"ver":"0.1","info":{"id":"DtXczr","date":"1690315287","viewed":328,"name":"Churning","username":"ChunderFPV","description":"Cube grid affected by waves.","likes":24,"published":1,"flags":0,"usePreview":0,"tags":["waves","grid","raymarch","cubes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define A(a) mat2(cos(m.a+vec4(0,11,33,0)))  // rotate\nvoid mainImage( out vec4 C, vec2 U )\n{\n    float t = iTime*6.3,\n          d = 0., \n          i = d,\n          s;\n    vec2 R = iResolution.xy,\n         m = (iMouse.xy-.5*R)/R.y*4.; // mouse\n    vec3 o = vec3(0, 2, -15), // cam\n         u = normalize(vec3((U-.5*R)/R.y, .6)), // coords\n         c = vec3(.5, .8, 1), // color\n         p, g;\n    if (iMouse.z < 1.) // not clicking\n        m = -vec2(t/30., .3); // move mouse\n    mat2 v = A(y), // pitch (mouse vertical)\n         h = A(x); // yaw (mouse horizontal)\n    for (; i++<90.;) // raymarch\n    {\n        p = o+u*d;\n        p.yz *= v;\n        p.xz *= h;\n        p.y -= pow(length(p.xz), 2.)*.02;          // curve horizon up\n        p.y += cos(length(round(p.xz))-t/2.);      // make waves\n        g = abs(p-round(p));                       // form grid\n        s = max(g.x, max(p.y*-sign(m.y), g.z))-.3; // grid to float\n        if (s < .001 || d > 90.) break;            // near/far limits\n        d += s*.2;                                 // add to scene\n    }\n    c *= 6./d;    // multiply scene with color & adjust brightness\n    c += .1/c;    // orange glow\n    c += 16.*s/d; // specular highlights\n    C = vec4(c*c*c, 1);\n}","name":"Image","description":"","type":"image"}]}