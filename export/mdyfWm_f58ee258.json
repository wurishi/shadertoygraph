{"ver":"0.1","info":{"id":"mdyfWm","date":"1698268706","viewed":76,"name":"Weird Rainbow thing I made","username":"TwentySeven","description":"yeah","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["color"],"hasliked":0,"parentid":"mdGBWh","parentname":"graphing thtthg"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 m = (iMouse.xy-(iResolution.xy/2.))/16.;\n    vec2 M = ((iMouse.xy-(iResolution.xy/2.))/iResolution.xy)/16.; \n    float zoom = mix(8.,16.,2.*(.25+clamp(.1,.25,M.x)));\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (((fragCoord)-(iResolution.xy/2.))+(1./16.))/16.;\n   \n   #define steps 16\n   fragColor = vec4(0);\n    float ux = uv.x;\n    float uy = uv.y;\n   \n    float grid = 1.-min(clamp(0.,1.,floor(abs(mod(ux,1.))+.95)),clamp(0.,1.,floor(abs(mod(uy,1.))+.95)));\n for(int i=0; i<steps; i++){ \n    float j = float(i);\n    float l= j/float(steps);\n    #define hass(bruh) (mix(-0.,1.,hash(vec3(float(bruh)+(iTime/4096.)+j,uv.x,uv.y))))\n    float ha1 = hass(steps);\n    float ha2 = hass(steps*4);\n    float ha3 = hass(steps*6);\n\n    vec2 k = hash2(vec3((iTime/4096.)+j,uv.x+5.,uv.y))-0.5;\n    float r = blend(1.,ha1);\n    float g = blend(1.,ha2);\n    float b = blend(1.,ha3);\n    \n    \n    float x = uv.x+blend(.1,k.x);\n    float y = uv.y+blend(.1,k.y); \n\n\n    float col =x*r+y*b;\n\n    // Output to screen\n    #define opacity steps\n    fragColor += vec4(vec3(ha1,ha2,ha3)*vec3(col)+((grid/(4.*float(steps)))),1.0)/float(opacity);\n}\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"float hash(vec3 p3){\n\tp3  = fract(vec3(mod(p3,256.)) * 0.618033988749894);\n    p3 += dot(p3, p3.zyx + 30.61803398874989);\n    return fract((p3.x + p3.y) * p3.z);\n}\nvec2 hash2(vec3 p3){\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\nfloat function(float x,float y,float thickness){\nreturn float((y-thickness)<x)*float((y+thickness)>x);\n}\nfloat blend(float a, float b){\nreturn mix(-a,a,b);\n}","name":"Common","description":"","type":"common"}]}