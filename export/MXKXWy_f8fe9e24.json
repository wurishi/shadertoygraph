{"ver":"0.1","info":{"id":"MXKXWy","date":"1720464364","viewed":53,"name":"Cyber Tunnel uk0141","username":"uk0141","description":"ifs practice","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","tunnel","ifs","cyber"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define TMIN .5\n#define TMAX 20.\n#define EPS .001\n#define ITR 256.\n#define ID_NONE -1.\n#define ID_BOX 1.\n\nmat2 rot(float t){\n    return mat2(cos(t), -sin(t), sin(t), cos(t));\n}\n\nfloat sdBox(in vec3 p, in vec3 box) {\n   vec3 d = abs(p) - box;\n   return min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nvec2 intersect(vec3 p){\n    vec2 res = vec2(ID_NONE, 20.);\n    vec2 obj;\n    \n    vec3 p_o = p;\n    p = mod(p, 2.)-1.;\n    for(int i = 0;i <6;i++){\n        p = abs(p)-1.19;\n        p.xy = rot(-2.23)*p.xy;\n        p = abs(p)-0.19;\n        p.yz = rot(-.1)*p.yz;\n       \n        p *= 1.18;\n    }\n    obj = vec2(ID_BOX, sdBox(p,vec3(1., .5, .5)));\n    if(obj.y < res.y)res = obj;\n\n\n    return res;\n}\n\nvec3 genNormal(vec3 p){\n    vec2 e = vec2(EPS, 0.);\n    return normalize(vec3(  intersect(p+e.xyy).y-intersect(p-e.xyy).y, \n                                              intersect(p+e.yxy).y-intersect(p-e.yxy).y, \n                                              intersect(p+e.yyx).y-intersect(p-e.yyx).y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    vec2 p = (fragCoord*2.-iResolution.xy)/iResolution.y;\n    \n    vec3 ro = vec3(0., 0.,-iTime*.8);\n    vec3 rd = vec3(p, -1.5);\n    rd = normalize(rd);\n    \n    vec3 ray;\n    float t = TMIN;\n    vec3 col = vec3(0.);\n    \n    for(float i = 0.;i < ITR;i++){\n        ray = ro+rd*t;\n        vec2 obj = intersect(ray);\n        if(obj.x == ID_BOX){\n            if(obj.y < EPS){\n                col += .2*i*vec3(.3 , .1, .1);\n                break;\n            }\n        }\n        if(t > TMAX)break;\n        t += .7*obj.y;\n    }\n\n    // Time varying pixel color\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}