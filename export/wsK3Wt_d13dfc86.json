{"ver":"0.1","info":{"id":"wsK3Wt","date":"1571236386","viewed":2896,"name":"Sharpen Filter Mask","username":"Nihilistic_Furry","description":"A filter mask shader that uses a simple sharpening algorithm where it subtracts the edge detection from the original, which creates more crisp edges.","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["sharpen","filtermask"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SHARPEN_FACTOR 16.0\n\nvec4 sharpenMask (sampler2D tex, vec2 fragCoord)\n{\n    // Sharpen detection matrix [0,1,0],[1,-4,1],[0,1,0]\n    // Colors\n    vec4 up = texture (tex, (fragCoord + vec2 (0, 1))/iResolution.xy);\n    vec4 left = texture (tex, (fragCoord + vec2 (-1, 0))/iResolution.xy);\n    vec4 center = texture (tex, fragCoord/iResolution.xy);\n    vec4 right = texture (tex, (fragCoord + vec2 (1, 0))/iResolution.xy);\n    vec4 down = texture (tex, (fragCoord + vec2 (0, -1))/iResolution.xy);\n    \n    // Return edge detection\n    return (1.0 + 4.0*SHARPEN_FACTOR)*center -SHARPEN_FACTOR*(up + left + right + down);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Detect edges and output to screen\n    fragColor = sharpenMask (iChannel0, fragCoord);\n}\n","name":"Image","description":"","type":"image"}]}