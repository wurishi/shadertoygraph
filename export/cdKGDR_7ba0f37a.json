{"ver":"0.1","info":{"id":"cdKGDR","date":"1678399785","viewed":56,"name":"Voronoi Corn","username":"Oneleven","description":"It's corn!\nPlayed with distribution of voronoi cells and this happened.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["voronoi","corn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define STEP 1.\n#define PI 3.141592\n\n//Hash without Sine by Dave_Hoskins\n//https://www.shadertoy.com/view/4djSRW\nfloat hash12(vec2 p)\n{\n\tvec3 p3  = fract(vec3(p.xyx) * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec2 hash22(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\nvec3 hash32(vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}\n\n//https://www.shadertoy.com/view/mdy3DR\nvec3 pal(float progress, vec3 scale, vec3 offset, vec3 minC, vec3 maxC)\n{\n    return (cos((progress * scale + offset + 1.0) * PI) * 0.5 + 0.5) * (maxC - minC) + minC;\n}\n\nvec2 getDot(vec2 index)\n{\n    return index + normalize(index) * sin(length(index) + iTime * -5.0) * 0.5 + hash22(index)*0.4;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy)/iResolution.y;\n    uv *= (sin(iTime * 0.1) * 0.5 + 0.5) * 40.0 + 20.0;\n    \n    vec2 index = floor(uv);\n    uv = fract(uv);\n    \n    float minDist = 1.0;\n    vec2 point = vec2(0);\n    \n    for (float i = -STEP; i <= STEP; i++)\n        for (float j = -STEP; j <= STEP; j++)\n            {\n                vec2 localPoint = index + vec2(i,j);\n                float d = distance(index + uv, getDot(localPoint));\n                \n                if (d < minDist)\n                {\n                    minDist = d;\n                    point = localPoint;\n                }\n            }\n\n    vec3 col = vec3(minDist);\n    \n    float shadow = smoothstep(1.4, 0.0, minDist);\n    col = pal(hash12(point), vec3(1., 1.0, 2.3), vec3(0.0, 0.35, 0.0), vec3(0.55,0.33,0.0), vec3(1.1,0.8,0.55)) * shadow;\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}