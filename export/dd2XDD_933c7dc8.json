{"ver":"0.1","info":{"id":"dd2XDD","date":"1671485557","viewed":63,"name":"asdasd_color_mapping_to_textures","username":"mishazawa","description":"color mapping to textures","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colormapping"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec3 luminanceWeighting = vec3(0.2125, 0.7154, 0.0721);\n\nfloat luminance (vec3 color) {\n  return dot(color.rgb, luminanceWeighting);\n}\n\nconst int DIM = 5;\n\nvec3[6] colors = vec3[](\n    vec3(1., 1., 1.),\n    vec3(1., 0., 0.),\n    vec3(1., 0., 1.),\n    vec3(1., 1., 0.),\n    vec3(0., 0., 1.),\n    vec3(0., 1., 1.)\n);\n\nvec4 textures(int index, vec2 uv) {\n    if (index == 0) return texture(iChannel1, uv);\n    if (index == 1) return texture(iChannel2, uv);\n    return texture(iChannel3, uv);\n}\n\nint map(float x, float in_min, float in_max, float out_min, float out_max){\n  float t =  (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n  return int(t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 col = texture(iChannel0, uv);\n\n    int index = map(luminance(col.rgb), 0., 1., 0., float(DIM));\n\n    fragColor = vec4(textures(index, uv).rgb,1.0);\n}","name":"Image","description":"","type":"image"}]}