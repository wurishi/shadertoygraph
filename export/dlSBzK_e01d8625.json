{"ver":"0.1","info":{"id":"dlSBzK","date":"1694227363","viewed":25,"name":"jelly truchet (zv)","username":"zerovolts","description":"First truchet tile experiment.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gradient","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float GRID_SIZE = 12.;\n\nconst vec3 COLOR_ACCENT_1 = vec3(1., .04, .11);\nconst vec3 COLOR_ACCENT_2 = vec3(.01, .77, .37);\nconst vec3 COLOR_DARK = vec3(.11, .08, .16);\n\nfloat hash2(vec2 p) {\n\treturn texture(iChannel0, p).x;\n}\n\nvec3 lerpColor(vec3 from, vec3 to, float progress) {\n    vec3 range = to - from;\n    return from + range * progress;\n}\n\nvec4 make_grid(vec2 uv) {\n    vec2 coord = floor(uv * GRID_SIZE);\n    vec2 cell_uv = fract(uv * GRID_SIZE);\n    return vec4(coord, cell_uv);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n    float aa = 8. / iResolution.y;\n    vec4 grid = make_grid(uv - vec2(0., iTime * .1));\n    \n    // layer moving noise in four directions\n    float noise = 0.;\n    noise += texture(iChannel0, (uv - 13.) / 16. + iTime * .007).x;\n    noise += texture(iChannel0, (uv + 167.) / 16. - iTime * .01).x;\n    noise += texture(iChannel0, (uv + 31.) / 16. * vec2(-1., 1.) - iTime * .005).x;\n    noise += texture(iChannel0, (uv - 71.) / 16. * vec2(1., -1.) - iTime * .013).x;\n    noise /= 4.;\n    \n    float h = hash2(grid.xy / 100.);\n    vec2 st = grid.zw;\n    \n    // flip into quadrants\n    if (int(grid.x) % 2 == 0) {\n        st.x = 1. - st.x;\n    }\n    if (int(grid.y) % 2 == 0) {\n        st.x = 1. - st.x;\n    }\n    \n    // flip tile randomly\n    if (h > .5) {\n        st.x = 1. - st.x;\n    }\n    \n    // mirror over x = -y + 1\n    st = st.x + st.y < 1.\n        ? vec2(st.x, st.y)\n        : vec2(1. - st.y, 1. - st.x);\n    \n    // truchet distance\n    float d = h > .5 ? length(st) : 1. - length(st);\n    \n    float y = uv.y + .5;\n    // adjust the slope of the gradient so it isn't as overpowering\n    float y_fix = 1. - pow(1. - y, 2.);\n    float width = noise * .4 + .3;\n    vec3 color = lerpColor(\n        lerpColor(COLOR_DARK, COLOR_ACCENT_1, y),\n        lerpColor(COLOR_ACCENT_2, COLOR_DARK, y_fix),\n        smoothstep(width + aa, width - aa, d)\n    );\n    \n    vec3 srgb = pow(color, vec3(1. / 2.2));\n    fragColor = vec4(srgb, 1.0);\n}","name":"Image","description":"","type":"image"}]}