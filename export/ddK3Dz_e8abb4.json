{"ver":"0.1","info":{"id":"ddK3Dz","date":"1678427716","viewed":184,"name":"crt effect cubemap","username":"lalaoopybee","description":"drag mouse around to view different angles!\n\nthis is my [url=https://www.shadertoy.com/view/DlfSz8]crt effect[/url] in action.","likes":5,"published":1,"flags":32,"usePreview":0,"tags":["mouse","moire","cubemap","crt","scanline","abberation","npr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define CURVATURE 3.9\n\n#define BLUR .021\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv=fragCoord/iResolution.xy;\n    \n    //curving\n    vec2 crtUV=uv*2.-1.;\n    vec2 offset=crtUV.yx/CURVATURE;\n    crtUV+=crtUV*offset*offset;\n    crtUV=crtUV*.5+.5;\n    \n    vec2 edge=smoothstep(0., BLUR, crtUV)*(1.-smoothstep(1.-BLUR, 1., crtUV));\n    \n    fragColor=texture(iChannel0, crtUV)*edge.x*edge.y;\n    \n    //lines\n    if(mod(fragCoord.y, 2.)<1.) fragColor.rgb*=.2;\n    else if(mod(fragCoord.x, 3.)<1.) fragColor.rgb*=.5;\n    else fragColor*=1.7;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define PI 3.1415927\n\n//https://www.shadertoy.com/view/XsjfDD\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    //init image\n    vec2 mousePt=iMouse.xy;\n    if(iMouse.xy==vec2(0)) mousePt=.5*iResolution.xy;\n    \n    float rotX = (mousePt.x / iResolution.x) * 2. * PI;\n    float rotY = (mousePt.y / iResolution.y) * PI;\n    vec2 uv = 2.5 * (fragCoord.xy - .5 * iResolution.xy) / iResolution.xx;\n    vec3 camO = vec3(cos(rotX), cos(rotY), sin(rotX));\n    vec3 camD = normalize(vec3(0)-camO);\n    vec3 camR = normalize(cross(camD, vec3(0, 1, 0)));\n    vec3 camU = cross(camR,camD);\n   \tvec3 dir =  normalize(uv.x * camR + uv.y * camU + camD);\n    fragColor = texture(iChannel0, dir);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"#define CA_AMT 1.03\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv=fragCoord/iResolution.xy;\n    fragColor=vec4(\n        texture(iChannel0, (uv-.5)*CA_AMT+.5).r,\n        texture(iChannel0, uv).g,\n        texture(iChannel0, (uv-.5)/CA_AMT+.5).b,\n        1.\n    );\n}","name":"Buffer B","description":"","type":"buffer"}]}