{"ver":"0.1","info":{"id":"XfSyDh","date":"1722217653","viewed":201,"name":"Magic Swirl","username":"StormOfTheVoid","description":"It sure is","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["magic"],"hasliked":0,"parentid":"McSyzW","parentname":"Expensive Swirl "},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 color, in vec2 coord) {\n\n    vec2 uv = coord / iResolution.xy;\n    color = texture(iChannel0, uv); \n\n\n}\n\n\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 field(vec2 coord){\n    \n    float x=coord.x;\n    float y=coord.y;\n    float a=-4.*x*(x*x+y*y-1.)+2.*y;\n    float b=-4.*y*(x*x+y*y-1.)-2.*x;\n    return vec2(a,b);\n}\n\nfloat normal(float u, float s){\n    \n    for(float i=1.;i<20.;i++){\n\n    float a=6.*rand()-3.;\n    float b=1./(s*pow(2.*3.141592,0.5))*pow(2.71828,-0.5*pow((a-u)/s,2.));\n    float c=1./(s*pow(2.*3.141592,0.5))*rand();\n    if(c<b){\n        return a;\n    }\n    }\n    return 0.;\n    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float skip=60.;\n    vec4 col=vec4(0.);\n    \n    if(mod(floor(float(iFrame)),skip)<=0.){\n    setNSeed();\n    vec2 uv = fragCoord/iResolution.x-vec2(0.5,0.5*iResolution.y/iResolution.x);\n    uv=uv*7.5;\n\n    vec3 col=vec3(0.);\n\n    if(length(uv)<3.){\n    for(float h1=-1.4;h1<=1.4;h1+=0.25){\n    for(float h2=-1.25;h2<=1.3;h2+=0.25){\n    \n    vec2 h =vec2(h1,h2);   \n\n    for(float i=1.;i<50.;i++){\n    \n    vec2 d=field(h);\n    h+=d*0.0005*i+0.005*vec2(normal(0.,1.),normal(0.,1.))*(75./i);\n    col += 0.25*pow(2.,-100.*length(uv-h))*vec3(abs(d.x),0.5*length(d),abs(d.y));\n    }\n    }\n    }\n    }\n    fragColor = vec4(col,1.0);\n\n    }else{\n    fragCoord = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, fragCoord); \n    }\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"const ivec2 FS_ADDR = ivec2(0.0);\n\nconst vec4 fs_stt = vec4(1.0);\n\nuint seed = 0u;\n\nvoid setSeed(uint s) {\n    seed = s;\n}\n\nuint hash(uint s) {\n    s ^= 2747636419u;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    s ^= s >> 16;\n    s *= 2654435769u;\n    return s;\n}\n\nuint randI() {\n    seed = hash(seed);\n    return seed;\n}\n\nfloat rand() {\n    uint rn = randI();\n    rn %= 1000000000u;\n    float rs = float(rn);\n    rs /= 1000000000.0;\n    return rs;\n}\n\n#define setNSeed() setSeed(uint(float(hash(uint(iTime*1000.0))%1000u)))\n\n","name":"Common","description":"","type":"common"}]}