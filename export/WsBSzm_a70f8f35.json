{"ver":"0.1","info":{"id":"WsBSzm","date":"1553197426","viewed":201,"name":"Spiderweb Fractal","username":"efairbanks","description":"IDK spidery fractals","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","spider","idk"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 c2p(vec2 p){return vec2(atan(p.y,p.x),length(p));}\nvec2 p2c(vec2 p){return vec2(cos(p.x),sin(p.x))*p.y;}\nvec3 getPixel(vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5; uv.x *= (iResolution.x/iResolution.y); uv *= 20./pow(iTime,3.1);\n    for(int i=0;i<13;i++) {\n    \tuv.xy = p2c(c2p(uv.xy)*vec2(float(((i+4)%9)),1.1)-vec2(0.1,0.));\n    \tuv.xy += 0.0275;\n    }\n    if(length(uv)<0.3) return vec3(1.);\n    return vec3(0.);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #define SSAA 4\n    vec3 col = vec3(0.);\n    for(int x=-SSAA/2;x<SSAA/2;x++)\n        for(int y=-SSAA/2;y<SSAA/2;y++)\n            col += getPixel(vec2(fragCoord.x+float(x)/float(SSAA),\n                                 fragCoord.y+float(y)/float(SSAA)));\n\tfragColor = vec4(col/pow(2.,float(SSAA)),1.);\n}\n","name":"Image","description":"","type":"image"}]}