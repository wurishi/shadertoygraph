{"ver":"0.1","info":{"id":"XcBfRt","date":"1725320559","viewed":14,"name":"circuit board v1 x vlllll","username":"valalalalala","description":"2d circuit board, based on https://www.youtube.com/watch?v=8xYE0k1ePd4 ; idk how convincing it is...\n\nNeed something for my demo project floor and walls: https://www.youtube.com/watch?v=W3163_qOPcE","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"        ////////////////////////////////////////////////////////////////////\n       //                                                                 //\n      // \"circuit board v1\"                                              ///\n     //                                                                 ////\n    // First attempt at making a circuit board pattern                 // //\n   // Creative Commons Attribution-NonCommercial-ShareAlike           //  //\n  // 3.0 Unported License                                            //   //\n //                                                                 //   //\n/////////////////////////////////////////////////////////////////////   //\n//                                                                 //  //\n//                                                                 // //\n// by Val \"valalalalala\" GvM ðŸ’ƒ 2023                               ////\n//                                                                 ///\n/////////////////////////////////////////////////////////////////////\n\n// better looking version:\n// https://www.shadertoy.com/view/Wds3z7\n// https://www.shadertoy.com/view/WtyBRw\n// https://www.shadertoy.com/view/XdSGz1\n// probably will try something with truchet tiles next...\n\n\n#define BUMPY .22\n\nvec2 hash22( in vec2 uv ) {\n    vec3 q = fract( uv.xyx * vec3(19.191, 53.733, 73.761));\n    q += dot(q, q + vec3(41.557, 23.929, 37.983));\n    return fract(vec2( q.x * q.y, q.y * q.z ));\n}\n\nfloat chebyshev(in vec2 st, in vec2 pt) {\n    return max(abs(st.x - pt.x), abs(st.y-pt.y));;\n}\n\nfloat voronoi(vec2 uv, bool cheby, bool f1) {\n    vec2 st = fract(uv);\n    vec2 id = floor(uv);\n    \n    \n    float v = 3e3;\n    float w = -3e3;\n    for(int i = -1 ; i <= 1 ; i++){\n        for(int j = -1 ; j <= 1 ; j++) {\n            vec2 nb = vec2(float(i), float(j));\n            vec2 pt = hash22(id + nb) + nb;\n            float d = cheby ? chebyshev(st, pt) : distance(st, pt);\n            // is there some better to track second closest?\n            if (d < v) {\n                w = v;  \n                v = d; \n            } else if (d < w) {\n                w = d; \n            }\n        }       \n    }\n    return f1 ? v : w;\n}\n\nfloat circuit(vec2 uv, float scale, float bands) {    \n    float d = .0;\n    d += voronoi(uv * scale, true, true);  // voronoi f1 chebyshev\n    d -= voronoi(uv * scale, true, false); // voronoi f2 chebyshev\n    d = abs(sin(d * bands)); // wav\n    return d;\n}\n\nvoid mainImage(out vec4 result, in vec2 st ) {\n    float t = iTime * .001;\n    vec2 ii = vec2(cos(t), sin(t)) * 88.88;\n    vec2 uv = st / iResolution.xy + ii;\n   \n    float scale = 2.2;\n    float bands = 43.34;\n  \n    float c = circuit(uv, scale, bands);\n    \n    vec3 board_color = vec3(.1, .9, .1);\n    vec3 trace_color = vec3(.8, .7, .1); \n    vec3 color = mix(trace_color, board_color, c * c);\n  \n#ifdef BUMPY   \n    vec2 fudge = vec2(.01);\n    float b = circuit(uv + fudge, scale, bands);\n    b = max(b,c);\n    color *= 1. +  BUMPY * (c - b);\n#endif\n\n    result = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}