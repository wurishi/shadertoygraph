{"ver":"0.1","info":{"id":"X3SfRz","date":"1729096189","viewed":15,"name":"Fork Damaged VC Yifan_Lu 880","username":"Yifan_Lu","description":"Simulating a damaged VCR playing a video","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"stGBWR","parentname":"Damaged VCR puzzle"},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;\n    float glitch = mod(iTime * 10.0, iResolution.y);\n    float dy = fragCoord.y - glitch;\n    if(dy > 0.) {\n        warpedUv.x += tan(dy) * (1. - smoothstep(0., 50., dy)) * 0.5;\n    }\n\n    \n    vec2 offset1 = vec2(10.0, 20.0 * sin(iTime)) / iResolution.xy;\n    vec2 offset2 = vec2(10.0 * sin(iTime), 5.0) / iResolution.xy;\n    vec2 offset3 = vec2(10., 5.0 * sin(iTime)) / iResolution.xy;\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}