{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"\n// Shader Advent Calendar 2024, #22\n// Read article here:\n// https://github.com/mrange/shader-advent-2024/blob/main/day-22/README.md\n//\n// Basic halftone example (applied to video) - https://www.shadertoy.com/view/lfKBWV\n// Halftone dot shapes illustration          - (this one!)\n// Halftone - 3 kinds                        - https://www.shadertoy.com/view/XcKfWc\n\n\n\n#define pi 3.1415926\n\nfloat hatchHalftone(vec2 uv) {\n   return 1.0 - 2. * abs(uv.y - 0.5);\n}\n\nfloat squareHalftone(vec2 uv) {\n   return 1.0 - 2. * max(abs(uv.x - 0.5), abs(uv.y - 0.5));\n}\n\nfloat roundHalftone(vec2 uv) {\n   // just take the distance to center and divide by diagonal\n   return 1.0 - length(uv - 0.5) / length(vec2(0.5, 0.5));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float zoom = floor(4. - 3. * sin(iTime * pi / 8.)) * 8.;\n    int patternId = int(mod(iTime + 4., 24.) / 8.); \n    \n    if(iMouse.z > 0.) {\n        zoom = 120. * iMouse.x/iResolution.x;\n        patternId = int(3. * iMouse.y / iResolution.y);\n    }\n    \n    float lum = texture(iChannel0, fragCoord/iResolution.xy).b;\n    \n    if(fragCoord.x/iResolution.x > 0.92)\n        lum = fragCoord.y / iResolution.y; // test gradient\n\n    vec2 gridUv = fragCoord/iResolution.yy;\n    gridUv *= zoom;\n    float a = pi/4.;\n    gridUv = gridUv * mat2(cos(a),sin(a),-sin(a),cos(a));\n    gridUv = mod(gridUv, 1.0);\n\n    float halftone = 0.;\n    \n    if(patternId == 0) \n        halftone = hatchHalftone(gridUv);\n    else if(patternId == 1) \n        halftone = squareHalftone(gridUv);\n    else \n        halftone = roundHalftone(gridUv);\n    \n    float c = halftone < lum ? 1.0 : 0.0;\n\n    // show halftone and source grayscale on the left\n    if (fragCoord.x/iResolution.x < 0.4)\n       c = fragCoord.y/iResolution.y > 0.3 ? lum : halftone;\n\n    fragColor = vec4(c,c,c,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lfyfRc","date":"1734607318","viewed":46,"name":"Halftone dot shapes illustration","username":"teadrinker","description":"when mouse button is down:\n  mouse x = halftone size\n  mouse y = dot shape","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["halftone"],"hasliked":0,"parentid":"","parentname":""}}