{"ver":"0.1","info":{"id":"3dlfR7","date":"1587928538","viewed":105,"name":"snowcrash","username":"blepfo","description":"snow","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["random","static"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 v, float seed) {\n    return fract(sin(dot(v, vec2(25.2332, 19.399)))*seed);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float randomSeed = 98183.232;\n    \n    float uvScale = 15.;\n    vec2 scaleLayer = uv * uvScale;\n    \n    // Snow = finer resolution than the grid\n    float snowScale = uvScale * 6.;\n    vec2 snowLayer = uv * snowScale;\n    vec2 snowGrid = floor(snowLayer);\n    // Only update snow ever 1s\n    float snowUpdate = floor(iTime);\n    float snow = random(snowGrid * snowUpdate, randomSeed);\n    // gridSquares fall at random speed by row\n    float gridX = floor(scaleLayer.x);\n    float gridY = floor(scaleLayer.y);\n    float gridYSpeed = random(vec2(gridX+1.), randomSeed) * 20.;\n    float minSpeed = 5.;\n    vec2 gridIdx = floor(scaleLayer + vec2(0.0, (gridYSpeed + minSpeed) * iTime));\n    \n    float gridValue = random(gridIdx, randomSeed);\n    gridValue = step(0.756, gridValue);\n    \n    \n    vec3 color = vec3(0.);\n    color = mix(color, vec3(snow), gridValue);\n\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}