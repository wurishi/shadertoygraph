{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"// Rebb/TRSi^Paradise \n// Heavily based on work by IQ\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\nfloat an= sin(iTime)/3.14157;\nfloat as= sin(an);\nfloat zoo = .23232+.38*sin(.7*iTime);\n\n    vec2 p = (1.7+an)*fragCoord.xy / iResolution.xy ;  \n \n vec2 z, c;\n    vec2 uv; \t\n    c.x = p.x * sin(2.0)+an;\n    c.y = p.y *sin(2.0)-an;\n    \t\t\n    int i;\n    z = c;\n\t  \n\t  for( int i=0; i<38;i++ )\n{\t\n\n        float x = (z.x * z.x - z.y * z.y *zoo ) + c.x;\n        float y = (z.y * z.x + z.x * z.y *zoo) + c.y;\n\tuv.x = x ;\n\tuv.y = y ;\n\t         \n\tz.x = x+as;\n\tz.y = y+as;    \n\n}\n\n vec3 col = texture( iChannel0,uv ).zyx;\n  fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MslGz7","date":"1366621009","viewed":274,"name":"MandelOnTexture","username":"rebb","description":"Simple \"mandelmapper\" on 2d texture","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""}}