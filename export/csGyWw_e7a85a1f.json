{"ver":"0.1","info":{"id":"csGyWw","date":"1696170358","viewed":92,"name":"The Perfect Playhouse","username":"AlexAnimations","description":"This Shader uses some trigonometry and pythagorian thereom to give calculate lighting.","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["lighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.,0.,0.);\n    if(uv.x<.5){\n        if(uv.y<.5){\n            col.x = .8-length(vec2(.5+cos(iTime*2.)/2.,.5+sin(iTime*2.)/2.)-uv);\n        }else{\n            col.z = .8-length(vec2(.5+cos(iTime*2.)/2.,.5+sin(iTime*2.)/2.)-uv);\n        }\n    }else{\n        if(uv.y<.5){\n            col.y = .8-length(vec2(.5+cos(iTime*2.)/2.,.5+sin(iTime*2.)/2.)-uv);\n        }else{\n            col.x = .8-length(vec2(.5+cos(iTime*2.)/2.,.5+sin(iTime*2.)/2.)-uv);\n            col.z = .8-length(vec2(.5+cos(iTime*2.)/2.,.5+sin(iTime*2.)/2.)-uv);\n        }\n    }\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}