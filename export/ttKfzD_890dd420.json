{"ver":"0.1","info":{"id":"ttKfzD","date":"1614043743","viewed":170,"name":"Color Distortion & Brick","username":"csgradle","description":"Go into full screen mode and stare at the center. makes you feel like you're being sucked in!\n\nI made the brick shader for this, then added noise distortion and chromatic aberration. ","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["grid","chromaticaberration","distortion","color","brick","brick"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\nmat2 scale(vec2 _scale){\n    return mat2(_scale.x,0.0,\n                0.0,_scale.y);\n}\n\n\n\nfloat brick(vec2 st, vec2 size, float thickness) {\n    float xt = fract(st.x*size.x);\n    float yt = fract(st.y*size.y);\n    return step(1.-thickness*(size.x/size.y), xt)+step(1.-thickness,yt);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // fix coordinate pixels\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = uv-0.5;\n    float screenRatio = iResolution.x/iResolution.y;\n    uv.x *= screenRatio;\n\n    // distort the space with noise\n    vec2 st = uv;\n    float noise = (noise(uv*3.))*2.+0.5;\n    st = uv * scale(vec2(1.+noise));\n    \n    //BRICKS:\n    // green (no scale)\n    float brickScale = 10.*sin(iTime*0.5)+10.001;\n    float green = brick(st, vec2(brickScale), 0.1);\n    // blue and red (scale down and scale up based on distance to center) \n    float difference = length(st)*0.01;\n    vec2 contract = st * scale(vec2(1.-difference));\n    float blue = brick(contract, vec2(brickScale), 0.1);\n    vec2 expand = st * scale(vec2(1.+difference));\n    float red = brick(expand, vec2(brickScale), 0.1);\n    \n    \n    // final color \n    vec3 col = vec3(red, green, blue);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}