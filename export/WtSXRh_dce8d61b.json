{"ver":"0.1","info":{"id":"WtSXRh","date":"1564912373","viewed":415,"name":"Bonzomatic test run #9","username":"Exca","description":"Testing bonzomatic for asm19 shader showdown.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["bonzomatic"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rep(vec3 p, vec3 q)\n{\n  return mod(p,q)-0.5*q;\n}\n\nfloat box(vec3 p, vec3 q)\n{\n  vec3 d = abs(p)-q;\n  return length(max(d,0.0));\n}\n\nfloat sphere(vec3 p, float r)\n{\n  return length(p)-r;\n}\n\nvec2 cmin(vec2 a, vec2 b)\n{\n  return a.x < b.x ?a:b;\n}\n\nvec2 dist(vec3 p)\n{\n  vec2 s =vec2(sphere(p+vec3(0.,0.,-3.),0.3),0.);\n  \n  vec3 id = vec3(p.x/1.,(p.y/2.),(p.z/2.));\n  p = rep(p+vec3(0.5+sin(id.z+id.y), sin(id.y)*4.,cos(id.z)*2.),vec3(6.,2.,2.));\n  vec2 b = vec2(box(p+vec3(0.0), vec3(0.8)),id.x+id.y);\n  \n  vec2 sum =cmin(s,b);\n  return b;\n}\nvec3 light(vec3 rd,vec3 p)\n{\n  vec2 eps=vec2(0.,0.1);\n  vec2 d1 = dist(p+eps.yxx);\n  vec2 d2 = dist(p-eps.yxx);\n  vec2 d3 = dist(p+eps.xyx);\n  vec2 d4 = dist(p-eps.xyx);\n  vec2 d5 = dist(p+eps.xxy);\n  vec2 d6 = dist(p-eps.xxy);\n  \n  vec3 n = normalize( vec3(d1.x-d2.x, d3.x-d4.x, d5.x-d6.x));\n  \n  float m =max(0.,dot(-rd,n));\n  vec3 di = vec3(m);\n  di = vec3(1.);\n  return di;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n  uv*=2.;\n  uv -= 1.;\n  uv /= vec2(iResolution.y / iResolution.x, 1);\n  \n  vec3 target = vec3(sin(iTime), cos(iTime)*0.0+10.5+iTime*5., cos(iTime*.3));\n  vec3 cam = vec3(0.,iTime*5.,-1.*sin(iTime*0.4));\n  float fov =0.2;\n  \n  vec3 forward = normalize(target - cam);\n  vec3 up = normalize( cross(forward, vec3(0.,1.,0.)));\n  vec3 right = normalize( cross(forward, up));\n  vec3 raydir = normalize( uv.x*right+uv.y*up+ fov*forward);\n  \n  \n  vec3 col = vec3(0.);\n  float t=0.0;\n  for(int i=0;i<10000;i++)\n  {\n    vec3 p = raydir*t+cam;\n    vec2 d=dist(p);\n    t+=d.x;\n    if(d.x <0.00001)\n    {\n      col=vec3(1.);\n      float f = max(0.,(10.-t)/10.);\n      col=light(raydir, p)*abs(vec3(sin(d.y*2.+1.),sin(d.y+3.),sin(d.y*.3)))*f;\n      break;\n    }\n    if(t>100.)\n    {\n      break;\n    }\n  }  \n  \n  fragColor = vec4(col, 1.);\n}\n\n\n","name":"Image","description":"","type":"image"}]}