{"ver":"0.1","info":{"id":"ftVSWD","date":"1640712857","viewed":198,"name":"Hilbert Color Space","username":"sed4906","description":"Using a Hilbert curve to encode color as a single floating-point number. Use the mouse to change the background color!","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["hilbertcurve"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 clicked = vec3(0);\n\nivec3 getHilbertIntegerToTranspose(int num, int level)\n{\n    ivec3 coord = ivec3(0);\n    for (int index = 0; index < 3; ++index) {\n        for (int bit_index = 3 * level - index - 1; bit_index >= 0; bit_index -= 3) {\n            coord[index] = (coord[index] << 1) | ((num & (1 << bit_index)) >> bit_index);\n        }\n    }\n    return coord;\n}\n\nivec3 getHilbertCoord(int h, int level) {\n    ivec3 hilbert_coord = getHilbertIntegerToTranspose(h, level);\n    int temp = hilbert_coord[2] >> 1;\n     for (int i = 2; i > 0; --i) {\n        hilbert_coord[i] = hilbert_coord[i] ^ hilbert_coord[i - 1];\n    }\n    hilbert_coord[0] = hilbert_coord[0] ^ temp;\n    \n    int scan = 2;\n    while (scan != (1 << level)) {\n        int scan_check = scan - 1;\n        for (int index = 2; index >= 0; --index) {\n            if ((hilbert_coord[index] & scan) != 0) {\n                hilbert_coord[0] = hilbert_coord[0] ^ scan_check;\n            } else {\n                temp = (hilbert_coord[0] ^ hilbert_coord[index]) & scan_check;\n                hilbert_coord[0] = hilbert_coord[0] ^ temp;\n                hilbert_coord[index] = hilbert_coord[index] ^ temp;\n            }\n        }\n        scan <<= 1;\n    }\n    return hilbert_coord;\n}\n\nvec3 HilbertColor(float c) {\n    return vec3(getHilbertCoord(int(c*4096.0),4))/15.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    clicked = HilbertColor(iMouse.x/iResolution.x);\n    \n    // Output to screen\n    if(uv.y >= 0.4 && uv.y <= 0.6) {\n        fragColor = vec4(HilbertColor(uv.x),1.0);\n    } else {\n        fragColor = vec4(clicked,1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}