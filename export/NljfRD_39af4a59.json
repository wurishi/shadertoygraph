{"ver":"0.1","info":{"id":"NljfRD","date":"1651856039","viewed":293,"name":"multiscale bump","username":"FabriceNeyret2","description":"variant of Patterson 2004 \"resolution bumping\".  better seen fullscreen.\nleft:          basic bump  :  globally very flat.\nbottom:    bump(LoD)\ntop right: multiscale bump:  weight of LoD i = (1+i)^m    Mouse.x  : m = -2...2","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["shading","bumpmapping","multiscale","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// generalizing http://www.shadedrelief.com/bumping/bumping.html\n\n#define T(l)    texture( iChannel0, U, l ).r\n\n#define bump(l) dot( vec2( dFdx(v=T(l)), dFdy(v) ),   /* bump */           \\\n                     cos(iTime+vec2(0,11) )           /* shading(ligth) */ \\\n                   ) * exp2(l)                        /* emulate level resol */\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = 2.*u/R; \n    \n    \n    float v, w, s=0., i, c=0.,\n          m = iMouse.z>0. ? 4.*(iMouse.x/R.x-.5) : -2.;\n    \n    if (int(u)==int(R)/2)                 { O=vec4(1,0,0,0); return; } //Â red separators\n    if (int(u.y)==int(.3*R.y))            { O=vec4(1,0,0,0); return; }\n    if (U.y<.6 &&int(u)%(int(R)/8)==0)    { O=vec4(1,0,0,0); return; }\n    \n    if (U.y<.6) { O = vec4( .5 + 2.*bump(floor(4.*U.x)) ); return; } // bottom: bump(LoD)\n    if (U.x<1.) { O = vec4( .5 + 2.*bump(0.) ); return; }            // left: basic bump\n    \n    for( i=0.; i < 8.; i++) {             // top: multiscale bump.\n        s += w = pow(1.+i,m);\n        c += w * bump(i);\n    }\n    O = vec4( .5 + 2.*c/s );\n}","name":"Image","description":"","type":"image"}]}