{"ver":"0.1","info":{"id":"ltG3Dh","date":"1474389245","viewed":941,"name":"Tuning noise without sliding pb ","username":"FabriceNeyret2","description":"A white noise has a flat spectrum, so each blurred version is also a white noise texture.\n-> This can be used (right) to tune the scale of a perturbation without creating parasitic motion (as in left).\n\n(NB: would be more direct with Perlin noise :-) )","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["noise","filtering","interpolation","whitenoise","smartblend"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// noise texture version of https://www.shadertoy.com/view/llGGW1\n\nvoid mainImage( out vec4 O, vec2 uv )\n{\n    vec2 R = iResolution.xy,\n         U = uv/R;\n                  \n    float l = (.5-.5*cos(iTime))*6.;                             // noise scaling\n    if (U.x<.5)\n        O = texture(iChannel0,(uv-R/2.)/iChannelResolution[0].xy*exp2(-l));\n    else \n        O = texture(iChannel0,uv/iChannelResolution[0].xy, l).xxxx,\n        O = .5 + (O-.5)*exp2(l);                                       // normalized std-dev \n\n    O = vec4(.5+.5*sin(20.*(U.x+U.y)+O.x));                            // marble pattern\n    O = sqrt(O);                                                       // gamma correction\n}","name":"Image","description":"","type":"image"}]}