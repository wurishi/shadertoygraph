{"ver":"0.1","info":{"id":"cst3R2","date":"1677543542","viewed":353,"name":"fractal GPT","username":"mpusch88","description":"fractal shader made with chatGPT","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractalgpt"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float fractal(vec2 p, float time, float zoom) {\n    float zr = p.x * zoom;\n    float zi = p.y * zoom;\n    float cr = .5 + sin(time);\n    float ci = 0.1;\n    float n = .4;\n    float limit = 5.0;\n    float dzr = 4.0;\n    float dzi = 2.0;\n    for (int i = 0; i < 50; i++) {\n        float zr1 = zr * zr - zi * zi + cr;\n        float zi1 = 2.0 * zr * zi + ci;\n        dzr = 2.0 * zr * dzr - 2.0 * zi * dzi + 1.0;\n        dzi = 2.0 * zr * dzi + 2.0 * zi * dzr;\n        zr = zr1;\n        zi = zi1;\n        if (length(vec2(zr, zi)) > limit) {\n            float logz = log(length(vec2(zr, zi)));\n            float nu = log(logz / log(limit)) / log(3.0);\n            n = float(i) + 1.0 - nu;\n            break;\n        }\n    }\n    return n;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = (fragCoord.xy / iResolution.xy) - 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float time = iTime * 0.3;\n    \n    float wave = sin(uv.y * 10.0 + time * 3.0) * 0.2;\n    vec3 color1 = vec3(wave + 0.5, abs(wave), abs(wave - 0.5));\n    \n    float f = fractal(vec2(uv.x * 6.0, uv.y * 6.0), time, .44);\n    vec3 color2 = vec3(1.0 - f / 50.0);\n    \n    vec3 color = color1 * color2;\n    \n    vec3 bg_color1 = vec3(1.0, 0.5, 0.0); // Orange\n    vec3 bg_color2 = vec3(0.0, 0.0, 1.0); // Blue\n    vec3 bg_color = mix(bg_color1, bg_color2, abs(sin(time)));\n    \n    color = mix(color, bg_color, 0.44);\n    \n    fragColor = vec4(color, 0.5);\n}\n","name":"Image","description":"","type":"image"}]}