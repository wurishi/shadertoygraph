{"ver":"0.1","info":{"id":"csGBDc","date":"1698693289","viewed":135,"name":"Wiggle Effect from HaxeFlixel","username":"TheCatWithShaders","description":"yeah","likes":0,"published":3,"flags":2,"usePreview":0,"tags":["wavy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int EFFECT_TYPE_DREAMY = 0;\n\n\t\tconst int EFFECT_TYPE_WAVY = 1;\n\n\t\tconst int EFFECT_TYPE_HEAT_WAVE_HORIZONTAL = 2;\n\n\t\tconst int EFFECT_TYPE_HEAT_WAVE_VERTICAL = 3;\n\n\t\tconst int EFFECT_TYPE_FLAG = 4;\n\n\t\t\n\n\t\tconst int effectType = 4;\n\n   const float uSpeed = 2.25;\n\nconst float uFrequency = 5.0;\n\nconst float uWaveAmplitude = 0.1;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n\n{\n\n    vec2 uv = (fragCoord-iResolution.xy)/iResolution.y;\n\n    vec2 pt = uv;\n\n    if (effectType == EFFECT_TYPE_DREAMY) \n\n    {\n\n        float offsetX = sin(pt.y * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.x += offsetX;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_WAVY) \n\n    {\n\n        float offsetY = sin(pt.x * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.y += offsetY;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_HEAT_WAVE_HORIZONTAL)\n\n    {\n\n        float x = sin(pt.x * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.x += x;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_HEAT_WAVE_VERTICAL)\n\n    {\n\n        float y = sin(pt.y * uFrequency + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.y += y;\n\n    }\n\n    else if (effectType == EFFECT_TYPE_FLAG)\n\n    {\n\n        float y = sin(pt.y * uFrequency + 10.0 * pt.x + iTime * uSpeed) * uWaveAmplitude;\n\n        float x = sin(pt.x * uFrequency + 5.0 * pt.y + iTime * uSpeed) * uWaveAmplitude;\n\n        pt.x += x;\n\n        pt.y += y;\n\n    }\n\n    vec2 texCoord = (pt + 1.0) / 2.0;\n\n    fragColor = texture(iChannel0, texCoord);\n\n}","name":"Image","description":"","type":"image"}]}