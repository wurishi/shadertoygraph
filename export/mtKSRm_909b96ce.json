{"ver":"0.1","info":{"id":"mtKSRm","date":"1686009773","viewed":104,"name":"Square/Circle Shader Shrooms","username":"Bannarama23","description":"My own attempt at doing a shader after the first shader I did. Wish me luck!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["square","shader","cool","repition","trippycolours"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette (float t) {\n\n    vec3 a = vec3(0.628, 0.500, 0.500);   \n    vec3 b = vec3(-2.312, 1.518, -2.222);\n    vec3 c = vec3(-0.972, 0.228, 1.000);\n    vec3 d = vec3(0.000, 0.333, 0.667);\n    \n    return a + b * cos(6.28318 * (c * t + d));\n\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    \n    vec2 uv0 = uv;\n    \n    uv.x += 0.5;\n    uv.y += 1.7;\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5 * cos(uv.xyx + vec3(0,2,4));\n    \n    vec3 lightBlue = vec3(0.141, 0.714, 1.000);\n    vec3 canvas = vec3(0.0);\n    float dimensions = 0.001;\n    vec2 leftBottom = step(vec2(dimensions), uv);\n    vec2 rightTop = step(vec2(dimensions), 1.0 - uv);\n    \n    canvas = lightBlue * leftBottom.x * leftBottom.y * rightTop.x * rightTop.y;\n    \n    for (float i = 0.0; i < 4.0; i++) {\n    \n        uv = fract(uv * 1.5) - 0.5;\n        \n        float d = length(uv) * exp(-length(uv0));\n        \n        canvas = palette(length(uv0) + i * 0.4 - iTime * 0.4);\n        \n        d = sin(d * 40.0 - iTime) / 4.0;\n        d = abs(d);\n        \n        d = pow(0.01 / d, 1.2);\n        \n        canvas *= d;\n        \n        lightBlue += canvas * d;\n    \n        \n    }\n    \n    fragColor = vec4(canvas, 1.0);\n    \n}","name":"Image","description":"","type":"image"}]}