{"ver":"0.1","info":{"id":"dlSfzh","date":"1693752089","viewed":21,"name":"OutlineEye","username":"FFFFFFear1","description":"Actually, i don't know what it is","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["learing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 _ColorCircle = vec3(0,0,1);\nfloat _RadiusCircle = 0.3f;\nvec3 _ColorCenterCircle = vec3(1,1,1);\nfloat _RadiusCenterCircle = 0.3f;\nvec3 _OutlineColor = vec3(1,1,1);\nfloat _OutlineRadius = 0.05f;\nfloat _OutlineSmoothRadius = 0.3f;\nfloat _OutlineSmoothSpeed = 3.0f;\n\nfloat circle(vec2 pt, vec2 center, float radius)\n{\n    vec2 newPt = pt - center;\n    return 1.0f - step(radius, length(newPt));\n}\n\n\nfloat drowEye(vec2 pt, vec2 center, float radius)\n{\n    vec2 newPt = pt - center;\n    return 1.0f - step(radius, length(vec2(newPt.x * 4.5f, newPt.y * 1.1f)));\n}\n\nfloat outline(vec2 pt, vec2 center, float radius, float _sizeOutline)\n{\n    vec2 newPt = pt - center;\n    float outlineSize = _sizeOutline;\n    float circle = 1.0f - step(radius, length(newPt));\n    float outlineArea = (1.0f - step(radius + outlineSize, length(newPt))) - circle;\n                \n    return outlineArea;\n}\n\n\nfloat outline(vec2 pt, vec2 center, float radius, float _sizeOutline, float _smoothRaduis, bool smothed)\n{\n    vec2 newPt = pt - center;\n\n    float outlineSize =  _sizeOutline;\n    float newRauis = radius + outlineSize;\n    float edge = newRauis * _smoothRaduis;\n                \n    float circle = 1.0f - step(radius, length(newPt));\n    float outlineArea = (1.0f - smoothstep(newRauis - edge, newRauis + edge, length(newPt))) - circle;\n                \n    return outlineArea;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 circleArea = _ColorCircle * circle(uv.xy, vec2(0.5f,0.5f), _RadiusCircle);\n    vec3 eyeArea = _ColorCenterCircle * drowEye(uv.xy, vec2(0.5f,0.5f), _RadiusCenterCircle);\n    float outlineSmoothTimestep = _OutlineSmoothRadius *cos(iTime * _OutlineSmoothSpeed) * 2.0f / 0.5f;\n    vec3 outlineArea = _OutlineColor * outline(uv.xy, vec2(0.5f,0.5f), _RadiusCircle, _OutlineRadius, outlineSmoothTimestep, true);\n\n    fragColor = vec4(circleArea + outlineArea + eyeArea,1.0);\n}","name":"Image","description":"","type":"image"}]}