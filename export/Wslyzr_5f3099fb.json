{"ver":"0.1","info":{"id":"Wslyzr","date":"1584023293","viewed":577,"name":"Rib","username":"gaz","description":"3d","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI acos(-1.0)\n#define TAU PI*2.0\n#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n\nfloat lpNorm(vec2 p, float n)\n{\n\tp = pow(abs(p), vec2(n));\n\treturn pow(p.x+p.y, 1.0/n);\n}\n\nfloat lpNorm(vec3 p, float n)\n{\n\tp = pow(abs(p), vec3(n));\n\treturn pow(p.x+p.y+p.z, 1.0/n);\n}\n\nvec2 pSFold(vec2 p,float n)\n{\n    float h=floor(log2(n)),a =TAU*exp2(h)/n;\n    for(float i=0.0; i<h+2.0; i++)\n    {\n\t \tvec2 v = vec2(-cos(a),sin(a));\n\t\tfloat g= dot(p,v);\n \t\tp-= (g - sqrt(g * g + 5e-4))*v;\n \t\ta*=0.5;\n    }\n    return p;\n}\n\nfloat pattern(vec2 p)\n{\n    for(int i=0;i<3;i++)\n    {\n    \tp=pSFold(p,8.0);\n\t\tp.x-=0.3;\n    }   \n    return dot(p,rot(0.02)*vec2(1,0));\n}\n\nfloat boxmap(vec3 p)\n{\n    vec3 m = pow(abs(p), vec3(20));\n    vec3 a = vec3(pattern(p.yz),pattern(p.zx),pattern(p.xy));\n\treturn dot(a,m)/(m.x+m.y+m.z);\n}\n\nfloat map(vec3 p)\n{   \n\tvec2 p2=vec2(boxmap(p),lpNorm(p,3.0));\n    float c= 5.0;\n\tp2.y=mod(p2.y,c)-c*0.5;\n\treturn lpNorm(p2,8.0)-0.1;\n}\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat softshadow(in vec3 ro, in vec3 rd)\n{\n\tfloat res = 1.0;\n    float t = 0.05;\n    for(int i = 0; i < 32; i++)\n    {\n\t\tfloat h = map(ro + rd * t);\n        res = min(res, 8.0 * h / t);\n        t += clamp(h, 0.02, 0.1);\n        if(h < 0.001 || t > 5.0) break;\n    }\n    return clamp(res, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro=vec3(0,5,-10);\n    ro= vec3(cos(iTime*0.5+0.5*cos(iTime*.3))*8.0-6.,sin(iTime*0.8+0.5*sin(iTime*0.3))+4.0,sin(iTime*0.3+1.2*sin(iTime*0.3))*10.);\n    ro*=3.;\n    vec3 ta=vec3(3);\n    ta.xz*=rot(iTime);\n    ta.xy*=rot(iTime*0.3);\n    vec3 w = normalize(ta-ro),u=normalize(cross(w,vec3(0,1,0))),v=cross(w,u);\n    vec3 rd=mat3(u,v,w)*normalize(vec3(uv,2.0));\n    vec3 col=vec3(0.12);\n    float t=1.0,d;\n    for(int i=0;i<96;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<0.001) break;\n    }\n    if(d<0.001)\n    {\n        col=vec3(1);\n        vec3 p=ro+rd*t;\n        vec3 n = calcNormal(p);\n        vec3 li = normalize(vec3(2.0, 3.0, 3.0));\n        float dif = clamp(dot(n, li), 0.0, 1.0);\n        dif *= softshadow(p, li);\n        col *= max(dif, 0.3);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd + 2.2 * (1.0 - rimd);\n    \tcol *= frn*0.8;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 60.0);\n        col = mix( col, vec3(0.0), 1.0-exp( -0.0005*t*t ) );\n    }\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}