{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"\nfloat random(float seed) {\n    return fract(sin(seed) * 43758.5453123);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float duration = 3.0;\n    float progress = fract(iTime / duration);\n    \n    float innerRadius = 100.0;\n    float outerRadius = 200.0;\n    \n    float middleRadius = 0.5 * (innerRadius + outerRadius);\n    float halfWidth = 0.5 * (outerRadius - innerRadius);\n    \n    vec2 pos = fragCoord.xy - 0.5 * iResolution.xy;\n    float radius = length(pos.xy);\n\t\n    float fr = halfWidth - abs(radius - middleRadius) + 1.0; \n    if (fr < 0.0) discard;\n    fr = clamp(fr, 0.0, 1.0);\n\t\n    float angle = degrees(atan(-pos.x, -pos.y)) + 180.0; \n    float fa = radians(angle - progress * 360.0) * radius + 1.0;\n    fa = clamp(fa, 0.0, 1.0);\n\t\n\n    float seed = floor(iTime / duration);\n    vec4 color1 = vec4(random(seed), random(seed + 1.0), random(seed + 2.0), 1.0);\n    vec4 color2 = vec4(random(seed + 3.0), random(seed + 4.0), random(seed + 5.0), 1.0);\n    \n\n    vec4 col = mix(color1, color2, fa);\n    col.a *= fr;\n\n    vec4 bgColor = vec4(1, 1, 1, 1);\n    col = mix(bgColor, col, col.a);\n\t\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"Xcyfzw","date":"1734060650","viewed":12,"name":"Hayato Shibukawa Final Project","username":"KuikonHayato","description":"Game Graphic ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hayatoshibukawa"],"hasliked":0,"parentid":"","parentname":""}}