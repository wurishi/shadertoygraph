{"ver":"0.1","info":{"id":"tllSR7","date":"1562512644","viewed":161,"name":"whorls","username":"hodapp","description":"Some more experimenting with domain transformations, and what is basically a \"hello world\" sort of shader for me since ~2004","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["ripples","functional"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// (c) 2019, Chris Hodapp\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265358979\n\nconst float d = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 st = fragCoord.xy/iResolution.xy;\n    vec2 st2 = st - vec2(0.320,0.380);\n\tst -= vec2(0.670,0.620);\n    st.x *= iResolution.x/iResolution.y;\n    st2.x *= iResolution.x/iResolution.y;\n    \n    float r = sqrt(st.x*st.x + st.y*st.y);\n    float th = atan(st.y, st.x);\n    \n    float r2 = sqrt(st2.x*st2.x + st2.y*st2.y);\n    float th2 = atan(st2.y, st2.x);\n  \n    float th_in = th - 2.0 / (r + 0.1) + th2 - 2.0 / (r2 + 0.1) + 0.4*cos(r*100.0 + iTime*4.0) - 0.4*cos(r2*100.0 + iTime*3.0) + iTime*1.2;\n    \n    float g = smoothstep(0.00, d, mod(th_in, PI*2.0)) - smoothstep(d, 2.0*d, mod(th_in, PI*2.0));\n    \n    vec3 color = vec3(g);\n    //color = vec3(st.x,st.y,abs(sin(u_time)));\n\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"}]}