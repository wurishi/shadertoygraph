{"ver":"0.1","info":{"id":"sl3fRr","date":"1662516157","viewed":76,"name":"Thunder Numbers","username":"Ezra_Szanton","description":"An experiment with  hailstone sequences, I think the trippy bit mashing effects once you get into the high numbers look pretty cool","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nint thunder(int num, int steps, int step_thresh)\n{\n    while(steps < step_thresh){\n    \n        if(num == 1){\n            return steps;\n        } else {\n            if(num % 2 == 0){\n                num = num / 2;\n            } else {\n                num = num * 3 + 1;\n            }\n        }\n        \n        steps = steps + 1;\n    \n    }\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    int thresh = 100;\n    \n    uv.x = 1.0-distance(vec2(0.5), uv);\n    \n    uv.y = cos(uv.y);\n    \n    //float grey = uv.x;\n    \n    // Time varying pixel color\n    \n    float grey = float (thunder(int ((uv.x-uv.y/1.1) * 80.0*iTime), 0, thresh)) / float (thresh);\n    \n    vec3 col = vec3(grey, 0.23, 0.34);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}