{"ver":"0.1","info":{"id":"4lcGWs","date":"1472259217","viewed":890,"name":"CCTV Thing","username":"Incin","description":"Kind of an old tv or somf","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["2d","bulge","cctv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float blurSize = 1.0/512.0;\nconst float intensity = 0.13;\nvec4 glowPass( vec2 texcoord )\n{\n    vec4 fragColor = vec4(0);\n    vec4 sum = vec4(0);\n    //vec2 texcoord = fragCoord.xy/iResolution.xy;\n    int j;\n    int i;\n\n    //thank you! http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/ for the \n    //blur tutorial\n    // blur in y (vertical)\n    // take nine samples, with the distance blurSize between them\n    sum += texture(iChannel0, vec2(texcoord.x - 4.0*blurSize, texcoord.y)) * 0.05;\n    sum += texture(iChannel0, vec2(texcoord.x - 3.0*blurSize, texcoord.y)) * 0.09;\n    sum += texture(iChannel0, vec2(texcoord.x - 2.0*blurSize, texcoord.y)) * 0.12;\n    sum += texture(iChannel0, vec2(texcoord.x - blurSize, texcoord.y)) * 0.15;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y)) * 0.16;\n    sum += texture(iChannel0, vec2(texcoord.x + blurSize, texcoord.y)) * 0.15;\n    sum += texture(iChannel0, vec2(texcoord.x + 2.0*blurSize, texcoord.y)) * 0.12;\n    sum += texture(iChannel0, vec2(texcoord.x + 3.0*blurSize, texcoord.y)) * 0.09;\n    sum += texture(iChannel0, vec2(texcoord.x + 4.0*blurSize, texcoord.y)) * 0.05;\n\n    // blur in y (vertical)\n    // take nine samples, with the distance blurSize between them\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y - 4.0*blurSize)) * 0.05;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y - 3.0*blurSize)) * 0.09;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y - 2.0*blurSize)) * 0.12;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y - blurSize)) * 0.15;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y)) * 0.16;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y + blurSize)) * 0.15;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y + 2.0*blurSize)) * 0.12;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y + 3.0*blurSize)) * 0.09;\n    sum += texture(iChannel0, vec2(texcoord.x, texcoord.y + 4.0*blurSize)) * 0.05;\n\n    //increase blur with intensity!\n    fragColor = sum*intensity + texture(iChannel0, texcoord); \n    //fragColor = sum * texture(iChannel0, texcoord);\n    return fragColor;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n    vec4 glw = glowPass(uv);\n    if (length(fragColor + glw) > 1.0) {\n        glw -= .3105;\n    }\n    fragColor += glw;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uvt = fragCoord.xy / iResolution.xy;\n    vec2 uv = uvt;\n    float dd = distance(uv, vec2(.5,.5))/8.;\n    vec2 nv = vec2(uv.x + (uv.x*2.-1.)*dd, uv.y + (uv.y*2.-1.)*dd);\n    if (nv.x <= 0. || nv.y <= 0. || nv.x >= 1. || nv.y >= 1.) {\n        fragColor = vec4(0);\n    } else {\n\t\tfragColor = texture(iChannel0, nv);\n    }\n    \n    if (mod(nv.y*60.+iTime*4., 2.) <= 0.30) {\n     \tfragColor *= 0.7;\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}