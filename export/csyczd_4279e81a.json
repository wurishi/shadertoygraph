{"ver":"0.1","info":{"id":"csyczd","date":"1696442596","viewed":188,"name":"triangle of eternity","username":"nayk","description":"cosmos,stars, eternity,","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["stars","cosmos","eternity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/* originals from https://www.shadertoy.com/view/MdXSzS and https://www.shadertoy.com/view/tttXRB\n\n*/\n#define TAU radians(360.)\n\n\nconst float nbCircle = 13.; \n\nvec2 rotate(float angle, float radius)\n{\n    return vec2(cos(angle),-sin(angle)) * radius;\n}\n\nvec2 perp(vec2 v)\n{\n    return vec2(-v.y, v.x);\n}\n\nfloat udTriangle( vec2 p, vec2 a, vec2 b, vec2 c )\n{\n  vec2 ab = b - a; vec2 pa = a - p;\n  vec2 bc = c - b; vec2 pb = b - p;\n  vec2 ca = a - c; vec2 pc = c - p;\n    \n  float d0 = dot(perp(ab), pa);\n  float d1 = dot(perp(bc), pb);\n  float d2 = dot(perp(ca), pc);\n    \n  return min(min(d0, d1), d2);\n}\n\nfloat sdfTriangle(vec2 p)\n{\n    float radius = 1.2;\n    float angle = iTime * 0.8;\n    vec2 a = rotate( angle, radius);\n    vec2 b = rotate( TAU / 3. + angle, radius);\n    vec2 c = rotate( 2. * TAU / 3. + angle, radius);\n    \n    return udTriangle(p, a, b, c);\n}\n\nfloat radFilter(float v)\n{\n    return smoothstep(100. / iResolution.y, 0., abs(v-1.));\n}\n\nfloat distFilter(float v)\n{\n    return smoothstep(0., 0.5, v);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - .5;\n\tfloat t = iTime * .1 + ((.25 + .05 * sin(iTime * .1))/(length(uv.xy) + .07)) * 2.2;\n\tfloat si = sin(t);\n\tfloat co = cos(t);\n\tmat2 ma = mat2(co, si, -si, co);\n\n\tfloat v1, v2, v3;\n\tv1 = v2 = v3 = 0.0;\n\tvec2\tp2 = (2. * fragCoord - iResolution.xy) / iResolution.y;\n    float\tangle = atan(p2.y, p2.x);\n    float \tl = length(p2) * nbCircle;\n    float\tcircleId = floor(l);\n    #ifdef AUDIOREACT\n    float\ts = texture(iChannel0, vec2(0.5, 1. - circleId / nbCircle)).x;\n    #else\n    float\ts = 0.6;    \n    #endif\n    float\tmodCircleId = mod(circleId, 2.);\n    float d = sdfTriangle(p2);\n    d = distFilter(d);\n    float speed = mix(0.1, -0.1, modCircleId);\n    l+= sin((angle - iTime * speed) * circleId * 5.) * 0.5 * d * s;\n    l = fract(l) * 2.;\n    float\tt2 = min(l, 2. - l);\n    t2 = radFilter(t2); \n\tfloat s2 = 0.0;\n\tfor (int i = 0; i < 90; i++)\n\t{\n\t\tvec3 p = s * vec3(uv, 0.0);\n\t\tp.xy *= ma;\n\t\tp += vec3(.22, .3, s - 1.5 - sin(iTime * .13) * .1)*d;\n\t\tfor (int i = 0; i < 8; i++)\tp = abs(p) / dot(p,p) - 0.659;\n\t\tv1 += dot(p,p) * .0015 * (1.8 + sin(length(uv.xy * 13.0) + .5  - iTime * .2));\n\t\tv2 += dot(p,p) * .0013 * (1.5 + sin(length(uv.xy * 14.5) + 1.2 - iTime * .3));\n\t\tv3 += length(p.xy*10.) * .0003;\n\t\ts2  += .035;\n\t}\n\t\n\tfloat len = length(uv);\n\tv1 *= smoothstep(.2, .0, len);\n\tv2 *= smoothstep(.5, .0, len);\n\tv3 *= smoothstep(.49, .0, len);\n\t\n\tvec3 col = vec3( v3 * (0.5 + sin(iTime * .2) * .4),\n\t\t\t\t\t(v1 + v3) * .3,\n\t\t\t\t\t v2) + smoothstep(0.2, .0, len) * .85 + smoothstep(.0, .6, v3) * .3;\n\n\tfragColor=vec4(min(pow(abs(col), vec3(1.2)), 1.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}