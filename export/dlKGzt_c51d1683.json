{"ver":"0.1","info":{"id":"dlKGzt","date":"1684493928","viewed":48,"name":"ireus","username":"teraspora","description":"Irish and Indian flags","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Irish & Indian flags, waving in the wind!\n\n// TO DO:\n// Indian flag Ashoka Chakra ideally needs a linear function for the outer spokes;\n\n// John Lynch, 2023.\n\n\n#define PI 3.141592653588\n\n\nvec2 polar(float r, float phi) {\n    return vec2(r * cos(phi), r * sin(phi));\n}\n\nfloat arg(vec2 z) {\n    return atan(z.y, z.x);\n}\n\nvec3 BLACK = vec3(0);\nvec3 WHITE = vec3(1);\nvec3 IR_GREEN = vec3(0.08627450980392157, 0.6078431372549019, 0.3843137254901961);\nvec3 ORANGE = vec3(1, 0.5333333333333333, 0.24313725490196078);\nvec3 SAFFRON = vec3(1.0, 0.6, 0.2);\nvec3 IND_GREEN = vec3(0.07450980392156863, 0.5333333333333333, 0.03137254901960784);\nvec3 CHAKRA_BLUE = vec3(0.0, 0.0, 0.5019607843137255);\n\n\nvec3 IrishFlag(vec2 uv) {\n    vec3 col = mix(BLACK, IR_GREEN, smoothstep(-0.870, -0.867, uv.x));\n    col = mix(col, WHITE, smoothstep(-0.315, -0.312, uv.x));\n    col = mix(col, ORANGE, smoothstep(0.312, 0.315, uv.x));\n    col = mix(col, BLACK, smoothstep(0.867, 0.870, uv.x));\n    col = mix(BLACK, col, smoothstep(-0.475, -0.472, uv.y));\n    col = mix(col, BLACK, smoothstep(0.472, 0.475, uv.y));\n    return col;\n}\n\nvec3 IndianFlag(vec2 uv) {\n    vec3 col = mix(BLACK, IND_GREEN, smoothstep(-0.475, -0.472, uv.y));\n    col = mix(col, WHITE, smoothstep(-0.175, -0.172, uv.y));\n    col = mix(col, SAFFRON, smoothstep(0.172, 0.175, uv.y));\n    col = mix(col, BLACK, smoothstep(0.472, 0.475, uv.y));\n    col = mix(BLACK, col, smoothstep(-0.870, -0.867, uv.x));\n    col = mix(col, BLACK, smoothstep(0.867, 0.870, uv.x));\n    // Now need to add Ashoka Chakra with 24 diamond-shaped spokes, a hub, and 24 little bulges inside the rim!\n    col = mix(CHAKRA_BLUE, col, smoothstep(0.025, 0.028, length(uv)));\n    // Ring\n    float radius_big = 0.13;\n    float ring_width = 0.017;\n    vec3 bkg_col = col;    // we may need a reference to the existing colour in case we change it!\n    col = bool(\n        step(radius_big, length(uv)) \n        * (1. - step(radius_big + ring_width, length(uv)))\n    ) \n    ? CHAKRA_BLUE : col;\n    // Inner spokes:\n    col = length(uv) > radius_big / 2.0 ? col : mix(CHAKRA_BLUE, col, smoothstep(0., 0.2, mod(arg(uv), PI / 12.)));\n    // Outer spokes:\n    float radius_less_big = radius_big - 0.01;\n    float radius_smaller = radius_big / 2.0;\n    float span = radius_less_big - radius_smaller;\n    float extent = 1.0 - (length(uv) - radius_smaller) / span;    \n    col = length(uv) > radius_big - 0.01  || length(uv) < radius_big / 2.0  ? col : mix(CHAKRA_BLUE, col, (1.0 / extent) * smoothstep(0., 0.18, mod(arg(uv), PI / 12.)));\n    // Add 24 little semi-discs inside the ring:\n    vec2 sc = polar(0.133, 3. * PI / 24.);\n    col = mix(CHAKRA_BLUE, col, smoothstep(0.008, 0.009, distance(polar(length(uv), mod(arg(uv), PI / 12.) + PI / 12.), sc)));\n    return col;\n}\n\nvec2 Wave(vec2 uv) {\n    float time = iTime;\n    float t = uv.x * 7. + uv.y * 3. - 2. * time;\n    uv.y += sin(t) * .02;\n    uv.x += sin(t * 1.6) * .01;\n    return uv;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = iTime;\n    // float time = 15. * (sin(iTime) + 1.);\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    // Hack to constrain L & R edges without changing smoothstep() args in flag functions:\n    uv.x *= 1.01;\n    uv = Wave(uv);\n    vec3 col = mix(IrishFlag(uv), IndianFlag(uv), smoothstep(-0.2, 0.2, -cos(time / 2.)));\n    // Add a little shading:\n    float t = uv.x * 7. - 2. * time + uv.y * 3.;\n    col *= .95 + cos(t) * cos(t) * 0.1;\n    fragColor = vec4(col, 1);  \n}\n\n","name":"Image","description":"","type":"image"}]}