{"ver":"0.1","info":{"id":"ftf3zs","date":"1650208920","viewed":29,"name":"Julia Fold Testing","username":"modderme123","description":"a test","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["julia","fold"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define iterations 10\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord/iResolution.xy-vec2(0.5,0.5))*2.0;//\n    \n    vec2 c = iMouse.xy/iResolution.xy*2.0-1.0;\n    for(int i = 0; i<iterations;i++) {\n        float tmp = uv.x*uv.x -uv.y*uv.y;\n        uv.y = 2.0 * uv.x * uv.y  + c.y;\n        uv.x = tmp + c.x;\n    }\n\n    // sample texture and output to screen\n    fragColor = texture(iChannel0, uv+vec2(0.5,0.5));\n}","name":"Image","description":"","type":"image"}]}