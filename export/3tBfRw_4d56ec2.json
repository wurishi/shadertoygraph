{"ver":"0.1","info":{"id":"3tBfRw","date":"1598535191","viewed":129,"name":"vertex color interp vs bilinear","username":"danielsturk","description":"Difference between bilinear interpolation of color and the effect you get from vertex colors with a triangulated quad","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["filtering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec3 x0y0 = vec3(1,0,0);\n    vec3 x1y0 = vec3(0,1,0);\n    vec3 x0y1 = vec3(0,0,1);\n    vec3 x1y1 = vec3(.5,.5,.5);\n    \n    vec3 x0 = mix(x0y0, x0y1, uv.y);\n    vec3 x1 = mix(x1y0, x1y1, uv.y);\n    vec3 bilinear = mix(x0, x1, uv.x);\n    \n    vec3 triangular;\n    if(uv.x + uv.y < 1.) {\n    \ttriangular = x0y1 * uv.y + x1y0 * uv.x + x0y0 * (1. - uv.x - uv.y);\n    } else {\n    \ttriangular = x1y0 * (1. - uv.y) + x0y1 * (1. - uv.x) + x1y1 * (uv.x + uv.y - 1.);\n    }\n\n    fragColor = vec4(fract(iTime) < .5 ? bilinear : triangular,1.0);\n}","name":"Image","description":"","type":"image"}]}