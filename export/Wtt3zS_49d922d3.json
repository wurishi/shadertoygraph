{"ver":"0.1","info":{"id":"Wtt3zS","date":"1576723912","viewed":168,"name":"Rotation Vortex","username":"Hatokuro","description":"rotation of a texture proportional to the distance from the center.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["rotationvortextexture"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rotate2d(float angle)\n{\n \treturn mat2(cos(angle),-sin(angle),sin(angle),cos(angle));   \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = fragCoord/iResolution.xy;\n    //uv -= vec2(.5,.5);\n    \n    //by FabriceNeyret2\n    vec2 uv = ( fragCoord - .5 *  iResolution.xy ) / iResolution.y;\n    \n    //uv *= rotate2d(-iTime); \n    \n    uv *= rotate2d(length(uv)*sin(iTime)*5.);\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0,uv).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}