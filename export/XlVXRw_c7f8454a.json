{"ver":"0.1","info":{"id":"XlVXRw","date":"1483589427","viewed":193,"name":"glitch art","username":"bpt","description":"started with [url]https://www.shadertoy.com/view/MlyXzw[/url] ended up with some odd glitch art that I find somehow interesting.  This code is slop with no plan only poking at numbers and transforms until something interesting happened.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define mouse iMouse.xy\n#define resolution iResolution.xy\n#define time ((iTime+(sin(iTime*0.02)*0.5+0.5))*0.075)\n\n#define PI 3.14159265359\n\nmat2 rotate2d(float angle) {\n    return mat2(cos(angle),-sin(angle),sin(angle),cos(angle));\n}\n\nfloat box( vec2 st, vec2 size) {\n    st = smoothstep( size,size - 4.0 / resolution.y, abs(st));\n    return st.x * st.y;\n}\n\nfloat shape( vec2 st, float size) {\n    return  box(st, size * vec2(1.0,1.0 / 4.0)) + box(st, size * vec2(1.0 / 4.0,1.0));\n}\n\nvec2 pow_xy( vec2 a, vec2 b ) {\n\treturn vec2( pow( abs(a.x), b.x ), pow( abs(a.y), b.y ) );\n}\n\nvoid genImage( out vec4 fragColor, vec2 uv, float t )\n{\n    uv *= rotate2d(cos(t*t) * PI);\n    \n    uv = mix( uv * .25, 1.-uv*0.5+cos(t*1.2), sin(t*10.1)*0.5+0.5 );\n    \n    float duv = dot(uv,uv);\n    \n    uv = fract(uv/(duv*(3.0+1.5*sin(time*2.1))))*2.0-1.0;\n\n    uv *= rotate2d(sin(t+fract(time*0.25)*2.0*PI+sin(time*20.1)) * PI);\n    \n    duv = dot(uv,uv);\n\t\n    uv = mix( uv, uv * duv * duv, cos(t*11.1+1.2) * 0.5 + 0.5 );\n\t\n    uv = mix( uv, pow_xy( uv, vec2(duv*.5) ), cos(time)*sin(time*1.5*sin(time*0.1)) * 0.5 + 0.5 );\n\n    fragColor = vec4(shape(uv,max(0.51,3.24*duv)*abs(sin(t*10.1-sin(13.*duv*mix(duv,1.-duv,cos(t*0.1+mod(time,t))*0.5+0.5))))));\n}\n\n\nfloat dot2( vec2 v )\n{\n\treturn dot(v,v);\n}\n\nvoid draw( out vec4 fragColor, vec2 surfacePosition )\n{\n   float t = 3100.0 + time * .000053;\n   float spin = 221.0+cos(t*2.0+time*0.01)*1900.0;\n\t\n   vec4 a, b;\n\t\n   genImage( a, surfacePosition.xy * log(1000.0+500.0*cos(t)), spin*abs(sin( t * 0.2 + time*0.0001 )) + spin*cos(t*0.02) + 1.20 );\t\n\t\n   genImage( b, resolution*surfacePosition.xy * log(1000.0+500.0*cos(t*12.3)), spin*abs(sin( t * 11.2 + time*0.00001 )) + spin*cos(t*10.02) );\n\t\n   fragColor = mix( a, b, sin(time*20.5+32.0*cos(t*1.5))*0.5+0.5 );\n\t\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy * 2.0 / iResolution.xy - 1.0;\n\n    draw( fragColor, uv );\n}\n\n","name":"Image","description":"","type":"image"}]}