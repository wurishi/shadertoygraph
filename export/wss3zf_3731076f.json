{"ver":"0.1","info":{"id":"wss3zf","date":"1547125350","viewed":250,"name":"[Ese] Sprite","username":"Eseris","description":"Base for shaders on sprite","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["sprite"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec4 Bgnd = vec4(vec3(.8), 1);\nconst vec2 Size = vec2(200, 200);\n\n/**\n * @param uv coord of a pixel, the sprite is drawn between 0. and 1 but the \n *     coordinates are bigger\n * @return the color of the pixel\n */\nvec4 drawSprite(vec2 uv) {\n    // ?\n    \n    vec4 t = texture(iChannel0, vec2(uv.x / 6.6, uv.y));;\n    vec2 mask = smoothstep(.04, .0, abs(uv - .5) - vec2(.5));\n    t *= mask.x * mask.y;\n    \n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = (fragCoord - (iResolution.xy - Size) / 2.) / Size;\n    vec4 sprite = drawSprite(uv);\n    \n    fragColor = mix(Bgnd, vec4(sprite.rgb, 1.), sprite.a);\n}","name":"Image","description":"","type":"image"}]}