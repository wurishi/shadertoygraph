{"ver":"0.1","info":{"id":"llBSWh","date":"1443138966","viewed":1759,"name":"The descent","username":"rez","description":"A kind of descent into the center of an unknown planet :)\nThis scene looks intricate and \"fractal\" but in reality it's just simple boolean operations on a bunch of repeated spheres. I spent 99.9% of the time to tweak the last two lines! \\:D/","likes":48,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"const float PI=3.14159265358979323846;\n\n#define speed (iTime*0.5)\n#define value (0.4+0.25*cos(PI*speed*0.125))\n\nvec2 rotate(vec2 k,float t)\n\t{\n\treturn vec2(cos(t)*k.x-sin(t)*k.y,sin(t)*k.x+cos(t)*k.y);\n\t}\n\nfloat scene1(vec3 p)\n\t{\n\tfloat dot_p=0.125;\n\tfloat dot_w=dot_p*0.625;\n\tfloat dot=length(mod(p.xyz,dot_p)-dot_p*0.5)-dot_w;\n\tfloat ball_p=1.0;\n\tfloat ball_w=ball_p*(0.6625-0.075*(1.0-value));\n\tfloat ball=length(mod(p.xyz,ball_p)-ball_p*0.5)-ball_w;\n\tfloat hole_w=ball_p*(0.625+0.0125*value);\n\tfloat hole=length(mod(p.xyz,ball_p)-ball_p*0.5)-hole_w;\n\tfloat hole2_p=0.125;\n\tfloat hole2_w=hole2_p*0.375;\n\tfloat hole2=length(mod(p.xyz,hole2_p)-hole2_p*0.5)-hole2_w;\n\treturn max(max(dot,-mix(hole,hole2,0.5)),ball);\n\t}\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord)\n\t{\n\tvec2 position=(fragCoord.xy/iResolution.xy);\n\tvec2 p=-1.0+2.0*position;\n\tvec3 vp=normalize(vec3(p*vec2(1.77,1.0),0.75)); // screen ratio (x,y) fov (z)\n\t//vp.yz=rotate(vp.yz,PI*0.125*sin(speed*0.5));\t// rotation x\n\t//vp.zx=rotate(vp.zx,PI*0.125*sin(speed*0.5));\t// rotation y\n\tvp.xy=rotate(vp.xy,speed*0.25);\t\t\t\t\t// rotation z\n\tfloat ground_x=0.0;//1.0+0.05*cos(PI*speed*0.25);\n\tfloat ground_y=0.0;//1.0+0.05*sin(PI*speed*0.25);\n\tfloat ground_z=speed*(0.125+0.375);\n\tvec3 ray=vec3(ground_x,ground_y,ground_z);\n\tfloat t=0.0;\n\tconst int ray_n=96;\n\tfor(int i=0;i<ray_n;i++)\n\t\t{\n\t\tfloat k=scene1(ray+vp*t);\n        if(abs(k)<0.002) break;\n\t\tt+=k*0.7;\n\t\t}\n\tvec3 hit=ray+vp*t;\n\tvec2 h=vec2(-0.1,0.1); // light\n\tvec3 n=normalize(vec3(scene1(hit+h.xyy),scene1(hit+h.yxx),scene1(hit+h.yyx)));\n\tfloat c=(n.x+n.y+n.z)*0.08+t*0.16;\n\tfloat color=-0.25*cos(PI*position.x*2.0)+0.25*sin(PI*position.y);\n\tfragColor=vec4(vec3((c*t+t)*0.5*value+color,c*1.5-t*0.025,c*1.25-t*0.0125*value-color)*c,1.0);\n\t}","name":"Image","description":"","type":"image"}]}