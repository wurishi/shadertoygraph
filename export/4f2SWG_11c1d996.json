{"ver":"0.1","info":{"id":"4f2SWG","date":"1706765361","viewed":68,"name":"Rings Within Rings","username":"GreatBorealis","description":"Basic shader made to practice GLSL","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 0.7, 0.4);\n    vec3 d = vec3(0.0, 0.15, 0.20);\n    return a + b * cos( 6.28318*(c*t+d) );\n}\n\nvec3 spinningCircle(vec2 uv, float time, float radiusMod, float sizeMod) {\n    for (float i = 0.0; i > -6.4; i -= 0.2) {\n        vec2 circlePoint = vec2(cos(time - i), sin(time - i)) / 5.0 + vec2(cos(time), sin(time)) * radiusMod;\n        float dist = distance(fract(uv) - 0.5, circlePoint);\n        if (dist < sizeMod) {\n            return palette(time - i);  \n        };\n    };\n    return vec3(0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec3 finalColor = vec3(0.0);\n    for (float i = -10.0; i < 11.0; i++) {\n        finalColor += spinningCircle(uv, iTime + i, sin(iTime) / 2.0, abs(sin(iTime) / 20.0));\n    }\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}