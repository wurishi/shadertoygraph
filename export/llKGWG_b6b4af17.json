{"ver":"0.1","info":{"id":"llKGWG","date":"1476539290","viewed":887,"name":"Heat map","username":"joshliebe","description":"A simple transfer function for data visualisation","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["gradient","heatmap"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float greyScale(vec3 rgb) {\n   \treturn dot(rgb, vec3(0.29, 0.60, 0.11));\n}\n\nvec3 heatMap(float greyValue) {   \n\tvec3 heat;      \n    heat.r = smoothstep(0.5, 0.8, greyValue);\n    if(greyValue >= 0.90) {\n    \theat.r *= (1.1 - greyValue) * 5.0;\n    }\n\tif(greyValue > 0.7) {\n\t\theat.g = smoothstep(1.0, 0.7, greyValue);\n\t} else {\n\t\theat.g = smoothstep(0.0, 0.7, greyValue);\n    }    \n\theat.b = smoothstep(1.0, 0.0, greyValue);          \n    if(greyValue <= 0.3) {\n    \theat.b *= greyValue / 0.3;     \n    }\n\treturn heat;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord.xy / iResolution.xy;    \n\tfloat greyValueA = greyScale(texture(iChannel0, uv).rgb);\n   \tfloat greyValueB = greyScale(texture(iChannel0, vec2(uv.x, uv.y + 0.5)).rgb);\n    vec3 rgbOut;   \n    if(uv.x > 0.95) {\n\t\trgbOut = vec3(uv.y);\n    } else if(uv.x > 0.9) {       \n        rgbOut = heatMap(uv.y);\n    } else {\n        float multiplier = clamp(abs(sin(iTime * 0.5)) + 0.2, 0.2, 1.00);       \n        if(uv.y > 0.5) {\n        \trgbOut = heatMap(greyValueA * multiplier);\n        } else {\n        \trgbOut = vec3(greyValueB * multiplier);  \n        }\n    }\n\tfragColor = vec4(rgbOut, 1.0);\n}","name":"Image","description":"","type":"image"}]}