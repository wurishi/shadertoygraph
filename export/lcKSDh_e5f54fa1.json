{"ver":"0.1","info":{"id":"lcKSDh","date":"1715127033","viewed":125,"name":"sdf circle filling","username":"01000001","description":"another random thing I wanted to try for a few months but never remembered when I had time. Try it at maxium paint calls with the plugin!","likes":8,"published":3,"flags":32,"usePreview":0,"tags":["experiment"],"hasliked":0,"parentid":"md3BDS","parentname":"minitemplate"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 U ){\n\n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    vec2 muv = (2.*iMouse.xy-r)/r.y;\n    \n    O = texture(iChannel0, uv);\n    \n    O.x = 1.-smoothstep(0., 2./(r.y), abs(O.x));\n    \n    O = O.xxxx;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const uint k = 1103515245U;\nvec3 hash( uvec3 x )\n{\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    x = ((x>>8U)^x.yzx)*k;\n    \n    return vec3(x)*(1.0/float(0xffffffffU));\n} //hash by IQ https://www.shadertoy.com/view/XlXcW4\n\nfloat dot2(vec2 a){ return dot(a, a); }\nfloat coolSDF( in vec2 p )\n{\n    float six = (p.y<0.0) ? -p.x : p.x;\n    p.x = abs(p.x);\n    p.y = abs(p.y) - 0.2;\n    float rex = p.x - min(round(p.x/0.4),0.4);\n    float aby = abs(p.y-0.2)-0.6;\n    \n    float d = dot2(vec2(six,-p.y)-clamp(0.5*(six-p.y),0.0,0.2));\n    d = min(d,dot2(vec2(p.x,-aby)-clamp(0.5*(p.x-aby),0.0,0.4)));\n    d = min(d,dot2(vec2(rex,p.y  -clamp(p.y          ,0.0,0.4))));\n    \n    float s = 2.0*p.x + aby + abs(aby+0.4) - 0.4;\n    return sqrt(d) * sign(s);\n}\n\nvoid mainImage( out vec4 O, vec2 U ){\n    \n    vec2 r = iResolution.xy;\n    vec2 uv = U/r;\n    vec2 cuv = (2.*U-r)/r.y;\n    \n    O = vec4(0);\n    if (iFrame < 20){\n        O.x = -coolSDF(cuv.yx*r.y/r.x * 1.2);\n        return;\n    }\n    \n    O = texture(iChannel0, uv);\n    \n    vec2 p = (hash(uvec3(iFrame, -iFrame, iDate.w)).xy * 2. - 1.) * vec2(r.x/r.y, 1);\n    float d = texture(iChannel0, (((p * r.y) + r)/2.)/r).x;\n    \n    O.x = min(\n        O.x, \n        length(cuv-p) - d\n    );    \n    \n}","name":"Buffer A","description":"","type":"buffer"}]}