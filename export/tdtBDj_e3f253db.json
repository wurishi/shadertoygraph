{"ver":"0.1","info":{"id":"tdtBDj","date":"1606067236","viewed":281,"name":"checkerboard animation 8","username":"FabriceNeyret2","description":"for https://isohedral.ca/swirled-series/","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["checkerboard","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ease( float x ) {                                 // rewritten from https://shadertoy.com/view/3ddBWB\n\treturn x > .5 ? x = 1.-x, 1. - 4.* x*x*x            // stepier than smoothstep or .5-.5*cos\n                  :                4.* x*x*x ;\n}\n\n#define B(x)    mod( floor(x), 2. )\n#define Bs(x)   smoothstep( 3./R.y, -3./R.y, abs(fract(x/2.-.25)-.5) -.25 ) // antialiased version of B\n#define xor(a,b) a+b - 2.*a*b\n\nvoid mainImage( out vec4 O, vec2 u )\n{   \n    O-=O; \n    vec2 R = iResolution.xy,\n         U = u *= 8. / R.y;\n    if (U.x > 8.) { O += .5; return; }                  // out of board\n\n    float T = fract(iTime/2.), t = ease( T ), f,v,\n          n = B(iTime/2.);\n\n    U = mod( floor(U), 2. );\n    f = xor(U.x,U.y);                                   // checker cell color\n\n    if ( f > .5 ) t = 1.-t;\n    if ( n > 0. ) f = 1.-f;                             // phase2 : swap colors \n\n    U = fract(u) - .5;                                  // cross-open cells \n    int i = int( abs(U.x) < abs(U.y) );\n    u[i] += 1.1 *t * sign(U[i]) * ( .5 - abs(U[1-i]) );\n    U = Bs(u);  \n    v = xor(U.x,U.y);\n    O += xor(f,v);                                      // checker cell color XOR cross\n}","name":"Image","description":"","type":"image"}]}