{"ver":"0.1","info":{"id":"dlXczX","date":"1691303685","viewed":124,"name":"apple airdrop","username":"Rutvik_Tak","description":"apple new airdrop animation shader, WIP","likes":4,"published":1,"flags":0,"usePreview":1,"tags":["airdrop"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI = 3.14159265359;\n\n//blur\n// 16x acceleration of https://www.shadertoy.com/view/4tSyzy\n// by applying gaussian at intermediate MIPmap level.\n\nconst int samples = 35,\n          LOD = 2,         // gaussian done on MIPmap at scale LOD\n          sLOD = 1 << LOD; // tile size = 2^LOD\nconst float sigma = float(samples) * .25;\n\nfloat gaussian(vec2 i) {\n    return exp( -.5* dot(i/=sigma,i) ) / ( 6.28 * sigma*sigma );\n}\n\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec4 blur(sampler2D sp, vec2 U, vec2 scale) {\n    vec4 O = vec4(0);  \n    int s = samples/sLOD;\n    \n    for ( int i = 0; i < s*s; i++ ) {\n        vec2 d = vec2(i%s, i/s)*float(sLOD) - float(samples)/2.;\n        O += gaussian(d) * textureLod( sp, U + scale * d , float(LOD) );\n    }\n    \n    return O / O.a;\n}\n\n//\n\n// Custom ease-in function for upward direction\nfloat easeInCubic(float x) {\n // return x * x * x;\n    return 1. - cos((x * PI) / 2.);\n}\n\n//wave\n\nfloat circle(in vec2 _st, in float _radius){\n    vec2 dist = _st-vec2(0.50,1.);\n    float c1= smoothstep(_radius-(_radius*0.5),\n\t_radius,\n\tdot(dist,dist)*4.0);\n  float c2= 1.- smoothstep(_radius,\n\t_radius+(_radius*0.5),\n\tdot(dist,dist)*4.0);\n\t\n\n    return c1*c2;\n}\n\n//\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n        float range=(1.+sin(iTime))*.5;// Normalize the time range from 0 to 1\n        \n        //glow\n        float mrange3=map(range,0.,1.,-.2,1.6);\n        float pct=distance(uv,vec2(.5,mrange3));\n        pct=smoothstep(0.,.25,pct);\n        vec3 gcircle=mix(vec3(.8549,.9922,1.),vec3(1.),pct);\n        //glow2\n        float mrange2=map(range,0.,1.,-.3,1.5);\n        float pct2=distance(uv,vec2(.5,mrange2));\n        pct2=smoothstep(0.,.25,pct2);\n        vec3 gcircle2=mix(vec3(1.,.9882,.8549),vec3(1.),pct2);\n        //glow3\n        float mrange=map(range,0.,1.,-.4,1.4);\n        float pct3=distance(uv,vec2(.5,mrange));\n        pct3=smoothstep(0.,.25,pct3);\n        vec3 gcircle3=mix(vec3(1.,.8902,.8784),vec3(1.),pct3);\n        // glow\n        \n        //blur\n         float blurpct=smoothstep(0.,1.,uv.y)*range;\n         vec4 blurredPixel=blur(iChannel0,uv,1./iResolution.xy);\n        //\n        \n        // stretch\n        float yStretch=easeInCubic(uv.y);\n        yStretch=yStretch*.1*range;\n        uv.y-=yStretch;\n        //\n        \n        //wave\n        float range2=sin(iTime)<0.?0.:sin(iTime);\n        vec2 st2=uv;\n        float r=5.*(range2);\n        float wpct=1.-circle(st2,r);\n        vec3 cc=mix(vec3(1.069,1.077,1.100),vec3(1.),wpct);\n        cc=pow(cc,vec3(8.));\n        float wStretch=st2.y*.3*range2*(wpct-st2.y);\n        st2.y+=wStretch;\n        vec4 wcolor=texture(iChannel0,st2);\n        wcolor*=vec4(cc,1.);\n        //\n        \n        //remove the wstretch\n        uv.y+=wStretch;\n        //\n        \n        vec4 color=texture(iChannel0,uv);\n        \n        color=mix(color,wcolor,vec4(pct));\n        color=mix(color,blurredPixel,vec4(blurpct));\n        wcolor=mix(wcolor,color,vec4(pct));\n        \n       \n        color*=vec4(gcircle,1.);\n        color*=vec4(gcircle2,1.);\n        color*=vec4(gcircle3,1.);\n        \n        fragColor=color;\n}\n","name":"Image","description":"","type":"image"}]}