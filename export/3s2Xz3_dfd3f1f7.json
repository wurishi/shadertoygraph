{"ver":"0.1","info":{"id":"3s2Xz3","date":"1554535806","viewed":338,"name":"visualizer__","username":"s_das","description":"  \n","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["raytracing","vfx","shader","visualizer","pattern","trigonometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    //uv = uv*2. - 1.;\n    \n    float da = iTime/5. +12.;\n     \n    vec3 col = vec3(1.);  \n\n    float d = distance( atan(uv.x, uv.y) , sin(uv.x)*5.);\n    d = length(uv) + 0.;\n    d = tan(d) * 5.;\n    float a = atan(sin(da),uv.y) * atan(da) * 5.;\n    \n    d = sin(a * cos( d + da) * sin(da)) * cos(a * sin(d + da) * cos(iTime));\n    d /= sin(dot( atan( uv.y, d), da) * cos(d));\n    \n    col *= smoothstep( 0.5, tan(iTime) , length( atan(uv) ) ) ;\n    col /= vec3(dot(d * atan( d, uv.x), da ));\n    \n    col -= vec3(.1, .2, .1);\n    col /= vec3(0.5, 0.5, .2);\n   \n    fragColor = vec4(col,1.0);\n \n}  ","name":"Image","description":"","type":"image"}]}