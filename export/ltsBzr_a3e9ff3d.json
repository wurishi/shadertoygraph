{"ver":"0.1","info":{"id":"ltsBzr","date":"1510855705","viewed":993,"name":"Stream reduction: parallel count","username":"FabriceNeyret2","description":"In each line, compute the rank of each dot (and thus the number of dot per line).\nIndex stored in fragColor.g after log2(size) pass.\nHere, visualized as color in the segment after the dot (i.e. index don't increment).\n","likes":6,"published":3,"flags":32,"usePreview":0,"tags":["parallelism","sum","compaction","prefix"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://en.wikipedia.org/wiki/Prefix_sum\n// http://www.seas.upenn.edu/~cis565/Lectures2011/Lecture12.pdf\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n  //O = texelFetch(iChannel0,ivec2(U.x/1.,0),0);\n    O = texelFetch(iChannel0,ivec2(U/1.),0);\n    //O.g /= iResolution.x/100.; \n    \n    O = O.r==1. \n            ? vec4(1)\n            : .3+.3*cos(1.8138*O.g+vec4(0,-2.1,2.1,0));\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define rnd(U)   fract(sin(dot(U, vec2(12.9898, 78.233))) * 43758.5453)\n#define T(U,d)   texelFetch( iChannel0, ivec2(U) - d, 0 )\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    int i = iFrame%300;\n    \n    O = i == 0 \n        ? float( rnd(U) < .01 ) * vec4(1,1,0,0) // .r = data, scattered 1 among zeros.\n        : T(U,0);                               // .g = index count\n    \n    if ( i <= int(log2(iResolution.x))+1 )        \n        O.g += T(U,ivec2(1<<(i-1),0)).g;        // the hearth of the algorithm\n}","name":"Buf A","description":"","type":"buffer"}]}