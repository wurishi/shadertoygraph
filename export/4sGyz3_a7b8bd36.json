{"ver":"0.1","info":{"id":"4sGyz3","date":"1522716480","viewed":334,"name":"Simple Colormap - Noise!","username":"chao_mu","description":"This ends my string of exploration. Not sure how to be more wise in choosing my seed offsets or how to prevent \n\nhttps://www.shadertoy.com/view/4dycR3 - RGB colormap\nhttps://www.shadertoy.com/view/XsycR3 - hue colormap\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["noise","colors"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define SPEED 4.\n\n// Calucalate the luminance of a given pixel.\nfloat luminance(vec3 rgb) {\n    return dot(rgb, vec3(0.3, 0.59, 0.11));\n}\n\n// Remap number to [0, 1]\n#define to01(value, low, high) (value - low) / (high - low)\n\n// Book of Shaders\nfloat rand(float n) {\n    return fract(sin(n) * 43758.5453123);\n}\n\n// Book of Shaders\nfloat noise(float p) {\n\tfloat fl = floor(p);\n    float fc = fract(p);\n\n\treturn mix(rand(fl), rand(fl + 1.0), fc);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\tfloat time = iTime * SPEED;\n    vec4 tex = texture(iChannel0, uv);\n    float lums = luminance(tex.rgb);\n    \n    // Not sure how to be more strategic in my choice\n    vec3 start = vec3(noise(time + 100.), noise(time + 200.), noise(time + 300.));\n    vec3 middle = vec3(noise(time + 400.), noise(time + 500.), noise(time + 600.));\n    vec3 end = vec3(noise(time + 700.), noise(time + 800.), noise(time + 900.));\n                       \n    // Time varying pixel color\n    vec3 col;\n    if (lums < 0.5) {\n    \tcol = mix(start, middle, to01(lums, 0., 0.5));\n    } else {\n        col = mix(middle, end, to01(lums, .5, 1.));\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}