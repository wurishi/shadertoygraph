{"ver":"0.1","info":{"id":"XcdcDH","date":"1730586702","viewed":52,"name":"Blobs - paulohmf","username":"paulohmf","description":"Insper's computer graphic class project","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["study"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(vec2 st)\n{\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat circle(vec2 uv, vec2 center, float r, float k)\n{\n    return smoothstep(r + k, r, length(uv + center));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    uv.x *= iResolution.x / iResolution.y; \n\n    vec2 gridUv = fract(uv * 5.0) - 0.5;\n    vec2 gridPos = floor(uv * 5.0);\n\n    float r = 0.05;\n    float k = 0.1;\n    float circles = 0.0;\n\n    float hue = fract(sin(dot(gridPos, vec2(12.9898, 78.233))) * 43758.5453123 + iTime * 0.01);\n    vec3 blobColor = vec3(sin(hue * 6.28318), sin(hue * 6.28318 + 2.09439), sin(hue * 6.28318 + 4.18879)) * 0.5 + 0.5;\n\n    float brightness = 0.5 + 0.5 * cos(iTime * 0.4 + random(gridPos) * 6.28318);\n\n    for (float i = 0.0; i < 5.0; i++)\n    {\n        vec2 noiseOffset = vec2(random(gridPos + vec2(i, 0.0)), random(gridPos + vec2(0.0, i))) * 50.0;\n        vec2 center = vec2(sin(iTime * 1.25 * (i * 0.1) + noiseOffset.x) * 0.2, cos(iTime * 0.5 * (i * 0.5) + noiseOffset.y) * 0.2 / (i * 0.75));\n        float circleK = k * ((i + 1.) * 0.35);\n        circles += circle(gridUv, center, r, circleK);\n    }\n\n    float border = smoothstep(0.1, 0.15, circles);\n    fragColor = vec4(blobColor * border * (1.0 - circles * 0.85) * brightness, 1.0);\n}","name":"Image","description":"","type":"image"}]}