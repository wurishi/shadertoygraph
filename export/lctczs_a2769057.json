{"ver":"0.1","info":{"id":"lctczs","date":"1731055369","viewed":64,"name":"example_007_worms.frag.glsl","username":"whoami","description":"experimenting with polar coordinates","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["worms"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nfloat quantize(float x, float q) {\n    return q * floor(x / q);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float time = 0.1 * iTime;\n    float u_aspect = iResolution.x/iResolution.y;\n    \n    // Screen point\n    vec2 vs_uv = fragCoord/iResolution.xy;\n    vec2 sp = (vs_uv * 2.0) - 1.0;\n\n    float root_zoom = 8.0;\n\n    sp *= root_zoom * 0.5;\n    sp.x *= u_aspect;\n\n    // Polar transformations\n    float a = 0.5 * (atan(-sp.y, -sp.x) / PI + 1.0);\n    float r = length(sp);\n    float turn = (floor(r) + 1.0);\n    float rotation_speed = -0.01 * turn - 0.01;\n\n    a = fract(a - time * rotation_speed);\n\n    // Local sector space\n    vec3 color;\n    {\n        float split = 1.0;\n        float compactness = 1.6;\n\n        vec2 p0 = vec2(\n                fract(split * turn * a),\n                (fract(r) * 2.0) - 1.0\n            );\n        p0.x *= compactness;\n        p0.y /= compactness;\n\n        vec2 p1 = vec2(0.5, 0.0);\n\n        float size = 0.22;\n        float m = 0.025 * sin(10.0 * p0.x - 0.5 * turn * iTime);\n        size = size + m;\n\n        float rings = 16.0;\n        vec3 base_color = vec3(1.0, 0.9, 0.83);\n        vec3 base_tint = vec3(0.9, 0.9, 0.8);\n        float body_brightness = 0.6;\n        float light = -60.0;\n        float luminosity = 0.0;\n        float emission = 30.0;\n        float metalness = 0.0;\n        float bot_light = 0.5;\n\n        float d = distance(p0, p1);\n        float sd = d - size;\n        float body = 1.0 - smoothstep(0.0, 0.05, sd - 0.01);\n        float strips = 0.5 * abs(abs((fract(p0.x * rings * size) - 0.5) * 2.0) - 0.5);\n\n        vec3 body_color = body_brightness * body * base_color;\n        color = body_color + (10.0 * (exp(emission * abs(m)) - 1.0)) * body * strips * base_tint;\n        color = color * (1.0 + luminosity * abs(p0.y) * strips);\n        color = color * exp(1.5 * size);\n        color = color * (1.0 - d);\n        color = color + light * pow(d, 4.0);\n\n        color = min(color, vec3(1.0));\n        color = max(color, vec3(0.0));\n\n        color = color * pow(body * (1.0 - d), metalness);\n        color = color * (1.0 - body * pow(d, bot_light));\n    }\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}