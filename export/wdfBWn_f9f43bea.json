{"ver":"0.1","info":{"id":"wdfBWn","date":"1588008621","viewed":155,"name":"Rotating Rect","username":"themasmo","description":"Simple rotating rectangles.","likes":10,"published":1,"flags":0,"usePreview":0,"tags":["rotate","rectangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define N 32.\n \nvec2 rot(vec2 v, float angle)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    return mat2(c, -s, s, c)*v;\n}\n \nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n \nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n               mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y);\n}\n \nvec4 rect(vec2 uv, vec2 pos, vec2 dim, vec3 col){\n\t\n\tif ((uv.x>=pos.x && uv.x<=pos.x+dim.x) && (uv.y>=pos.y && uv.y<=pos.y+dim.y)) {\n\t\treturn vec4(col,1.0);\n\t}\n\treturn vec4(0.);\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 p = gl_FragCoord.xy / iResolution.xy - 0.5;\n  p.x *= iResolution.x / iResolution.y;\n\n\tvec4 color=vec4(0.);\n\tfloat dx=1./N;\n\tfloat dy=1./N;\n\tfor(float t=0.;t<=1.;t+=(1./N))\n\t{\n\t\tfloat xi=N*t*dx;\n\t\tfloat yi=N*t*dy;\n\t\tfloat ddx=1.-xi*2.0;\n\t\tfloat ddy=1.-yi*2.0;\n\t\t//float an=noise(vec2(t*4.,iTime*4.));\n\t\t//vec2 r=rot(p,an);\n\t\tvec2 r=rot(p,1.4*sin(iTime+t*4.));\n\t\tcolor+=rect(r,vec2(-0.5+xi,-0.5+yi),vec2(ddx,ddy),vec3(t));\n\t}\n\t\n\t\n\tcolor=sqrt(color*0.2);\n\t\n\tfragColor = vec4( vec3( color ), 1.0 );\n \n}\n","name":"Image","description":"","type":"image"}]}