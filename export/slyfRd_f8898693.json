{"ver":"0.1","info":{"id":"slyfRd","date":"1665039360","viewed":30,"name":"note03_gridtime","username":"utopialeo","description":"grid","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 Grid(in vec2 uv)\n{\n    vec3 color = vec3(0.);\n    vec2 fraction = 1. - 2.* abs(fract(uv) - 0.5);\n    if(abs(uv.x) <= fwidth(uv.x)){\n        color.g = 1.;\n    } else if (abs(uv.y) <= fwidth(uv.y)){\n        color.r = 1.;\n    } else if (fraction.x < 2.*fwidth(uv.x) || fraction.y < 2.*fwidth(uv.y)){\n        color = vec3(1.);\n    }\nreturn color;\n}\n\n\nvec2 fixUV(in vec2 c){\n    return 5.*(2.*c- iResolution.xy)/ min(iResolution.x, iResolution.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv = fixUV(fragCoord);\n    vec3 color = Grid(uv);\n\n\n    color += vec3(abs(sin(iTime)), abs(cos(iTime)),abs(sin(iTime)));\n    fragColor = vec4(color,1.);\n\n}","name":"Image","description":"","type":"image"}]}