{"ver":"0.1","info":{"id":"WsBXDW","date":"1553722377","viewed":168,"name":"Cartesian To Polar","username":"Jelly","description":"p","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["polar"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    \n    vec2 centerUV = uv * 2.0 - 1.0;\n    centerUV.x /= iResolution.y / iResolution.x;\n    \n    float angle = atan(centerUV.y, centerUV.x);\n    float d = length(centerUV);\n    \n       // d *= iResolution.x / iResolution.y;\n    \n    //d *= ;\n    \n    float start =- 0.404 * iTime;\n    float end = start + 1.0;//iTime * 0.1 + 1.0;\n    \n    d = (end - start) * d + start;\n    \n    d = mod(d, 1.0);\n    \n   // d = 1.0 - d;\n    \n    //d *=d;\n    //d *= -1.0;\n    \n    vec2 tunnelUV = vec2(cos(angle) * d, sin(angle) * d);\n    tunnelUV = tunnelUV * 0.5 + 0.5;\n    \n    vec3 col = texture(iChannel0, tunnelUV).rgb;\n    \n    // Time varying pixel color\n   // col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n\n    // Output to screen\n    fragColor = vec4(col, 2);\n}","name":"Image","description":"","type":"image"}]}