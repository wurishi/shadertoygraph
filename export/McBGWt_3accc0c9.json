{"ver":"0.1","info":{"id":"McBGWt","date":"1704780544","viewed":108,"name":"3-Channel Conway Game of Life","username":"binary_6","description":"The Conway's Game Of Life shader","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["cellularautomata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = vec4(texture(iChannel0, uv).rgb, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"Xsf3zn","filepath":"/media/a/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","previewfilepath":"/media/ap/f735bee5b64ef98879dc618b016ecf7939a5756040c2cde21ccb15e69a6e1cfb.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pixel = vec2(1) / iResolution.xy;\n    vec2 uv = fragCoord * pixel;\n\n    vec3 livingNeighbors = \n        texture(iChannel0, uv + vec2(-1,-1) * pixel).rgb +\n        texture(iChannel0, uv + vec2(-1, 0) * pixel).rgb +\n        texture(iChannel0, uv + vec2(-1,+1) * pixel).rgb +\n        texture(iChannel0, uv + vec2( 0,-1) * pixel).rgb +\n        texture(iChannel0, uv + vec2( 0, 1) * pixel).rgb +\n        texture(iChannel0, uv + vec2(+1,-1) * pixel).rgb +\n        texture(iChannel0, uv + vec2(+1, 0) * pixel).rgb +\n        texture(iChannel0, uv + vec2(+1,+1) * pixel).rgb;\n\n    vec3 life = texture(iChannel0, uv).rgb;\n    \n    vec3 center = mix(vec3(3.0), vec3(2.5), life);\n    vec3 range  = mix(vec3(0.5), vec3(1.5), life);\n    \n    life = clamp(ceil(range - abs(livingNeighbors - center)), vec3(0), vec3(1));\n\n    fragColor = iFrame <= 1 ? texture(iChannel1, uv) : vec4(life, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}