{"ver":"0.1","info":{"id":"NdlcWH","date":"1675078370","viewed":127,"name":"Smokyin Yang","username":"Peetu","description":"yin and yang effect with smoke","likes":15,"published":1,"flags":32,"usePreview":0,"tags":["yinyang"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = texture(iChannel0, uv).rgb;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rot(float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\treturn mat2(c, -s, s, c);\n}\n\n\nfloat noise(vec2 uv) {\n    uv*=.4;\n    float col;\n    const float r = 5.;\n    for(float f = 1.; f <= r; f+=1.) {\n        uv*=f;\n    \tcol += texture(iChannel1, uv).r;\n    }\n    col /= r;\n    return col;\n}\n\nfloat drawCircle(vec2 uv, float col, float negcol, float f, vec2 ouv, float strength)\n{\n    if(length(uv) < 0.05)\n    {\n        return negcol;\n    }\n    if(length(uv) < 0.2)\n    {\n        return col + (noise(ouv) - .5) * strength;\n    }\n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.y;\n    vec2 ouv = fragCoord/iResolution.xy;\n    uv -= vec2(0.9,0.5);\n    \n    float nx = noise((rot(-iTime * .3) * uv) * .1 + vec2(0.5, 0.1));\n    float ny = noise((rot(-iTime * .2) * uv) * .1 + vec2(0.3, 0.6));\n    vec2 os = vec2(nx, ny);\n    float prev = texture(iChannel0, ouv + ((os - vec2(0.5 + sin(iTime * .5) * .1)) * .004)).r;\n    \n    \n    float f = prev;\n    \n\n    float smoke = (noise(uv*.1 + os*.03) - .4); \n    \n    //make lighter\n    f = f + ((0.1 - f) * .05 * (0.02 + max(0., smoke)));\n    \n    \n    vec2 n = rot(iTime) * uv - vec2(0.14);\n    vec2 m = rot(iTime) * uv + vec2(0.14);\n    \n    f = drawCircle(n, .9, -.2, f, ouv*.1 + os*.038, .1);\n    f = drawCircle(m, -.2, .9, f, ouv*.1 + os*.038, .1);\n    \n    vec3 col = vec3(f);\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}