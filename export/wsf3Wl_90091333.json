{"ver":"0.1","info":{"id":"wsf3Wl","date":"1547767007","viewed":66,"name":"Pionowy ruch V2","username":"paweljagodzinski","description":"Piłeczka porusza się adekwatnie do ruchu linii znikając na osi X i pojawiając się na jej początku po powrocie linii przesuwanej do stanu początkowego. ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["ruchpieczki"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Pionowy ruch piłeczki adekwatnie do poziomego ruchu prostej\n//Ustalenie wartości zmiennych globalnych\nvec3 white = vec3(0.0, 0., 1.0); //Kolor tła\nfloat gridwidth = 2.0; //Szerokość kratki\nfloat gridgap = 40.0; // odległość między kratkami\nfloat PI = 3.1415; //Liczba PI\nfloat linewidth = 3.0; //Szerokość linii przesuwanej\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 pixel = white; //domyślne ustawienie pikseli na biało\n    vec3 col2 = vec3(.2, 0.7, 1.0);\n    vec3 col3 = vec3(0.2, 1.0, 0.2);\n    vec3 col4 = vec3(0.0, 0.0, 0.0);\n    vec3 col5 = vec3(1.0, 0.0, 0.0);\n    float time = iTime;\n    vec2 zero = iResolution.xy / 2.0; //wyśrodkowanie układu współrzędnych\n    //Środek układu przypisanego do linii, który przesuwa się w czasie\n    vec2 floatingzero = vec2((mod(time, 4.0)-2.0<0.0)?(iResolution.x / 2.0 - mod(time*200.0, 20.0*gridgap)+5.0*gridgap):((iResolution.x - 40.0*gridgap) / 2.0 + mod(time*200.0, 20.0*gridgap)+5.0*gridgap), iResolution.y/2.0);\n    //pozycja piłeczki\n    vec2 ballpoz = vec2(zero.x, zero.y+((mod(time, 4.0)-2.0)<=0.0?gridgap*-5.0+mod(time, 2.0)*gridgap*5.0:gridgap*5.0+mod(time, 2.0)*gridgap*5.0));\n    //Rysowanie linii poziomych\n    if (mod(abs(zero.x-fragCoord.x)+gridwidth/2.0, gridgap)<gridwidth) if (zero.x - fragCoord.x < 5.0 && zero.x - fragCoord.x > -5.0) pixel = col5; else pixel = col2;\n    //rysowanie linii pionowych\n    if (mod(abs(zero.y-fragCoord.y)+gridwidth/2.0, gridgap)<gridwidth) if (zero.y - fragCoord.y < 5.0 && zero.y - fragCoord.y > -5.0) pixel = col5; else pixel = col2;\n    //Miejscowienie piłeczki\n    if (length(ballpoz - fragCoord) < 10.0) pixel = col3;\n    //miejscowienie górnej połowy linii\n    if (((fragCoord.x-floatingzero.x+3.0)/(fragCoord.y-floatingzero.y) <= 1.0)&& floatingzero.x-fragCoord.x >= 0.0 && floatingzero.y-fragCoord.y >= 0.0&&(fragCoord.x-floatingzero.x-3.0)/(fragCoord.y-floatingzero.y)>=1.0)\n               pixel = col4;\n    //miejscowienie dolnej połowy linii\n    if (((fragCoord.x-floatingzero.x-3.0)/(fragCoord.y-floatingzero.y)<=1.0)&&floatingzero.x-fragCoord.x<=0.0 && floatingzero.y-fragCoord.y<=0.0&&(fragCoord.x-floatingzero.x+3.0)/(fragCoord.y-floatingzero.y)>=1.0)\n            pixel = col4;\n    //rysowanie\n    fragColor = vec4(pixel, 1.0);\n}","name":"Image","description":"","type":"image"}]}