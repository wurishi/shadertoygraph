{"ver":"0.1","info":{"id":"llj3Dz","date":"1428350997","viewed":7704,"name":"Shock Wave with Saturation","username":"Darthmarshie","description":"My first shader on ShaderToy. A shock wave shader with saturation based on Shock Wave by jakubus (https://www.shadertoy.com/view/XsXGR7).","likes":70,"published":1,"flags":0,"usePreview":1,"tags":["wave","water","saturation","shockwave","ripple","shock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Use as you will.\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //Sawtooth function to pulse from centre.\n    float offset = (iTime- floor(iTime))/iTime;\n\tfloat CurrentTime = (iTime)*(offset);    \n    \n\tvec3 WaveParams = vec3(10.0, 0.8, 0.1 ); \n    \n    float ratio = iResolution.y/iResolution.x;\n    \n    //Use this if you want to place the centre with the mouse instead\n\t//vec2 WaveCentre = vec2( iMouse.xy / iResolution.xy );\n       \n    vec2 WaveCentre = vec2(0.5, 0.5);\n    WaveCentre.y *= ratio; \n   \n\tvec2 texCoord = fragCoord.xy / iResolution.xy;      \n    texCoord.y *= ratio;    \n\tfloat Dist = distance(texCoord, WaveCentre);\n    \n\t\n\tvec4 Color = texture(iChannel0, texCoord);\n    \n//Only distort the pixels within the parameter distance from the centre\nif ((Dist <= ((CurrentTime) + (WaveParams.z))) && \n\t(Dist >= ((CurrentTime) - (WaveParams.z)))) \n\t{\n        //The pixel offset distance based on the input parameters\n\t\tfloat Diff = (Dist - CurrentTime); \n\t\tfloat ScaleDiff = (1.0 - pow(abs(Diff * WaveParams.x), WaveParams.y)); \n\t\tfloat DiffTime = (Diff  * ScaleDiff);\n        \n        //The direction of the distortion\n\t\tvec2 DiffTexCoord = normalize(texCoord - WaveCentre);         \n        \n        //Perform the distortion and reduce the effect over time\n\t\ttexCoord += ((DiffTexCoord * DiffTime) / (CurrentTime * Dist * 40.0));\n\t\tColor = texture(iChannel0, texCoord);\n        \n        //Blow out the color and reduce the effect over time\n\t\tColor += (Color * ScaleDiff) / (CurrentTime * Dist * 40.0);\n\t} \n    \n\tfragColor = Color; \n}","name":"Image","description":"","type":"image"}]}