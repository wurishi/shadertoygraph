{"ver":"0.1","info":{"id":"MXjcDW","date":"1727298687","viewed":19,"name":"Puff Ink Ring","username":"Rugged","description":"Ink","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["ink"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float delta = 0.001;\n    \n    vec2 up = vec2(0., delta);\n    vec2 right = vec2(delta, 0.);\n    \n    vec4 col = vec4(0.);\n    \n    vec2 red = vec2(1., 0.);\n    vec2 green = vec2(0., 1.);\n    vec2 blue = vec2(-.707, -.707);\n    \n    col = texture(iChannel0, uv);\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    col = vec4(1. - col.x);\n    //col = .1 * vec4(dot(col.zw, red), dot(col.zw, green), dot(col.zw, blue), 0.);\n    \n    fragColor = col;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    vec2 uv = fragCoord / iResolution.xy;\n    vec2 uvc = uv - .5;\n    uvc *= 2.;\n    \n    \n    vec2 delta = 1.0 / iResolution.xy;\n    float dt = 0.0083333;\n    \n    \n    vec2 up = vec2(0., 1.);\n    vec2 right = vec2(1., 0.);\n    \n    vec2 upD = up * delta;\n    vec2 rightD = right * delta;\n    \n    \n    \n    \n    vec4 col = texture(iChannel0, uv);\n    vec4 colU = texture(iChannel0, uv + upD);\n    vec4 colR = texture(iChannel0, uv + rightD);\n    vec4 colD = texture(iChannel0, uv - upD);\n    vec4 colL = texture(iChannel0, uv - rightD);\n    \n    \n    vec2 v = -(col.zw * dt * 10.1);\n    \n    \n    vec4 colV = texture(iChannel0, (fragCoord + v) / iResolution.xy);\n    \n    \n    \n    float p = -colR.z + colL.z - colU.w + colD.w;\n    \n    vec2 gradP = vec2(0.);\n    gradP += up * (colU.y - colD.y);\n    gradP += right * (colR.y - colL.y);\n    \n    //yes i understand the simplification but i like bad performance\n    //deal w it\n    vec2 dvdt = (-gradP) * dt * (0.1 / dt);\n    \n    \n    \n    \n    \n    \n    \n    colV.zw += dvdt;\n    \n    col = colV;\n    \n    col.y = p;\n    \n    col.x *= 0.999;\n    \n    \n    \n    if(abs(length(uvc) - .3) < 0.01){\n        \n        float a = atan(uvc.y / uvc.x);\n        \n        col.zw = 1000. * uvc * sin(iTime * 5.) * sin(8.* a);\n        col.x = 1.;\n        \n    }\n    \n    \n    \n    \n    if(iFrame == 0){\n        \n        uv -= 0.5;\n        \n        col = vec4(0.);\n        \n       \n\n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    fragColor = col;\n}","name":"Buffer A","description":"","type":"buffer"}]}