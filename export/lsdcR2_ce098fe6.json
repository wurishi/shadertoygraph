{"ver":"0.1","info":{"id":"lsdcR2","date":"1519613982","viewed":221,"name":"cos fractal","username":"wyatt","description":"imaginary fractal","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fractal","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 expo (vec2 v) {\n\treturn exp(v.x)*vec2(sin(v.y),cos(v.y));\n}\nvec2 coso (vec2 v) {\n\treturn vec2 (cos(v.x)*cosh(v.y),-sin(v.x)*sinh(v.y));\n}\nvec2 sino (vec2 v) {\n\treturn vec2 (cos(v.x)*sinh(v.y),sin(v.x)*cosh(v.y));\n}\nvec2 cosho (vec2 v) {\n\treturn vec2(cosh(v.x)*cos(v.y), sinh(v.x)*sin(v.y));\n}\nvec2 sinho (vec2 v) {\n\treturn vec2(sinh(v.x)*cos(v.y), sinh(v.x)*cos(v.y));\n}\nvec2 mul (vec2 a, vec2 b) {\n\treturn vec2(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.*(.6+sin(0.1*iTime)*sin(0.1*iTime))*(fragCoord/iResolution.xy*2.-1.);\n\tuv.x*=iResolution.x/iResolution.y;\n    float b = 0.;\n    float t = 0.5*iTime;\n    mat2 m = mat2 (sin(t),cos(t),-cos(t),sin(t));\n    vec2 v;\n    uv = uv/dot(uv,uv);\n    for (int x = -1; x < 2; x++)\n        for (int y = -1; y < 2; y++) {\n        v = uv+vec2(x,y)/iResolution.xy;\n        for (int i = 0; i < 10; i++ ) {\n            v = sino(mul(coso(v),coso(v)));\n            v = m*v;\n            if (dot(v,v) > 1e5) {b += 1./9.; break;}\n        }\n        }\n    fragColor = vec4(dot(v,v),b,b,1.0);\n}","name":"Image","description":"","type":"image"}]}