{"ver":"0.1","info":{"id":"NtjyRD","date":"1649281071","viewed":152,"name":"Basic Mandelbrot set","username":"10maurycy10","description":"A simple mandelbrot set renderer","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["fractalmandelbrotzoom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define cx_mul(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n\n#define ZOOM\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;\n    \n    #ifdef ZOOM\n    uv = uv / pow(2.0,mod(iTime*1.0,20.0));\n    \n    #endif\n    \n    vec2 c = uv*1.5 + vec2(-0.06,0.6514);\n    \n    \n    \n    vec2 x = c;\n    \n    for (int i = 0; i < 100; i++) {\n        x = cx_mul(x,x) + c;\n        if (abs(x.x) + abs(x.y) > 2.0) {\n            fragColor = vec4(i/10,i/100,1,  1.0);\n            return;\n        }\n    }\n    fragColor = vec4(0.0,0.0,0.0,  1.0);\n}","name":"Image","description":"","type":"image"}]}