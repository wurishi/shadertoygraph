{"ver":"0.1","info":{"id":"tlfyzn","date":"1591243466","viewed":113,"name":"HappyAccidents","username":"photonic","description":"I'm just playing around with the code to get some happy accidents <3 ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["animation","beartbeat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//CONTROLS HOW SOFT IS THE EDGE OF THE OBJECT\n#define BLUR 0.01\n\n//CONTROLS THE FREQUENCY OF THE BEAT\n#define BEAT_FREQ 5.0\n\n//THIS CONTROLS DE SIZE OF THE OBJECT\n#define WIDTH .09\n#define HEIGHT 0.01\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    uv.y = uv.y + sin((iDate.w + uv.x)*10.) * .08;\n\n    uv.y /= random(uv);\n    \n    uv *= (-abs(cos(iTime * BEAT_FREQ) / 10.0)) - 1.0;\n    \n\tcol += smoothstep(1.0, 1.0 - BLUR, abs(uv.x) + (1.0 - WIDTH)) * smoothstep(1.0, 1.0 - BLUR, abs(uv.y) + (1.0 - HEIGHT));\n    \n    col.b -= 1.0;\n    col.g -= 1.0;\n  \n\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}