{"ver":"0.1","info":{"id":"3lfSD7","date":"1563133468","viewed":148,"name":"Interference Circles","username":"badgerint","description":"Colourful interference circles.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["interference"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float ring(vec2 pos, float size, float width, vec2 pixel) {\n\tfloat fa = 0.02;\n\treturn smoothstep(width, width * fa, abs(mod(distance(pixel,pos), size)-.5 * size));\t\n}\n\n//hsv2rgb by Sam Hocevar\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    float x1 = cos(iTime) * cos(iTime * 0.5);\n    float y1 = sin(iTime) * sin(iTime * 0.5);\n    \t\n    float x2 = cos(iTime - 1.) * sin(iTime * 0.5);\n    float y2 = sin(iTime - 1.) * cos(iTime * 0.5);\n        \n    col += ring(vec2(x1, y1), 0.15, 0.08, uv);\n    col += ring(vec2(x2, y2), 0.15, 0.08, uv);\n    \n    vec3 mixcolor1 = hsv2rgb(vec3(sin(iTime * 0.06),(uv.x * uv.y) + abs(sin(iTime * 0.1)), 1.0)) * .18;\n\n    vec3 fcol = mix(vec3(0.), col, mixcolor1);\n    fragColor = vec4(fcol * 5., 1.0);\n}","name":"Image","description":"","type":"image"}]}