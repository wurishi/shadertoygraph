{"ver":"0.1","info":{"id":"3stGzf","date":"1569004732","viewed":130,"name":"Simple Landscape","username":"Radiant","description":"Sun","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["shader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hypot(float x, float y)\n{\n\treturn sqrt(x * x + y * y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float PI = 3.14159265;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\tvec2 pos = vec2(uv.x * iResolution.x / iResolution.y - 0.5 * iResolution.x / iResolution.y, uv.y - 0.5);\n    \n    float a = atan(pos.x, pos.y);\n    float val = 0.0;\n    for (float i = 0.0; i < 1.0; i += 0.04)\n    {\n        float speed = (mod(pow(i * 10.0, 2.1) * 1.2, 3.8) - 1.9) * 0.5;\n\t\tfloat phase = iTime * speed + i * 0.256;\n        \n        float comp1 = pow(i * 10.0, 2.5);\n        \n        float freq = 2.0 * mod((comp1 - mod(comp1, 1.0)), 10.0) + 3.0;\n        float f = pow(max(0.0, sin(a * freq + phase)), 0.2);\n        \n        val += pow(max(0.0, sin(a * freq + phase)), 0.3);\n    }\n    \n    float c = 1.0 - (hypot(pos.x, pos.y) - 0.10) / (val + 0.02) * 40.0;\n    \n   \tc = pow(c, 3.0);\n    c = clamp(c, 0.0, 1.0);\n    \n    vec3 sky_horizon = vec3(1.0, 0.3, 0.1);\n    vec3 sky_zenith = vec3(0.0, 0.0, 0.0);\n    vec3 sky = sky_zenith + sky_horizon * pow(1.0 - uv.y, 0.3);\n    \n    vec3 col = (vec3(1.0, 1.0, cos(iTime) * 0.1 + 0.9) - sky) * c + sky;\n    \n    for (float i = 0.0; i < 3.0; i += 1.0)\n    {\n    \tfloat terrain = sin((uv.x * pow(4.0 - i, 1.29) + iTime * 1.1) * 0.8 - 1.8 * i - 0.98) * 0.1 + 0.5 - i * 0.1;\n\t\tif (uv.y < terrain)\n   \t\t{\n\t\t\tcol = vec3(0.6, 0.3, 0.1) * (i / 22.0 + 0.2) * 0.7;\n    \t}\n    }\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","name":"Image","description":"","type":"image"}]}