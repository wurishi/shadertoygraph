{"ver":"0.1","info":{"id":"csX3DM","date":"1666280594","viewed":84,"name":"Distance to cursor","username":"VladGG","description":"This shader gets the distance to the cursor and draws a light around it. Behind the light there is a rainbow.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rainbow","cursor"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 mouseUv = iMouse.xy/iResolution.xy;\n\n    // Circular pixel coordinates\n    vec2 uvCircle = uv.xy * vec2(iResolution.x/iResolution.y, 1.0);\n    vec2 mouse = mouseUv.xy * vec2(iResolution.x/iResolution.y, 1.0);\n    \n    // Distance to cursor\n    float dist = distance(uvCircle.xy, mouse.xy) * 5.0;\n    dist = smoothstep(-0.0 + sin(iTime), 3.0 + cos(iTime + 15.0), dist);\n    \n    // Change background color over time\n    vec3 color = 0.5 + 0.5 * cos((iTime - 30.0) * 2.0 + uv.xyx + vec3(5.0, 60.0, 90.0));\n    \n    dist = 1.0 - dist;\n    // Output to screen\n    fragColor = vec4(dist * color.r, dist * color.g, dist * color.b, 1.0);\n    //dist = length(iMouse.xy / iResolution.xy);\n    //fragColor = vec4(noise, noise, noise, 1.0);\n}","name":"Image","description":"","type":"image"}]}