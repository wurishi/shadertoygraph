{"ver":"0.1","info":{"id":"DldGz8","date":"1681971551","viewed":80,"name":"3D tpms","username":"kmarchais","description":"tpms representation","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["gyroid","tpms"],"hasliked":0,"parentid":"4stfRX","parentname":"gyroid"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\n\nfloat gyroid(vec3 pos) {\n    return dot(sin(pos), cos(pos.yzx));\n}\n\nfloat primitive(vec3 pos) {\n    return dot(cos(pos), vec3(1.));\n}\n\nfloat neovius(vec3 pos) {\n    return 3.0 * dot(cos(pos), vec3(1.)) + 4.0 * pos.x * pos.y * pos.z;\n}\n\nfloat clamp_to_cube(float dist, vec3 pos, vec3 dim) {\n    vec3 diff = pos - 0.5 * dim;\n    return max(dist, max(diff.x, max(diff.y, diff.z)));\n}\n\nfloat clamp_to_sphere(float dist, vec3 pos, float radius) {\n    return max(dist, length(pos) - radius);\n}\n\nvec4 colormap(float value) {\n    // coolwarm\n    vec4 red = vec4(vec3(171.0, 0., 15.) / 255.0, 1.0);\n    vec4 white = vec4(vec3(200., 200., 200.) / 255.0, 1.0);\n    vec4 blue = vec4(vec3(58., 76., 192.) / 255.0, 1.0);\n    \n    if (value > 0.)\n        return (red - white) * value + white;\n    return (white - blue) * value + white;\n}\n\nvoid mainImage(out vec4 out_col, vec2 uv) {\n    \n    float t = 0.2 * iTime;\n    float scalar;\n    float dist = 1.0;\n    float thickness = 0.25;\n    \n    mat2  rotation = mat2( sin(t + vec4(0, 33, 11, 0)) );\n    vec3  resolution = iResolution,\n          ray_dir = vec3(0.18 * (2.*uv - resolution.xy) / resolution.y, -1),\n          march_point = 60. / resolution,\n          pos;\n          \n    \n    out_col -= out_col;\n    for (out_col++; out_col.x > 0. && dist > 0.00001; out_col-=.0075)\n        pos = march_point,\n        pos.xz *= rotation, pos.yz *= rotation,\n        scalar = gyroid(pos),\n        scalar = primitive(pos),\n        // scalar = neovius(pos),\n        dist = abs(scalar) - thickness,       \n        //dist = clamp_to_cube(dist, abs(pos), vec3(2. * PI)),\n        dist = clamp_to_sphere(dist, abs(pos), 9.),\n        march_point += 0.6 * dist * ray_dir;     // step forward = dist to obj\n        \n    out_col *= colormap(scalar / thickness);\n}\n","name":"Image","description":"","type":"image"}]}