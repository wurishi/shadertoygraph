{"ver":"0.1","info":{"id":"ls2BD3","date":"1502570821","viewed":561,"name":"\"ntsc\" feedback","username":"jrsa","description":"color shifting in the feedback path to mimic certain analog video techniques (using an HSV space shift as a substitute for color phase shifting in NTSC tv signals)","likes":11,"published":1,"flags":32,"usePreview":0,"tags":["feedback"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    vec2 tc = fragCoord.xy / res;\n    vec2 uv = tc;\n    \n    uv *= 0.998;\n    \n    vec4 fb = texture(iChannel1, uv); // feedback buffer (we're writing to it right now)\n    vec4 src = texture(iChannel0, tc); // video of jeanclaude\n    \n    // colorspace transforming (makes hue shifting easy)\n    vec3 transformedFb = rgb2hsv(fb.rgb);\n    \n    transformedFb.r += 0.05;\n   // transformedFb.g += 0.05;\n    \n    transformedFb.b += 0.04;\n    \n    \n    // back to rgb land\n    fb = vec4(hsv2rgb(transformedFb), fb.a);\n    \n    fb.rgb = mix(fb.rgb, src.rgb, 0.07);\n\n    fragColor = fb;\n}","name":"Buf A","description":"","type":"buffer"}]}