{"ver":"0.1","info":{"id":"fltXRr","date":"1638620765","viewed":112,"name":"Triangle expression","username":"chronos","description":"triangle\n\n(note that this is NOT a distance function)","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["triangle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Found the expression in a tweet by:\n// Akiva Weinberger\n// @akivaw\n// https://twitter.com/akivaw/status/1466465532513771522?s=20\n\nconst float size = .9;\n\nfloat tri(vec2 p)\n{\n    return abs(p.x) + abs(p.y + abs(p.x));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n    vec3 color = vec3(tri(uv)-size < 0.01);                 // vec3(abs(tri(uv)-size) < 0.01); // Edges only\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}