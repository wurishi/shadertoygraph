{"ver":"0.1","info":{"id":"ftc3RB","date":"1644396876","viewed":115,"name":"Testerillo-flame4","username":"Honga","description":"Test","likes":0,"published":1,"flags":34,"usePreview":0,"tags":["test"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec3 col = texture(iChannel1, uv, 0.0).rgb;\n\tfragColor = vec4(vec3(col.r, 0., col.g),1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const float kernelSize = 13.0;\nconst float offset = (kernelSize - 1.0) / 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 mouse = iMouse.xy / iResolution.xy;\n\n\n    float power = 0.0;\n    float correction = 0.0;\n    for(float i = -offset; i <= offset; i++) {\n        for(float j = -offset; j <= offset; j++) {            \n            if(i == 0.0 && j == 0.0) continue;\n            float distanceCorrection = length(vec2(i,j)) / offset;\n            correction += distanceCorrection;\n            vec2 uvCurrent = (fragCoord.xy + vec2(i, j)) / iResolution.xy;\n            power += texture(iChannel0, uvCurrent).r * distanceCorrection;\n        }\n    }\n    \n    power /= correction;\n\n    vec4 current = texture(iChannel0, uv);\n    \n    float vel = current.g;\n    float diff = power - current.r;\n    \n    vel += clamp(diff * iTimeDelta * 10.0, 0.0, 1.0);\n    \n    current.g = vel;\n    current.g *= 0.999;\n    \n    current.r += (vel - 0.5)* 2.0 * iTimeDelta * 10.0;\n   \n    \n    vec4 color = current;\n    color = clamp(color, 0.0, 1.0);\n\n    \n    //vec4 webcam = texture(iChannel1, uv);\n    //color = mix(webcam, color/vec4(8.0), .5);\n    //vec4 color = power;\n    if(distance(mouse, uv) < 0.05 && iMouse.z > 0.0) {\n        color.r = (sin(iTime * sin(iTime*10.0)*30.0) + 1.0) / 2.0;\n        //color.g = (sin(iTime * 1.0) + 1.0) / 2.0;\n        //color.b = (sin(iTime * 1.0) + 1.0) / 2.0;\n    }\n\n    fragColor = vec4(color.rgb, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}