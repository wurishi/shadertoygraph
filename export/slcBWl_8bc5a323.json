{"ver":"0.1","info":{"id":"slcBWl","date":"1663795745","viewed":65,"name":"USA!","username":"shelljump","description":"usa number one!!!!!!!!!!!","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["applepiebacongunsusanumber1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float s(in float x_, in float y_)\n{\n    //make grid based on mod1, ranging from [-0.5,0.5]\n    float x = x_ - float(int(x_)) - 0.5;\n    float y = y_ - float(int(y_)) - 0.5;\n    \n    //if r < triangle(theta) return 1 else return 0\n    float r = sqrt(x*x + y*y);\n    float p = 6.28 / 5.0;\n    float theta = acos(-y/r);\n    float rmin = 0.25 * abs(theta / p - floor(theta / p + 0.5)) + 0.125;\n    return max(1.0 - float(int(r / rmin)),0.0); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float sx = uv.x - 0.02 - floor(uv.x - 0.02);\n    float sy = uv.y + 0.026 - floor(uv.y + 0.026);\n    float stencil_ = max(0.0, 1.0 - float(max(int(sx * 2.75), int((1.0 - sy) * 2.04))));\n    \n    uv.x *= 5.0/2.0;\n    uv.y *= 13.0/7.0;\n    float star1 = s(uv.x * 6.0 , uv.y * 5.0 - 0.25);\n    float star2 = s(uv.x * 6.0 + 0.5, uv.y * 5.0 + 0.25);\n    float star = stencil_*(star1 + star2);\n    \n    uv = fragCoord/iResolution.xy;\n    \n    vec4 stars = vec4(star, star, 1.0, 1.0);\n    vec4 stripes = vec4(1.0, float(int(uv.y * 13.0) % 2), float(int(uv.y * 13.0) % 2), 1.0);\n    float stencil = float(max(int(uv.x * 5.0 / 2.0), int((1.0 - uv.y) * 13.0 / 7.0)));\n\n    // Output to screen\n    fragColor = stencil * stripes + (1.0-stencil)*stars;\n}","name":"Image","description":"","type":"image"}]}