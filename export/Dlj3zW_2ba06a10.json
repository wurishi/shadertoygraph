{"ver":"0.1","info":{"id":"Dlj3zW","date":"1673029609","viewed":109,"name":"Snowing Over Mountains","username":"kaffelon","description":"Wanted to make a way to create decent 2D mountain shapes. Also added in my previous snow shader to add something nice.\n\nClick to move mountains around.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","landscape","mountains","snow"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3Rn","filepath":"/media/a/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","previewfilepath":"/media/ap/0a40562379b63dfb89227e6d172f39fdce9022cba76623f1054a2c83d6c0ba5d.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rnd(float x)\n{\n    return fract(sin(dot(vec2(x+47.49,38.2467/(x+2.3)), vec2(12.9898, 78.233)))* (43758.5453));\n}\n\nfloat draw_circle(vec2 uv, vec2 cell, int depth)\n{\n    float size = length(.03 +sin(cell) * .02);\n    //return step(.4*pow(1.2,float(depth)), size-length((uv-.7)));\n    return smoothstep(.04, .04*pow(1.2,float(depth)), size-length((uv - .7)));\n\n}\n\nfloat draw_mountain(vec2 uv, float height)\n{\n    return step(height,uv.y);\n    //float x_light = pow(.9+uv.x,2.2);\n    //return vec3(step_line * clamp(mix(bot_color*x_light, top_color*x_light, uv.y * 2.),0.,1.));\n}\n\nvec3 color_mountain(vec2 uv,vec3 top_color, vec3 bot_color)\n{\n    float x_light = pow(.9+uv.x,2.2);\n     return vec3(clamp(mix(bot_color*x_light, top_color*x_light, uv.y * 2.),0.,1.));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float mouse = iMouse.x / iResolution.x;\n    \n    vec2 m = uv + vec2(sin(mouse*.5)*.4,0.);\n    vec3 col = vec3(0.);\n\n    //Background\n    vec3 back_left = vec3(.2,.2,.3);\n    vec3 back_right = vec3(.8,.5,.55);\n    vec3 background =  mix(back_left,back_right,(1.5*uv.x - uv.y));\n    col = background;\n   \n    // Snow\n    vec2 s = fragCoord/iResolution.xy;\n    vec3 snow_col;\n    vec3 snow_1;\n    vec3 snow_2;\n    vec3 snow_3;\n    \n    \n    for(int i = 0; i < 5; i++)\n    {\n\n        s = fract(2.0*pow(1.5,float(i+1))*fragCoord/iResolution.y);\n        vec2 motion = vec2(.6*cos(iTime  + float(i)),.6*sin(iTime)+(iTime * 3.5)) + s;    \n        vec2 pixel_move = (2.0*pow(1.5,float(i+1))*fragCoord/iResolution.y) + vec2(.6*cos(iTime  + float(i)),.6*sin(iTime)+(iTime * 3.5));\n        vec2 cell = floor(pixel_move);\n        s = fract(motion);\n        if (rnd(cell.x*cell.y) > .5)\n        {\n            if (i == 0)\n            {\n                snow_1 = vec3(draw_circle(s+.5*sin(rnd(cell.x*cell.y)), cell, i+1)) * ((s.x+s.y) * 1.0);\n            }\n            else if (i == 1)\n            {\n                snow_2 = vec3(draw_circle(s+.5*sin(rnd(cell.x*cell.y)), cell, i+1)) * ((s.x+s.y) * 1.0);\n            }\n            else if (i == 2)\n            {\n                snow_3 = vec3(draw_circle(s+.5*sin(rnd(cell.x*cell.y)), cell, i+1)) * ((s.x+s.y) * 1.0);\n            }\n            else\n            {\n                snow_col = snow_col + vec3(draw_circle(s+.5*sin(rnd(cell.x*cell.y)), cell, i+1)) * ((s.x+s.y) * 1.0); \n\n            }\n\n        }\n\n    }\n    col += snow_col;\n    \n    //Mountain 1\n    m.x = m.x*2.0;\n    m.x -= 1.;\n    m.y = .6-uv.y;\n    float height = texture(iChannel0,vec2(uv.x+sin(mouse*.5)*.4,0.)).x;\n    height =( height * 0.05) + abs(m.x);\n    float mountain1 = draw_mountain(m,height);\n    vec3 m1_col = mountain1 * color_mountain(m, vec3(.2,.2,.4), vec3(1.2,1.2,1.2));\n    col += m1_col;\n    col += snow_1;\n    col -= mountain1 * (background + snow_col);\n\n\n\n    // Mountain 2\n    height = texture(iChannel0,vec2(uv.x +sin(mouse*.5)*.08,0.7)).x;\n    m = uv + vec2(sin(mouse*.5)*.08,0.);\n    m.x = (m.x)*2.0;\n    m.x -= .5;\n    m.y = .6-m.y;\n    height =( height * 0.09-.2) + abs(m.x);\n    float mountain2 = draw_mountain(m,height);\n    if (mountain1 == 0.)\n    {\n        col += mountain2 * color_mountain(m, vec3(.2,.2,.4), vec3(.9,.9,1.));\n        col -= mountain2 * (background + snow_col+m1_col);\n        col += snow_2;\n    }\n    \n    // Mountain 3\n    height = texture(iChannel0,vec2(uv.x +sin(mouse*.5)*.04,0.4)).x;\n    m = uv + vec2(sin(mouse*.5)*.04,0.);\n    m.x = (m.x)*2.0;\n    m.x -= 1.2;\n    m.y = .6-m.y;\n    height =( height * 0.1-.25) + abs(m.x);\n    float mountain3 = draw_mountain(m,height);\n    if (mountain1 == 0. && mountain2 == 0.)\n    {\n        col += mountain3 * color_mountain(m, vec3(.2,.15,.35), vec3(.68,.68,.78));\n        col -= mountain3 * (background + snow_col+m1_col);\n        col+= snow_3;\n    }\n\n    \n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}