{"ver":"0.1","info":{"id":"dsBcRy","date":"1687833829","viewed":66,"name":"Generattiv - 2","username":"generattiv","description":"Playing around with the basic glsl functions","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d","light","circle","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    //vec2 uv = 2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n    vec2 uv = 1.5*(2.0*fragCoord.xy - iResolution.xy) / iResolution.y;\n    vec2 nuv = normalize(uv);\n    \n    float t = sin(iTime); //Time\n    float gridLen = 25.*t; //Number of components created using fract\n    float c1 = 0.05; //Constants - make more variable\n    float c2 = 0.15;\n    \n    //Played around with the distance and fract functions here\n    float p = distance(fract(gridLen*nuv), fract(t*gridLen*uv));\n    float q = c1 / p;\n    float r = distance(uv, pow(q, t)*nuv);\n    float s = c2 / r;\n    \n    \n    vec3 zeta = vec3(s, 0.5*s, 3.*s);\n    fragColor = vec4(zeta, 1.0);\n}","name":"Image","description":"","type":"image"}]}