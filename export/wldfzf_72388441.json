{"ver":"0.1","info":{"id":"wldfzf","date":"1613211470","viewed":82,"name":"Purple thing","username":"eimink","description":"More purple goodness. Just playing around.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["raymarch","purple"],"hasliked":0,"parentid":"ttcBzf","parentname":"Kaleidoscopic"},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0,ivec2(fragCoord),0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"\nconst float E = 0.001;\nconst float FAR = 40.0;\nconst int STEPS = 64;\nconst float START = 0.0;\n\nvec3 glow = vec3(0.0);\n\nfloat time = 0.0;\n\n\n\nvoid rot(inout vec2 p, float a) {\n    p = cos(a)*p + sin(a)*vec2(p.y, -p.x);\n}\n\nfloat sphere (vec3 p, float s)\n{\n    return length(p)-s;\n}\n\nfloat box (vec3  p, vec3 r){\n    vec3 d = abs(p) - r;\n    return length(max(d,0.0) + min(max(d.x, max(d.y, d.z)), 0.0));\n}\n\nfloat twistBox( vec3 p, vec3 r )\n{\n    const float k = 2.0; // or some other amount\n    float c = cos(k*p.y);\n    float s = sin(k*p.y);\n    mat2  m = mat2(c,-s,s,c);\n    vec3  q = vec3(m*p.xz,p.y);\n    return box(q,r);\n}\n\nfloat scene(vec3 p){\n    vec3 pp = p;\n    for (int i = 0; i < 4; ++i) {\n        pp = abs(pp) - vec3(1.0,3.0,6.0);\n        rot(pp.xz,time*0.1);\n        rot(pp.xy,sin(time));\n    }\n    float a = sphere(pp, 1.0);\n    float b = twistBox(p, vec3(.1,1.,10.0));\n    float c = box(pp, vec3(.3,14.0,.2));\n    float h = clamp( 0.5 + 0.5*(b-c)/b, 0.0, 1.0 );\n    float z = mix(max(a,-b),c,h);\n    vec3 g = vec3(0.2, 0.1, 0.6)*0.1 / (0.01+abs(z));\n    glow += g;\n    return max(z,b);\n}\n\nfloat march(in vec3 ro, in vec3 rd, out vec3 p)\n{\n    p = ro;\n    float t = E;\n    for (int i = 0; i < STEPS; ++i) {\n        float d = scene(p);\n        t += d;        \n        if (d < E || t > FAR) {\n            break;\n        }\n        p += rd*d;\n    }\n    return t;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = START+iTime;\n    vec3 cp = vec3(0, 0, 2);\n    vec3 ct = vec3(0,0,-1);\n\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 q = -1.0+2.0*uv;\n    q.x *= iResolution.x/iResolution.y;\n    \n    vec3 cf = normalize(ct-cp);\n    vec3 cr = normalize(cross(vec3(0.0,1.0,0.0),cf));\n    vec3 cu = normalize(cross(cf,cr));\n    \n    vec3 rd = normalize(mat3(cr,cu,cf)*vec3(q,radians(60.0)));\n    \n    vec3 p = vec3(0.0);\n    \n    float t = march(cp,rd,p);\n\n    vec3 col = vec3(0.0);\n    if(t < FAR){\n        col = vec3(0.2,0.6,0.8) * length(p);\n    }\n    \n    col += glow;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 bufB = texelFetch(iChannel1,ivec2(fragCoord),0);\n    vec4 bufA = texelFetch(iChannel0,ivec2(fragCoord),0);\n    //fragColor = bufA;\n    fragColor = mix(bufB,bufA,0.025);\n}","name":"Buffer B","description":"","type":"buffer"}]}