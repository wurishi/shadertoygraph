{"ver":"0.1","info":{"id":"tllSz2","date":"1563617030","viewed":3111,"name":"Greyscale Image Shader","username":"ComposingCoder","description":"Beginner here, learning to make a greyscale image","likes":3,"published":1,"flags":0,"usePreview":1,"tags":["white","grey","dotproduct","black"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord.xy / iResolution.xy;\n\n    vec4 tex = texture(iChannel0, uv);\n    vec3 greyScale = vec3(.5, .5, .5);\n    fragColor = vec4( vec3(dot( tex.rgb, greyScale)), tex.a);\n\n}","name":"Image","description":"","type":"image"}]}