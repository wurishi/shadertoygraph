{"ver":"0.1","info":{"id":"tdKcWG","date":"1603745957","viewed":211,"name":"cloud test :)","username":"melissaran","description":"clouds?","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRr","filepath":"/media/a/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","previewfilepath":"/media/ap/27012b4eadd0c3ce12498b867058e4f717ce79e10a99568cca461682d84a4b04.bin","type":"volume","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 rotate_y(vec3 v, float angle)\n{\n\tfloat ca = cos(angle); float sa = sin(angle);\n\treturn v*mat3(\n\t\t+ca, +.0, -sa,\n\t\t+.0,+1.0, +.0,\n\t\t+sa, +.0, +ca);\n}\n\nvec3 rotate_x(vec3 v, float angle)\n{\n\tfloat ca = cos(angle); float sa = sin(angle);\n\treturn v*mat3(\n\t\t+1.0, +.0, +.0,\n\t\t+.0, +ca, -sa,\n\t\t+.0, +sa, +ca);\n}\n\nvec3 proj(vec3 a , vec3 b){\n    return (dot(a,b)/dot(b,b))*b;\n}\n\nfloat line(vec3 a, vec3 b, vec3 c, float r){\n    \n    vec3 norm = (a-c)-proj(a-c,a-b);\n    \n    return length(norm)-r;\n}\n\n\nfloat bell(vec3 p, float o){\n    p.y-=0.5;\n    p.z+=0.2;\n    vec3 n=normalize(vec3(1.,1.,0.));\n   vec3 n2=normalize(vec3(1.,-2.,1.));\n    vec3 pproj=vec3(p.x,0.,p.z);\n        \n    n=rotate_x(n,iTime*0.2);\n    n2=rotate_x(n2,iTime*0.2);\n    p=rotate_x(p,-iTime*0.2);\n\n\n    float plane = abs(dot(p,n))-0.2;\n    float plane2 = abs(dot(p,n2))-0.2;\n    \n    float s=length(p)-1.1;\n    \n    float f=max(max(min(abs(\n            (length(p))-o)-0.2/(1.+o),plane),plane2),s);\n    \n    return f;\n}\n\n\nfloat beaded(vec3 a, vec3 b, vec3 p){\n     p=rotate_y(p,-iTime*0.5);\n\n   float r=(sin(dot(p,a-b)*0.8)*0.1)+0.1;\n    return line(a,b,p,r);\n}\n\n\nfloat map(vec3 p){\n    float bells=bell(p,0.7);\n    vec3 a=vec3(-2.,10.,0.);\n    vec3 b=vec3(0.,0.,1.5);\n    \n    vec3 c=vec3(0.,10.,1.);\n    vec3 d=vec3(-2.,-5.,-0.);\n    \n    vec3 e=vec3(0.,10.,2.);\n    vec3 f=vec3(1.,-4.,-2.);\n    \n    \n    float lines= min(beaded(a,b,p),beaded(c,d,p));\n    lines=min(lines,beaded(e,f,p));\n    return min(bells,lines);\n    //return lines;\n}\n\n\nfloat turb(vec3 p, float t){\n    return (texture(iChannel0,p*0.2+t).r*5.+texture(iChannel0,p*0.4+t).r\n        +texture(iChannel0,p+t).r)*0.2-0.5;\n}\n\n\nfloat vmap(vec3 p){\n    float n=turb(p,iTime*0.01)*0.5;\n    float plane=abs(dot(p-vec3(0.,1.,0.),normalize(vec3(0.,-1.,-1.))))-0.5;\n    float holo = sin(p.y*10.+iTime);\n    p.x=-abs(p.x);\n    \n    \n    float sphere2=length(p+vec3(2.,-1.,0.))-1.2;\n    \n\n    //return min(sphere,max(plane,sphere2))+n;\n    return (max(holo,sphere2))+n;\n}\n\nvec3 norm(vec3 p){\n    //approx\n    \n    float d=map(p);\n    vec2 e = vec2(0.01,0.);\n    vec3 n= d- vec3(map(p-e.xyy),\n                    map(p-e.yxy),\n                    map(p-e.yyx));\n    \n                    \n\treturn normalize(n);\n}\n\nfloat march(vec3 ro, vec3 rd){\n    float d=0.;\n    for(int i=0;i<80;i++){\n        vec3 p= ro+d*rd;\n        float dist = map(p);\n        d+=dist;\n        if(abs(dist)<0.01 || d>20.) break;\n    }\n    return d;\n}\n\n/*\nFrom \"Cloudy Spikeball\" by Duke\nhttps://www.shadertoy.com/view/MljXDw\n*/\n\nvec2 vmarch(vec3 p, vec3 d, float sd){\n    \n   float ld=0., td=0.;\n   float w=0.;\n   \n   float tc = 0.;\n   \n   float r=0., l=0., b=0.;\n\n   for (int i=0;i<30; i++) {\n\t   if(!((i<30) && (l>=0.001*r) && (r < 50.)&& (td < .95)))\n\t\t   break;\n       if(r>sd) break;\n      l = vmap(p) * 0.5;\n      \n      const float h = .05;\n      ld = (h - l) * step(l, h);\n      w = (1. - td) * ld;   \n     \n      tc += w;\n      td += w;\n       \n      td += 1./70.;\n      \n      l = max(l, 0.01);\n      \n      p += l*d;\n      r += l;\n   }\n    tc *= 1. / exp( ld * 0.4 ) * 1.3;\n    tc-=0.23;\n    tc=max(0.,tc);\n    return vec2(tc,td);\n}\n\nfloat vshadow(vec3 l, vec3 pos, float sd){\n    float den=vmarch(pos,l,sd).y;\n    den=1.-smoothstep(0.0,1.,den-0.2);\n    return den;\n}\n\nfloat ndotl(vec3 n, vec3 lp, vec3 p, vec3 l){\n\tfloat d =march(p+n*0.2,l);\n    float ndl = clamp(dot(n,l),0.,1.);\n    if(d<length(p-lp))ndl*=0.1;\n    \n    float vs=vshadow(l,p,d);\n\n    return ndl*vs;\n}\n\nvec4 mat(vec3 p, vec3 n, vec3 vdir){\n    vec3 lp=vec3(5.,-3.,-2.);\n    vec3 l=normalize(lp-p);\n    float nl=ndotl(n,lp, p,l);\n    \n\tvec3 r = reflect(l,n);\t\n\tfloat reflectance = dot(l,r)*.5+.5;\n    vec4 col = vec4(0.5);\n    float fre=1.-clamp(0.,1.,dot(n,-vdir));\n    fre=pow(fre,2.);\n    vec4 ref=fre*(reflectance)*texture(iChannel2,-r);\n    \n    col=mix(vec4(1.,0.2,0.4,1.),vec4(1.,0.65,0.6,1.), nl);\n    \n    col+=ref;\n    p.y=max(0.,p.y);\n    \n    float fog=1.-1./(1.+(p.y));\n    \n    \n    col= mix(col, vec4(0.),fog);\n   \tcol.w=1.;\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n    vec3 ro= vec3(0.,0.5,-3.);\n    vec3 rd= normalize(vec3(uv.x,uv.y,1.2));\n\n            float d=march(ro,rd);\n    vec2 v= vmarch(ro,rd,d);\n    vec4 col=mix(vec4(0.,0.4,0.9,0.),vec4(0.1,0.8,0.8,0.),v.x*2.);\n    \n        if(d>20.){\n            vec4 col2 = vec4(0.);\n            fragColor=mix(vec4(col2.xyz,1.),col,v.y);\n        }else{\n            vec3 n = norm(ro+d*rd);\n    \t\tfragColor = mix(mat(ro+d*rd,n,rd),col,v.y);\n        }\n        \n}","name":"Image","description":"","type":"image"}]}