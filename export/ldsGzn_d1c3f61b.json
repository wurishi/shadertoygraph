{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"// Copyright (c) 2013 Andrew Baldwin (baldand)\n// License = Attribution-NonCommercial-ShareAlike (http://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US)\n\n// \"Cube bird\"\n// A colourful accident that appeared while I was making and debugging a simple distance field ray marcher\n\nconst vec3 screen = vec3(0.);\nconst vec3 up = vec3(0.,1.,0.);\nconst vec3 boxPos = vec3(0.,0.,2.);\n\nfloat box(vec3 p,vec3 b)\n{\n  return length(max(abs(p)-b,0.0));\n}\n\nfloat world(vec3 p)\n{\n\treturn box(p-boxPos,vec3(0.3));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec3 eye = vec3(1.*sin(iTime),.5*cos(iTime),-3.);\n    vec2 screenSize = vec2(iResolution.x/iResolution.y,1.0);\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec2 offset = screenSize * (uv - 0.5);\n\tvec3 right = cross(up,normalize(screen - eye));\n\tvec3 ro = screen + offset.y*up + offset.x*right;\n\tvec3 rd = normalize(ro - eye);\n\tfloat d=0.0;\n\tvec3 r = ro;\n\tfor (int i=0;i<10;i++) {\n\t\td = world(r);\n\t\tif (d<0.0) return;\n\t\tr += d*rd;\n\t}\n\tfragColor = vec4(vec3(2.*abs(r-boxPos)),1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ldsGzn","date":"1361867594","viewed":382,"name":"Cube bird","username":"baldand","description":"A colourful accident that appeared while I was making and debugging a simple distance field ray marcher","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","distancefield"],"hasliked":0,"parentid":"","parentname":""}}