{"ver":"0.1","info":{"id":"WsXyW8","date":"1584612267","viewed":288,"name":"Disturbing2","username":"Pierco","description":"My kids find it scary.","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 n) { return 0.5 + 0.5 * fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453); }\n\nfloat truc(vec3 p) {\n\tvec3 t;\n\tt.x = cos(p.z *2.0);\n\tt.y = cos(p.y) - sin(p.z);\n\tt.z = cos(p.z) + sin(p.x);\n\treturn length(t) - 0.7;\n}\n\nfloat sminP(float a, float b , float s){   \n    float h = clamp( 0.5 + 0.5*(b-a)/s, 0. , 1.);\n    return mix(b, a, h) - h*(1.0-h)*s;\n}\n\nfloat displace(vec3 p) {\n\tp = texture(iChannel0, p.xy / 20.).rgb / 30.0;\n\treturn p.x + p.y + p.z * 4.0 - 0.41;\n}\n\nfloat map(vec3 p) {\n\tfloat d = 100.0;\n\td = sminP(truc(p), length(p), .1);\n\td += displace(p);\n\treturn d;\n}\n\nfloat intersect(vec3 ro, vec3 rd) {\n\tfloat t = 0.0;\n\tfor (int i = 0; i < 30; i++) {\n\tfloat d = map(ro + rd * t);\n\tif (d <= 0.1) return t;\n\tt += d;\n\t}\n\treturn 0.0;\n}\n\nvec3 normal(vec3 p) {\n\tfloat eps = 0.1;\n\treturn normalize(vec3(\n\t\tmap(p + vec3(eps, 0, 0)) - map(p - vec3(eps, 0, 0)),\n\t\tmap(p + vec3(0, eps, 0)) - map(p - vec3(0, eps, 0)),\n\t\tmap(p + vec3(0, 0, eps)) - map(p - vec3(0, 0, eps))\n\t));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 fc = fragCoord;\n\tif (rand(vec2(iTime, iTime*2.0)) > 0.98) fc.y -= rand(vec2(iTime, iTime*3.0))*30.0;\n    vec2 uv = fc / iResolution.xy - 0.5;\n\tuv.x = uv.x * iResolution.x / iResolution.y;\n\t\n\tfloat t = 10.0 + iTime * 2.0;\n\tfloat cr = 32.0;\n\t\n    vec3 ro = vec3(t+1.3, 8.0, t);\n\tvec3 ta = vec3(0.0);\n\tvec3 ww = normalize(vec3(ta - ro));\n\tvec3 vv = vec3(0,cos(t/3.0),sin(t/2.0));\n\tvec3 uu = normalize(cross(ww, vv));\n    vv = normalize(cross(ww, uu));\n\t\n\tvec3 fcolor = vec3(0.0);\n\tfor (int i = 0; i < 3; i++) {\n\t\n\t\t\n\t\tconst float fov = 1.1;\n\t\tvec3 er = normalize(vec3(uv.xy, fov));\n\t\tvec3 rd = er.x * uu + er.y * vv + er.z * ww;\n\t\t\n\t\tfloat rnd = fract(sin(iTime * 20322.1232 + iTimeDelta)) / 13211.123;\n\t\tvec3 go = 0.015 * vec3(rnd - vec3(0.3) * 5.);\n\t\tvec3 gd = normalize( er + go );\n\t\t\n\t\tro += go.x * uu + go.y * vv;\n\t\trd += gd.x * uu + gd.y * vv;\n\t\trd = normalize(rd);\n\t\t\n\t\tfloat d = intersect(ro, rd);\n\t\tvec3 color = vec3(0);\n\t\t\n\t\tif (d > 0.0) {\n\t\t\tvec3 pi = ro + rd * d;\n\t\t\tvec3 ni = normal(pi);\n\t\t\tcolor = vec3(1.0,1.0,0.9) + dot(rd, ni);\n\t\t}\n        \n        float ps1 = sin(uv.x + cos(t * sin(uv.x) * 2.0));\n\t    float ps2 = cos(uv.x + sin(t));\n\t    color = (ps1 > 0.0 && ps1 < 0.002)  ? vec3(0.0) : color;\n\t    color = (ps2 > 0.0 && ps2 < 0.01 && ps1 > 0.0)  ? vec3(0.0) : color;\n\t\n\t\tcolor *= min(1.0, 9./d);\n\t\tfcolor += color - pow(length(uv.xy), 8.0+cos(iTime)*2.0) * 2.0;\n        fcolor += 0.3 * texture(iChannel0, uv.xy + vec2(0.0, 0.1*rand(vec2(iTime, iTime*0.7)))).rgb;\n\t}\n\tfragColor = vec4(fcolor / 3.,1.0);\n}","name":"Image","description":"","type":"image"}]}