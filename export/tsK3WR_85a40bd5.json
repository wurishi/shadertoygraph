{"ver":"0.1","info":{"id":"tsK3WR","date":"1570028475","viewed":94,"name":"Iain's Dice","username":"b099l3","description":"A dice ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dicesimple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float Circle(vec2 uv, vec2 p, float r, float blur)\n{\n    float d = length(uv-p);\n    float c = smoothstep(r, r-blur, d);\n    \n    return c;\n}\n\nfloat Roll(vec2 uv, int number)\n{\n    float rollPattern = .0;\n    \n    switch (number)\n    {\n        case 1:\n        rollPattern += Circle(uv, vec2(0.), .07, .005);\n        break;\n        case 2:\n    \trollPattern += Circle(uv, vec2(.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15), .07, .005);\n        break;\n        case 3:\n        rollPattern += Circle(uv, vec2(0.), .07, .005);\n    \trollPattern += Circle(uv, vec2(.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15), .07, .005);\n        break;\n        case 4:\n    \trollPattern += Circle(uv, vec2(.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(.15, -.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15, .15), .07, .005);\n        break;\n        case 5:\n        rollPattern += Circle(uv, vec2(0.), .07, .005);\n    \trollPattern += Circle(uv, vec2(.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(.15, -.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15, .15), .07, .005);\n        break;\n        case 6:\n    \trollPattern += Circle(uv, vec2(.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(.15, -.15), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15, .15), .07, .005);\n    \trollPattern += Circle(uv, vec2(.15, .0), .07, .005);\n    \trollPattern += Circle(uv, vec2(-.15, .0), .07, .005);\n        break;\n    }\n    return rollPattern;\n}\n\nint rand(vec2 co)\n{\n    float randomfloat = fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    return int(randomfloat);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float mask = Roll(uv, int(mod(iTime, 6.0) + 1.0) );\n\n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    vec3 col = vec3(.1, .6, .5) * mask;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}