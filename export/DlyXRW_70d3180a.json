{"ver":"0.1","info":{"id":"DlyXRW","date":"1686080490","viewed":99,"name":"Empty Self-Illusion","username":"Jonarella09","description":"Testing GLSL","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal","yellow","blue","shapes","purple","black"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t)\n{\n\n//[[0.758 0.318 0.808] [-0.342 0.558 0.828] [1.090 2.004 1.090] [-0.605 -0.205 1.325]]\n\n    vec3 a = vec3(0.758, 0.318, 0.808);\n    vec3 b = vec3(-0.342, 0.558, 0.828);\n    vec3 c = vec3(1.090, 2.004, 1.090);\n    vec3 d = vec3(-0.605, -0.205, 1.325);\n\n    return a + b * cos(6.28318*(c*t+d) );\n\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    \n    for(float i = 0.0; i < 4.0; i++){\n    \n        uv = fract(uv * 1.6) - 0.5;\n\n\n        float d = length(uv) * exp(-length(uv0));\n\n        vec3 col = palette(length(uv0) + i *.8 + iTime*.0001);\n\n        d = sin(d*8. + iTime)/8.;\n        d = abs(d);\n\n        d = pow(0.02 / d, 0.6);\n\n        finalColor += col *= d;\n    \n    }\n    \n    // Output to screen\n    fragColor = vec4((finalColor) - 1.5, 1.0);\n    \n    \n}","name":"Image","description":"","type":"image"}]}