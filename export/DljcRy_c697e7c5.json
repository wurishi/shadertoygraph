{"ver":"0.1","info":{"id":"DljcRy","date":"1691941278","viewed":85,"name":"Fourier Series Wave","username":"Iceman2022","description":"This is my first shader! I watched a few tutorials from the Art of Code and came up with this smoothstep example.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["waves","graph","smoothstep","fourier"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Red\nfloat squareWave(float x, float freq, float amp)\n{\n\treturn sign(fract(x * freq) - 0.5) * amp;\n}\n\n// Green\nfloat triangleWave(float x, float freq, float amp)\n{\n\treturn (abs(fract(x * freq) - 0.5) / 0.5 - 0.5) * amp;\n}\n\n// Blue\nfloat sawtoothWave(float x, float freq, float amp)\n{\n\treturn (fract(x * freq) - 0.5) * amp;\n}\n\n// Yellow\nfloat sineWave(float x, float freq, float amp)\n{\n\treturn sin(x * 2.0 * 3.14 * freq) * amp;\n}\n\nvec2 pixel(vec2 uv, vec2 point)\n{\n\t// 2D coordinates to pixels\n\t// point * iResolution + 0.5;\n\n\treturn abs(uv - point) * iResolution.xy + 0.5;\n}\n\n// Taken from https://www.shadertoy.com/view/flfBWj\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\t// I think I understand what the two uvs do:\t\n\t// Normalized for 2D coordinates from -0.5 to 0.5\n\tvec2 uv = fragCoord.xy/iResolution.xy - 0.5;\n\t// Normalized for 3D coordinates from -0.5 to 0.5\n\t//vec2 uv = (fragCoord.xy - 0.5 * iResolution.xy) / iResolution.y;\n\tvec3 col = vec3(0);\n\n// Fourier Series Waves:\n\t// Can't figure out how to draw the vertical lines.\n\t// Red Square Wave\n\tfloat y1 = squareWave(uv.x, 4.0, 1.0 / 10.0) + 0.3;\n\tcol.r += smoothstep(5.0, 3.0, pixel(uv, vec2(0, y1)).y);\n\n\t// Green Triangle Wave\n\tfloat y2 = triangleWave(uv.x, 4.0, 1.0 / 10.0) + 0.1;\n\tcol.g += smoothstep(5.0, 3.0, pixel(uv, vec2(0, y2)).y);\n\n\t// Again, Can't figure out how to draw the vertical lines.\n\t// Blue Sawtooth Wave\n\tfloat y3 = sawtoothWave(uv.x, 4.0, 1.0 / 10.0) - 0.1;\n\tcol.b += smoothstep(5.0, 3.0, pixel(uv, vec2(0, y3)).y);\n\n\t// Yellow Sine Wave\n\tfloat y4 = sineWave(uv.x, 4.0, 1.0 / 10.0) - 0.3;\n\tcol.rg += smoothstep(5.0, 3.0, pixel(uv, vec2(0, y4)).y);\n\t\n// Centered Lines:\n\t// Centered line along the y axis\n\tcol.g += step(pixel(uv, vec2(0)).x, 1.0);\n\t// Centered line along the x axis\n\tcol.g += step(pixel(uv, vec2(0)).y, 1.0);\n\n\t// Output to screen\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}