{"ver":"0.1","info":{"id":"4c2GRh","date":"1703811964","viewed":25,"name":"filtered importance sampling","username":"LVutner","description":"shrimple FIS example.\n","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["balls","sampling","diffuse","cosine","is"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.14\n\n#define filtered_importance_sampling\n#define cubemap_max_mip 9.0\n#define cubemap_width 256.0\n\nvec3 irradiance_balls(vec3 normal)\n{\n    const float omega_texel = 4.0 * pi / (6.0 * cubemap_width * cubemap_width);\n\n    vec3 lighting = vec3(0.0);\n\n    for(int i = 0; i < uniform_dirs.length(); i++) //64 taps\n    {\n        vec3 direction = normalize(uniform_dirs[i] + normal); //yah boi, lambert w/o tangents\n\n    #ifdef filtered_importance_sampling\n        float pdf = max(dot(normal, direction), 0.0) / pi;\n        float omega_sample = 1.0 / (float(uniform_dirs.length()) * pdf);\n        float mip_level = clamp(0.5 * log2(omega_sample / omega_texel), 0.0, cubemap_max_mip);\n    #else\n        float mip_level = 0.0;\n    #endif\n    \n        lighting += textureLod(iChannel0, direction, mip_level).xyz;\n    }\n    return lighting / float(uniform_dirs.length());\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0 * gl_FragCoord.xy - iResolution.xy) / iResolution.x;\n    vec3 ray_origin = vec3(0.0, 0.0, -1.0);\n    vec3 ray_direction = normalize(vec3(p, 1.0));\n\n    float t = rsi(ray_origin, ray_direction, 0.35).y;\n\n    vec3 col = vec3(0.0);\n    if(t > 0.0)\n    {\n        vec3 normal = (ray_origin + ray_direction * t) / 0.35;\n        col = irradiance_balls(normal);\n    }\n    else\n        col = textureLod(iChannel0, ray_direction, 0.0).xyz;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec2 rsi(vec3 position, vec3 direction, float radius) \n{\n\tfloat PoD = dot(position, direction);\n\tfloat radiusSquared = radius * radius;\n\n\tfloat delta = PoD * PoD + radiusSquared - dot(position, position);\n\tif (delta < 0.0) \n        return vec2(-1.0);\n\tdelta = sqrt(delta);\n\n\treturn -PoD + vec2(-delta, delta);\n}\n\nconst vec3 uniform_dirs[64] = vec3[64](\n    vec3(0.91593,-0.347884,0.200123),\n    vec3(-0.244493,-0.710186,-0.660196),\n    vec3(-0.838322,0.259442,0.479484),\n    vec3(0.245473,0.891464,-0.380835),\n    vec3(0.632533,-0.155099,0.758846),\n    vec3(-0.20644,-0.973183,-0.101474),\n    vec3(-0.269471,0.0483681,-0.961793),\n    vec3(0.143331,0.973557,0.177887),\n    vec3(0.725872,-0.086002,-0.682432),\n    vec3(-0.076835,-0.886014,0.457249),\n    vec3(-0.913781,0.0503775,-0.403071),\n    vec3(0.0159914,0.676129,0.73661),\n    vec3(0.992288,0.00772121,-0.12371),\n    vec3(0.00641109,-0.177892,-0.984029),\n    vec3(-0.985566,-0.0665794,0.155651),\n    vec3(-0.0700448,0.706071,-0.704668),\n    vec3(0.89279,0.117001,0.435013),\n    vec3(0.142896,-0.893697,-0.425307),\n    vec3(-0.687174,-0.132142,0.714374),\n    vec3(-0.217251,0.965143,-0.145946),\n    vec3(0.108209,0.0279573,0.993735),\n    vec3(0.274912,-0.952168,0.133416),\n    vec3(-0.653478,-0.211134,-0.726904),\n    vec3(-0.307126,0.85749,0.412777),\n    vec3(0.831999,0.327845,-0.447543),\n    vec3(0.283463,-0.663772,0.692138),\n    vec3(-0.893939,-0.415437,-0.168182),\n    vec3(-0.106605,0.211719,0.971499),\n    vec3(0.873146,0.474611,0.11118),\n    vec3(0.332658,-0.572825,-0.74914),\n    vec3(-0.781162,-0.487098,0.390541),\n    vec3(-0.490404,0.734038,-0.469779),\n    vec3(0.604084,0.431641,0.669902),\n    vec3(0.593065,-0.782314,-0.190417),\n    vec3(-0.244516,-0.197766,0.949263),\n    vec3(-0.650394,0.754372,0.0889437),\n    vec3(0.468682,0.430484,-0.771376),\n    vec3(0.647992,-0.666677,0.368305),\n    vec3(-0.604909,-0.626104,-0.492015),\n    vec3(-0.564322,0.511928,0.647666),\n    vec3(0.633455,0.743985,-0.212653),\n    vec3(0.292272,-0.234942,0.927027),\n    vec3(-0.600382,-0.796926,0.0667077),\n    vec3(-0.497216,0.350652,-0.793612),\n    vec3(0.516356,0.783334,0.346069),\n    vec3(0.729109,-0.451604,-0.514251),\n    vec3(-0.389822,-0.675926,0.62543),\n    vec3(-0.856868,0.458917,-0.234889),\n    vec3(0.189162,0.381537,0.904791),\n    vec3(0.907219,-0.4183,0.0444719),\n    vec3(-0.225508,-0.532484,-0.815848),\n    vec3(-0.882371,0.341401,0.323833),\n    vec3(0.279638,0.796232,-0.536486),\n    vec3(0.759697,-0.242935,0.603194),\n    vec3(-0.265275,-0.929255,-0.257125),\n    vec3(-0.455978,0.114803,0.882555),\n    vec3(0.213508,0.976688,0.0222359),\n    vec3(0.536034,-0.10141,-0.838084),\n    vec3(-0.147707,-0.941925,0.301597),\n    vec3(-0.822975,0.102675,-0.558722),\n    vec3(0.0753368,0.810439,0.580958),\n    vec3(0.958193,-0.0618399,-0.279361),\n    vec3(-0.0168296,-0.509477,0.860319),\n    vec3(-0.999999,0.00159255,0)\n);\n","name":"Common","description":"","type":"common"}]}