{"ver":"0.1","info":{"id":"Wd3BRl","date":"1605720050","viewed":124,"name":"Audio Waveform Visualizer v2","username":"oneshade","description":"Version two of my shader \"Audio Waveform Visualizer v1\". I made the resolution adjustable in order to avoid jaggedness.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["visualization","waveform"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGzn","filepath":"/media/a/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","previewfilepath":"/media/ap/a6a1cf7a09adfed8c362492c88c30d74fb3d2f4f7ba180ba34b98556660fada1.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float samplePiecewiseLinear(in float x, in float res) {\n    float x1 = floor(x * res) / res;\n    float y1 = texture(iChannel0, vec2(x1, 0.0)).x;\n\n    float x2 = ceil(x * res) / res;\n    float y2 = texture(iChannel0, vec2(x2, 0.0)).x;\n\n    float interp = fract(x * res);\n    return y1 * (1.0 - interp) + y2 * interp;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    float curSample = samplePiecewiseLinear(uv.x, 10.0);\n    vec3 color = vec3(smoothstep(0.03, 0.0, abs(uv.y - curSample)));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}