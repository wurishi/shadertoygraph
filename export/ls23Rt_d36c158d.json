{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[{"channel":0,"type":"texture","id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xx;\n\t\n\t/*since this is a unit vector,\n\tx should hold the cosine of the angle between the mouse and corner\n\ty should be sine*/\n\tvec2 normal = normalize(iMouse.xy /*/iResolution.xy*/ - vec2(.000001,.000001) );\n\t//edit: you cannot normalize a zero vector. Why should I not be surprized\n\t\n\t\n\t//this will just pan\n\t//fragColor = texture(iChannel0,uv-iMouse.xy/iResolution.xx);\n\n\t//losely copied from http://en.wikipedia.org/wiki/Rotation_matrix\n\tmat2 rotation = mat2(normal.x, -normal.y,\n\t\t\t\t\t \t normal.y,  normal.x);\n\t\n\tfragColor = texture(iChannel0, rotation*uv);\n    \n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ls23Rt","date":"1392437832","viewed":229,"name":"AboutTheLowerLeft","username":"BigotedSJW","description":"Click and drag to do a record scratch ;-)","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","simple","rotation"],"hasliked":0,"parentid":"","parentname":""}}