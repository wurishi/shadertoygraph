{"ver":"0.1","info":{"id":"ws3XDj","date":"1572885243","viewed":84,"name":"Colorful Lantern","username":"santiagoap","description":"Another test of my capability with sin and absolute functions.","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["sin"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void CreateCrossFX(vec2 uv, vec2 pos, inout vec3 result)\n{\n    uv += pos;\n    vec3 preResult = vec3(0.);\n    preResult += vec3(abs(-((sin(iTime) + 1. / 2.)) * 20. + length(uv + 50.)));\n    preResult *= vec3(abs(uv.x -0.3));\n    preResult *= vec3(abs(uv.x -0.6) * 2.);\n    preResult *= (vec3(1.) - vec3(abs(uv.x -sin(iTime))));\n    preResult *= (vec3(1.) - vec3(abs(uv.x -sin(iTime))));\n    preResult *= vec3(abs(uv.x + 0.3));\n    preResult *=( vec3(sin(iTime) * .1 + 0.3) - vec3(abs(uv.y)));\n    preResult *= sin(iTime) + 1. /2. + 1.8;\n    result += preResult / 0.1;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    uv -= .5;\n    \n    vec3 result = vec3(.0);\n\tCreateCrossFX(uv, vec2(0.,0.), result);\n    result *= mix(min(vec3(0.2,0.9,0.1),vec3(.2)), \n                  vec3(0.5,0.1,0.2), uv.x);\n    fragColor = vec4(result,1.0);\n}","name":"Image","description":"","type":"image"}]}