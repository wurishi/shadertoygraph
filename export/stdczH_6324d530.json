{"ver":"0.1","info":{"id":"stdczH","date":"1659294064","viewed":96,"name":"Grid Shifter","username":"gurudevbk","description":"I just shift my pants!","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["colors"],"hasliked":0,"parentid":"3slfz2","parentname":"colzurs"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    \n    // useful values\n    const float pi = 3.14159265;\n    const float i_max = pi;\n    const float d_i = i_max / 2.;\n    vec2 res = iResolution.xy;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord.xy - 0.1*res)/res.y;\n    \n    // Time varying pixel color\n    uv = mat2(sin(iTime), cos(iTime), sin(iTime), -cos(iTime)) * uv;\n    vec3 col = uv.xyx+vec3(sin(iTime),cos(iTime),-cos(iTime))/2.;\n\n\n\tcol.b -= .1*clamp(tan(fragCoord.y/1000.)*.5, .0, 1.);\n\tcol.r /= (1./col.b)*(pow(sin(iTime),3.)+pow(cos(iTime),2.))*atan(fragCoord.x, fragCoord.y-cos(iTime));\n\tcol.g = tan(fragCoord.x/50.)/tan(fragCoord.y/50.)*(cos(iTime+1.)+sin(iTime));\n    col.g -= .05*col.b;\n    col.r -= .5*col.g;\n    \n    // Output to screen\n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}