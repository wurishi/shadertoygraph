{"ver":"0.1","info":{"id":"4sKcD3","date":"1523574502","viewed":377,"name":"Temporal Bokeh","username":"luluco250","description":"Bokeh done in a temporal fashion. Wait a while and you'll have a perfectly rendered bokeh at 60FPS.\nPress R to reset, click and drag the mouse to change the blending speed.","likes":6,"published":1,"flags":48,"usePreview":0,"tags":["2d","blur","filter","bokeh","temporal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Display\n\nvoid mainImage(out vec4 frag_color, vec2 frag_coord) {\n    frag_color = texture(iChannel0, frag_coord / iResolution.xy);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Prepare Source\n\nconst float brightness = 20.0;\nconst float contrast = 5.0;\nconst float saturation = 0.6;\n\nfloat luma(vec3 color) {\n    //return dot(color, vec3(0.299, 0.587, 0.114));\n    return dot(color, vec3(0.2126, 0.7152, 0.0722));\n}\n\nvoid mainImage(out vec4 frag_color, vec2 frag_coord) {\n    vec2 uv = frag_coord / iResolution.xy;\n    uv *= iResolution.xy / vec2(textureSize(iChannel0, 0));\n    //uv += vec2(0.025, 0.05) * iTime;\n    //uv.x += sin(iTime * 10.0) * 0.1;\n    \n    vec3 color = texture(iChannel0, uv).rgb;\n    color = pow(color, vec3(2.2));\n    \n    color = mix(vec3(luma(color)), color, saturation);\n    color = mix(color, smoothstep(0.0, 1.0, color), contrast - 1.0);\n    color *= brightness;\n    \n    color = max(color, 0.0);\n    frag_color = vec4(color, 1.0);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"// Blur Image\n\nconst int blur_samples = 30;\nconst float blur_time = 0.001;\nconst float blur_scale = 1.0;\n\n#define fetch(sp, uv) vec4(texture(sp, uv).rgb, 1.0)\n\nvec2 rotate(vec2 uv, float angle, float len) {\n    float s = sin(angle) * len;\n    float c = cos(angle) * len;\n    return vec2(uv.x * c - uv.y * s, uv.y * c + uv.x * s);\n}\n\nvoid mainImage(out vec4 frag_color, vec2 frag_coord) {\n    vec2 ps = vec2(1.0) / iResolution.xy;\n    vec2 uv = frag_coord * ps;\n        \n    vec4 blur = fetch(iChannel0, uv);\n    vec2 dir = vec2(1.0, 0.0);\n    dir = rotate(dir, iTime * 10.0, blur_scale);\n    dir *= ps;\n    \n    // Make it look like a tunnel.\n    dir *= distance(frag_coord, iResolution.xy * 0.5) * 0.01;\n    \n    for (int i = 1; i < blur_samples; ++i)\n\t\tblur += fetch(iChannel0, uv + dir * float(i)) * float(i * i);\n    vec3 color = blur.rgb / blur.a;\n    \n    vec3 last = texture(iChannel1, uv).rgb;\n    last = pow(last, vec3(2.2));\n    \n    float t = iTimeDelta * 0.05;\n    if (iMouse.z > 0.0)\n        t = mix(t, 1.0, iMouse.x * ps.x * 0.01);\n    color = mix(last, color, t);\n\t\n    color = pow(color, vec3(1.0 / 2.2));\n    \n    float reset = texture(iChannel2, vec2(82.0 / 256.0, 0.0)).x;\n    if (reset > 0.0)\n        color = vec3(0.0);\n    \n    frag_color = vec4(color, 1.0);\n}\n","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"// Save Last\n\nvoid mainImage(out vec4 frag_color, vec2 frag_coord) {\n    frag_color = texture(iChannel0, frag_coord / iResolution.xy);\n}\n","name":"Buf C","description":"","type":"buffer"}]}