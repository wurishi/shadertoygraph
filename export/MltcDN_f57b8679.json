{"ver":"0.1","info":{"id":"MltcDN","date":"1532755465","viewed":369,"name":"Tiled Cross","username":"momoro","description":"Layers of tile","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["bookofshaders"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(0.490,-0.250)))*\n        2999.744);\n}\n\nfloat c(vec2 st) {\n    \n    float f;\n    f = max(abs(st.x/0.3), abs(st.y/0.1));\n    f = step(1.00, f);\n    \n    return 1.0 - f;\n}\n\nmat2 rotate(float angle) {\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nmat2 scale(float amount) {\n    return mat2(amount, 0,\n                0, amount);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord/iResolution.y;\n    st -= .35;\n    vec2 uv = st;\n\tvec2 tst = st;\n    \n    vec3 color = vec3(0.);\n    \n    vec2 id;\n    \n    float size = 10.;\n    \n\t// tile    \n    tst *= size;\n    id = floor(tst);\n\tfloat tile = random(id) / 3. + 0.2;\n\n    st = st*2. - 1.;\n    \n    // Highlight mouse area\n    st = floor(st * size) / size;\n    float f = 1.0 - distance(st, iMouse.xy/iResolution.xy);\n    f = step (0.790, f);\n    \n\n    vec2 mouse = ceil((iMouse.xy/iResolution.xy) * vec2(size))/vec2(size);\n    uv -= mouse;\n    \n   \n\tfloat cursor = c(uv);\n    cursor += c(rotate(3.14*0.5) *uv);\n    cursor =  cursor;\n    \n    // Combine\n    float c = (cursor + .5) * tile;\n    \n     uv *= sin(length(uv * sin(iTime) * 20.) + iTime);\n    uv *= rotate(radians(90.));\n    uv *= atan(length(uv * 4.) * 100.);\n    uv.y *= tan(st.x * 2.);\n    uv.x *= sin(st.y * 2.);\n \n    c += uv.y;\n\n    // Output to screen\n    fragColor = vec4(vec3(c),1.0);\n}\n","name":"Image","description":"","type":"image"}]}