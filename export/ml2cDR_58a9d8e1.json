{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Fork of \"[steve] spatial cursor mode exp\" by import_shader_steve. https://shadertoy.com/view/DtjyzW\n// 2023-08-10 15:03:40\n\n#define blur 0.01\n#define PI 3.14159\n#define S(a, b, n) smoothstep(a, b, n)\n\nvec2 Rot(vec2 uv, float a) {\n    return mat2(cos(a), -sin(a), sin(a), cos(a)) * vec2(uv);\n}\n\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r, in float a )\n{\n    p = Rot(p, a);\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nfloat hollowCircle( in vec2 uv, in float r, in float thickness) {\n    return abs(length(uv)-r)-thickness;\n}\n\nfloat sdRoundedX( in vec2 p, in float w, in float r )\n{\n    p = abs(p);\n    return length(p-min(p.x+p.y,w)*0.5) - r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.);\n    \n    float r = 0.05;\n    \n    float d = hollowCircle(uv, 0.9, 0.05);\n    \n    d = S(blur, -blur, d);\n    \n    col += d * vec3(1.);\n    \n    // t1 controls switching the 2 modes: normal mode and measuremnt add vertex mode\n    float t1 = sin(iTime * 3.) * 2.;\n    t1 = Remap(t1, -1., 1., 0., 1.);\n    t1 = -(t1 - 1.) * (t1 - 1.) + 1.;\n    t1 = 1.;\n    t1 = Remap(t1, 0., 1., 0.05, 0.4);\n    \n    // t2 controls how the center \"+\" sign rotates. It should rotate when the cursor is first added to the scene / has been idle for too long\n    float t2 = -iTime * 4.;\n    t2 = 0.;\n    \n    vec2 size = vec2(t1, 0.05);\n    vec4 roundness = vec4(0.05);\n    float box = sdRoundedBox(uv, size, roundness, 0. + t2);\n    box = S(blur, -blur, box);\n    \n    float box2 = sdRoundedBox(uv, size, roundness, PI / 2. + t2);\n    box2 = S(blur, -blur, box2);\n    float boxes = box + box2;\n    boxes = clamp(boxes, 0., 1.);\n    \n    float t1X = Remap(t1, 0.05, 0.4, 0.01, 0.5);\n    float boxX = sdRoundedX(Rot(uv, PI / 4. + t2), t1X, 0.05);\n    boxX = S(blur, -blur, boxX);\n    \n    float centerCircle = hollowCircle(uv, 0.36, 0.05);\n    centerCircle = S(blur, -blur, centerCircle);\n    \n    float amount = sin(iTime * 3.) * 2.;\n    amount = Remap(amount, -1., 1., 0., 1.);\n    // amount = 0.;\n    \n    col += vec3(1.) * mix(boxX, centerCircle, amount);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"outputs":[],"inputs":[],"code":"float Remap01 (float x, float low, float high) {\n    return clamp((x - low) / (high - low), 0., 1.);\n}\n\nfloat Remap (float x, float lowIn, float highIn, float lowOut, float highOut) {\n    return lowOut + (highOut - lowOut) * Remap01(x, lowIn, highIn);\n}","name":"Common","description":"","type":"common"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ml2cDR","date":"1733986367","viewed":71,"name":"[steve] spatial cursor circle","username":"import_shader_steve","description":"Experiment on spatial cursor measurement tool add vertex mode","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["spatialcursor"],"hasliked":0,"parentid":"","parentname":""}}