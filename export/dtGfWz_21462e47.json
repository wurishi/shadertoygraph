{"ver":"0.1","info":{"id":"dtGfWz","date":"1701983782","viewed":28,"name":"Pinwheel pattern","username":"jum","description":"Study of patterns","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["pinwheel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265359\n#define createCircle(uv, center, radius) smoothstep((1.5/iResolution.y),0., length(uv-center) - radius)\n\nvec2 createTiles(vec2 uv, float amount, float offset) {\n    float m = pow(abs(sin(PI/2. * fract(offset))), 5.5);\n    int i = mod(offset, 2.0)  > 1.0 ? 0 : 1;\n\n    uv *= amount;\n    \n    uv[i] += (step(1., mod(uv[1-i], 2.)) * m);\n              \n    uv[i] += (step(1., mod(uv[1-i]+1., 2.)) * - m);\n    \n    \n    return fract(uv);\n}\n\nvec2 rotate2D(vec2 uv, float _angle) {\n    uv -= 0.5;\n    uv = mat2(cos(_angle), -sin(_angle),\n              sin(_angle), cos(_angle)) * uv;\n    uv += 0.5;\n\n    return uv;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    float color = 0.0;\n    \n    float speed = 0.5;\n    float animation = iTime*speed;\n    float tiles = 7.0;\n\n    uv = createTiles(uv, tiles, animation);\n    float rotateOffset = mod(animation, 4.0) < 2. ? pow(abs(sin(PI * animation/2.0)), 1.5) : 0.;\n        \n    uv = rotate2D(uv, (rotateOffset * (PI/4.0))-(PI/8.0));\n    \n    color =  createCircle(uv, vec2(1.0, 0.0), 0.27);\n    color += createCircle(uv, vec2(0.0, 0.0), 0.27);\n    color += createCircle(uv, vec2(0.0, 1.0), 0.27);\n    color += createCircle(uv, vec2(1.0, 1.0), 0.27);\n\n    float circleOffsetA = rotateOffset;\n    float circleOffsetB = 0.5; \n    float radius = 0.57;\n    float width = 0.03;    \n\n    float circleStrokeA =   createCircle(uv, vec2(circleOffsetA, circleOffsetB), radius)\n                          - createCircle(uv, vec2(circleOffsetA, circleOffsetB), radius+width);\n\n    float circleStrokeB =   createCircle(uv, vec2(1.0 - circleOffsetA, circleOffsetB), radius)\n                          - createCircle(uv, vec2(1.0 - circleOffsetA, circleOffsetB), radius+width);\n\n    float circleStrokeC =   createCircle(uv, vec2(circleOffsetB, circleOffsetA), radius)\n                          - createCircle(uv, vec2(circleOffsetB, circleOffsetA), radius+width);\n                          \n    float circleStrokeD =   createCircle(uv, vec2(circleOffsetB, 1. - circleOffsetA), radius)\n                          - createCircle(uv, vec2(circleOffsetB, 1. - circleOffsetA), radius+width);\n\n    color +=  circleStrokeA\n            + circleStrokeB\n            + circleStrokeC\n            + circleStrokeD;\n\n\n    fragColor = vec4(vec3(color), 1.0);\n    // UV\n    //fragColor = vec4(vec3(uv,0.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}