{"ver":"0.1","info":{"id":"Dsy3Dz","date":"1678376582","viewed":126,"name":"halftone rgb cubemap","username":"lalaoopybee","description":"drag mouse around to view different angles!\n\nthis is my [url=https://www.shadertoy.com/view/flyyWd]halftone shader[/url] in action.","likes":6,"published":1,"flags":32,"usePreview":0,"tags":["mouse","dither","cubemap","halftone","npr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415927\n\n#define MASK .8\n\n#define HT_SIZE 12.4\n\n#define HT_R_ANGLE PI*.45\n#define HT_G_ANGLE PI*1.1\n#define HT_B_ANGLE PI*1.91\n\n#define SPREAD .6\n#define SNAP_AMT .21\n#define SNAP(a, b) (round((a)/(b))*(b))\n\nvec2 rotVec(vec2 v, float f){\n    float c=cos(f), s=sin(f);\n    return v*mat2(c, -s, s, c);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv=fragCoord/iResolution.xy;\n    fragColor=texture(iChannel0, uv);\n    \n    //get \"threshold\"\n    vec3 thresh=clamp(fragColor.rgb*.5, .05, .45);\n    \n    //shrink, rotate, repeat, center.\n    vec2 coord=fragCoord-iResolution.xy*.5;\n    vec2 shrunk=coord/HT_SIZE;\n    vec2 ctrR=.5-fract(rotVec(shrunk, HT_R_ANGLE));\n    vec2 ctrG=.5-fract(rotVec(shrunk, HT_G_ANGLE));\n    vec2 ctrB=.5-fract(rotVec(shrunk, HT_B_ANGLE));\n    \n    //combine, then \"dither\"\n    vec3 dist=vec3(length(ctrR), length(ctrG), length(ctrB));\n    vec3 pct=smoothstep(thresh+.06, thresh-.06, dist*MASK);        \n    fragColor.rgb+=(pct-.5)*SPREAD;\n    \n    //palette compression\n    fragColor.r=SNAP(fragColor.r, SNAP_AMT);\n    fragColor.g=SNAP(fragColor.g, SNAP_AMT);\n    fragColor.b=SNAP(fragColor.b, SNAP_AMT);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//https://www.shadertoy.com/view/XsjfDD\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    //init image\n    vec2 mousePt=iMouse.xy;\n    if(iMouse.xy==vec2(0)) mousePt=.5*iResolution.xy;\n    \n    float rotX = (mousePt.x / iResolution.x) * 2. * PI;\n    float rotY = (mousePt.y / iResolution.y) * PI;\n    vec2 uv = 2.5 * (fragCoord.xy - .5 * iResolution.xy) / iResolution.xx;\n    vec3 camO = vec3(cos(rotX), cos(rotY), sin(rotX));\n    vec3 camD = normalize(vec3(0)-camO);\n    vec3 camR = normalize(cross(camD, vec3(0, 1, 0)));\n    vec3 camU = cross(camR,camD);\n   \tvec3 dir =  normalize(uv.x * camR + uv.y * camU + camD);\n    fragColor = texture(iChannel0, dir);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define PI 3.1415927","name":"Common","description":"","type":"common"}]}