{"ver":"0.1","info":{"id":"3lKcDV","date":"1611804194","viewed":132,"name":"Fractal 03_gaz","username":"gaz","description":"3d","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define rot(a) mat2(cos(a),sin(a),-sin(a),cos(a))\n#define hash(n) fract(sin(n*234.567+123.34))\n\nfloat map(vec3 p){\n\tp.xy *= rot(iTime*0.3);\n    p.yz *= rot(iTime*0.4);\n\tfloat s=3.;\n\tp=abs(p);\n\tvec3  p0 = p*.9;\n\tfor (float i=0.; i<5.; i++){\n    \tp=1.-abs(p-1.);\n    \tp=1.-abs(abs(p-2.)-1.); \n    \tfloat g=-4.5*clamp(.45*max(1.6/dot(p,p),.7),.0,1.2);\n    \tp*=g;\n    \tp+=p0;\n        s*=g;\n\t}\n\ts=abs(s);\n\tfloat a=3.8;\n\tp-=clamp(p,-a,a);\n\treturn length(p)/s;\n\t\n\treturn length(cross(p,normalize(vec3(1))))/s-.005;\n}\n\n\nvec3 calcNormal(vec3 pos){\n  vec2 e = vec2(1,-1) * 0.002;\n  return normalize(\n    e.xyy*map(pos+e.xyy)+e.yyx*map(pos+e.yyx)+ \n    e.yxy*map(pos+e.yxy)+e.xxx*map(pos+e.xxx)\n  );\n}\n\nfloat march(vec3 ro, vec3 rd, float near, float far)\n{\n    float t=near,d;\n    for(int i=0;i<80;i++)\n    {\n        t+=d=map(ro+rd*t);\n        if (d<0.001) return t;\n        if (t>=far) return far;\n    }\n    return far;\n}\n\nfloat calcShadow( vec3 light, vec3 ld, float len ) {\n\tfloat depth = march( light, ld, 0.0, len );\t\n\treturn step( len - depth, 0.01 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord* 2.0 - iResolution.xy) / iResolution.y;\n    vec3 ro = vec3(0,0,5.5);\n    vec3 rd = normalize(vec3(uv,-2.0));\n    vec3 col = vec3(0);\n\tconst float maxd = 40.0;\n    float t = march(ro,rd,0.0,maxd);\n    if(t<maxd)\n    {\n        vec3 p=ro+rd*t;\n        col=vec3(0.3,0.3,0.6)+cos(p*0.17)*0.5+0.5;\n        vec3 n = calcNormal(p);      \n\t\tvec3 lightPos=vec3(20);\n    \tvec3 li = lightPos - p;\n\t\tfloat len = length( li );\n\t\tli /= len;\n\t\tfloat dif = clamp(dot(n, li), 0.5, 1.0);\n        float sha = calcShadow( lightPos, -li, len );\n        col *= max(sha*dif, 0.4);\n        float rimd = pow(clamp(1.0 - dot(reflect(-li, n), -rd), 0.0, 1.0), 2.5);\n\t\tfloat frn = rimd+2.2*(1.0-rimd);\n    \tcol *= frn*.9;\n        col *= max(0.5+0.5*n.y, 0.0);\n        col *= exp2(-2.*pow(max(0.0, 1.0-map(p+n*0.3)/0.3),2.0));\n        col += vec3(0.5,0.9,0.9)*pow(clamp(dot(reflect(rd, n), li), 0.0, 1.0), 8.0);\n        col = mix(vec3(0),col,exp(-t*t*.003));\n    }\n    fragColor.xyz = col;\n}","name":"Image","description":"","type":"image"}]}