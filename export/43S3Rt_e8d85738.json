{"ver":"0.1","info":{"id":"43S3Rt","date":"1708702659","viewed":95,"name":"Water ripple effect","username":"WilfredTheBoss","description":"like dropping a pebble into some water","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["water","effect","ripple"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float freq = 15.;\nfloat speed = 5.;\nfloat strength = 0.5;\nfloat dropOff = 2.;\nfloat duration = 3.;\nfloat initialStrength = 1.5;\nfloat fallOffStrength = 1.;\nvec2 origin = vec2(0.5, 0.5);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv0 = uv;\n    \n    // Centering uv around origin\n    uv = (uv - origin) * 2.;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float dist = length(uv);\n    float depth = cos((dist * freq) - (iTime * speed));\n    \n    if (dist > dropOff) {\n        depth = 0.;\n    } else {\n        depth *= dropOff - dist;\n    }\n    \n    float fallOff = (mod(iTime, duration) / duration);\n    depth *= 1. - fallOff;\n    depth *= smoothstep(1. - fallOff * (duration * initialStrength), 1., 1. - dist);\n    depth *= smoothstep(0., fallOff * (duration * fallOffStrength), dist);\n    \n    vec3 add = vec3(depth) * strength;\n    vec4 tex = texture(iChannel0, uv0 - abs(normalize(uv)) * -depth * (strength * 0.05));\n    \n    fragColor = tex + vec4(add, 1.);\n}","name":"Image","description":"","type":"image"}]}