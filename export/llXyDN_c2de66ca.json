{"ver":"0.1","info":{"id":"llXyDN","date":"1504824164","viewed":436,"name":"EnterLavaLamp","username":"albertelwin","description":"Lava lamp shader.","likes":14,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","lava"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"    \nconst vec3 BG_COLOR = vec3(0.25, 0.0, 0.5);\nconst vec3 MG_COLOR = vec3(0.0, 1.0, 0.5);\nconst vec3 FG_COLOR = vec3(0.0, 1.0, 0.75);\n\nfloat sd_box(vec3 p, float x, float y, float z);\n\nfloat smin(float a, float b, float k);\nfloat noise(vec3 p);\n\nfloat map(vec3 p) {\n    float d = 1000.0;\n    \n    d = smin(d, sd_box(p - vec3(0.0, 1.25, 0.75), 10.0, 0.5, 10.0), 0.25);\n    d = smin(d, sd_box(p - vec3(0.0,-1.25, 0.75), 10.0, 0.5, 10.0), 0.25);\n    \n    float t = iTime * 0.5;\n    d += noise(p + vec3(0.0, t, t));\n    \n    return d;  \n}\n\nfloat sd_box(vec3 p, float x, float y, float z) {\n\tvec3 d = abs(p) - vec3(x, y, z);\n\treturn min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat smin(float a, float b, float k) {\n\tfloat h = clamp(0.5 + 0.5 * (b - a) / k, 0.0, 1.0);\n\treturn mix(b, a, h) - k * h * (1.0 - h);\n}\n\nfloat noise(vec3 p) {\n\tvec3 s = vec3(7.0, 157.0, 113.0);\n\tvec3 ip = floor(p);\n\tp -= ip;\n\tvec4 h = vec4(0.0, s.yz, s.y + s.z) + dot(ip, s);\n\tp = p * p * (3.0 - 2.0 * p);\n\th = mix(fract(sin(h) * 43758.5453), fract(sin(h + s.x) * 43758.5453), p.x);\n\th.xy = mix(h.xz, h.yw, p.y);\n\treturn mix(h.x, h.y, p.z) * 2.0 - 1.0;\n}\n\nvec3 compute_normal(vec3 p) {\n\tvec3 eps = vec3(0.0005, 0.0, 0.0);\n    vec3 n;\n    n.x = map(p + eps.xyy) - map(p - eps.xyy);\n    n.y = map(p + eps.yxy) - map(p - eps.yxy);\n    n.z = map(p + eps.yyx) - map(p - eps.yyx);\n    n = normalize(n);\n    return n;\n}\n\nfloat compute_ao(vec3 p, vec3 n) {\n\tfloat occ = 0.0;\n\tfloat sca = 1.0;\n\tfor(int i = 0; i < 5; i++) {\n\t\tfloat hr = 0.01 + 0.12 * float(i) / 4.0;\n\t\tfloat d = map(p + hr * n);\n\t\tocc += -(d - hr) * sca;\n\t\tsca *= 0.95;\n\t}\n\treturn clamp(1.0 - 3.0 * occ, 0.0, 1.0);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {    \n    vec3 ro = vec3(0.0, 0.0, -2.5);\n    vec3 rd;\n    rd.xy = (fragCoord.xy / iResolution.y) * 2.0 - vec2(iResolution.x / iResolution.y, 1.0);\n    rd.z = 1.0;\n    rd = normalize(rd);\n    \n    vec3 color = BG_COLOR;\n\n    float t = 0.0;\n    float t_max = 7.5;\n    for(int i = 0; i < 256; i++) {\n        float d = map(ro + t * rd);\n        t += d * 0.6;\n        if(d < 0.002) {\n            vec3 p = ro + t * rd;\n            vec3 n = compute_normal(p);\n            vec3 l = normalize(vec3(0.25, 1.0, -0.5));\n            float dot_nl = clamp(dot(n, l), 0.0, 1.0);\n            float ao = compute_ao(p, n);\n            float fog = clamp(1.0 - t / t_max, 0.0, 1.0);\n            float light = mix(dot_nl, ao, 0.5);\n            \n            color = mix(MG_COLOR, FG_COLOR, light);\n            color = mix(BG_COLOR, color, fog);\n            break;\n        }\n        else if(t > t_max) {\n            break;\n        }\n    }\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}