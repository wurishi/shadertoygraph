{"ver":"0.1","info":{"id":"4st3DH","date":"1449746166","viewed":2624,"name":"Christmas tree lights ","username":"Tetane","description":"Simple rotating lights for your Christmas tree!","likes":29,"published":1,"flags":0,"usePreview":0,"tags":["christmas","colors","light","tree"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define pi 3.14159\n\nconst float dotsnbt = 90.0; // Number of dots for the tree\nconst float dotsnbs = 20.0; // Number of dots for the star (per circle)\n\nvec3 hsv2rgb (vec3 hsv) { // from HSV to RGB color vector\n\thsv.yz = clamp (hsv.yz, 0.0, 1.0);\n\treturn hsv.z * (1.0 + 0.63 * hsv.y * (cos (2.0 * 3.14159 * (hsv.x + vec3 (0.0, 2.0 / 3.0, 1.0 / 3.0))) - 1.0));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime;\n\tfloat mx = max(iResolution.x, iResolution.y);\n\tvec2 scrs = iResolution.xy/mx;\n\tvec2 uv = vec2(fragCoord.x, iResolution.y-fragCoord.y)/mx;\n\t//vec2 m = vec2(mouse.x/scrs.x,mouse.y*(scrs.y/scrs.x));\n\t\n\tvec2 pos  = vec2(0.0); \t\t\t// Position of the dots\n\tvec3 col = vec3(0.0); \t\t\t// Color of the dots\n\tfloat intensitys = 1.0/4000.0;\t// Light intensity for the star\n    float intensityt = 1.0/2000.0;\t// Light intensity for the tree\n\tfloat scale = 0.2;\t\t\t\t// Size of the star\n    \n    /*** Star ***/\n\tfor(float i = 0.0 ; i<dotsnbs ; i++){\n\t\t\n\t\tpos = vec2(cos(time*0.2)/20.0*cos(2.0*pi*i/dotsnbs),\n\t\t\t   0.15*sin(2.0*pi*i/dotsnbs))*scale;\n        pos+= vec2(scrs.x/2.0,scrs.y*0.11);\n\t\t\n\t\tcol += hsv2rgb(vec3(i/dotsnbs, distance(uv,pos)*(1.0/intensitys), intensitys/distance(uv,pos)));\n\t\t\n\t\tpos = vec2(0.12*cos(2.0*pi*i/dotsnbs+time*0.2),\n\t\t\t   0.08*sin(2.0*pi*i/dotsnbs))*scale;\n\t\tpos+= vec2(scrs.x/2.0,scrs.y*0.11);\n        \n\t\tcol += hsv2rgb(vec3(1.0-i/dotsnbs, distance(uv,pos)*(1.0/intensitys), intensitys/distance(uv, pos)));\n\t\t\n\t\tpos = vec2(0.12*cos(2.0*pi*i/dotsnbs+time*0.2),\n\t\t\t   -0.08*sin(2.0*pi*i/dotsnbs))*scale;\n\t\tpos+= vec2(scrs.x/2.0,scrs.y*0.11);\n        \n\t\tcol += hsv2rgb(vec3(i/dotsnbs, distance(uv,pos)*(1.0/intensitys), intensitys/distance(uv,pos)));\n\t}\n    \n    /*** Tree ***/\n    float angle = dotsnbt*1.8;\t\t// Angle of the cone\n    for(float i = 0.0 ; i<dotsnbt ; i++){\n\t\t\n\t\tpos = vec2(scrs.x/2.0+sin(i/2.0-time*0.2)/(3.0/(i+1.0)*angle),\n\t\t\t   scrs.y*((i)/dotsnbt + 0.21)*0.80);\n\t\t\n\t\tcol += hsv2rgb(vec3(1.5*i/dotsnbt+fract(time/4.0), distance(uv,pos)*(1.0/intensityt), intensityt/distance(uv,pos)));\n\t}\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"","description":"","type":"image"}]}