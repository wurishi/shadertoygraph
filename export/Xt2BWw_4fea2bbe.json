{"ver":"0.1","info":{"id":"Xt2BWw","date":"1516032315","viewed":551,"name":"Saturn_Ring","username":"duvengar","description":"An audio reactive Saturn ring.","likes":16,"published":1,"flags":64,"usePreview":0,"tags":["2d","noise","sound","space","planet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"MsBSRm","filepath":"https://soundcloud.com/alex-jedi/space-effect-end","previewfilepath":"https://soundcloud.com/alex-jedi/space-effect-end","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// \"Saturn_Ring\"\n// by Julien Vergnaud @duvengar-2018\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// music : https://soundcloud.com/alex-jedi/space-effect-end\n\n// Sound sensitivity inspired by @ocb shader.\n// https://www.shadertoy.com/view/4ljfWW\n\n////////////////////////////////////////////////////////////////////////////////////////////\n#define M(t, d) mat2(cos(t * d), sin(t * d), -sin(t * d), cos(t * d))\n#define S(x, y, z) smoothstep(x, y, z)\n#define SEED .2831\n\n\nfloat hash(float n)\n{\n    return fract(sin(n) * 91438.55123);   \n}\n\n\nfloat hash2(vec2 p)\n{\n    // hash2 taken from Dave Hoskins \n    // https://www.shadertoy.com/view/4djSRW\n\tvec3 p3  = fract(vec3(p.xyx) * SEED);\n    p3 += dot(p3, p3.yzx + 19.19);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nfloat noise( in vec2 x ) {\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n    f = f*f*(3.0-2.0*f);\n    float n = p.x + p.y*57.0;\n    return mix(mix( hash(n + 0.0), hash(n + 1.0), f.x), mix(hash(n + 57.0), hash(n + 58.0), f.x), f.y);\n}\n\nmat2 m = mat2( 0.6, 0.6, -0.6, 0.8);\n\nfloat fbm(vec2 p){\n \n    float f = 0.0;\n    f += 0.5000 * noise(p); p *= m * 2.02;\n    f += 0.2500 * noise(p); p *= m * 2.03;\n    f += 0.1250 * noise(p); p *= m * 2.01;\n    f += 0.0625 * noise(p); p *= m * 2.04;\n    f /= 0.9375;\n    return f;\n}\n\n\nfloat starcloud(vec2 uv, vec2 scale, float density){\n\n    \n    vec2 grid = uv * scale;\n    vec2 id = floor(grid);  \n    grid = fract(grid) - .5;\n\n    float d = length(grid);  \n    float r = pow(hash2(id), density);\n    float star = 1. - S(-.01, clamp(r,.0,.5), d);\n\n    ;\n    return star ;\n}\nvec2 pol( vec2 uv){\n    \n   float scale = 3.;\n    uv.y *= scale;\n    vec2 pos = vec2(-scale*.01, -scale*.4);\n    uv += pos;\n    float l = length(uv);\n    vec2 r = vec2(sqrt(dot(uv,uv)));\n\n   return vec2(l);\n    \n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n    float t = iTime;\n     float amp = .0;\n    amp += .6 - texelFetch(iChannel0,ivec2(20,0),0).x + .5\n       *texelFetch(iChannel0,ivec2(400,0),0).x;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv*=1.3;\n    vec2 st = uv/1.3;\n    //uv *= 1.1;\n      \n    st = -1. + 2.*st;\n    uv.x *= iResolution.x/iResolution.y;\n    vec2 st2 = uv;\n    uv.y += .1 * dot(uv,uv);\n    \n    //\n    float p = S(.6,.58,length(uv + vec2(-.05,-.45)));\n    float p2 = min(p, p-S(.65,.54,length(uv + vec2(-.05,-.42))));\n    \n    \n    uv = pol(uv);\n    \n    float ring = pow(noise(noise(4.*uv- iTime*.5)*uv*5.),3.);\n    ring += pow(noise(noise(2.*uv- iTime*.3)*uv*30.),4.);\n    ring -= pow(fbm(2.*uv- iTime*.3*uv*60.),10.);\n\n    ring -=  amp < .5  && amp > -.5 ?  S(-.49,.4, amp *2.) : .0;\n    ring = pow(clamp(ring,-1.0,1.), 3.);\n    ring  -= 1.-S(.8,1.,length(uv*.5));  \n    ring *= 1.-S(.8,1.5,length(uv.y*.5));\n    \n\n    float star = starcloud(M(t*.02,1.) * st2, vec2(70.), 200.);\n    //star += starcloud(st2, vec2(100.), 50.);\n   \n    \n\tvec4 C = vec4(vec3( clamp(ring - p, .0,1.) + (p2 * 2.) ),1.0);\n    C = clamp(C,.0,1.);\n    C += vec4(.0,.0,.05,1.); \n    C += 2.*S(vec4(star),vec4(.0),  vec4(1.-length(st2.x*.41 )));\n   \n\tC += .06*hash2(uv*vec2(1462.439, 297.185));\n\n    C += .04*length(st.y + 1.5);\n    C -= .1 * dot(st*st,st*st);\n\n    fragColor = C;\n    \n    \n}","name":"Image","description":"","type":"image"}]}