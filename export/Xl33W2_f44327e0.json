{"ver":"0.1","info":{"id":"Xl33W2","date":"1471518822","viewed":639,"name":"practice for rotating round rect","username":"jcyuan","description":"for practice.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["basicpracticeroundrectanglerotate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FILL_COLOR vec3(.8, .8, .3)\n#define BG_COLOR vec3(.1, .5, .3)\n\n// from IQ: https://iquilezles.org/articles/distfunctions2d\nfloat udRoundBox(in vec2 distFromCenter, in vec2 halfSize, in float cornerRadius)\n{\n    float t = length(max(abs(distFromCenter) - (halfSize - cornerRadius), 0.)) - cornerRadius;\n    return smoothstep(-1., 1., t);\n}\n\nmat2 rotZ(float angle)\n{\n\tfloat ca = cos(angle);\n    float sa = sin(angle);\n\treturn mat2(ca, sa, -sa, ca);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 xy = fragCoord - iResolution.xy * .5;\n    float p = udRoundBox(rotZ(iTime) * xy, vec2(40., 60.), 8.);\n    vec3 col = mix(FILL_COLOR, BG_COLOR, p);\n\tfragColor = vec4(col, 1.);\n}\n","name":"Image","description":"","type":"image"}]}