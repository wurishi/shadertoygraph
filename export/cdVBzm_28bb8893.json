{"ver":"0.1","info":{"id":"cdVBzm","date":"1698071873","viewed":38,"name":"continuous hex ca (improved)","username":"Boogaloo","description":"Continuous hexagonal cellular automaton, but using code from shadertoy.com/view/wtdSzX by leftofzen to make it run better.","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["ca","cellularautomata"],"hasliked":0,"parentid":"csGfRh","parentname":"continuous hexagonal automaton "},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const vec2 s = vec2(1, 1.7320508);\n\nvec4 getHex(vec2 p)\n{       \n    vec4 hC = floor(vec4(p, p - vec2(.5, 1))/s.xyxy) + .5;\n    vec4 h = vec4(p - hC.xy*s, p - (hC.zw + .5)*s);\n    return dot(h.xy, h.xy) < dot(h.zw, h.zw) \n        ? vec4(h.xy, hC.xy) \n        : vec4(h.zw, hC.zw + .5);\n}\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    \n    vec2 u = (i - iResolution.xy*.5)/iResolution.y;\n    vec4 h = getHex(u*100.)+50.;\n    h.w-=50.*u.x;\n    o = texelFetch(iChannel0, ivec2(h.z,h.w), 0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"ivec2 wrap(float x, float y){\nreturn ivec2(mod(x,100.),mod(y,100.));\n}\n\nvoid mainImage( out vec4 o, in vec2 i )\n{\n    o = vec4(0.);\n    if(max(i.x,i.y)>99.){\n    return;}\n    \n    //ruleset parameters for 3 different neighborhoods: c = the cell, b = directly adjacent cells, a = \"diagonal\" cells\n    float a = -1./3.;\n    float b = 1./3.;\n    float c = 0.1;\n    \n    float rtot = 0.;\n    for(float j=-1.; j<=1.; j+=1.){\n    for(float k=-1.; k<=1.; k+=1.){\n        vec4 v = texelFetch(iChannel0, wrap(i.x+j,i.y+k),0);\n        if(abs(j)==1. && k==j){\n        rtot+= v.x*a;\n        continue;}\n        if(j==0. && k==0.){\n        rtot+= v.x*c;\n        continue;}\n        rtot+= v.x*b;\n    }}\n    rtot+= float(texelFetch(iChannel0, wrap(i.x+1.,i.y-2.),0).x*a);\n    rtot+= float(texelFetch(iChannel0, wrap(i.x-1.,i.y+2.),0).x*a);\n    rtot+= float(texelFetch(iChannel0, wrap(i.x+2.,i.y-1.),0).x*a);\n    rtot+= float(texelFetch(iChannel0, wrap(i.x-2.,i.y+1.),0).x*a);\n    o = vec4(clamp(abs(rtot),0.,1.));\n    \n    if(iFrame<2){\n    if(i.x>50. && i.y>50.){\n    if(i.x<51. && i.y<51.){\n    o = vec4(1.);\n    }}}\n}","name":"Buffer A","description":"","type":"buffer"}]}