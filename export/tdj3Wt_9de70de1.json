{"ver":"0.1","info":{"id":"tdj3Wt","date":"1550327429","viewed":156,"name":"Simple pixel fire","username":"murchanskii","description":"Perlin Noise study\n\nI was trying to implement this shader by myself\nhttps://twitter.com/ciaccodavide/status/964407412634472448","likes":3,"published":1,"flags":32,"usePreview":0,"tags":["perlinnoise","fire","gradient","wip"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec4 pix_fire = texture(iChannel0, uv);\n        \n    fragColor = pix_fire;\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float rand(vec2 uv) {\n    float y = fract(sin(dot(uv, vec2(12.9898, \n                                     78.233))) \n                    * 43758.5453123);\n    return y;\n}\n\nfloat perlinNoise(vec2 uv) {\n    vec2 ipos = floor(uv);\n    vec2 fpos = fract(uv);\n    \n    return rand(ipos);\n}\n\nfloat gradient(float y) {\n    return smoothstep(0.0, 1.0, y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy * 2.0f + 0.5f;\n        \n    float noise = perlinNoise(uv * 20.0 + \n                                  vec2(0.0, -10.0 * iTime));\n    \n    float g = gradient(1.0 - uv.y * 0.4);\n    \n    if (noise < 0.5 * g) {        \n    \tfragColor.r = 1.0;\n        fragColor.g = 1.0 - (g * abs(sin(iTime * 2.0) * 0.5 + 1.5) + g * noise);\n    }\n    else {\n        fragColor.rgb = vec3(0.0);\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}