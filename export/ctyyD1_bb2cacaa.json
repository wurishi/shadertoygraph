{"ver":"0.1","info":{"id":"ctyyD1","date":"1700152813","viewed":49,"name":"Drop energy waving blending","username":"oleg304","description":"Drop energy waving blending","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["droplets"],"hasliked":0,"parentid":"DsGBDt","parentname":"Drop energy "},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// HLSL -> GLSL https://anteru.net/blog/2016/mapping-between-HLSL-and-GLSL/\n#define float2   vec2\n#define float3   vec3\n#define float4   vec4\n#define lerp     mix\n#define atan2    atan\n#define frac     fract\n#define fmod     mod\n#define float2x2 mat2     \n#define mul(a, b) a*b \n#define texSampl 1.\n#define Texture2DSample(iChannel0, texSampl, uv) texture(iChannel0, uv)\n#define ddx dFdx\n#define ddy dFdy\n\n//--------------------------------------------------------------------------\n\n// bend https://www.shadertoy.com/view/dtVczm\nfloat2 bend(float2 p, float a){\n    if(abs(a)<.001) return p;  // if perfectly straight    \n    float ra = .5/a;p.x -= ra;    \n    float2 sc = float2(sin(a),cos(a));\n    float2 q = p - 2.*sc*max(0.,dot(sc,p));    \n    float s = sign(a);\n    return float2( (p.y>0.) ? ra-s*length(q)        : sign(-s*p.x)*(q.x+ra),\n                 (p.y>0.) ? ra*atan2(s*p.y,-s*p.x) : (s*p.x<0.)?p.y:1.-p.y );\n}\n\n// waving https://www.shadertoy.com/view/wstBDN\nfloat2 UvWave(float2 uv, float a, float b, float c, float s){\n    float x = abs(uv.x) * a, y = abs(uv.y) * b, k = sin(x * y + s); \n    float kkc = abs(pow(k,2.) * c), w1 = 1. + kkc * a, w2 = 1. + kkc * b;\n    return float2(uv.x * w1, uv.y / w2);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){      \n    float2 uv0 = (fragCoord/iResolution.xy - 0.5) * float2(iResolution.x/iResolution.y, 1.0) + 0.5; // Square Area  0.0 ~ 1.0\n    float2 uv = uv0 * 2.0 - 1.0;  // Square Area -1.0 ~ 1.0\n\n    // init drop transform\n    float angle = sin(iTime)*3.;\n    float height = iTime * 3.0;\n    // blend uv\n    uv+=float2(.0,.5);    \n    uv/=10.;\n    uv = bend(uv,angle)/2.; \n    uv = UvWave(uv - float2(0., -0.005), .3, .4, .3, height);\n\n    float s1 = .1, s2 = .3, s3 =.3, s4 =.6; //shape\n    float r = (s1 + s2*pow(abs(atan2(uv.x, -uv.y))/3.1416,6.))/8.;    \n    float fd = (1. -  min(abs(s3 - pow(length(uv)/r,s4)),1.))+sin(iTime*100.)*.01;\n    \n    fragColor = fd*vec4(0.,.2,.9,1.);\n}","name":"Image","description":"","type":"image"}]}