{"ver":"0.1","info":{"id":"7d2yDz","date":"1643367501","viewed":90,"name":"Broken TV multiple broadcasts","username":"nicehen","description":"Is meant to show a slip of images that overlap each other to simulate the receiving of multiple broadcasts at once on a TV with a broken image","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["broken","television"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float easeInOutQuad (float x, float t, float b, float c, float d) {\n    if ((t/=d/2.0) < 1.0) return c/2.0*t*t + b;\n    return -c/2.0 * ((--t)*(t-2.0) - 1.0) + b;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float time = iTime+12000.0;\n    vec2 uv = fragCoord/iResolution.xy;\n    float xCord =easeInOutQuad(uv.x,time,0.0,iTimeDelta, 10.0);\n    float yCord =easeInOutQuad(uv.y,time,0.0,iTimeDelta, 10.0);\n    vec3 col2 = texture(iChannel0, vec2(xCord,yCord)).rgb;\n    col2 += texture(iChannel1, vec2(uv.x,uv.y+(sin(time)/5.0))).rgb;\n    col2 += texture(iChannel2, vec2(uv.x,uv.y+(sin(time)/5.0))).rgb;\n    col2 += texture(iChannel3, vec2(uv.x,1.0-(uv.y+(sin(time)/5.0)))).rgb;\n    col2 += vec3(mod((vec2(1,1)-uv.xy)*(time+12000.0), 2.0),mod(uv.y * (time+12000.0), 2.0));\n    int meanOf = 5;\n    col2 /=vec3(meanOf,meanOf,meanOf);\n    fragColor = vec4(col2,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}