{"ver":"0.1","info":{"id":"cl2GRR","date":"1672758374","viewed":78,"name":"Mandelbrot Study","username":"Trospy_Study","description":"Mandelbrot Study\nreference : https://iquilezles.org/articles/mset2bulb/\n                https://www.shadertoy.com/view/XsKBz3\n                https://www.shadertoy.com/view/XtySzR \n                https://www.google.com/search?q=mandelbrot+theor\n\n    ","likes":0,"published":1,"flags":32,"usePreview":0,"tags":["sdfmandelbrotstudy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float calculateC(float u)\n{\n    float half_u = u/2.0f;\n    float c = half_u*(1.0f - half_u);\n    return c;\n}\n\nvec2 mandelbrot(vec2 z, float c)\n{\n    vec2 mandelbrot = vec2(z.x*z.x - z.y*z.y, 2.0f*z.x*z.y) + calculateC(c);\n\n    return mandelbrot;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0f * fragCoord.xy - iResolution.xy) / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    vec2 result = uv*1.95f;\n    float iter = sin(iTime)*100.f + 120.f;\n    float c = sin(iTime) * 0.0095 + 2.765f;\n    for(int i =0; i < int(iter); i++)\n    {\n        result =mandelbrot(result,c); \n    }\n    vec4 color = vec4(vec2(result + 1.0f), 0.0f,1.0f);\n      \n        \n    fragColor = color;\n}","name":"Buffer A","description":"","type":"buffer"}]}