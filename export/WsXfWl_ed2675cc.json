{"ver":"0.1","info":{"id":"WsXfWl","date":"1589227283","viewed":184,"name":"Levels Adjustment","username":"amatobahn","description":"Replicating the logic behind the Photoshop Levels dialog.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["computervision","photoshop","levels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 GammaCorrection(vec3 color, float gamma)\n{\n    return pow(color, vec3(1.0 / gamma));\n}\n\nvec3 LevelsControlInputRange(vec3 color, float minInput, float maxInput)\n{\n    return min(max(color - vec3(minInput), vec3(0.0)) / (vec3(maxInput) - vec3(minInput)), vec3(1.0));\n}\n\nvec3 LevelsControlInput(vec3 color, float minInput, float gamma, float maxInput)\n{\n    return GammaCorrection(LevelsControlInputRange(color, minInput, maxInput), gamma);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    // vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = texture(iChannel0, uv).xyz;\n    float gamma = clamp(cos(iTime), 0.0, 1.0);\n\n    // Output to screen\n    // fragColor = vec4(col,1.0);\n    fragColor = vec4(LevelsControlInput(col, 0.0, gamma, 1.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}