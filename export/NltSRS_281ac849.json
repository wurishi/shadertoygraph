{"ver":"0.1","info":{"id":"NltSRS","date":"1639322785","viewed":214,"name":"[TDF2021] Reconnection","username":"Kamoshika","description":"@Tokyo Demo Fest 2021 GLSL Compo\n\nTokyo Demo Fest 2021\nhttps://tokyodemofest.jp/","likes":13,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","truchet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n#define resolution iResolution.xy\n#define gl_FragColor fragColor\n#define gl_FragCoord fragCoord\n\n#define hash(x) fract(sin(x)*43758.5453)\n#define X(col) if(h<.5){\\\n\t\tq=vec2(q.y,-q.x);\\\n\t}\\\n\th=hash(h);\\\n\tif(h<.5){\\\n\t\tq=abs(q);\\\n\t\tcol+=smoothstep(.1,0.,min(q.x,q.y));\\\n\t}else{\\\n\t\tif(q.y<-q.x){\\\n\t\t\tq.xy=-q.yx;\\\n\t\t}\\\n\t\tq-=.5;\\\n\t\tcol+=smoothstep(.1,0.,abs(length(q)-.5));\\\n\t}\n\nconst float pi2=acos(-1.)*2.;\n\nfloat hash21(vec2 p){\n\treturn hash(dot(p ,vec2(12.9898,78.233)));\n}\n\nvoid rot3d(inout vec3 v,float a,vec3 ax){\n\tax=normalize(ax);\n\tv=mix(dot(ax,v)*ax,v,cos(a))-sin(a)*cross(ax,v);\n}\n\nmat2 rot(float a){\n\tfloat s=sin(a),c=cos(a);\n\treturn mat2(c,s,-s,c);\n}\n\nconst float radius=.15;\nconst float floorHeight=-.12;\nfloat lightTime=0.;\nfloat map(vec3 p){\n\tfloat d,d1,d2;\n\tfloat h=hash21(floor(p.zx));\n\t\n\tvec3 q=p;\n\tq.zx=fract(q.zx)-.5;\n\tif(h<.5){\n\t\tq.zx=vec2(q.x,-q.z);\n\t}\n\t\n\tvec3 q1=q;\n\tq.x=abs(q.x);\n\td1=length(q.xy)-radius;\n\tfloat grad=48.*radius*q.x*(q.x-.5);\n\tfloat tmp=length(vec2(abs(q.y-(q.x*q.x*(q.x-.75)*32.+2.)*radius)/sqrt(1.+grad*grad),q.z))-radius;\n\td1=min(d1,tmp);\n\t\t\n\tq=q1;\n\tif(q.x<-q.z){\n\t\tq.zx=-q.xz;\n\t}\n\tq.zx-=.5;\n\td2=length(vec2(length(q.zx)-.5,q.y))-radius;\n\n\tfloat a=1.;\n\tfloat ac=0.;\n\tfor(int i=0;i<5;i++){\n\t\tq=(p+hash(float(i))*500.)*a;\n\t\tq+=sin(q*1.7)*2.;\n\t\tq=sin(q);\n\t\tac+=q.x*q.y*q.z/a*.07;\n\t\ta*=2.;\n\t}\n\th=hash(h);\n\tlightTime=time+h*pi2;\n\td=mix(d1,d2,smoothstep(-.5,.5,sin(lightTime)));\n\td+=ac;\n\t\n\tfloat df=p.y-floorHeight;\n\td=min(d,df);\n\td=mix(d,df,smoothstep(-.2,.2,-sin(time*.3)));\n\t\n\treturn d;\n}\n\nvec3 calcN(vec3 p){\n\tvec2 e=vec2(.001,0);\n\treturn normalize(vec3(map(p+e.xyy)-map(p-e.xyy),\n\t\t\t      map(p+e.yxy)-map(p-e.yxy),\n\t\t\t      map(p+e.yyx)-map(p-e.yyx)\n\t\t\t      ));\n}\n\nvec3 getC(vec3 p){\n\tvec3 col=vec3(0);\n\tif(p.y>floorHeight+.01){\n\t\tcol+=vec3(.9,.7,.3);\t\t\n\t\treturn col;\n\t}\n\t\n\tvec2 q=p.zx*5.;\n\tfloat h=hash21(floor(q)*1.1523);\n\tq=fract(q)-.5;\n\t\n\tvec3 c1=vec3(0);\n\tvec2 q1=q;\n\tX(c1)\n\t\t\n\tvec3 c2=vec3(0);\n\tq=q1;\n\th=hash(h);\n\tX(c2);\n\t\n\tcol=mix(c1,c2,smoothstep(-.5,.5,sin(lightTime)));\n\t\n\tq=p.zx*.5;\n\tq=fract(q)-.5;\n\tif(q.x*q.y>0.){\n\t\tcol=1.-col;\n\t}\n\tcol=clamp(col,.05,.95);\n\tfloat red=smoothstep(.51,.49,abs(sin(lightTime)));\n\tcol+=vec3(1,0,0)*red*100.;\n\t\n\treturn col;\n}\n\nfloat shadow(vec3 rp,vec3 rd){\n\tfloat d;\n\tfloat h=.001;\n\tfloat res=1.;\n\tfloat c=.2;\n\tfor(int i=0;i<30;i++){\n\t\td=map(rp+rd*h);\n\t\tif(d<.001){\n\t\t\treturn c;\n\t\t}\n\t\tres=min(res,16.*d/h);\n\t\th+=d;\n\t}\n\treturn mix(c,1.,res);\n}\n\nfloat fs(float f0,float c){\n\treturn f0+(1.-f0)*pow(1.-c,5.);\n}\n\nvec3 march(inout vec3 rp,inout vec3 rd,inout bool hit,inout vec3 ra,int itr){\n\tvec3 col=vec3(0);\n\tfloat t=0.;\n\thit=false;\n\t\n\tfor(int i=0;i<100;i++){\n\t\tif(i>=itr||t>30.){\n\t\t\tbreak;\n\t\t}\n\t\tfloat d=map(rp+rd*t);\n\t\tif(abs(d)<.0001){\n\t\t\thit=true;\n\t\t\tbreak;\n\t\t}\n\t\tt+=d*.9;\n\t}\n\trp+=rd*t;\n\t\n\tvec3 ld=normalize(vec3(-3,3,-1));\n\tvec3 al=getC(rp);\n\tvec3 n=calcN(rp);\n\tvec3 ref=reflect(rd,n);\n\tfloat diff=max(dot(ld,n),0.);\n\tfloat spec=pow(max(dot(reflect(ld,n),rd),0.),20.);\n\tfloat fog=exp(-t*t*.005);\n\tfloat sh=shadow(rp+.01*n,ld);\n\tfloat f0=0.8;\n\tfloat lp=10.;\n\tfloat m=0.9;\n\tcol+=al*diff*sh*(1.-m)*lp;\n\tcol+=al*spec*sh*m*lp;\n\tcol=mix(vec3(1),col,fog);\n\t\n\tcol*=ra;\n\tra*=al*fs(f0,dot(ref,n))*fog;\n\t\n\trp+=.01*n;\n\trd=ref;\n\t\n\treturn col;\n}\n\nvec3 acesFilm(vec3 x) {\n\tconst float a = 2.51;\n\tconst float b = 0.03;\n\tconst float c = 2.43;\n\tconst float d = 0.59;\n\tconst float e = 0.14;\n\treturn clamp((x * (a * x + b)) / (x * (c * x + d) + e), 0., 1.);\n}\n\n#define ihash(x,n) floor(hash(x)*float(n))\nfloat in1d(float x,int n){\n    float i=floor(x);\n    float s=.1;\n    float u=smoothstep(.5-s,.5+s,fract(x));\n    return mix(ihash(i,n),ihash(i+1.,n),u);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n\tvec2 uv=(gl_FragCoord.xy*2.-resolution)/min(resolution.x,resolution.y);\n\tvec3 col=vec3(0);\n\t\n\tvec3 cp=vec3(0,1.,-time);\n\tvec3 rd=normalize(vec3(uv,-2.+dot(uv,uv)*.3));\n\t\n\tcp.x+=in1d(cp.z*.33-550.5,10);\n\tcp.y+=in1d(cp.z*.39-61.,5);\n\t\n\trot3d(rd,cp.y*.3,vec3(1,0,0));\n\t\n\tvec3 rp=cp;\n\tvec3 ra=vec3(1);\n\tbool hit=false;\n\tcol+=march(rp,rd,hit,ra,100);\n\tif(hit){\n\t\tcol+=march(rp,rd,hit,ra,30);\n\t}\n\tif(hit){\n\t\tcol+=march(rp,rd,hit,ra,30);\n\t}\n\t\n\tcol=acesFilm(col);\n\tcol=pow(col,vec3(1./2.2));\n\t\n\tgl_FragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}