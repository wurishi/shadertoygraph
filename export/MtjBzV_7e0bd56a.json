{"ver":"0.1","info":{"id":"MtjBzV","date":"1516594514","viewed":535,"name":"Mobius transformation","username":"phi16","description":"inverse of z |-> (az+b) / (cz+d)\n","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["2d","math"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-iResolution.xy/2.) / iResolution.y;\n    p.y += 0.45;\n    \n    float a = cos(iTime);\n    float b = sin(iTime);\n    float c = -sin(iTime);\n    float d = cos(iTime); // SL(2,R)\n    \n    float nx = p.x * a + b;\n    float ny = p.y * a;\n    float dx = p.x * c + d;\n    float dy = p.y * c;\n    float deno = dx*dx + dy*dy;\n    float numex = nx * dx + ny * dy;\n    float numey = ny * dx - nx * dy;\n    p = vec2(numex, numey) / deno;\n    \n    float arg = atan(p.y,p.x);\n    float len = length(p);\n    vec3 hue = cos(vec3(0,1,-1)*2./3.*3.141592 + arg) * 0.5 + 0.5;\n    float lum = 1.;\n    lum *= pow(-cos(len * 30.) * 0.5 + 0.5, 0.1);\n    lum *= pow(-cos(p.x * 30.) * 0.5 + 0.502, 0.03);\n    lum *= pow(-cos(p.y * 30.) * 0.5 + 0.502, 0.03);\n    vec3 col = hue * lum; \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}