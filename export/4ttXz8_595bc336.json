{"ver":"0.1","info":{"id":"4ttXz8","date":"1478122927","viewed":297,"name":"Kali 2D Tree","username":"lejeunerenard","description":"Implementing a 2D Kaliset to better understand Kalisets.","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","ifs","kali"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n#define R iResolution\n\n#define IT 128\n\n#define c vec2(-.25, -0.5)\n\n#define r 0.45\n#define s 1.3\n\nvec2 formula (in vec2 p) {\n    float m = dot(p, p);\n    if (m < r) {\n        p = abs(p) / (m*m);\n    } else {\n        p = abs(p) / m * s;\n    }\n    return p + c;\n}\n\nfloat map(in vec2 p) {\n    for (int i = 0; i < IT; i++) {\n        p = formula(p);\n    }\n    return length(p);\n}\n\n\nvec4 shade (float t) {\n    const vec3 a = vec3(.5);\n    const vec3 b = vec3(.5);\n    const vec3 cc = vec3(1.);\n    const vec3 d = vec3(0., 0.1, 0.2);\n\n    vec3 color = a + b * cos( 2.*PI * (cc * t + d));\n    return vec4(color, 1.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (2. * fragCoord - R.xy) / R.y; //via @coyote\n    \n    float t = map(uv);\n    fragColor = shade(t);\n}","name":"Image","description":"","type":"image"}]}