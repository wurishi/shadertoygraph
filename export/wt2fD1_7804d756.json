{"ver":"0.1","info":{"id":"wt2fD1","date":"1598888305","viewed":290,"name":"shell parameterization inversion","username":"FabriceNeyret2","description":"good points:  works in 3D, conformal (preserve angles).\nbad points:    no canonical axis parallel to the shell. don't preserve lengths (but don't dream too much ;-) )","likes":8,"published":3,"flags":0,"usePreview":0,"tags":["mapping","conformal","inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, in vec2 u )\n{\n   \n    vec2 R = iResolution.xy,\n         U = ( 2.* u - R ) / R.y, V;\n       \n\n    float l = length(U);\n    //U /= .5+.04*length(U);\n    \n    U *= .2/dot(U,U); // inversion\n // U = (U-.7) * mat2( cos( .1*iTime + vec4(0,11,33,0) ) ) + .7; // rotation\n // U.x /= 4.;        // stretch in one canonical direction\n\n    vec4 T = 1.5* texture(iChannel0,(.5+.5*U.yx)*8.); // mapped texture\n\n    U *= 16.;         // --- draw parttern\n    V = fract(U)*2.-1.;\n    float // v = length(V)-.5;              // draw dots pattern\n             v = min(abs(V.x),abs(V.y));    // draw grid pattern\n    O = vec4(smoothstep(2.,0.,abs(v)/fwidth(length(U))) ,0,0,0);\n    \n\n // O = mix(O,T,.7);\n    O += T;\n    \n    O *= smoothstep(.4,0.,abs(l-.7));       // show only in torus\n}","name":"Image","description":"","type":"image"}]}