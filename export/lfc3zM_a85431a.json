{"ver":"0.1","info":{"id":"lfc3zM","date":"1711487568","viewed":65,"name":"Generative Jackson Pollock Ex.","username":"billrockx","description":"The Book of Shader exercise cap. 11\nMake a generative Jackson Pollock.\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["tbos"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265358\n\nvec2 random2(vec2 st){\n    st = vec2( dot(st,vec2(127.1,311.7)),\n              dot(st,vec2(269.5,183.3)) );\n    return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}\n\n// Gradient Noise by Inigo Quilez - iq/2013\n// https://www.shadertoy.com/view/XdXGW8\nfloat noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    vec2 u = f*f*(3.0-2.0*f);\n\n    return mix( mix( dot( random2(i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ),\n                     dot( random2(i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\n                mix( dot( random2(i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ),\n                     dot( random2(i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\n}\n\nmat2 rotate2d(float angle){\n    return mat2(cos(angle),-sin(angle),\n                sin(angle),cos(angle));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 st = fragCoord.xy/iResolution.y;\n    vec3 color = vec3(0.0);\n    float t = 1.0;\n    vec2 pos = vec2(0.0);\n    vec2 uv = st;\n\n    // Uncomment to animate\n    //t = abs(1.0-sin(iTime*.1))*5.;\n    uv += noise(uv*2.)*t;\n    color += smoothstep(.05,.5, noise(uv*15.));\n    uv = rotate2d(PI/2.0) * uv;\n    color += smoothstep(.1,.6, noise(uv*10.));\n    uv = rotate2d(PI/5.0) * uv;\n    color += smoothstep(.1,.8, noise(uv*15.));\n\n    color = smoothstep(0.0, 0.5, color);\n\n    uv = st;\n    uv += noise(uv*3.) * t;\n    uv = rotate2d(PI/2.0) * uv;\n    color += smoothstep(.05,.7, noise(uv*30.));\n    uv = rotate2d(PI/5.0) * uv;\n    color += smoothstep(.1,.95, noise(uv*30.));\n\n    uv = st;\n    uv += noise(st*4.) * t;\n    uv = rotate2d(PI/2.0) * uv;\n    color += smoothstep(.05,.7, noise(uv*30.));\n    uv = rotate2d(PI/5.0) * uv;\n    color += smoothstep(.1,.65, noise(uv*50.));\n    \n    fragColor = vec4(1.-color,1.0);\n}","name":"Image","description":"","type":"image"}]}