{"ver":"0.1","info":{"id":"slGyWR","date":"1675463668","viewed":223,"name":"PHBV#6 Wrenn & Oak","username":"Yusef28","description":"pathtracer 26 based on one by shane","likes":12,"published":1,"flags":0,"usePreview":0,"tags":["pathtracer"],"hasliked":0,"parentid":"flGcDz","parentname":"PHBV#5 Rainy Day Cozy"},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n\nSomething Cozy in 50 Min\nListening to:\nRainy Day at Cozy Coffee Shop â˜• Relaxing Jazz Instrumental Music For Relax, Study, Work\nhttps://www.youtube.com/watch?v=Np_S-GAJbSM\n\n26min to start image, with one major mistake:\nI didn't add uv to the seed in sample forloop!\n33min outline of boxes!\n\n\n*/\n\nfloat height;\nfloat hit;\nvec2 seed = vec2(0.42,0.52);\nvec3 normal;\n\nvec2 hash22(){\n    seed++;\n    seed += fract(45.51*sin(92.52*\n                    vec2(14.16,36.43)*seed));\n    float d1 = dot(seed,vec2(42.45,24.62));\n    float d2 = dot(seed, vec2(31.52,22.73));\n    return fract(vec2(d1,d2)+vec2(13.25,53.25)*5.62);\n    }\n\nvec3 cosDir(vec3 n){\n\n    vec2 xy = hash22();\n    float th = xy.x*acos(-1.)*2.;\n    float sinP = xy.y*2.-1.;\n    float cosP = sqrt(1.-sinP*sinP);\n    vec3 b = vec3(cosP*vec2(cos(th),sin(th)),sinP);\n    return normalize(b+n);\n}\n\nvec3 getCell(vec3 p){\n    return ceil(p)-0.5;\n}\nfloat getHeight(vec2 uv){\n    return -texture(iChannel0,uv*0.01).x*9.;\n}\nvec2 getUV(vec3 p, vec3 n){\n    p.y = abs(p.y-height);\n    n = abs(n);\n    p.xz =fract(p.xz);\n    \n    return n.x*p.zy + n.y*p.xz + n.z*p.xy;\n}\nfloat mint(vec3 ro, vec3 rd){\n    vec3 t = (fract(-ro*sign(rd))+1e-4)/abs(rd);\n    normal = t.x<t.z ? vec3(1.,0.,0.)*-sign(rd.x) \n            : vec3(0.,0.,1.)*-sign(rd.z);\n    return min(t.x,t.z);//watch out!!\n}\n\nvec3 cst(vec3 ro, vec3 rd){\n    float tx = 1e8,ty = 1e8;\n    for(float i = 0.; i < 40.; i++){\n        height = getHeight(getCell(ro).xz);\n        if(height>ro.y){return ro;}\n        tx = mint(ro,rd);\n        ty = (height-ro.y)/rd.y;\n        if(ty<tx && ty > 0.){\n            normal = vec3(0.,1.,0.);\n            return ro + rd*ty;\n        }\n        ro += rd*tx;\n    }\n    hit = 0.;\n    return ro;\n}\n\n#define S smoothstep\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*0.5)/iResolution.y;\n    vec3 col = vec3(0.);\n    vec3 ro = vec3(0.,1.,0.);\n    float sNum = 8., \n    bNum = 3.;\n    vec3 fir = vec3(1e8);\n    for(float i = 0.; i < sNum; i++){\n        seed += uv + fract(sin(vec2(iTime/123.51,\n                    iTime/152.74)*3.52));\n        vec2 jit = hash22()-0.5;\n        vec3 rd = normalize(vec3(uv+jit/iResolution.y,1.));\n        rd.yz *= mat2(cos(-0.6 + vec4(0,11,33,0))); \n        rd.xz *= mat2(cos(iTime*0.1 + vec4(0,11,33,0)));\n        vec3 A = vec3(0.),\n        B = vec3(1.);\n        vec3 p = ro;\n        for(float j = 0.; j < bNum; j++){\n            hit = 1.;\n            \n            vec3 p1 = cst(p,rd);\n            if(fir.z > 1e7){\n                fir = p1;\n            }\n            vec3 cell = getCell(p1);\n            vec3 C = 0.5+0.5*normal;\n            float sid = fract(sin(cell.x*cell.z*141.23)*34.23);\n            \n            float id = step(0.85,sid);\n            vec3 E = vec3(id,id,sid)*id;\n            E = clamp(E,0.,1.);\n            vec2 uv = getUV(p1,normal);\n            float o = 0.;\n            o = mix(o,1.,S(0.45,0.46,abs(uv.x-0.5)));\n            \n            if(normal.y < 0.5){\n                o = mix(o,1.,S(0.05,0.,uv.y));\n            }\n            else{\n                o = mix(o,1.,S(0.45,0.46,abs(uv.y-0.5)));\n            }\n            \n            C = texture(iChannel1,uv).rgb;\n            C += (0.4+0.4*cos(vec3(0,2,4)+cell.z*cell.x*8.))*0.1;\n            C = mix(C,C*0.5,o);\n      \n            if(p1.y > 0.){\n                normal.y *= -1.;\n                E = vec3(0.2);\n            }\n            A += B*E;\n            B *= C;\n            \n            rd = mix(reflect(rd,normal),cosDir(normal),0.4);\n            p = p1+rd*0.1;\n            \n            if(hit<0.5){break;}\n        }\n        col += A;\n    }\n    \n    col /= sNum;\n    col = pow(col,vec3(0.545));\n    //col *= 0.9;\n    // Output to screen\n    float fog = smoothstep(1.,0.,pow((length(ro-fir))/28.,10.));\n    col = mix(col, vec3(0.07,0.05,0.01),1.-fog);\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}