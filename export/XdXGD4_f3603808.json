{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"uniform sampler2D Texture0;\n\nuniform float Time;\n\nuniform vec2 Mcoord;\nuniform vec2 Vcoord;\n\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 mod289(vec3 x) {\n     return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n{\n      const vec4 C = vec4(0.211324865405187,0.366025403784439,-0.577350269189626,0.024390243902439);\n      vec2 i  = floor(v + dot(v, C.yy) );\n      vec2 x0 = v -   i + dot(i, C.xx);\n      \n      vec2 i1;\n      i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n      vec4 x12 = x0.xyxy + C.xxzz;\n      x12.xy -= i1;\n      \n      i = mod289(i); // Avoid truncation effects in permutation\n      vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n         + i.x + vec3(0.0, i1.x, 1.0 ));\n      \n      vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n      m = m*m ;\n      m = m*m ;\n      \n      vec3 x = 2.0 * fract(p * C.www) - 1.0;\n      vec3 h = abs(x) - 0.5;\n      vec3 ox = floor(x + 0.5);\n      vec3 a0 = x - ox;\n      \n      m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n      \n      vec3 g;\n      g.x  = a0.x  * x0.x  + h.x  * x0.y;\n      g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n\n      return 130.0 * dot(m, g);      \n}\n\nfloat fbm(vec2 p) {\n    float f = 0.0;\n    float w = 0.5;\n    for (int i = 0; i < 5; i ++) {\n            f += w * snoise(p);\n            p *= 2.;\n            w *= 0.5;\n    }\n    return f;\n}\n\n\nvec4 tunneliter(vec2 texCoord,vec4 incol,float cx,float cy,float limita,float limitb,vec4 coloz,float tadd)\n{\n    vec2 texc;\n    vec2 tex;\n    vec4 outCol;\n    float disty;\n    \n    texc=(texCoord-vec2(cx,cy));\n    disty=distance(texc,vec2(0.0,0.0));\n    tex.x=(abs(atan(texc.x,texc.y)))/6.2830;\n    tex.y=0.5/disty;  \n    tex.y+=(iTime*0.9)+tadd;\n\n    float fbmval=abs(fbm(tex)); \n\n\tfloat bex=mix(fbmval,1.0,smoothstep(limitb,limita,disty))*smoothstep(limitb,limita,disty);\n    outCol=mix(incol,coloz*(1.0-fbmval),bex);\n            \n    return outCol;\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n\n    vec4 finalCol;\n    \n    float xa=(sin(iTime)*0.4)+(sin((iTime*1.3)+0.5)*0.24);\n    float ya=(cos(iTime)*0.45)+(cos((iTime*0.6)-0.7)*0.3);\n\n    finalCol=vec4(1.0,0.0,1.0,1.0);\n\n    finalCol=tunneliter(uv,vec4(1.0,1.0,1.0,1.0),0.5+(xa*0.80),0.5+(ya*0.80),0.04,0.01,vec4(0.9,0.9,1.0,1.0),3.1);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.90),0.5+(ya*0.70),0.08,0.03,vec4(0.7,0.7,0.8,1.0),7.2);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.70),0.5+(ya*0.70),0.14,0.05,vec4(0.6,0.6,0.7,1.0),9.3);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.58),0.5+(ya*0.58),0.18,0.10,vec4(0.5,0.5,0.6,1.0),4.4);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.35),0.5+(ya*0.35),0.24,0.15,vec4(0.4,0.4,0.5,1.0),2.5);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.22),0.5+(ya*0.22),0.30,0.20,vec4(0.4,0.4,0.5,1.0),9.6);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.15),0.5+(ya*0.15),0.40,0.25,vec4(0.3,0.3,0.4,1.0),6.7);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.12),0.5+(ya*0.12),0.50,0.35,vec4(0.3,0.3,0.4,1.0),3.8);    \n    finalCol=tunneliter(uv,finalCol,0.5+(xa*0.10),0.5+(ya*0.10),0.60,0.40,vec4(0.3,0.3,0.4,1.0),7.9);\n\n    fragColor = vec4(vec3(finalCol.xyz),1.0);\n\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"XdXGD4","date":"1369598657","viewed":1181,"name":"Tunnel Me Softly","username":"HeGu","description":"This shader makes a pseudo 3d tunnel using layered fbms.","likes":22,"published":1,"flags":0,"usePreview":0,"tags":["2d","tunnel","fbm"],"hasliked":0,"parentid":"","parentname":""}}