{"ver":"0.1","info":{"id":"lsycDG","date":"1523118896","viewed":8921,"name":"Doodling #7: Speed","username":"lsdlive","description":"Doodling session for live-coding or sketching new ideas.\nThanks to iq, mercury, lj, shane, shau, aiekick, balkhan & all shadertoyers.\nGreets to all the shader showdown paris gang.\n\nMusic by CoLD SToRaGE for the game wipEout.","likes":68,"published":1,"flags":64,"usePreview":1,"tags":["tunnel","raymarch","speed","doodling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4s2XWw","filepath":"https://soundcloud.com/brandon-mark-8/cold-storage-slipstream-volume-one-03-cairodrome?in=user-881335089/sets/wipeout-cold-storage","previewfilepath":"https://soundcloud.com/brandon-mark-8/cold-storage-slipstream-volume-one-03-cairodrome?in=user-881335089/sets/wipeout-cold-storage","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// @lsdlive\n\n// Doodling session for live-coding or sketching new ideas.\n// Thanks to iq, mercury, lj, shane, shau, aiekick, balkhan\n// & all shadertoyers.\n// Greets to all the shader showdown paris gang.\n\n\nmat2 r2d(float a) {\n\tfloat c = cos(a), s = sin(a);\n\treturn mat2(c, s, -s, c);\n}\n\nvoid amod(inout vec2 p, float m) {\n\tfloat a = mod(atan(p.x, p.y) - m*.5, m) - m*.5;\n\tp = vec2(cos(a), sin(a)) * length(p);\n}\n\nfloat rep(float p, float m) {\n\treturn mod(p - m*.5, m) - m*.5;\n}\n\nvec3 rep(vec3 p, float m) {\n\treturn mod(p - m*.5, m) - m*.5;\n}\n\nfloat cmin(float a, float b, float k) {\n\treturn min(min(a, b), (a - k + b) * sqrt(.5));\n}\n\nfloat stmin(float a, float b, float k, float n) {\n\tfloat s = k / n;\n\tfloat u = b - k;\n\treturn min(min(a, b), .5 * (u + a + abs((mod(u - a + s, 2. * s)) - s)));\n}\n\nfloat length8(vec2 p) {\n\tvec2 q = p*p*p*p*p*p*p*p;\n\treturn pow(q.x + q.y, 1. / 8.);\n}\n\nfloat torus82(vec3 p, vec2 d) {\n\tvec2 q = vec2(length(p.xz) - d.x, p.y);\n\treturn length8(q) - d.y;\n}\n\nfloat path(float t) {\n\treturn cos(t*.1)*2.;\n}\n\nfloat g = 0.;\nfloat de(vec3 p) {\n\n\tp.x -= path(p.z);\n    \n    vec3 q = p;\n    q.x += sin(q.z*.2)*4.;\n    q.y += cos(q.z*.3)*4.;\n    q += iTime*2.;\n    q.yz += sin(iTime*.2)*4.;\n    q = rep(q, 1.);\n    float s1 = length(q) - .01 + sin(iTime*30.)*.004;\n\n\tp.z = rep(p.z, 3.);\n\n\tfloat d = torus82(p.xzy, vec2(1., .1));\n\tfloat pl = p.y + 2.4 + p.y*texture(iChannel1, p.xz*.1).r*1.;\n    float pl2 = p.y + .7;\n\td = min(d, pl-d*.9);\n    d = cmin(d, pl2, .1);\n\n\tamod(p.xy, 6.28 / 3.);\n\tp.x = abs(p.x) - 1.;\n\tfloat cyl = length(p.xy) - .05;\n\td = stmin(d, cyl, .1, 4.);\n   \n    d = min(d, s1);\n\n\tg += .015 / (.01 + d*d);\n\treturn d;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = (fragCoord - .5*iResolution.xy) / iResolution.y;\n\n\tfloat dt = iTime * 8.3;\n\n\tvec3 ro = vec3(0, 0, -3. + dt);\n\tvec3 ta = vec3(0, 0, dt);\n\tro.x += path(ro.z);\n\tta.x += path(ta.z);\n\n\tvec3 fwd = normalize(ta - ro);\n\tvec3 left = cross(vec3(0, 1, 0), fwd);\n\tvec3 up = cross(fwd, left);\n\tvec3 rd = normalize(fwd + uv.x*left + uv.y*up);\n\n\trd.xy *= r2d(sin(-ro.x / 3.14)*.4);\n\n\tvec3 p;\n\tfloat t = 0., ri;\n\tfor (float i = 0.; i < 1.; i += .01) {\n\t\tri = i;\n\t\tp = ro + rd*t;\n\t\tfloat d = de(p);\n\t\tif (d < .001) break;\n\t\tt += d*.3;\n\t}\n\n\tvec3 bg = vec3(.2, .1, .2);\n\tvec3 col = bg;\n\tcol = mix(vec3(.4, .52, .6)*1.5, bg,  uv.x*uv.y*uv.y+ri);\n    col += g*.01;\n    col.b += sin(p.z*.1)*.1;\n\tcol = mix(col, bg, 1. - exp(-.01*t*t));\n    \n\tfragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}