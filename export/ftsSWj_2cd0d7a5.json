{"ver":"0.1","info":{"id":"ftsSWj","date":"1626732267","viewed":37,"name":"phllpbll189/WHATISGOINGON","username":"phllpbll189","description":"lots of half done circles... kinda looks cool though","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["checkerboard"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Effect #0\nvec4 staticColor(in vec2 fragCoord, in vec2 resolution)\n{\n    //returning a static vec4 with the\n    //values to create a color\n    vec2 uv = fragCoord/resolution;\n    return vec4(uv, 0.0, 1.0);\n}\n\n\n//Effect #1\nvec4 checkerBoard(in vec2 fragCoord, in vec2 resolution)\n{ \n    vec2 uv = fragCoord/resolution; //get the coord nums to 0.0 - 1.0\n    vec2 remain = mod(uv, 0.3);     //get the remainder of uv/2\n\n    if((remain.x > 0.15 && remain.y > 0.15) || (remain.x < 0.15 && remain.y < 0.15)){ //need to find a way to compare a vec2\n    return vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    else\n    {\n    return vec4(0.5, 0.0, 1.0, 1.0);\n    }\n}\n\n\n//Effect #2\nvec4 Circle(in vec2 fragCoord, in vec2 resolution, in vec2 diff, in float radius, in float len)\n{\n    float newRad =  .3 + .1 * radius;\n    float calcRad =  newRad * newRad;\n\n    //if within circle\n    if(len <= calcRad)\n    {\n        float iG = (radius + len/calcRad);\n        float iB =1.0 - (radius + len/calcRad );\n        return vec4(0.0, iG, iB, 1.0);\n    }\n    else //not in circle (red)\n    {\n        return vec4(1.0, 0.0, 0.0, 1.0);\n    }\n}\n\n\n//Effect #3\nvec4 waduhek(in vec2 fragCoord, in vec2 resolution, in float psych, in float overtime)\n{ \n    //kinda just messed around with time a sin functions\n    //i was getting the wierd circles until i reset my picture\n    //i realized that it was due to the time being absurdly high\n    float iG = overtime * .5;\n    float iB = 0.5 - psych;\n    float iR = 1.0 - overtime * .5;\n    return vec4(iR, iG, iB, 0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //some setup needed to prevent calling uniform in functions\n    //and to hopefully prevent rewriting lots of code.\n    vec2 uv = fragCoord/iResolution.yy;\n    vec2 center = vec2(0.5, 0.5);\n    \n    //everchanging radius\n    float radius = cos(iTime * .4); \n    \n    //distance between two points math setup\n    vec2 diff = uv - center;\n    float len = dot(diff, diff);\n    \n    //two different radius squared for different funcs one just has a bigger radius\n    float calcRadWadu = (radius + 3.5) * (radius + 3.5);\n    \n    //fragColor = staticColor(fragCoord, iResolution.xy);\n    //fragColor = checkerBoard(fragCoord, iResolution.yy);\n    //fragColor = Circle(fragCoord, iResolution.yy, diff, radius, len);\n    fragColor = waduhek(fragCoord, iResolution.yy, cos(len/calcRadWadu * (iTime + 100000.0)), radius);\n}","name":"Image","description":"","type":"image"}]}