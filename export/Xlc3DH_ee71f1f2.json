{"ver":"0.1","info":{"id":"Xlc3DH","date":"1468967337","viewed":344,"name":"Koalaa ","username":"sben","description":"Little koala drawn by a popcorn fractal.","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d","fractal","abstract","art","dust","popcorn"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Created by sofiane benchaa - sben/2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n#define TONE vec3(0.95,0.62,0.33)\n/*\n* Clifford Pickover's fractal popcorn :\n* http://paulbourke.net/fractals/popcorn\n*\txn+1 = xn - h sin(yn + tan(3 yn))\n*\tyn+1 = yn - h sin(xn + tan(3 xn))\n*\n* My version :\n*\txn+1 = (xn - h sin(yn   + tan(2.4 yn)))*cos(yn)\n*\tyn+1 =  yn - h sin(xn+1 + tan(3 xn+1))\n*/\nvoid popcorn(inout vec2 position,inout vec3 color, float param){\n\tfloat h = param;\n\tconst int N = 50;\n\t\n\tfor(int i=0; i<N; i++){\t\n\t\tposition.x=(position.x-h*sin(position.y+tan(2.4*position.y)))*cos(position.y);\t\n\t\tposition.y=position.y-h*sin(position.x+tan(3.*position.x));\n\t}\n\t\n\t//colorization\n\tcolor/=(length(position.xyxx))*cos(position.yxx)*cos(position.xyy)-TONE/5.;\n} \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 position = fragCoord.xy / iResolution.xy-0.5;\n\t\n    vec3 color = vec3(0.15);\n\tposition=position*vec2(2.3,1.2);\n\t//symetry\n\tposition.x=1.-abs(position.x);\n\n\t//two iterations\n\tpopcorn(position,color,0.05);\n\tposition*=0.5*position;\n\tpopcorn(position,color,0.05); \n\n\tfragColor = vec4(color,1.);\n\n}","name":"Image","description":"","type":"image"}]}