{"ver":"0.1","info":{"id":"sdXcW7","date":"1642180769","viewed":227,"name":"Basic Metronome","username":"kbx","description":"Sine wave gets more distorted over time due to shadertoy time precision.\nI've never wrote shaders before, but i think i did a pretty good job on this :)\nFeel free to copy the BPM algo for your own purposes, just give credit\nspecial thanks to 0v5vr \n\n","likes":1,"published":3,"flags":8,"usePreview":0,"tags":["music","gpusound","metronome"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//circle code borrowed from https://www.shadertoy.com/view/XsjGDt\n\nvec3 rgb(float r, float g, float b) {\nreturn vec3(r / 255.0, g / 255.0, b / 255.0);\n}\n\n\nvec4 circle(vec2 uv, vec2 pos, float rad, vec3 color) {\nfloat d = length(pos - uv) - rad;\nfloat t = clamp(d, 0.0, 1.0);\nreturn vec4(color, 1.0 - t);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    calculateBPM(iTime);\n   \n    vec2 uv = fragCoord.xy;\n    vec2 center = iResolution.xy * 0.5;\n    float radius = ( 0.3 - smoothstep(lb, lb+(tbb), iTime) / 10.) * iResolution.y;\n\n    vec4 layer1 = vec4(rgb(0., 0., 0.), 1.0);\n    vec3 color = rgb(255.0, 255.0, 255.0);\n    vec4 layer2 = circle(uv, center, radius, color);\n    fragColor = mix(layer1, layer2, layer2.a);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"\n\nvec2 mainSound( int samp, float time )\n{\n    \n    calculateBPM(time);\n\n    //metronome\n    \n    if(cb == 0){\n    return vec2( (sin((6.2831*2000.0)*time) / 10.) * exp(-10.*(time - lb)) );\n    }else{\n    return vec2( (sin((6.2831*1000.0)*time) / 10.) * exp(-10.*(time - lb)) );\n    }\n}","name":"Sound","description":"","type":"sound"},{"inputs":[],"outputs":[],"code":"// by kbx\n//\n// https://www.shadertoy.com/view/sdXcW7\n\n#define BPM 200.\n\n\nfloat tbb = 1./(BPM/60.); // time between each beat\nfloat lb;                 // time on last beat\nfloat lba;                // time on last bar\nint cbf = 1;              // total beats\nint cb;                   // current beat\nint bp = 1;               // total bars\n\n\nvoid calculateBPM(float time){\n    cbf = int(time / tbb);\n    if(cbf >= 2){\n        if( cbf % 4 == 0){\n             bp = cbf/4;\n             cb = cbf-(bp*4);   \n        }else{\n              cb = cbf-(bp*4);\n            }\n    }else{\n        cb = cbf;\n    }\n    \n    lb = (float(cbf) * tbb);\n    lba = lb - (float(cb) * tbb);\n}","name":"Common","description":"","type":"common"}]}