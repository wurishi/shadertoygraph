{"ver":"0.1","info":{"id":"3sdfWB","date":"1605902167","viewed":399,"name":"Sharpening Filter","username":"Tech_","description":"Here's a simple sharpening shader! You can all use it in your commercial projects aswell! Enjoy!","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["processing","sharpening"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define OFFSET_STRENGTH 0.8\n#define SHARPENING_AMOUNT 7.0\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    \n    float offsetStrength = .5;\n    float effectStrength = 12.0;\n    \n    vec3 blur = col;\n    blur += texture(iChannel0, uv + vec2(0.0, 0.001 * OFFSET_STRENGTH)).rgb;\n    blur += texture(iChannel0, uv + vec2(0.001 * OFFSET_STRENGTH, 0.0)).rgb;\n    blur += texture(iChannel0, uv - vec2(0.0, 0.001 * OFFSET_STRENGTH)).rgb;\n    blur += texture(iChannel0, uv - vec2(0.001 * OFFSET_STRENGTH, 0.0)).rgb;\n    \n    blur += texture(iChannel0, uv + vec2(0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    blur += texture(iChannel0, uv - vec2(0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    blur += texture(iChannel0, uv + vec2(0.001 * OFFSET_STRENGTH, -0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    blur += texture(iChannel0, uv + vec2(-0.001 * OFFSET_STRENGTH, 0.001 * OFFSET_STRENGTH)).rgb / 2.0;\n    \n    blur /= 7.0;\n    \n    float sharpness = (col - blur).r * SHARPENING_AMOUNT;\n    \n    // col = vec3(0);\n    col -= step(distance(fract(uv.x + (sin(iTime) + 1.0) / 2.0) + 0.5, 0.5) * 2.0, 0.013);\n    \n    \n    if(floor(uv.x + ((sin(iTime) + 1.0) / 2.0)) > 0.0) \n    {\n    \tcol += sharpness;\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}