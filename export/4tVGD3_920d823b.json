{"ver":"0.1","info":{"id":"4tVGD3","date":"1477171387","viewed":111,"name":"nyancat","username":"jcolicchio","description":"cat","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["cat"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"nearest","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// so we have some ideas\n// for starters, we believe that for any convex shape, that is completely flat or has no \"inner\" surfaces such that it might cast a shadow on itself\n// we think that if we're using euclidean geometry (no distortions, no twists, etc) and have a \"pure\" geometry context\n// that if the distance ever increases, this object will never intersect with the ray\n// so we should ignore it?\n\n// is this worth including?\n// if the distance between a ray and and a plane, for example, ever increases, we know it'll never intersect\n// so if the only thing keeping us slowing down is a plane we'll never hit, we can reach infinity\n\n\n\nvec4 sampleCat(vec2 pos, int frame) {\n    vec2 size = vec2(1.0/6.40,1.0);\n    vec2 off = size-vec2(0,1);\n    \n    // if the position we supply, prior to adjusting, isn't within 0 and 1, return 0\n    if(pos.x < 0.0 || pos.x > 1.0 || pos.y < 0.0 || pos.y > 1.0) {\n        return vec4(0);\n    }\n    \n    return texture(iChannel0, pos*size+off*float(frame));\n}\n\nvec2 getUV(vec2 uv, int frame) {\n    vec2 result = uv;\n    for(int i=0;i<10;i++) {\n        vec4 tex = sampleCat(result, frame);\n        if(result.x > 0.5 || tex.a == 1.0) {\n            \n            if(tex.a == 1.0) {\n                vec2 r2 = result;\n                bool foundNonZero = false;\n                for(int j=0;j<10;j++) {\n                    if(i+j >= 10) {\n                        break;\n                    }\n                    r2 = vec2(r2.x*2.0,mod(r2.y*2.0,1.0));\n                    tex = sampleCat(r2, frame);\n                    if(tex.a != 0.0) {\n                        foundNonZero = true;\n                        break;\n                    }\n                }\n                if(!foundNonZero) {\n                    return result;\n                }\n            } else {\n            \treturn result;\n            }\n        }\n        result.x = result.x*2.0;\n        result.y = mod(result.y*2.0,1.0);\n    }\n    \n    return result;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    \n    \n    int frame = int(mod((iTime*8.0),6.0));\n    \n    vec2 newUV = getUV(uv*(1.0/pow(2.0,mod(iTime,1.0)+1.0)), frame);\n    fragColor = sampleCat(newUV, frame);\n    \n    if(fragColor.w == 0.0) {\n\t\tfragColor = vec4(uv,0.5+0.5*sin(iTime),1.0);\n    }\n}","name":"Image","description":"","type":"image"}]}