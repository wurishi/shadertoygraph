{"ver":"0.1","info":{"id":"wsXBz4","date":"1587764396","viewed":410,"name":"Orderly fashion #2","username":"Plento","description":"Now they form letters! (kind of) As suggested by Fabrice.","likes":17,"published":3,"flags":32,"usePreview":0,"tags":["2d","mouse","text","buffer","particle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Orderly fashion\" by Plento. https://shadertoy.com/view/3slBR8\n// 2020-04-24 19:35:48\n\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    f = vec4(0);\n    for(int i = 0; i < int(mem); i++){\n        float d = length(u - ch(iChannel0, vec2(i,0.)).xy);\n        f += rad/(d*d);\n    }\n   // f = 1. - exp(-f);\n    //f = mix(f, ch(iChannel1, u), 0.5);\n}\n\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"vec2 R;\n\nvec2 grad(vec2 p){\n    float bB = ch(iChannel1, p).w;\n    float sgdx = bB - ch(iChannel1,p - vec2(1.,0.0)).w;\n    float sgdy = bB - ch(iChannel1,p - vec2(0.0,1.)).w;\n    float theta = atan(sgdy, sgdx);\n    return vec2(cos(theta), sin(theta));\n}\n\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    ivec2 iu = ivec2(u);\n    vec2 uv = u / R;\n    \n    if(iu.x <= int(mem) && iu.y == 0){\n        vec4 bA = ch(iChannel0, u); \n        \n        vec2 gDir = grad(bA.xy);\n        \n        bA.x -= gDir.x * 4.;\n        bA.y -= gDir.y * 4.;\n        \n        for(int i = 0; i < int(mem); i++){\n            if( i != iu.x){\n                vec2 subj = ch(iChannel0, vec2(i,0.)).xy;\n     \t\t\tfloat r = max(length(bA.xy - subj), 10.0);\t   \n        \t\t\n                vec2 dir = normalize(bA.xy - subj);\n        \t\tfloat grav = -(g*2.) / (r*r);\n                \n                bA.x -= grav*dir.x*dt;\n                bA.y -= grav*dir.y*dt;\n            }\n    \t}\n        \n        bA.x = clamp(bA.x, R.x*0.15, R.x-R.x*0.15);\n        bA.y = clamp(bA.y, 10., R.y-R.y*.15);\n        \n    \tif(iFrame == 0){\n            if(u.x <= mem && iu.y == 0 ){\n                bA.xy = hash22(u)*R.xy*0.5 + R.xy*0.25;\n                bA.zw = vec2(0.);\n                f = vec4(0);\n            }\n    \t}\n        \n        f = bA;\n    }\n    else return;\n   \n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define ch(chan, p) texelFetch(chan, ivec2(p), 0)\n#define mem iResolution.x/4.\n\nfloat dt = 0.12;\nfloat g = 640.;\n\nfloat rad = 30.; // particle screen size\n\nvec2 hash22(vec2 p){\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yzx+33.33);\n    return fract((p3.xx+p3.yz)*p3.zy);\n}\n\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"4dXGzr","filepath":"/media/a/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","previewfilepath":"/media/ap/08b42b43ae9d3c0605da11d0eac86618ea888e62cdd9518ee8b9097488b31560.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"vec2 R;\nvoid mainImage( out vec4 f, in vec2 u ){\n    R = iResolution.xy;\n    vec2 uv = (u / R) * 1.;\n    uv+=.15;\n    int l = int(mod(iTime*.5, 26.));\n    int i = int[](l + 65)[int(uv)];      \n    f += texture( iChannel0, fract(uv)*.05 + vec2(i,15-i/16)/16. ).w;\n    \n}","name":"Buffer B","description":"","type":"buffer"}]}