{"ver":"0.1","info":{"id":"wsXGWM","date":"1546537490","viewed":714,"name":"~even spikes on sphere","username":"FabriceNeyret2","description":"Trying to scatter evenly spikes on a sphere (without the meridian concentration near poles).\nBasically, adapt the (integer) number of spikes along each parallel.","likes":21,"published":3,"flags":0,"usePreview":0,"tags":["sphere","sampling","sh","distribution","spikes"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of https://shadertoy.com/view/3sfGD7\n\n#define h 2. // spike height\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n    float t = iTime, v;\n    mat2  R = mat2( sin(t+vec4(0,33,11,0)) );\n    vec3  q = iResolution,\n          D = normalize(vec3(.3*(U+U-q.xy)/q.y, -1)),// ray direction\n          p = 30./q;                             // marching point along ray \n    O-=O;\n    for ( O++; O.x > 0. && t > .01 ; O-=.005 ) {\n        q = p,\n        q.xz *= R, q.yz *= R,                    // rotation\n        t = length(q)-6.;\n        q /= length(q);\n        v = 1.-q.y*q.y;\n        if (t < h) {\n            q.x = atan(q.x,q.z); // q.x = asin(q.x/sqrt(v));\n            q.y = asin(q.y);\n            v = q.y/1.57; v = 8.*sqrt(1.-v*v);  // small circle perimeter, for adaptive hill amount\n#if 0       // some hills are truncated at equator\n            q.x *= v; \n#else       // avoid truncated hills         \n            v = ceil(4.*abs(q.y)/1.57)/4.; v = 8.*sqrt(1.-v*v); // avoid disconts towards poles\n            q.x *= floor(v+.1); // try +.0 or .5 or 1. or floor(.5*v+1.)*2.-1.\n#endif\n            q.y *= 8.;\n            q = sin(q); v = q.x*q.y; v *= abs(v);  // try v *= -v;\n            t += v*h; \n        }\n        p += t/h/4.*D;                             // step forward = dist to obj\n    }\n    O *= vec4(v,-v,.5+.15*sin(30.*v),1);           // coloring scheme\n}\n","name":"Image","description":"","type":"image"}]}