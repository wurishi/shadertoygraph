{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"float length2(vec2 p) { return dot(p, p); }\n\nfloat noise(vec2 p){\n\treturn fract(sin(fract(sin(p.x) * (4313.13311)) + p.y) * 3131.0011);\n}\n\nfloat worley(vec2 p) {\n\tfloat d = 1e30;\n\tfor (int xo = -1; xo <= 1; ++xo)\n\tfor (int yo = -1; yo <= 1; ++yo) {\n\t\tvec2 tp = floor(p) + vec2(xo, yo);\n\t\td = min(d, length2(p - tp - vec2(noise(tp))));\n\t}\n\treturn 3.*exp(-4.*abs(2.*d - 1.));\n}\n\nfloat fworley(vec2 p) {\n\treturn sqrt(sqrt(sqrt(\n\t\tpow(worley(p + iTime), 2.) *\n\t\tworley(p*2. + 1.3 + iTime*.5) *\n\t\tworley(p*4. + 2.3 + iTime*.25) *\n\t\tworley(p*8. + 3.3 + iTime*.125) *\n\t\tworley(p*32. + 4.3 + iTime*.125) *\n\t\tsqrt(worley(p * 64. + 5.3 + iTime * .0625)) *\n\t\tsqrt(sqrt(worley(p * 128. + 7.3))))));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat t = fworley(uv * iResolution.xy / 600.);\n\tt *= exp(-length2(abs(2.*uv - 1.)));\n\tfloat r = length(abs(2.*uv - 1.) * iResolution.xy);\n\tfragColor = vec4(t * vec3(1.8, 1.8*t, .1 + pow(t, 2.-t)), 1.);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lsX3z4","date":"1363645073","viewed":2489,"name":"Cells on Fire","username":"JoshP","description":"A compact little cellular sketch","likes":55,"published":1,"flags":0,"usePreview":0,"tags":["2d","worley"],"hasliked":0,"parentid":"","parentname":""}}