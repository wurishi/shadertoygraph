{"ver":"0.1","info":{"id":"XtKGWR","date":"1474140617","viewed":546,"name":"- Paisaje Nocturno - ","username":"FranciscoGarcia","description":"Usando funciones y figuras basicas.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 p) {\n    return fract(sin(dot(p.yx,vec2(5.982,10.233)))*4.5);\n}\nfloat colina(in vec2 p) {\n    p = p-vec2(-1.0, -0.9);\n    float r = 0.45 + 0.1*cos(atan(p.y,p.x)*10.0);\n    float circ = smoothstep(r,r+0.008,1.3-exp(-p.y));        \n    return circ;\n}\n\nfloat luna(in vec2 p, in float rad,in vec2 pos) {\n\tvec2 len = p-pos;\n    return 1.0-smoothstep(0.4,0.6,dot(len,len)*4.0);\n}\n\nfloat luc(in vec2 p, in float rad,in vec2 pos) {\n\tvec2 dist = (p-pos)-vec2(0.5,-0.38);\n    return 1.0-smoothstep(rad,rad+0.001,dot(dist,dist)*250.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 p = -1.0 + 2.0*uv;\n    p.x *= iResolution.x/iResolution.y; \n    \n    \n    //Colores\n    vec3 c1 = vec3(0.047, 0.066, 0.2);\n    vec3 c2 = vec3(0.06,0.31,0.45);\n    vec3 bl = vec3(1.0);\n    vec3 mt = vec3(0.06,0.1,0.243);\n        \n    vec3 col = vec3(0.0);\n    \n    //Cielo, pradera y luna\n    col += mix(c2,c1,p.y);\n    col += mix(col,bl,luna(p,0.5,vec2(1.0,0.4+0.05*cos(iTime))));\n    col -= mix(col-mt,mt,colina(p));\n    \n    float st =0.0;\n    \t\n    //Luceros\n    for(float i=-20.0;i<15.0;i++){\n        \n    \tst += luc(p,0.01,1.25*vec2(rand(p+i)*i,rand(p+sin(0.000006*iTime))));\n    }\n    \n\tfragColor = vec4(col+st,1.0);\n}","name":"Image","description":"","type":"image"}]}