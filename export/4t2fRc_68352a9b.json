{"ver":"0.1","info":{"id":"4t2fRc","date":"1516814418","viewed":158,"name":"voroxoni spiral","username":"Donald","description":"b&w","likes":7,"published":1,"flags":32,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float hash(in int f){\n    for (int i=0; i<4; i++){\n        f=(f*f+f*59)%999;}\n    return float(f)*0.00628;\n    \n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    float sc=length(fragCoord.xy / iResolution.x-vec2(.5,0.3));\n    float t=iTime*5.*.02;\n    vec2 d=vec2(sin(t),cos(t))*sc*0.01;\n    vec4 p=texture(iChannel0,uv);\n    //fragColor=p;\n    //return;\n \n    vec4 s=texture(iChannel0,uv+d);\n    float sh=max(0.,s.a-p.a);\n    p-=p.a;\n    fragColor=(p+sh)*smoothstep(0.01,0.2,sc);\n    //if (sh){fragColor=p+0.5;}\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"float hash(in int f){\n    for (int i=0; i<4; i++){\n        f=(f*f+f*59)%999;}\n    return float(f)*0.00628;\n    \n}\nfloat perpdist(vec2 p1, vec2 p2, vec2 px){\n vec2 k=p2-p1;\n k=normalize(k);\n return abs(dot(k,px-(p1+p2)*.5));\n    \n}\nvec2 getPoint( in int i){\n    float time=iTime*5.;\n    float a=float(i)+fract(time);//+iTime;//-4.;\n        //float c=float(i)-floor(iTime);\n    int c=i-int(time);\n        //fract(float(c)*1324.242765)*6.28;\n    float b=a*0.02+hash(c);\n    return 0.01*exp(a*0.1-0.2)*vec2(sin(b),cos(b));}\nint getC(in int i){return i-int(5.*iTime);}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.x;\n    uv-=vec2(.5,0.3);\n    float t=distance(uv,vec2(0.));\n    float st=100.;\n    int m=0;\n    int sm=0;\n    for (int i=0; i<55; i++){\n        //float j=float(i)+iTime;\n\n        \n        float d=distance(uv,getPoint(i));\n        if (d<st){\n            if (d<t){\n            st=t;\n         \tt=d;\n            sm=m;\n            m=i;\n            }else{st=d;sm=i;}\n        }\n        //uv+=sin(10.*uv*float(i+1))*0.2;\n        //uv=vec2(0.);\n    }\n    \n    vec2 p1=getPoint(m);\n    vec2 p2=getPoint(sm);\n    float z=perpdist(p1,p2,uv);\n    if(distance(p2,uv)<distance(p1,uv)+0.001){z=0.;}\n    //uv-=(p1+p2)*.5;\n    //p2-=p1;\n    //p2=normalize(p2);\n    //uv/=length(uv);\n    //p2/=length(p2);\n    //float z=dot(uv,p2);\n    //z=distance(p1,uv);\n    //float z=1.+(t-st)*50.;\n    //max(1.-t*20.,0.)+\n    float s=length(uv)*.02;;//,vec2(0.))*.02;\n    \n    float zz=1.-smoothstep(s,2.*s,z);\n    //zz=0.;\n    //if (s>z){zz=1.;}\n    float h=hash(getC(m));\n    //fragColor=vec4(vec3(1.-zz),1.);\n\tfragColor = vec4(vec3(sin(h),sin(h+2.09),sin(h+4.19))*.5+.5,zz);//+vec3(sin(float(m)),cos(float(m)),0),\n    \n}","name":"Buf A","description":"","type":"buffer"}]}