{"ver":"0.1","info":{"id":"mljyzD","date":"1691557208","viewed":76,"name":"clock (zv)","username":"zerovolts","description":"A fragment shader remake of a WebGL clock I built for my website using 2D meshes (https://zerovolts.com/pages/clock/).","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["sdf","clock"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n#define TAU 6.2831853071\n\n// https://iquilezles.org/articles/distfunctions2d/\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\n{\n    vec2 pa = p-a, ba = b-a;\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n    return length( pa - ba*h );\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - .5 * iResolution.xy) * 2. / iResolution.y;\n    float pixelSize = 3. / iResolution.y;\n    float t = iDate.w;\n    \n    vec3 black = vec3(0.17, 0.24, 0.31);\n    vec3 coral = vec3(1.0, 0.42, 0.31);\n    \n    // background\n    vec3 color = vec3(1);\n    \n    // clock border\n    color = mix(\n        color,\n        black,\n        smoothstep(1., 1. - pixelSize, length(uv))\n    );\n    \n    // clock face\n    color = mix(\n        color,\n        vec3(1),\n        smoothstep(.95, .95 - pixelSize, length(uv))\n    );\n    \n    // minute marks\n    // TODO (optimization): space folding instead of iteration\n    for (int i = 0; i < 60; i++) {\n        float angle = (float(i) / 60.) * TAU + (PI / 2.);\n        float width = i % 5 == 0 ? .01 : .005;\n        float start = i % 5 == 0 ? .8 : .85;\n        vec2 point = vec2(-cos(angle), sin(angle));\n        float sdf = sdSegment(uv, point * start, point * .9);\n        \n        color = mix(\n            color,\n            vec3(black),\n            smoothstep(width, width - pixelSize, sdf)\n        );\n    }\n    \n    { // hour hand\n        float angle = (t / (60. * 60. * 12.)) * TAU + (PI / 2.);\n        vec2 point = vec2(-cos(angle), sin(angle));\n        float width = .0125;\n        float sdf = sdSegment(uv, -point * .1, point * .4);\n        \n        color = mix(\n            color,\n            vec3(black),\n            smoothstep(width, width - pixelSize, sdf)\n        );\n    }\n    \n    { // minute hand\n        float angle = (t / (60. * 60.)) * TAU + (PI / 2.);\n        vec2 point = vec2(-cos(angle), sin(angle));\n        float width = .01;\n        float sdf = sdSegment(uv, -point * .1, point * .7);\n        \n        color = mix(\n            color,\n            vec3(black),\n            smoothstep(width, width - pixelSize, sdf)\n        );\n    }\n    \n    { // second hand\n        float angle = (t / 60.) * TAU + (PI / 2.);\n        vec2 point = vec2(-cos(angle), sin(angle));\n        float width = .005;\n        \n        float sdf = sdSegment(uv, -point * .1, point * .9);\n        color = mix(\n            color,\n            vec3(coral),\n            smoothstep(width, width - pixelSize, sdf)\n        );\n        \n        sdf = sdSegment(uv, -point * .2, -point * .1);\n        color = mix(\n            color,\n            vec3(coral),\n            smoothstep(width * 2., width * 2. - pixelSize, sdf)\n        );\n    }\n    \n    // clock hand cap\n    color = mix(\n        color,\n        black,\n        smoothstep(.03, .03 - pixelSize, length(uv))\n    );\n    \n    fragColor = vec4(color, 1);\n}","name":"Image","description":"","type":"image"}]}