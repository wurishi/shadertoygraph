{"ver":"0.1","info":{"id":"dtlGDf","date":"1672605916","viewed":77,"name":"Color banding dither mitigation ","username":"budsan","description":"Color banding dither mitigation ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["bandingdithering"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3zn","filepath":"/media/a/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","previewfilepath":"/media/ap/85a6d68622b36995ccb98a89bbb119edf167c914660e4450d313de049320005c.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"uniform sampler2D bayer8;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    float dither = texture(bayer8, fragCoord.xy / 8.0).x;\n   \n    // add noise to mitigate color banding\n    float raw = distance(vec2(1.0), uv.yx) * 0.70710678;\n    float mit = raw - dither / 64.0;\n    \n    // switch between raw grayscale vs dithered grayscale for comparing\n    float c = mix(mit, raw, floor(cos(iTime) + 1.0));\n    fragColor = vec4(c, c, c, 1.0);\n}","name":"Image","description":"","type":"image"}]}