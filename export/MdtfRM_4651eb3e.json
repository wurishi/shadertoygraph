{"ver":"0.1","info":{"id":"MdtfRM","date":"1524550622","viewed":478,"name":"Basic loading","username":"owen0o0","description":"Basic loading  Graphic ","likes":6,"published":3,"flags":0,"usePreview":0,"tags":["2d","loading"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    // Time varying pixel color\n    vec3 col = .5 + .5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    \n    float size = .3;\n\tuv-=.5;\n    vec3 qq = vec3(1.0); \n    uv.x*=iResolution.x/iResolution.y;\n    vec3 c = col;\n    float q = smoothstep(0.,1.,fract(iTime/1.5));\n    float m = min( length(uv)/size, 1. );\n    if (abs(length(uv)-q*size)<.005) {\n    \tc=mix(qq,col,m);    \n    }\n    q = smoothstep(0.,1.,fract((iTime+0.75)/1.5));\n \n    if (abs(length(uv)-q*size)<.005) {\n    \tc=mix(qq,col,m);    \n    }\n    fragColor = vec4(c,1.);\n}","name":"Image","description":"","type":"image"}]}