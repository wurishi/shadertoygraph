{"ver":"0.1","info":{"id":"XfBBDt","date":"1727436206","viewed":37,"name":"gravitational fluide","username":"Gabivct1","description":"A little shader use SDF","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["gabi1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float pi = 3.14159265;\n\n//https://iquilezles.org/articles/distfunctions2d/\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r ){\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nfloat sdCircle( vec2 p, float r ){\n    return length(p) - r;\n}\n\nfloat smin( float a, float b){\n    float k = 0.05;\n    k *= 1.0/(1.0-sqrt(0.5));\n    float h = max( k-abs(a-b), 0.0 )/k;\n    return min(a,b) - k*0.5*(1.0+h-sqrt(1.0-h*(h-2.0)));\n}\n\nfloat SDF (vec2 p){\n    vec4 r;\n\n    r.x = (cos(iTime           )+1.0)/16.0;\n\n    r.y = (cos(iTime+pi/2.0    )+1.0)/16.0;\n\n    r.z = (cos(iTime+pi*2.0/2.0)+1.0)/16.0;\n\n    r.w = (cos(iTime+pi*3.0/2.0)+1.0)/16.0;\n\n    float sphere1 = sdCircle(p+vec2(sin(iTime*1.125)*0.5,0.0), 0.1);\n    \n    float sphere2 = sdCircle(p+vec2(sin(iTime*1.125)*0.5,cos(iTime*1.125)*0.5), 0.1);\n\n    float box_dst = sdRoundedBox(p, vec2(0.125), r);\n\n    float circle_dst = smin(sphere1,sphere2);\n\n    float dst = smin(box_dst,circle_dst);\n\n    return dst;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    vec2 uv = (fragCoord*2.0-iResolution.xy)/iResolution.y;\n\n    float dst = 0.002/SDF(uv);\n    \n    vec3 col = vec3(dst,abs(dst),-dst);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}