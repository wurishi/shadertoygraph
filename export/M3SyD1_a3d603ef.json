{"ver":"0.1","info":{"id":"M3SyD1","date":"1727198075","viewed":27,"name":"Bloom effect","username":"bogdanmikh","description":"Bloom","likes":0,"published":1,"flags":2,"usePreview":0,"tags":["bloom"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float bloomCount = 30.0;\nfloat bloomBrightness = 3.0;\nfloat bloomThresh = 0.2; // The lower the value the stronger the effect\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\n    vec2 pixelSize = 1.0 / iResolution.xy;\n    vec4 bloomColour;\n    float bloomLevel;\n    float levelWeight = 2.0;\n    for (float y = -bloomCount/2.0; y < bloomCount/2.0+1.0; y += 1.0) {\n        float j = y > 0.0 ? y : -y;\n        float rowSize = cos(asin(clamp(mod((j+ceil(bloomCount/2.0))/ceil(bloomCount+1.0), 0.5)+0.5, 0.0, 1.0)));\n       // float rowSize = 1.7; // size of blur points\n        for (float x = floor(-bloomCount*rowSize/2.0); x < ceil(bloomCount*rowSize/2.0+1.0); x += 1.0) {\n            vec4 colour = texture(iChannel0, uv + vec2(x, y) * pixelSize);\n            float weight = 1.0/(sqrt(abs(x)+abs(y))+1.0)*sqrt(bloomCount);\n            float level = (colour.r+colour.g+colour.b)/3.0;\n\t\t\tlevel = level * level * level;\n            if (level < bloomThresh) {\n                level = 0.0;\n            }\n            bloomColour = max(bloomColour, colour);\n            bloomLevel += level*weight;\n            levelWeight += weight;\n        }\n    }\n    bloomLevel /= levelWeight;\n    bloomLevel *= bloomBrightness;\n\n\tfragColor = texture(iChannel0, uv)*(1.0-bloomLevel)+bloomColour*bloomLevel;\n    \n}","name":"Image","description":"","type":"image"}]}