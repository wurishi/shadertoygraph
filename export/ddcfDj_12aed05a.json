{"ver":"0.1","info":{"id":"ddcfDj","date":"1697643849","viewed":21,"name":"Fork Damaged VC lindadaism 341","username":"lindadaism","description":"Simulating a damaged VCR playing a video using chromatic aberration","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chromaticaberration"],"hasliked":0,"parentid":"ds3fWj","parentname":"Fork Damaged VC lindadaism 884"},"renderpass":[{"inputs":[{"id":"4df3zn","filepath":"/media/a/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","previewfilepath":"/media/ap/3405e48f74815c7baa49133bdc835142948381fbe003ad2f12f5087715731153.ogv","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Hint, it's a few lines of code, and makes use of a tan function :)\n    vec2 warpedUv = uv;//vec2(uv.x, tan(uv.y*10.+iTime));\n    \n    float movingY = sin(mod(iTime*0.5, 1.2)); //center\n    float stripeWidth = 0.08;\n    \n    if (warpedUv.y > movingY-stripeWidth && warpedUv.y < movingY+stripeWidth)\n    {\n        float offset = warpedUv.y;\n        warpedUv.x += tan(offset*250.) * 0.1 + 0.1;\n    }\n    \n    //warpedUv = smoothstep(uv, warpedUv, iTime);\n    \n    vec2 offset1 = vec2(0.);\n    vec2 offset2 = vec2(.01);\n    vec2 offset3 = vec2(-.01);\n    \n    float r = texture(iChannel0, warpedUv + offset1).r;\n    float g = texture(iChannel0, warpedUv + offset2).g;\n    float b = texture(iChannel0, warpedUv + offset3).b;\n                          \n    vec3 col = vec3(r, g, b);\n\n    //warpedUv = vec2(uv.x, tan(uv.y*10.+iTime));\n    //vec3 colStripes = vec3(texture(iChannel0, warpedUv));\n    //col = mix(col, vec3(warpedUv, 0.), iTime);\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}