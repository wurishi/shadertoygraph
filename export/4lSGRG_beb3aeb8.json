{"ver":"0.1","info":{"id":"4lSGRG","date":"1430344901","viewed":333,"name":"Integer Circle Test","username":"NBickford","description":"A flyover of a procedural texture based on the amount of time an algorithm takes to run, based off of https://nbickford.wordpress.com/2011/04/03/the-minsky-circle-algorithm/","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["algorithm","integer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"vec3 colormap(float v){\n    //if v<0.5, spline through (204,29,0), (255,155,54), (255,130,97)\n    //if v>0.5, line through (64,201,204), and (0,51,125)\n    if(v<0.5){\n        vec3 v1=vec3(245,20,0);\n        vec3 v2=vec3(255,177,60);\n        vec3 v3=vec3(255,130,97);\n        v=v*2.0;\n        return mix(mix(v1,v2,v),mix(v2,v3,v),v)/256.0;\n    }else{\n        vec3 v1=vec3(12,135,212);\n        vec3 v2=vec3(0,51,125);\n        v=(v-0.5)*2.0;\n        return mix(v1,v2,v)/256.0;\n    }\n}\n\nvec3 icircle(float x0, float y0, float d, float e){\n    int iter=2000;\n    float x=x0;\n    float y=y0;\n    \n    for(int i=0;i<2000;i++){\n        x=x-floor(d*y);\n        y=y+floor(e*x);\n        \n        if((floor(x)==floor(x0)) && (floor(y)==floor(y0))){\n            iter=i;\n            break;\n        }\n    }\n    \n    float i2=float(iter);\n    float v1=1.0-log(i2)/log(2000.0); //Gives us a log-scaled number between 0 and 1.\n\n    return colormap(pow(v1,0.6));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv1=(fragCoord.xy-iResolution.xy*0.5)/iResolution.x;\n\tvec2 uv = floor(fragCoord.xy-iResolution.xy*0.5);\n    \n    float time=iTime;\n    vec3 io=vec3(0.0,1.0+time*0.1,0.0+time*0.3);\n    float a=0.7;\n    float c=cos(a); float s=sin(a);\n    vec3 ir=vec3(uv1.x,c*uv1.y-s,-s*uv1.y-c);\n    float t=-io.y/ir.y;\n    vec3 p=io+t*ir;\n    \n    float d=0.999;\n    float e=37403.0/27038.0;\n    \n    float scale=1.0;\n    float x0=uv.x*scale+floor(time*32.0);\n    float y0=uv.y*scale;\n    \n    x0=floor(p.x*200.0);\n    y0=floor(p.z*200.0);\n\n    vec3 col=0.5*icircle(x0,y0, d, e);\n\n    col*=1.4*exp((p.z-io.z)*0.3/(iTime+1.0));\n    fragColor=vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}