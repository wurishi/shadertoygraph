{"ver":"0.1","info":{"id":"dddfR2","date":"1697427161","viewed":33,"name":"Circular Cloud","username":"Felipe_Rodrigues","description":"a random circular cloud shader effect ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["noise","uv","circular"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pi 3.1415\n\nfloat rng( in vec2 pos )\n{\n    return fract(sin( pos.y + pos.x*78.233 )*43758.5453)*2.0 - 1.0;\n}\n\nfloat perlin( in float pos )\n{\n    // Get node values\n    \n    float a = rng( vec2(floor(pos), 1.0) );\n    float b = rng( vec2(ceil( pos), 1.0) );\n    \n    float a_x = rng( vec2(floor(pos), 2.0) );\n    float b_x = rng( vec2(ceil( pos), 2.0) );\n    \n    a += a_x*fract(pos);\n    b += b_x*(fract(pos)-1.0);\n    \n    \n    \n    // Interpolate values\n    \n    return a + (b-a)*smoothstep(0.0,1.0,fract(pos));\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\nfloat random2 (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(52.9898,68.233)))*\n        71558.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  \n    vec3 color;\n\n    vec2 uv_1 = fragCoord/iResolution.xy;\n    float start = 2.2;//5.0;\n    float end = 15.;//8.0;\n    float delta = end - start;\n    float increment = 0.2;//.5345;\n    float increment_i = increment;\n    for(\n    float i = start;\n    i<end ; \n    i+=increment){\n        \n        increment = random(vec2(increment));\n        \n        float ri1 = random(vec2(i));\n        float ri2 = random2(vec2(i));\n        \n        vec2 uv_2 = (uv_1 * (i)+vec2(ri1,ri2)*10.0);\n        vec2 uv_3 = fract(uv_2);\n        vec2 mod_3 = (uv_2-uv_3)/8.0;\n        vec2 uv = uv_3 - 0.5;\n        uv.x = uv.x * iResolution.x/iResolution.y;\n        uv = uv * 2.0;\n\n\n\n        float d = length(uv);\n        float p = cos(iTime * 4. + random(mod_3) * pi )/2.0 + 0.5;\n        float mask =  smoothstep(p+0.01,p,d);\n\n\n        color += vec3(mask) * (increment/delta);\n    \n    }\n    \n\n    fragColor = vec4(color,1.0)/2.;\n    \n}","name":"Image","description":"","type":"image"}]}