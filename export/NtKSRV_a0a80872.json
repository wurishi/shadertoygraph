{"ver":"0.1","info":{"id":"NtKSRV","date":"1641055492","viewed":362,"name":"point light practice","username":"Kamoshika","description":"Point light practice.","likes":23,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","reflection","shadow","lighting"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define hash(x) fract(sin(x)*1e3)\n\nfloat pi2=acos(-1.)*2.;\n\nfloat hash12(vec2 p){\n    float s=dot(p,vec2(1.6523,1.2452));\n    return hash(s);\n}\n\nvec3 rot3d(vec3 v,float a,vec3 ax){\n    ax=normalize(ax);\n    return cos(a)*v+(1.-cos(a))*dot(ax,v)*ax-sin(a)*cross(ax,v);\n}\n\nfloat map(vec3 p){\n    float d;\n    \n    d=p.y;\n    vec3 q=p;\n    q.zx=mod(q.zx,4.)-2.;\n    d=min(d,length(q-vec3(0,1,0))-1.);\n    \n    return d;\n}\n\nvec3 calcN(vec3 p){\n    vec2 e=vec2(1e-3,0);\n    return normalize(vec3(map(p+e.xyy)-map(p-e.xyy),\n                          map(p+e.yxy)-map(p-e.yxy),\n                          map(p+e.yyx)-map(p-e.yyx)));\n}\n\nfloat shadow(vec3 rp,vec3 rd){\n    float d,h=.001,res=1.,c=0.2;\n    for(int i=0;i<50;i++){\n        vec3 p=rp+rd*h;\n        if(p.y>4.)break;\n        d=map(p);\n        if(d<.001)return c;\n        res=min(res,16.*d/h);\n        h+=d;\n    }\n    return mix(c,1.,res);\n}\n\nfloat calcAO(vec3 rp,vec3 rd){\n    float ao,s=1.,i,h,d;\n    for(float i=0.;i<20.;i++){\n        h=.01+.02*i*i;\n        d=map(rp+rd*h);\n        ao+=s*clamp(h-d,0.,1.);\n        s*=.75;\n    }\n    return 1.-clamp(.5*ao,0.,1.);\n}\n\nvec3 hsv(float h,float s,float v){\n    return ((clamp(abs(fract(h+vec3(0,2,1)/3.)*6.-3.)-1.,0.,1.)-1.)*s+1.)*v;\n}\n\nvec3 getC(vec3 p){\n    vec3 col=vec3(0);\n    if(p.y>.01){\n        col+=hsv(hash12(ceil(p.zx/4.)),.7,1.);\n    } else {\n        p*=pi2/8.;\n        col+=step(sin(p.z)*sin(p.x),0.)*.95+.05;\n    }\n    return col;\n}\n\nfloat fs(float f0,float c){\n    return f0+(1.-f0)*pow(1.-c,5.);\n}\n\nvec3 march(inout vec3 rp,inout vec3 rd,inout bool hit,inout vec3 ra,vec3 cp){\n    vec3 col=vec3(0);\n    float d;\n    hit=false;\n    \n    vec3 rp0=rp;\n    for(int i=0;i<100;i++){\n        d=map(rp);\n        if(abs(d)<1e-4||length(rp0-rp)>100.){\n            hit=true;\n            break;\n        }\n        rp+=rd*d;\n    }\n    \n    vec3 lv=vec3(cp.x*.7,4,cp.z*.3)-rp;\n    vec3 ld=normalize(lv);\n    float lp=5000./dot(lv,lv);\n    vec3 n=calcN(rp);\n    vec3 al=getC(rp);\n    vec3 ref=reflect(rd,n);\n    float m=.95;\n    \n    float diff=max(dot(ld,n),0.);\n    float spec=pow(max(dot(reflect(ld,n),rd),0.),20.);\n    float sh=shadow(rp+.001*n,ld);\n    float ao=calcAO(rp+.001*n,n);\n    \n    col+=al*diff*sh*(1.-m)*lp;\n    col+=al*spec*sh*m*lp;\n    col+=al*ao*.1;\n    \n    float fog=exp(-dot(rp-rp0,rp-rp0)*.0005);\n    col=mix(vec3(0),col,fog);\n    \n    col*=ra;\n    \n    ra*=al*fs(.8,dot(ref,n))*fog;\n    \n    rp+=.001*n;\n    rd=ref;\n    \n    return col;\n}\n \nvec3 rh(vec3 col,float l){\n    return col/(1.+col)*(1.+col/l/l);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = vec2(gl_FragCoord.x / iResolution.x, gl_FragCoord.y / iResolution.y);\n    uv -= 0.5;\n    uv /= vec2(iResolution.y / iResolution.x, 1)*.5;\n    vec3 col=vec3(0);\n    \n    vec3 cp=vec3(0,9,15)*(2.+sin(iTime*.2)*.5);\n    cp=rot3d(cp,iTime*.2,vec3(0,1,0));\n    vec3 rd=normalize(vec3(uv,-2));\n    rd=rot3d(rd,1.,vec3(1,0,0));\n    rd=rot3d(rd,iTime*.2,vec3(0,1,0));\n    \n    vec3 rp=cp;\n    bool hit=false;\n    vec3 ra=vec3(1);\n    \n    col+=march(rp,rd,hit,ra,cp);\n    if(hit)col+=march(rp,rd,hit,ra,cp);\n    if(hit)col+=march(rp,rd,hit,ra,cp);\n    \n    col=rh(col,8.);\n    col=pow(col,vec3(1./2.2));\n    \n    fragColor = vec4(col,1.);\n}","name":"Image","description":"","type":"image"}]}