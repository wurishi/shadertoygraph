{"ver":"0.1","info":{"id":"wsSGWw","date":"1548980546","viewed":124,"name":"Twisity Boi","username":"cbrpnk","description":"I recreated Andy Duboc's first everyday since he inspired me to start doing everydays myself. first https://twitter.com/andyduboc/status/1080266860346703872","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["everydayraymarchingtracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*\n * I recreated Andy Duboc's first everyday since he inspired me to start \n * doing everydays myself.\n * https://twitter.com/andyduboc/status/1080266860346703872\n */\n\nfloat torus(vec3 p, float r, float w)\n{\n    return sqrt(pow(length(p.xz)-r, 2.) + pow(p.y, 2.)) - w;\n}\n\nvec2 rotate(vec2 p, float a)\n{\n    float c = cos(a);\n    float s = sin(a);\n    return mat2(c, s, -s, c) * p;\n}\n\nfloat map(vec3 p)\n{\n    p.xz = rotate(p.xz, -5.*sin(iTime)*dot(p, vec3(0., 1., 0.)));\n    return torus(p.yzx, .5, .3);\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n    float t = 0.;\n    for(int i=0; i<128; ++i) {\n        float d = map(ro+t*rd);\n        if(d < .001) break;\n        if(t > 100.) return -1.;\n        t += d*.4;\n    }\n    return t;\n}\n\nvec3 getNormal(vec3 p)\n{\n    return normalize(vec3(\n    \tmap(p+vec3(.0001, .0, .0)) - map(p-vec3(.0001, .0, .0)),\n        map(p+vec3(.0, .0001, .0)) - map(p-vec3(.0, .0001, .0)),\n        map(p+vec3(.0, .0, .0001)) - map(p-vec3(.0, .0, .0001))\n    ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy - vec2(.5);\n    uv.x *= iResolution.x/iResolution.y;\n\t\n    vec3 eye = vec3(0., 0., 2.);\n    vec3 lookat = normalize(vec3(uv.x, uv.y, -1.));\n    float d = march(eye, lookat);\n    \n    vec3 col;\n    \n    if(d < 0.) {\n    \tcol = vec3(.83);\n    } else {\n        vec3 normal = getNormal(eye+lookat*d);\n        vec3 light1Pos = vec3(1., 1., 1.);\n        vec3 light2Pos = vec3(-1., -1., -1.);\n        col = .8 * vec3(1., .7, .5) * clamp(dot(normal, light1Pos), 0., 1.);\n        col += .2 * vec3(.5, .9, 1.) * clamp(dot(normal, light2Pos), 0., 1.);\n        col += .2* vec3(1., .7, .5);\n        col += .4 * vec3(.5, .7, 1.) * (1.-clamp(dot(-lookat, normal), 0., 1.));\n       \tcol += pow(.1, 17.)*vec3(pow(abs(dot(light2Pos, normal)), 70.));\n    }\n\t\n    fragColor = vec4(pow(col, vec3(1./2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}