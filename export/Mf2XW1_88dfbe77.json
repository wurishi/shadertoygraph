{"ver":"0.1","info":{"id":"Mf2XW1","date":"1706436061","viewed":90,"name":"2D Fire Metaballs","username":"csblo","description":"Try 2D metaballs","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 screenUV(vec2 uv)\n{\n    vec2 scale = uv / iResolution.x * 2.;\n    return vec2(scale.x - 1., scale.y - 0.5);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = screenUV(fragCoord);\n\n    //float d1 = length(uv+iTime*0.01) - 0.1;\n    //float d2 = length(uv-iTime*0.01) - 0.1;\n    //float c = min(d1, d2);\n    \n\n    vec2 p = vec2(sin(iTime*0.8) * 0.3);\n\n    //float d1 = 1. / (pow(uv.x-p.x, 2.0) + pow(uv.y-p.y, 2.0));\n    //float d2 = 1. / (pow(uv.x+p.x, 2.0) + pow(uv.y+p.y, 2.0));\n    //float c = (d1 + d2)-16.;\n    \n    float d1 = 0.1 / length(uv - p);\n    float d2 = 0.1 / length(uv + p);\n    float d3 = 0.1 / length(uv + vec2(p.x,-p.y));\n    float c = (d1 + d2 + d3)-0.2;\n    \n    \n    //vec3 col = vec3(step(0.,c));\n    \n    vec3 col = vec3(c*1., c*.5, c*.3);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}