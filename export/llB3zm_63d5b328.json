{"ver":"0.1","info":{"id":"llB3zm","date":"1427658865","viewed":193,"name":"Newton pendulum","username":"jimmikaelkael","description":"Just my fun for the end of this sunday.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["newton","pendulum"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sfGRn","filepath":"/media/a/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","previewfilepath":"/media/ap/fb918796edc3d2221218db0811e240e72e340350008338b0c07a52bd353666a6.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3zn","filepath":"/media/a/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","previewfilepath":"/media/ap/488bd40303a2e2b9a71987e48c66ef41f5e937174bf316d3ed0e86410784b919.jpg","type":"cubemap","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4dX3zn","filepath":"/media/a/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","previewfilepath":"/media/ap/550a8cce1bf403869fde66dddf6028dd171f1852f4a704a465e1b80d23955663.png","type":"cubemap","channel":3,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n#define ID_SPH       0.1\n#define ID_TACK      0.2\n#define ID_MOUNT     0.3\n#define ID_MOUNT_V   0.4\n#define ID_MOUNT_H   0.5\n#define ID_STRING    0.6\n#define ID_TABLE     0.7\n#define ID_NONE     -1.0\n\nconst vec2 SPH   = vec2(2.0, ID_SPH);\nconst vec2 TACK  = vec2(0.35, ID_TACK);\n\nconst vec4 MOUNT = vec4(12.0, 0.8, 6.0, ID_MOUNT);\nconst vec4 MOUNT_V = vec4(0.5, 8.0, 0.5, ID_MOUNT_V);\nconst vec4 MOUNT_H = vec4(9.0, 0.5, 0.5, ID_MOUNT_H);\n\nconst vec2 STRING = vec2(0.025, ID_STRING);\nconst vec2 TABLE  = vec2(25.0, ID_TABLE);\n\nfloat sdSphere(in vec3 p, float s)\n{\n    return length(p) - s;\n}\n\nfloat sdBox(in vec3 p, vec3 b)\n{\n    vec3 d = abs(p) - b;\n    return min(max(d.x, max(d.y, d.z)), 0.0) + length(max(d, 0.0));\n}\n\nfloat sdCapsule(in vec3 p, in vec3 a, in vec3 b, float r)\n{\n    vec3 pa = p - a, ba = b - a;\n    float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);\n    return length(pa - ba * h) - r;\n}\n\nvec2 map(in vec3 p)\n{\n    float timeSw= 0.8;\n    float time = mod(iTime, 1.6);\n    float mx = abs(sin(time * 4.0)) * 8.0;\n    float my = abs(cos(time * 4.0)) * 8.0;\n\n    vec2 res = vec2(ID_SPH, sdSphere(p - vec3(-8.0 - 1.25 * (time < timeSw ? mx : 0.0), 1.25 * (time < timeSw ? 8.0 - my : 0.0), 0.0), SPH.x));\n    vec2 obj = vec2(ID_SPH, sdSphere(p - vec3(8.0 + 1.25 * (time > timeSw ? mx : 0.0), 1.25 * (time > timeSw ? 8.0 - my : 0.0), 0.0), SPH.x));\n    if (obj.y < res.y) res = obj;\n\n    for (int i = 0; i < 3; i++)\n    {\n        obj = vec2(ID_SPH, sdSphere(p - vec3(-4.0 + float(i) * 4.0, 0.0, 0.0), SPH.x));\n        if (obj.y < res.y) res = obj;        \n    }\n\n    obj = vec2(ID_MOUNT, sdBox(p - vec3(0.0, -4.0, 0.0), MOUNT.xyz));\n    if (obj.y < res.y) res = obj;   \n\n    for (int i = 0; i < 2; i++)\n    {\n       obj = vec2(ID_MOUNT_H, sdBox(p - vec3(0.0, 12.0, -5.0 + float(i) * 10.0), MOUNT_H.xyz));\n       if (obj.y < res.y) res = obj;   \n\n        for (int j = -1; j <= 1; j+=2)\n        {\n            obj = vec2(ID_MOUNT_V, sdBox(p - vec3(-4.0 + float(i) * 8.0, 4.0, float(j) * 5.0), MOUNT_V.xyz));\n            if (obj.y < res.y) res = obj;\n        }\n\n        obj = vec2(ID_STRING, sdCapsule(p, vec3(-8.0 - 1.25 * (time < timeSw ? mx : 0.0), 1.25 * (time < timeSw ? 9.0 - my : 1.6), 0.0), vec3(-8.0, 12.0, -4.5 + float(i) * 9.0), STRING.x));\n        if (obj.y < res.y) res = obj;          \n        obj = vec2(ID_STRING, sdCapsule(p, vec3(8.0 + 1.25 * (time > timeSw ? mx : 0.0), 1.25 * (time > timeSw ? 9.0 - my : 1.6), 0.0), vec3(8.0, 12.0, -4.5 + float(i) * 9.0), STRING.x));\n        if (obj.y < res.y) res = obj;\n    }\n\n    for (int i = 0; i < 3; i++)\n    {\n        for (int j = -1; j <= 1; j+=2)\n        {\n            obj = vec2(ID_STRING, sdCapsule(p, vec3(-4.0 + float(i) * 4.0, 2.0, 0.0), vec3(-4.0 + float(i) * 4.0, 12.0, float(j) * 4.5), STRING.x));\n            if (obj.y < res.y) res = obj;\n        }\n        \n    }\n\n    for (int i = 0; i < 5; i++)\n    {\n        for (int j = -1; j <= 1; j+=2)\n        {\n            obj = vec2(ID_TACK, sdSphere(p - vec3(-8.0 + float(i) * 4.0, 12.0, float(j) * 5.25), TACK.x));\n            if (obj.y < res.y) res = obj;\n        }\n    }\n\n    float d1 = sdBox(p - vec3(0.0, -6.2, 0.0), vec3(TABLE.x, 2.0, TABLE.x));\n    obj = vec2(ID_TABLE, max(d1, sdSphere(p - vec3(0.0, -6.2, 0.0), TABLE.x)));\n    if (obj.y < res.y) res = obj;\n\n    return res;\n}\n\nvec2 raymarchScene(in vec3 ro, in vec3 rd, in float tmin, in float tmax)\n{\n    vec3 res = vec3(ID_NONE);\n    float t = tmin;\n    for (int i = 0; i < 120; i++) {\n        vec3 p = ro + rd * t;\n        res = vec3(map(p), t);\n        float d = res.y;\n        if (d < (0.001 * t) || t > tmax)\n            break;\n        t += 0.75 * d;\n     }\n     return res.xz;\n}\n\nfloat raymarchAO(in vec3 ro, in vec3 rd, float tmin) {\n    float ao = 0.0;\n    for (float i = 0.0; i < 5.0; i++) {\n        float t = tmin + pow(i / 5.0, 2.0);\n        vec3 p = ro + rd * t;\n        float d = map(p).y;\n        ao += max(0.0, t - 0.5 * d - 0.05);\n    }\n    return 1.0 - 0.6 * ao;\n}\n\nvec3 getNormal(in vec3 p)\n{\n    vec2 eps = vec2(0.0015, 0.0);\n    return normalize(vec3(map(p + eps.xyy).y - map(p - eps.xyy).y,\n                          map(p + eps.yxy).y - map(p - eps.yxy).y,\n                          map(p + eps.yyx).y - map(p - eps.yyx).y));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\n    vec3 eye = vec3(0.0, 10.0, -20.0);\n    vec2 rot = 6.2831 * (vec2(2.6 + iTime * 0.05, sin(iTime * 0.15) * 0.025) + vec2(1.0, 0.2) * (iMouse.xy - iResolution.xy * 0.5) / iResolution.x);\n    eye.yz = cos(rot.y) * eye.yz + sin(rot.y) * eye.zy * vec2(-1.0, 1.0);\n    eye.xz = cos(rot.x) * eye.xz + sin(rot.x) * eye.zx * vec2(1.0, -1.0);   \n    \n    vec3 ro = eye;\n    vec3 ta = vec3(0.0, 2.0, 0.0);\n\n    vec3 cw = normalize(ta - ro);\n    vec3 cu = normalize(cross(vec3(0.0, 1.0, 0.0), cw));\n    vec3 cv = normalize(cross(cw, cu));\n    mat3 cam = mat3(cu, cv, cw);   \n    \n    vec3 rd = cam * normalize(vec3(p, 1.0));\n\n    vec3 col = texture(iChannel0, rd).xyz;\n\n    float tmin = 0.1;\n    float tmax = 50.0;\n    vec2 res = raymarchScene(ro, rd, tmin, tmax);\n    float t = res.y;\n    if (t < tmax)\n    {\n        vec3 pos = ro + rd * t;\n        vec3 nor = getNormal(pos);\n        vec3 ref = reflect(rd, nor);\n        float occ = clamp(raymarchAO(pos, nor, 0.1), 0.0, 1.0);\n\n        float id = res.x;\n        if (id == ID_TABLE)\n        {\n            col = texture(iChannel1, 16.0 * pos.xz / 256.0).xyz;\n            col = mix(col, pow(texture(iChannel0, ref).xyz, vec3(4.0)), 0.75);\n            col = mix(col, vec3(0.5, 0.3, 0.2), 0.35);\n        }\n        else if (id == ID_MOUNT)\n        {\n            col = texture(iChannel2, 16.0 * pos.xz / 256.0).xyz;\n            col = mix(vec3(0.0), col, 0.005);\n            col = mix(col, pow(texture(iChannel3, ref).xyz, vec3(2.0)), 0.01);\n        }\n        else if (id == ID_MOUNT_V || id == ID_MOUNT_H)\n        {\n            col = texture(iChannel2, 16.0 * pos.xy / 256.0).xyz;\n            col = mix(vec3(0.5, 0.0, 0.0), col, 0.025);\n            col = mix(col, pow(texture(iChannel3, ref).xyz, vec3(2.0)), 0.05);\n            \n        }\n        else if (id == ID_STRING)\n        {\n            col = vec3(0.7, 0.6, 0.5);\n        }\n        else if (id == ID_SPH || id == ID_TACK)\n        {\n            col = texture(iChannel2, 32.0 * pos.xz / 256.0).xyz;\n            col = mix(vec3(0.25), col, 0.005);\n            col = mix(col, pow(texture(iChannel3, ref).xyz, vec3(2.0)), 0.75);            \n            col = mix(col, texture(iChannel0, ref).xyz, 0.25);\n        }\n\n        col *= occ;\n\n        vec3 gamma = vec3(1.0 / 2.2);\n        col = pow(col, gamma);\n    }\n\n    \n\tfragColor = vec4(col, 1.0);\n}","name":"","description":"","type":"image"}]}