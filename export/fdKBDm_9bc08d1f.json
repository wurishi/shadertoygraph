{"ver":"0.1","info":{"id":"fdKBDm","date":"1658328439","viewed":161,"name":"2nd deepest NOR 4inputs","username":"lomateron","description":"twin of the deepest for 4inputs\nit takes 14 NORs to compute\nlooks nearly the same but as inverted color","likes":4,"published":3,"flags":32,"usePreview":0,"tags":["binaryfunction"],"hasliked":0,"parentid":"fdyBDD","parentname":"smooth NOR"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = A(fragCoord);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define A(u) texture(iChannel0,(u)/iResolution.xy)\n#define pi 3.141592653589793238\nfloat nor(float a, float b)\n{\n    return (+cos(pi*(a*0.+b*0.))\n            +cos(pi*(a*0.+b*1.))\n            +cos(pi*(a*1.+b*0.))\n            +cos(pi*(a*1.+b*1.)))*.25;//change .25 to something else\n}\nvoid mainImage( out vec4 fragColor, in vec2 u )\n{\n    //float ■■■■■■■■□□□□□□□□ = A(u+vec2( 1, 0)).x;\n    //float ■■■■□□□□■■■■□□□□ = A(u+vec2( 0, 1)).x;\n    //float ■■□□■■□□■■□□■■□□ = A(u+vec2(-1, 0)).x;\n    //float ■□■□■□■□■□■□■□■□ = A(u+vec2( 0,-1)).x;\n    //float □□□□□□□□■■■■■■■■ = nor( ■■■■■■■■□□□□□□□□ , ■■■■■■■■□□□□□□□□ ); \n    //float □□□□■■■■□□□□■■■■ = nor( ■■■■□□□□■■■■□□□□ , ■■■■□□□□■■■■□□□□ );\n    //float □■□■□■□■□■□■□■□■ = nor( ■□■□■□■□■□■□■□■□ , ■□■□■□■□■□■□■□■□ );\n    //float □□□□■■■■■■■■■■■■ = nor( ■■■■■■■■□□□□□□□□ , ■■■■□□□□■■■■□□□□ );\n    //float ■■■■■■■■■■■■□□□□ = nor( □□□□□□□□■■■■■■■■ , □□□□■■■■□□□□■■■■ );\n    //float ■■■■□□□□□□□□■■■■ = nor( □□□□■■■■■■■■■■■■ , ■■■■■■■■■■■■□□□□ );\n    //float □□■■■■■■■■■■□□■■ = nor( ■■■■□□□□□□□□■■■■ , ■■□□■■□□■■□□■■□□ );\n    //float ■■□□■■■■■■■■■■□□ = nor( ■■■■□□□□□□□□■■■■ , □□■■■■■■■■■■□□■■ );\n    //float ■■■■□□■■□□■■■■■■ = nor( ■■□□■■□□■■□□■■□□ , □□■■■■■■■■■■□□■■ );\n    //float □□■■■■□□■■□□□□■■ = nor( ■■□□■■■■■■■■■■□□ , ■■■■□□■■□□■■■■■■ );\n    //float ■■□□□□■■□□■■■■■■ = nor( □□■■■■□□■■□□□□■■ , ■■■■■■■■■■■■□□□□ );\n    //float ■■□■□■■■□■■■■■□■ = nor( □□■■■■□□■■□□□□■■ , ■□■□■□■□■□■□■□■□ );\n    //float ■□■■■■■□■■■□■□■□ = nor( ■■□□□□■■□□■■■■■■ , □■□■□■□■□■□■□■□■ );\n    //float □■■□■□□■■□□■□■■■ = nor( ■■□■□■■■□■■■■■□■ , ■□■■■■■□■■■□■□■□ );\n    float a = A(u+vec2(-1,-1)).x;\n    float b = A(u+vec2( 0,-1)).x;\n    float c = A(u+vec2(+1,-1)).x;\n    float d = A(u+vec2( 0,-2)).x;\n    float e = nor( a , a );\n    float f = nor( b , b );\n    float g = nor( d , d );\n    float h = nor( a , b );\n    float i = nor( e , f );\n    float j = nor( h , i );\n    float k = nor( j , c );\n    float l = nor( j , k );\n    float m = nor( c , k );\n    float n = nor( l , m );\n    float o = nor( n , i );\n    float p = nor( n , d );\n    float q = nor( o , g );\n          o = nor( p , q );\n          //o  = nor(o,o);\n    if(iFrame==0)\n    {\n        o = fract(cos(dot(u,vec2(1234.1234,4321.4321)))*1234.5678);\n        o *= float(u.x>100.&&u.x<110.);\n        o = +float(u.x==000.5)*1.\n            +float(u.x==111.5)*0.\n            +float(u.x==222.5)*0.;\n        //o = round(o);\n    }\n    if(iFrame!=0&&int(u.y)!=(iFrame%int(iResolution.y))){o=A(u).x;}\n    fragColor = vec4(o);\n}","name":"Buffer A","description":"","type":"buffer"}]}