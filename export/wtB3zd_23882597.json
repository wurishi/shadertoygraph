{"ver":"0.1","info":{"id":"wtB3zd","date":"1560719325","viewed":327,"name":"Divine Flower","username":"anclin","description":"Divine Flower","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["flower","divine"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define S(a,b,t)  mix(a, b, sin(t) * .5 + .5)\n#define C(a,b,t)  mix(a, b, cos(t) * .5 + .5)\n\nfloat sFract(float x){\n    \n    // Smoothing factor that takes resolution into account.\n    // Constants, like 12, etc, can work too.\n    float sf = .02*iResolution.y; // Tailor to suit needs.\n    x = fract(x);\n    return min(x, x*(1. - x)*sf);\n    \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float t = iTime * .2;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\n    // polar coords\n    float a = atan(uv.x, uv.y) / 6.28 + .5;\n    float l = length(uv);\n    \n    // petals\n    float p = a*7.;\n    p = min(sFract(p), sFract(-p))\n        * S(4.,10.,t*S(1., 2., t*.0001));\n    \n    // rings\n\tfloat r = l*S(.2,1.,t)\n        + sin(l*S(7.,14.,t) - t*3.);\n    \n    // mask\n    float m = sqrt(l);\n    \n    // combined\n    float c = sFract(p + r) * m + m;\n//\t  float w = 1.-fwidth(p+r);\n//    float c = (p+r)*m;\n//    c = ( 1. + (c < w ? c/w : 1.-(c-w)/(1.-w)) ) ;\n\t \n    // color\n    float R = .5;\n    float G = S(0., l, t*1.5+1.1);\n    float B = S(l, 1., t);\n    vec3 col = c*vec3(R,G,B);\n\n    // Output to screen\n    fragColor = vec4(col,1);\n}","name":"Image","description":"","type":"image"}]}