{"ver":"0.1","info":{"id":"7t2SDD","date":"1627749663","viewed":49,"name":"chinese flag","username":"jcyuan","description":"practice on drawing flag","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159\n\nconst vec3 YELLOW = vec3(255, 220, 20) / 255.;\nconst vec3 RED = vec3(221, 41, 16) / 255.;\n\nfloat star(vec2 p, float size) {\n    p.x = abs(p.x);\n    \n    float aStep = PI * 2. / 5.;\n    float line1 = dot(p, vec2(sin(aStep), cos(aStep)));\n    float line2 = dot(p, vec2(sin(aStep * 3.), cos(aStep * 3.)));\n    float shape1 = max(line1, line2);\n    \n    line1 = p.y;\n    line2 = dot(p, vec2(sin(aStep * 2.), cos(aStep * 2.)));\n    float shape2 = max(line1, line2);\n    \n    float d = min(shape1, shape2);\n    float w = fwidth(d);\n    \n    return smoothstep(w, -w, d - size);\n}\n\nmat2 rot(float a) {\n    float c = cos(a);\n    float s = sin(a);\n    \n    return mat2(c, -s, s, c);\n}\n\nvec3 flag(vec2 uv) {\n    vec3 col = RED;\n    \n    uv.x *= iResolution.x / iResolution.y;\n   \n    vec2 suv = uv - vec2(.27, .7);\n    \n    float star1 = star(suv, .03);\n    col = mix(col, YELLOW, star1);\n    \n    const float st = PI * 2. / 12.;\n    for (int i = 1; i <= 4; i++) {\n        float a = st * (float(i) + .7);\n        vec2 luv = suv - vec2(sin(a), cos(a)) * vec2(.22);\n        mat2 r = rot(a * float(i));\n        col = mix(col, YELLOW, star(i == 3 ? luv : r * luv, .01));\n    }\n    \n    float w = fwidth(uv.y);\n    col *= smoothstep(w, 0., abs(uv.y - .5) - .5 + w);\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float t = iTime * 3. - uv.x * 8. - uv.y * 5.;\n    float pw = pow(uv.x, .6) * .5;\n    uv.y += sin(t) * .1 * pw;\n    \n    vec3 col = flag(uv) + texture(iChannel0, uv * 10.).rgb * .07;\n    \n    col *= vec3(clamp(.75 + cos(t) * .6 * pw, 0., 1.));\n    col *= 1.2 - length(uv - vec2(.2, .65));\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}