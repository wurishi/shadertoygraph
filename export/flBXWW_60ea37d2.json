{"ver":"0.1","info":{"id":"flBXWW","date":"1627640366","viewed":89,"name":"Wave Pattern","username":"Satenkai","description":"Wave Pattern","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["wavepattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Circle(vec2 uv,vec2 center,float radius,float blur,float delay_x,float delay_y)\n{\n    float d = length((uv+vec2(0.0,0.0)) * vec2(1.0,1.0)-center);\n    float c1 = smoothstep(radius,radius - blur,d);\n    \n    float r =atan(uv.x,uv.y);\n    \n    float final = c1;\n    return final;\n}\n\nfloat ring(vec2 uv,vec2 center,float radius,float blur,float number,float delay_x,float delay_y)\n{\n    float d = length((uv+vec2(0.0,0.0)) * vec2(1.0,1.0)-center);\n    float c1 = smoothstep(radius,radius - blur,d);\n    float r =step(atan((uv * vec2(1.0,1.0)-center).x,(uv * vec2(1.0,1.0)-center).y)/6.28,fract(iTime*1.0)*24.0-delay_x-0.5);\n    \n    float final =sin(d * number) * c1 ;\n    return final;\n}\n\nfloat ring_all(vec2 uv,float radius,float blur,float dis,float number,float X,float Y)\n{\n    float final = 0.0;\n    float mask = 0.0;\n    float mask1 = 0.0;\n    \n    for(int i;i < int(Y);i++)\n    {\n        for(int j;j < int(X);j++)\n        {\n            float sign_x = 0.0;//((float(i%2)-0.5)*2.0) * sin(iTime*2.0)*0.01;\n           final = max(final,(1.0-mask)*ring(uv,vec2(((float(j)+0.5*float(i%2))*(radius*2.0+dis)),-0.04+(radius*0.4*float(i))),radius,blur,number,float(j),float(i)));\n           mask1 = max(mask1,Circle(uv,vec2(((float(j)+0.5*float(i%2))*(radius*2.0+dis))+sign_x,-0.03+(radius*0.4*float(i))),radius,blur,float(j),float(i)));\n        }\n        mask = mask1;\n    }\n    return final;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    //uv-= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 Tiling = vec2(2.6, 2.4);\n    float radius = 0.12;\n    float blur = 0.001;\n    float number = 500.0;\n    float dis = -0.075;\n    float X = 12.0 * Tiling.x;\n    float Y = 24.0 * Tiling.y;\n\n\n    vec3 finalcolor = mix(vec3(0.2,0.3,0.3),vec3(0.5,0.5,0.5),ring_all(uv * Tiling + vec2(0.0,0.1),radius,blur,dis,number,X,Y));\n    fragColor = vec4(finalcolor,1.0);\n}","name":"Image","description":"","type":"image"}]}