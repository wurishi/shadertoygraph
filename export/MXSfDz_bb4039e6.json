{"ver":"0.1","info":{"id":"MXSfDz","date":"1729328361","viewed":109,"name":"Moving through the pipe","username":"Emil","description":"So fun to do \"3D\" without any loops (raymarching)","likes":13,"published":1,"flags":0,"usePreview":1,"tags":["3d","cheap","pipe"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRn","filepath":"/media/a/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","previewfilepath":"/media/ap/10eb4fe0ac8a7dc348a2cc282ca5df1759ab8bf680117e4047728100969e7b43.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float distanceToCircle(vec2 posXY, vec2 viewXY)\n{\n    float b = 2.0 * dot(posXY, viewXY);\n    float c = dot(posXY, posXY) - 1.0;\n    float discriminant = b * b - 4.0 * c;\n    float t = (-b - sqrt(discriminant)) / 2.0;\n\n    return t;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 centeredUV = (fragCoord-iResolution.xy*0.5)/iResolution.x;\n    \n    float fov = 0.3;\n    \n    vec3 camPos = vec3(sin(iTime*0.25)*0.35, cos(iTime*0.13)*0.15, iTime*-0.5+sin(iTime*0.2));\n    vec2 sideEye = vec2(sin(iTime*0.26)*0.05, sin(iTime*0.39+1.2)*0.07);\n    vec3 viewDir = (vec3(centeredUV + sideEye, fov));\n    \n    float circleDist = distanceToCircle(camPos.xy, normalize(viewDir.xy));\n    float len = circleDist / length(viewDir.xy);\n    \n    vec3 pipe = viewDir * len;\n    float cylindrical = atan(pipe.x+camPos.x, pipe.y+camPos.y)/3.141592653;\n    \n    vec4 d = texture(iChannel0, vec2(pipe.z-camPos.z, cylindrical*2.));\n    \n    vec4 f = vec4(0.64, 0.47, 0.3, 1.0)*1.2-(1.5/length(pipe));\n    fragColor = d + f;\n}","name":"Image","description":"","type":"image"}]}