{"ver":"0.1","info":{"id":"ll3fWB","date":"1540842941","viewed":68,"name":"Eshkere","username":"Doppel_Dron","description":"by me","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["gj"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nconst int KEY_W    = 87;\nconst int KEY_A  = 65;\nconst int KEY_S  = 83;\nconst int KEY_D = 68;\n\nconst int KEY_Q = 81;\nconst int KEY_E  = 69;\n\nconst int KEY_0  = 48;\nconst int KEY_1  = 49;\nconst int KEY_2  = 50;\nconst int KEY_3  = 51;\nconst int KEY_4  = 52;\nconst int KEY_5  = 53;\nconst int KEY_6  = 54;\nconst int KEY_7  = 55;\n\nvec2 position = vec2(0,0);\nfloat scale = 1.f;\nfloat R = 100.f;\nint max_iter = 255;\nvec2 c = vec2(0.4,0.2);\n\nvec2 get_pos()\n{\n    vec2 pos = vec2(0,0);\n    pos.x = texelFetch(iChannel1, ivec2(0,0),0).x;\n    pos.y = texelFetch(iChannel1, ivec2(0,0),0).y;\n    return pos;\n}\n\nfloat get_scale()\n{\n    return texelFetch(iChannel1, ivec2(1,0),0).x;\n}\n\nint Julia_fract(vec2 z)\n{\n    z = z-vec2(0.5,0.5);\n    int count = 0;\n    while (z.x*z.x + z.y*z.y < R*R)\n    {\n        vec2 tmp;\n        tmp.x = z.x*z.x - z.y*z.y;\n        tmp.y = 2.f*z.x*z.y;\n        z = tmp + c;\n        count +=1;\n    }\n    return count;\n}\n\nint Mandelbrot_fract(vec2 z)\n{\n    z = z-vec2(0.5,0.5);\n    int count = 0;\n    vec2 z0 = z;\n    while (z.x*z.x + z.y*z.y < R*R)\n    {\n        vec2 tmp;\n        tmp.x = z.x*z.x - z.y*z.y;\n        tmp.y = 2.f*z.x*z.y;\n        z = tmp + z0;\n        count +=1;\n    }\n    return count;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    c = vec2(0.4,0.3) + vec2(sin(iTime)*0.02,sin(iTime)*0.025); \n    vec3 col = vec3(texelFetch(iChannel0, ivec2(KEY_1,2),0 ).x, 1.0, 1.0);\n    if ((fragCoord.x > iResolution.x/2.f-10.f) && (fragCoord.x < iResolution.x/2.f+10.f) &&\n       \t(fragCoord.y > iResolution.y/2.f-10.f) && (fragCoord.y < iResolution.y/2.f+10.f))\n    {\n        col = vec3(0,0,1);\n    }\n    position = get_pos();\n    scale = get_scale();\n    vec2 Coord_from_center = fragCoord - iResolution.xy/2.f;\n    vec2 position_from_center = position - iResolution.xy/2.f;\n    \n    fragCoord = (Coord_from_center)*exp(scale) - position_from_center;\n    \n    \n    if ((fragCoord.x > 100.f) && (fragCoord.x < 200.f) &&\n       \t(fragCoord.y > 100.f) && (fragCoord.y < 200.f))\n    {\n        col = vec3(1,1,1);\n    }\n    \n    if ((fragCoord.x > 10.f) && (fragCoord.x < 20.f) &&\n       \t(fragCoord.y > 10.f) && (fragCoord.y < 20.f))\n    {\n        col = vec3(iChannelTime[1],0,0);\n    }\n    \n    fragColor = vec4(col,1.0);\n    int iter = Julia_fract(fragCoord/iResolution.xy);\n    //int iter = Mandelbrot_fract(fragCoord/iResolution.xy);\n    fragColor = vec4(float(iter)/float(max_iter),0,0,1);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"const int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nconst int KEY_W    = 87;\nconst int KEY_A  = 65;\nconst int KEY_S  = 83;\nconst int KEY_D = 68;\n\nconst int KEY_Q = 81;\nconst int KEY_E  = 69;\n\nconst int KEY_0  = 48;\nconst int KEY_1  = 49;\nconst int KEY_2  = 50;\nconst int KEY_3  = 51;\nconst int KEY_4  = 52;\nconst int KEY_5  = 53;\nconst int KEY_6  = 54;\nconst int KEY_7  = 55;\n\nvec2 position = vec2(0,0);\nfloat scale = 0.f;\nconst float speed = 100.f;\nconst float scale_speed = 1.f;\n\nfloat get_scale()\n{\n    return texelFetch(iChannel1, ivec2(1,0),0).x;\n}\n\nvec2 get_pos()\n{\n    vec2 pos = vec2(0,0);\n    pos.x = texelFetch(iChannel1, ivec2(0,0),0).x;\n    pos.y = texelFetch(iChannel1, ivec2(0,0),0).y;\n    return pos;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if ((int(fragCoord.x) == 0) && (int(fragCoord.y) == 0))\n    {\n        position = get_pos();\n        scale = get_scale();\n        if (texelFetch(iChannel0, ivec2(KEY_A,0),0).x > 0.f)\n        {\n            position = position + vec2(iTimeDelta*speed*exp(scale),0);\n        }\n        if (texelFetch(iChannel0, ivec2(KEY_D,0),0).x > 0.f)\n        {\n            position = position + vec2(-iTimeDelta*speed*exp(scale),0);\n        }\n        if (texelFetch(iChannel0, ivec2(KEY_W,0),0).x > 0.f)\n        {\n            position = position + vec2(0,-iTimeDelta*speed*exp(scale));\n        }\n        if (texelFetch(iChannel0, ivec2(KEY_S,0),0).x > 0.f)\n        {\n            position = position + vec2(0,iTimeDelta*speed*exp(scale));\n        }\n        fragColor = vec4(position,0,0);\n    }\n    if ((int(fragCoord.x) == 1) && (int(fragCoord.y) == 0))\n    {\n        scale = get_scale();\n        if (texelFetch(iChannel0, ivec2(KEY_Q,0),0).x > 0.f)\n        {\n            scale = scale+scale_speed*iTimeDelta;\n        }\n        if (texelFetch(iChannel0, ivec2(KEY_E,0),0).x > 0.f)\n        {\n            scale = scale-scale_speed*iTimeDelta;\n        }\n        fragColor = vec4(scale,0,0,0);\n    }\n    \n}","name":"Buffer A","description":"","type":"buffer"}]}