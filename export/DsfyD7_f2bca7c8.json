{"ver":"0.1","info":{"id":"DsfyD7","date":"1687092560","viewed":92,"name":"Circular Cross - Distance","username":"Poisson","description":"Distance to a circular cross (4 circular arcs connected together), EXACT exterior, EXACT interior if rb â‰¤ ra","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["2d","raymarching","distancefield","sdf","circle","raymarcher","cross","arc","interior"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// circular cross sdf function\n// ra is the size\n// rb is the roundness / thickness\nfloat sdCircularCross(vec2 p, float ra, float rb) {\n    float r = ra - rb;\n    // symmetries\n    p = abs(p);\n    p = p.x>p.y ? p : p.yx;\n        \n    return (p.x>r ? length(p-vec2(r,0))\n                  : r-length(p-r)) - rb;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.*fragCoord - iResolution.xy) / iResolution.y;\n    vec2 m = (2.*iMouse.xy - iResolution.xy) / iResolution.y;\n\n    float ra = .65+.2*sin(iTime*1.8);\n    float rb = .05+.05*cos(iTime*1.2);\n        \n\tfloat d = sdCircularCross(p, ra, rb);\n    \n\t// coloring\n    vec3 col = (d>0.) ? vec3(.9,.6,.3) : vec3(.55,.85,1);\n    col *= 1.-exp(-8.*abs(d));\n\tcol *= .8 + .2*cos(125.*d);\n\tcol = mix(col, vec3(1), smoothstep(.01,0.,abs(d)));\n\n    if (iMouse.z>0.) {\n        d = sdCircularCross(m, ra, rb);\n        col = mix(col, vec3(1,1,0), smoothstep(.01,0., abs(length(p-m)-abs(d))-.0025));\n        col = mix(col, vec3(1,1,0), smoothstep(.01,0., length(p-m)-.015));\n    }\n    \n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}