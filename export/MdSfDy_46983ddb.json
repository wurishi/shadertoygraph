{"ver":"0.1","info":{"id":"MdSfDy","date":"1501933070","viewed":300,"name":"Nested FBM","username":"remonvv","description":"Some experiments based on iq's article about using domain warping using fbm : https://iquilezles.org/articles/warp/warp.htm","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["fbm","nested"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rand(vec2 n) {\n   return fract(sin(dot(n, vec2(12.9898,12.1414))) * 83758.5453);\n}\n\nfloat noise(vec2 n) {\n    \n    vec2 i = floor(n);\n    vec2 f = fract(n);\n    \n    float ul = rand(i);\n    float ur = rand(i + vec2(1.0, 0.0));\n    float ll = rand(i + vec2(0.0, 1.0));\n    float lr = rand(i + vec2(1.0, 1.0));\n    \n    return mix(mix(ul, ur, f.x), mix(ll, lr, f.x), f.y);\n}\n\nfloat fbm (vec2 n) {\n    n *= 2.0;\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100.0);\n    for (int i = 0; i < 5; ++i) {\n        v += a * noise(n);\n        n = n * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n\nfloat fbm2(vec2 n) {\n    \n    float qx = fbm(n + vec2(5.2,1.3));\n    float qy = fbm(n + vec2(2.0,4.0));\n    \n    vec2 q = vec2(qx, qy);\n    \n    float f = fbm(n + 1.5 * q);\n    \n    return f;\n}\n\nfloat fbm3(vec2 n) {\n    \n    float qx = fbm2(n + vec2(2.0,4.0));\n    float qy = fbm2(n + vec2(5.2,1.3));\n    \n    vec2 q = vec2(qx, qy);\n    \n    float f = fbm2(n + 1.5 * q);\n    \n    return f;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\t\n    vec2 uv = fragCoord * 3.0 / iResolution.xx;\n    vec2 wuv = uv;\n    wuv.x = mod(wuv.x, 1.0);\n\n    float f = uv.x < 1.0 ? fbm(wuv) : (uv.x < 2.0 ?  fbm2(wuv) : fbm3(wuv));\n    \n    vec3 color = vec3(f);\n    \n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}