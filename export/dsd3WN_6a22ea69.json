{"ver":"0.1","info":{"id":"dsd3WN","date":"1677299095","viewed":56,"name":"Purple Mandelbrot Set","username":"ogclickbaitnate","description":"Just another mandelbrot set ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    float t = mod(iTime, 2.0); // calculate the current time within a one-second loop\n\n    // Calculate fractal coordinates\n    vec2 p = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    p.x *= iResolution.x / iResolution.y;\n\n    // Set fractal center and zoom level\n    vec2 center = vec2(-0.7, 0.0);\n    float zoom = .2 + 0.5 * t; // Modify the zoom level based on time\n\n    // Calculate zoomed-in coordinates\n    vec2 c = center / zoom;\n    vec2 z = vec2(p.x / zoom, p.y / zoom);\n\n    // Calculate Mandelbrot set value\n    float iterations = 30.0;\n    float radius = 12.0;\n\n    for (float i = 0.0; i < iterations; i++)\n    {\n        z = vec2(z.x * z.x - z.y * z.y, 2.0 * z.x * z.y) + c;\n        if (length(z) > radius)\n        {\n            float value = i / iterations;\n            fragColor = vec4(value, value*.3, value, 1.0);\n            return;\n        }\n    }\n\n    fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}