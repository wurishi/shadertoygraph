{"ver":"0.1","info":{"id":"wlc3Rj","date":"1576836412","viewed":185,"name":"Trapezoid Distortion","username":"vertx","description":"I needed this and I couldn't find it, so here it is.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["distortion","transform","trapezoid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Variables\n    float sizeTop = (cos(iTime) / 2.0 + 0.5) * 0.8 + 0.2;\n    const float sizeBottom = 1.0;\n    \n    //Distortion\n    float size = mix(sizeBottom, sizeTop, uv.y);\n    float reciprocal = 1.0 / size;\n    uv.x = uv.x * reciprocal + (1.0 - reciprocal) / 2.0;\n    \n    //Texture\n    vec4 color = texture( iChannel0, uv );\n    \n    // Output to screen\n    fragColor = color;\n}","name":"Image","description":"","type":"image"}]}