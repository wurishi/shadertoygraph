{"ver":"0.1","info":{"id":"tt3fWH","date":"1612624358","viewed":98,"name":"Voronoi study (flat space)","username":"sig","description":"Simple voronoi using different \"flat space\" metrics.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["geometric"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 point(int i) {\n    float r = 0.5 + 0.3 * sin(float((i * 123) % 9 + 4) * iTime * 0.05 + 0.5);\n    float a = float((i * 345) % 7 + 4) * iTime * 0.05 + r;\n    return r * vec2(cos(a), sin(float((i * 143) % 3 + 2) * a));\n}\n\nfloat switch_interval = 2.0;\nfloat dist(vec2 a, vec2 b) {\n    float T = mod(iTime, switch_interval * 6.) / switch_interval;\n    switch(int(T)) {\n    case 0: return abs(a.x-b.x) + abs(a.y-b.y); // 1-d \"manhattan\"\n    case 1:\n    case 2: \n    case 3: \n    case 4: return pow(pow(abs(a.x-b.x), T) + pow(abs(a.y-b.y), T), 1./T);\n    case 5: return max(abs(a.x-b.x), abs(a.y-b.y)); // inf-d \"\"\n    }\n}\n\nfloat BORDER_R = 0.01;\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 p = (2.0 * fragCoord - iResolution.xy) / iResolution.y;\n\n    float min_d = 666.;\n    vec2 min_c = p;\n    float hilite = 0.;\n    float border = 0.;\n    for (int i = 0; i < 10; i++) {\n        vec2 c = point(i);\n        float d = dist(c, p);\n        hilite += d < 0.1 ? d : 0.0;\n        float dd = d - min_d;\n        if (dd < BORDER_R) {\n            if (dd < -BORDER_R) {\n                min_d = d;\n                min_c = c;\n                border = 0.0;\n            } else {\n                border = 1.0 - abs(dd) / BORDER_R;\n            }\n        }\n    }\n\n    vec3 col = 0.5 + hilite + 0.5*cos(iTime+min_c.xyx+vec3(0,2,4)) - border ;\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}