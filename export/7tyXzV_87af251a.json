{"ver":"0.1","info":{"id":"7tyXzV","date":"1641040256","viewed":83,"name":"Simple Star Not used","username":"kings","description":"Just testing ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["shape"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat Star(vec2 uv, float size)\n{\n    uv.x = abs(uv.x);\n    float a = 6.2832/5.;\n    float d1 = dot(uv, vec2(sin(a), cos(a)));\n    a = 3. * 6.2832/5.;\n    float d2 = dot(uv, vec2(sin(a), cos(a)));\n    a = 2. * 6.2832/5.;\n    float d4 = dot(uv, vec2(sin(a), cos(a)));\n    \n    float d = min(max(d1, d2), max(uv.y, d4));\n    float w = fwidth(d);\n    return smoothstep(w, -w, d - size);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n       \n    vec3 col = vec3(0);\n    uv = (fragCoord - .5 * iResolution.xy)/iResolution.y;\n    \n    \n    col += Star( uv + vec2( sin(2.* iTime)/2., cos(2.* iTime)/5.), .1);\n    col *= vec3(178.,34.,52.)/255.;\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}