{"ver":"0.1","info":{"id":"MtKfzd","date":"1543721834","viewed":102,"name":"BlueCross","username":"Vermifuge","description":"Cross","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["cross"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 one = vec2(1., 0.);\n\nfloat sphere(vec3 p, float r) {\n\tp = .55*sin(iTime * .02) * sin(p + one.yyx * iTime);\n\treturn length(p) - r;\n}\n\nfloat map(vec3 p) {\n\treturn sphere(p, .7);\n}\n\nvec4 raymarch(vec2 uv) {\n\tvec3 camera = vec3(0., 0., -3.);\n\tvec3 dir = normalize(vec3(uv, 1.));\n\tvec4 res = vec4(camera, 0.);\n\tfloat t = 0.;\n\tfor (int i = 0; i < 60; ++i) {\n\t\tvec3 p = camera + t*dir;\n\t\tfloat d = map(p);\n\t\tif (d < .001) {\n\t\t\tres = vec4(p, 1.);\n\t\t}\n\t\tt += d;\n\t}\n\treturn res;\n}\n\nvec3 normal(vec3 p) {\n\tvec2 e = vec2(.001, 0.);\n\treturn normalize(vec3(\n\t\tmap(p - e.xyy) - map(p + e.xyy),\n\t\tmap(p - e.yxy) - map(p + e.yxy),\n\t\tmap(p - e.yyx) - map(p + e.yyx)));\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 uv = fragCoord.xy/iResolution.xy;\n\tuv -= .5;\n\tuv.x *= iResolution.x/iResolution.y;\n\tvec3 color = vec3(.1,.4,.5);\n\tvec4 obj = raymarch(uv);\n\tcolor = mix(color, vec3(1.),\n\t\tobj.w*dot(normal(obj.xyz), normalize(vec3(uv, 1.))));\n\tfragColor = vec4(color, 1.);\n}\n","name":"Image","description":"","type":"image"}]}