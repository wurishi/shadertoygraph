{"ver":"0.1","info":{"id":"4X33Dl","date":"1717106641","viewed":17,"name":"Texture/Shader Assignment_CJ","username":"cgdeguzm","description":"Create a shader that utilizes concepts taught in this course.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["school"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGRr","filepath":"/media/a/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","previewfilepath":"/media/ap/48e2d9ef22ca6673330b8c38a260c87694d2bbc94c19fec9dfa4a1222c364a99.mp3","type":"music","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// ShaderToy Shader Code\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time variable for animation\n    float time = iTime;\n    \n    // Mouse interaction\n    vec2 mouse = iMouse.xy / iResolution.xy;\n\n    // Fetch webcam input from iChannel0\n    vec3 webcamColor = texture(iChannel0, uv).rgb;\n\n    // Fetch audio input from iChannel1 (assuming audio is stored in a texture-like manner)\n    float audio = texture(iChannel1, vec2(uv.x, 0.5)).r;\n\n    // Calculate a color based on time, mouse interaction, webcam, and audio\n    vec3 color = 0.5 + 0.5 * cos(time + uv.xyx + vec3(0.0, 2.0, 4.0) + mouse.x * 3.14159 + webcamColor + audio);\n\n    // Output color\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}