{"ver":"0.1","info":{"id":"ft3cRX","date":"1660186759","viewed":98,"name":"Wavy 3! yeah","username":"gurudevbk","description":"wave idea 2\n\nCheck out the rest of my playlist! https://www.shadertoy.com/playlist/sfBXzt","likes":1,"published":1,"flags":64,"usePreview":0,"tags":["wave","reactive","visualizer","soundcloud"],"hasliked":0,"parentid":"7ltcR7","parentname":"Wavywave.v2"},"renderpass":[{"inputs":[{"id":"ltBSzw","filepath":"https://soundcloud.com/genizm/continuum?si=00d71268a9994d3cb0865504a52ec2a0&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","previewfilepath":"https://soundcloud.com/genizm/continuum?si=00d71268a9994d3cb0865504a52ec2a0&utm_source=clipboard&utm_medium=text&utm_campaign=social_sharing","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define freq(f) texture(iChannel0, vec2(f, 0.25)).x * 0.8\n\n\nfloat avgFreq(float start, float end, float step) {\n    float div = 0.0;\n    float total = 0.0;\n    for (float pos = start; pos < end; pos += step) {\n        div += 1.0;\n        total += freq(pos);\n    }\n    return total / div;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 uv2 = uv;\n    \n    //make a color i guess? \n    vec3 icol = vec3(2,2,0);\n    \n    //bass, mids, treble levels for iChannel0\n    float bassFreq = pow(avgFreq(0.0, 0.1, 0.01), 0.85);\n    float medFreq = pow(avgFreq(0.1, 0.6, 0.01), 0.85);\n    float topFreq = pow(avgFreq(0.6, 1.0, 0.01), 0.85);\n\n\n    // Time varying pixel color\n    vec3 col = .5+0.5*cos(uv.xxy+icol);\n    \n    \n    float aspect = iResolution.y/iResolution.x;\n    float value;\n\tuv2 -= vec2(0.5, 0.5*aspect);\n    float rot = radians(45.0); // radians(45.0*sin(medFreq*iTime));\n    mat2 m = mat2(cos(rot), -sin(rot), sin(rot), cos(rot));\n   \tuv2  = m * uv;\n    uv2 += vec2(0.5, 0.5*aspect);\n    uv2.y+=0.5*(1.0-aspect);\n    vec2 pos = 10.0*uv;\n    vec2 rep = fract(pos);\n    float dist = 2.0*min(min(rep.x, 1.0-rep.x), min(rep.y, 1.0-rep.y));\n    float squareDist = length((floor(pos)+vec2(0.5)) - vec2(5.0) );\n    \n    float edge = sin(medFreq+iTime-squareDist*0.5)*0.5+0.5;\n   \n\n    \n    //variabls\n    float xperiod = 5.;\n    float amplitude = 5.;\n    float stime = iTime*.1+20.;\n    \n    //magic matrix \n    mat2 tr = mat2(sin(uv2.y*stime), sin(cos(4.*stime)*sin(stime+uv.x) + uv.y), \n               -sin(uv.x+iTime), cos(uv.x*iTime) - length(uv)\n    );\n    \n    //multply magic matrx\n    uv *= tr;\n    \n    uv += bassFreq*uv*tr;\n    \n    edge = (bassFreq+medFreq+sin(iTime)-squareDist*iTime*0.5)*0.3;\n    edge += .2*medFreq;\n    edge = 9.0*fract(edge*.5+bassFreq);\n    //value = 2.0*abs(dist-0.5);\n    //value = pow(dist, 2.0);\n    value = fract (length(pos-uv)*4.);\n    value = mix(value, 1.0-value, step(1.0, edge));\n    //value *= 1.0-0.5*edge;\n    edge /= pow(abs(3.0-edge), 3.0);\n    \n    //edge = abs(1.0-edge);\n    value = smoothstep( edge-0.5, edge, 0.95*value);\n    \n    \n    value = length(col)*.1;\n    fragColor = vec4(value);\n    \n    //draw the squiggles on the transformed plane \n    col += sin(bassFreq+uv.x*sin(uv.x*bassFreq*15.) + sin(stime)*cos(stime + uv.y*xperiod)) * .9;\n    \n    //add some color \n    col -= vec3(bassFreq*uv.x+.4, medFreq*uv.y+.4, topFreq*uv.x);\n\n    // Output to screen\n    // fragColor = vec4(col,1.0);\n    \n    fragColor /= mix(.9*vec4(col, 1.),\n                    vec4(0.5*value*topFreq,\n                         0.5*bassFreq,\n                         .7*value*bassFreq,1.0), \n                         value);\n}","name":"Image","description":"","type":"image"}]}