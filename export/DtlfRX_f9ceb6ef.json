{"ver":"0.1","info":{"id":"DtlfRX","date":"1693266380","viewed":107,"name":"spectral iridescence","username":"sciecode","description":"spectral iridescence, thin-film interference\n\napproximation: https://www.shadertoy.com/view/DlScWy","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["interference","iridescence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.14159265\n\n#define medium_n 1.\n#define film_n 1.28\n\n#define start 400\n#define end 700\n#define st 10\n\n/* Amplitude reflection coefficient (s-polarized) */ \nfloat rs(float n1, float n2, float cosI, float cosT) { \n    return (n1 * cosI - n2 * cosT) / (n1 * cosI + n2 * cosT); \n}\n\n/* Amplitude reflection coefficient (p-polarized) */ \nfloat rp(float n1, float n2, float cosI, float cosT) {\n    return (n2 * cosI - n1 * cosT) / (n1 * cosT + n2 * cosI); \n    \n}\n\nvec3 FresnelIridescence(float w, float cos0, float thickness) { \n\n    float sq_sin0 = (1.-cos0*cos0);\n    float sq_sin1 = pow(medium_n/film_n,2.0)*sq_sin0;\n    float cos1 = sqrt(1.-sq_sin1);\n    \n    float r = (rs(medium_n, film_n, cos0, cos1) + rs(medium_n, film_n, cos0, cos1))/2.;\n    \n    r = min(0.9999,r);\n    \n    float OPL = 4.*PI*thickness*film_n*cos1/w;\n    float sq_sin_OPL2 = pow(sin(OPL/2.),2.);\n    \n    float F = pow(2.*r/(1. - r*r),2.);\n    \n    float Et = 1. / ( 1. + F * sq_sin_OPL2);\n    \n    return vec3(1.) - Et;\n    \n}\n\nfloat xFit_1931( float wave ) {\n    float t1 = (wave-442.0)*((wave<442.0)?0.0624:0.0374),\n          t2 = (wave-599.8)*((wave<599.8)?0.0264:0.0323),\n          t3 = (wave-501.1)*((wave<501.1)?0.0490:0.0382);\n    return 0.362*exp(-0.5*t1*t1) + 1.056*exp(-0.5*t2*t2)- 0.065*exp(-0.5*t3*t3);\n}\nfloat yFit_1931( float wave ) {\n    float t1 = (wave-568.8)*((wave<568.8)?0.0213:0.0247),\n          t2 = (wave-530.9)*((wave<530.9)?0.0613:0.0322);\n    return 0.821*exp(-0.5*t1*t1) + 0.286*exp(-0.5*t2*t2);\n}\nfloat zFit_1931( float wave ) {\n    float t1 = (wave-437.0)*((wave<437.0)?0.0845:0.0278),\n          t2 = (wave-459.0)*((wave<459.0)?0.0385:0.0725);\n    return 1.217*exp(-0.5*t1*t1) + 0.681*exp(-0.5*t2*t2);\n}\n\nvec3 wavelength_to_xyz(float w) {\n    return vec3( xFit_1931(w), yFit_1931(w), zFit_1931(w) );\n}\n    \nvec3 xyz_to_rgb(vec3 XYZ) {\n\treturn mat3(2.3706743, -0.5138850, 0.0052982, -0.9000405, 1.4253036, -0.0146949, -0.4706338, 0.0885814, 1.0093968) * XYZ;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float s = 1.-uv.y;\n    \n    vec3 xyz = vec3(0);\n    float N = 0.;\n    for(int w = start; w<end; w+=st) {\n        vec3 l_xyz = wavelength_to_xyz(float(w));\n        N += l_xyz.y;\n        xyz += l_xyz*FresnelIridescence(float(w), cos(PI/2.*uv.x), 2000.*pow(s,1.1));\n    }\n    \n    xyz /= N;\n    \n    vec3 rgb = max(vec3(0.),xyz_to_rgb(xyz));\n    \n    fragColor = vec4(pow(rgb,vec3(1./2.2)),1.0);\n}","name":"Image","description":"","type":"image"}]}