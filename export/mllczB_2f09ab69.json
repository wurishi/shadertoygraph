{"ver":"0.1","info":{"id":"mllczB","date":"1690913859","viewed":152,"name":" galaxy, stars, starfield twirl","username":"nayk","description":" galaxy, stars, starfield","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["galaxy","stars","starfield"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*original \nhttps://www.shadertoy.com/view/tllfRX\n*/\n\n#define NUM_LAYERS 20.\n#define TAU 6.28318\n#define PI 3.141592\n#define Velocity .025 //modified value to increse or decrease speed, negative value travel backwards\n#define StarGlow 0.025\n#define StarSize 02.\n#define CanvasView 20.\n\n\n\nmat2 rotationMatrix(float angle)\n{\n\tangle *= PI / 180.0;\n    float s=sin(angle), c=cos(angle);\n    return mat2( c, s, -s, c );\n}\nfloat Star(vec2 uv, float flare){\n    float d = length(uv);\n  \tfloat m = sin(StarGlow*1.2)/d;  \n    float rays = max(0., .5-abs(uv.x*uv.y*1000.)); \n    m += (rays*flare)*2.;\n    m *= smoothstep(1., .1, d);\n    return m;\n}\n\nfloat sport21(vec2 p){\n    p = fract(p*vec2(123.34, 456.21));\n    p += dot(p, p+45.32);\n    return fract(p.x*p.y);\n}\n\n\nvec3 StarLayer(vec2 uv){\n    vec3 col = vec3(0);\n    vec2 gv = fract(uv);\n    vec2 id = floor(uv);\n    for(int y=-1;y<=1;y++){\n        for(int x=-1; x<=1; x++){\n            vec2 offs = vec2(x,y);\n            float n = sport21(id+offs);\n            float size = fract(n);\n            float star = Star(gv-offs-vec2(n, fract(n*34.))+.5, smoothstep(.1,.9,size)*.46);\n            vec3 color = sin(vec3(cos(iTime)*1.2,cos(iTime)*1.2*.3,.9)*fract(n*2345.2)*TAU)*.25+.75;\n            color = color*vec3(.9,.59,.9+size);\n            star *= sin(iTime*.6+n*TAU)*.5+.5;\n            col += star*size*color;\n        }\n    }\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;\n\tvec2 M = vec2(0);\n    \n    \n     uv+= (fragCoord/min(iResolution.x,iResolution.y))\n              -vec2(fract(max(iResolution.x,iResolution.y)/min(iResolution.x,iResolution.y))/2.0,0.0);\n   vec2 trs = vec2(cos(iTime*1.001),0.);\n uv+=trs;           \n    vec2 center = vec2(0.5, 0.5);\n    vec2 delta = uv - center;\n    float strength = mix(0., 5., (sin(iTime*1.) + 1.) / 2.);\n    float angle = strength * length(delta);\n    \n    \n    float x = cos(angle) * delta.x - sin(angle) * delta.y;\n    float y = sin(angle) * delta.x + cos(angle) * delta.y;\n    \n    uv*= rotationMatrix( 10.0 * -iTime );\n    vec2 offset = vec2(0., 0.) * iTime*1.;\n    uv+= vec2(x + center.x + offset.x, y + center.y + offset.y);\n    M -= vec2(M.x+sin(iTime*0.22), M.y-cos(iTime*0.22));\n    M +=(iMouse.xy-iResolution.xy*.5)/iResolution.y;\n    float t = iTime*Velocity; \n    vec3 col = vec3(0);  \n    for(float i=0.; i<1.; i+=1./NUM_LAYERS){\n        float depth = fract(i+t);\n        float scale = mix(CanvasView, .5, depth);\n        float fade = depth*smoothstep(1.,.9,depth);\n        col += StarLayer(uv*scale+i*453.2-iTime*.05+M)*fade;}   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}