{"ver":"0.1","info":{"id":"NdGyzh","date":"1654359983","viewed":171,"name":"Waves of Time","username":"fabriceb","description":"psychedelic wavelets of a drop falling in water","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["droplet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float bpm = 160.0;\n    \n    float num_circles = 10.0;\n    \n    float move = radians(iTime * 360.0);\n    float distance = ((uv.x-0.5)*(uv.x-0.5) + (uv.y-0.5)*(uv.y-0.5));\n    \n    float wave_height = cos(-bpm/60.0*move+pow(num_circles,2.0)*distance);\n\n    vec4 base_color = texture(iChannel0, iResolution.xy/2.0);\n    float red = 0.0;\n    float green = 0.0;\n    float blue = 0.0;\n    if (base_color[0] >= base_color[1] && base_color[0] >= base_color[2]) {\n      red = 1.0;\n    }\n    else if (base_color[1] >= base_color[0] && base_color[1] >= base_color[2]) {\n      green = 1.0;\n    }\n    else if (base_color[2] >= base_color[0] && base_color[2] >= base_color[1]) {\n      blue = 1.0;\n    }\n    // Time varying pixel color\n    vec4 wave_color = vec4(wave_height * red, wave_height * green, wave_height * blue, wave_height); \n\n    // get image of iChannel0\n    vec4 channel0 = texture(iChannel0, uv.xy);\n    \n    //base_color[3] = wave_height;\n    \n    // Output to screen\n    fragColor = mix(channel0, wave_color, 0.5);\n\n}","name":"Image","description":"","type":"image"}]}