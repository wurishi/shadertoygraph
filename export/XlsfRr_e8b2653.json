{"ver":"0.1","info":{"id":"XlsfRr","date":"1510800052","viewed":368,"name":"Glitchy Blue thing","username":"HephaChronos","description":"I borrowed the 3d part of the code and modified to get this. Still trying to understand how 3d works","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float map(vec3 p){\n    vec3 q = fract(p*1.+1.) * 2. - 1.;\n    return length(q) -.25;\n}\n\nfloat trace(vec3 o, vec3 r){\n    float t = 0.;\n    for (int i = 0; i < 32; i++) {\n    \tvec3 p = o + r* t;\n        float d = map(p);\n        t += d *.5+pow(abs(.2+.15*cos(2.*iTime) ), 2. );\n    }\n    return t;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = ( fragCoord - .5* iResolution.xy ) / iResolution.y;   \n    vec3 r = vec3(uv, 1.);\n    float a = abs(1.3+1.3*sin(.25*iTime) );\n    r.xz *= mat2( cos(a*1.)+1., -sin(a*1.)+1., sin(a*1.)+1., cos(a*1.)+1. );\n    vec3 o = vec3(iTime, 0.8+iTime, iTime );\n    float t = trace(o, r);\n    float fog = 1. / (1. + t * t * .1);\n    vec3 fc = vec3(uv.x/2. +.5*cos(32.*iTime), .5+.8*sin(4.*iTime), uv.y/2. +1.5 );\n    fc *= fog;\n\tfragColor = vec4( 3.*fc,1.0);\n}","name":"Image","description":"","type":"image"}]}