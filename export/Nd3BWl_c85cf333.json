{"ver":"0.1","info":{"id":"Nd3BWl","date":"1657489526","viewed":98,"name":"Making a smiley - Animation","username":"bagidea","description":"Making a smiley in ShaderToy\n\n:: Tutorial ::\nPart 1 - https://www.youtube.com/watch?v=ZlNnrpM0TRg\nPart 2 - https://www.youtube.com/watch?v=vlD_KOrzGDc","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["tutorial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 widthin(vec2 uv, vec4 rect) { return (uv - rect.xy) / (rect.zw - rect.xy); }\nfloat remap01(float a, float b, float t) { return clamp((t - a) / (b - a), 0.0f, 1.0f); }\nfloat remap(float a, float b, float c, float d, float t) { return clamp(((t - a) / (b - a)) * (d - c) + c, 0.0f, 1.0f); }\n\nvec4 Head(vec2 uv)\n{\n    vec4 col = vec4(0.9f, 0.65f, 0.1f, 1.0f);\n    \n    float d = length(uv);\n    \n    col.a = smoothstep(0.5f, 0.49f, d);\n    \n    float edgeShade = remap01(0.35f, 0.5f, d);\n    edgeShade *= edgeShade;\n    \n    col.rgb *= 1.0f - edgeShade * 0.5f;\n    col.rgb = mix(col.rgb, vec3(0.6f, 0.3f, 0.1f), smoothstep(0.47f, 0.48f, d));\n    \n    float highlight = smoothstep(0.41f, 0.405f, d);\n    highlight *= remap(0.41f, -0.1f, 0.75f, 0.0f, uv.y);\n    highlight *= smoothstep(0.18f, 0.19f, length(uv - vec2(0.21f, 0.08f))); // eyes shadow\n    col.rgb = mix(col.rgb, vec3(1.0f), highlight);\n\n    d = length(uv - vec2(0.25f, -0.2f));\n    float cheek = smoothstep(0.2f, 0.01f, d) * 0.4f;\n    cheek *= smoothstep(0.17f, 0.16f, d);\n    col.rgb = mix(col.rgb, vec3(1.0f, 0.1f, 0.1f), cheek);\n\n    return col;\n}\n\nvec4 Eye(vec2 uv, float side, vec2 m, float smile)\n{\n    uv -= 0.5f;\n    uv.x *= side;\n    \n    float d = length(uv);\n    vec4 irisCol = vec4(0.3f, 0.5f, 1.0f, 1.0f);\n    vec4 col = mix(vec4(1.0f), irisCol, smoothstep(0.1f, 0.7f, d) * 0.5f);\n    \n    col.a = smoothstep(0.5f, 0.48f, d);\n    \n    // Shadow in eyes\n    col.rgb *= 1.0f - smoothstep(0.45f, 0.5f, d) * 0.5f * clamp(-uv.y - uv.x * side, 0.0f, 1.0f);\n    \n    // Black eyes\n    d = length(uv - m * 0.4f);\n    col.rgb = mix(col.rgb, vec3(0.0f), smoothstep(0.3f, 0.28f, d)); // iris outline\n    \n    // Blue eyes\n    irisCol.rgb *= 1.0f + smoothstep(0.3f, 0.05f, d);\n    float irisMask = smoothstep(0.28f, 0.25f, d);\n    //col.rgb = mix(col.rgb, irisCol.rgb, smoothstep(0.28f, 0.25f, d));\n    col.rgb = mix(col.rgb, irisCol.rgb, irisMask);\n    \n    // Inner black eyes\n    d = length(uv - m * 0.5f);\n    // PupilSize\n    float ps = mix(0.4f, 0.16f, smile);\n    // PupikMask and overlay hidden\n    float pm = smoothstep(ps, ps * 0.8f, d) * irisMask;\n    //col.rgb = mix(col.rgb, vec3(0.0f), smoothstep(0.16f, 0.14f, d));\n    col.rgb = mix(col.rgb, vec3(0.0f), pm);\n    \n    // Highlight\n    float t = iTime * 3.0f;\n    vec2 offs = vec2(sin(t + uv.y * 25.0f), sin(t + uv.x * 25.0f));\n    offs *= 0.01f * (1.0f - smile);\n    uv += offs;\n    \n    float highlight = smoothstep(0.1f, 0.09f, length(uv - vec2(-0.15f, 0.15f)));\n    highlight += smoothstep(0.07f, 0.05f, length(uv + vec2(-0.08f, 0.08f)));\n    col.rgb = mix(col.rgb, vec3(1.0f), highlight);\n\n    return col;\n}\n\nvec4 Brow(vec2 uv, float smile)\n{\n    float offs = mix(0.2f, 0.0f, smile);\n    uv.y += offs;\n\n    float y = uv.y;\n    //uv.y += uv.x * 0.8f - 0.3f;\n    uv.y += uv.x * mix(0.5f, 0.8f, smile) - mix(0.1f, 0.3f, smile);\n    //uv.x -= 0.1f;\n    uv.x -= mix(0.0f, 0.1f, smile);\n    uv -= 0.5f;\n\n    float blur = 0.1f;\n    vec4 col = vec4(0.0f);\n    \n    // Brows\n    float d1 = length(uv);\n    float s1 = smoothstep(0.45f, 0.45f - blur, d1);\n    float d2 = length(uv - vec2(0.1f, -0.2f) * 0.7f);\n    float s2 = smoothstep(0.5f, 0.5f - blur, d2);\n    \n    float browMask = clamp(s1 - s2, 0.0f, 1.0f);\n    float colMask = remap01(0.7f, 0.8f, y) * 0.75f;\n    colMask *= smoothstep(0.6f, 0.9f, browMask);\n    colMask *= smile;\n    //vec4 browCol = vec4(0.4f, 0.2f, 0.2f, 1.0f);\n    vec4 browCol = mix(vec4(0.4f, 0.2f, 0.2f, 1.0f), vec4(1.0f, 0.75f, 0.5f, 1.0f), colMask);\n    //col = mix(col, browCol, smoothstep(0.2f, 0.4f, browMask));\n    \n    // Shadow\n    //uv.y += 0.15f;\n    uv.y += 0.15f - offs * 0.5f;\n    //blur += 0.1f;\n    blur += mix(0.0f, 0.1f, smile);\n    d1 = length(uv);\n    s1 = smoothstep(0.45f, 0.45f - blur, d1);\n    d2 = length(uv - vec2(0.1f, -0.2f) * 0.7f);\n    s2 = smoothstep(0.5f, 0.5f - blur, d2);\n    \n    float shadowMask = clamp(s1 - s2, 0.0f, 1.0f);\n    col = mix(col, vec4(0.0f, 0.0f, 0.0f, 1.0f), smoothstep(0.0f, 1.0f, shadowMask) * 0.5f);\n    col = mix(col, browCol, smoothstep(0.2f, 0.4f, browMask));\n    \n    return col;\n}\n\nvec4 Mouth(vec2 uv, float smile)\n{\n    uv -= 0.5f;\n    uv.y *= 1.5f;\n    //uv.y -= uv.x * uv.x * 2.0f;\n    \n    uv.y -= uv.x * uv.x * 2.0f * smile;\n    uv.x *= mix(2.5f, 1.0f, smile);\n    \n    vec4 col = vec4(0.5f, 0.18f, 0.05f, 1.0f);\n    float d = length(uv);\n    col.a = smoothstep(0.5f, 0.48f, d);\n    \n    // Tooth\n    vec2 uvt = uv;\n    uvt.y += (abs(uv.x) * 0.5f + 0.1f) * (1.0f - smile);\n    float td = length(uvt - vec2(0.0f, 0.6f));\n    col.rgb = mix(col.rgb, /* tooth color */ vec3(1.0f) * /* shadow tooth */ smoothstep(0.6f, 0.35f, d), smoothstep(0.4f, 0.37f, td));\n    // Inner buttom month\n    td = length(uv + vec2(0.0f, 0.5f));\n    col.rgb = mix(col.rgb, vec3(1.0f, 0.5f, 0.5f), smoothstep(0.5f, 0.2, td));\n\n    return col;\n}\n\nvec4 Smiley(vec2 uv, vec2 m, float smile)\n{\n    vec4 col = vec4(-uv.y * 0.1f, -uv.y * 0.3f, -uv.y * 0.5f, 1.0f);\n    \n    float side = sign(uv.x); // Side value for flip side\n    uv.x = abs(uv.x);\n    vec4 head = Head(uv);\n    vec4 eyes = Eye(widthin(uv, vec4(0.03f, -0.1f, 0.37f, 0.25f)), side, m, smile);\n    vec4 brows = Brow(widthin(uv, vec4(0.03f, 0.2f, 0.4f, 0.45f)), smile);\n    vec4 mouth = Mouth(widthin(uv, vec4(-0.3f, -0.4f, 0.3f, -0.1f)), smile);\n\n    col = mix(col, head, head.a);\n    col = mix(col, eyes, eyes.a);\n    col = mix(col, brows, brows.a);\n    col = mix(col, mouth, mouth.a);\n\n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Setting screen\n    vec2 uv = fragCoord / iResolution.xy;\n    uv -= 0.5f;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    // Mouse\n    //vec2 m = iMouse.xy / iResolution.xy;\n    \n    // AI\n    vec2 m = vec2(cos(iTime / 2.0f) * 0.5f + 0.5f, sin(iTime / 4.0f) * 0.5f + 0.5f);\n    \n    m -= 0.5f;\n    \n    //uv -= m * (0.5f - length(uv));\n    uv -= m * (0.25f - dot(uv, uv));\n    float smile = cos(iTime) * 0.5f + 0.5f;\n\n    vec4 col = Smiley(uv, m, smile);\n\n    fragColor = col;\n}","name":"Image","description":"","type":"image"}]}