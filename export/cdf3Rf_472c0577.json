{"ver":"0.1","info":{"id":"cdf3Rf","date":"1666515254","viewed":78,"name":"8 Cheap Water Caustics","username":"boll","description":"Cheap Simple Water Caustics - Experimenting with 8 simple under water caustics for an Oculus game (using 1 or 2 texture fetches depending on which method that are used)","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["simple","water","cheap","caustics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzn","filepath":"/media/a/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","previewfilepath":"/media/ap/3083c722c0c738cad0f468383167a0d246f91af2bfa373e9c5c094fb8c8413e0.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdX3Rr","filepath":"/media/a/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","previewfilepath":"/media/ap/aea6b99da1d53055107966b59ac5444fc8bc7b3ce2d0bbb6a4a3cbae1d97f3aa.bin","type":"volume","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Using 2 * (2d texture fetches)\nvec4 noise2D( in vec2 x ) { return texture(iChannel0, x * 0.02); }\nvoid waterCaustics2DTex( out vec4 fragColor, in vec2 fragCoord, int method){\n    float time = iTime * 0.2; // iMouse.x * 0.2;// iTime;\n\tvec2 uv = fragCoord.xy / iResolution.xy*5.;\n    vec4 a = abs(noise2D(-uv.xy+time)-noise2D(uv+time));\n    \n    float p;\n    if(method == 0) p = (a.x+a.y)*.5;\n    if(method == 1) p = max(a.x, a.y);\n    if(method == 2) p = min(a.x, a.y);\n    if(method == 3) p = a.x * a.y;\n    fragColor = mix(vec4(.25, .7, .8, 1), vec4(.4,.9,1,1), 1.0 - clamp(pow(p, 0.2)*3.2, 0.0, 2.25));\n}\n\n// Using 1 * (3d texture fetches)\nvec4 noise3D( in vec2 x ) {\n    const mat3 mat = mat3(1.14,0.15,0.31,0.23,1.43,0.25,0.17,0.13,1.16);\n    return texture(iChannel1, vec3(x * 0.03, iTime * 0.01) * mat );\n}\nvoid waterCaustics3DTex( out vec4 fragColor, in vec2 fragCoord, int method ){\n    float time = iTime * 0.2;\n\tvec2 uv = fragCoord.xy / iResolution.xy*4.;\n    vec4 a = abs(noise3D(uv) - 0.5);\n    \n    float p;\n    if(method == 0) p = (a.x+a.y)*.5;\n    if(method == 1) p = max(a.x, a.y);\n    if(method == 2) p = min(a.x, a.y);\n    if(method == 3) p = a.x * a.y;\n    \n    fragColor = mix(vec4(.25, .7, .8, 1), vec4(.4,.9,1,1), 1.0 - clamp(pow(p, 0.2)*3.2, 0.0, 2.25));\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord){\n    int method = (int(floor(iTime * 1.0))) % 8; // Try different methods\n    \n    if(method == 0) waterCaustics3DTex(fragColor, fragCoord, 0);\n    if(method == 1) waterCaustics3DTex(fragColor, fragCoord, 1);\n    if(method == 2) waterCaustics3DTex(fragColor, fragCoord, 2);\n    if(method == 3) waterCaustics3DTex(fragColor, fragCoord, 3);\n    \n    if(method == 4) waterCaustics2DTex(fragColor, fragCoord, 0);\n    if(method == 5) waterCaustics2DTex(fragColor, fragCoord, 1);\n    if(method == 6) waterCaustics2DTex(fragColor, fragCoord, 2);\n    if(method == 7) waterCaustics2DTex(fragColor, fragCoord, 3);\n\n}","name":"Image","description":"","type":"image"}]}