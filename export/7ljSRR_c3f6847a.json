{"ver":"0.1","info":{"id":"7ljSRR","date":"1626968162","viewed":73,"name":"torus voronoi 2d","username":"CyanMARgh","description":"torus voronoi 2d","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","voronoi","torus"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct point {\n    vec2 p;\n    vec3 c;\n};\n\nfloat torusDist(vec2 a, vec2 b) {\n    a = abs(a - b);\n    return length(min(abs(a), abs(1. - a)));\n}\n\nconst int S = 8;\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.y;\n    uv = mod(uv, 1.);\n    point centers[S];\n    centers[0] = point(vec2(0., 0.), vec3(0., 0., 0.));\n    centers[1] = point(vec2(.7, .7), vec3(0., 0., 1.));\n    centers[2] = point(vec2(.3, .6), vec3(0., 1., 0.));\n    centers[3] = point(vec2(.2, .2 + .1*sin(iTime)), vec3(0., 1., 1.));\n    centers[4] = point(vec2(.2 + .1 * cos(iTime+1.), .4), vec3(1., 0., 0.));\n    centers[5] = point(vec2(.4, .4), vec3(1., 0., 1.));\n    centers[6] = point(vec2(.5, .3), vec3(1., 1., 0.));\n    centers[7] = point(vec2(.1, .5 + .3 * cos(iTime)), vec3(1., 1., 1.));\n    \n    \n    float md = 1e20;\n    vec3 col = vec3(1.);\n    for(int i = 0; i < S; i++) {\n        float d = torusDist(uv, centers[i].p);\n        if(d < md) {\n            md = d;\n            col = centers[i].c;\n        }\n    }\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}