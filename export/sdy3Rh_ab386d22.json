{"ver":"0.1","info":{"id":"sdy3Rh","date":"1631044402","viewed":104,"name":"Twisted Squares 2","username":"jin_x","description":"One more twisted squares :)","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["squares","twist"],"hasliked":0,"parentid":"NdGGR1","parentname":"Twisted Squares"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize pixel coordinates (y = -0.5..0.5, x = -xres/yres/2..xres/yres/2)\n    vec2 uv = fragCoord/iResolution.xy;\n    float ar = iResolution.x/iResolution.y;\n    uv -= 0.5;\n    uv.x *= ar;\n\n    // Background\n    float grad = cos(iTime);\n    float mult = (sin((atan(uv.y, uv.x)+iTime*0.3)*20.)+.5)*.2;\n    if (mult < 0.) { mult = 0.; }\n    vec3 col = vec3(mult*(grad+.5), mult*(.5-grad), 0.);\n    \n    float size = .0025;\n    grad = grad*.5 + .5;\n    for (int i = 0; i < 100; ++i) {\n        // Rotate image\n        float a = iTime*(3.-float(i/2)*.07), sa = sin(a), ca = cos(a);\n        vec2 uvr = uv * mat2(ca, -sa, sa, ca);\n        // Calculate color\n        if (abs(uvr.x) < size && abs(uvr.y) < size) {\n            float rg = float(100-i)*.05;\n            if ((i & 1) == 0) { col = vec3(rg*(1.-grad), rg*grad, 1.); }\n            else { col = vec3(0.); }\n            break;\n        }\n        size *= (i & 1) == 0 ? 1.075 : 1.025;\n    }\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}