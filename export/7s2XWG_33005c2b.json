{"ver":"0.1","info":{"id":"7s2XWG","date":"1620955315","viewed":188,"name":"out line - neon","username":"tramper2","description":"out line effect","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["bloom","neon"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.06, 0., 0.8, 1.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, .2, 1.0), c.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ){\n    float lod = 1.0;\n    \n    vec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec3 c = texture(iChannel0, uv).rgb;\n    \n    vec2 mot = vec2(0.0, 0.0);\n    for (float x = -1.0; x <= 1.0; x += 1.0) {\n    \tfor (float y = -1.0; y <= 1.0; y += 1.0) {\n        \tmot += vec2(x, y) * max(0.0, 1.0 - \n            distance(c, textureLod(iChannel0, uv + pow(2.0, lod) \n            *  vec2(x, y) / iResolution.xy, lod).rgb));\n    \t}\n    }\n    \n    float angle = atan(mot.y, mot.x) / 3.141592 / 5.0;\n    \n    \n    vec3 col = mix(c * 240.0 /255.0, hsv2rgb(vec3(fract(angle + 0.5 * iTime * 109.0 / 60.0 / 4.0), 4.0 * length(mot), 1.0)), step(0.25, length(mot)));\n    \n                        \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}