{"ver":"0.1","info":{"id":"MtlcWf","date":"1506791684","viewed":170,"name":"Anti-Aliased Circle","username":"doles","description":"example of drawing an anti-aliased circle in a fragment shader with constant thickness edge. this is just an experiment for some UI stuff.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","circle","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define COVERAGE_RADIUS 2.0\n#define EDGE_WIDTH      2.0\n\n#define BACKGROUND_COLOR vec4(1.0, 1.0, 1.0, 0.0)\n#define EDGE_COLOR       vec4(0.0, 0.0, 0.0, 1.0)\n#define FILL_COLOR       vec4(0.0, 1.0, 1.0, 1.0)\n\nfloat CircleMask(vec2 uv, float radius)\n{\n    float d = length(uv) - radius;\n    return smoothstep(COVERAGE_RADIUS, 0.0, d);\n}\n\nvec4 Circle(vec2 uv, float radius, float edgeWidth, vec4 edgeColor, vec4 fillColor)\n{\n    // Thickness \"radius\", plus an extra half pixel of coverage.\n    float thickness = edgeWidth*0.5+0.5;\n    \n    // Calculate mask for outer circle...\n    float edge = CircleMask(uv, radius);\n    \n    // Calculate mask for inner circle...\n    float fill = CircleMask(uv, radius - thickness);\n\n    return mix(\n        vec4(edgeColor.rgb, 0.0),\n        mix(\n            edgeColor,\n            fillColor,\n            fill\n        ),\n       \tedge\n    );\n}\n\nvec4 Blend(vec4 dst, vec4 src)\n{\n    return mix(dst, src, src.a);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    bool drawGrid  = true;\n    bool drawMouse = true;\n    \n    fragColor = BACKGROUND_COLOR;\n    \n    // Fill the background with a grid of crazy circles.\n    if(drawGrid)\n    {\n        float gridSize  = 32.0;\n        vec2  center    = gridSize*floor(fragCoord.xy/gridSize)+gridSize*0.5;\n        vec2  uv        = fragCoord.xy - center;\n        float radius    = (sin(center.x*0.8+iTime)*0.5+0.5)*(cos(center.y*0.8+iTime)*0.5+0.5)*gridSize*0.25+gridSize*0.25;\n\t\tfloat edgeWidth = radius * (sin(iTime*0.2)*0.5+0.5);\n        vec4  edgeColor = vec4(\n            0.0,\n            sin(iTime-center.y)*0.5+0.5,\n            cos(iTime-center.x)*0.5+0.5,\n            1.0\n        );\n\t\tvec4  fillColor = vec4(\n            sin(iTime-center.x)*0.5+0.5,\n            cos(iTime-center.y)*0.5+0.5,\n            0.0,\n            1.0\n        );\n        fragColor = Blend(\n            fragColor,\n            Circle(\n                uv,\n                radius,\n                edgeWidth,\n                edgeColor,\n                fillColor\n            )\n        );\n    }\n\n    // Blender a larger circle under the mouse over the grid.\n    if(drawMouse)\n    {\n        vec2  uv     = fragCoord.xy - iMouse.xy;\n        float radius = min(iResolution.x,iResolution.y) * 0.25;\n        fragColor = Blend(\n            fragColor,\n            Circle(\n                uv,\n                radius,\n                EDGE_WIDTH,\n                EDGE_COLOR,\n                FILL_COLOR\n            )\n        );\n    }\n}\n","name":"Image","description":"","type":"image"}]}