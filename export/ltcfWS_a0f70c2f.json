{"ver":"0.1","info":{"id":"ltcfWS","date":"1540822771","viewed":368,"name":"Glitchy Static Effect","username":"Nihilistic_Furry","description":"Adds procedural glitchy static effect to default shader. This uses the famous \"rand () one-liner\" function. The background can be changed to anything, and the effect could be toggled on and off based off of what is going on in a game, for example.","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["noise","static","glitchy"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Rand one-liner\nfloat rand(vec2 co)\n{\n\treturn fract (sin (dot (co.xy, vec2 (12.9898, 78.233))) * 43758.5453);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.5 + 0.5 * cos (iTime + uv.xyx + vec3 (0, 2, 4));\n    \n    // If time is in glitch state, \n    if (rand (vec2 (iTime, iTime)) > 0.9) \n    {\n        float noise = rand (uv * iTime);\n        col *= vec3 (noise, noise, noise);\n    }\n\n    // Output to screen\n    fragColor = vec4 (col, 1.0);\n}","name":"Image","description":"","type":"image"}]}