{"ver":"0.1","info":{"id":"mdfXzf","date":"1669305648","viewed":67,"name":"dans_jumper","username":"danbshading","description":"jumper","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["jumper"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random (vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    // Time varying pixel color\n    vec3 col = vec3(1.0);\n    uv += vec2(0.08*iTime,0.04*iTime);\n    uv *= 75.0;\n    //uv += vec2(iTime,1.5*iTime);\n    vec2 fPos = fract(uv);\n    vec2 iPos = floor(uv);\n    \n    \n    vec2 fColourGrid = vec2(fPos.x*6.0,6.0*fPos.y);\n    vec2 iColourGrid = vec2(iPos.x*6.0,6.0*iPos.y);\n    \n    //normalised 0 to 1\n    float stripe = 0.5*(sin(uv.x + uv.y) + 1.0);\n    stripe = smoothstep(0.2,0.53,stripe);\n    \n    vec3 broadLines = vec3(0.5*((sin(uv.x + uv.y)) + 1.3));\n    vec3 blurredLines = vec3(stripe);\n    vec3 steppedLines = vec3(step(0.5,stripe));\n    vec3 clampedLines = vec3(clamp(blurredLines.x,0.0,1.0));\n    vec3 squares = vec3(2.0*random(iPos));\n    \n    vec3 stripeMask =  blurredLines - clampedLines* (1.0-broadLines) * squares;\n    \n    vec3 grey = vec3(0.65,0.55,0.55);\n    vec3 yellow = 0.85*vec3(1.0,0.85,0.05);\n    vec3 white = vec3(0.97);\n    float lineValue = random(vec2(sin(iColourGrid.x)));\n    \n    // Step will return 0.0 unless the value is over 0.5,\n    // in that case it will return 1.0\n    //float y = step(0.5,st.x);\n    float greyMask = step(0.0,lineValue)*step(lineValue,0.35);\n    float yellowMask = step(0.35,lineValue)*step(lineValue,0.7);\n    float whiteMask = step(0.7,lineValue)*step(lineValue,1.0);\n    \n    vec3 lineColour = greyMask* grey + yellowMask*yellow + whiteMask*white;\n    lineColour -= vec3(0.6*(1.0 - 1.0*smoothstep(0.0,0.1,fColourGrid.x)) + (1.0 - 1.0*smoothstep(0.9,1.0,fColourGrid.x))) ;\n    //lineColour = lineColour * step(0.0000001,random(iColourGrid + lineColour.xy));\n    // Output to screen\n    fragColor = vec4( lineColour*stripeMask,1.0);\n}","name":"Image","description":"","type":"image"}]}