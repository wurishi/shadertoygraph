{"ver":"0.1","info":{"id":"wtf3R2","date":"1556902016","viewed":433,"name":"Perlinfall 2","username":"FabriceNeyret2","description":"multiscale variant of [url]https://shadertoy.com/view/ttfGzj[/url]\n","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["perlinnoise","short","gradientnoise","isovalue","jittering","motionwithoutmovement"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// multiscale variant of https://shadertoy.com/view/ttfGzj\n\n// Perlin noise\n#define P     ( v = smoothstep(0.,1.,fract(V)), .55+.75*mix( Py(0), Py(1), v.y) )\n#define Px(x,y) dot( hash( C = floor(V) + vec2(x,y) ), V-C )\n#define Py(y)   mix( Px(0,y), Px(1,y), v.x)\n#define hash(p) ( 2.* fract(sin( (p) * mat2(127.1,311.7,269.5,183.3))*43758.5453123) -1.)\n\nvoid mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = u / R.y, V = 15.*U, C, v; V.y += iTime;\n    \n    float p = P;// Perlin noise\n    V *= 2.; p += P/2.;\n    V *= 2.; p += P/4.;\n    V *= 2.; p += P/8.;  \n    p /= 2.;\n\n    O = vec4( (.35+.35*U.y-p) / fwidth(p) ); // * vec4(.5,.7,1.2,1);\n}","name":"Image","description":"","type":"image"}]}