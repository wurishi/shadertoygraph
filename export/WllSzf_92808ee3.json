{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define PI 3.14159265359\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\nvec2 tile(vec2 st, float zoom){\n    st *= zoom;\n        if (mod(floor(st.x), 2.) == 0.){\n        st = rotate2D(st, PI*.5);\n    }\n    return fract(st);\n}\nfloat ovalGradient(vec2 st, float radius, float xPos) {\n    return smoothstep(radius- .1, radius + .9, 1. -length(st - .5));\n}\nfloat threadedEdges(vec2 st, float width){\n    return 1.0 - smoothstep(0., width, st.x) + smoothstep(1.-width, 1., st.x);\n}\nvec3 canvasPattern(vec2 st, float width, float radius, float xPos){\n    vec3 color = vec3(0.);\n    st *= 100.;\n    st.x *= .5;\n    \n    vec2 st_i = floor(st);\n\n    if (mod(st_i.y,2.) == 1.) {\n        st.x -= .5;\n    }\n    vec2 st_f = fract(st);\n    color.r = 214.0/255.0;\n    color.g = 206.0/255.0;\n    color.b = 192.0/255.0;\n    \n    float pct = threadedEdges(st_f, width);\n    pct += ovalGradient(st_f,radius, xPos);\n    color += pct;\n\n    return color;\n}\n\nfloat circle(vec2 st, float radius){\n    vec2 pos = vec2(0.5)-st;\n    radius *= 0.75;\n    return 1.-smoothstep(radius-(radius*0.05),radius+(radius*0.05),dot(pos,pos)*3.14);\n}\n\nfloat circlePattern(vec2 st, float radius) {\n    return  circle(st+vec2(0.,-.5), radius)+\n            circle(st+vec2(0.,.5), radius)+\n            circle(st+vec2(-.5,0.), radius)+\n            circle(st+vec2(.5,0.), radius);\n}\nfloat splatter(vec2 st, float radius){\n    st -= .5;\n    float pct = smoothstep(radius, radius -.01, length(st));\n    st.x -= .18;\n    pct += smoothstep(radius*.5, radius*.5 - .01, length(st));\n    st.x += .36;\n    pct += smoothstep(radius*.5, radius*.5 - .01, length(st));\n    st.y -= .15;\n    st.x -= .09;\n    pct += smoothstep(radius*.5, radius*.5 - .01, length(st));\n    st.x -= .21;\n    st.y += .03;\n    pct += smoothstep(radius*.5, radius*.5 - .01, length(st));\n    st += .3;\n    pct += smoothstep(radius*.3, radius*.3 - .01, length(st));\n    st += .1;\n    pct += smoothstep(radius*.2, radius*.2 - .01, length(st));\n    st += .05;\n    pct += smoothstep(radius*.3, radius*.3 - .01, length(st));\n    st.x +=.1;\n    pct += smoothstep(radius*.2, radius*.2 - .01, length(st));\n    return pct;\n}\n\nfloat proceduralSplatter(vec2 st, float radius, float numCircles){\n    float pct = 0.;\n    st.x -= .5;\n    for (float i = 1.; i < numCircles; i++){\n        st.y -=(.3 / (i+1.));\n        pct +=smoothstep(radius * 1./i, radius * 1./i - .1, length(st));\n    }\n    return pct;\n}\n\nfloat splatterPattern(vec2 st, float radius){\n    return splatter(st + vec2(0., -.1), radius + .1) +\n            splatter(st + vec2(0., -.2), radius - .1) +\n            splatter(st + vec2(-.1, 0.), radius + .2) +\n            splatter(st + vec2(-.2, 0.), radius - .2) ;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n\tvec2 st = fragCoord/iResolution.xy;\n    float aspect = iResolution.x/iResolution.y;\n    st.x *= aspect;\n    vec3 color = canvasPattern(st, .1, .5, .1);\n    float time = iTime;\n    vec2 grid2 = tile(st,1.8);\n    grid2.y -= .003 * iMouse.y;\n    color = mix(color, vec3(0.2,0.52,0.502 *(iMouse.x * .003)), proceduralSplatter(grid2, .2 , 10.));\n    vec2 grid3 = tile(st, 3.);\n    grid3 -= .1;\n    color = mix(color, vec3(0.6, 0.3, 0.3), proceduralSplatter(grid3, .2 * sin(time), 9.));\n\tfragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"WllSzf","date":"1563780671","viewed":146,"name":"Paint Marks on Canvas","username":"gbunny","description":"Green/Blue marks change color according to mouse position x.\nGreen/Blue marks change position according to mouse position y.\nRed marks grow and shrink with time.\nMarks darken and deepen as layered on repeated canvas texture.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["interactive","painting","brushstroke"],"hasliked":0,"parentid":"","parentname":""}}