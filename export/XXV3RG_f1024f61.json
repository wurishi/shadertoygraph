{"ver":"0.1","info":{"id":"XXV3RG","date":"1717802370","viewed":41,"name":"First ever shader!","username":"vexeo","description":"An oscillating circle","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["circle"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Mapping pixel coordinates into a UV-space ( 0 -> 1)\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5; // the same as \"-= vec2(0.5)\" -> component wise subtraction\n    uv.x *= iResolution.x/iResolution.y; // Makes the UV-space a square!\n    \n    // Render a circle as a function of the current UV coordinates\n    // Make the color of the pixel a function of the pixel's coordinates\n    float r = 0.5; // radius of circle\n    vec2 center = vec2(sin(iTime) * 0.5,0);\n    float dist = length(uv - center);\n    float c = smoothstep(r,r+0.02,dist);\n    \n    // Output to screen\n    fragColor = vec4(vec3(c), 1.0);\n}","name":"Image","description":"","type":"image"}]}