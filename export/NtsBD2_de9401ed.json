{"ver":"0.1","info":{"id":"NtsBD2","date":"1651507863","viewed":90,"name":"Inverse Hashing","username":"Chrisy","description":"inverse hashing! Chris Wellons.\ninitial shader setup by Fabrice Neyret.  \n\nCheck out the original link. Very good use case of finding a solution not by manually tweaking but let processors do the  heavy lifting.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["hash"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// --- from Chris Wellons https://nullprogram.com/blog/2018/07/31/\n// Note that it might not be costlier than the infamous fract(big*sin(big*x)) ;-) \n\n        // --- choose one:\n#define hashi(x)   lowbias32(x)\n\n\n  #define hash(x)  ( float( hashi(x) ) / float( 0xffffffffU ) )\n\n\n\n// exact bias: 0.020829410544597495\n\nuint triple32inc(uint  x)\n{\n    x++;\n    x ^= x >> 17;\n    x *= 0xed5ad4bbU;\n    x ^= x >> 11;\n    x *= 0xac4c1b51U;\n    x ^= x >> 15;\n    x *= 0x31848babU;\n    x ^= x >> 14;\n    return x;\n}\n\n// inverse\n\nuint triple32inc_r(uint  x)\n{\n    x ^= x >> 14 ^ x >> 28;\n    x *= 0x32b21703U;\n    x ^= x >> 15 ^ x >> 30;\n    x *= 0x469e0db1U;\n    x ^= x >> 11 ^ x >> 22;\n    x *= 0x79a85073U;\n    x ^= x >> 17;\n    x--;\n    return x;\n}\n\nvoid mainImage( out vec4 O, vec2 U )\n{\n\n    vec2 uv = ( U.xy / iResolution.xy );\n    vec4 t =  texture(iChannel0,uv);\n    float comb = (t.x+t.y+t.z+t.w)/4.0;\n    uint uc = floatBitsToUint(comb);\n    uvec2 uu = uvec2(U);\n    uint h = triple32inc( uc  ); // clean 2D hash\n    uint ih = triple32inc_r(h);\n    \n    //hashed\n    O = vec4( uintBitsToFloat(h) );\n    // inversed from the hashed..  \n    if(uv.x>0.5)O = vec4( uintBitsToFloat(ih) );\n    \n\n}","name":"Image","description":"","type":"image"}]}