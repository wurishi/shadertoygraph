{"ver":"0.1","info":{"id":"dsfczS","date":"1686910460","viewed":131,"name":"Oily Black Hole","username":"kanduvisla","description":"My second non-tutorial shader :-P","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["wavy"],"hasliked":0,"parentid":"DdfyRB","parentname":"Wavy CheckerBoard"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926538\n\nfloat calculateColor( vec2 uv, float d, float offset )\n{\n    return\n        step(0.5, 0.5 + sin(\n            (sin((uv.x / 10.) + iTime / 10.) + sin(uv.y) * d) +\n                // We add the similar step for the Y-axis, and\n                // multiply it with PI so it matches with the outer sin func\n                (step(0.9 + (0.1 - d / 50.), 0.5 + cos(\n                    cos(offset + (iTime) + (uv.x * 3.)) + (uv.y * d * 2.)\n                ) * 0.5) * PI)\n        ) * 0.5);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n\n    // Checkerboard:\n    float d = length(uv);\n    \n    vec3 col = vec3(\n        calculateColor( uv, d * 1.25, (PI / d) * 0.03),\n        calculateColor( uv, sin(d), (PI / d) * 0.09),\n        calculateColor( uv, sin(d * d), (PI / d) * 0.2)\n    );\n    col /= pow(d, d);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}