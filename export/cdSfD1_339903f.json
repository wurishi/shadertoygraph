{"ver":"0.1","info":{"id":"cdSfD1","date":"1689636448","viewed":56,"name":"Colorful blobs","username":"Sirplentifus","description":"Not my original idea","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["blobs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int N = 10;\nvec2 PList[N];\nvec2 P0List[N];\nvec2 VList[N];\nvec3 CList[N];\n\nvec3 palette2( float t ) {\n    vec3 a = vec3(0.7, 0.1, 0.1);\n    vec3 b = vec3(0.8, 0.7, 0.2);\n    return a + (b-a)*smoothstep(0.0, 1.00, t);\n}\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.500, 0.500, 0.000);\n    vec3 b = vec3(0.668, 0.308, 0.000);\n    vec3 c = vec3(0.108, 0.608, 0.000)/1.5;\n    vec3 d = vec3(0.048, -0.002, 0.268);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 rgb2hsv(vec3 c)\n{\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float d;\n    int i;\n    \n    for (i=0; i<N; i++) {\n        P0List[i] = fract(vec2(sqrt(2.0),sqrt(3.0))*float(i));\n        VList[i] = fract(vec2(sqrt(5.0),sqrt(7.0))*float(i))*2.0-1.0;\n        CList[i] = hsv2rgb(vec3(fract(sqrt(5.0)*10.0*float(i)),1.0,1.0));\n        PList[i] = fract(P0List[i] + VList[i]*float(iTime)/5.0);\n    }\n\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 c = vec3(0.0,0.0,0.0);\n    for (i=0; i<N; i++) {\n        c += CList[i]*pow(1000.0*length(min(abs(PList[i] - uv), 1.0-abs(PList[i] - uv)))/1.7, -1.0);\n    }\n    \n    //if(mod(iTime, 10.0) < 10.0){\n        //float lc = length(c)/sqrt(3.0);\n        float lc = max(c.x,max(c.y,c.z))/1.05;\n        lc = smoothstep(0.035, 0.038, lc);\n        c = c/max(c.x,max(c.y,c.z))*lc;\n        \n    \n    //} else {\n        //c = smoothstep(0.042, 0.05, c);\n        //c = pow(c, vec3(1.0/2.2) );\n    //}\n    \n    \n    // Output to screen\n    fragColor = vec4(c,1.0);\n}","name":"Image","description":"","type":"image"}]}