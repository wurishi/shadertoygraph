{"ver":"0.1","info":{"id":"fljyWd","date":"1650408874","viewed":568,"name":"Bokeh in 269 chars","username":"Xor","description":"I've had some fun exploring bokeh shaders lately","likes":32,"published":1,"flags":0,"usePreview":0,"tags":["blur","bokeh","2tweets","golf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGzn","filepath":"/media/a/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","previewfilepath":"/media/ap/585f9546c092f53ded45332b343144396c0b2d70d9965f585ebc172080d8aa58.jpg","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//<300 chars playlist: https://www.shadertoy.com/playlist/fXlGDN\n\nvoid mainImage(out vec4 O, vec2 I)\n{\n    \n    //Rotation direction vector:\n    vec3 d = sin((iTime-vec3(0,iTime,55))*.2),\n    //Shortened from: vec3(sin(iTime*.2), 0, cos(iTime*.2))\n    \n    //Resolution for ray calculation.\n    r = iResolution,\n    //Compute (unnormalized) ray direction.\n    c = vec3(I+I-r.xy,r)/r.x,\n    //Sample point offset (should have length of proportional to blur radius).\n    p = d*d.zyy/2e2,\n    //In this case it's effectively: vec3(sin(iTime*.2)*cos(iTime*.2), 0, 0)/2e2\n   \n    //Initialize sample radius at 1.0.\n    i = r/r;\n    \n    //Clear fragColor, with \"i\" approximating the sqrt of the number of iterations.\n    //So i < 16 means around 256 texture samples.\n    for(O-=O; i.x<16.; i+=1./i)\n    \n        //Rotate sample point by golden angle.\n        //Shortened thanks to iapafoto.\n        p.xy *= mat2(0,.061,1.413, 0)-.737,\n        //Add samples exponentially (a bit like a \"smooth maximum\").\n        O += exp(texture(iChannel0, mat3(-d.z,d.yxy,1,0,d)*(c+p*i))/.1);\n        \n    //Convert back to linear color (but darkened a bit)\n    O = log(O)-5.;\n    //Average by total sample weight via alpha channel.\n    O /= O.a;\n}","name":"Image","description":"","type":"image"}]}