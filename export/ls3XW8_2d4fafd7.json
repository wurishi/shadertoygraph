{"ver":"0.1","info":{"id":"ls3XW8","date":"1458971620","viewed":1099,"name":"Isometric Grid 2 (108 chars)","username":"FabriceNeyret2","description":"code golfing of  lejeunerenard's https://www.shadertoy.com/view/ltjGWt","likes":10,"published":3,"flags":0,"usePreview":0,"tags":["procedural","2d","grid","isometric","pattern","short","onetweet"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// code golfing of  lejeunerenard's https://www.shadertoy.com/view/ltjGWt\n\n/**/      // 108 chars\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U =  fract( vec2(4,6.7) * U/iResolution.y );\n\n    O = vec4( U.x < .5 == U.x < 1.-U.y == U.x < U.y );\n}\n/**/\n\n\n\n\n\n/**      // 110 chars\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    O = vec4( U.x < .5 == U.x < 1.-U.y == U.x < U.y );\n}\n/**/\n\n\n\n/**      // 121 chars\n\nvoid mainImage( out vec4 O,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    O = vec4( (U.x < .5) == ( ( U.x + U.y < 1.) == ( U.x - U.y < 0. )));\n}\n/**/\n\n\n\n/**      // 140 chars\n\nvoid mainImage( out vec4 o,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    o = vec4(U.x + U.y < 1., U.x - U.y < 0., U.x < .5, 1);\n    o +=  abs(o.z - abs(o.x-o.y))-o;\n}\n/**/\n\n\n\n/**      // 150 chars\n\nvoid mainImage( out vec4 o,  vec2 U )\n{\n    U.y *= 5./3.;\n    U =  fract( 4.*U/iResolution.y);\n\n    float s = abs(   step( U.x + U.y, 1.)\n                   - step( U.x - U.y, 0.)\n                         ),\n          d  = step( U.x, .5);   \n    \n\to +=  abs(d - s)-o;\n}\n/**/\n","name":"Image","description":"","type":"image"}]}