{"ver":"0.1","info":{"id":"4td3D4","date":"1469304596","viewed":231,"name":"Schlicht circles","username":"DomDomHaas","description":"Raytraced Black and white circles with sidewise movement","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["circles"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec3 tempFrace;\n\nfloat map(vec3 p){\n     tempFrace = fract(p) * 2.0 - 1.0;\n\n    return length(tempFrace) - 0.25;\n}\n\nfloat tempTrace;\n\nfloat trace(vec3 origin, vec3 ray){\n\n    tempTrace = 0.0;\n\n    for(int i = 0; i < 32; i++){\n        vec3 point = origin + ray * tempTrace;\n        float d = map(point);\n        tempTrace += d * 1.5;\n    }\n\n    return tempTrace;\n}\n\n\n\nvec3 origin;\nvec3 ray;\nvec2 uv;\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord)\n{\n    uv = fragCoord.xy / max(iResolution.x,iResolution.y);\n\n    uv = uv * 2.0 - 1.0;\n\n    //uv.x *= iResolution.x / iResolution.y;\n\n    ray = normalize(vec3(uv, 1.0));\n\n    float the = iTime * 0.2;\n    //ray.zx *= mat2(cos(the), -sin(the), sin(the), cos(the));\n    \n    origin = vec3(the, 0, 0);\n\n    float t = trace(origin, ray);\n    \n    //float random = cos(iTime);\n\n    float fog = 1.0 / (-1.0 + t * t * 0.1);\n\n    vec3 fc = vec3(fog);\n\n    fragColor = vec4(fc, 1.0);\n}","name":"Image","description":"","type":"image"}]}