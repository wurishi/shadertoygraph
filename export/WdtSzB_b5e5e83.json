{"ver":"0.1","info":{"id":"WdtSzB","date":"1572284706","viewed":90,"name":"Adjustable Checkerboard Graphics","username":"FelixTheWolfrick","description":"Trying to make a black and white checkerboard for my modern graphics programming class.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["blackandwhite","wip","checkerboard","workinprogress"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Rows & Columns\nfloat row = 15.0;\nfloat cols = 15.0;\n\n//Colors\nvec4 blackTile = vec4(0.0, 0.0, 0.0, 1.0);\nvec4 whiteTile = vec4(1.0, 1.0, 1.0, 1.0);\nvec4 bk = vec4(1.0, 0.0, 0.0, 1.0); //Distinguish bk from tiles\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    //Aspect Ratio\n    float aspRx = iResolution.x / iResolution.y;\n    float aspRy = iResolution.y / iResolution.x;\n    float modify = step((row / cols), aspRy);\n    uv.x *= aspRx;\n    uv.y *= aspRx;\n    \n    //Tile uv\n    uv.x *= row;\n    uv.y *= cols;\n   \tuv.x *= ((aspRx * modify)) + (1.0 - modify);\n    uv.x /= (((row / cols) * modify) + (1.0 - modify));\n    uv.y *= ((aspRy * (1.0 - modify)) + modify);\n    uv.y /= (((cols / row) * (1.0 - modify)) + modify);\n    \n    //Check if cut off\n    float cutX = step(floor(row), uv.x);\n    float cutY = step(floor(cols), uv.y);\n    \n    //Check if odd or even\n    float evenOddX = mod(floor(uv.x), 2.0);\n    float evenOddY = mod(floor(uv.y), 2.0);\n    \n    // Output to screen\n    vec4 col = mix(whiteTile, blackTile, abs(evenOddY - evenOddX));\n    col = mix(col, bk, cutY);\n    fragColor = mix(col, bk, cutX);\n}","name":"Image","description":"","type":"image"}]}