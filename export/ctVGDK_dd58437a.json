{"ver":"0.1","info":{"id":"ctVGDK","date":"1684687234","viewed":131,"name":"Yet Another radial blur shader","username":"VEShaderStuff","description":"If you use this shader, do NOT remove the comment on the first line","likes":1,"published":3,"flags":0,"usePreview":1,"tags":["blur","radial"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Shader by SomeGuyWhoLikesFNF\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Center point of the blur effect\n    vec2 center = iResolution.xy / 2.0;\n\n    // Radius of the blur effect\n    float radius = 1. * length(fragCoord - center);\n\n    // Number of samples for the blur\n    int numSamples = 17;\n    \n    // Accumulate color and weight for each sample\n    vec3 accumulatedColor = vec3(0.0);\n    float totalWeight = 0.0;\n\n    for (int i = 0; i < numSamples; i++)\n    {\n        // Calculate the current sample position\n        float angle = 2.0 * 3.14159 * float(i) / float(numSamples);\n        vec2 offset = vec2(sin(angle), sin(angle)) * radius / 100.;\n        vec2 samplePos = fragCoord + offset;\n\n        // Sample the color from the original image\n        vec4 sampleColor = texture(iChannel0, samplePos / iResolution.xy);\n\n        // Calculate the weight based on the distance from the center\n        float distance = length(offset);\n        float weight = radius - smoothstep(0.0, radius, distance);\n\n        // Accumulate the color and weight\n        accumulatedColor += sampleColor.rgb * weight;\n        totalWeight += weight;\n    }\n\n    // Normalize the accumulated color\n    vec3 blurredColor = accumulatedColor / totalWeight;\n\n    // Output the final color\n    fragColor = vec4(blurredColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}