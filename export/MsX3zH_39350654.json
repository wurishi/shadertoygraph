{"ver":"0.1","renderpass":[{"outputs":[],"inputs":[],"code":"#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\n\nfloat hash( float n )\n{\n    return fract(sin(n)*43758.5453);\n}\n\n\nfloat noise( in vec3 x )\n{\n    vec3 p = floor(x);\n    vec3 f = fract(x);\n\n    f = f*f*(3.0-2.0*f);\n\n    float n = p.x + p.y*57.0 + 113.0*p.z;\n\n    float res = mix(mix(mix( hash(n+  0.0), hash(n+  1.0),f.x),\n                        mix( hash(n+ 57.0), hash(n+ 58.0),f.x),f.y),\n                    mix(mix( hash(n+113.0), hash(n+114.0),f.x),\n                        mix( hash(n+170.0), hash(n+171.0),f.x),f.y),f.z);\n    return res;\n}\n\nfloat ease(float t, float b, float c, float d) {\n\tt /= d;\n\tt--;\n\treturn -c * (t * t * t * t - 1.0) + b;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 position = ( fragCoord.xy / iResolution.xy );\n\n\tfloat w = (position.x - (iMouse.x / iResolution.x)) * (iResolution.x / iResolution.y);\n\tfloat h = position.y - iMouse.y / iResolution.y;\n\tvec2 dir = normalize(vec2(w, h));\n\tfloat distMouse = sqrt(w * w + h * h);\n\tfloat tmp = ease(distMouse, 0.0, 20.0, 0.3);\n\t\n\t\t\n\tfloat noi = noise(vec3(position.xy * 30.0 + dir * tmp,  iTime * 120.0));\n\tfragColor = vec4(noi, noi, 0.0, noi);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"MsX3zH","date":"1362395852","viewed":171,"name":"mothshader","username":"ushiostarfish","description":"moth","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""}}