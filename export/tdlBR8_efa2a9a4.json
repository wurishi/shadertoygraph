{"ver":"0.1","info":{"id":"tdlBR8","date":"1589487243","viewed":62,"name":"Simple Displacement Ripple","username":"jpweeks","description":"Simple ripple animation","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926\n\nfloat concentric(vec2 m, float repeat, float t) {\n    float r = length(m);\n    float v = sin((1.0 - r) * (1.0 - r) * repeat + t) * 0.5 + 0.5;\n    return v;\n}\n\nfloat radial(vec2 m, vec2 repeat, float t) {\n    float r = length(m);\n    float a = abs(atan(m.y, m.x) + PI);\n    float v = sin(a * repeat.x + sin(r * repeat.y) + t) * 0.5 + 0.5;\n    return v;\n}\n\nfloat spiral(vec2 m, float repeat, float dir, float t) {\n\tfloat r = length(m);\n\tfloat a = atan(m.y, m.x);\n\tfloat v = sin(repeat * (sqrt(r) + (1.0 / repeat) * dir * a - t)) * 0.5 + 0.5;\n\treturn v;\n}\n\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float aspect = iResolution.x / iResolution.y;\n    vec2 uv = (fragCoord / iResolution.xy * 2.0 - 1.0) * vec2(1.0, 1.0 / aspect);\n    float r = length(uv);\n    \n    float c0 = 1.0 - sin(r * r) * 2.0;\n    float c1 = concentric(uv, 50.0, iTime * 3.0) * 0.5 + 0.5;\n    float c2 = radial(uv, vec2(5.0, 30.0), iTime * 4.0) * 0.2 + 0.8;\n    float c3 = spiral(uv, 90.0, 1.0, iTime * 0.1) * 0.9 + 0.1;\n    float c4 = spiral(uv, 60.0, -1.0, iTime * 0.1) * 0.8 + 0.2;\n    \n    vec3 col = vec3(c0 * c1 * c2 * c3 * c4);\n    //col = vec3(c1);\n    \n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}