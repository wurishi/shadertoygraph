{"ver":"0.1","info":{"id":"ttyfDt","date":"1615270542","viewed":155,"name":"Distance to heartbeat","username":"MillerHimself","description":"Heartbeat like wave created using distance estimation described here:\nhttps://www.shadertoy.com/view/MdfGWn\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["math","distanceestimation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat frequency = 4.0;\nfloat timeScale = 7.0;\nfloat amplitudeScale = 4.0;\nfloat error;\n\n\nfloat df(vec2 p)\n{\n    float x = (p.x * frequency) + iTime * timeScale;\n\n    //float f = sin(x)  - (p.y) * amplitudeScale;   \n    float f = (sin(x * 4.0f) + (sin(x * 16.0f) / 4.0f)) * 2.0f *(-(floor(sin(x * 2.0f)) + 0.1f)) * floor(mod(sin(x), 2.0f));\n    \n    float d = f - p.y * amplitudeScale;\n    return abs(d);\n}\n\n\nfloat distanceestimate(vec2 p)\n{\n    float f = df(p);\n    float g = length( vec2(df(p+vec2(error,0.0))-df(p-vec2(error,0.0)),\n                           df(p+vec2(0.0,error))-df(p-vec2(0.0,error))) )/(15.0*error);\n    return f/g;\n\n}\n\n\nvoid mainImage( out vec4 o, in vec2 u )\n{\n    vec2 R = iResolution.xy;\n\tvec2 U = (2.0*u-R.xy) / R.y;    \n    error = 2.0/R.y;\n    \n\tfloat f = distanceestimate(U);\n\n\to = vec4(0.1,1.0,0.1, 1.0) * smoothstep( 0.11, 0.1, f );\n}","name":"Image","description":"","type":"image"}]}