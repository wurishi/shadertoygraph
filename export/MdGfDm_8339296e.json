{"ver":"0.1","info":{"id":"MdGfDm","date":"1529063010","viewed":111,"name":"Iterated sine fractal (zoom)","username":"ws","description":"Mandelbrot-like fractal from iterated sine. Click to zoom.\n\nhttp://mathworld.wolfram.com/MandelbrotSet.html","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["fractal","mandelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 cmul(vec2 a, vec2 b) { // complex multiply\n    return mat2(a.x, a.y, -a.y, a.x) * b;\n}\n\nvec2 cinv(vec2 z) { // 1/z\n    return vec2(z.x, -z.y) / dot(z,z);\n}\n\nvec2 cdiv(vec2 a, vec2 b) { // a/b\n    return cmul(a, cinv(b));\n}\n\nvec2 cexp(vec2 z) { // complex exp\n    return exp(z.x) * vec2(cos(z.y), sin(z.y));\n}\n\nvec2 csin(vec2 z) { // complex sine\n    // sin(z) = (i/2) * (e^(-iz) - e^(iz))\n    vec2 w = cexp(vec2(z.y, -z.x)) - cexp(vec2(-z.y, z.x));\n    return 0.5*vec2(-w.y, w.x);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    vec2 m = iMouse.xy / iResolution.xy;\n    float zoom = 0.05;\n    vec2 size = vec2(2.0);\n    //size.x *= iResolution.x/iResolution.y;\n    vec2 center = vec2(0.0);\n    if (iMouse.z > 0.0) {\n        center += size * (m - 0.5);\n        size *= zoom;\n    }\n    p = center + size * (p - 0.5);\n    \n    int max_iters = 200;\n    vec2 z = p;\n    float v = 0.0;\n    for (int i = 0; i < max_iters; i++) {\n        z = csin(cdiv(z, p));\n        if (dot(z,z) > 1.e6) {\n            v = 1.0 - float(i)/float(max_iters);\n            break;\n        }\n    }\n    \n    fragColor = mix(vec4(40.,  97.,  71.,  255.)/255.,\n                    vec4(184., 210., 130., 255.)/255.,\n                    pow(v,6.));\n}","name":"Image","description":"","type":"image"}]}