{"ver":"0.1","info":{"id":"ll2yDc","date":"1510472519","viewed":411,"name":"oi","username":"Imsure1200q_1UWE130","description":"oi","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["oi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sd(vec3 p)\n{\n    vec3 pos = p;\n    float x;\n    float s1 = length(sqrt(abs(pos)))-0.5;\n    float s2 = length(floor(abs(pos)))+0.3;\n    x = s1*sqrt(sqrt(s2));\n    return x;\n}\nfloat trace(vec3 ro, vec3 rd)\n{\n    float t = 0.0;\n    for(int i = 0; i < 24; i++)\n    {\n        vec3 p = ro+t*rd;\n        float shape = sd(p);\n        t += shape * 0.5;\n    }\n    return t;\n}\nmat2 rot(float t)\n{\n    return mat2(-cos(t), sin(t), sin(t), cos(t));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    float X = iMouse.x / iResolution.x;\n    float Y = iMouse.y / iResolution.y;\n    vec2 uv = fragCoord / iResolution.xy;\n    uv = uv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n    vec3 rd = normalize(vec3(uv, 1.0));\n    float time = iTime;\n    rd.xz *= mat2(-cos(time+X*2.5+res.x/2.), sin(time+X*2.5+res.x/2.),\n                  sin(time+X*2.5+res.x/2.), cos(time+X*2.5+res.x/2.));\n    //rd.xy *= mat2(cos(time+X+Y), -sin(time+X+Y), sin(time+X+Y), cos(time+X+Y));\n    //rd.yx *= mat2(cos(time+Y+X), sin(time+Y+X), -sin(time+Y+X), cos(time+Y+X));\n    vec3 ro = vec3(-sin(time), 0, -cos(time));\n    float t = trace(ro, rd);\n    float fog = 1.0/(1.0+t*t*0.1);\n    vec3 fc = vec3(1./t);\n    fragColor = vec4(fc, 1.0) - .5+vec4(0.025,0.025,0.6,1.);\n}","name":"Image","description":"","type":"image"}]}