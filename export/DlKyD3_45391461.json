{"ver":"0.1","info":{"id":"DlKyD3","date":"1700733401","viewed":58,"name":"练习（球体）","username":"Vigor09","description":"别人写的效果，有些计算还是不太理解，保存下来慢慢理解注释看看","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"mat2 rot(float angle){\n    float c= cos(angle);\n    float s = sin(angle);\n    return mat2(c,-s,s,c);\n}\nfloat map(vec3 p){\n    return length(p)-1.0;\n}\n\nfloat Raymarch(vec3 ro,vec3 rd){\n    float d;\n    for(int i =0;i<30;i++){\n        vec3 p =ro+rd*d;\n        float d0 = map(p);\n        if(d0<=0.001||d>=40.) break;\n        d+=d0;\n    }\n    return d;\n}\nvec3 GetNormal(vec3 p){\n    float d = map(p);\n    vec2 e = vec2(0.001,0.0);\n    float dx = d-map(p-e.xyy);\n    float dy = d-map(p-e.yxy);\n    float dz = d-map(p-e.yyx);\n    return normalize(vec3(dx,dy,dz));\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;    \n    uv-=0.5;\n    uv.x*=iResolution.x/iResolution.y;\n    vec3 col = vec3(0.0);\n    \n    vec3 ro = vec3(0.0,0.0,-3);\n    vec3 rd  = normalize(vec3(uv,1.0));\n    \n    float d= Raymarch(ro,rd);\n    if(d<40.0){\n        vec3 p = ro+rd*d;\n        vec3 n  = GetNormal(p);\n        vec3 lightPos = vec3(0,5,-5.0); \n        lightPos.xz*=rot(iTime);    \n        vec3 lightdir = normalize(lightPos-p);\n        float diffuse = dot(n,lightdir);\n        diffuse =diffuse*.5+.5;\n        vec3 color = vec3(0.2,0.7,0.4);\n        col+=diffuse*color;\n    }\n   \n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}