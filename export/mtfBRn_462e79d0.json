{"ver":"0.1","info":{"id":"mtfBRn","date":"1694657587","viewed":34,"name":"Circle and box ","username":"dieku","description":"Hermano descubri que esta wea es una funcion, y el resultado final de fragColor = algo; algo seria cualquier funcion.\n\nEntonces existe la funcion de una esfera, la funcion de un cuadrado tambien\nSi sumas las funciones te da ambas te dara este resultado.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","box","functions","maths"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 palette(float t){\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263, 0.416, 0.557);\n    \n    return a + b*cos(6.28318*(c*t+d));\n}\n\nfloat Circle(\n    vec2 uv, // uv coordinates \n    float r, // the radius of the circle\n    float blur,  // the blur quantity;\n    vec2 p // to fixed position?\n    ){\n\n    float d = length(uv - p);\n    float c = smoothstep(r, r-blur, d);\n    return c;\n}\n\n\nfloat Band(\n    float t,\n    float start,\n    float end,\n    float blur\n   \n ){ \n     \n     float step1 = smoothstep(start-blur, start+blur, t) ;\n     float step2 = smoothstep(end+blur, end-blur, t) ;\n     \n     return step1*step2;   \n }\n \n float Box(\n     vec2 uv,\n     float left,\n     float right,\n     float bottom,\n     float top, \n     float blur\n ){\n     float band1 = Band(uv.x, left, right, blur);\n     float band2 = Band(uv.y, bottom, top, blur);\n     \n     return band2*band1;\n }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // this normalize to the resolution size\n    // vec2 uv = (fragCoord * 2.0 - iResolution.xy) /iResolution.y;\n    vec2 uv = (fragCoord.xy)/iResolution.xy; // position ? \n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    // vec2 p = vec2( 1., 1. ); // fixed position\n    // uv -= p;\n    float r = 0.4;// radius of circle \n    float blur = 0.01;// grade of blur to the circle.\n    vec2 p = vec2(-.5, .0);\n    \n    // The created circle.\n    float c1 = Circle(uv, r, blur, p);\n    \n    \n    // vec3 testColor = vec3(1.0, .0, .0);\n    vec3 testColor = vec3(.0);\n    float mask = 0.;\n    mask = Box(uv-vec2(.5, .2), -.2, .2, -.2, .2, blur);\n    \n    // mask = Band(uv.x, -.2, .2, blur);\n    \n    vec3 f1 = palette(length(uv)+iTime) *mask;\n    vec3 f2 = c1*palette(length(uv)-iTime);\n    vec3 finalFunction =  f1+f2;\n    \n    // Colorea la wea\n    fragColor = vec4(finalFunction, 1.0);\n    \n}\n\n\nvoid useless(){\n    /*\nvec2 uv= fragCoord.xy / iResolution.xy;\n    \n\n    uv -= .5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 col = vec3(0.);\n    \n    // float mask = Circle(uv, vec2(0.), .4, .05);\n    \n    // col = vec3(1., 1.,0.)*mask;\n    \n    \n    fragColor = vec4(col, 1.0);\n    \n    \n    float box = sdBox(vec2(.5, 0.), vec2(.5,.0)); \n    col = vec3(1., 1.,0.)*box;\n    \n    fragColor = vec4(col + iTime, 1.0);\n    \n    \n    \n    vec2 cord1 = vec2(1.0, 0.0);\n    vec2 cord2 = vec2(0.0, 1.0);\n    \n    vec3 finalColor = vec3(0.0);\n    finalColor = palette(length(uv0) + (iTime/.1));\n    \n    sdBox(cord1, cord2);\n    \n    fragColor = vec4(finalColor, 1.0) ;\n    \n    vec2 uv1= (fragCoord); + sdBox(cord1, cord2);\n    \n    \n   \n    \n    vec2 cord1 = vec2(10.0, 0.0);\n    vec2 cord2 = vec2(0.0, 10.0);\n    \n    \n    float a = sdBox(cord1, cord2); \n    \n    \n    \n    \n    vec3 finalColor = vec3(125.0, 125.0, 0.0);\n    fragColor = vec4(finalColor, 111111.5);\n     */\n    \n    \n    \n}\n","name":"Image","description":"","type":"image"}]}