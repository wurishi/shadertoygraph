{"ver":"0.1","info":{"id":"Xl3XW7","date":"1479831995","viewed":3201,"name":"Kawase Blur - Proper","username":"Kubuxu","description":"Fast blur, use mouse to compare.\n\nKawase blur has to be multipass.\nIn this case it is five passes with parameters {0, 1, 1, 2, 3}, literature recommends {0,1,2,2,3} but the former gives less artefacts.","likes":28,"published":1,"flags":32,"usePreview":1,"tags":["blur","kawase","multipass","2dblur"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdfGR8","filepath":"/media/previz/buffer03.png","previewfilepath":"/media/previz/buffer03.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void reSample(in int d, in vec2 uv, inout vec4 fragColor)\n{\n \n    vec2 step1 = (vec2(d) + 0.5) / iResolution.xy;\n    \n    fragColor += texture(iChannel0, uv + step1) / float(4);\n    fragColor += texture(iChannel0,  uv - step1) / float(4);\n  \tvec2 step2 = step1;\n    step2.x = -step2.x;\n    fragColor += texture(iChannel0, uv + step2) / float(4);\n    fragColor += texture(iChannel0,  uv - step2) / float(4);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    \n    vec2 pixelSize = vec2(1.0) / iResolution.xy;\n    vec2 halfSize = pixelSize / vec2(2.0);\n    \n    vec4 color = vec4(0);\n\n    float xvalue = iMouse.x / iResolution.x;\n    \n    if(uv.x > xvalue)\n    {\n        reSample(3, uv, color);\n    }\n    else\n    {\n        color = texture(iChannel1, uv);\n    }\n    \n    if(abs(uv.x - xvalue) < 0.002)\n        color = vec4(0.0);\n\n    \n    fragColor = color;\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void reSample(in int d, in vec2 uv, out vec4 fragColor)\n{\n \n    vec2 step1 = (vec2(d) + 0.5) / iResolution.xy;\n    vec4 color = vec4(0);\n    color += texture(iChannel0, uv + step1) / float(4);\n    color += texture(iChannel0,  uv - step1) / float(4);\n  \tvec2 step2 = step1;\n    step2.x = -step2.x;\n    color += texture(iChannel0, uv + step2) / float(4);\n    color += texture(iChannel0,  uv - step2) / float(4);\n    fragColor = color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/ iResolution.xy ;\n    reSample(0, uv, fragColor);\n}","name":"Buf A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void reSample(in int d, in vec2 uv, out vec4 fragColor)\n{\n \n    vec2 step1 = (vec2(d) + 0.5) / iResolution.xy;\n    vec4 color = vec4(0);\n    color += texture(iChannel0, uv + step1) / float(4);\n    color += texture(iChannel0,  uv - step1) / float(4);\n  \tvec2 step2 = step1;\n    step2.x = -step2.x;\n    color += texture(iChannel0, uv + step2) / float(4);\n    color += texture(iChannel0,  uv - step2) / float(4);\n    fragColor = color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/ iResolution.xy ;\n    reSample(1, uv, fragColor);\n}","name":"Buf B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void reSample(in int d, in vec2 uv, out vec4 fragColor)\n{\n \n    vec2 step1 = (vec2(d) + 0.5) / iResolution.xy;\n    vec4 color = vec4(0);\n    color += texture(iChannel0, uv + step1) / float(4);\n    color += texture(iChannel0,  uv - step1) / float(4);\n  \tvec2 step2 = step1;\n    step2.x = -step2.x;\n    color += texture(iChannel0, uv + step2) / float(4);\n    color += texture(iChannel0,  uv - step2) / float(4);\n    fragColor = color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/ iResolution.xy ;\n    reSample(1, uv, fragColor);\n}","name":"Buf C","description":"","type":"buffer"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XdfGR8","channel":0}],"code":"void reSample(in int d, in vec2 uv, out vec4 fragColor)\n{\n \n    vec2 step1 = (vec2(d) + 0.5) / iResolution.xy;\n    vec4 color = vec4(0);\n    color += texture(iChannel0, uv + step1) / float(4);\n    color += texture(iChannel0,  uv - step1) / float(4);\n  \tvec2 step2 = step1;\n    step2.x = -step2.x;\n    color += texture(iChannel0, uv + step2) / float(4);\n    color += texture(iChannel0,  uv - step2) / float(4);\n    fragColor = color;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy/ iResolution.xy ;\n    reSample(2, uv, fragColor);\n}","name":"Buf D","description":"","type":"buffer"}]}