{"ver":"0.1","info":{"id":"4lXSDs","date":"1440450602","viewed":141,"name":"PT IV - Combicolor","username":"Piperoman","description":"PiperoTutorial 4. Play with 3 colors adding or substract, like matrix, left 3 cols with original colors, right add and substract the same colors. Learn more in this tutorial from vgs: https://www.shadertoy.com/view/Md23DV","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["test","learning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"/**\n* Half left, original color1, color2, color3\n* Half right Up, add color1, color2, color3\n* Half right down, substract color1, color2, color3\n*/\nvoid combineColors(inout vec3 pixel, in vec2 p, vec3 color1, vec3 color2, vec3 color3)\n{    \n    // In x (Left to right), cols: color1, color2, color3, color1, color2, color3\n    if(p.x < 1./6.) \t\t\n    { \n\t\tpixel = color1;\n\t} \n\telse if(p.x < 2./6.) \t\n    { \n        pixel = color2;\n\t} \n\telse if(p.x < 3./6.) \t\n    { \n        pixel = color3;\n\t}\n    else if(p.x < 4./6.) \t\t\n    { \n\t\tpixel = color1;\n\t} \n\telse if(p.x < 5./6.) \t\n    { \n        pixel = color2;\n\t} \n\telse if(p.x < 6./6.) \t\n    { \n        pixel = color3;\n\t}   \n    \n    // Only right part\n    if(p.x > 3./6.)\n    {\n        // In y (Up to down), rows: +color1, +color2, +color3, -color1, -color2, -color3\n        if(p.y < 1./6.)\n        {\n            pixel += color1;\n        }\n        else if(p.y < 2./6.) \t\n        { \n            pixel += color2;\n        } \n        else if(p.y < 3./6.) \t\n        { \n            pixel += color3;\n        }\n        else if(p.y < 4./6.) \t\n        { \n            pixel -= color1;\n        }\n        else if(p.y < 5./6.) \t\n        { \n            pixel -= color2;\n        }\n        else if(p.y < 6./6.) \t\n        { \n            pixel -= color3;\n        }\n    } \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = vec2(fragCoord.xy / iResolution.xy);\n\tvec2 r =  2.0*vec2(fragCoord.xy - 0.5*iResolution.xy)/iResolution.y;\n\tfloat xMax = iResolution.x/iResolution.y;\t\n\t\n    //float totalColor = 6; // array values?\n\tvec3 blackColor = vec3(0.0);\n\tvec3 whiteColor = vec3(1.0);\n\tvec3 grayColor = vec3(0.3);\n\tvec3 blueColor = vec3(0.100, 0.323, 0.765); \n\tvec3 redColor = vec3(1.00, 0.145, 0.022); \n\tvec3 yellowColor = vec3(0.866, 0.916, 0.154);\n    \n    vec3 pixel;\n    \n    combineColors(pixel, p, blueColor, redColor, yellowColor);\n    \n    fragColor = vec4(pixel, 1.0);\n}","name":"","description":"","type":"image"}]}