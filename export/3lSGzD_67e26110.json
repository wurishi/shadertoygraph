{"ver":"0.1","info":{"id":"3lSGzD","date":"1558614650","viewed":63,"name":"MandelBrotSet","username":"anazli9","description":"A simple implementation of the Mandelbrot set","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractals"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    int max_iter = 50;\n    int iter = 0;\n    vec2 C = uv - vec2(1.5, 0.5);\n    vec2 Z = vec2(0.0, 0.0);\n    \n    while(dot(Z, Z) < 4.0 && iter < max_iter)\n    {\n        Z = vec2(Z.x * Z.x - Z.y * Z.y, Z.x * Z.y + Z.y * Z.x) + C;\n        iter++;\n    }\n    \n    if(iter < max_iter)\n    {\n        float color = sin(iTime)/2.0 * float(iter)/float(max_iter) + 0.5;\n        fragColor = vec4(color, 0.05, 0.05, 1.0);\n    }\n    else\n    {\n        fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }\n    \n}","name":"Image","description":"","type":"image"}]}