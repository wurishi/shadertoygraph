{"ver":"0.1","info":{"id":"7sS3DW","date":"1617398293","viewed":74,"name":"Rainbow Mandelbrot Set","username":"Symmetries","description":"HSV-colored Mandelbrot Set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fracal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// using hsv2rgb from http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec3 col = vec3(0.);\n    float zoom = 1.4;// + (cos(iTime) -1.) / 1.5;\n    for (int i = -1; i <= 1; i++) {\n        for (int j = -1; j <= 1; j++) {\n            vec2 c = 2. * zoom * (fragCoord + vec2(i, j)/3.)/iResolution.xy - zoom;\n            c.x *= iResolution.x / iResolution.y;\n            c.x -= 0.75;\n            vec2 z = vec2(0., 0.);\n            float hue = 0.;\n            float value = 0.;\n            float n = 10.;\n            for (int iter = 0; iter < 200; iter++) {\n                value = float(value > 0. || dot(z, z) > 4.);\n                z = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) + c;\n                hue = (1. - value) * ((sqrt(float(iter*iter) + n * n) - n)/30. + 0.5) + value * hue;\n            }\n            col += hsv2rgb(vec3(hue, 1., value)) / 9.;\n        }\n    }\n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}