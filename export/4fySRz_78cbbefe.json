{"ver":"0.1","info":{"id":"4fySRz","date":"1715073017","viewed":116,"name":"shirt","username":"thebear8","description":"tshirt design","likes":1,"published":3,"flags":0,"usePreview":1,"tags":["clothing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535897932384626433832795\n\nfloat bump_p(float x, float center)\n{\n    float u = x - center + 1.0;\n    if(u >= 0.0 && u <= 2.0) return 0.5 + 0.5 * sin(PI * (u - 0.5));\n}\n\nfloat f1(float x)\n{\n    return bump_p(x, 0.0) + bump_p(x, 3.0) + bump_p(x, 6.0);\n}\n\nfloat f2(float x)\n{\n    return bump_p(x, 1.0) + bump_p(x, 4.0) + bump_p(x, 7.0);\n}\n\nfloat f3(float x)\n{\n    return bump_p(x, 2.0) + bump_p(x, 5.0) + bump_p(x, 8.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.0 * fragCoord - iResolution.xy) / min(iResolution.x, iResolution.y);\n    float dist = sqrt(uv.x*uv.x + uv.y*uv.y);\n    \n    vec4 c1 = vec4(0xBE, 0x18, 0x5D, 0xFF) / 255.0;\n    vec4 c2 = vec4(0x5E, 0xEA, 0xD4, 0xFF) / 255.0;\n    vec4 c3 = vec4(0x0F, 0x17, 0x2A, 0xFF) / 255.0;\n\n    float x = uv.x;\n    float y = uv.y;\n    \n    vec2 angle = vec2(1.0, 0.2);\n    float offset = 0.2;\n    float steepness = 3.0;\n \n    float scale = 1.0 - 0.5 / (1.0 + pow(steepness * angle.x * x + steepness * angle.y * y - offset * steepness, 2.0))\n                    * (1.0 / (1.0 + pow(max(steepness * y, 0.0), 2.0)));\n    \n    // float scale = 1.0 - (0.4 / (1.0 + pow(x + 0.2 * y - 0.75, 2.0))) * (1.0 / (1.0 + pow(max(y, 0.0), 2.0)));\n    \n    float u = 20.0 * dist * scale;\n    \n    vec4 noise = texture(iChannel0, uv) * (f1(u) + f2(u) + f3(u));\n    fragColor = f1(u) * c1 + f2(u) * c2 + f3(u) * c3 + 0.1 * vec4(noise.xxx, 1);\n}","name":"Image","description":"","type":"image"}]}