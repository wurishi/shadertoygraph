{"ver":"0.1","info":{"id":"stBSWh","date":"1627511234","viewed":78,"name":"test1_rgb_triangle","username":"Liners","description":"triangle_rgb_anim","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["trianglergb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define luma( rgba ) ( dot( rgba, vec4(0.2126, 0.7152, 0.0722, 1.0) ) )\n\n#define iR iResolution\n#define t iTime\n\nvoid mainImage( out vec4 O, in vec2 XY ) {\n    \n    // get normalized texture coordinates\n    vec2 p = (XY * 2. - iR.xy) /iR.y;\n    \n    float a = -.5 + max( abs(p.x) + p.y, -p.y);\n    \n    //float a = 0.15 + min( 1.0 * abs(p.x) + p.y * 0.75, -p.y); //like this variation:\n   \n    p = vec2( a, atan(p.x, p.y) );\n    \n    float c = 25. * log(t) * sin(t * .7) / t;\n    \n    vec4 s = .15 * cos( vec4(c, 1., 10., 0.) + t - p.y );\n    \n    vec4 e = s.yzxy;\n    \n    vec4 f = min(p.x - s, e - p.x); \n    \n    vec4 g = dot( clamp( f * 100., 0., 1.), 20. * (s - e) ) * (e - .95) ;\n    \n    vec4 col = dot( clamp( f * 100., 0., 1.), 20. * (s - e) ) * (e - .15) ;\n    \n    \n    // output color with luma subtract\n    \n    O = vec4(col * cos(g *.1) ) * 0.9;\n}","name":"Image","description":"","type":"image"}]}