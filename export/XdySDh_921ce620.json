{"ver":"0.1","info":{"id":"XdySDh","date":"1463977795","viewed":290,"name":"'Murica","username":"elpuri","description":"Ladies and gentlemen, start your hamburgers!\n \nSadly I'm no iq, so no ray marched bald eagle :/ ","likes":2,"published":1,"flags":64,"usePreview":0,"tags":["2d","flag"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGWj","filepath":"https://soundcloud.com/francescodandrea/star-spangled-banner-jimi","previewfilepath":"https://soundcloud.com/francescodandrea/star-spangled-banner-jimi","type":"musicstream","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Juha Turunen (turunen@iki.fi)\n// http://www.usflag.org/flag.specs.html\n\n#define M_PI 3.14159\nconst vec4 oldGloryRed = vec4(191.0 / 255.0, 10.0 / 255.0, 48.0 / 255.0, 1.0);  // PMS 193C\nconst vec4 oldGloryBlue = vec4(0.0, 40.0 / 255.0, 104.0 / 255.0, 1.0);  // PMS 281C\nconst vec4 cosmeticDentistryWhite = vec4(1.0);\n\nfloat smoothbump(float low, float high, float x, float eps)\n{\n    return smoothstep(low - eps, low + eps, x) - smoothstep(high - eps, high + eps, x);\n}\n\nvec4 stripes(in float y, float eps) {\n\teps *= 20.0;\n    float m = mod(y * 13.0, 2.0);\n    float a = smoothstep(1.0 - eps, 1.0 + eps, m) - smoothstep(2.0 - eps, 2.0 + eps, m);\n    return mix(oldGloryRed, cosmeticDentistryWhite, a);\n}\n\nfloat inTriangle(in vec2 p, in vec2 t0, in vec2 t1, in vec2 t2, in float eps) \n{\n\tvec2 v0 = t2 - t0;\n\tvec2 v1 = t1 - t0;\n\tvec2 v2 = p - t0;\n\n\tfloat d00 = dot(v0, v0);\n\tfloat d01 = dot(v0, v1);\n\tfloat d02 = dot(v0, v2);\n\tfloat d11 = dot(v1, v1);\n\tfloat d12 = dot(v1, v2);\n\n\tfloat d = d00 * d11 - d01 * d01;\n\tfloat u = (d11 * d02 - d01 * d12) / d;\n\tfloat v = (d00 * d12 - d01 * d02) / d;\n\n    eps = 0.2;\n    float uvStep = smoothstep(1.0 + eps, 1.0 - eps,  u + v);\n\tfloat uStep = u > 0.0 ? 1.0 : 0.0;\n\tfloat vStep = v > 0.0 ? 1.0 : 0.0;\n    return min(uvStep, min(uStep, vStep));\n}\n\nfloat star(in vec2 p, in float radius, in float eps) {\n    p.y = -p.y;\n    mat2 transform = mat2(1.0);\n    float thetaOffset = 0.5 * M_PI;\n    float theta = M_PI * 2.0 / 5.0;\n    mat2 rotate = mat2(cos(theta), sin(theta), -sin(theta), cos(theta));\n    float tri = 0.0;\n    vec2 p1 = vec2(cos(-theta + thetaOffset), sin(-theta + thetaOffset)) * radius;\n    vec2 p2 = vec2(cos( theta + thetaOffset), sin( theta + thetaOffset)) * radius;\n    for (int i = 0; i < 5; i++) {\n    \ttri = max(tri, inTriangle(p, vec2(0.0), transform * p1, transform * p2, eps));\n        transform = rotate * transform;\n    }\n\treturn tri;\n}\n\nvec4 starPattern(in vec2 p, in float eps)\n{\n    const float starHSpacing = 0.063;\n    const float starVSpacing = 0.054;\n    const float starRadius = 0.052 * 0.5;\n    \n    p -= vec2(starHSpacing, starVSpacing);\n    vec2 pa = p;\n    p.x = mod(p.x + 0.5 * starHSpacing, starHSpacing * 2.0) - 0.5 * starHSpacing;\n    p.y = mod(p.y + 0.5 * starVSpacing, starVSpacing) - 0.5 * starVSpacing;\n    float line = mod(pa.y + 0.5 * starVSpacing, 2.0 * starVSpacing) - 0.5 * starVSpacing;\n    p.x -= line < starVSpacing * 0.5 ? 0.0 : starHSpacing;\n\tfloat c = star(p, starRadius, eps);\n    \n    if (pa.x < -starHSpacing * 0.5  || \n        pa.x > 10.5 * starHSpacing  ||\n        pa.y < -starVSpacing * 0.5  ||\n        pa.y > 8.5 * starVSpacing )\n        c = 0.0;\n\n    return vec4(cosmeticDentistryWhite.rgb, c);\n}\t\n\nvec4 theUnion(in vec2 p, in float eps) {\n    vec4 s = starPattern(p, eps);\n    vec4 c = mix(oldGloryBlue, s, s.a);\n    \n    const float unionWidth = 0.76;\n\tfloat unionHeight = 0.5385;\n    c.a = smoothstep(unionWidth + eps, unionWidth - eps, p.x);\n    c.a *= smoothstep(unionHeight + eps, unionHeight - eps, p.y);\n    return c;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy;\n\tp.y = iResolution.y - p.y;\n    p /= iResolution.xx;\n    p *= 2.5;\n    \n    const vec2 amplitude = vec2(0.06, 0.05);\n\tp -= vec2(0.275 + cos(iTime + p.y * 3.0) * amplitude.x, \n              0.22 + sin(iTime + p.x * 5.0) * amplitude.y);\n\n    float eps = dFdx(p).x * 0.5;\n    \n    vec4 stripesColor = stripes(p.y, eps); \n    vec4 unionColor = theUnion(p, eps);\n    vec4 flagColor = vec4(mix(stripesColor.rgb, unionColor.rgb, unionColor.a), 1.0);\n\n    flagColor.a = smoothbump(0.0, 1.9, p.x, eps);\n    flagColor.a *= smoothbump(0.0 + eps, 1.0 - eps, p.y, eps);\n    \n    vec3 bgColor = vec3(0.25);\n    vec3 outputColor = mix(bgColor, flagColor.rgb, flagColor.a);\n\n    float vignette = pow(length((fragCoord - 0.5 * iResolution.xy) / iResolution.xy), 3.0) * 3.0; \n\toutputColor = mix(outputColor, vec3(0.0), vignette);\n    fragColor = vec4(outputColor, 1.0);\n}","name":"Image","description":"","type":"image"}]}