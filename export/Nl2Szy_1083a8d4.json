{"ver":"0.1","info":{"id":"Nl2Szy","date":"1627956154","viewed":97,"name":"gaussian blur test","username":"ear7h","description":"My attempt at implementing a Gaussian blur, from the tutorial at: https://www.shadertoy.com/view/WtKfD3\n","likes":2,"published":1,"flags":32,"usePreview":0,"tags":["gaussian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = conv1(iChannel0, uv, mouseSigma, vec2(0., 1.));\n    \n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define SAMPLES (64)\n#define MAX_SIGMA (3.0)\n#define PI 3.14159\n#define mouseSigma (iMouse.y == 0. ? 0.001 + 0.01 * float(int(iTime / 2.) % 5) : iMouse.y / (10. * iResolution.y))\n\nvec4 conv1(sampler2D tex, vec2 uv, float sigma, vec2 dir) {\n    int samples = (SAMPLES/2) * 2 + 1;\n    float delta = (2. * MAX_SIGMA * sigma) / float(samples);\n    \n    vec4 sum_tex = vec4(0.);\n    float sum_g = 0.;\n    \n    float denom = 2. * sigma * sigma;\n    for (int i = -SAMPLES/2; i <= SAMPLES/2; i++) {\n        float x = delta * float(i);\n        vec2 px = uv + dir * x;\n        float g = exp(-(x * x) / denom) / sqrt(PI * denom);\n        \n        sum_g += g;\n        sum_tex += texture(tex, px, 0.) * g;\n    }\n    \n    return sum_tex / sum_g;\n}\n","name":"Common","description":"","type":"common"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n    fragColor = conv1(iChannel0, uv, mouseSigma, vec2(1., 0.));\n}","name":"Buffer A","description":"","type":"buffer"}]}