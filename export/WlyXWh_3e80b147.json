{"ver":"0.1","info":{"id":"WlyXWh","date":"1605903975","viewed":85,"name":"mandelbrot navigator","username":"psc","description":"navigate the mandelbrot set:\nup, down, left, right arrow keys: move around\n'z': zoom in\n'a': zoom out","likes":1,"published":1,"flags":48,"usePreview":0,"tags":["fractal"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const int MAX_ITERATIONS = 40;\nconst float THRESHOLD = 4.0;\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\nfloat centerX = 0.0;\nfloat centerY = 0.0;\n\n// Borrowed from https://www.shadertoy.com/view/ll2GD3\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\n// Borrowed from https://www.shadertoy.com/view/ltsyRS\nvec2 getCoord(in float zoom) {\n    return vec2(\n    \ttexelFetch(iChannel0, ivec2(0, zoom), 0).r,\n        texelFetch(iChannel0, ivec2(1, zoom), 0).r\n    ) / iResolution.xy;\n}\n\nfloat getZoom() {\n    return 1.0 + texelFetch(iChannel1, ivec2(0, 0), 0).r / 100.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 xy = fragCoord/iResolution.xy;\n\n    \n    float zoom = getZoom();\n    vec2 centerPoint = getCoord(zoom);\n    float xOffset = centerPoint.x;\n    float yOffset = centerPoint.y;\n    vec2 xBounds = xOffset + vec2(- 2.5, 1.0) / zoom;\n    vec2 yBounds = yOffset + vec2(- 1.0, 1.0) / zoom;\n    float x0 = xy.x * (xBounds.y - xBounds.x) + xBounds.x;\n    float y0 = xy.y * (yBounds.y - yBounds.x) + yBounds.x;  \n    int iteration = 0;\n    float x = 0.0;\n    float y = 0.0;\n    float xtemp = 0.0;\n    while (x*x + y*y <= THRESHOLD && iteration < MAX_ITERATIONS) {\n        xtemp = x*x - y*y + x0;\n        y = 2.0*x*y + y0;\n        x = xtemp;\n        iteration = iteration + 1;\n    }\n    \n    vec3 col = palette(float(iteration) / float(MAX_ITERATIONS),\n                       vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67));\n    if (iteration >= MAX_ITERATIONS) {\n        col = vec3(0.0, 0.0, 0.0);\n    }\n    //vec3 col = palette(xy.x, vec3(0.5,0.5,0.5),vec3(0.5,0.5,0.5),vec3(1.0,1.0,1.0),vec3(0.0,0.33,0.67));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"// Borrowed from https://www.shadertoy.com/view/ltsyRS\nconst int KEY_LEFT  = 37;\nconst int KEY_UP    = 38;\nconst int KEY_RIGHT = 39;\nconst int KEY_DOWN  = 40;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float outData = 0.0;\n    float speed = 100.0 / fragCoord.y;\n    \n    switch(int(fragCoord.x)) {\n        case 0:\n        \toutData = texelFetch(iChannel0, ivec2(0), 0).r +\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_RIGHT, 0), 0).r -\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_LEFT, 0), 0).r;\n        \tbreak;\n        \n        case 1:\n        \toutData = texelFetch(iChannel0, ivec2(1, 0), 0).r +\n                (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_UP, 0), 0).r -\n        \t\t(iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_DOWN, 0), 0).r;\n        \tbreak;\n    }\n    \n    fragColor = vec4(outData, 0.0, 0.0, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGRr","filepath":"/presets/tex00.jpg","previewfilepath":"/presets/tex00.jpg","type":"keyboard","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"const int KEY_A_LOWER = 65;\nconst int KEY_Z_LOWER = 90;\nconst int KEY_A_UPPER = 97;\nconst int KEY_Z_UPPER = 122;\n\nconst float speed = 300.0;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    float outData = texelFetch(iChannel0, ivec2(0), 0).r +\n        (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_Z_LOWER, 0), 0).r +\n        (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_Z_UPPER, 0), 0).r -\n        (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_A_LOWER, 0), 0).r -\n        (iTimeDelta * speed) * texelFetch(iChannel1, ivec2(KEY_A_UPPER, 0), 0).r;\n    \n    fragColor = vec4(outData, 0.0, 0.0, 1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}