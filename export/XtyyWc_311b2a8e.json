{"ver":"0.1","info":{"id":"XtyyWc","date":"1537991926","viewed":182,"name":"SpaceSounds","username":"dila","description":"Some sound experiment.","likes":6,"published":1,"flags":8,"usePreview":0,"tags":["sound"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 col = texture(iChannel0, uv * 2.0 + sin(vec2(iTime)) * 0.1).xyz;\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"/* https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl */\nuint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}\n\nfloat sinc(float t, float fc) {\n    float x = 2.0 * 3.141592 * fc * t;\n    float m = abs(sign(x));\n    float r = sin(x) / mix(1.0, x, m);\n    return mix(1.0, r, m);\n}\n\nfloat wlpf(int i, int n, float fc) {\n    float f = float(i) / (float(n) - 1.0);\n    float w = 0.53836 - 0.46164 * cos(f * 3.141592 * 2.0);\n    return sinc(float(i) + 0.5 - float(n) * 0.5, fc) * w;\n}\n\nfloat samp(float time) {\n    float x = (1024.0 + time) * exp2(21.0);\n    float y = float(hash(uint(x)));\n    float k = float(0xffffffffu);\n    y = clamp(y / k, 0.0, 1.0);\n    return y * 2.0 - 1.0;\n}\n\nfloat noise(float t, float a, float b) {\n    const int ns = 128;\n    float r = 0.0;\n    for (int i = 0; i < ns; ++i) {\n        float f = t - float(i) / iSampleRate;\n        r += samp(f) * (wlpf(i, ns, b) - wlpf(i, ns, a));\n    }\n    return r;\n}\n\nvec2 mainSound( in int samp,float time) {\n    /* inhale */\n    float f = 1000.0 / iSampleRate;\n    float bw = 800.0 / iSampleRate;\n    float k = mix(bw, 0.5 - bw, f);\n    float r = noise(time, k - bw * 0.5, k + bw * 0.5);\n    r *= pow(sin(time * 3.0) * 0.5 + 0.5, 16.0);\n    \n    /* exhale */\n    bw = 400.0 / iSampleRate;\n    k = mix(bw, 0.5 - bw, f);\n    float s = noise(time, k - bw * 0.5, k + bw * 0.5);\n    s *= pow(sin(time * 3.0 - 3.141592 * 0.75) * 0.5 + 0.5, 4.0);\n    r = (r + s) * 0.5;\n    \n    /* heartbeat */\n    float hb = noise(time, 20.0/iSampleRate, 30.0/iSampleRate);\n    hb *= 600.0;\n    hb *= pow(abs(sin(time * 4.0) * sin(time * 16.0)), 10.0);\n\n    /* mix */\n    vec2 st = vec2(r * 0.75 + hb, r + hb * 0.25);\n    return st / 100.0; /* volume warning */\n}","name":"Sound","description":"","type":"sound"}]}