{"ver":"0.1","info":{"id":"XsKfDm","date":"1529600357","viewed":459,"name":"mystic blob","username":"laserdog","description":"Something simple to get back into shader-writing after a long break.","likes":15,"published":1,"flags":0,"usePreview":0,"tags":["waves"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    const float tau = 3.14 * 2.;\n    const float numRings = 10.;\n    \n\tvec2 uv = (fragCoord - .5 * iResolution.xy) / iResolution.y;\n\t\n    float len = length(uv);\n    fragColor.rgb = vec3(0., 0., 0.);\n    \n    for (float i = 0.; i < numRings; i++) {    \n        float angle = atan(uv.y, uv.x) + 3.14 + i * (tau / numRings);\n    \tfloat val = len + sin(angle * 6. + iTime) * .05 * sin((iTime + i * .5) * 2.);\n        float size = .18 + .12 * sin(iTime + i * (tau / numRings));\n    \tfloat lenVal = smoothstep(size, size + .1, val) * smoothstep(size + .06, size + .05, val);\n        lenVal *= smoothstep(0., .3, len);\n        float lerpVal = (i / (numRings * 1.5)) + ((sin(iTime) + 1.) / 4.);\n    \tfragColor.rgb += mix(vec3(1., 0., 0.2), vec3(0.25, 0., 1.), lerpVal) * lenVal;\n    }\n    fragColor *= 1.25;\n}","name":"Image","description":"","type":"image"}]}