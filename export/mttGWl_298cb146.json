{"ver":"0.1","info":{"id":"mttGWl","date":"1683357754","viewed":90,"name":"RadialDistortion","username":"jiangyiheng","description":"Fast Radial Distortion","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define FREQ 64.0\n#define INTENSITY 0.1\n#define SPEED 0.0\n\n// Copy from https://www.shadertoy.com/view/XdXGW8\nvec2 grad(ivec2 p) {\n    p.x = p.x == int(FREQ) ? 0 : p.x;\n    \n    // 2D to 1D  (feel free to replace by some other)\n    int n = p.x+p.y*11111;\n\n    // Hugo Elias hash (feel free to replace by another one)\n    n = (n<<13)^n;\n    n = (n*(n*n*15731+789221)+1376312589)>>16;\n    \n    n &= 7;\n    vec2 gr = vec2(n&1,n>>1)*2.0-1.0;\n    return ( n>=6 ) ? vec2(0.0,gr.x) : \n           ( n>=4 ) ? vec2(gr.x,0.0) :\n                              gr;\n}\n\nfloat noise( in vec2 p )\n{\n    ivec2 i = ivec2(floor( p ));\n     vec2 f =       fract( p );\n\t\n\tvec2 u = f*f*(3.0-2.0*f); // feel free to replace by a quintic smoothstep instead\n\n    return mix( mix( dot( grad( i+ivec2(0,0) ), f-vec2(0.0,0.0) ), \n                     dot( grad( i+ivec2(1,0) ), f-vec2(1.0,0.0) ), u.x),\n                mix( dot( grad( i+ivec2(0,1) ), f-vec2(0.0,1.0) ), \n                     dot( grad( i+ivec2(1,1) ), f-vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec2 offset = uv * 2.0 - 1.0;\n    offset.y *= iResolution.y / iResolution.x;\n    \n    float len = length(offset);\n    vec2 dir = offset / len;\n    \n    float x = dir.y > 0.0 \n            ? dir.x > 0.0 ? dir.x : dir.y\n            : dir.x > 0.0 ? -dir.y : -dir.x;\n            \n    x = 1.0 - sqrt(1.0-x);\n    //x = sin(x * FREQ * 2.0 * 3.1415926) * len*len * iMouse.x/iResolution.x * INTENSITY;\n    x = noise(vec2(x * FREQ, iTime * iMouse.y * SPEED)) * len*len * iMouse.x/iResolution.x * INTENSITY;\n    \n    uv += dir * x;\n    \n    // fragColor = vec4(x * 0.5 + 0.5, 0.0, 0.0, 0.0);\n    // fragColor = vec4(uv, 0.0, 0.0);\n    // fragColor = vec4(dir * 0.5 + 0.5, 0.0, 0.0);\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"}]}