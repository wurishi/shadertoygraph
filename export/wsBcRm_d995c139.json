{"ver":"0.1","info":{"id":"wsBcRm","date":"1586376558","viewed":123,"name":"Apolloniana","username":"sl2c","description":"A four-coloring of the classic Apollonian Gasket. No two adjacent circles have the same color.  Zooms in on a loxodromic fixed point.","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["circles","apollonian","gasket"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Copyright 2020 Google LLC\n// SPDX-License-Identifier: Apache-2.0\n// NOT an official Google project; see Google Open Source guidelines for more info on copyright transfer\n// written by William Cadegan-Schlieper \n\nvec3 color(vec2 z) {\n    for (int i=0;i<100;i++) {\n        z.x = mod(z.x,4.0);\n        if (z.x > 3.0) {\n            z.x -= 4.0;\n        }\n        if (z.x > 1.0) {\n            z.x = 2.0-z.x;\n        }\n        \n        if (z.y > 1.0) {\n            return vec3(1.0,0.2,0.2);\n        }\n        if (z.y < -1.0) {\n            return vec3(0.5,1.0,0.0);\n        }\n\n        \n        z /= 0.5 * dot(z,z);\n        z.y = mod(z.y,4.0);\n        if (z.y > 3.0) {\n            z.y -= 4.0;\n        }\n        if (z.y > 1.0) {\n            z.y = 2.0 - z.y;\n        }\n        \n        if (z.x > 1.0) {\n            return vec3(1.0,0.7,0.0);\n        }\n        if (z.x < -1.0) {\n            return vec3(0.5,0.0,1.0);\n        }\n        z /= 0.5 * dot(z,z);\n        \n    }\n    return vec3(0.0,0.0,0.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * (fragCoord - iResolution.xy * 0.5)/iResolution.y;   \n    \n    float t = iTime * 0.1;\n    \n    float period = 2.0 * 2.1225501238;\n    \n    while (t > period * 0.5) {\n        t -= period;\n        float c = -0.888543820;\n        float s = 0.458791760;\n        uv = vec2(uv.x * c - uv.y * s,\n                  uv.x * s + uv.y * c);\n    }\n    \n    \n    \n    uv *= exp(-t);\n    \n    uv.x += 0.28443224050;\n    uv.y -= 0.17578879212;\n    \n    uv /= dot(uv,uv);\n\n    uv.x -= 0.27201964951;\n    uv.y += 0.78615137877;\n    \n    fragColor = vec4(color(uv),1.0);\n}","name":"Image","description":"","type":"image"}]}