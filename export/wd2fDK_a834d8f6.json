{"ver":"0.1","info":{"id":"wd2fDK","date":"1590912931","viewed":322,"name":"Bubbles underwater.","username":"tono","description":"I've been having some hot days lately, so I created a cool looking shader to my favorite music!\n","likes":8,"published":1,"flags":96,"usePreview":0,"tags":["water","bubble","celler"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"ll2GzK","filepath":"https://soundcloud.com/hollywood_principle/breathing-underwater","previewfilepath":"https://soundcloud.com/hollywood_principle/breathing-underwater","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 color = texture(iChannel1,fragCoord.xy/iResolution.xy).rgb;\n    fragColor = vec4(color,1.0);\n}\n","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define ITER 20\n//best 20\nfloat time;\n\nvec3 random33(vec3 st)\n{\n    st = vec3(dot(st, vec3(127.1, 311.7,811.5)),\n                dot(st, vec3(269.5, 183.3,211.91)),\n                dot(st, vec3(511.3, 631.19,431.81))\n                );\n    return -1.0 + 2.0 * fract(sin(st) * 43758.5453123);\n}\n\nvec4 celler3D(vec3 i,vec3 sepc)\n{\n    vec3 sep = i * sepc;\n    vec3 fp = floor(sep);\n    vec3 sp = fract(sep);\n    float dist = 5.;\n    vec3 mp = vec3(0.);\n\n    for (int z = -1; z <= 1; z++)\n    {\n        for (int y = -1; y <= 1; y++)\n        {\n            for (int x = -1; x <= 1; x++)\n            {\n                vec3 neighbor = vec3(x, y ,z);\n                vec3 pos = vec3(random33(fp+neighbor));\n                pos = sin( (pos*11.5 +time * 2.) ) * .5 + .5;\n                float divs = length(neighbor + pos - sp);\n                mp = (dist >divs)?pos:mp;\n                dist = (dist > divs)?divs:dist;\n            }\n        }\n    }\n    return vec4(mp,dist);\n}\n\nmat2 rot(float x)\n{\n    return mat2(sin(x),cos(x),-cos(x),sin(x));\n}\n\nfloat map(vec3 p)\n{\n    vec4 cell1 = celler3D(p,vec3(2.1));\n    vec4 cell2 = cell1;\n    cell2*= 12.1;\n    float a = cell1.w - length(cell1.xyz)/4.;\n    float b = cell2.w - length(cell2.xyz)/4.;\n    float o = max(a,-b);\n    o *= 0.6;\n    return o;\n}\n\nfloat march(vec3 ro, vec3 rd)\n{\n\tfloat depth = 0.;\n    for(int i = 0 ; i < ITER ; i++)\n    {\n        vec3 rp = ro + rd * depth;\n        float d = map(rp);\n        if(abs(d) < 0.001)\n        {\n            return depth;\n        }\n        if(depth > 5.)return -depth;\n        depth += d;\n    }\n    return -depth;\n}\n\n\n\nvoid scene( out vec3 oColor, in vec2 fCoord )\n{\n    vec2 p = (fCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n\t\n    vec3 cp = vec3(0.,0.,-5.);\n    vec3 target = vec3(6.,6.,5.);\n    vec3 cd = normalize(vec3(target - cp));\n    \n    cp += cd * time *1.15;\n    vec3 cu = vec3(0.,1.,0.);\n    vec3 cs = normalize(cross(cd,cu));\n    cu = normalize(cross(cs , cd));\n    float t = time /6.;\n    p += vec2(cos(t),sin(t))/2.;\n    \n    p *= rot(-time/15. + length(p)/4.);\n    float fov = .08 - dot(p,p);\n    vec3 rd = normalize(cd * fov + cs * p.x + cu * p.y);\n    float d = march(cp,rd);\n    \n    vec3 day[2];\n        day[0]=vec3(.35,1.,1.);\n    \tday[1]=vec3(0.,.6,.7);\n    vec3 evening[2];\n    \tevening[0]= vec3(.58,.1,.1);\n    \tevening[1]= vec3(0.95,.1,.83);\n    //const vec3 evening[2] = vec3[2](vec3(.38,.6,.2),vec3(0.35,.1,.3) );\n    \n    float suncycle = (sin(4. + time/27.0)+1.)/2.;\n    vec3 color = mix(day[0],evening[0],suncycle) * 1./(.31+length(p) );\n    if(d > 0.)\n    {\n        vec3  pos = cp + rd * d;\n        vec2 e = vec2(0.,0.001);\n        vec3 N = -normalize(map(pos) - vec3(map(pos - e.xyy),map(pos - e.yxy),map(pos - e.yyx)) );\n        vec3 light = normalize(vec3(p,1.));\n        float diff = max(0.,dot(light,N)) * .5 + .5;\n        float spec = max(0.,dot(normalize(rd + light),N));\n        color = mix(day[1],evening[1],suncycle) * diff;\n        color += spec * vec3(1.);\n        color +=vec3(1.,1.,1.) * 1./(2.1+length(p) );\n    }\n    oColor += color;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    time = iTime;\n    vec3 color = vec3(0.);\n    scene(color,fragCoord);\n    fragColor = vec4(color,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"lljGzK","filepath":"https://soundcloud.com/hollywood_principle/sets/breathing-underwater-remixes","previewfilepath":"https://soundcloud.com/hollywood_principle/sets/breathing-underwater-remixes","type":"musicstream","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":0}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"mat2 rot(float x){return mat2(sin(x),cos(x),-cos(x),sin(x));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord.xy * 2.0 - iResolution.xy) / min(iResolution.x, iResolution.y);\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    float prop = 1.0 - min(length(p)/3.,.9);\n    prop = mix(prop ,.6,.45);\n    \n    float t = iTime /6.;\n    p += vec2(cos(t),sin(t))/2.;\n    \n    p *= rot(-iTime/15. + length(p)/4.);\n    vec3 prev = texture(iChannel1,uv).rgb;\n    vec3 current = texture(iChannel0,uv).rgb;\n    vec3 ocolor = mix(current,prev,prop);\n    fragColor = vec4(ocolor,1.0);\n}","name":"Buffer B","description":"","type":"buffer"}]}