{"ver":"0.1","info":{"id":"WllBWB","date":"1598863501","viewed":44,"name":"TFG 3-6.3 Substracci칩n FDS","username":"lukasharing","description":"Substracci칩n f sobre g.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["tfg"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define EPSILON 0.01\n#define PI 3.1415\n\nmat2 rot(float a){\n    return mat2(\n        +cos(a), -sin(a), \n        +sin(a), +cos(a)\n    );\n}\n\nfloat SDFCircunsferencia(vec2 p, float r){\n\treturn length(p) - r;\n}\n\nfloat SDFRectangulo(vec2 p, vec2 s){\n    vec2 a = abs(p) - s;\n    return length(max(a, 0.0)) + min(max(a.x, a.y), 0.0);\n}\n\n// Escena\nfloat escena_sdf(vec2 p){\n    // Rotamos el rect치ngulo 45 grados\n    vec2 pr = p * rot(PI / 180. * 45.0);\n    // Trasladamos el rectangulo hacia 0.1 izquierda y 0.2 a la derecha.\n    vec2 pt = p - vec2(0.4, 0.15);\n    \n    // Sustraemos Una circunsferencia de un rect치ngulo.\n    return max(\n        SDFRectangulo(pr, vec2(0.3)),\n        -SDFCircunsferencia(pt, 0.3)\n    );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Preservamos el ratio aspecto y re-centramos\n    vec2 uv = (fragCoord-iResolution.xy * 0.5)/min(iResolution.x, iResolution.y);\n    // Para cada punto p (uv), aplicamos la funcion de distancia con signo\n    float d = escena_sdf(uv);\n    \n    vec3 col;\n    if(abs(d) < EPSILON){\n        col = vec3(1.0);\n    }else{\n        if(d < 0.0){\n    \t\tcol = vec3(1.0, 0., 0.);\n    \t}else{\n    \t\tcol = vec3(0., 0., 1.0);\n    \t}\n        // Numero de repeticiones\n        float k = 30.0;\n        // Tomamos la distancia en valor absoluto y nos quedamos con la parte fraccional\n        // Este valor esta [0,1].\n        col = col * (0.5 + 0.5 * (fract(abs(d) * k)));\n    }\n    \n    // Devolvemos el color asignado\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}