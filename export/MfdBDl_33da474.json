{"ver":"0.1","info":{"id":"MfdBDl","date":"1733651841","viewed":249,"name":"cyberpunk number font v3","username":"yasuo","description":"glitch cyberpunk number font\n\nhi @Shane: I applied your 2D flat bump map technique from your previous work, and it turned out amazing! It works incredibly well!\n\n","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["fonts","graphicdesign","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define R       iResolution.xy\n#define Rot(a)  mat2(cos( radians(a) - vec4(0,11,33,0)))\n#define S(d)    1.-smoothstep(-1.2,1.2, (d)*R.y )\n#define SkewX(a) mat2(1.0,tan(a),0.0,1.0)\n#define SkewY(a) mat2(1.0,0.0,tan(a),1.0)\n#define ch_0 0\n#define ch_1 1\n#define ch_2 2\n#define ch_3 3\n#define ch_4 4\n#define ch_5 5\n#define ch_6 6\n#define ch_7 7\n#define ch_8 8\n#define ch_9 9\n\nfloat Hash21(vec2 p) {\n    p = fract(p*vec2(234.56,789.34));\n    p+=dot(p,p+34.56);\n    return fract(p.x+p.y);\n}\n\n// thx iq! https://iquilezles.org/articles/distfunctions2d/\nfloat sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec2 glitchEfect(vec2 uv, float shift, float b) {\n    float glitchBlock = b;\n    vec2 uv2 = fract(uv*glitchBlock)-0.5;\n    vec2 id = floor(uv2);\n\n    float n =Hash21(id);\n    \n    float glitchDist = 0.01;\n    uv.x-=(fract(floor(uv.y+n*glitchBlock))*glitchDist);\n    uv.x+=sin(n*3.0)*shift;\n    return uv;\n}\n\nfloat grid(vec2 p, float size){\n    vec2 prevP = p;\n    float thickness = 0.001;\n    p.x+=0.25;\n    p = mod(p,size)-(size*0.5);\n    \n    float d = abs(p.x)-thickness;\n    float d2 = abs(p.y)-thickness;\n    d = min(d,d2);\n\n    return d;\n}\n\nfloat dots(vec2 p){\n    p = mod(p,0.1)-0.05;\n    float d = length(p)-0.01;\n    return d;\n}\n\nfloat stripes(vec2 p, float dir, float space, float s){\n    vec2 prevP = p;\n    \n    p*=Rot(30.);\n    p.x+=iTime*0.1*dir;\n    p.x = mod(p.x,space)-(space*0.5);\n    \n    float d = sdBox(p,vec2(s,10.));\n    return d;\n}\n\nfloat glitchBg(vec2 p){\n    vec2 prevP = p;\n    \n    p*=6.;\n    p.y-=iTime*0.5;\n    \n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n    vec2 prevGv = gv;\n    \n    gv = glitchEfect(gv,0.3,5.);\n    float n = clamp(Hash21(id)*0.4,0.1,0.4);\n    \n    float d = sdBox(gv,vec2(n));\n    \n    gv = prevGv;\n    float d2 = stripes(gv,n<0.2?1.:-1.,0.1,0.02+n*0.05);\n    if(n<0.15){\n        if(n<0.1)d = max(-d2,d);\n    } else {\n        d = 10.;\n    }\n    \n    p = prevP;\n    p*=3.;\n    p+=0.5;\n    p.y-=iTime*0.25;\n    gv = fract(p)-0.5;\n    id = floor(p);\n    prevGv = gv;\n    \n    gv = glitchEfect(gv,0.3,5.);\n    n = clamp(Hash21(id)*0.4,0.1,0.4);\n    \n    d2 = sdBox(gv,vec2(n));\n    \n    gv = prevGv;\n    float d3 = stripes(gv,n<0.2?1.:-1.,0.1,0.02+n*0.05);\n    if(n<0.3){\n        if(n<0.25)d2 = max(-d3,d2);\n    } else {\n        d2 = 10.;\n    }\n    d = min(d,d2);\n    \n    \n    p = prevP;\n    p*=3.;\n    p-=0.5;\n    p.y-=iTime*0.3;\n    gv = fract(p)-0.5;\n    id = floor(p);\n\n    gv = glitchEfect(gv,0.3,5.);\n    n = Hash21(id);\n    \n    d2 = dots(gv);\n    if(n>0.3){\n        d2 = 10.;\n    }\n    d = min(d,d2);\n    \n    \n    p = prevP;\n    p.y-=iTime*0.1;\n    d2 = grid(p,0.05);\n    d = min(d,d2);\n    \n    return d;\n}\n\nfloat char0(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.2,0.25));\n    \n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    p.y = abs(p.y);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    p = prevP;\n    float d2 = sdBox(p,vec2(0.1,0.15));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(-0.1,0.125),vec2(0.11,0.025));\n    d = max(-d2,d);\n    \n    return d;\n}\n\nfloat char1(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.05,0.25));\n    float d2 = sdBox(p-vec2(-0.05,0.2),vec2(0.05,0.05));\n    d = min(d,d2);\n    \n    d2 = sdBox(p-vec2(0.0,0.125),vec2(0.11,0.025));\n    d = max(-d2,d);\n    \n    return d;\n}\n\nfloat char2(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.2,0.25));\n    \n    p = prevP;\n    float d2 = sdBox(p-vec2(0.,0.1),vec2(0.3,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(0.1,-0.1),vec2(0.2,0.05));\n    d = max(-d2,d);\n\n    p-=vec2(-0.2,0.025);\n    p*=Rot(-45.);\n    \n    d2 = sdBox(p,vec2(0.1,0.025));\n    d = max(-d2,d);\n    \n    p = prevP;\n    \n    d2 = sdBox(p-vec2(0.15,0.05),vec2(0.05));\n    d = min(d,d2);        \n    \n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    p.y = abs(p.y);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat char3(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.2,0.25));\n    \n    p = prevP;\n    float d2 = sdBox(p-vec2(0.,0.1),vec2(0.3,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(-0.1,-0.1),vec2(0.2,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(-0.16,0.0),vec2(0.06,0.06));\n    d = max(-d2,d);\n    \n    p = prevP;\n    \n    d2 = sdBox(p-vec2(0.15,0.05),vec2(0.05));\n    d = min(d,d2);    \n    \n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    p.y = abs(p.y);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat char4(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p-vec2(0.05,-0.075),vec2(0.05,0.175));\n    float d2 = sdBox(p-vec2(0.0,-0.1),vec2(0.2,0.05));\n    d = min(d,d2);\n    \n    p*=Rot(18.);\n    d2 = sdBox(p-vec2(-0.125,0.05),vec2(0.05,0.2));\n    d = min(d,d2);\n    \n    p = prevP;\n    p-=vec2(0.1,0.08);\n    p*=Rot(45.);\n    \n    d2 = sdBox(p,vec2(0.07,0.025));\n    d = max(-d2,d);\n    \n    p = prevP;\n    d = max(-p.x-0.2,d);\n    d = max(p.y-0.25,d);\n    \n    return d;\n}\n\nfloat char5(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.2,0.25));\n    \n    p = prevP;\n    float d2 = sdBox(p-vec2(0.,0.1),vec2(0.3,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(-0.1,-0.1),vec2(0.2,0.05));\n    d = max(-d2,d);\n\n    p-=vec2(0.2,0.025);\n    p*=Rot(45.);\n    d2 = sdBox(p,vec2(0.1,0.025));\n    d = max(-d2,d);\n    \n    p = prevP;\n    \n    d2 = sdBox(p-vec2(-0.15,0.05),vec2(0.05));\n    d = min(d,d2);    \n    \n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    p.y = abs(p.y);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat char6(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.2,0.25));\n    \n    p = prevP;\n    float d2 = sdBox(p-vec2(0.,0.1),vec2(0.3,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(0.,-0.1),vec2(0.1,0.05));\n    d = max(-d2,d);\n\n    p-=vec2(0.2,0.025);\n    p*=Rot(45.);\n    d2 = sdBox(p,vec2(0.1,0.025));\n    d = max(-d2,d);\n    \n    p = prevP;\n    \n    d2 = sdBox(p-vec2(-0.15,0.05),vec2(0.05));\n    d = min(d,d2);    \n    \n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    p.y = abs(p.y);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat char7(vec2 p){\n    vec2 prevP = p;\n    p*=Rot(38.);\n    float d = sdBox(p-vec2(0.045,-0.05),vec2(0.05,0.35));\n    p = prevP;\n    float d2 = sdBox(p-vec2(0.0,0.2),vec2(0.2,0.05));\n    d = min(d,d2);\n    \n    d2 = sdBox(p-vec2(0.0,0.125),vec2(0.3,0.025));\n    d = max(-d2,d);\n    \n    d = max(p.x-0.2,d);\n    d = max(-p.y-0.25,d);\n    \n    p = prevP;\n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat char8(vec2 p){\n    vec2 prevP = p;\n    float d = sdBox(p,vec2(0.2,0.25));\n    \n    p = prevP;\n    float d2 = sdBox(p-vec2(-0.11,0.1),vec2(0.21,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(0.,-0.1),vec2(0.1,0.05));\n    d = max(-d2,d);\n    \n    d2 = sdBox(p-vec2(-0.15,0.05),vec2(0.05));\n    d = min(d,d2);\n    \n    p = prevP;\n    float a = radians(45.);\n    p.x = abs(p.x)-0.4;\n    p.y = abs(p.y);\n    d = max(dot(p,vec2(cos(a),sin(a))),d);\n    \n    return d;\n}\n\nfloat char9(vec2 p){\n    vec2 prevP = p;\n    p*=-1.0;\n    float d = char6(p);\n    \n    return d;\n}\n\nfloat checkChar(int targetChar, int char){\n    return 1.-abs(sign(float(targetChar) - float(char)));\n}\n\nfloat drawFont(vec2 p, int char){\n    p*=0.6;\n    //p*=Rot(90.);\n    p*=SkewX(radians(-20.));\n    p = glitchEfect(p,0.035,5.0);\n    vec2 prevP = p;\n    float d = char0(p)*checkChar(ch_0,char);\n    d += char1(p)*checkChar(ch_1,char);\n    d += char2(p)*checkChar(ch_2,char);\n    d += char3(p)*checkChar(ch_3,char);\n    d += char4(p)*checkChar(ch_4,char);\n    d += char5(p)*checkChar(ch_5,char);\n    d += char6(p)*checkChar(ch_6,char);\n    d += char7(p)*checkChar(ch_7,char);\n    d += char8(p)*checkChar(ch_8,char);\n    d += char9(p)*checkChar(ch_9,char);\n    \n    return d;\n}\n\nfloat render(vec2 p){\n    //p*=Rot(30.*iTime);\n\n    float t = iTime;\n    p*=4.;\n    p.y-=t*0.5;\n    \n    if(mod(p.y,2.)>1.){\n        p.x+=t*0.5;\n    } else {\n        p.x-=t*0.5;\n    }\n    \n    vec2 gv = fract(p)-0.5;\n    vec2 id = floor(p);\n\n    float n = Hash21(id)*10.0;\n    int char = int(n);\n    int frame = int(mod(iTime*1.2+float(n),10.0));\n    float d = drawFont(gv,frame);\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (fragCoord-0.5*iResolution.xy)/iResolution.y;\n    \n    vec3 col = vec3(0.);\n\n    // shane's 2d flat bumpmap reference: https://www.shadertoy.com/view/4ftBzS\n    float px = 1e-2/iResolution.y;\n    float d3X = render(p + vec2(px, 0));\n    float d3Y = render(p + vec2(0, px));\n    float dB = d3Y;\n\n    float d = glitchBg(p);\n    col = mix(col,vec3(0.35),S(d));\n    \n    d = render(p);\n    float depth =  -.03;\n    float b = (max(dB, depth) - max(d, depth))/px;\n    b = max(.5 + b, 0.);\n    col = mix(col,vec3(1.)*.5 + b,S(d));\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}