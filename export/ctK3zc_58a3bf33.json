{"ver":"0.1","info":{"id":"ctK3zc","date":"1684375067","viewed":103,"name":"Fork Fork swirl flylo 745","username":"flylo","description":"trig stuff","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"DlKGRK","parentname":"Fork swirl rand flylo 051"},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    float r2;\n\n    float dt  = .5+.5*sin(.5*iTime);\n    float dt2 = .5+.5*sin(1.5+.6*iTime);\n    float mdt = .2+.8*dt;\n    float mdt2 = .2+.8*dt2;\n    \n    uv = vec2(.1+sin(3.1*mdt2*uv));\n    r2 = length(uv)*length(uv);\n    for(int i = 0; i< 4; i++) {\n        //uv = vec2(sin(uv.x), sin(uv.y));\n        uv = vec2(mdt2*tan(.5*mdt*uv.x), mdt*tan(.5*mdt2*uv.y));\n\n        r2 = length(uv)*length(uv);\n        uv = vec2(1./r2*uv.y, 1./r2*uv.x);\n\n        //uv = vec2(uv.x*sin(r2)-uv.y*cos(r2), uv.x*cos(r2)+uv.y*sin(r2));\n        //uv = vec2(cos(uv.x-uv.y), sin(uv.x-uv.y));\n   \n    }\n    \n    // Time varying pixel color\n    //vec3 col = 0.5 + 0.5*cos(uv.xyx+vec3(0,2,4));\n\n    vec3 col = vec3(uv.x, uv.y, uv.y-uv.x);\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}