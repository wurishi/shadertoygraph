{"ver":"0.1","info":{"id":"DlsGWN","date":"1671780668","viewed":145,"name":"Bouncy Ball in a Disk","username":"oneshade","description":"An afterthought (+headscratching).","likes":12,"published":3,"flags":0,"usePreview":0,"tags":["disk","bouncing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926536\n\nmat2 Rotate2D(in float a) {\n    float co = cos(a), si = sin(a);\n    return mat2(co, si, -si, co);\n}\n\nfloat sdBall(in vec2 p, in float r) {\n    return length(p) - r;\n}\n\nfloat sdVector(in vec2 p, in vec2 v) {\n    return length(p - v * clamp(dot(p, v) / dot(v, v), 0.0, 1.0));\n}\n\nvoid diskBounce(in float r, in vec2 p0, in vec2 v0, in float t, out vec2 pos, out vec2 vel) {\n    float a = dot(v0, v0);\n    float b = dot(p0, v0);\n    float c = dot(p0, p0) - r * r;\n    float dis = b * b - a * c;\n    if (dis >= 0.0 && c <= 0.0) {\n        dis = sqrt(dis);\n        t += (dis + b) / a;\n\n        vec2 hit = p0 + v0 * (dis - b) / a;\n        float reflDelta = 2.0 * asin((p0.y * v0.x - p0.x * v0.y) / (r * sqrt(a))) - PI;\n\n        float pathLen = 2.0 * dis / a;\n        float hitIndex = floor(t / pathLen);\n\n        float angle = reflDelta * hitIndex;\n        vec2 startPos = Rotate2D(angle - reflDelta) * hit;\n        vec2 startVel = Rotate2D(angle) * v0;\n\n        t -= pathLen * hitIndex;\n        pos = startPos + startVel * t, vel = startVel;\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y * 4.0;\n    float unit = 8.0 / iResolution.y;\n    vec3 color = vec3(0.0);\n\n    float diskSize = 1.5;\n    float ballSize = 0.2;\n    vec2 p0 = vec2( 1.0517140025,  0.7641149501);\n    vec2 v0 = vec2(-2.8531707074, -0.9270474175);\n\n    color = mix(color, vec3(1.0), smoothstep(unit, 0.0, abs(length(uv) - diskSize)));\n\n    vec2 pos, vel;\n    diskBounce(diskSize - ballSize, p0, v0, iTime, pos, vel);\n\n    uv -= pos;\n    color = mix(color, vec3(0, 0, 1), smoothstep(unit, 0.0, sdVector(uv, 0.25 * vel)));\n    color = mix(color, vec3(1, 0, 0), smoothstep(unit, 0.0, sdBall(uv, ballSize)));\n\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}