{"ver":"0.1","info":{"id":"McXfW7","date":"1723878613","viewed":50,"name":"flower fractal","username":"nayk","description":"remake from https://glslsandbox.com/e#65773.0","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["fractal","geometry","cineshader"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define resolution iResolution.xy\n#define time iTime\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n\tvec2 p = 2. * (gl_FragCoord.xy-resolution/2.) / resolution.y;\n\tfloat f=0., r;\n     p.xy*=mat2(cos(iTime),sin(iTime), -sin(iTime) ,cos(iTime));\n\tconst float I = 16.;\n\tfor(float i=1.; i<=I; i++) {\n     p.xy*=-mat2(cos(iTime*0.1),sin(iTime*0.1), -sin(iTime*0.1) ,cos(iTime*0.1));\n\t\tif(abs(p.x)+abs(p.y)<1.5) {\n\t\t    r = sin(time+.3*i)/2.;\n\t\t    if(p.x<2.*r) {\n\t\t\tp.x -= r-.5;\n            p.xy*=-mat2(cos(iTime*0.1),sin(iTime*0.1), -sin(iTime*0.1) ,cos(iTime*0.1));\n\t\t\tp /= r+.5;\n\t\t    }\n\t\n\t\telse {\n\t\t\tp.x -= r+.5;\n\t\t\tp /= r-.5;\n            \n\t\t    }\n\t\t    f = i/I;\n\t\t}\n\t}\n    \n\tfragColor = vec4(vec3(1.2, 0.5, 5.)*vec3(f), 1.);\n}","name":"Image","description":"","type":"image"}]}