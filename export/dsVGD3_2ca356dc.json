{"ver":"0.1","info":{"id":"dsVGD3","date":"1679146148","viewed":95,"name":"rect_02","username":"AHS1222","description":"asdf","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["asdf"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dX3Rn","filepath":"/media/a/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","previewfilepath":"/media/ap/bd6464771e47eed832c5eb2cd85cdc0bfc697786b903bfd30f890f9d4fc36657.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI 3.1415926535\nmat2 rot2d(float angle){\n    return mat2(cos(angle), -sin(angle),\n                sin(angle), cos(angle));\n}\n\nfloat rect(vec2 uv, vec2 coord, float size, float angle){\n    coord*=rot2d(angle);\n    uv*=rot2d(angle);\n    vec2 al = step(vec2(coord.x-size*.5, coord.y-size*.5),uv) - step(vec2(coord.x+size*.5, coord.y+size*.5),uv);\n    return al.x*al.y;\n}\nfloat rect2(vec2 uv, vec2 coord, float size, float angle, float width, float sm){\n    coord*=rot2d(angle);\n    uv*=rot2d(angle);\n    vec2 al_0 = smoothstep(vec2(coord.x-size*width*.5, coord.y-size*.5),vec2(coord.x-size*width*.5, coord.y-size*.5)+sm,uv) - smoothstep(vec2(coord.x+size*width*.5, coord.y+size*.5)-sm,vec2(coord.x+size*width*.5, coord.y+size*.5),uv);\n    vec2 al_1 = smoothstep(vec2(coord.x-size*.5, coord.y-size*width*.5),vec2(coord.x-size*.5, coord.y-size*width*.5)+sm,uv) - smoothstep(vec2(coord.x+size*.5, coord.y+size*width*.5)-sm,vec2(coord.x+size*.5, coord.y+size*width*.5),uv);\n    return max(al_0.x*al_0.y, al_1.x*al_1.y);\n}\n\nfloat div(float value, float divvalue){\n    return (value / divvalue)-mod(value, divvalue);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = 2.*uv-1.;\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Time varying pixel color\n    vec3 col = vec3(.0);\n    float v=.25;\n    float size = .3;\n    for(float i=-4.; i<=4.; i+=v){\n        for(float j=-4.; j<=4.; j+=v){\n            float value = 2.*mod(div(abs(j)+abs(i),v),2.)-1.;\n            float v_value = mod(div(abs(j),v),2.);\n            float h_value = mod(div(abs(i),v),2.);\n            col += vec3(rect2(uv,vec2(i+v_value*v*.5, j), size, iTime*value+h_value*PI*.25, .1, .02));\n        }\n    }\n    col*=sin(PI*length(20.*uv)-iTime*3.);\n    col*= 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec4 fn = texture(iChannel0,uv);\n    // Output to screen\n    fragColor = vec4(col, 1.);\n    //fragColor = vec4(mix(vec3(fn.r, fn.g, fn.b), vec3(1.),col),1.0);\n}","name":"Image","description":"","type":"image"}]}