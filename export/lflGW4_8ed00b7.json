{"ver":"0.1","info":{"id":"lflGW4","date":"1703087561","viewed":18,"name":" invert(grid Ã— diamond)","username":"karakure178","description":"Inverting the superimposed colors.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["grid"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box(in vec2 _st, in vec2 _size){\n    _size = vec2(0.5) - _size*0.5;\n    vec2 uv = smoothstep(_size,\n                        _size+vec2(0.001),\n                        _st);\n    uv *= smoothstep(_size,\n                    _size+vec2(0.001),\n                    vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\n\nvec2 tile(vec2 _st, float _zoom){\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotate2D(vec2 _st, float _angle){\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\n#define PI 3.14159265358979323846\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;    \n    vec2 st = fragCoord/iResolution.xy;\n    \n    st = tile(st,4.);    \n    uv = tile(uv,iTime);\n\n\n    st = rotate2D(st, PI*0.25);\n\n    vec3 col = vec3(box(st,vec2(0.7)));    \n    vec3 is_col = vec3(box(uv,vec2(0.7)));\n    if(col == is_col){\n        fragColor = vec4(0.0,0.0,0.0,1.0);       \n    }else{\n        fragColor = vec4(1.0,1.0,1.0,1.0);       \n    }\n\n}","name":"Image","description":"","type":"image"}]}