{"ver":"0.1","info":{"id":"3ld3Wl","date":"1577967740","viewed":619,"name":"Cheap normal map with sobel","username":"boysx","description":"normal map generator with sobel operator","likes":13,"published":3,"flags":0,"usePreview":0,"tags":["map","normal","generator"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3Rn","filepath":"/media/a/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","previewfilepath":"/media/ap/92d7758c402f0927011ca8d0a7e40251439fba3a1dac26f5b8b62026323501aa.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float lum(vec3 c)\n{\n    return 0.2126*c.r + 0.7152*c.g + 0.0722*c.b;\n    // fast alternative\n    // const float oneThird = 1./3.;\n    // return (c.x + c.y + c.z) * oneThird;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texelsize = 1. / iResolution.xy;\n\n    float dx = 0.;\n    float dy = 0.;\n    \n    dx -= lum(texture(iChannel0, vec2(uv.x - texelsize.x, uv.y - texelsize.y)).rgb) * 1.0;\n\tdx -= lum(texture(iChannel0, vec2(uv.x - texelsize.x, uv.y              )).rgb) * 2.0;\n\tdx -= lum(texture(iChannel0, vec2(uv.x - texelsize.x, uv.y + texelsize.y)).rgb) * 1.0;\n\tdx += lum(texture(iChannel0, vec2(uv.x + texelsize.x, uv.y - texelsize.y)).rgb) * 1.0;\n\tdx += lum(texture(iChannel0, vec2(uv.x + texelsize.x, uv.y              )).rgb) * 2.0;\n\tdx += lum(texture(iChannel0, vec2(uv.x + texelsize.x, uv.y + texelsize.y)).rgb) * 1.0;\n    \n    dy -= lum(texture(iChannel0, vec2(uv.x - texelsize.x, uv.y - texelsize.y)).rgb) * 1.0;\n\tdy -= lum(texture(iChannel0, vec2(uv.x              , uv.y - texelsize.y)).rgb) * 2.0;\n\tdy -= lum(texture(iChannel0, vec2(uv.x + texelsize.x, uv.y - texelsize.y)).rgb) * 1.0;\n\tdy += lum(texture(iChannel0, vec2(uv.x - texelsize.x, uv.y + texelsize.y)).rgb) * 1.0;\n\tdy += lum(texture(iChannel0, vec2(uv.x              , uv.y + texelsize.y)).rgb) * 2.0;\n\tdy += lum(texture(iChannel0, vec2(uv.x + texelsize.x, uv.y + texelsize.y)).rgb) * 1.0;\n    \n    float nx = dx;\n    float ny = dy;\n    vec3 norm = vec3(dx, dy, sqrt(1.0 - dx*dx - dy*dy));\n    \n    fragColor = vec4(norm * vec3(0.5, 0.5, 1.0) + vec3(0.5, 0.5, 0.0), 1.0);\n}","name":"Image","description":"","type":"image"}]}