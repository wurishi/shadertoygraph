{"ver":"0.1","info":{"id":"3d3fzf","date":"1692557607","viewed":84,"name":"concentric tests","username":"emymin","description":"idk just testing out some stuff","likes":0,"published":3,"flags":0,"usePreview":0,"tags":["distortion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdBox( in vec2 p, in vec2 b )\n{\n    vec2 d = abs(p)-b;\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\n}\n\nvec2 EulToPol(vec2 uv){return vec2(length(uv),atan(uv.y,uv.x)); }\nvec2 PolToEul(vec2 pol){return vec2(pol.x*cos(pol.y),pol.x*sin(pol.y));}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 inuv = uv;\n    \n    uv=EulToPol(uv-.5);\n    uv.x=fract((uv.x-iTime/10.)*10.);\n    uv=PolToEul(uv);\n\n    \n    vec3 col;\n    col.rgb = texture(iChannel0, (uv/2.+.5)  ).rgb;\n\t//col.rgb = texture(iChannel0,inuv).rgb+col.rgb*0.1;\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}