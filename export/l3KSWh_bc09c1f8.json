{"ver":"0.1","info":{"id":"l3KSWh","date":"1719907233","viewed":57,"name":"第一个实验","username":"horus_2024","description":"第一次shader实验","likes":2,"published":1,"flags":0,"usePreview":0,"tags":[],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // 归一化屏幕坐标\n    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv0 = uv;\n    vec3 finalColor = vec3(0.0);\n    for (float i = 0.0; i < 3.0; i++) {\n      uv = fract(uv * 1.5) - 0.5;\n      float d = length(uv) * exp(-length(uv0));\n      vec3 col = palette((length(uv0)) + i * .8 + iTime * .4);\n      // d -= 0.5;\n      d = sin((d - 0.5) * 8. + iTime) / 8.;\n      d = abs(d);\n      d = pow(0.01 / d, 1.2);\n      // vec3 col = palette(d);\n      finalColor += col * d;\n    }\n    // 根据归一化坐标设置颜色\n    fragColor = vec4(finalColor, 1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"vec3 palette(float t) {\n  vec3 a = vec3(0.5, .5, .5);\n  vec3 b = vec3(.5, .5, .5);\n  vec3 c = vec3(1., 1., 1.);\n  vec3 d = vec3(0.263, 0.416, 0.557);\n  return a + b * cos(6.28318 * (c*t + d));\n}","name":"Common","description":"","type":"common"}]}