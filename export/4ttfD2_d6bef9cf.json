{"ver":"0.1","info":{"id":"4ttfD2","date":"1541107815","viewed":374,"name":"Webcam Cube","username":"DaveS","description":"Cube of webcam image overlaid with colours","likes":1,"published":1,"flags":6,"usePreview":0,"tags":["outlands"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XdXGRr","filepath":"/presets/mic.png","previewfilepath":"/presets/mic.png","type":"mic","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    \n    \n// Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    float fft=texture(iChannel1,vec2(440. * 11025.,0.25)).r;\n    uv.x = uv.x - 0.3 + fft;\n    uv.y = uv.y - 0.3 + fft;\n    fragColor = vec4(0,0,0,0);\n    \n    float side = 0.3 + fft;\n    float deep = 0.1 + fft;\n\n    if (uv.x > 0.0 && uv.y > 0.0 && uv.x < side && uv.y < side)\n    {\n        uv.x = uv.x / side;\n        uv.y = uv.y / side;\n        fragColor  = texture( iChannel0, uv).rgba;\n\n    }\n    else if (uv.x > uv.y - side && uv.y > side && uv.x < uv.y && uv.y <side + deep)\n    {\n        uv.x = (uv.x + side - uv.y) / side;\n        uv.y = (uv.y - side) / deep;\n        fragColor  = texture( iChannel0, uv).rgba;\n\n    }\n    else if (uv.x > side && uv.x - uv.y > .0 && uv.x < side + deep && uv.x - uv.y < side)\n    {\n        uv.y = (uv.y - uv.x + side) / side;\n        uv.x = (uv.x - side) / deep;\n        fragColor  = texture( iChannel0, uv).rgba;\n\n    }\n    if (true)\n    {\n        uv.x = uv.x* 16.0;\n        uv.y = uv.y * 16.0;\n        vec3 col = 0.5 + 0.5 * sin(vec3(iTime, 0.7*iTime, 3.0*iTime)+uv.xyy+vec3(0,2.0,4.0));\n        col = col + 0.5 * sin(vec3(2.0* iTime, 0.8*iTime, 0.9*iTime)+uv.xxy+vec3(0,2.0,4.0));\n\n        col = pow(col, vec3(6,3,1));\n        fragColor += 0.5 * vec4(col, 0.0);\n    }\n\n    \n}","name":"Image","description":"","type":"image"}]}