{"ver":"0.1","info":{"id":"3sjyD1","date":"1586559189","viewed":310,"name":"Awaken","username":"dashsc","description":"Infinite zoom","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = texture(iChannel0, uv).rgb;\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"mat2 rotate2d(float a) {\n    return mat2(sin(a),cos(a),-cos(a),sin(a));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.xy;\n    vec3 col = vec3(0.);\n    vec2 tv = uv;\n    float time = iTime*0.5;\n    //tv *= time;\n    //tv -= 0.5;\n    //tv *= fract(time*0.5)*10.;\n    //tv += 0.5;\n    vec2 ug = fract(tv*20.);\n    vec2 ug1 = fract(tv*22.);\n    //ug *= fract(time);\n    //ug1 *= fract(time*0.1);\n    ug -= 0.5;\n    //ug *= time;\n    //float steps = 8.;\n    //float steps = time*fract(time);\n    float steps = time*fract(length(tv-0.5)+time*0.01);\n    //float steps = time*sin(length(tv-0.5));\n    //steps *= 1.-(1./((time*0.1)+1.));\n    //col += length(ug);\n    //col = vec3(0.5);\n    if (steps > 1000.) {\n        steps = 10.;\n    }\n    steps += 3.;\n    for (float i=0.; i<steps; i++) {\n        float tt = fract((time+i*0.5)*0.5);\n        vec2 sv = tv;\n        tt *= 1.;\n        //sv = fract(tv*10.);\n        sv -= 0.5;\n        sv *= tt*rotate2d(i*time*0.001+time*0.1);\n        sv += 0.5;\n        sv = fract(sv*10.*i);\n        //col += mix(col.r,length(sv-0.5),abs(tt*0.5)*2.);\n        col += mix(length(sv-0.5),0.5,(abs(tt-0.5)*2.))*(1./steps);\n    }\n    vec3 bak = texture(iChannel0, tv).rgb;\n    col = mix(col,bak,0.01);\n    //col = sin(bak);\n    //col *= bak.r;\n    col.rg = sin(col.bb*5.+time*0.5)*0.5+0.5;\n    col.gb = sin(col.rb*10.+time)*0.5+0.5;\n    col = mix(col,bak,.94);\n    col = fract(col+0.002);\n    //col -= 0.3;\n    //col *= 100.;\n    //col += length(ug1-0.5);\n    //col += sin(uv.x*200+time);\n    //col = fract(col*10.);\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Buffer A","description":"","type":"buffer"}]}