{"ver":"0.1","info":{"id":"clySWw","date":"1686121907","viewed":161,"name":"selective depth of field","username":"lalaoopybee","description":"mouse dragged box sdf with large edge blue creates the sigma mask.\ninterpolate between min and max sigma with gaussian to produce depth of field.\neverything in the box will be in \"focus\"","likes":7,"published":1,"flags":32,"usePreview":1,"tags":["mouse","blur","dof","depthoffield","gaussian","interact","pr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define Pi 3.1415927\n\n#define K 11\n#define MinSigma .01\n#define MaxSigma 3.5\n\nfloat gaussian (vec2 pos, float sigma) {\n    float left=1./(2.*Pi*sigma*sigma);\n    float right=exp(-dot(pos, pos)/(2.*sigma*sigma));\n    return left*right;\n}\n\nvoid mainImage (out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv=fragCoord/iResolution.xy;\n    float val=texture(iChannel1, uv).r;\n    float sigma=mix(MinSigma, MaxSigma, val);\n\n    vec4 sum=vec4(0.);\n    for(int i=0;i<2*K+1;i++){\n        for(int j=0;j<2*K+1;j++){\n            vec2 offset=vec2(i-K, j-K);\n            float weight=gaussian(offset, sigma);\n            \n            vec2 offsetUV=offset/iResolution.xy;\n            vec4 col=texture(iChannel0, uv+offsetUV);\n            sum+=vec4(col.rgb, 1.)*weight;\n        }\n    }\n    fragColor=sum/sum.a;\n    \n    vec2 ptA=iMouse.xy, ptB=abs(iMouse.zw);\n    if(iMouse.xy==vec2(0.)) ptA=iResolution.xy*.25, ptB=iResolution.xy*.75;\n    vec2 a=step(1., abs(fragCoord-ptA));\n    vec2 b=step(1., abs(fragCoord-ptB));\n    float comb=1.-a.x*a.y*b.x*b.y;\n    float wave=abs(fragCoord.x+fragCoord.y+iTime*20.)*.1;\n    float stripe=step(1., mod(wave, 2.));\n    \n    fragColor*=1.-(1.-pow(val, .1))*comb*stripe;\n    \n    #if 0\n    fragColor=vec4(val);\n    #endif\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define BLUR .35\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord){\n    vec2 uv=fragCoord/iResolution.xy;\n    vec2 ptA=iMouse.xy/iResolution.xy;\n    vec2 ptB=abs(iMouse.zw)/iResolution.xy;\n    if(iMouse.xy==vec2(0.)) ptA=vec2(.25), ptB=vec2(.75);\n    vec2 minPt=min(ptA, ptB), maxPt=max(ptA, ptB);\n    vec2 minSt=1.-smoothstep(minPt, minPt-BLUR, uv);\n    vec2 maxSt=1.-smoothstep(maxPt, maxPt+BLUR, uv);\n    float comb=minSt.x*minSt.y*maxSt.x*maxSt.y;\n    comb=pow(comb, 2.4);\n    fragColor=vec4(1.-comb);\n}","name":"Buffer A","description":"","type":"buffer"}]}