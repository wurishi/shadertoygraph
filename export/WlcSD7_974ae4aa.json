{"ver":"0.1","info":{"id":"WlcSD7","date":"1581030272","viewed":330,"name":"colorful thingy","username":"C_H","description":"Playing with polar coordinates, perlin noise and delaying each rgb component.\n","likes":9,"published":1,"flags":0,"usePreview":0,"tags":["perlinnoise","color","polarcoordinates"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// https://creativecommons.org/licenses/by-sa/4.0/\n// by Denis H.\n\n#define PI 3.14159\n#define TWO_PI 6.28318\n\n// Perlin Noise from https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\nfloat rand(vec2 c){\n\treturn fract(sin(dot(c.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nfloat noise(vec2 p, float freq ){\n\tfloat unit = 1./freq;\n\tvec2 ij = floor(p/unit);\n\tvec2 xy = mod(p,unit)/unit;\n\txy = .5*(1.-cos(PI*xy));\n\tfloat a = rand((ij+vec2(0.,0.)));\n\tfloat b = rand((ij+vec2(1.,0.)));\n\tfloat c = rand((ij+vec2(0.,1.)));\n\tfloat d = rand((ij+vec2(1.,1.)));\n\tfloat x1 = mix(a, b, xy.x);\n\tfloat x2 = mix(c, d, xy.x);\n\treturn mix(x1, x2, xy.y);\n}\n\nfloat pNoise(vec2 p, int res){\n\tfloat persistance = .5;\n\tfloat n = 0.;\n\tfloat normK = 0.;\n\tfloat f = 4.;\n\tfloat amp = 1.;\n\tint iCount = 0;\n\tfor (int i = 0; i<50; i++){\n\t\tn+=amp*noise(p, f);\n\t\tf*=2.;\n\t\tnormK+=amp;\n\t\tamp*=persistance;\n\t\tif (iCount == res) break;\n\t\tiCount++;\n\t}\n\tfloat nf = n/normK;\n\treturn nf*nf*nf*nf;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord.xy-.5*iResolution.xy)/iResolution.y;\n    vec2 st = vec2(atan(uv.x, uv.y), length(uv));\n    uv = vec2(.5+st.x/TWO_PI, st.y);\n\n    float t = iTime*2., x, y, m;\n    float n = pNoise(vec2((cos(uv.x * TWO_PI) + 1.), (sin(uv.y * TWO_PI) + 1.) )+iTime/9., 10);\n    vec3 col;\n    \n    for(int i = 0; i < 3; i++) {\n    \tx = uv.x + n * .1;\n        y = uv.y + n * .09 + sin(uv.x * TWO_PI * 10. + t) * .05;\n    \tx *= 20.;\n    \tm = min(fract(x), fract(1.-x));\n    \tcol[i] = smoothstep(0., .1, .25 + m * .3 - y);\n        t+= 1.;\n    }\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}