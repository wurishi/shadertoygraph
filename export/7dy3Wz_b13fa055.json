{"ver":"0.1","info":{"id":"7dy3Wz","date":"1631327514","viewed":66,"name":"Mix Two Color - easing function","username":"bsc5622","description":"shader book\nusually,we use curve in UE4 to have easing function effect.\nhttps://easings.net/#easeInOutElastic\nis the refference of this kind of function.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["practice"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define PI = 3.1415926\n\nvec3 ColorA = vec3(0.5,0.8,0.0);\nvec3 ColorB = vec3(0.8,0.5,0.0);\nfloat c5 = (2.0 * 3.1415926) / 4.5;\n\nfloat easeInOutElastic(float x) {\n\n\nreturn x == 0.0\n  ? 0.0\n  : x == 1.0\n  ? 1.0\n  : x < 0.5\n  ? -(pow(2.0, 20.0 * x - 10.0) * sin((20.0 * x - 11.125) * c5)) / 2.0\n  : (pow(2.0, -20.0 * x + 10.0) * sin((20.0 * x - 11.125) * c5)) / 2.0 + 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    //float pct = abs(sin(iTime));\n    float pct = easeInOutElastic(sin(iTime));\n    \n    vec3 col = mix(ColorA,ColorB,pct);\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}