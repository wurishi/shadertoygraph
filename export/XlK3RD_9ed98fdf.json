{"ver":"0.1","info":{"id":"XlK3RD","date":"1473555667","viewed":94,"name":"CHILLZ","username":"Julia_Sets","description":"Another modification of the Julia Set","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["chillz"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// (a + bi)^2 = a^2 - b^2 + 2abi\nvec2 squareComplexNumber(vec2 complexNumber) {\n    float realComponentOfProduct = (complexNumber.x * complexNumber.x) - (complexNumber.y * complexNumber.y);\n    float imaginaryComponentOfProduct = 2.0 * complexNumber.x * complexNumber.y;\n    return vec2(realComponentOfProduct, imaginaryComponentOfProduct);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec4 rainbow[7];\n    rainbow[0] = vec4(1.0, 0.0, 0.0, 1.0); // Red\n    rainbow[1] = vec4(1.0, 0.5, 0.0, 1.0); // Orange\n    rainbow[2] = vec4(1.0, 1.0, 0.0, 1.0); // Yellow\n    rainbow[3] = vec4(0.0, 1.0, 0.0, 1.0); // Green\n    rainbow[4] = vec4(0.0, 0.0, 1.0, 1.0); // Blue\n    rainbow[5] = vec4(0.294117647, 0.0, 0.509803922, 1.0); // Indigo (according to Wikipedia)\n    rainbow[6] = vec4(0.5, 0.0, 1.0, 1.0); // Violet (according to Wikipedia)\n    \n\tfloat zoom = 2.0;\n    vec2 c = vec2(sin(iTime), cos(iTime));\n    //vec2 c = vec2(-1.0, 0.0);\n    \n    vec2 z = fragCoord.xy / iResolution.xy;\n    z = z * vec2(zoom * 2.0);\n    z = z - vec2(zoom);\n    \n    fragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    for (int i = 0; i < 14; i++) {\n        z = squareComplexNumber(z) + c;\n        \n    \tif (abs(z.x) < 2.0 && z.y < 2.0) {\n            fragColor = rainbow[i / 2];\n    \t}\n    }\n}","name":"Image","description":"","type":"image"}]}