{"ver":"0.1","info":{"id":"4dfcDl","date":"1491560928","viewed":163,"name":"Practica1_Pixelate","username":"MarioBG11","description":"Pixelate","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["pixelate"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define pixelWidth 6.0\n#define pixelHeigh 6.0\n//si es true el pixel width y pixel heigh definen el tama√±o de cada pixel\n//y si no define el numero de pixels que quiero por anchura y altura de pantalla\n#define bIsInPixelSize true\n \nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec2 newRes;\n    \n    if(bIsInPixelSize){\n        newRes = vec2(iResolution.x/pixelWidth, iResolution.y/pixelHeigh);\n        \n        if ( fragCoord.y < (newRes.y )  *  pixelHeigh  ||   fragCoord.x > (newRes.x)  *  pixelWidth ){        \n       \t   uv = ceil( uv * newRes ) / newRes;        \n        } else{           \n           uv = floor( uv * newRes ) / newRes;                    \n        }\n        \n       \n        fragColor = texture ( iChannel0, uv );\n    }else{\n        \n        newRes = vec2(pixelWidth, pixelHeigh);\n        uv = floor( uv * newRes ) / newRes;\n        fragColor = texture ( iChannel0, uv );\n\t\t\n    }\n}","name":"Image","description":"","type":"image"}]}