{"ver":"0.1","info":{"id":"mtGyDt","date":"1700856587","viewed":80,"name":"Feedback wanted: sprite UVs","username":"jeremyabel","description":"Can this be done without a branch? My gut says no but maybe? The only qualification I have is that the area outside the sprite bounds is some value outside [0..1]","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["raining","jeanclaude","imagesprites"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Its Raining Jean Cloude!\" by oneshade. https://shadertoy.com/view/3tVyW1\n// 2023-11-24 00:02:40\n\nvoid ImageSprite(inout vec2 uv, in vec2 p, in vec2 pos, in vec2 size) \n{\n    p = (p - pos) / size + 0.5;\n    vec2 corner = abs(p - 0.5) - 0.5;\n    float bbox = max(corner.x, corner.y);\n    if (bbox < 0.) {\n        uv = p;\n    }\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) \n{\n    vec2 uv = (fragCoord - 0.5 * iResolution.xy) / iResolution.y;\n    vec2 modUV = vec2(0.);\n    \n    ImageSprite(modUV, uv, vec2( 0.0,  0.3), vec2(0.3));\n    ImageSprite(modUV, uv, vec2( 0.4,  0.0), vec2(0.3));\n    ImageSprite(modUV, uv, vec2(-0.4,  0.0), vec2(0.3));\n    ImageSprite(modUV, uv, vec2( 0.0, -0.3), vec2(0.3));\n\n    fragColor = vec4(vec3(modUV, 0.), 1.0);\n}","name":"Image","description":"","type":"image"}]}