{"ver":"0.1","info":{"id":"lXf3z4","date":"1707198251","viewed":132,"name":"Radiation I","username":"itishappy","description":"radiation","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["interference","beam","radiation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float V  = 0.15,             // velocity\n            WL = 0.25;             // wavelength\nconst vec2  S1 = vec2(-1.0, 0.5),  // source position 1\n            S2 = vec2(-1.0, -0.5); // source position 2\n\nvoid mainImage(out vec4 o, in vec2 uv) {\n    // square and center coordinates\n    vec2   res = iResolution.xy,\n           pos = (2.0 * uv - res) / res.y;\n\n    // distances and amplitudes\n    float  d1  = length(S1 - pos),\n           d2  = length(S2 - pos),\n           a1  = cos(3.1415 * (d1 - iTime * V) / WL) / d1,\n           a2  = sin(3.1415 * (d2 - iTime * V) / WL) / d2,\n           a0  = a1 + a2;\n\n    // default shader, lol\n    vec3   col = 0.5 + 0.5 * cos(pos.xyx + vec3(0, 2, 4) - iTime);\n\n    // square the amplitude\n    o = a0 * a0 * vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}