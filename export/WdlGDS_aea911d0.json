{"ver":"0.1","info":{"id":"WdlGDS","date":"1547389986","viewed":591,"name":"glitching grid","username":"public_int_i","description":"glitching grid","likes":11,"published":3,"flags":0,"usePreview":0,"tags":["2d","grid","effect","chromatic","glitching","aberation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Ethan Alexander Shulman 2019, made on livestream at twitch.tv/ethanshulman\n\nfloat squares(vec2 uv) {\n\tvec2 rp = mod(abs(uv)*10.,2.)-1.,\n\t\tbd = abs(rp)-.8;\n\treturn max(0.,1.-abs(max(bd.x,bd.y))*8.);\n}\n\n#define time iTime\n\nvoid mainImage( out vec4 o, in vec2 u)\n{\n    vec2 uv = (u*2.-iResolution.xy)/iResolution.y+time*vec2(.01,.02);\n\to = pow(vec4(squares(uv+.6),squares(uv+sin(floor(time*vec2(2.,3.16))+1.6)*.01),squares(uv+sin(floor(time*vec2(10.34,2.49)))*.01),1),vec4(2.));\n}","name":"Image","description":"","type":"image"}]}