{"ver":"0.1","info":{"id":"ltcyWs","date":"1534626916","viewed":100,"name":"Rainbow Flower by sbenche","username":"SamyBencherif","description":"This is my first shader project loosely following a tutorial by \"The Art of Code\" on youtube.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["basic","flower"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -.5 to .5)\n    vec2 uv = fragCoord/iResolution.xy;\n\tuv -= vec2(.5, .5);\n    \n    // Correct aspect ratio\n    uv.x *= iResolution.x/iResolution.y;\n\n    // Assign colors\n    vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n    vec4 white = vec4(1.0, 1.0, 1.0, 1.0);\n\n    // Output background\n    fragColor = black;\n    \n    // Output circle\n    float d = length(uv);\n    float a = atan(uv.y, uv.x) + iTime;\n    float r = .4 + .1*sin(10.*(a - 3.14));\n    float c = smoothstep(r,r-.01,d);\n    \n    // Time varying pixel color\n    vec3 colBack = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));\n    \n    \n    fragColor = vec4(.3*colBack + c*col, 1);\n    \n}","name":"Image","description":"","type":"image"}]}