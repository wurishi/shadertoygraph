{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[],"code":"// Created by Vinicius Graciano Santos - vgs/2014\n// Based on the following article:\n// http://data.imaginary-exhibition.com/IMAGINARY-Moebiusband-Stephan-Klaus.pdf\n\n#define EPS 0.01\n#define STEPS 64\n#define TAU 6.28318530718\n\n// comment to stop the rotation.\n#define ROTATION\n\n// comment to stop the homotopy between the mobius strip and the torus.\n#define HOMOTOPY\n\nfloat mobius(vec3 p, float b) {\n\tfloat x = p.x, y = p.y, z = p.z;\n\tfloat xx = x*x, yy = y*y, zz = z*z, y3 = yy*y, x3 = xx*x;\n\tfloat xy = xx+yy, b2 = b*2.0, zxy = z*(xx*y*3.0-y3), xyy = x*yy*3.0-x3;\n    float k1 = (2.0*zxy+xyy*(xy-zz+1.0))*(b-0.1)-xy*xy*(b2+0.2);\n    float k2 = b*xy*0.2+(b2-0.2)*(zxy+xyy)-xy*(b+0.1)*(xy+zz+1.0);\n\treturn k1*k1-xy*k2*k2;\n}\n\nvec3 grad(vec3 p, float b) {\n\tvec2 q = vec2(0.0, EPS);\n\treturn vec3(mobius(p+q.yxx, b) - mobius(p-q.yxx, b), \n\t\t\t    mobius(p+q.xyx, b) - mobius(p-q.xyx, b),\n\t\t\t    mobius(p+q.xxy, b) - mobius(p-q.xxy, b));\n}\n\nfloat torus(vec3 p) {\n\tvec2 t = vec2(1.0, 0.32);\n  \tvec2 q = vec2(length(p.xy)-t.x,p.z);\n  \treturn length(q)-t.y;\n}\n\nmat3 rotY(float ang) {\n\tfloat c = cos(ang), s = sin(ang);\n\treturn mat3(c, 0.0, s, 0.0, 1.0, 0.0, -s, 0.0, c);\n}\n\nmat3 rotX(float ang) {\n\tfloat c = cos(ang), s = sin(ang);\n\treturn mat3(1.0, 0.0, 0.0, 0.0, c, -s, 0.0, s, c);\n}\n\nvec3 shade(vec3 p, vec3 rd, float b, mat3 m) {\n\tvec3 col = vec3(0.0);\n\tvec3 n = normalize(-grad(p, b));\n\t\n\t// material\n\tvec3  amb = vec3(0.05375, 0.05, 0.06625);\n\tvec3  dif = vec3(0.18275, 0.17, 0.22525);\n\tvec3  spe = vec3(0.332741, 0.328634, 0.346435);\n\tfloat shin = 39.4;\n\t\n\t// key light\n\tvec3 l = normalize(m*vec3(1.0));\n\tvec3 h = normalize(l-rd);\n\tfloat lambert = max(0.0, dot(n, l));\n\tfloat blinn = lambert > 0.0 ? pow(max(0.0, dot(n, h)), shin) : 0.0;\n\tcol += vec3(3.0, 2.0, 3.0)*(0.4*dif*lambert + 1.4*spe*blinn + 0.1*amb);\n\t\n\t// fill light\n\tlambert = max(0.0, dot(n, -rd));\n\tblinn = lambert > 0.0 ? pow(lambert, shin) : 0.0;\n\tcol += vec3(1.0)*(0.4*dif*lambert + 1.4*spe*blinn + 0.1*amb);\n\t\n\t// rim light\n\tcol += 2.25*pow(clamp(1.0+dot(n, rd), 0.0, 1.0), 3.0); \n\t\n\treturn col/(col+1.0); // reinhard\n}\n\nfloat animCurve(in float t) {\n\tt = mod(iTime, 15.0);\n\tfloat f1 = smoothstep(5.0, 7.0, t);\n\tfloat f2 = 1.0-smoothstep(7.0, 9.0, t);\n\treturn 0.01+0.09*f1*f2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 fc = fragCoord.xy / iResolution.xy;\n\tvec2 uv = -1.0+2.0*fc;\n\tuv.x *= iResolution.x/iResolution.y;\t\n\t\n\tvec2 mouse = 0.5*TAU*(-1.0+2.0*iMouse.xy/iResolution.xy);\n\t\n\t#ifndef HOMOTOPY\n\t\tfloat b = 0.01;\n\t#else\n\t\tfloat b = animCurve(iTime);\n\t#endif\n\t\n\t#ifdef ROTATION\n\t\tmouse.x += 0.3*iTime;\n\t#endif\n\t\n\tmat3 m = rotY(mouse.x)*rotX(mouse.y);\n\tvec3 ro = m*vec3(0.0, 0.0, 1.8);\n\tvec3 rd = m*normalize(vec3(uv, -1.0));\n\t\n\tfloat d = 10.0, t1 = 0.0;\n\tvec3 p = ro, col = vec3(1.0);\n\t\n\t// sphere-trace to torus envelope.\n\tfor (int i = 0; i < STEPS; ++i) {\n\t\tif (d < EPS || t1 > 4.0) continue;\n\t\td = torus(p);\n\t\tt1 += d; p = ro + t1*rd;\n\t}\n\t\n\tif (d < EPS) {\t\n\t\t// forward march to find root interval.\n\t\tfloat t2 = t1; d = mobius(p, b);\n\t\tfor (int i = 0; i < 2*STEPS; ++i) {\n\t\t\tif (d > 0.0) continue;\n\t\t\td = mobius(p, b);\n\t\t\tt2 += 2.0*EPS; p = ro + t2*rd;\n\t\t}\n\t\t// bisect towards root.\n\t\tif (d > 0.0) {\n\t\t\tfor (int i = 0; i < 12; ++i) {\n\t\t\t\td = 0.5*(t1+t2); p = ro + d*rd;\n\t\t\t\tif (mobius(p, b) > 0.0) t2 = d; else t1 = d;\n\t\t\t}\n\t\t\tcol = shade(ro+d*rd, rd, b, m);\n\t\t}\n\t}\n\t\n\t// post-processing\n\tcol = smoothstep(0.0, 1.0, col);\n\tcol *= 0.5 + 0.5*pow(25.0*fc.x*(1.0-fc.x)*fc.y*(1.0-fc.y), 0.45);\n\tcol = pow(col, vec3(1.0/2.2));\n\t\n\tfragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"4slSD8","date":"1400115085","viewed":6457,"name":"MÃ¶bius Strip","username":"vgs","description":"Watch the strip transforming into a torus. Click to rotate.","likes":96,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarch","mobius","implicit"],"hasliked":0,"parentid":"","parentname":""}}