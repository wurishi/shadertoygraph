{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"//距离椭圆函数\nfloat sdEllipse( vec2 p, vec2 ab )\n{\n    // symmetry\n\tp = abs( p );\n\n    // find root with Newton solver\n    vec2 q = ab*(p-ab);\n\tfloat w = (q.x<q.y)? 1.570796327 : 0.0;\n    for( int i=0; i<5; i++ )\n    {\n        vec2 cs = vec2(cos(w),sin(w));\n        vec2 u = ab*vec2( cs.x,cs.y);\n        vec2 v = ab*vec2(-cs.y,cs.x);\n        w = w + dot(p-u,v)/(dot(p-u,u)+dot(v,v));\n    }\n    \n    // compute final point and distance\n    float d = length(p-ab*vec2(cos(w),sin(w)));\n    \n    // return signed distance\n    return (dot(p/ab,p/ab)>1.0) ? d : -d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float m = abs(cos(iTime));    //随时间扩散\n    vec2 ra = vec2(3.0,1.2) * m;  //长焦 短焦\n\t\n\tfloat d = sdEllipse( p, ra);\n    float r = 1.0-smoothstep(0.0,(0.05 + 0.3 * m),abs(d + 0.15 * m));\n    float g = 1.0-smoothstep(0.0,(0.05 + 0.3 * m),abs(d));\n    float b = 1.0-smoothstep(0.0,(0.05 + 0.3 * m),abs(d - 0.15 * m));\n    vec3 col = vec3(r, g, b);\n    vec4 bg = texture(iChannel0, p);\n    col = bg.rgb *  (vec3(1.0)+col);\n    if(p.y < 0.05 || p.y > 0.2) {\n        col = vec3(0.0);\n    } \n\n\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lcGBz1","date":"1733742522","viewed":52,"name":"Scan&dispersion","username":"Weird","description":"scan,dispersion","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}