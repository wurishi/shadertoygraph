{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","sampler":{"filter":"nearest","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"}},{"channel":1,"type":"musicstream","id":"4dlGDB","filepath":"https://soundcloud.com/obviouslyfake/nyan-cat-2","sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Created by inigo quilez - iq/2013\n// https://www.youtube.com/c/InigoQuilez\n// https://iquilezles.org\n\n// Instead of using a pont, circle, line or any mathematical shape for traping the orbit\n// of fc(z), one can use any arbitrary shape. For example, a NyanCat :)\n//\n// I invented this technique more than 10 years ago (can have a look to those experiments \n// here https://iquilezles.org/articles/ftrapsbitmap).\n\nvec4 getNyanCatColor( vec2 p, float time )\n{\n\tp = clamp(p,0.0,1.0);\n\tp.x = p.x*40.0/256.0;\n\tp.y = 0.5 + 1.2*(0.5-p.y);\n\tp = clamp(p,0.0,1.0);\n\tfloat fr = floor( mod( 20.0*time, 6.0 ) );\n\tp.x += fr*40.0/256.0;\n\treturn texture( iChannel0, p );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 p = (2.0*fragCoord-iResolution.xy)/iResolution.y;\n    \n    float time = max( iTime-5.5, 0.0 );\n    \n    // zoom\t\n\tp = vec2(0.5,-0.05)  + p*0.75 * pow( 0.9, 20.0*(0.5+0.5*cos(0.25*time)) );\n\t\n    vec4 col = vec4(0.0);\n\tvec3 s = mix( vec3( 0.2,0.2, 1.0 ), vec3( 0.5,-0.2,0.5), 0.5+0.5*sin(0.5*time) );\n\n    // iterate Jc\t\n\tvec2 c = vec2(-0.76, 0.15);\n\tfloat f = 0.0;\n\tvec2 z = p;\n\tfor( int i=0; i<100; i++ )\n\t{\n\t\tif( (dot(z,z)>4.0) || (col.w>0.1) ) break;\n\n        // fc(z) = zÂ² + c\t\t\n\t\tz = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + c;\n\t\t\n\t\tcol = getNyanCatColor( s.xy + s.z*z, time );\n\t\tf += 1.0;\n\t}\n\t\n\tvec3 bg = 0.5*vec3(1.0,0.5,0.5) * sqrt(f/100.0);\n\t\n\tcol.xyz = mix( bg, col.xyz, col.w );\n    \n    col *= step( 2.0, iTime );\n    col += texture( iChannel1, vec2(0.01,0.2) ).x * (1.0-step( 5.5, iTime ));\n\t\n\tfragColor = vec4( col.xyz,1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":true},"info":{"id":"4slGWH","date":"1368915920","viewed":20269,"name":"Fractal Nyancat","username":"iq","description":"Instead of using a mathematically defined shape for orbit trapping in fractals, a bitmap can be used just as easily ^_^","likes":92,"published":3,"flags":64,"usePreview":0,"tags":["2d","fractal","julia","orbittrap","orbit","nyancat"],"hasliked":0,"parentid":"","parentname":""}}