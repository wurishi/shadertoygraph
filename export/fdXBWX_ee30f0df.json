{"ver":"0.1","info":{"id":"fdXBWX","date":"1645470197","viewed":100,"name":"Inverted Circle Easy Example ","username":"ABCDEFG","description":"Mouse UP DOWN for scale\nMouse RIGHT LEFT for some circles travelling ","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["inversion"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// By Mathis\n#define RED vec3(1.,0.,0.)\n#define GREEN vec3(0.,1.,0.)\n#define YELLOW vec3(1.,1.,0.)\n\nvec2 convert(vec2 uv) \n{\n    uv = uv*3. - 1.5;\n    uv.x *= 1.7;\n    return uv;\n}\n\nvec2 invert(vec2 uv, float r) \n{\n    vec2 p1Dir = normalize(uv);\n    float offset = pow(r,2.) / length(uv);\n    vec2 p2 = offset*p1Dir;\n    return p2;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv = convert(uv);\n    \n    vec3 col = vec3(0.);\n    \n    vec2 mouse = convert(iMouse.xy/iResolution.xy);\n    vec2 inversedUv = invert(uv,clamp(mouse.y,0.3,3.));\n    inversedUv -= iTime;\n    \n\n    vec2 fr = fract(inversedUv);\n    vec2 fl = floor(inversedUv);\n    \n    col.rg += fract((inversedUv))*0.3;\n    if(fr.x > 0.9 || fr.y > 0.9) col = vec3(1.);\n    vec3 colorScene1 = col;\n    \n    col = vec3(0.);\n    inversedUv = invert(uv,1.);\n    vec2 p1 = (vec2(sin(iTime),cos(iTime)));\n    vec2 p2 = invert(p1, 0.6);\n\n    col = mix(col, RED, step(length(uv-p1)-0.1,0.));    \n    col = mix(col, RED*0.5, step(length(uv-p2)-0.05,0.));\n    \n    p1 = (vec2(sin(iTime),sin(iTime)));\n    p2 = invert(p1, 0.6);\n    \n    col = mix(col, GREEN, step(length(uv-p1)-0.1,0.));    \n    col = mix(col, GREEN*0.5, step(length(uv-p2)-0.05,0.));\n     \n    p1 = (vec2(1.5, 5.*sin(iTime)));\n    p2 = invert(vec2(1.5, 5.*sin(iTime)),1.);\n     \n    col = mix(col, YELLOW*0.5, step(length(uv-p1)-0.1,0.));\n    col = mix(col, YELLOW, step(length(uv-p2)-0.05,0.));\n    \n    col.rg += fract(inversedUv)*0.3;\n    col.b = step(length(inversedUv-uv)-0.01,0.);\n    \n    col = mix(colorScene1, col, float(uv.x > convert(iMouse.xy/iResolution.xy).x));\n   \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}