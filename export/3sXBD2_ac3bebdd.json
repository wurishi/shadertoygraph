{"ver":"0.1","info":{"id":"3sXBD2","date":"1589052963","viewed":185,"name":"ShATI - Poisson","username":"Flopine","description":"My former school named ATI decided to launch an everyday challenge from 4th may to 24th may, here is the 6th subject: fish :) ","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","escher","fish","tiling"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","previewfilepath":"/media/ap/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Code by Flopine\n\n// Thanks to wsmind, leon, XT95, lsdlive, lamogui, \n// Coyhot, Alkama,YX, NuSan and slerpy for teaching me\n\n// Thanks LJ for giving me the spark :3\n\n// Thanks to the Cookie Collective, which build a cozy and safe environment for me \n// and other to sprout :)  https://twitter.com/CookieDemoparty\n\n// Shader made for Everyday ATI challenge\n\n#define AAstep(thre, val) smoothstep(-.7,.7,(val-thre)/min(.05,fwidth(val-thre)))\n\nfloat square(vec2 uv, float s)\n{return AAstep(s,max(abs(uv.x),abs(uv.y*2.)));}\n\nfloat triX (vec2 uv, float s)\n{\n    uv.y = abs(uv.y);\n    return AAstep(s,max(-uv.x, dot(uv,normalize(vec2(1.,sqrt(3.))))));\n}\n\nfloat ellipse (vec2 uv, float s)\n{return AAstep(s,length(uv*vec2(1.,3.)));}\n\nfloat circle (vec2 uv, float s)\n{return AAstep(length(uv),s);}\n\nfloat fish (vec2 uv)\n{\n    vec2 tri_offset = vec2(0.71,0.);\n    vec2 ellipse_offset = vec2(0.2,0.5);\n    vec2 circle_offset = vec2(1.15,0.1);    \n    return (1.-triX(uv+tri_offset,0.29))\n        \t+square(uv,1.)*triX(uv-tri_offset*1.8,0.29)\n        \t*ellipse(uv-ellipse_offset,.8)\n        \t+(1.-ellipse(uv+vec2(-ellipse_offset.x,ellipse_offset.y), .8))\n        \t+ circle(uv-circle_offset,0.1);\n}\n\nfloat fishes (vec2 uv)\n{\n    return fish(uv)\n        *fish(vec2(-uv.x,uv.y)+vec2(-1.6,1.))\n        -circle(uv+vec2(.8,-0.08),0.1)\n        -circle(uv+vec2(.8,0.9),0.1);\n}\n\nfloat img (vec2 uv)\n{\n    float horizontal = 3.9;\n    float vertical = 2.;\n    vec2 per = vec2(horizontal,vertical); \n    vec2 guv = mod(uv-per*0.5,per)-per*0.5;\n    \n    float d = fishes(guv);\n    \n    for(int i=-1;i<=1; i++)\n    {\n        for(int j=-1;j<=1;j++)\n        {\n            vec2 neighbors = vec2(float(i),float(j));\n            d *= fishes(guv+neighbors*per);\n        }\n    }\n    return d;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (2.*fragCoord-iResolution.xy)/iResolution.y;\n\n    uv.y += sin(uv.x*1.2+iTime)*0.05;\n\n    float fish_grid = img(uv*5.);\n \tvec3 col = vec3(fish_grid);\n    \n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}