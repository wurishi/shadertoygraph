{"ver":"0.1","info":{"id":"4clfzH","date":"1723379467","viewed":50,"name":"Star Field, FTY","username":"Factory","description":"Prolly will be used in a pre-demo, I dunno.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["1d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// random stars drifting slowly\n//#define cox 10.0\n//#define coy 10.0\n//#define baseRotation 0.01\n//#define nextLevelRotation 0.1\n//#define zoom 0.8\n\n\n// sprial patterns\n#define cox 0.0\n#define coy 0.0\n#define baseRotation 0.1\n#define nextLevelRotation 1.\n#define zoom 2.\n\n\n\nmat2 rotate2d(float _angle){\n    return mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle));\n}\n\nvec4 r( vec2 uv, int iter )\n{\n    \n  vec2 uu=((uv-vec2(1.75,1))*zoom);\n  \n  uu+= vec2(cox, coy );\n  \n  mat2 rot= rotate2d(baseRotation + iTime*baseRotation*nextLevelRotation);\n  \n  float dim= 0.01;\n  \n  uu= rotate2d(iTime*baseRotation)*uu;\n  \n  \n  float d= 0.;\n  for( int i= 0; i< iter; i++ )\n  {\n      float ix= floor(uu.x);\n      float iy= floor(uu.y);\n\n      float dx= uu.x-float(ix);\n      float dy= uu.y-float(iy);\n\n      if( dx > 0.5 )\n          dx= 1.0-dx;\n\n      if( dy > 0.5 )\n          dy= 1.0-dy;\n\n      float dist= sqrt( dx*dx + dy*dy );\n    //  float d= max( dx, dy );\n      d+= (1./dist)*dim;\n      \n      uu= rot*uu;\n      \n      uu*= 1.2;\n      \n      dim*= 0.6;\n//      uu+= vec2(0.2,0.2);\n  }\n  \n  return vec4(d,d,d,d);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy/iResolution.y*2.;\n\n    // Output to screen\n    fragColor =r(uv, 10);\n}","name":"Image","description":"","type":"image"}]}