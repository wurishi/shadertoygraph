{"ver":"0.1","info":{"id":"4dK3DR","date":"1454076573","viewed":283,"name":"Directional StarField","username":"vamoss","description":"Todo\nParalax\nRemove cumulative iGlobalTime in animate formula","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["star","field","velocity"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"#define SMOOTH(r,R) (1.0-smoothstep(R-1.0,R+1.0, r))\n#define M_PI 3.1415926535897932384626433832795\n#define blue3 vec3(0.35,0.76,0.83)\n\nfloat line(vec2 origin, vec2 destiny, float radius, float angle, float lineWidth)\n{\n    vec2 d = origin - destiny;\n    float r = sqrt( dot( d, d ) );\n    if(r<radius)\n    {\n        vec2 p = vec2(sin(angle+M_PI/2.0),\n                            -cos(angle+M_PI/2.0));\n        float l = length( d - p*clamp( dot(d,p)/dot(p,p), 0.0, 1.0) );\n    \treturn 1.0-smoothstep(0.0,lineWidth, l);//return SMOOTH(l/1000.0,lineWidth/100.0);\n    }\n    else return 0.0;\n}\n\nvec2 tile (vec2 _st, float _zoom) {\n    _st *= _zoom;\n    _st.x += step(1., mod(_st.y,2.0)) * 0.5;\n    return fract(_st);\n}\n\nfloat random (vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898,78.233)))*43758.5453123);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec3 col = vec3(0.0);\n    \n    //line stroke\n    float lineWidth = 0.05;\n    \n    //line origin and destiny\n    vec2 origin = vec2(0.5, 0.5);\n\tvec2 dest = iMouse.xy/iResolution.xy/2.0+origin/2.0;\n    \n\tvec2 uv = fragCoord.xy/iResolution.xy;\n    \n    //animate\n    uv = mod(( (iTime * 10.0 * (dest - origin) )+uv), 1.0);\n    \n    //randomize\n    float rnd1 = random(floor(uv*8.0))*8.0;\n    float tileSize = 6.0+rnd1;\n    float rnd = random(floor(uv*tileSize))/8.0;\n    \n    //tile\n    uv = tile(uv,tileSize);\n    \n    uv += rnd;\n    \n    //line angle and lenght\n    float angle = atan((dest.y-origin.y),(dest.x-origin.x));\n    float lineLenght = distance(dest, origin)*10.0;\n    \n\tvec3 color = vec3(0.0);\n    \n    //draw line\n    color += line(uv, origin, lineLenght, angle, lineWidth) * blue3;\n\t\n    fragColor = vec4(color,1.0);\n}\n","name":"","description":"","type":"image"}]}