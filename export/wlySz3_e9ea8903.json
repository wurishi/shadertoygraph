{"ver":"0.1","info":{"id":"wlySz3","date":"1583294603","viewed":154,"name":"ray sphere intersection","username":"bhuwan0000","description":"learning ray sphere intersection","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raytracing","ray","sphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//learning resource - : http://scratchapixel.com\nfloat mag(vec3 i)\n{\n    return sqrt(i.x*i.x + i.y*i.y + i.z*i.z);\n}\nfloat remap(float a, float b, float t)\n{\n    return (t - a) / (b - a);\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv -= 0.5;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 ro = vec3(0.0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 1.0));\n    vec3 scent = vec3(0.0, 0.0, 3.0);\n    float srad = 1.0;\n    \n    vec3 L = scent - ro;\n    float tca = dot(L, rd);\n    float d = sqrt(mag(L)*mag(L) - tca*tca);// distance from sphere center to the closest point on ray\n    float thc = sqrt(srad*srad - d*d);\n    \n    float t0 = tca -thc;\n    float t1 = tca + thc;\n    \n    //vec3 p0 = ro + t0*rd;\n    //vec3 p1 = ro + t1*rd;\n    //float y = distance(scent, ro + rd * tca);\n    vec3 color = vec3(0.0);\n\n    if (d <= srad)\n    {\n\n        color = vec3(remap(scent.z, scent.z - srad, t0));\n    }\n\n    // Output to screen\n   fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}