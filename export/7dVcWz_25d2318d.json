{"ver":"0.1","info":{"id":"7dVcWz","date":"1654720534","viewed":255,"name":"Basic arclightning (noise)","username":"Oneleven","description":"A simple study on noise following corresponding TBOS chapter\nNo performance optimizations are made, since this is for learning purposes only","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["lightning","arclightning"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float random(float u)\n{\n    return fract(sin(u)*999999.9999);\n}\n\nfloat noise(float u, float size)\n{\n    float zoom = u * size;\n    float index = floor(zoom);\n    float progress = fract(zoom);\n    progress = smoothstep(0.0,1.0, progress);\n    float value = mix(random(index), random(index + 1.0), progress);\n    return value;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    // Apply noise to V coordinate\n    float yOffset =1.0;\n    yOffset =(noise(uv.x-iTime*2.471, 5.0) * 2.0 - 1.0) * 0.12;\n    yOffset+=(noise(uv.x-iTime*0.374, 15.0) * 2.0 - 1.0) * 0.08;\n    yOffset+=(noise(uv.x-iTime*0.928, 55.0) * 2.0 - 1.0) * 0.025;\n    \n    uv.y+=yOffset;\n    \n    // Mirror brigtness along Y axis and normalize\n    float value= -abs(-uv.y+0.5)*2.0+1.0;\n    \n    // Colorize\n    vec3 col =vec3(pow(value, 7.0)) + vec3(pow(value, 2.5))*vec3(0.5,0.0,0.8);\n    col *=1.0 - pow(pow(uv.x-0.5,2.0)*4.0, 5.0); //vignette \n    col = clamp(col, 0.0, 1.0) + vec3(0.07,0.0,0.13); //background\n    \n\n    //debug\n    //col = vec3(uv, 0.0);\n    //col = vec3(random(uv.x*1.0));\n    //col = vec3(noise(uv.x, 40.0));\n\n    fragColor = vec4(col,1.0);\n}\n\n","name":"Image","description":"","type":"image"}]}