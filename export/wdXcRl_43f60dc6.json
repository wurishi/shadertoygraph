{"ver":"0.1","info":{"id":"wdXcRl","date":"1585326137","viewed":126,"name":"Rainbow Interpolation","username":"Lifeless_G","description":"Creates a cool rainbow gradient through interpolation.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["interpolation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 linearInterpolationVec3(vec3 a, vec3 b, float interpolation_factor) {\n    return (1.f - interpolation_factor) * a + interpolation_factor * b;\n}\n\nfloat edgeLinearInterpolation(float e0, float e1, float interpolation_factor) {\n    return clamp((interpolation_factor - e0) / (e1 - e0), 0.f, 1.f);\n}\n\nvec3 getColour(int index) {\n    // Base colours\n    const vec3 colours[] = vec3[](\n    \tvec3(1.f, 0.f, 0.f),\n    \tvec3(1.f, 0.65f, 0.f),\n\t\tvec3(1.f, 1.f, 0.f),\n    \tvec3(0.f, 1.f, 0.f),\n    \tvec3(0.f, 0.f, 1.f),\n    \tvec3(0.3f, 0.f, 0.5f),\n\t\tvec3(0.93f, 0.51f, 0.93f)\n\t);\n        \n    return colours[index];\n}\n\nvoid mainImage(out vec4 frag_colour, in vec2 frag_coord) {\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = frag_coord / iResolution.xy;\n    \n    // Set colours on designated portion of screen\n    float interpolation_factor = edgeLinearInterpolation(0.05f, 0.95f, fract(uv.x * 6.f));\n    int index = int(uv.x * 6.f);\n    vec3 colour = linearInterpolationVec3(getColour(index), getColour(index + 1), interpolation_factor);\n\n    frag_colour = vec4(colour, 1.f);\n}\n","name":"Image","description":"","type":"image"}]}