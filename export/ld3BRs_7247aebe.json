{"ver":"0.1","info":{"id":"ld3BRs","date":"1526328879","viewed":208,"name":"UnSmooth Life","username":"timeiskey","description":"circular neighborhood instead of moore neighborhood.\nHOLY SHIT IT HAS GLIDERS!!!!!!!!!!!!!!!!\n\nthis is not based on smooth life","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["automata"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define DIAMETER 40.0\n#define MAX 706.86\n#define increasePercentage 56.25\n\n#define MOUSE_SIZE 0.2\n\n#define DASTART 290.0\n#define DAEND 370.0 \n\n#define AASTART 300.0\n#define AAEND 450.0\n/*\n//SIZE 160 GLIDERS\n#define DASTART 4640.0\n#define DAEND 5920.0 \n\n#define AASTART 4800.0\n#define AAEND 7200.0\n\n//SIZE 80 GLIDERS\n#define DASTART 1160.0\n#define DAEND 1480.0 \n\n#define AASTART 1200.0\n#define AAEND 1800.0\n\n//SIZE 40 GLIDERS\n#define DASTART 290.0\n#define DAEND 370.0 \n\n#define AASTART 300.0\n#define AAEND 450.0\n\n//SIZE 30 GLIDERS\n#define DASTART 180.0\n#define DAEND 220.0 \n\n#define AASTART 190.0\n#define AAEND 310.0\n\n//cool patterns\n#define DASTART 250.0\n#define DAEND 400.0 \n\n#define AASTART 350.0\n#define AAEND 500.0\n*/\n#define DENSITY 0.6\nfloat rand(vec2 co){\n  \treturn fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * length(iDate));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 cellWidth = 1.0/iResolution.xy;\n   \tvec2 uv = fragCoord.xy / iResolution.xy;\n\n\t//\tsample yourself\n    float centerCell = texture(iChannel0, uv).r;\n    \n    //\ttotal your neighbors\n    float hoodTotal = 0.0;\n            \n    float radius = DIAMETER / 2.0;\n    vec2 spp = vec2( 0.0 );\n        \n    for( int i = 0; i <= int(DIAMETER); i++ )\n    {\n        float d2c = -(radius - float(i));    \n        spp.y = d2c * cellWidth.y + uv.y;\n        \n        float radiusAtY = 2.0 * sqrt( pow( radius, 2.0) - pow( abs(d2c), 2.0) );\n        radiusAtY = floor( radiusAtY / 2.0 );\n  \n        for( float ix = -radiusAtY; ix <= radiusAtY; ix++ )\n        {\n            spp.x = ix * cellWidth.x + uv.x;\n            spp = vec2(mod(spp.x, 1.0), mod(spp.y, 1.0) );\n            //spp = vec2( floor( spp.x ), floor( spp.y ) );\n\t\t\thoodTotal += texture(iChannel0, spp).r;\n        }\n    }\n    \n    //\tdont count yourself\n    //hoodTotal -= centerCell;\n    \n    //\tsample the rule\n    float c = 0.0;\n    if( centerCell == 0.0 )\n    {\n        if( (hoodTotal >= DASTART) && (hoodTotal <= DAEND) )\n        {\n        \tc = 1.0;\n        }\n    }\n    else if( centerCell == 1.0 )\n    {\n        if( (hoodTotal >= AASTART) && (hoodTotal <= AAEND) )\n        {\n        \tc = 1.0;\n        } \n    }\n    \n    fragColor = vec4(vec3(c),1.0);\n    if (iMouse.z >=0.0)\n    {\n        float mc = step( distance(uv,(iMouse.xy/iResolution.xy)), MOUSE_SIZE ) ;\n        //fragColor = vec4(step(rand(uv),DENSITY));\n    \tfragColor = min( vec4(vec3(mc),1.0) * vec4(step(rand(uv),DENSITY)) + fragColor, 1.0);\n    }\n}","name":"Buf A","description":"","type":"buffer"}]}