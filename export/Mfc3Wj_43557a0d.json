{"ver":"0.1","info":{"id":"Mfc3Wj","date":"1712123495","viewed":43,"name":"S2 Colorful Wheel","username":"raphaeleg","description":"- Circle trigonometry\n- Made gradient animation using waves warping\n- Used sin and cos for rotation animation\n-----\npurely for self-learning purposes\nTutorial: https://inspirnathan.com/posts/48-shadertoy-tutorial-part-2","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["circle","gradient","rotate","animation"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdfCircle(vec2 uv, float r, vec2 offset) {\n    // circle = x^2 + y^2 - r^2\n    \n    float x = uv.x - offset.x; // x = x-coordinate on graph\n    float y = uv.y - offset.y; // y = y-coordinate on graph\n\n    // r = radius of circle\n    return length(vec2(x, y)) - r;\n}\nvec3 pinkCol() {\n    return vec3(1.0,0.5,0.5);\n}\nvec3 gradientCol(vec2 uv){\n    float amp = 0.5;\n    float period = 1.;\n    vec3 translationY = uv.xyx + vec3(0,2,4);\n    float translationX = 0.5;\n    return translationX + amp * cos(period * (iTime + translationY));\n}\n\n// split colors\nvec4 v1_0(in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy; // <0,1>\n    vec3 col = vec3(0.0); // start with black\n    // if (uv.x > .5) col = vec3(1.0); // make the right half of the canvas white\n    col = vec3(step(0.5, uv.x));\n    return vec4(col, 1.0);\n}\nvec4 v1_1(in vec2 fragCoord) {\n    vec2 uv = fragCoord/iResolution.xy; // <0,1>\n    vec3 col = vec3(0.0);\n    col = vec3(step(0.5, uv),0);\n    return vec4(col, 1.0);\n}\n// circle\nvec4 v2_0(in vec2 fragCoord) {\n    vec2 uv = (fragCoord/iResolution.xy) * 2. - 1.; // <0,1>\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 offset = vec2(0.);\n    float d = sdfCircle(uv,0.5,offset);\n    \n    vec3 bgCol = vec3(1.0,1.0,1.0);\n    // can change between pinkCol and gradientCol\n    vec3 circleCol = gradientCol(uv);\n    \n    vec3 finalCol = bgCol;\n    if (d <= 0.0) { // if within radius = circle\n        finalCol = circleCol;\n    }\n    \n    return vec4(finalCol,1.0);\n}\n// animated circle\nvec4 v3_0(in vec2 fragCoord) {\n    vec2 uv = (fragCoord/iResolution.xy) * 2. - 1.; // <0,1>\n    uv.x *= iResolution.x/iResolution.y;\n    \n    float amp = 0.2; // distance\n    float period = 2.; // speed\n    // vec2 offset = vec2(cos(iTime),0.0); // linear X\n    vec2 offset = vec2(amp*sin(period*iTime), amp*cos(period*iTime));\n    float d = sdfCircle(uv,0.5,offset);\n    \n    vec3 bgCol = vec3(1.0,1.0,1.0);\n    // can change between pinkCol and gradientCol\n    vec3 circleCol = gradientCol(uv);\n    \n    vec3 finalCol = bgCol;\n    if (d <= 0.0) { // if within radius = circle\n        finalCol = circleCol;\n    }\n    \n    return vec4(finalCol,1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = v3_0(fragCoord);\n}","name":"Image","description":"","type":"image"}]}