{"ver":"0.1","info":{"id":"4tlGD4","date":"1510589990","viewed":195,"name":"Flame + Smoke","username":"digorydoo","description":"A simple 2D effect.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d","flame","smoke"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[],"code":"/**\n * I wrote this function years ago. Or did I take it from\n * somewhere? I can't remember... If you know this, please\n * write it in the comments!\n */\nfloat cloud (vec2 pos, float t)\n{\n    float dx = 0.5 + 0.25 * ( cos (pos.x*5.0 + 11.0*sin (t*0.05)) \n                            + sin (pos.y*3.0 + 11.0*cos (t*0.11)) );\n    float dy = 0.5 + 0.25 * ( cos (pos.x*4.0 + 11.0*sin (t*0.11)) \n                            + sin (pos.y*4.0 + 11.0*cos (t*0.05)) );\n    return 0.5 + 0.5*sin (dx*2.0 * sin (dy*2.0 + 0.1*t) + 0.1*t);\n}\n\nvec3 smoke (vec2 p, float t)\n{\n    float a = (1.0 - p.y) * cloud (p, t * 3.0);\n    \n    if (a < 0.3)\n    {\n        vec3 m = vec3 (0.0, 0.0, 0.0);\n        vec3 n = vec3 (0.4, 0.2, 0.15);\n        return mix (m, n, a / 0.3);\n    }\n    else if (a < 0.5)\n    {\n        vec3 m = vec3 (0.4, 0.2, 0.15);\n        vec3 n = vec3 (0.4, 0.3, 0.25);\n        return mix (m, n, (a - 0.3) / 0.2);\n    }\n    else\n    {\n        vec3 m = vec3 (0.4, 0.3, 0.25);\n        vec3 n = vec3 (0.7, 0.5, 0.4);\n        return mix (m, n, (a - 0.5) / 0.5);\n    }\n}\n\nfloat flame (vec2 p, float t)\n{\n    vec2 p2;\n    p2.x = 2.0 * sin (8.0 * p.x);\n    p2.y = p.y;\n    return (1.0 - abs (0.5 - p.x)) * (1.0 - 0.5 * p.y) * cloud (p2, t * 20.0);\n}\n\nvec4 flames (vec2 p, float t)\n{\n    float f = 0.0;\n    vec2 p2 = p;\n    float t2 = t;\n    float w = 1.0;\n    float sum = 0.0;\n    \n    for (float i = 0.0; i < 10.0; i++)\n    {\n        f += w * flame (p2, t2);\n        p2.y -= 0.08;\n        t2 -= 2.0;\n        sum += w;\n        w *= 0.9;\n    }\n    \n    f /= sum;\n    \n    if (f < 0.5)\n    {\n        return vec4 (0.0);\n    }\n    else\n    {\n        vec4 m = vec4 (0.5, 0.5, 0.1, 0.0);\n        vec4 n = vec4 (1.0, 1.0, 0.1, 1.0);\n        return mix (m, n, (f - 0.5) / 0.5);\n    }\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = fragCoord.xy / iResolution.xy;\n    \n    vec4 f = flames (p, iTime);\n    vec3 s = smoke (p, iTime);\n\n    s *= 1.0 - f.a;\n    f *= f.a;\n    fragColor = f + vec4 (s, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}