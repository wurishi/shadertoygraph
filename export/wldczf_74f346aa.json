{"ver":"0.1","info":{"id":"wldczf","date":"1609669079","viewed":77,"name":"PointInsideTriangle","username":"gPlatl","description":"Testing clockwise and counter clockwise triangle hit coded in 3 variants. \nSet red test point with your mouse!\n\nIs there a way to find out which one is faster?\n","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d","triangle","point","hit","inside"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//------------------------------------------------------------------------\n// PointInsideTriangle.glsl  \n// Testing clockwise and count clockwise triangle hit coded in 3 variants. \n//   v1.0  2021-01-03  initial version\n//   v1.1  2021-12-16  TriangleHit2 added\n//   v1.2  2023-08-24  TriangleHit3 added\n// Set red test point with your mouse!\n// Is there a way to find out which one is faster?\n//------------------------------------------------------------------------\n\nfloat cp (vec2 a, vec2 b)  // pseudo cross product 2d\n{ return a.x * b.y - b.x * a.y; }\t\n\nbool TriangleHit(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n  bool b1 = cp(p-a, b-a) > 0.0;\n  bool b2 = cp(p-b, c-b) > 0.0;\n  bool b3 = cp(p-c, a-c) > 0.0;\n  return b1 == b2 && b2==b3;\n}\n\nbool TriangleHit2(vec2 a, vec2 b, vec2 c, vec2 p)\n{\n  vec2 u = p-a;\n  vec2 v = p-b;\n  vec2 w = p-c;\n  float r = cp(u, v);\n  float s = cp(v, w);\n  float t = cp(w, u);\n  return ((r>=0.) && (s>=0.) && (t>=0.))\n      || ((r<=0.) && (s<=0.) && (t<=0.));\n}\n\n/** 2.7.3. optimierte Variante */\nbool TriangleHit3 (in vec2 A, in vec2 B, in vec2 C, in vec2 P)\n{\n  float r = (P.x - A.x) * (P.y - B.y) - (P.x - B.x) * (P.y - A.y);\n  float s = (P.x - B.x) * (P.y - C.y) - (P.x - C.x) * (P.y - B.y);\n  float t = (P.x - C.x) * (P.y - A.y) - (P.x - A.x) * (P.y - C.y);\n  return  ((r * s) > 0.0) && ((r * t) > 0.0);\n}\n\n#define R iResolution\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 P = (2.0 *  fragCoord.xy  - R.xy) / R.y;\n  vec2 M = (2.0 * (iMouse.xy) - R.xy) / R.y;\n  vec2 A = vec2(0.1,  0.0 + 0.2*sin(iTime));\n  vec2 B = vec2(0.6,  0.6);\n  vec2 C = vec2(1.1, -0.6);\n  vec3 col = vec3(0.0);\n  if (TriangleHit (A,B,C, P)) { col = vec3(1.0);    //ccw\n  if (TriangleHit (A,B,C, M))   col = vec3(1.0, 1.0, 0.5); }\n  B.x = -B.x;\n  C.x = -C.x;\n  if (TriangleHit3(-A,B,C, P)) { col = vec3(1.5);    //cw\n  if (TriangleHit3(-A,B,C, M))   col = vec3(1.0, 1.0, 0.5); }\n  if (length(P-M) < 0.02) col = vec3(1,0,0);         // red dot\n  fragColor = vec4( vec3(col), 1.0 );\n}\n\n","name":"Image","description":"","type":"image"}]}