{"ver":"0.1","info":{"id":"NttczX","date":"1660248370","viewed":139,"name":"Dither bilinear filtering","username":"paperjack","description":"I'm not satisfied with the result","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["dither","bilinear"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nvec4 dither[4] = vec4[4](\n\tvec4(0.0625, 0.5625, 0.1875,  0.6875),\n\tvec4(0.8125, 0.3125, 0.9375,  0.4375),\n\tvec4(0.25, 0.75, 0.125, 0.625),\n\tvec4(1.0, 0.5, 0.875,  0.375)\n);\n\nfloat getDitherValue(int x, int y) {\n\tfloat res = 0.0;\n\tswitch(y) {\n\t\tcase 0:\n\t\t\tres = dither[x].r;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tres = dither[x].g;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tres = dither[x].b;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tres = dither[x].a;\n\t\t\tbreak;\t\t\n\t}\n\treturn res;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    float dither_limit = getDitherValue(int(fragCoord.x) % 4, int(fragCoord.y) % 4);\n    \n    float scale =256.0;\n    \n    vec2 bottomleft = vec2(floor(uv.x*scale), floor(uv.y*scale));\n    vec2 bottomright = vec2(bottomleft.x+1.0, bottomleft.y)/scale;\n    vec2 topleft = vec2(bottomleft.x, bottomleft.y+1.0)/scale;\n    vec2 topright = vec2(bottomleft.x+1.0, bottomleft.y+1.0)/scale; \n    bottomleft /= scale;\n       \n    float distx = (uv.x - bottomleft.x)*scale;\n    float disty = (uv.y - bottomleft.y)*scale;\n    \n    float test = 1.0;\n    vec3 col = vec3(0.0);\n\n    float dither = ((1.0-distx) * (1.0-disty));\n    if (dither < dither_limit || dither < 0.001) {\n        col += texture(iChannel0, bottomleft, 0.0).xyz * (1.0-distx) * (1.0-disty);\n    } else {\n        col += texture(iChannel0, bottomleft, 0.0).xyz;\n    }\n\n    dither = (distx) * (1.0-disty);\n    if (dither < dither_limit || dither < 0.001) {\n        col += texture(iChannel0, bottomright, 0.0).xyz * (distx) * (1.0-disty);\n    } else {\n        col += texture(iChannel0, bottomright, 0.0).xyz;\n    }\n\n    dither = (1.0-distx) * (disty);\n    if (dither < dither_limit || dither < 0.001) {\n        col += texture(iChannel0, topleft, 0.0).xyz * (1.0-distx) * (disty);\n    } else {\n        col += texture(iChannel0, topleft, 0.0).xyz;\n    }\n\n    dither = (distx) * (disty);\n    if (dither < dither_limit || dither < 0.001) {\n        col += texture(iChannel0, topright, 0.0).xyz * (distx) * (disty);\n    } else {\n        col += texture(iChannel0, topright, 0.0).xyz;\n    }\n    \n    // Gamma correction\n    col *= 0.9;\n     \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}