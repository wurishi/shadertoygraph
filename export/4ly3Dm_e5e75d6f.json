{"ver":"0.1","info":{"id":"4ly3Dm","date":"1474894956","viewed":169,"name":"cubic butterfly shape","username":"ollj","description":"trigonometry basics, but\nan error in a specific variant of calculating a circumcircle resulted in this cubic butterly.\nthe distance field comes comes down to length(p.x,cubicf(p.x,abs(p.y)))\n\nhow to simplify cubicf(x,y)=(x+y-x*x/y)?\nvariations are fun!","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["basic","frame"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//#define greyscale\n\n#define sss(a,b,c) smoothstep(a-b,a+b,c)\n#define res iResolution\n\n#define time  (.4+.15*cos(iTime))\n#define time2 (.8+.2*cos(iTime*.1))\n\n//translate fragments to a frame; scale, center, aspectRatio.\nvec2 frame(vec2 a){a.x-=.5*(res.x-res.y);a/=res.xy;a.x*=res.x/res.y;\n a-=vec2(.5);\n a*=3.;\n a=vec2(-a.y,a.x);//rotate 90 deg.\n return a;}//not for horizonral screens where res.x<res.y ??\n\n//accidental cubic butterfly shaped gradient!\nfloat ButterflyCubic(float x,float h){\n return (x+h-x*x/h)*2.*time;}\n //return (x+h+x*x/h)*.5;} \n\nvoid mainImage(out vec4 r,in vec2 o){\n //m=mousePos;\n //vec2 m=frame(iMouse.xy);\n //p=fragmentPos;\n vec2 p=frame(o.xy);\n r=vec4(p,.4,1.);//return value = fragmentColor;\n#ifdef greyscale\n r=vec4(.6);\n#endif\n //vec2 pm=p-m;\n //float d=length(pm);\n //r*=sss(.5,.01,d);\n r*=step(.05,mod(length(p)*9.,1.));//circles\n vec2 s=step(.01,abs(p));\n //if(length(p)<.05)r=vec4(.5);//central point\n //4 dots mark distance of 1. to center:\n if(length(abs(p)-vec2(0,1))<.03)r=vec4(.1);\n if(length(abs(p)-vec2(1,0))<.03)r=vec4(.1);\n r*=min(s.x,s.y);//main axes that go trough vec2(0):\n\n float c=ButterflyCubic(p.x,p.y);\n //if(length(vec2(0,c))<.03)r=vec4(.5); \n vec2 a=vec2(0.,0.)-p;\n vec2 b=abs(p)-abs(vec2(0,0));\n //if(length(a)<.04)r=vec4(.5);\n //if(length(b)<.04)r=vec4(.5);\n vec2 e=p;\n e.y=ButterflyCubic(p.x,abs(p.y));\n //e.x=ButterflyCubic(a.x,b.y);//also works\n //e is a butterfly-shaped gradient = distanceField.\n if(length(e)<time2   )r+=vec4(.4);//highlight one distance.\n if(length(e)<time2/2.)r+=vec4(.8);//highlight one distance.\n if(length(e)<time2/4.)r+=vec4(1.);//highlight one distance.\n r*=length(e);\n}","name":"Image","description":"","type":"image"}]}