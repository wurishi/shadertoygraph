{"ver":"0.1","info":{"id":"lsyyWh","date":"1521744590","viewed":243,"name":"The Mondra","username":"pomb","description":"Learning from https://thebookofshaders.com/07/\nI see boxes, and lines, and more boxes, would be awesome if I could randomly generate layouts and pick boxes to fill with colors!\nOne day I'll learn to proc gen the mondra, until then, on with more learning!","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["limondrian"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float box(in vec2 st, in vec2 size)\n{\n\tsize = vec2(0.5) - size * .5;\n    vec2 uv = smoothstep(size,\n                         size+vec2(0.001),\n                         st);\n   \tuv *= smoothstep(size,\n                     size+vec2(0.001),\n        \t\t\t vec2(1.)-st);\n    return 1.-(uv.x*uv.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x -= 0.25;\n    uv *= iResolution.xy/iResolution.y;    \n    \n    float line = 0.02;\n    float golden = 1.61803398875;\n    \n    //the lines\n    vec3 col = vec3(box(uv-vec2(0.,0.), vec2(line, 1.)));\n    col *= vec3(box(uv-vec2(.5,0.), vec2(1., line)));\n    col *= vec3(box(uv-vec2(-.5,0.1), vec2(1., line)));\n    col *= vec3(box(uv-vec2(.5,0.5), vec2(line, 1.)));\n    col *= vec3(box(uv-vec2(-.5,-.2), vec2(1., line)));\n    col *= vec3(box(uv-vec2(.5,-.3), vec2(1., line)));\n    col *= vec3(box(uv-vec2(.4,-0.15), vec2(line, .3)));\n    col *= vec3(box(uv-vec2(.6,-0.45), vec2(line, .3)));\n    col *= vec3(box(uv-vec2(.25,-0.45), vec2(line, .3)));\n    col *= vec3(box(uv-vec2(.25,-0.45), vec2(line, .3)));\n    col *= vec3(box(uv-vec2(-.55,-0.35), vec2(line, .3)));\n    col *= vec3(box(uv-vec2(-.7,0.3), vec2(line, .4)));\n    col *= vec3(box(uv-vec2(-.75,-0.35), vec2(line, .3)));\n    col *= vec3(box(uv-vec2(-.9,-.4), vec2(.3, line)));\n    \n    //Making some boxes\n    vec3 redbox = 1.-vec3(box(uv-vec2(-.5, -0.05), vec2(1., 0.3)));\n    vec3 red = vec3(0.9, .1, .1);\n    \n    //vec3 blackBox = vec3(box(uv-vec2(.9, -.15), vec2(1., 0.3)));\n    vec3 blackBox = vec3(box(uv-vec2(.72, -.45), vec2(.25, 0.3)));\n    \n    vec3 bluebox = 1.-vec3(box(uv-vec2(-.35, 0.3), vec2(.7, 0.4)));\n    //bluebox += 1.-vec3(box(uv-vec2(.85, 0.25), vec2(.7, 0.5)));\n    vec3 blue = vec3(.3, .5, .9);\n    \n    vec3 yellowbox = 1.-vec3(box(uv-vec2(.2, -.15), vec2(.4, 0.3)));\n    vec3 yellow = vec3(1., .9, 0.);\n    \n    //combine boxes to one mask\n    vec3 boxes = mix(vec3(1.), red, redbox);\n    boxes = mix(boxes, blue, bluebox);\n    boxes = mix(boxes, yellow, yellowbox);\n    boxes *= blackBox;\n    \n    //combine boxes with lines\n    col *= boxes;\n    \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}