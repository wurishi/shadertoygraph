{"ver":"0.1","info":{"id":"MlSGDD","date":"1429071194","viewed":625,"name":"webcam fractal","username":"nshelton","description":"fbm-style texture from webcam","likes":7,"published":1,"flags":2,"usePreview":0,"tags":["fractal","fbm","texture","webcam"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"vec2 map(vec2 uv) {\n     return  abs(fract(uv-0.25) - 0.5 )*2. ;\n}\n\nvec4 fbm(vec2 uv, float theta, float scale) {\n    vec4 r = vec4(1.);\n\n    mat2 rot = mat2(cos(theta), sin(theta),\n                    -sin(theta), cos(theta)); \n    rot *= scale;\n\n    r *=  texture(iChannel0, map(uv)); uv *= rot;\n    r *= 1. -texture(iChannel0, map(uv)); uv *= rot;\n    r *=  texture(iChannel0, map(uv)); uv *= rot;\n    r *= 1. - texture(iChannel0, map(uv)); uv *= rot;\n\n   \n    return r * 10.;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = fbm(\n        uv/2. - 0.25, \n        iTime/100.,\n        2. + sin(iTime/ 10.) / 6. );\n\n    \n    \n    \n}","name":"","description":"","type":"image"}]}