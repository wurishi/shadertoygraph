{"ver":"0.1","info":{"id":"3s3XWn","date":"1571730911","viewed":146,"name":"HSV conversion test","username":"KeyJ","description":"Just a test of various RGB-to-HSV and HSV-to-RGB algorithms.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["color","rgb","hsv"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// RGB-to-HSV and HSV-to-RGB conversion test\n// nothing special, just testing the conversion algorithms\n// that other people wrote\n\n\n// fast RGB-to-HSV conversion (GPU version)\n// source: Sam Hocevar, http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 rgb2hsv(vec3 c) {\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n    vec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\n    vec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\n    float d = q.x - min(q.w, q.y);\n    float e = 1.0e-10;\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n\n// fast HSV-to-RGB conversion (GPU version)\n// source: Sam Hocevar, http://lolengine.net/blog/2013/07/27/rgb-to-hsv-in-glsl\nvec3 hsv2rgb_hocevar(vec3 c) {\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\n// even faster HSV-to-RGB conversion\n// source: Ian Taylor, http://chilliant.blogspot.com/2014/04/rgbhsv-in-hlsl-5.html\nvec3 hsv2rgb_taylor(vec3 c) {\n    float h = fract(c.x) * 6.0;\n    return ((clamp(vec3(\n                    abs(h - 3.0) - 1.0,\n              2.0 - abs(h - 2.0),\n              2.0 - abs(h - 4.0)\n           ), 0.0, 1.0) - 1.0) * c.y + 1.0) * c.z;\n}\n\n\n// main test program\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n    vec3 rgb = texture(iChannel0, uv).rgb;\n    vec3 hsv = rgb2hsv(rgb);\n    hsv.x += uv.x + iTime * .25;\n    hsv.y *= (1. - uv.y) * 3.;\n    rgb = ((uv.x - uv.y) < 0.) ? hsv2rgb_hocevar(hsv) : hsv2rgb_taylor(hsv);\n    fragColor = vec4(rgb, 1.);\n}","name":"Image","description":"","type":"image"}]}