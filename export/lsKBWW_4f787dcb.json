{"ver":"0.1","info":{"id":"lsKBWW","date":"1528920594","viewed":647,"name":"Parallax pebbles","username":"googl4","description":"parallax occlusion mapping","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sXGRn","filepath":"/media/a/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","previewfilepath":"/media/ap/95b90082f799f48677b4f206d856ad572f1d178c676269eac6347631d4447258.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = fragCoord / iResolution.xy;\n\t\n    vec3 viewDir = normalize( vec3( cos( iTime / 2.0 ), sin( iTime / 2.0 ), 1 ) );\n    \n    float scale = 0.1;\n    \n    //float layers = 8.0;\n    uint layers = 8u;\n    vec2 delta = viewDir.xy / float( layers ) * scale;\n    float z = 0.0;\n    float depth = 1.0 - texture( iChannel0, uv ).r;\n    float lastDepth = depth;\n    float lastZ = z;\n    \n    float layer_step = 1.0 / float( layers );\n    \n    // for loop should be easier for the compiler to unroll\n    // while( z < depth && z <= 1.0 ) {\n    for( uint i = 0u; i < layers; i++ ) {\n        if( z >= depth ) {\n            break;\n        }\n        \n        uv += delta;\n        lastZ = z;\n        z += layer_step;\n        lastDepth = depth;\n        depth = 1.0 - texture( iChannel0, uv ).r;\n    }\n    \n    float weight = ( z - depth ) / ( ( lastDepth - lastZ ) - ( depth - z ) );\n    uv -= delta * weight;\n    depth -= ( depth - lastDepth ) * weight;\n    \n    vec3 col = texture( iChannel1, uv ).rgb * ( 1.0 - depth );\n    \n    if( uv.x > 1.0 || uv.y > 1.0 || uv.x < 0.0 || uv.y < 0.0 ) {\n\t\tcol = vec3( 0.0 );   \n    }\n\n    fragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}]}