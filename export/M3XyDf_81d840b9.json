{"ver":"0.1","info":{"id":"M3XyDf","date":"1726724905","viewed":13,"name":"Radar Shader Green Circle","username":"Kjuiss83","description":"radar green waves","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["radarkeule"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize coordinates to [-1, 1] and correct aspect ratio\n    vec2 uv = (fragCoord.xy / iResolution.xy) * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    // Define the central point at the lower half of the screen\n    vec2 center = vec2(0.0, -0.5);\n\n    // Compute the vector from the center to the current point\n    vec2 delta = uv - center;\n\n    // Compute the distance from the center\n    float dist = length(delta);\n\n    // Adjust the amplitude to increase as we move upwards\n    float amplitude = (uv.y + 1.0) * 0.5;\n\n    // Compute the wave function\n    float frequency = 10.0;\n    float speed = 2.0;\n    float wave = sin(frequency * dist - iTime * speed) * amplitude;\n\n    // Map wave to [0, 1] for intensity\n    float intensity = (wave + amplitude) / (2.0 * amplitude);\n\n    // Apply a threshold to create a sharper wave effect\n    intensity = smoothstep(0.6, 1.0, intensity);\n\n    // Set color: green for the waves, black elsewhere\n    vec3 color = vec3(0.0, intensity, 0.0);\n\n    fragColor = vec4(color, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}