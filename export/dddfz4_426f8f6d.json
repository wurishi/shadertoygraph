{"ver":"0.1","info":{"id":"dddfz4","date":"1697045449","viewed":118,"name":"inktober 2023 #10 - Fortune","username":"Shalexder","description":"Infinite spiraling cartomancy","likes":21,"published":1,"flags":0,"usePreview":0,"tags":["card","inktober","fortune","tarot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define GOLD .8*vec3(255,215,0)/255.\n\n\nfloat rand(float p){\n  return fract(1738.326*sin(p*83.2679));\n}\n\nfloat sdRoundedBox( in vec2 p, in vec2 b, in vec4 r )\n{\n    r.xy = (p.x>0.0)?r.xy : r.zw;\n    r.x  = (p.y>0.0)?r.x  : r.y;\n    vec2 q = abs(p)-b+r.x;\n    return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - r.x;\n}\n\nfloat cardSDF(vec2 p){\n    return sdRoundedBox(p, vec2(.58, 1.), vec4(.1));\n}\n\nvec4 card(vec2 uv, float id, float rt){\n  vec3 col = vec3(0.);\n  float alpha = 0.;\n      \n  uv.x /= rt;\n  \n  //float uvx = \n  float csdf = cardSDF(uv);\n                  float a = atan(uv.y, uv.x);\n                float l = length(uv);\n  if(csdf <= 0.){\n        alpha = 1.;\n        \n        col = vec3(0.);\n        float b = sdRoundedBox(uv, vec2(.58, 1.)-.05, vec4(.1));\n\n        if(rt > 0.){\n            if(csdf > -.01) col *= .4;\n\n\n            if(b < 0.) {\n                //float al = (a+l)/10.;\n                //if(al < .1 && al > -.1) col = vec3(1.);\n                l *= 10.;\n                if(fract(l) < .5 && l < 5. && fract(2.*a/6.28+floor(l)*.1) < .5){\n                    col = vec3(1.);\n                }\n            }\n\n            //if(b > 0.) col *= .9;\n            /*float border = abs(b);\n            float c = .9;\n            float star = abs(sdStar5(uv, .5*c, .39));\n            float pentagon = abs(sdPentagon(uv, .159*c));\n            float circle = abs(length(uv)-.5*c);\n\n            border = min(min(min(border, star), pentagon), circle);*/\n\n            /*if(border > -.005 && border < .005){\n                col = GOLD;\n            }*/\n            //col = mix(col, GOLD, smoothstep(.004, 0.002, abs(border)));\n        } else {\n            if(b < 0.){\n                col = vec3(0.);\n                l += iTime*.5;\n                //l *= pow(2., iTime);\n                float r = rand(id);\n                float r2 = fract(r*827.229);\n                float r3 = fract(r*82977.827);\n                float r4 = fract(r*9323.526);\n                float r5 = fract(r*12723.526);\n                float r6 = fract(r*83792.292);\n                float r7 = fract(r*938373.03822);\n                vec3 c = vec3(r3, r4, r5);\n                float lc = length(c);\n                if(lc < .5) c = .5*c/lc;\n                if(fract(ceil(r2*6.)*a/6.28+floor(l*10.)*(r*2.)) < r6*.8+.1 && fract(l*10.) < .2+.6*r7){\n                    col = c;//max(vec3(r3, r4, r5), .5);\n                }\n            }\n        }\n                            float border = abs(b);\n            if(border < .008)col = vec3(.8);\n    }\n    \n    return vec4(col, alpha);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = (fragCoord-iResolution.xy*.5)/iResolution.y;\n    uv *= 4.5;\n\n    vec3 col = vec3(.1, .1, .15);\n    \n\n    // anim 1\n    /*for(int i = 0; i < 5; i++){\n        float fi = float(i);\n        vec2 pos1 = vec2(0.);\n        vec2 pos2 = vec2(0., fi*.08);\n        vec2 endPos = vec2((fi-2.)*1.5, 0.);\n        vec2 pos = mix(\n        mix(pos1, pos2, smoothstep(0., .5, iTime)),\n        endPos, smoothstep(.6, 1.2, iTime)\n        );\n        vec4 c = card(uv-pos, fi);\n        if(c.a > 0.) col = c.rgb;\n    }*/\n    \n    //anim 2\n    /*vec2 deckPos = vec2(-1., 0.);\n    vec2 stackPos = vec2(1., 0.);\n    for(int i = 0; i < 2; i++){\n        float fi = float(i);\n        float t = mod(iTime+3.*fi/2., 3.);\n        vec2 pos = mix(deckPos, stackPos, smoothstep(0., 1., t));\n        float rt = clamp(1.-(t-1.1)*6., -1., 1.);\n        vec4 c = card(uv-pos, fi, rt);\n        if(c.a > 0.) col = c.rgb;\n    }*/\n    \n    //anim 3\n    vec2 baseUv = uv;\n    uv.x += iTime;\n    float id = floor(uv.x/2.);\n        \n    vec4 stackC = card(baseUv-vec2(3., -2.), id, 1.);\n    if(stackC.a > 0.) col = stackC.rgb;\n    \n\n\n    uv.x = mod((uv.x), 2.);\n    float rt = clamp(1.-(iTime-id*2.+1.)*6., -1., 1.);\n    vec2 pos = mix(vec2(1., -2.), vec2(1., 0.),smoothstep(-2., -1.6, iTime-id*2.));\n    vec4 c = card(uv-pos, id, rt);\n    if(c.a > 0. && iTime-id*2. > -2. && id > 0.) col = c.rgb;\n    \n\n    // Output to screen\n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}