{"ver":"0.1","info":{"id":"clS3Dy","date":"1683164120","viewed":72,"name":"Truchet Maze ~ simple","username":"Dirk","description":"maze","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["game","truchet","tiling","maze","tessellation","gamedev","halls","gamedesign","mapgeneration"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n\n    // Truchet Maze\n    // by Dirk Stockton\n\n    #define iR iResolution\n    #define PI 3.14159265359\n\n    float  hash12( vec2 p  ){\n        vec3 p3  = fract(vec3(p.xyx) * .1031);\n        p3 += dot(p3, p3.yzx + 33.33);\n        return fract((p3.x + p3.y) * p3.z);\n    }\n\n    float box(vec2 p, vec2 size)\n    {\n        vec2 d = abs(p) - size;  \n        return length(max(d, vec2(0))) + min(max(d.x, d.y), 0.0);\n    }\n\n    float maze( vec2 p ){\n\n        p+= iTime*0.5;\n\n        vec2 id = floor(p);\n        float n = hash12(id);\n        float n1 = hash12( vec2( floor(n*13456.12), floor( n*0.264 ) ) );\n        float n2 = hash12( vec2( floor(  n*168.1 ), floor( n*467.15 )) );\n\n        p = fract(p) - .5;\n        vec3 col = vec3(0);\n        float d = 0.;\n        float w = 5.*1.5/iR.y;\n            if( n1 <= 0.5 ){\n                if( n1 <= 0.35 ){\n                    if(n<.5) p.x *= -1.;\n                    float s = p.x>-p.y ? 1. : -1.;\n                    float cd = length(p-vec2(.5,.5)*s);\n                    float w = .01;\n                    d = smoothstep(w, -w, abs(cd-.5)-.175);\n                }\n                else if( n1 <= 0.5 ){ \n                    if( n1 <= 0.4 ){\n                        float cd = length(p);\n                        d = smoothstep(w, -w, abs(cd-.36)-.175);\n                    }else{\n                        float cd = length(p)-0.535;\n                        d =  smoothstep(w, -w, cd );\n                    }\n                }\n            }else if( n1 <= 1.0 ){\n\n                if( n1 <= 0.75 ){\n                    p.y = abs(p.y);\n                    d = p.y - 0.075;\n                    p.x = abs(p.x);\n                    float d1 = p.x - 0.075;\n                    p.x -= 0.75;\n                    d = min(d,d1);\n                }\n                else if( n1 <= .8 ){\n                    p.y = abs(p.y);\n                    d = p.y - 0.075;\n                    p.y -= 0.5;\n                    d = min( d, length(p)-0.075 );\n                }\n                else if( n1 <= 1.0 ){\n                    p.x = abs(p.x);\n                    d = p.x - 0.075;\n                    p.x -= 0.5;\n                    d = min( d, length(p)-0.075 );\n                }\n                \n                d = smoothstep(w, -w, d-0.1);\n            }\n        return d;\n    }\n\n    void mainImage( out vec4 color, in vec2 xy )\n    {\n        vec2 uv = (2.0*xy-iR.xy)/iR.y;\n\n        vec3 col = vec3( 0.0 );\n        uv *= 5.;\n\n        float t1 = maze( uv );\n\n        col = vec3( t1 );\n        color = vec4(col,1.0);\n\n    }","name":"Image","description":"","type":"image"}]}