{"ver":"0.1","info":{"id":"sdXczr","date":"1641589949","viewed":269,"name":"Simple Interference Feedback","username":"tarnith","description":"Playing with layers of feedback sinusoid intereference patterns","likes":13,"published":3,"flags":32,"usePreview":0,"tags":["interference","feedback"],"hasliked":0,"parentid":"fdXyzr","parentname":"Interference Feedback"},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = ( fragCoord - .5*iResolution.xy ) / iResolution.xy; \n\tfragColor = pow(texture(iChannel1,uv), vec4(1./2.2) ); \n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texuv = uv;\n    texuv -= .5;\n    texuv *= 2.;\n    texuv += .5;\n    uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n    \n    vec3 col = vec3(0.);\n    float waves = 0.;\n    waves -= w;\n    waves -= f*gainScalar;\n    col = vec3(waves);\n    fragColor = vec4(col,1.0);\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    vec2 texuv = uv;\n    texuv -= .5;\n    texuv *= 1.001;\n    texuv += .5;\n    uv = ( fragCoord - .5*iResolution.xy ) / iResolution.y;\n  \n    vec3 col = vec3(0.);\n    float waves = 0.;\n    waves -= f*gainScalar;\n    waves -= f2*gainScalar;\n    col = vec3(waves);\n    fragColor = vec4(col,1.0);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"#define gainScalar .8\n#define time iTime\n#define f texture(iChannel0,texuv).r\n#define f2 texture(iChannel1,texuv).r\n#define w sin(length(uv)*time*2.);","name":"Common","description":"","type":"common"}]}