{"ver":"0.1","info":{"id":"ltXBRX","date":"1512663126","viewed":360,"name":"Mipumi Games","username":"xx3000","description":"Distance field logo of the amazing game company I am a part of.","likes":2,"published":1,"flags":2,"usePreview":0,"tags":["distancefields","logo","webcam","gamedev","mipumi"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4sf3zn","filepath":"/presets/webcam.png","previewfilepath":"/presets/webcam.png","type":"webcam","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n#define WEBCAM 0 //set to 1 if you have a webcam\n#define ANIMATION_LENGTH 30.0\n\n#define PI 3.14159265\n\nfloat ns,ns2;\nfloat anim1;\n\nfloat insideSuperEllipse(vec2 uv, float a, float b, float n)\n{\nreturn pow(abs(uv.x/a),n)+pow(abs(uv.y/b),n) - 1.0;\n\n}\n\n\nvec2 Rotate(vec2 p, float rad)\n{\n    mat2 rot = mat2(cos(rad),-sin(rad),sin(rad),cos(rad));\n    return p*rot;\n}\n\nvec2 Move(vec2 from, vec2 to)\n{\n \treturn from-to;   \n}\n\nfloat Merge ( float a, float b)\n{\n    return min(a,b);\n}\n\nfloat Subtract ( float a, float b)\n{\n    return max(-a,b);\n}\n\n\n\n//Voronoise by IQ\nvec3 hash3( vec2 p )\n{\n    vec3 q = vec3( dot(p,vec2(127.1,311.7)), \n\t\t\t\t   dot(p,vec2(269.5,183.3)), \n\t\t\t\t   dot(p,vec2(419.2,371.9)) );\n\treturn fract(sin(q)*43758.5453);\n}\n\nfloat noise( in vec2 x, float u, float v )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\n    float k = 1.0 + 63.0*pow(1.0-v,4.0);\n    float va = 0.0;\n    float wt = 0.0;\n    for( int j=-2; j<=2; j++ )\n    for( int i=-2; i<=2; i++ )\n    {\n        vec2  g = vec2( float(i), float(j) );\n        vec3  o = hash3( p + g )*vec3(u,u,1.0);\n        vec2  r = g - f + o.xy;\n        float d = dot(r,r);\n        float w = pow( 1.0-smoothstep(0.0,1.414,sqrt(d)), k );\n        va += w*o.z;\n        wt += w;\n    }\n\n    return va/wt;\n}\n\n\n\nfloat box(in vec2 p, vec2 size)\n        {\n            vec2 d = (abs(p) - size);\n            return ((min(max(d.x , d.y ), 0.0) + length(max(d, vec2(0.0)))));\n        }\n\nfloat triangle(vec2 p, float width, float height)\n        {\n            vec2 n = normalize(vec2(height, width * 0.5));\n            return max(abs(p).x * n.x + (p.y * n.y) - (height * n.y), -p.y);\n        }\n\nfloat disc(in vec2 p, in float radius)\n        {\n            return (length(p ) - radius);\n        }\n\nfloat ellipse(vec2 p,float rad, float offset,float ns1 )\n{\n    offset = rad-offset;\n    float left =Subtract(box(p-vec2(2,0),vec2(2.0,20.0)),disc(p-vec2(offset,0.0),rad)+ns1);\n    float right =Subtract(box(p+vec2(2,0),vec2(2.0,20.0)),disc(p+vec2(offset,0.0),rad)+ns1);\n    return Merge(left,right);\n}\n\nfloat RenderLeafStem(vec2 uv, vec2 pos)\n{\n    uv= Move(uv,pos);\n    uv.x += sin(uv.y*8.0)*0.003;\n    float eli= ellipse(uv,15.0*anim1,0.02,ns*0.5);\n    float cutout = Subtract(-(uv.y-0.42),eli);\n    cutout = Subtract((uv.y+0.45),cutout);\n    return cutout;\n}\n\n\nfloat RenderLeafRaw(vec2 uv, float mul)\n{\n    float ns1 = ns*0.5;\n    \n    float outer1 = ellipse(uv,0.4*anim1,0.2,ns1);\n    float outer2 = ellipse(uv-vec2(0.01,-0.01),0.35*anim1,0.17,ns1);\n    float outerCut = Subtract(outer2,outer1);\n    return outerCut;\n}\n\nfloat RenderLeaf(vec2 uv, vec2 pos, float rot)\n{\n    uv= Move(uv,pos);\n   \tuv= Rotate(uv,rot);  \n\tfloat outer = RenderLeafRaw(uv,1.0);\n    \n    float stem = RenderLeafStem(uv,vec2(0.0,0.15));\n    return Merge(outer,stem);\n}\n\n\nfloat RenderFirstStem(vec2 uv, vec2 pos)\n{\n    uv= Move(uv,pos);\n    float eli = ellipse(uv,3.0*anim1,0.02,ns2*0.5);\n    float cutout = Subtract((uv.y+0.1)*15.0,eli);\n    return cutout;\n}\n\nfloat RenderStem(vec2 uv, vec2 pos)\n{\n    uv= Move(uv,pos);\n    float eli = ellipse(uv,1.0*anim1,0.02,ns2*0.5);\n    float cutout = Subtract((uv.y+0.1)*15.0,eli);\n    return cutout;\n}\n\nfloat RenderLongStem(vec2 uv, vec2 pos)\n{\n     uv= Move(uv,pos);\n    uv.x += sin(uv.y*8.0)*0.002;\n    float eli = ellipse(uv,30.0*anim1,0.02,ns2*0.4);\n    float cutout = Subtract((uv.y+0.75),eli);\n    cutout = Subtract(-(uv.y-0.8),eli);\n    return cutout;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (-iResolution.xy + 2.0*fragCoord) / iResolution.y;\n\t\n    float introLength = ANIMATION_LENGTH;\n   \n   // e = 2.0/iResolution.y;\n    vec2 uv2 = fragCoord.xy / iResolution.xy;\n     \n    float lum=1.0;\n    #if WEBCAM\n    vec4 cam = texture(iChannel0,uv2);\n    lum =cam.x+cam.y+cam.z/3.0;\n    #endif\n    //fragColor= vec4(lum,lum,lum,1.0);\n    //return;\n    \n    //uv.y-=1.0;\n    \n    float time = mod(iTime,introLength);\n    anim1=min(1.0,time*0.1);\n    float outroTime = max((time-(introLength-10.0))*5.0,1.0);\n\n   \n    \n    vec4 bg = vec4(1.0,1.0,1.0,1.0);\n    vec4 fg = vec4(0.0,0.27059,0.476275,1.0);\n    \n    \n    lum-=0.7;\n    lum=clamp(lum*99999999.0,0.0,1.0);\n    bg-= (1.0-lum)*0.05;\n    \n    \n    //uv.x+=sin(uv.y+time)*(1.0-lum)*0.1;\n    lum= 1.0-lum;\n    ns =noise(120.0*uv+vec2(0,-iTime*max(1.0,lum*5.0)),1.0,1.0)*(0.03+lum*0.03);\n    ns2 =noise(120.0*uv+vec2(-iTime*0.5*max(1.0,lum*5.0),-iTime*max(1.0,lum*5.0)),1.0,1.0)*(0.03+lum*0.03);\n    \n    float spacingX = 3.0/10.0;\n    float startX = -1.3;\n    float leaves =-9999999.9;\n    \n    float stemanimSpeed = 0.3;\n    \n    \n    vec2 grp1 = vec2(-0.7,0.4);\n    anim1=min(1.0,time*stemanimSpeed-1.2);\n    leaves = RenderLeaf(uv,grp1+vec2(-0.4,0.0),PI*0.75);\n    anim1=min(1.0,time*stemanimSpeed-1.4);\n    leaves = Merge(leaves,RenderLeaf(uv,grp1+vec2(0.4,0.2),PI*-0.75));\n    \n    anim1=min(1.0,time*stemanimSpeed-0.3);\n    leaves = Merge(leaves,RenderLongStem(uv,vec2(startX+spacingX*2.0,-0.15)));\n    \n    \n    vec2 grp2 = vec2(0.8,0.1);\n    anim1=min(1.0,time*stemanimSpeed-1.6);\n    leaves = Merge(leaves,RenderLeaf(uv,grp2+vec2(-0.4,0.0),PI*0.75)); \n    anim1=min(1.0,time*stemanimSpeed-1.8);\n    leaves = Merge(leaves,RenderLeaf(uv,grp2+vec2(0.4,0.3),PI*-0.75));\n\n    anim1=min(1.0,time*stemanimSpeed-0.8);\n    leaves = Merge(leaves,RenderLongStem(uv,vec2(startX+spacingX*7.0,-0.2)));\n\n    \n    float leafanimSpeed = 0.3;\n  \n    anim1=min(1.0,time*leafanimSpeed-0.0);\n    leaves = Merge(leaves,RenderFirstStem(uv,vec2(startX+spacingX*0.0,-0.8))); \n    anim1=min(1.0,time*leafanimSpeed-0.1);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*1.0,-0.8)));\n\n    anim1=min(1.0,time*leafanimSpeed-0.3);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*3.0,-0.8)));\n    anim1=min(1.0,time*leafanimSpeed-0.4);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*4.0,-0.8)));\n    anim1=min(1.0,time*leafanimSpeed-0.5);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*5.0,-0.8)));\n    anim1=min(1.0,time*leafanimSpeed-0.6);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*6.0,-0.8)));\n\n    anim1=min(1.0,time*leafanimSpeed-0.8);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*8.0,-0.8))); \n    anim1=min(1.0,time*leafanimSpeed-0.9);\n    leaves = Merge(leaves,RenderStem(uv,vec2(startX+spacingX*9.0,-0.8)));\n\n    fragColor=vec4(ns,ns,ns,1.0)*20.0;\n    //return;\n    \n    //leaves-= (1.0-lum)*0.1;\n    \n    //bg= mix(fg,bg,smoothstep(0.00,0.005,leaves));\n    //leaves-=max((time-(introLength-10.0))*0.05,0.0)*ns;\n    \n    if(leaves <=0.0)\n    {\n    bg= mix(vec4(0.0,0.27059,0.476275,1.0),bg,max((time-(introLength-1.0)),0.0));\n    // bg = vec4(-leaves*1.0,0.0,0.0,1.0);   \n     }\n    \n    \n\tfragColor = bg;\n}","name":"Image","description":"","type":"image"}]}