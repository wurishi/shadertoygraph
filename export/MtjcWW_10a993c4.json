{"ver":"0.1","info":{"id":"MtjcWW","date":"1508678921","viewed":112,"name":"ExploreManyCylinder","username":"brackss1","description":"You will feel as if you are exploring \"Cylinder World\".","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["3d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float radius = 1., EPS = 0.001;\n\nfloat getN(float x){\n    float tmp = float(int(x) / 10 * 10);\n    return (x - tmp < 5.)? tmp : tmp + 10.;\n}\n\nfloat straightDist(vec3 p){\n    return length(vec2(getN(p.x), getN(p.y)) - p.xy) - radius;\n}\n\nfloat horizontalDist(vec3 p) {\n    \n    return length(vec2(getN(p.y), getN(p.z)) - p.yz) - radius;\n}\n\nfloat verticalDist(vec3 p){\n    \n    return length(vec2(getN(p.x), getN(p.z)) - p.xz) - radius;\n}\n\nfloat distFunc(vec3 p){\n    \n    return min(straightDist(p), min(horizontalDist(p), verticalDist(p)));\n}\n\nvec3 normal(vec3 p){\n    return normalize(vec3(\n        distFunc(p + vec3(EPS, 0., 0.)) - distFunc(p),\n        distFunc(p + vec3(0., EPS, 0.)) - distFunc(p),\n        distFunc(p + vec3(0., 0., EPS)) - distFunc(p)\n    ));\n}\n\nvec3 trace(vec3 origin, vec3 ray){\n    \n    ray = normalize(ray);\n    \n    vec3 p = origin;\n    \n    for(int i = 0; i < 32; ++i){\n    \tp += distFunc(p) * ray;\n    }\n    \n    return p;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    uv -= .5;\n    uv.x *= iResolution.x / iResolution.y;\n    \n    float t = iTime*2.;\n    \n    vec3 origin = vec3(cos(t) + 5., sin(t) + 5., log(t)*t);\n    vec3 ray = vec3(uv, 2.);\n    vec3 light = normalize(vec3(-1., -1., 1.));\n    \n    vec3 p = trace(origin, ray);\n    \n    if(distFunc(p) < EPS){\n        float d = dot(normal(p), -light);\n        fragColor = vec4(vec2(d * sin(t)), vec2(d* cos(t)));\n    }\n    \n    else\n        fragColor = vec4(1.);\n    \n}","name":"Image","description":"","type":"image"}]}