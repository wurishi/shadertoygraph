{"ver":"0.1","info":{"id":"XlSyRm","date":"1507819317","viewed":128,"name":"Function visualiser","username":"JamesGriffin","description":"A simple shader for plotting functions in two variables.","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float scale = 24.;\n    float aspect_ratio = 1.8;\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n    float x = scale * aspect_ratio * (uv.x - 0.5);\n    float y = scale * (uv.y - 0.5);\n    // The above code works out x and y values, the y value runs from 0 to 1.\n    \n    // All constants must have a decimal point, or else you'll get an error.\n    \n    // Now write a formula in terms of x and y\n    float a = 0.5 * (sin(x) * sin(y) + 1.0);\n    \n    // Finally output the value as a shade of grey, playing with this function\n    // will produce color output.\n\tfragColor = vec4(a, a, a,1.0);\n}","name":"Image","description":"","type":"image"}]}