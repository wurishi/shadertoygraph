{"ver":"0.1","info":{"id":"ttGfRW","date":"1614215689","viewed":98,"name":"bondi template","username":"JeanArthurDeda","description":"Template for rendering","likes":8,"published":1,"flags":0,"usePreview":0,"tags":["template"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsfGRn","filepath":"/media/a/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","previewfilepath":"/media/ap/1f7dca9c22f324751f2a5a59c9b181dfe3b5564a04b724c657732d0bf09c99db.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"struct Surfs\n{\n    Surf ground;\n    Surf checker;\n    Surf bondi;\n};\n\nstruct Context\n{\n    Surfs surfs;\n    vec3 sky;\n    vec3 sun;\n    float t;\n};\n\nvec3 ps(Context cont) {return vec3(cont.t*.5,0,0);}\n\nvec3 pp(vec3 p, Context cont){return vec3(cos(p.x-cont.t*.5)*.8,0,0) + ps(cont);}\n\nSurf scene(vec3 p, Context cont)\n{\n    p.y+=dot(p.xz,p.xz)*.01;\n    Surf s = surf(sphere(wrapl(p-vec3(0.,.7,1.),vec3(4.6),vec3(1,0,1)),1.),cont.surfs.bondi);\n    vec3 delt=ps(cont);\n    p += pp(p,cont);\n    \n    s = opU(s, surf(plane(p,vec3(0,1,0),0.),cont.surfs.ground));\n    vec3 fp=wrap(p,vec3(2.3)); fp.y=p.y;\n    float size=cos(dot(p.xx,vec2(1.))+cont.t*1.)*.12+.14;\n    Surf m;\n    if (mod(dot(wrapi(p,vec3(2.3)).xz,vec2(1)),2.) < 1.)\n        m = cont.surfs.checker;\n    else\n        m = cont.surfs.ground;\n    s = opU(s, surf(-.1+0.7*cylinder(fp+vec3(0,size,0),.45, .2),m));\n    return s;\n}\nvec3 sun(vec3 d,Context cont)\n{\n    float s = clamp(dot(d,normalize(vec3(-1.,-.3,0.))),0.,1.);\n    return 2.*cont.sun*pow(s,41.);\n}\nvec3 atmo(vec3 d, Context cont){return cont.sky-(abs(-d.y-.3)-.3);}\nvec3 sky(vec3 d, Context cont){return sun(d,cont)+atmo(d,cont);}\nDECL_RAY (ray_refl, scene,0.2,20.,16)\nDECL_RAY (ray, scene,1.,20.,64)\nvec4 mat(vec3 p, vec3 n, Surf s, Context cont)\n{\n    if (s.t == 0)\n        return texture(iChannel0,p.xz*.5).xyzy;\n    if (s.t == 1)\n    {\n        float c = (mod(dot(floor(p+pp(p, cont)).xz,vec2(1.)),2.)*.5+.5);\n        return vec4(s.c*c,c);\n    }\n    return vec4(s.c,1);\n}\nDECL_NOR (nor, scene)\nDECL_AO  (ao, scene)\nDECL_SHD (shadow, scene)\nvoid light(vec3 p, vec3 d, vec3 n, Surf s, float f, Context cont, out vec3 dif, out vec3 spe)\n{\n    vec3 l=normalize(vec3(-1,-0.25,.0));\n    float k;\n    dif = col(33)+clamp(dot(l,n)*.8+.2,0.,1.)*cont.sun;\n    spe = pow(clamp(dot(reflect(d,n),l),0.0, 1.0),3.0)*cont.sun*f*s.s;\n}\nvec3 fog(float t, vec3 d, vec3 c, Context cont){return mix(c,sky(d, cont),clamp(exp(-(15.-t)*.22),0.,1.));}\nDECL_TO_REFL(sky_to_refl,sky)\nDECL_RENDER(render_refl,sky,ray_refl,mat,nor,ao,light,sky_to_refl,fog)\nDECL_RENDER(render,sky,ray,mat,nor,ao,light,render_refl, fog)\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    Context cont;\n    cont.t = iTime;\n    cont.sun = col(255,64,64);\n    cont.sky = col(40,120,195);\n    cont.surfs.ground = surf(col(192,125,128),0,0.,2.,1.);\n    cont.surfs.checker = surf(col(155,255,255),1,0.,1.0,1.);\n    cont.surfs.bondi = surf(col(0,0,100),2,1.,1.,1.);\n\n    vec2 p =(-iResolution.xy + 2.0*fragCoord)/iResolution.y;\n    vec3 o=vec3(cos(cont.t*.2)*7.,2.,sin(cont.t*.1)*7.);\n    vec3 d=normalize(vec3(p,1.)*camera(o,vec3(0)));\n    \n    fragColor=vec4(render(o,d,cont),1);\n}","name":"Image","description":"","type":"image"},{"inputs":[],"outputs":[],"code":"#define PI 3.141592653589793238f\n\nvec3 col(int r, int g, int b){return vec3(r,g,b)/255.;}\n\nvec3 col(int i) {return vec3(i)/255.;}\n\nstruct Surf\n{\n    float d;\n    vec3 c; \n    int t; \n    float r;\n    float s;\n    float f;\n};\n\nSurf surf(vec3 c, int t,float r,float s_,float f){Surf s;s.c=c;s.t=t;s.r=r;s.s=s_;s.f=f;return s;}\n\nSurf surf(float d, Surf s){Surf r=s;r.d=d;return r;}\n\nstruct Dir\n{\n    vec3 c;\n    vec3 d;\n};\n\nstruct Omni\n{\n    vec3 c;\n    vec3 p;\n};\n\nstruct Spot\n{\n    vec3 c;\n    vec3 p;\n    vec3 d;\n    vec2 h;\n};\n\nfloat rad(float a) {return a*PI/180.0;}\n\nfloat sphere(vec3 p,float r){return length(p)-r;}\n\nfloat box(vec3 p,vec3 s){vec3 q=abs(p)-s;return length(max(q,0.0))+min(max(q.x,max(q.y,q.z)),0.0);}\n\nfloat plane(vec3 p,vec3 n,float d){return dot(p,n)+d;}\n\nfloat cylinder( vec3 p, float r, float h )\n{\n  vec2 d = abs(vec2(length(p.xz),p.y)) - vec2(r,h);\n  return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n}\n\nSurf opU(Surf s1,Surf s2) {if(s1.d<s2.d)return s1; return s2;}\n\nfloat opS(float d1, float d2 ) { return max(-d1,d2); }\n\nfloat opI(float d1, float d2 ) { return max(d1,d2); }\n\nvec3 wrap(vec3 p, vec3 s){return mod(p+.5*s,s)-.5*s;}\n\nvec3 wrapi(vec3 p, vec3 s){return floor(p/s-.5);}\n\nvec2 wrap(vec2 p, vec2 s){return mod(p+.5*s,s)-.5*s;}\n\nvec2 wrapi(vec2 p, vec2 s){return floor(p/s-.5);}\n\nfloat wrap(float p, float s){return mod(p+.5*s,s)-.5*s;}\n\nfloat wrapi(float p, float s){return floor(p/s-.5);}\n\nvec3 wrapl(vec3 p, vec3 s, vec3 l){return p-s*clamp(round(p/s),-l,l);}\n\nvec2 wrapl(vec2 p, vec2 s, vec2 l){return p-s*clamp(round(p/s),-l,l);}\n\nfloat atten(vec3 l) {return 1./dot(l,l);}\n\nvec3 dir(vec3 p, vec3 n, Dir d)\n{\n    float k= clamp(dot(n,d.d),0.,1.);\n    return k*d.c;\n}\n\nvoid omni(vec3 p, vec3 op, out vec3 l, out float k)\n{\n    l=op-p;\n    k = atten(l);\n    l = normalize(l);\n}\n\nvec3 omni(vec3 p, vec3 n, Omni o)\n{\n    vec3 l;\n    float k;\n    omni(p, o.p, l, k);\n    k*= clamp(dot(n,l),0.,1.);\n    return k*o.c;\n}\n\nvoid spot(vec3 p, vec3 sp, vec3 sd, vec2 sh, out vec3 l, out float k)\n{\n    omni(p, sp, l, k);\n    k *= smoothstep (cos(sh.y),cos(sh.x),dot(l,-sd));\n}\n\nvec3 spot(vec3 p, vec3 n, Spot s)\n{\n    vec3 l;\n    float k;\n    spot(p, s.p, s.d, s.h, l, k);\n    k*= clamp(dot(n,l),0.,1.);\n    return k*s.c;\n}\n\nmat3 camera(vec3 o, vec3 t)\n{\n\tvec3 z = normalize(t-o);\n\tvec3 x = cross(vec3(0,1,0),z);\n\tvec3 y = cross(z,x);\n    return transpose(mat3(x,y,z));\n}\n\n#define DECL_RAY(name,scene,near,far,iterations) \\\nSurf name(vec3 o, vec3 d, Context cont) \\\n{ \\\n    float t = near; \\\n    Surf r; \\\n    for( int i=0; i<iterations; i++ ) \\\n    { \\\n\t    r = scene(o+d*t,cont); \\\n        if(r.d<t*0.0001||t>far) break; \\\n        t+=r.d; \\\n    } \\\n    r.d=t>far?-1.:t; \\\n    return r; \\\n}\n\n#define DECL_NOR(name,scene) \\\nvec3 name(vec3 p, Context cont) \\\n{ \\\n    vec2 e = vec2(1.0,-1.0)*0.5773*0.0005; \\\n    return normalize( e.xyy*scene(p+e.xyy,cont).d + \\\n\t\t\t\t\t  e.yyx*scene(p+e.yyx,cont).d + \\\n\t\t\t\t\t  e.yxy*scene(p+e.yxy,cont).d + \\\n\t\t\t\t\t  e.xxx*scene(p+e.xxx,cont).d );\\\n}\n\n#define DECL_AO(name,scene) \\\nfloat name(vec3 p, vec3 n, Context cont) \\\n{ \\\n\tfloat o = 0.0; \\\n    float s = 1.0; \\\n    for(int i=0;i<5;i++) \\\n    { \\\n        float hr = 0.01 + 0.12*float(i)/4.0; \\\n        vec3 aopos=n*hr+p; \\\n        float dd = scene(aopos,cont).d; \\\n        o += -(dd-hr)*s; \\\n        s *= 0.95; \\\n    } \\\n    return clamp(1.-3.*o,0.,1.); \\\n}\n\n#define DECL_SHD(name,scene) \\\nfloat name(vec3 p,vec3 d,float s,float e, Context cont) \\\n{ \\\n\tfloat res = 1.0; \\\n    float t = s; \\\n    for( int i=0; i<16; i++ ) \\\n    { \\\n\t\tfloat h = scene(p+d*t,cont).d; \\\n        res = min(res,8.0*h/t); \\\n        t += clamp(h,0.02,0.10); \\\n        if(h<0.001||t>e) break; \\\n    } \\\n    return clamp(res,0.,1.); \\\n}\n\n#define DECL_TO_REFL(name, SKY) vec3 name(vec3 p,vec3 d,Context cont) {return SKY(d,cont);}\n\n#define DECL_RENDER(name,SKY,RAY,MAT,NOR,AO,LIGHT,REFL,FOG) \\\nvec3 name(vec3 o,vec3 d, Context cont) \\\n{ \\\n    vec3 c=SKY(d,cont); \\\n    Surf s=RAY(o,d,cont); \\\n    if (s.d>0.0) \\\n    { \\\n        vec3 p=o+s.d*d; \\\n        vec3 n=NOR(p,cont); \\\n        float occ=AO(p,n,cont); \\\n        float f=pow(1.-dot(n,-d),s.f);\\\n        vec3 dif=vec3(0); \\\n        vec3 spe=vec3(0); \\\n        LIGHT(p,d,n,s,f,cont,dif,spe); \\\n        vec4 m=MAT(p,n,s,cont); \\\n        c=m.xyz*sqrt(dif*occ)+sqrt(spe)*m.w; \\\n        c+=REFL(p,reflect(d,n),cont)*s.r*f;\\\n        c=FOG(s.d,d,c,cont); \\\n    } \\\n    return c; \\\n}","name":"Common","description":"","type":"common"}]}