{"ver":"0.1","info":{"id":"mtsBDN","date":"1692978499","viewed":117,"name":"SNDH Audio Spectrum","username":"cbalestra","description":"Shader for sndh.oxygenedemos.com","likes":1,"published":3,"flags":32,"usePreview":0,"tags":["audioreactive"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n\n    // Time varying pixel color\n    vec3 col = 0.75 + 0.5*cos(iTime*0.5+vec3(-2.,1.,3.)*(uv.x + 1.0));\n    //col = 0.75 + 0.5*cos(vec3(12.,6.,3.)*(uv.x + iTime * 0.01));\n\n  \n    float acc = texture(iChannel1, vec2(uv.x, 0.0)).x;\n    float v = 0.;\n    for(float i = -8.; i <= 8.; i++)\n    {\n        v += texture(iChannel0, vec2(uv.x + i * 0.005, 0.0)).x;\n    }\n    v /= 8.0;\n    //col.x = smoothstep(0.005, 0.0, abs(v-h));\n    //col *= .9 - pow(abs(v-h), 0.25 * smoothstep(.9, 0.0, abs(uv.x - 0.5)));\n    float h = uv.y - 0.5;\n    col *= 1. - pow(abs(v-h), 0.25);// * (1.0 - pow(abs(acc), 1.));\n    \n    col *= smoothstep(.9, 0., abs(uv.x - 0.5)) * smoothstep(.9, 0., abs(uv.y - 0.5));\n \n    /*if(uv.y > 0.9)\n    {\n    \n        col.xyz = vec3(texture(iChannel1, vec2(uv.x, 0.0)).x + 0.5);\n    }\n    else if(uv.y > 0.8)\n    {\n    \n        col.xyz = vec3(texture(iChannel0, vec2(uv.x, 0.0)).x + 0.5);\n    }*/\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGzn","filepath":"/media/a/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","previewfilepath":"/media/ap/894a09f482fb9b2822c093630fc37f0ce6cfec02b652e4e341323e4b6e4a4543.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":2,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    if(fragCoord.y > 1.) discard;\n    \n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n\n    float want_p = texture(iChannel0, vec2(uv.x + .01, 1.0)).x;\n    want_p -= texture(iChannel0, vec2(uv.x - .01, 1.0)).x;\n    float curr_p = texture(iChannel2, vec2(uv.x, 0.0)).x;\n    float v = texture(iChannel1, vec2(uv.x, 0.0)).x;\n    \n    float acc = want_p - curr_p;\n    col.x = v * 0.5 + 0.1 * acc;\n \n    fragColor = vec4(col,1.0);\n}","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     if(fragCoord.y > 1.) discard;\n\n    vec2 uv = fragCoord/iResolution.xy;\n    vec3 col = vec3(0.0);\n\n    float v = texture(iChannel0, vec2(uv.x, 0.0)).x;\n    float p = texture(iChannel1, vec2(uv.x, 0.0)).x;\n    \n    col.x = p + v;\n \n    fragColor = vec4(col,1.0);\n\n}","name":"Buffer C","description":"","type":"buffer"}]}