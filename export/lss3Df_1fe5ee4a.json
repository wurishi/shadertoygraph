{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":1,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"}}],"code":"// Copyright Inigo Quilez, 2013 - https://iquilezles.org/\n// I am the sole copyright owner of this Work.\n// You cannot host, display, distribute or share this Work neither\n// as it is or altered, here on Shadertoy or anywhere else, in any\n// form including physical and digital. You cannot use this Work in any\n// commercial or non-commercial product, website or project. You cannot\n// sell this Work and you cannot mint an NFTs of it or train a neural\n// network with it without permission. I share this Work for educational\n// purposes, and you can link to it, through an URL, proper attribution\n// and unmodified screenshot, as part of your educational material. If\n// these conditions are too restrictive please contact me and we'll\n// definitely work it out.\n\n\n#define NUM 9.0\n\nfloat noise( in vec2 x )\n{\n    vec2 p = floor(x);\n    vec2 f = fract(x);\n\tvec2 uv = p.xy + f.xy*f.xy*(3.0-2.0*f.xy);\n\treturn textureLod( iChannel1, (uv+0.5)/256.0, 0.0 ).x;\n}\n\nfloat map( in vec2 x, float t )\n{\n    return noise( 2.5*x - sin(6.2831*t/15.0+vec2(1.5,0.0)) );\n}\n\nfloat shapes( in vec2 uv, in float r, in float e )\n{\n\tfloat p = pow( 32.0, r - 0.5 );\n\tfloat l = pow( pow(abs(uv.x),p) + pow(abs(uv.y),p), 1.0/p );\n\tfloat d = l - pow(r,0.6) - e*0.2 + 0.05;\n\tfloat fw = fwidth( d )*0.5;\n\tfw *= 1.0 + 10.0*e;\n\treturn (r)*smoothstep( fw, -fw, d ) * (1.0-0.2*e)*(0.4 + 0.6*smoothstep( -fw, fw, abs(l-r*0.8+0.05)-0.1 ));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 qq = fragCoord/iResolution.xy;\n\tvec2 uv = fragCoord/iResolution.xx;\n    \n    uv *= 1.5;\n\t\n\tfloat time = 11.0 + (iTime + 0.8*sin(iTime)) / 1.8;\n\t\n\tuv += 0.01*noise(12.0*uv + 0.1*time );\n\t\n    vec3 col = 0.0*vec3(1.0) * 0.15 * abs(qq.y-0.5);\n\t\n\tvec2 pq, st; float f; vec3 coo;\n\t\n    // teal\n    pq = floor( uv*NUM ) / NUM;\n\tst = fract( uv*NUM )*2.0 - 1.0;\n\tcoo = (vec3(0.5,0.7,0.7) + 0.3*sin(10.0*pq.x)*sin(13.0*pq.y))*0.6;\n\tcol += 1.0*coo*shapes( st, map(pq, time), 0.0 );\n\tcol += 0.6*coo*shapes( st, map(pq, time), 1.0 );\n\n\t// orange\n    pq = floor( uv*NUM+0.5 ) / NUM;\n\tst = fract( uv*NUM+0.5 )*2.0 - 1.0;\n    coo = (vec3(1.0,0.5,0.3) + 0.3*sin(10.0*pq.y)*cos(11.0*pq.x))*1.0;\n\tcol += 1.0*coo*shapes( st, 1.0-map(pq, time), 0.0 );\n\tcol += 0.4*coo*shapes( st, 1.0-map(pq, time), 1.0 );\n\n\tcol *= pow( 16.0*qq.x*qq.y*(1.0-qq.x)*(1.0-qq.y), 0.05 );\n\t\n\tfragColor = vec4( col, 1.0 );\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"lss3Df","date":"1381474018","viewed":17537,"name":"Circle pattern","username":"iq","description":"Loved the  shader by slembcke, so I took his idea of the interlaced double grid and improvised for a few minutes.","likes":260,"published":3,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""}}