{"ver":"0.1","info":{"id":"43dGz7","date":"1716271722","viewed":43,"name":"Simple Julia Sets","username":"pedro_ocm","description":"Simple Julia Set shader","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","juliaset"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_IT 400.\n#define COLOR_LIMIT 10.\n#define CENTER1 vec2(0.6, 0.0089772)\n#define CENTER2 vec2(0.51667, -0.05473)\n#define CENTER245 vec2(0.45366, -0.27975)\n#define CENTER335 vec2(0.5, 0.1045)\n#define CENTER3 vec2(0.50, -0.052)\n\nfloat iterations_to_escape(vec2 num, vec2 c) {\n    vec2 res = num;\n    for (float i = 0.; i < MAX_IT; i++) {\n        res = mat2(res,-res.y,res.x) * res  + c;\n        if (dot(res, res) > 4.) return i;\n    }\n    return -1.;\n}\n\nfloat col_interval(float col_start, float id) {\n    if (col_start >= 8.) col_start -= 8.0; \n    if (id < col_start)  col_start -= 8.0;\n    if (id >= col_start + 4.) return 0.0;\n    else if (id < col_start + 1.)               return fract(id - col_start);\n    else if (id < col_start + 3.)               return 1.0;\n    return 1.0 - fract(id - col_start + 3.);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from -1 to 1)\n    float limit = 2.0;\n    float time  = max(0., iTime-1.);\n    float dim   = pow(0.5, time);\n    \n    vec2 uv = limit*(2.*fragCoord-iResolution.xy)/iResolution.y;\n    \n    uv = CENTER1 + (uv-CENTER1)*dim;\n\n    float var = 3., cosv = cos(var), sinv = sin(var);\n    float i = iterations_to_escape(uv, 0.7885*vec2(cosv,sinv));\n    \n    if (i == -1.) {\n        fragColor = vec4(0.);\n        return;\n    }\n    \n    i /=  10.;\n\n    vec3 col;\n    \n    float id = mod(i, 8.);\n        \n    float g_start = mod(time*2.0, 8.),\n          r_start = g_start + 2.,\n          b_start = g_start + 6.;\n          \n    float r = col_interval(r_start, id),\n          g = col_interval(g_start, id) + col_interval(g_start + 4., id),\n          b = col_interval(b_start, id);\n\n    // Output to screen\n    fragColor = vec4(r,g,b,1.0);\n}","name":"Image","description":"","type":"image"}]}