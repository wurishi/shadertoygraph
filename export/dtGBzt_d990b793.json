{"ver":"0.1","info":{"id":"dtGBzt","date":"1702372409","viewed":13,"name":"QCOM GLES FFR Map","username":"leozheng","description":"Convert OpenGL FFR API arguments into fragment density map like Vulkan","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["2dffr"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n    vec2 ndc = uv * 2.0 - 1.0;\n    \n    int focalPointsPerLayer = 2;\n    float focalX[2] = float[2](-0.03492075 , -0.03492075);\n    float focalY[2] =float[2] (0.03524244 , 0.03524244);\n    float gainX[2] = float[2](13.74340916, 13.74340915);\n    float gainY[2] = float[2](14.03976917, 14.03976917);\n    float foveaArea[2] = float[2](25.79999924, 25.79999924);\n    float TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM = 118.0/255.0;\n    \n    // https://registry.khronos.org/OpenGL/extensions/QCOM/QCOM_texture_foveated.txt\n    float min_pixel_density=0.0f;\n    for(int i=0;i<focalPointsPerLayer;++i){\n        float focal_point_density = 1.0/max((pow(focalX[i]-ndc.x, 2.0)*pow(gainX[i], 2.0))+\n                            (pow(focalY[i]-ndc.y,2.0)*pow(gainY[i],2.0))-foveaArea[i],1.0f);\n        min_pixel_density=max(min_pixel_density,focal_point_density);\n        min_pixel_density=max(min_pixel_density,\n                               TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM);\n    }\n\n\n    // Output to screen\n    fragColor = vec4(min_pixel_density, min_pixel_density, 0,1.0);\n}","name":"Image","description":"","type":"image"}]}