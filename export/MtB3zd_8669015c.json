{"ver":"0.1","info":{"id":"MtB3zd","date":"1431420589","viewed":498,"name":"Radial Sound Visualizer","username":"tholzer","description":"another sound visualizer,\nclick left or right side to change view","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["sound","radial","visualizer"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4df3Rn","filepath":"/media/a/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","previewfilepath":"/media/ap/3c33c415862bb7964d256f4749408247da6596f2167dca2c86cc38f83c244aa6.mp3","type":"music","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[],"code":"//-----------------------------------------------------\n// Radial Sound Visualizer                     5/2015\n// Based on 'Input-Sound' by IQ\n// now switch between 2 views\n//-----------------------------------------------------\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // create pixel coordinates\n\tvec2 uv = (fragCoord.xy / iResolution.xy);\n\n    // for radial view click to left side, \n    // for xy view click to right side\n    if (iMouse.x / iResolution.x < 0.5)\n      uv = vec2( 2.0*length(uv-0.5), atan(abs(uv.y-0.5), abs(uv.x-0.5)) );\n\n    float value, fft, wave;\n    value = abs(uv.x-0.5);\n    \n    // first texture row is frequency data\n\tfft  = texture( iChannel0, vec2(value,0.25) ).x; \n\t\n  \t// second texture row is the sound wave\n\twave = texture( iChannel0, vec2(value,0.75) ).x;\n\t\n\t// convert frequency to colors\n\tvec3 col = vec3( 4.0*fft*(1.0-fft)*(0.2+0.4*sin(iTime))\n                    , fft+0.3*sin(0.22*iTime)\n                    , 0.5-fft-0.4*sin(0.33*iTime) ) * fft;\n    \n    // add wave form on top\t\n\tvalue = (uv.y < 1.0) ? uv.y : uv.y - 1.0;\n\tcol += 0.8 -  smoothstep( 0.0, 0.15, abs(wave - value) );\n\t\n\t// output final color\n\tfragColor = vec4(col,1.0);\n}","name":"","description":"","type":"image"}]}