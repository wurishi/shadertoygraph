{"ver":"0.1","info":{"id":"3t3fzf","date":"1613142788","viewed":164,"name":"hemisphere","username":"kithy","description":"hemisphere made from 2 spheres & plane","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["raymarching","boolean","hemisphere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define MAX_STEPS 64\n#define EPS vec2(1e-5,0.0)\n#define PI 3.1415926\n\n\nvec3 rotate(vec3 p,float angle,vec3 axis){\n\tvec3 a=normalize(axis);\n\tfloat s=sin(angle);\n\tfloat c=cos(angle);\n\tfloat r=1.0-c;\n\tmat3 m=mat3(\n\t\ta.x*a.x*r+c,\n\t\ta.y*a.x*r+a.z*s,\n\t\ta.z*a.x*r-a.y*s,\n\t\ta.x*a.y*r-a.z*s,\n\t\ta.y*a.y*r+c,\n\t\ta.z*a.y*r+a.x*s,\n\t\ta.x*a.z*r+a.y*s,\n\t\ta.y*a.z*r-a.x*s,\n\t\ta.z*a.z*r+c\n\t\t);\n\treturn m*p;\n}\n\nfloat sphere(vec3 p,float r){\n\treturn length(p)-r;\n}\n\nfloat plane(vec3 p){\n\treturn dot(p,vec3(0.2,3.0,0.0)+0.5);\n}\n\nfloat distFunc(vec3 p){\n\tvec3 q=rotate(p,radians(PI)*iTime*10.0,vec3(0.0,0.0,1.0));\n\t//vec3 q=rotate(p,radians(iTime)*20.0,vec3(1.0,0.0,1.0));\n\tfloat s1=sphere(q+vec3(0.0,0.0,0.0),1.0);\n\tfloat s2=sphere(q-vec3(0.0,0.0,0.0),0.95);\n\tfloat p1=plane(q);\n\treturn max(max(s1,-s2),p1);\n}\n\nvec3 sceneNormal(vec3 p){\n\tfloat d=distFunc(p);\n\treturn normalize(vec3(distFunc(p+EPS.xyy)-d,distFunc(p+EPS.yxy)-d,distFunc(p+EPS.yyx)-d));\n}\n\n\nvoid mainImage(out vec4 fragColor,in vec2 fragCoord){\n\tvec2 p=(2.0*fragCoord.xy-iResolution.xy)/iResolution.y;\n\n\tvec3 ro=vec3(0.0,0.0,2.0);\n\tvec3 rd=normalize(vec3(p,-1.0));\n\tfloat d,t=0.0;\n\tvec3 n,rp;\n\n\tfor(int i=0;i<MAX_STEPS;i++){\n\t\trp=ro+rd*t;\n\t\td=distFunc(rp);\n\t\tif(abs(d)<1e-4)break;\n\t\tt+=d;\n\t\t}\n\t\t\n\t\tn=sceneNormal(rp);\t\n\t\n\tfragColor=vec4(n,1.0);\n\t\n}\n","name":"Image","description":"","type":"image"}]}