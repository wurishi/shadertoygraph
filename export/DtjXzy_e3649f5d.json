{"ver":"0.1","info":{"id":"DtjXzy","date":"1676458535","viewed":124,"name":"square spiral distance","username":"celifan","description":"Square spiral element composed of alternate  L-shaped modules.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["sdf","spiral","square"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float m=.1;\n\n// L shaped module for the spiral.\nfloat sdL(vec2 p,  float side, float level )\n{\n    float r = m*level;\n    vec2 pos = vec2(m/2.0*side,-m*side/2.0);\n    vec2 p0 = abs((p-pos)*side-vec2(0.0,r)); \n    float d0 = length(vec2(max(p0.x-r,0.0),p0.y));\n    vec2 p1 = abs((p-pos)*side-vec2(r,0.0));\n    float d1 = length(vec2(p1.x,max(p1.y-r,0.0)));\n   \n    return min(d0,d1);\n}\n\nfloat sdSquareSpiral(vec2 uv)\n{\n float d =sdL(uv, -1.0, 1.0);\n    d = min(d,sdL(uv,1.0, 2.0));\n    d = min(d,sdL(uv,-1.0, 3.0));\n    d = min(d,sdL(uv,1.0, 4.0));\n    d = min(d,sdL(uv,-1.0, 5.0));\n    d = min(d,sdL(uv,1.0, 6.0));\n    d = min(d,sdL(uv,-1.0, 7.0));\n   \n    return d;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = 2.0*fragCoord/iResolution.y-1.0;\n    //\n    float d = sdSquareSpiral(uv);\n    //iq sdf coloring style.\n    vec3 col = (d<0.0) ? vec3(0.6,0.8,1.0) : vec3(0.9,0.6,0.3);\n    col *= 1.0 - exp(-6.0*abs(d));\n    col *= 1.0 + 0.2*cos(128.0*abs(d));\n    col = mix( col, vec3(1.0), 1.0-smoothstep(0.0,.01,abs(d)) );\n\n    // Output to screen\n    fragColor = vec4(col ,1.0);\n}","name":"Image","description":"","type":"image"}]}