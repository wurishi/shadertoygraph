{"ver":"0.1","info":{"id":"ttdXWj","date":"1581742487","viewed":106,"name":"shader(h')art","username":"ordiology","description":"This Valentine's Day heart is my first shader project. It uses the circle from the Book of Shaders' Pixel Spirit Deck and the first chapters of the Book of Shaders as well as the concept of building a heart by @The_ArtOfCode.","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["heart","valentine","shaderart"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Author: Dr Ord (@ordiology)\n// Title: shader(h')art\n// License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0\n//\n// This Valentine's Day heart art project uses the circle from \n// the Book of Shaders' Pixel Spirit Deck as well as knowledge\n// gained from the first chapters of the Book of Shaders and \n// the concept of building a heart manipulating a circle from\n// @The_ArtOfCode's \"Making a Heart in ShaderToy\" YouTube video.\n//\n// Please feel free to use the concepts and code but reference\n// the relevant sources appropriately.\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define TAU 6.28318530718\n\nuniform vec2 u_resolution; // Canvas size (width,height)\nuniform float u_time; // Time in seconds since load\n\nvec3 colorA = vec3(0.8000000, 0.0000000, 0.5058824);\nvec3 colorB = vec3(0.3686275, 0.9019608, 0.7686275);\n\n// 08 circleSDF (from @bookofshaders Pixel Spirit Deck)\nfloat circleSDF(vec2 st){\n    return length(st - 0.5)*2.0;\n}\n\n// Shader(h')art heart (uses concept from @The_ArtOfCode)\n// Deps 08\nfloat heart(vec2 st){\n    st.y *= 1.;\n    st.y -= sqrt(abs(st.x-0.5))*0.5-0.1;\n    float r = circleSDF(st);\n    return r;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec3 color = vec3(0.0);\n    vec2 st = fragCoord.xy/\n              iResolution.xy;\n\n    float t = iTime;\n\n    // Shader(h')art\n    float size = .64;\n    float blur = 0.005;\n    for (int i = 1; i < 28; i++){\n        color += smoothstep(size -= blur, size -= blur, length(heart(st)));\n        color -= smoothstep(size -= blur, size -= blur, length(heart(st)));\n    }\n\n    // Mix the two colors in y-space\n    vec3 colorC = mix(colorA, colorB, sin(st.y));\n    vec3 colorD = mix(colorB, colorA, sin(st.y));\n\n    // Oscillate the colours over the heart fragment\n    color = mix(colorC, colorD, sin(t)*(color-0.5)+ 0.5);\n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}