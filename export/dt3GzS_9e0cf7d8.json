{"ver":"0.1","info":{"id":"dt3GzS","date":"1682961818","viewed":143,"name":"Messing with simple raymarching","username":"Oman395","description":"I've been messing about with some of the methods used for conduit (https://www.shadertoy.com/view/Mlf3RS), although it is all my code.\n19 lines, could be 11 w/o configuration.\nI'll make a version with comments if y'all want.","likes":5,"published":3,"flags":0,"usePreview":0,"tags":["raytracing","raymarching","simple","short"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rad = 3.0;\nfloat distanceFade = 6.0;\nfloat timeScale = 1.0;\nfloat depthScale = 0.25;\nfloat widthAdjustmentAmount = 0.5;\nvec4 col1 = vec4(145, 215, 227,255) / 255.0;\nvec4 col2 = vec4(36, 39, 58, 255) / 255.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n    vec2 uv = 2.0 * (fragCoord.xy / iResolution.xy - 0.5) * vec2(iResolution.x / iResolution.y, 1.0);\n    vec3 position = vec3(uv + vec2(cos(iTime * timeScale), sin(iTime * timeScale)), 0);\n    vec3 dir = normalize(vec3(uv, 1.0));\n    for(int i = 0; i < 256; i++) {\n        float dist = rad - distance(position.xy, vec2(0));\n        fragColor = vec4((1.0 - 1.0 / ((position.z + distanceFade) / distanceFade)) * col1 + (1.0 / ((position.z + distanceFade) / distanceFade)) * col2);\n        if(dist < 0.01) break;\n        position += dist * normalize(dir + vec3(widthAdjustmentAmount * vec2(cos(iTime * timeScale + position.z * depthScale), sin(iTime * timeScale + position.z * depthScale)), 0));\n    }\n}","name":"Image","description":"","type":"image"}]}