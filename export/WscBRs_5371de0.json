{"ver":"0.1","info":{"id":"WscBRs","date":"1605732315","viewed":132,"name":"Polygon progression","username":"KainArkatian","description":"Studying relations in system with growing number of members - here on polygons\n","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["polygons","vertices"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float circle(vec2 center, float radius, vec2 uv, float stroke){\n    float dist = distance(center, uv);\n    \n    return smoothstep(stroke, 0.5*stroke, distance(dist, radius));\n}\n\n\nfloat line(vec2 norCoord, vec2 pointA, vec2 pointB, float stroke)\n{\n\tvec2 vecAB = pointB - pointA;\n    float d = abs(dot(normalize(vec2(vecAB.y, -vecAB.x)), norCoord - pointA));\n\treturn smoothstep(stroke, 0.5*stroke, d);\n}\n\nfloat segment(vec2 Coord, vec2 pointA, vec2 pointB, float stroke) \n{\n    vec2 vecAB = pointB - pointA;\n    vec2 vecAC = Coord - pointA;\n    float d = length(vecAC - vecAB * clamp(dot(vecAB, vecAC) / dot(vecAB,vecAB), 0.0, 1.0));\n\treturn smoothstep(stroke, 0.5*stroke, d);\n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n   \n    vec2 norCoord = fragCoord.xy / iResolution.xy;\n    norCoord.y *= iResolution.y/iResolution.x;\n    vec2 norRes = vec2(1., 1.*(iResolution.y/iResolution.x));\n    \n    \n    vec3 col = vec3(1.);\n\tfloat pi = 3.14159;\n\n    float pointNum = 20. * ((sin(iTime/2.+30.)+1.1)/2. );\n    \n    float mainRad = 0.25;\n    vec2 mainCen = vec2(0.5, 0.5)*norRes;\n    float mainDist = distance(mainCen, norCoord);\n    col = mix(col, vec3(0.3), circle(mainCen, mainRad, norCoord, norRes.x/200.));\n    \n\n\n    \n    for(int i = 0; i < int(pointNum); i++){\n        float angleA = ((2.*pi)/float(pointNum)) * float(i);\n        \n        float xA = mainCen.x + mainRad * cos(angleA); \n        float yA = mainCen.y + mainRad * sin(angleA);\n        \n        vec2 pointA = vec2(xA,yA);\n        \n        col = mix(col, vec3(0.), circle(pointA, 0.005, norCoord, norRes.x/300.));\n        \n        float lineX = line(norCoord, pointA, vec2(pointA.x, 0.), norRes.x/600.);\n\t\tfloat lineY = line(norCoord, pointA, vec2(0., pointA.y), norRes.x/600.);\n        \n        if(mainDist > mainRad){\n            col = mix(col, vec3(0.), lineX/5.);\n        \tcol = mix(col, vec3(0.), lineY/5.);\n        }\n        \n         \n        for(int ii = 0; ii < int(pointNum); ii++) {\n            float angleB = ((2.*pi)/float(pointNum)) * float(ii);\n        \n            float xB = mainCen.x + mainRad * cos(angleB); \n            float yB = mainCen.y + mainRad * sin(angleB);\n\n            vec2 pointB = vec2(xB,yB);\n            col = mix(col, vec3(0.), segment(norCoord, pointA, pointB, norRes.x/2000.));\n            \n        }\n\n    } \n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}