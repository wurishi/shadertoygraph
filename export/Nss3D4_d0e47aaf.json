{"ver":"0.1","info":{"id":"Nss3D4","date":"1665993046","viewed":143,"name":"motya_test_v1","username":"motya","description":"color gradient test","likes":1,"published":3,"flags":0,"usePreview":0,"tags":["v1"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdXGzr","filepath":"/media/a/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","previewfilepath":"/media/ap/8979352a182bde7c3c651ba2b2f4e0615de819585cc37b7175bcefbca15a6683.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 xy = fragCoord.xy; //Получаем координаты текущего пикселя\n    xy.x = xy.x / iResolution.x; //Делим координаты на размер экрана\n    xy.y = xy.y / iResolution.y;\n    // Теперь x для самого левого пикселя равен 0, а для самого правого равен 1\n    vec4 solidRed = vec4(0,0.0,0.0,1.0); //Теперь он стал чёрным\n    solidRed.b =  cos(iTime + xy.x-xy.y);\n    solidRed.r =  sin(iTime + xy.y-xy.x);\n    solidRed.g =  cos(iTime + xy.x-xy.y);\n     solidRed.a =  sin(iTime + xy.y-xy.x);//Присваиваем красному компоненту нормализованное значение x\n    fragColor = solidRed;\n}","name":"Image","description":"","type":"image"}]}