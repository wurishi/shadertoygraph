{"ver":"0.1","info":{"id":"43ySzh","date":"1719859287","viewed":52,"name":"Ripple - hw1","username":"Morevita","description":"A shader that simulates random ripple. Ripple can be generated with mouse. But there is a problem with the radius and it has not been fixed.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// A shader that simulates random ripple\n// Ripple can be generated with mouse. But there is a problem with the radius and it has not been fixed\n// ref:https://www.shadertoy.com/view/4lVXzK\n\nfloat generateRing(vec2 uv, vec2 center, float time, float duration)\n{\n    float timer = mod(time, duration);\n    float r = 2.0 / timer;\n    float width = timer * 3.0;\n    float ring = length(uv - center) * r * width - width;\n    ring = min(2.0, abs(1.0 / (10.0 * ring)));\n    return max(0.0, ring - timer);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    // Normalize pixel coordinates (from 0 to 1)\n    vec2 uv = (2.0 * fragCoord.xy - iResolution.xy) / iResolution.y;\n\n    vec3 col = vec3(0.0);\n\n    // Random seed based on time\n    float seed = floor(iTime);\n    vec2 randPos = vec2(\n        fract(sin(seed * 12.9898) * 2345.67),\n        fract(sin(seed * 78.233) * 12345.99));\n\n    // Adjust to range [-1, 1]\n    randPos = randPos * 2.0 - 1.0;\n\n    vec2 center = randPos * (1.0);\n    col += generateRing(uv, center, iTime, 1.0);\n\n    // Generate ring at mouse position if mouse is down\n    if (iMouse.z > 0.001)\n    {\n        vec2 mouseUV = (2.0 * iMouse.xy - iResolution.xy) / iResolution.y;\n        col += generateRing(uv, mouseUV, iTime, 1.0);\n    }\n\n    col *= 0.5 + vec3(0.5 * sin(1.2 * iTime + uv.xyx + vec3(1, 2, 4)));\n\n    // Output to screen\n    fragColor = vec4(col, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}