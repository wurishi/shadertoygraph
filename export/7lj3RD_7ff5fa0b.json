{"ver":"0.1","info":{"id":"7lj3RD","date":"1623478277","viewed":199,"name":"Pixel TV Static","username":"SamyBencherif","description":"Pixelated tv static effect intended for use in a game: https://editor.p5js.org/SamyBencherif/full/Lr-c2ATWb\nTechnique: use modulus to generate a grid of pixels, then use offsets and rotations to create a more interesting pattern & animate with time.","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["noise","pixel","monochrome"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float T(float v)\n{\n    return 3. + mod(iTime/1000.*60.,v-3.);\n}\n\n// generate random looking grid\nfloat rgrid(vec2 pix)\n{\n    float b;\n\n    // horizontal bars every 5 pixels\n    b = mod(pix.x, T(5.))<1.?1.:0.;\n\n    // delete every other pixel in each bar\n    b = b * (mod(pix.y, 2.)<1.?1.:0.);\n\n    // delete every other group of four pixels\n    b = b * (mod(pix.y/T(4.), 2.)<1.?1.:0.);\n\n    // delete every other group of six\n    b = b * (mod(pix.y/6., T(2.))<1.?1.:0.);\n\n    // now delete alternating groups of four, but horizontally\n    b = b * (mod(pix.x/4., 2.)<1.?1.:0.);\n\n    return b;\n}\n\nfloat rrgrid(vec2 pix)\n{\n    // generate random grid of pixels\n    float b = rgrid(pix);\n    // add another pass with an offset\n    b += rgrid(vec2(pix.x-3.,pix.y-3.));\n    b += rgrid(vec2(pix.x+6.,pix.y-8.));\n    // add pass with rotation\n    float a = 1.3;\n    float c = cos(a);\n    float s = sin(a);\n    b += rgrid(vec2(pix.x * c - pix.y * s,pix.x * s + pix.y * c));\n    // pass with rotation and offset\n    a = T(-1.7);\n    c = cos(a);\n    s = sin(a);\n    b += rgrid(vec2(pix.x * c - pix.y * s-T(.4),pix.x * s + pix.y * c-3.));\n    return min(1.,max(b,0.));\n  }\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = gl_FragCoord.xy;\n    vec2 pix = floor(pos/4.);\n    \n    float b = rrgrid(pix);\n    b += rrgrid(vec2(pix.x+4., pix.y+10.));\n    b += rrgrid(vec2(pix.x+T(6.), pix.y+11.));\n    b += rrgrid(vec2(pix.x+2., pix.y+11.));\n    b += rrgrid(vec2(pix.x+2., pix.y+T(8.)));\n\n\n    fragColor = vec4(vec3(b),1.0);\n}","name":"Image","description":"","type":"image"}]}