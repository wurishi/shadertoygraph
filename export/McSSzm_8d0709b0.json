{"ver":"0.1","info":{"id":"McSSzm","date":"1706147096","viewed":34,"name":"Scuffed Newton's Fractal","username":"Anticubex","description":"for z^3 - 1\nEasily Modifiable to Any Form of Complex Function\nFloating point error messes up the fractal after 10-15 seconds. ","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["fractal","math","complex"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\n// Complex Number math by julesb\n// https://github.com/julesb/glsl-util\n\n#define cx_mul(a, b) vec2(a.x*b.x-a.y*b.y, a.x*b.y+a.y*b.x)\n#define cx_div(a, b) vec2(((a.x*b.x+a.y*b.y)/(b.x*b.x+b.y*b.y)),((a.y*b.x-a.x*b.y)/(b.x*b.x+b.y*b.y)))\n#define cx_modulus(a) length(a)\n#define cx_conj(a) vec2(a.x, -a.y)\n#define cx_arg(a) atan(a.y, a.x)\n\n#define REPs 60\n\nvec2 f( in vec2 x );\nvec2 df( in vec2 x );\n\nvec3 mapColor( in vec2 pos );\n\nconst vec2 ZOOM_POS = vec2(0.1205, 0.060553);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / iResolution.y;\n    vec2 uv = (fragCoord.xy * 2.0 - iResolution.xy) / (iResolution.y * exp(iTime)) + ZOOM_POS;\n\n    for (int i = 0; i < REPs; i++) {\n        uv = uv - cx_div(f(uv), df(uv));\n    }\n\n    vec3 col = mapColor(uv);\n\n    fragColor = vec4(col,1.0);\n}\n\n\nvec2 f( in vec2 x ) {\n    // x^3 - 1\n    float a = x.x;\n    float b = x.y;\n    float a2 = a * a;\n    float b2 = b * b;\n    return vec2(a2 * a - 3.0 * a * b2 - 1.0, 3.0 * a2 * b - b2 * b);\n}\n\nvec2 df( in vec2 x ) {\n    // 2*x^2\n    float a = x.x;\n    float b = x.y;\n    return vec2(2.0 * (a * a - b * b), 4.0 * a * b);\n}\n\n\nvec3 mapColor( in vec2 pos ) {\n    return vec3(pos, 0.5);\n}\n","name":"Image","description":"","type":"image"}]}