{"ver":"0.1","info":{"id":"mlVcRR","date":"1699904111","viewed":72,"name":"Bad Raytracing","username":"cooklie","description":"unoptomized raytracer","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["raytracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdfGRn","filepath":"/media/a/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","previewfilepath":"/media/ap/e6e5631ce1237ae4c05b3563eda686400a401df4548d0f9fad40ecac1659c46c.jpg","type":"texture","channel":1,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1},{"id":"4sX3zn","filepath":"/media/a/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","previewfilepath":"/media/ap/0681c014f6c88c356cf9c0394ffe015acc94ec1474924855f45d22c3e70b5785.png","type":"cubemap","channel":2,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define max_steps 20\n#define step_size 0.15\nvec3 circles[] = vec3[](vec3(-3.3,5.,3.2),vec3(0.,0.,-2.),vec3(4.,0.,3.),vec3(-4.,-4.,0.),vec3(5.,3.,4.5));\n    vec3 colors[] = vec3[](vec3(0.,1.,1.),vec3(1.,1.,1.),vec3(0.,0.,1.),vec3(1.,0.,0.),vec3(0.5,0.,0.5));\nfloat dsq(vec3 v1,vec3 v2);\nvec3 light2(vec3 pos,vec3 ddir) {\n    vec3 rayPos = pos;\n    vec3 dir = ddir;\n    float mstep = 0.;\n    for (int i=0;i<max_steps;i++) {\n                rayPos += dir*(step_size+mstep);\n        mstep = 9999.;\n                for (int p=0;p<5;p++) {\n                //PLEASE IGNORE ILLEGAL IF STATEMENTS\n                if (dsq(rayPos,circles[p])<2.) {\n                //intersection\n        \n                return vec3(colors[p]);\n                \n                }\n                mstep = min(sqrt(dsq(rayPos,circles[p]))-1.5,mstep);\n                }\n                }\n                return vec3(0.,0.,0.);\n}\n\nvec3 light(vec3 pos,vec3 ddir) {\n    vec3 rayPos = pos;\n    vec3 dir = ddir;\n    float mstep = 0.;\n    for (int i=0;i<max_steps;i++) {\n                rayPos += dir*(step_size+mstep);\n        mstep = 9999.;\n                for (int p=0;p<5;p++) {\n                if (dsq(rayPos,circles[p])<2.) {\n                //intersection\nvec3 l = light2(rayPos+normalize(rayPos-circles[p])*2.,normalize(rayPos-circles[p]));\n            //fragColor = vec4(mix(colors[p],l,1.+dot(normalize(rayPos-circles[p]),dir)),1.);\n                return vec3(mix(colors[p],l,1.+dot(normalize(rayPos-circles[p]),dir)));\n                \n                }\n                mstep = min(sqrt(dsq(rayPos,circles[p]))-1.5,mstep);\n                }\n                }\n                return vec3(texture(iChannel0,dir))/2.;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    //default to black\n    fragColor = vec4(0.);\n    \n    vec3 dir = normalize(vec3((fragCoord-iResolution.xy/2.)/iResolution.yy*2.,1.));\n    \n    //camera\n    mat3 rot = mat3(\n                    cos(iTime),0.,sin(iTime),\n                    0.,1.,0.,\n                    -sin(iTime),0.,cos(iTime)\n                    );\n    dir = rot*dir;\n    vec3 rayPos = -(rot*vec3(0.,0.,10.));\n    int p;\n    float mstep = 0.;\n    \n    for (int i=0;i<max_steps;i++) {\n        rayPos += dir*(step_size+mstep);\n        mstep = 9999.;\n        for (p=0;p<5;p++) {\n        if (dsq(rayPos,circles[p])<2.25) {\n        //intersection\n                \n                \n            vec3 l = light(rayPos+normalize(rayPos-circles[p])*2.,normalize(rayPos-circles[p]));\n            fragColor = vec4(mix(colors[p],l,\n            clamp(dot(l,l),0.,1.)\n            ),1.);\n            return;\n        } \n        mstep = min(sqrt(dsq(rayPos,circles[p]))-1.5,mstep);\n        }\n    }\n    if (dot(fragColor,fragColor)<0.2) {\n        fragColor = vec4(texture(iChannel0,dir));\n    }\n}\nfloat dsq(vec3 v1,vec3 v2) {\n    return (v1.x-v2.x)*(v1.x-v2.x)+(v1.y-v2.y)*(v1.y-v2.y)+(v1.z-v2.z)*(v1.z-v2.z);\n}\n\n\n","name":"Image","description":"","type":"image"}]}