{"ver":"0.1","info":{"id":"DdSXWt","date":"1671056356","viewed":73,"name":"Rotri","username":"4LT","description":"Thick Vector Triangle","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["triangle","antialias","geometry"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float speed = 0.4;\nconst float width = 20.0;\nconst float tau = 2.0 * acos(-1.0);\n\n\nconst float hWidth = width / 2.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    float radius = iResolution.y / 3.0;\n    \n    vec2[3] pts;\n    vec3 color = vec3(0.0, 0.0, 0.0);\n    \n    for (int i = 0; i < 3; i++) {\n        float angle = (float(i) + speed * iTime) / 3.0 * tau;\n        pts[i] = vec2(radius * cos(angle), radius * sin(angle));\n        pts[i] = pts[i] + iResolution.xy / 2.0;\n    }\n    \n    float shortestDist = width;\n    for (int i = 0; i < 3; i++) {\n        vec2 start = pts[i];\n        vec2 end = pts[(i+1)%3];\n        \n        vec2 delta = end - start;\n        vec2 v = normalize(delta);\n        \n        float t = (dot(v, fragCoord) - dot(v, start));\n        t = clamp(t, 0.0, length(delta));\n        \n        float dist = length(start + v*t - fragCoord);\n        \n        shortestDist = min(dist, shortestDist);\n    }\n    \n    color = vec3(hWidth - shortestDist + 0.5);\n    color = pow(color, vec3(0.4545));\n    fragColor = vec4(color, 1.0);\n}","name":"Image","description":"","type":"image"}]}