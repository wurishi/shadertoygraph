{"ver":"0.1","info":{"id":"WllyzX","date":"1592634427","viewed":371,"name":"superior ordered dithering","username":"Carandiru","description":"port of my dithering code from arm assembly to glsl\nwith arm assembly, however, 8 pixels (greyscale) could be done per iteration\nbut this is really good for color on the GPU of course!\n\nhopefully everything is correct.","likes":3,"published":3,"flags":0,"usePreview":0,"tags":["dither","ordered"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"Xdf3Rn","filepath":"/media/a/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","previewfilepath":"/media/ap/e81e818ac76a8983d746784b423178ee9f6cdcdf7f8e8d719341a6fe2d2ab303.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// - carandiru\n// http://bit.ly/supersinfulsilicon\n\n// inspired by shader: https://www.shadertoy.com/view/wdSfzt\n\n// demo zooming transition\n#define SCALE_0 8.0\n#define SCALE_1 1.0\n#define SPEED 0.125\n\nconst uint dithertable[64] = uint[64](\n    3U,129U,34U,160U,10U,136U,42U,168U,192U,66U,223U,97U,200U,73U,231U,105U,50U,\n\t176U,18U,144U,58U,184U,26U,152U,239U,113U,207U,81U,247U,121U,215U,89U,14U,\n\t140U,46U,180U,7U,133U,38U,164U,203U,77U,235U,109U,196U,70U,227U,101U,62U,188U,\n\t30U,156U,54U,180U,22U,148U,251U,125U,219U,93U,243U,117U,211U,85U\n);\n\nconst uint n255by15 = (255U/15U),\n\t\t\t    n0F = 0x0FU,\n\t\t\t    nF0 = 0xF0U;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // scene zoom, offset and coordinate setup for demo\n    float scale = mix(SCALE_0, SCALE_1, abs(sin(iTime * SPEED)));\n    vec2 offset = vec2(0.5f, 0.0f) * scale;\n    \n    vec2 coord = fragCoord + offset * iResolution.xy;\n    vec2 uv = coord/iResolution.xy;\n\n    \n    // source color\n    vec3 color = texture(iChannel0, uv / scale).rgb;\n\n    // scaled color & coordinates\n    uvec3 ucolor = uvec3(color * 255.0f);\n\tuvec2 ucoord = uvec2(coord / scale) & 7U;\n    \n    // lookup\n    uint d = dithertable[ (((ucoord.y)<<3U)+7U) - ucoord.x ];\n    \n    // saturating addition\n    ucolor = (ucolor & nF0) + ((d - (ucolor & n0F)*n255by15) >> 4U & 16U);\n    ucolor = clamp(ucolor, 0U, 255U);\n    \n    // combine high and low bytes\n    ucolor = (ucolor & nF0) | ((ucolor >> 4) & n0F);\n    \n    // back to float range [0.0...1.0]\n    color = vec3(ucolor) * (1.0f/255.0f);\n    \n    \n    fragColor = vec4(color,1.0);\n}","name":"Image","description":"","type":"image"}]}