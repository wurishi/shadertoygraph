{"ver":"0.1","info":{"id":"MscBW4","date":"1526106049","viewed":84,"name":"ch-829","username":"Sintahks","description":"sphere","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["none"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float sdf(in vec3 p)\n{\n    return length(p) - 1.0;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy; \n    float aspRatio = iResolution.y / iResolution.x; \n    uv.x = (( uv.x * 2.0 ) - 1.0);\n    uv.y = ( uv.y * 2.0 ) + -1.0;  \n    uv.x = uv.x / aspRatio; \n\n    \n    vec3 ro = vec3(0.0, 0.0, -3.0);\n    vec3 rd = normalize(vec3(uv.x, uv.y, 2.0));\n    \n    bool hit = false;\n    float t = 0.0;\n    for (int i = 0; i < 256; ++i)\n    {\n        if (t >= 10.0) break;\n        float d = sdf(ro + t*rd);\n        if (d < 0.001)\n        {\n            hit = true;\n            break;\n        }\n        t += d;\n    }\n    \n    // Comment goes here\n    vec3 hit_p = ro + t*rd;\n    vec3 col = vec3(0.0);\n    if (hit)\n    {\n        vec3 n = normalize(hit_p - vec3(0.0));\n        vec3 l = normalize(vec3(.6, 0.0, 1.0));\n        col = max(0.0, dot(n, -l)) * vec3(1.0);\n    }\n    \n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}