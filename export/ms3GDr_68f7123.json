{"ver":"0.1","info":{"id":"ms3GDr","date":"1677144024","viewed":360,"name":"thinnests AA lines","username":"FabriceNeyret2","description":"from left to right: smoothstep 1pix thick radius or diameter , linear tent 1pix thick radius or diameter.\nBottom: with final sRGB conversion ( which should always be done, and especially improves AA and interpolated greys and colors )","likes":23,"published":3,"flags":0,"usePreview":0,"tags":["lines","antialiasing","aa","srgb"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 O, vec2 u )\n{\n    vec2 R = iResolution.xy,\n         U = ( u -.5* R ) / R.y;\n    O *= 0.;\n    float v = dot( U , cos( .4*sin(.5*iTime) + vec2(0,11) ) ),\n      // dv = length(vec2(dFdx(v),dFdy(v)));\n      // dv = fwidth(v);                             // approx\n         dv = 1./R.y;                                // approx ( here, exact )\n    \n    O += // smoothstep( 1.5/R.y, 0., abs(v+.2) )     // approx of next\n      +  smoothstep( 1.5, 0., abs(v+.1)/dv )         // 1 pixel thick radius   smoothstep\n      +  smoothstep(  .8, 0., abs(v+.0)/dv )         // 1 pixel thick diameter smoothstep\n      +  max( 1. -    abs(v-.1)/dv, 0. )             // 1 pixel thick radius   linear\n      +  max( 1. - 2.*abs(v-.2)/dv, 0. );            // 1 pixel thick diameter linear\n    \n    if (U.y<0.) \n        O = pow(O, vec4(1./2.2) );                   // to sRGB ( even more important for AA )\n     // O = sqrt(O);                                 // approx\n     \n    if ( int(u.y)==int(R.y)/2 ) O.r++;               // red separator\n}","name":"Image","description":"","type":"image"}]}