{"ver":"0.1","info":{"id":"XdKSRm","date":"1463516921","viewed":425,"name":"A deep gravity well","username":"bit2shift","description":"It's a black hole, of sorts.\nUse the mouse to move around.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["3d","raymarching"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsX3zn","filepath":"/media/a/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","previewfilepath":"/media/ap/94284d43be78f00eb6b298e6d78656a1b34e2b91b34940d02f1ca8b22310e8a0.png","type":"cubemap","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"false","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float FOV = 120.0;\nconst int STEPS = 8;\nconst float EPSY = 0.001;\n\nfloat map(vec3 p)\n{\n    return (length(p) - 0.5);\n}\n\nvec3 march(vec3 origin, vec3 direction)\n{\n    for(int i = 0; i < STEPS; i++)\n    {\n        float dist = map(origin);\n        if(dist < EPSY)\n            break;\n        else\n            origin += (direction * dist);\n    }\n    return origin;\n}\n\nmat3 rotY(float angle)\n{\n    float cs = cos(radians(angle));\n    float sn = sin(radians(angle));\n    \n    vec3 c0 = vec3(cs, 0, -sn);\n    vec3 c1 = vec3( 0, 1,   0);\n    vec3 c2 = vec3(sn, 0,  cs);\n    return mat3(c0, c1, c2);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = ((2.0 * fragCoord) - iResolution.xy) / min(iResolution.x, iResolution.y) * tan(radians(FOV) / 2.0);\n    \n    mat3 rot = rotY(iMouse.x);\n    vec3 origin = rot * vec3(0, 0, (iMouse.y / iResolution.y) - 1.5);\n    vec3 direction = rot * normalize(vec3(uv, 1));\n    \n    vec3 p = march(origin, direction);\n    fragColor = texture(iChannel0, p) * clamp(pow(map(p * 2.5), 64.0), 0.0, 1.0);\n}\n","name":"Image","description":"","type":"image"}]}