{"ver":"0.1","info":{"id":"3l2Xzc","date":"1566642467","viewed":154,"name":"Julia Art","username":"96logda","description":"I am really fascinated in fractals and what can be done with it. \nIt is amazing what can be done with a small amount of fractal code.\n","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["fractal","julia","painting","tree","art"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XdX3Rn","filepath":"/media/a/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","previewfilepath":"/media/ap/52d2a8f514c4fd2d9866587f4d7b2a5bfa1a11a0e772077d7682deb8b3b517e5.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"Xsf3Rn","filepath":"/media/a/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","previewfilepath":"/media/ap/cbcbb5a6cfb55c36f8f021fbb0e3f69ac96339a39fa85cd96f2017a2192821b5.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4df3Rr","filepath":"/media/a/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","previewfilepath":"/media/ap/3871e838723dd6b166e490664eead8ec60aedd6b8d95bc8e2fe3f882f0fd90f0.jpg","type":"texture","channel":2,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Copyright (c) 2019-08-24 - 2019-08-31 by Angelo Logahd\n//Modified 2019-09-10\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n\n#define SHADER_TYPE1 0 //Orginal version\n#define SHADER_TYPE2 1\n\n//Change this line to SHADER_TYPE1 or SHADER_TYPE2 to see diffrent fractal arts.\n#define SHADER_TYPE SHADER_TYPE1\n\nvec2 complexZ(const in vec2 z)\n{\n    //Equivalent with: \n    //return vec2(z.x * z.x - z.y * z.y,\n \t//\t\t\t  z.x * z.y * 2.0)\n    return mat2(z, -z.y, z.x) * z;\n}\n\n#if SHADER_TYPE == SHADER_TYPE1\nconst vec2  juliaC = vec2(0.4, 0.3);\nconst float juliaZoom = 0.5;\n\nconst int maxIterations = 100;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.0 / min(iResolution.x, iResolution.y);\n    \n    vec2 z = uv * juliaZoom;   \n    int count = 0;\n\tfor (; count < maxIterations; ++count) \n    {\n \t\tz = complexZ(z) + juliaC;\n \t\tif (dot(z, z) > 4.0)\n        {\n            break;\n \t\t}\n    }\n    \n    vec2 texUV = vec2(float(count));  \n    texUV /= 100.0;\n    \n    fragColor.rgb = texture(iChannel0, texUV).rgb;\n    fragColor.a = 1.0;\n}\n#else\n//Copyright (c) 2019-09-09 by Angelo Logahd\n//Portfolio: https://angelologahd.wixsite.com/portfolio\n\nconst vec2  juliaC = vec2(0.4, 0.3);\nfloat juliaZoom = 0.5;\n\nconst int maxIterations = 8;\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy - iResolution.xy * 0.5;\n\tuv *= 2.0 / min(iResolution.x, iResolution.y);\n    \n    vec3 col = texture(iChannel2, uv + vec2(1.2, 0.4)).rgb * vec3(1.1, 0.6, 0.5);\n    col = mix(col, vec3(0.0, 0.0, 1.0), 0.5);\n    vec2 z = uv * juliaZoom;   \n    int count = 0;\n\tfor (; count < maxIterations; ++count) \n    {\n \t\tz = complexZ(z) + juliaC;\n        z = complexZ(z) + juliaC;\n        z = complexZ(z) + juliaC;\n        z = complexZ(z) + juliaC;\n        \n        col = texture(iChannel2, uv).rgb;      \n        float d = abs(dot(z, vec2(0.5)));\n        col -= step(d, 6.0);  \n        col = mix(col, vec3(0.4, 0.4, 0.8), 0.7);\n        \n        if (dot(z, z) > 4.0)\n        {\n            break;\n \t\t} \n    }\n    \n    vec2 texUV = vec2(float(count));  \n    texUV /= 10.0;\n    \n    fragColor.rgb = texture(iChannel1, texUV).rgb - col;\n    fragColor.rgb = pow(fragColor.rgb, vec3(0.4545));\n    fragColor.a = 1.0;\n}\n#endif","name":"Image","description":"","type":"image"}]}