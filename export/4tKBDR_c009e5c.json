{"ver":"0.1","info":{"id":"4tKBDR","date":"1542216906","viewed":67,"name":"House with a white picket fence","username":"Julia_Talbot","description":"House with a lovely white picket fence","likes":3,"published":1,"flags":0,"usePreview":0,"tags":["youwannalivehere"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec4 bgColor = vec4(0.3,0.1,1.0,1.0);\nvec4 house = vec4(0.5,1.0,0.0,1.0);\nvec4 chimney = vec4(1.0,0.2,0.1,1.0);\nvec4 fence = vec4(1.0,1.0,1.0,1.0);\nvec4 door = vec4(0.0,0.0,0.0,1.0);\n\nvec2 lowerHouseLeft = vec2(0.1, 0.0);\nvec2 houseDimensions = vec2(0.5,0.6);\n\nvec2 lowerChimneyLeft = vec2(0.4, 0.6);\nvec2 chimneyDimensions = vec2(0.1,0.3);\n\nvec2 lowerDoorLeft = vec2(0.2, 0.0);\nvec2 doorDimensions = vec2(0.1,0.3);\n\nvec2 lowerWindowLeft = vec2(0.35, 0.2);\nvec2 windowDimensions = vec2(0.2,0.3);\n\nvec2 lowerWinLeft = vec2(0.428, 0.2);\nvec2 winDimensions = vec2(0.05,0.3);\n\nvec2 lowerWidLeft = vec2(0.35, 0.32);\nvec2 widDimensions = vec2(0.2,0.05);\n\nvec2 lowerFence1Left = vec2(0.65, 0.0);\nvec2 fence1Dimensions = vec2(0.025,0.15);\n\nvec2 lowerFence2Left = vec2(0.75, 0.0);\nvec2 fence2Dimensions = vec2(0.025,0.15);\n\nvec2 lowerFence3Left = vec2(0.85, 0.0);\nvec2 fence3Dimensions = vec2(0.025,0.15);\n\nvec2 lowerFence4Left = vec2(0.95, 0.0);\nvec2 fence4Dimensions = vec2(0.025,0.15);\n\nvec2 lowerFence5Left = vec2(0.6, 0.02);\nvec2 fence5Dimensions = vec2(0.4,0.025);\n\nvec2 lowerFence6Left = vec2(0.6, 0.08);\nvec2 fence6Dimensions = vec2(0.4,0.025);\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord/iResolution.xy;\n    \n\t//House \n    float interpXHouse = step(lowerHouseLeft.x, uv.x) - step(lowerHouseLeft.x + houseDimensions.x, uv.x);\n\tfloat interpYHouse = step(lowerHouseLeft.y, uv.y) - step(lowerHouseLeft.y + houseDimensions.y, uv.y);\n    //Chimney\n    float interpXChimney = step(lowerChimneyLeft.x, uv.x) - step(lowerChimneyLeft.x + chimneyDimensions.x, uv.x);\n\tfloat interpYChimney = step(lowerChimneyLeft.y, uv.y) - step(lowerChimneyLeft.y + chimneyDimensions.y, uv.y);\n    //Door\n    float interpXDoor = step(lowerDoorLeft.x, uv.x) - step(lowerDoorLeft.x + doorDimensions.x, uv.x);\n\tfloat interpYDoor = step(lowerDoorLeft.y, uv.y) - step(lowerDoorLeft.y + doorDimensions.y, uv.y);\n    \n    //FENCE (so many fences)\n    float interpXFence1 = step(lowerFence1Left.x, uv.x) - step(lowerFence1Left.x + fence1Dimensions.x, uv.x);\n\tfloat interpYFence1 = step(lowerFence1Left.y, uv.y) - step(lowerFence1Left.y + fence1Dimensions.y, uv.y);\n    float interpXFence2 = step(lowerFence2Left.x, uv.x) - step(lowerFence2Left.x + fence2Dimensions.x, uv.x);\n\tfloat interpYFence2 = step(lowerFence2Left.y, uv.y) - step(lowerFence2Left.y + fence2Dimensions.y, uv.y);\n    float interpXFence3 = step(lowerFence3Left.x, uv.x) - step(lowerFence3Left.x + fence3Dimensions.x, uv.x);\n\tfloat interpYFence3 = step(lowerFence3Left.y, uv.y) - step(lowerFence3Left.y + fence3Dimensions.y, uv.y);\n    float interpXFence4 = step(lowerFence4Left.x, uv.x) - step(lowerFence4Left.x + fence4Dimensions.x, uv.x);\n\tfloat interpYFence4 = step(lowerFence4Left.y, uv.y) - step(lowerFence4Left.y + fence4Dimensions.y, uv.y);\n    float interpXFence5 = step(lowerFence5Left.x, uv.x) - step(lowerFence5Left.x + fence5Dimensions.x, uv.x);\n\tfloat interpYFence5 = step(lowerFence5Left.y, uv.y) - step(lowerFence5Left.y + fence5Dimensions.y, uv.y);\n    float interpXFence6 = step(lowerFence6Left.x, uv.x) - step(lowerFence6Left.x + fence6Dimensions.x, uv.x);\n\tfloat interpYFence6 = step(lowerFence6Left.y, uv.y) - step(lowerFence6Left.y + fence6Dimensions.y, uv.y);\n    \n    //Window\n    float interpXWindow = step(lowerWindowLeft.x, uv.x) - step(lowerWindowLeft.x + windowDimensions.x, uv.x);\n\tfloat interpYWindow = step(lowerWindowLeft.y, uv.y) - step(lowerWindowLeft.y + windowDimensions.y, uv.y);\n    float interpXWin = step(lowerWinLeft.x, uv.x) - step(lowerWinLeft.x + winDimensions.x, uv.x);\n\tfloat interpYWin = step(lowerWinLeft.y, uv.y) - step(lowerWinLeft.y + winDimensions.y, uv.y);\n    float interpXWid = step(lowerWidLeft.x, uv.x) - step(lowerWidLeft.x + widDimensions.x, uv.x);\n\tfloat interpYWid = step(lowerWidLeft.y, uv.y) - step(lowerWidLeft.y + widDimensions.y, uv.y);\n    \n    //assigns layers\n    vec4 Layer1 = bgColor;\n    vec4 Layer2 = (interpXChimney * interpYChimney) * chimney;\n    vec4 Layer3 = (interpXHouse * interpYHouse) * house;\n    vec4 Layer4 = (interpXDoor * interpYDoor) * door;\n    vec4 Layer5 = (interpXFence1 * interpYFence1) * fence;\n    vec4 Layer6 = (interpXFence2 * interpYFence2) * fence;\n    vec4 Layer7 = (interpXFence3 * interpYFence3) * fence;\n    vec4 Layer8 = (interpXFence4 * interpYFence4) * fence;\n    vec4 Layer9 = (interpXFence5 * interpYFence5) * fence;\n    vec4 Layer10 = (interpXFence6 * interpYFence6) * fence;\n    vec4 Layer11 = (interpXWindow * interpYWindow) * door;\n    vec4 Layer12 = (interpXWin * interpYWin) * house;\n    vec4 Layer13 = (interpXWid * interpYWid) * house;\n\n\n    //mixes layers together\n\tvec4 Composite = mix(Layer1, Layer2, Layer2.a);\n\tComposite = mix(Composite, Layer3, Layer3.a);\n    Composite = mix(Composite, Layer4, Layer4.a);\n    Composite = mix(Composite , Layer5, Layer5.a);\n    Composite = mix(Composite, Layer6, Layer6.a);\n    Composite = mix(Composite, Layer7, Layer7.a);\n    Composite = mix(Composite, Layer8, Layer8.a);\n    Composite = mix(Composite, Layer9, Layer9.a);\n    Composite = mix(Composite, Layer10, Layer10.a);\n    Composite = mix(Composite, Layer11, Layer11.a);\n    Composite = mix(Composite, Layer12, Layer12.a);\n    Composite = mix(Composite, Layer13, Layer13.a);\n\n    \n    // Output to screen\n    fragColor = Composite;\n}","name":"Image","description":"","type":"image"}]}