{"ver":"0.1","renderpass":[{"outputs":[{"channel":0,"id":"4dfGRr"}],"inputs":[{"channel":0,"type":"texture","id":"4dXGzn","filepath":"/media/a/0c7bf5fe9462d5bffbd11126e82908e39be3ce56220d900f633d58fb432e56f5.png","sampler":{"filter":"mipmap","wrap":"repeat","vflip":"false","srgb":"false","internal":"byte"}}],"code":"\n#define t iTime\n#define res iResolution\n#define PI 3.141592654\n#define octaves 5\n\nfloat noise(vec2 uv)\n{\n    return texture(iChannel0, uv).r;\n}\n\nfloat perlin(vec2 uv)\n{\n    float n = 0.;\n\tfor (int i = 0; i < octaves; ++i)\n    {\n        float a = 1. / pow(2., float(i));\n        float f = pow(2., float(i - 4));\n    \tn += a * noise(uv * f);\n    }\n    \n    return n / 2.;\n}\n\nfloat stars(vec2 uv)\n{\n    return pow(noise(uv), res.x / 100.0);\n}\n\nvec2 polar(vec2 rect)\n{\n \tfloat r = sqrt(dot(rect, rect));\n    float th = atan(rect.y / rect.x);\n    return vec2(r, th);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    \n\tvec2 uv = fragCoord.xy / res.yy;\n    float aspect = res.x / res.y;\n    vec2 uvc = (uv * 2.0) - vec2(aspect, 1.0);\n    \n\tfloat n = stars(polar(uvc) + vec2(t, 0.0));\n    n *= dot(uvc, uvc);\n    \n\tfragColor = vec4(n, n, n, 1.0);\n}","name":"Image","description":"","type":"image"}],"flags":{"mFlagVR":false,"mFlagWebcam":false,"mFlagSoundInput":false,"mFlagSoundOutput":false,"mFlagKeyboard":false,"mFlagMultipass":false,"mFlagMusicStream":false},"info":{"id":"ltlGzf","date":"1424061214","viewed":2324,"name":"Things","username":"ChronosDragon","description":"kinda cool","likes":26,"published":3,"flags":0,"usePreview":0,"tags":["2d","starfield"],"hasliked":0,"parentid":"","parentname":""}}