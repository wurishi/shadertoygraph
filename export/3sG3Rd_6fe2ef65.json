{"ver":"0.1","info":{"id":"3sG3Rd","date":"1571074511","viewed":427,"name":"Metallic Paint Stir","username":"104","description":"cheap and pretty\nMouse = color","likes":11,"published":1,"flags":0,"usePreview":0,"tags":["2d","hypnosis"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float PI2 = atan(1.)*8.;\n\nconst float minPow = .6;\nconst float maxPow = 1.5;\nconst float speed = 0.2;\nconst float zoom = 3.0;\nconst float saturation = 0.2;\n\nvoid mainImage( out vec4 o, in vec2 fragCoord )\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = fragCoord/R.xy-.5;\n    uv.x *= R.x/R.y;\n    uv *= zoom;\n    float t = iTime*speed;\n    \n    // get radius and angle\n    float l = length(uv);\n    l = sqrt(l);\n    float a = atan(uv.x,uv.y)+sin(l*PI2)*PI2;\n    \n    // distort uv by length, animated wave over time\n    float ex = mix(minPow, maxPow, sin(l*PI2+a+t*PI2)*.5+.5);\n    uv = sign(uv)*pow(abs(uv), vec2(ex));\n    \n    float d = abs(fract(length(uv)-t)-.5);// dist to ring centers\n    float c = 1./max(((2.-l)*6.)*d, .1);// dist to grayscale amt\n    o = vec4(c);\n    vec3 col = vec3(\n        clamp(l*l*l, 0.,1.), // generate correlated colorants 0-1 from length, angle, exponent\n        sin(a)*.5+.5,\n        (ex-minPow)/(maxPow-minPow));\n    col = 1.-mix(vec3(col.r+col.g+col.b)/3., col, saturation);\n\n    o.rgb *= col;\n    o *= 1.6-l;// fade edges (vignette)\n}\n\n","name":"Image","description":"","type":"image"}]}