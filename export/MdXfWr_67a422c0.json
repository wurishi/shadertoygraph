{"ver":"0.1","info":{"id":"MdXfWr","date":"1495639315","viewed":502,"name":"Sprite Shader","username":"rubeniskov","description":"sprite, video, shader, seuqence, footage","likes":5,"published":3,"flags":32,"usePreview":0,"tags":["video","shader","sprite","footage","seuqence"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfragColor = texture(iChannel0,uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"XdfGRr","filepath":"/media/a/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","previewfilepath":"/media/ap/35c87bcb8d7af24c54d41122dadb619dd920646a0bd0e477e7bdc6d12876df17.webm","type":"video","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":1,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"#define SAMPLES 64\n#define DELAY 1\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float samples = floor(sqrt(float(SAMPLES)));\n    float div = 1.0/samples;\n\tvec2 uv =  fragCoord.xy / iResolution.xy;\n    vec2 uv2 = vec2(mod(uv.x * samples, 1.0), mod(uv.y * samples, 1.0));\n\tvec3 color;\n\n   if(uv.x < div && uv.y < div)\n        color = texture(iChannel0, uv2).rgb;\n   else {\n      vec2 cr = vec2(floor(uv.x * samples), floor(uv.y * samples));\n      if(iFrame % DELAY == 0){\n          if(cr.x == 0.0)\n          cr = vec2(mod(cr.x - 1.0, samples), mod(cr.y - 1.0, samples));\n          else \n              cr = vec2(cr.x - 1.0, cr.y);\n          }\n      color = texture(iChannel1,  uv2 / samples + cr * div).rgb;\n   }\n\t\n   fragColor = vec4(color, 1.0);\n}\n","name":"Buf A","description":"","type":"buffer"}]}