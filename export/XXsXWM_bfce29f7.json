{"ver":"0.1","info":{"id":"XXsXWM","date":"1709592980","viewed":63,"name":"yinyang-2d","username":"jpoli","description":"simple 2d experiments","likes":2,"published":1,"flags":0,"usePreview":0,"tags":["2d"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nfloat quadraticBezier (float x, vec2 a){\n  // adapted from BEZMATH.PS (1993)\n  // by Don Lancaster, SYNERGETICS Inc. \n  // http://www.tinaja.com/text/bezmath.html\n\n  float epsilon = 0.00001;\n  a.x = clamp(a.x,0.0,1.0); \n  a.y = clamp(a.y,0.0,1.0); \n  if (a.x == 0.5){\n    a += epsilon;\n  }\n  \n  // solve t from x (an inverse operation)\n  float om2a = 1.0 - 2.0 * a.x;\n  float t = (sqrt(a.x*a.x + om2a*x) - a.x)/om2a;\n  float y = (1.0-2.0*a.y)*(t*t) + (2.0*a.y)*t;\n  return y;\n}\n\n\nvec4 render(vec2 fragcoord, vec2 u_resolution, float u_time) {\n    vec2 st = fragcoord.xy/u_resolution.xy;\n\tfloat px = 1.0 / u_resolution.y;\n    \n    float shortEdge = min(st.x, st.y);\n    \n    \n    float distFromCenter = distance(st, vec2(0.5, 0.5));\n\tfloat timeVal = -0.5 * u_time + (distFromCenter * 10.0);\n    \n    // control point\n    vec2 cp = vec2(cos(timeVal), -cos(timeVal)) * 0.5 + 0.5;\n    float l = quadraticBezier(st.x, cp);\n    vec3 color = vec3(smoothstep(l, l+px, st.y));\n\n    \n    return vec4(color, 1.0);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   fragColor = render(fragCoord, iResolution.xy, iTime);\n}","name":"Image","description":"","type":"image"}]}