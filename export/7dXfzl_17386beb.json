{"ver":"0.1","info":{"id":"7dXfzl","date":"1645268122","viewed":59,"name":"Maze_normchell","username":"normchell","description":"maze\n\nmove pressed mouse to see parts of the maze","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["maze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"bool calcIntersection(vec2 A, vec2 B, vec2 pos, vec2 uv) {\n    float x1 = A.x, y1 = A.y, x2 = B.x, y2 = B.y;\n    float x3 = uv.x, y3 = uv.y, x4 = pos.x, y4 = pos.y;\n\n    float A1 = y2 - y1; \n    float B1 = x1 - x2; \n    float C1 = - A1 * x1 - B1 * y1; \n\n    float A2 = y4 - y3; \n    float B2 = x3 - x4; \n    float C2 = -A2 * x3 - B2 * y3;\n\n    float f1 = A1 * x3 + B1 * y3 + C1; \n    float f2 = A1 * x4 + B1 * y4 + C1; \n    float f3 = A2 * x1 + B2 * y1 + C2; \n    float f4 = A2 * x2 + B2 * y2 + C2; \n    \n    return (f1 * f2 < 0.0 && f3 * f4 <= 0.0);\n}\n\n//i am still working on map\n\nvec2 A[40];\nvec2 B[40];\n\nvoid setAandB() {\n    A[0] = vec2(0., 0.875);\n    B[0] = vec2(0.125, 0.875);\n    \n    A[1] = vec2(0.125, 0.25);\n    B[1] = vec2(0.125, 0.875);\n    \n    A[2] = vec2(0.25, 1.);\n    B[2] = vec2(0.25, 0.625);\n    \n    A[3] = vec2(0., 0.125);\n    B[3] = vec2(0.25, 0.125);\n    \n    A[4] = vec2(0.25, 0.25);\n    B[4] = vec2(0.25, 0.125);\n    \n    A[5] = vec2(0.25, 0.25);\n    B[5] = vec2(0.375, 0.25);\n    \n    A[6] = vec2(0.375, 0.25);\n    B[6] = vec2(0.375, 0.125);\n    \n    A[7] = vec2(0.625, 0.125);\n    B[7] = vec2(0.375, 0.125);\n    \n    A[8] = vec2(0., 0.875);\n    B[8] = vec2(0.125, 0.875);\n    \n    A[9] = vec2(0.125, 0.375);\n    B[9] = vec2(0.5, 0.375);\n    \n    A[10] = vec2(0.25, 0.5);\n    B[10] = vec2(0.375, 0.5);\n    \n    A[11] = vec2(0.375, 0.875);\n    B[11] = vec2(0.375, 0.5);\n    \n    A[12] = vec2(0.375, 0.875);\n    B[12] = vec2(0.625, 0.875);\n    \n    A[13] = vec2(0.625, 0.125);\n    B[13] = vec2(0.625, 0.75);\n    \n    A[14] = vec2(0.5, 0.25);\n    B[14] = vec2(0.5, 0.5);\n    \n    A[15] = vec2(0.625, 0.625);\n    B[15] = vec2(0.375, 0.625);\n    \n    A[16] = vec2(0.5, 0.875);\n    B[16] = vec2(0.5, 0.75);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord/iResolution.xy;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec2 pos;\n    if(iMouse.xy != vec2(0,0)) {\n        pos = iMouse.xy/iResolution.xy;\n        pos.x *= iResolution.x/iResolution.y;\n    } else {\n        pos = vec2(0.5,0.5);\n        pos.x *= iResolution.x/iResolution.y;\n    }\n    \n    setAandB();\n    \n    bool visual = true;\n    for(int i = 0; i < A.length() && visual; i++) {\n        if(calcIntersection(A[i], B[i], pos, uv)) visual = false;\n    }\n    \n    if(visual) {\n        fragColor = vec4(0.870, 0.568, 0.0, 1.0);\n    } else {\n        fragColor = vec4(vec3(0), 1.0);\n    }\n    \n    float d = length(pos - uv);\n    float r = 0.3;\n    \n    float c = smoothstep(r, r - 0.02, d);\n    \n    fragColor = min(fragColor, vec4(vec3(c), 1.0));\n}","name":"Image","description":"","type":"image"}]}