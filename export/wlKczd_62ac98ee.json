{"ver":"0.1","info":{"id":"wlKczd","date":"1611616952","viewed":409,"name":"XOR Checkerboard Fractal","username":"koi","description":"A compact and efficient fractal checkerboard shader using bit-wise XOR.","likes":4,"published":3,"flags":0,"usePreview":0,"tags":["fractal","animated","checkerboard","xor","pattern"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 sr = iResolution.xy;\n    float t = fract(iTime * 0.5);                    // zoom 2x every 2 seconds\n    ivec2 ic = ivec2(fragCoord * exp2(t));           // scaled integer coordinates\n    float r = exp2(t + ceil(log2(max(sr.x, sr.y)))); // highest value that can appear on-screen (zooming breaks this somewhat)\n    float v = float(ic.x ^ ic.y) / r;                // XOR and divide result by r to keep within [0, 1]\n    fragColor = vec4(vec3(v), 1.0);\n}","name":"Image","description":"","type":"image"}]}