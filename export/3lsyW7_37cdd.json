{"ver":"0.1","info":{"id":"3lsyW7","date":"1592673149","viewed":277,"name":"black room","username":"louis_C","description":"playing with a pathtracing method of  bitnenfer and the audio reverb of TekF.","likes":13,"published":1,"flags":40,"usePreview":0,"tags":["raymarching","sound","pathtracing"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"float rd(float t){return fract(sin(dot(floor(t),95.265))*7845.236)-0.5;}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nvec3 bl(vec2 uv){   \n    vec3 col = vec3(0.);\n    float bound = sqrt(32.);\n    float m = texture(iChannel0,uv).a;\n    float v = mix(0.0005,0.002,m);\n        for(float i = -.5*bound; i<=.5*bound; i++)\n        for(float j=-.5*bound; j<=.5*bound; j++)\n        {\n            col += texture(iChannel0,uv+vec2(i,j)*v).xyz;\n        }\n    col /= 32.;\nreturn col;\n}\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   \n    vec2 uv = fragCoord/iResolution.xy;\n\tvec3 t = bl(uv);\n    vec3 t2 = mix(t,3.*abs(1.-2.*fract(t.x+0.2+vec3(0.,-1./3.,1./3.)))-1.,0.05);\n    fragColor =vec4(pow(t2,vec3(1.25,1.2,1.25)),1.);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"struct scene{float dist;int em;float re;vec3 col;};\nfloat se = 0.0;\nfloat rd() {return (fract(sin( (se += 1.0)) * 43758.5453));}\nfloat rd(float t){return fract(sin(dot(floor(t),95.265))*7845.236);}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nvec3 rdv(){\n    float theta = rd() * (6.283);\n    float z = rd() * 2.0 - 1.0;\n    float a = sqrt(1.0 - z * z);\n    vec3 v = vec3(a * cos(theta), a * sin(theta), z);\n    return v * sqrt(rd());}\nmat2 rot(float r){float c = cos(r);float s = sin(r);return mat2(c, s, -s, c);}\nfloat box(vec3 p, vec3 s){vec3 d = abs(p) - s;\nreturn length(max(d, 0.0)) + min(max(d.x, max(d.y, d.z)), 0.0);}\nscene opOR(in scene a, in scene b){\n    if (a.dist < b.dist){return a;}\n    return b;}\nscene map(vec3 p){\n    p.z -= 9.0;\n    vec3 p2 = p;\n    p2.xz *= rot((no(iTime)-0.5)*0.5);\n    vec3 b = p2*1.5;\n    float v1 = 1.4+pow(no(iTime+23.236),0.5)*0.45;\n    float v2 = 1.+no(iTime+65.23)*0.5;\n    for(int i =0 ; i < 5; i ++ ) {\n     b = vec3(v1,1.7,v2)*abs(b/dot(b,b))-vec3(0.7,0.2,0.5);}\n    float b1 = box(p + vec3(0.0, 0.0, -3.0), vec3(3.1, 3.1, 0.1)); \n    float b2 = box(p + vec3(0.0, 0.0, 12.2), vec3(3.1, 3.1, 0.1));\n    float b3 = box(p + vec3(3.0, 0.0, 0.0), vec3(0.1, 3.1, 14.02));\n    float b4 = box(p + vec3(-3.0, 0.0, 0.0), vec3(0.1, 3.1, 14.02));\n    float b5 = box(p + vec3(0.0, -2.8, 0.0), vec3(3.1, 0.02, 14.0));\n    float bf =min(min(min(min(b1,b2),b3),b4),b5);\n    scene sal = scene(bf, 0, smoothstep(0.,1.,fract(iTime*0.5))*1., vec3(0.03));\n    scene wat = scene(box(p + vec3(0.0, 2.5+sin(p.z*5.+iTime)*0.1, 0.0), vec3(3.1, 0.1, 14.0)),0,0.2,vec3(1.));\n    scene li = scene(box(p + vec3(0.0, -3.75, 2.0), vec3(0.2, 1.0, 2.5)), 1, 1.0, vec3(10.));   \n    scene art = scene( length(b)-0.2,0,1.2, vec3(1.));\n    scene scene = opOR(sal, wat);\n    scene = opOR(scene, li);\n    scene = opOR(scene, art);   \n    return scene;\n}\nvec3 norm(vec3 p){vec2 e=vec2(0,0.01);return normalize(map(p).dist \n\t\t-vec3(map(p-e.yxx).dist,map(p-e.xyx).dist,map(p - e.xxy).dist));}\n\nscene raymarch(in vec3 ro, in vec3 rd){\n    float t = 0.0;\n    scene sceneOutput = scene(50.,  0, 1.2, vec3(0.03));\n    for (int i = 0; i < 64; ++i){\n        scene sce = map(ro + rd * t);\n        if (sce.dist < 0.01){\n            sceneOutput = scene(t, sce.em,sce.re,sce.col);\n            break;}\n        t += sce.dist;\n        if (t > 20.){break;}\n    }\n    return sceneOutput;}\n\nvec4 raytrace(in vec2 uv){\n    vec3 ro = vec3(uv, 0.0);\n    vec3 rd = normalize(vec3(uv, 2.8));\n    vec3 color = vec3(0.0);\n    vec3 mco = vec3(0.0);\n    float atten = 1.0;\n    float depth = 0.;\n    for (int i = 0; i <=2; ++i)\n    {\n        scene sce = raymarch(ro, rd);\n        if (i == 0) depth =  sce.dist;\n        if (sce.em == 0)\n        {\n        \tvec3 p = ro + rd * sce.dist;\n            vec3 n = norm(p);           \n            rd = n + rdv() * sce.re;\n            ro = p + rd * 0.1;\n            mco += (sce.col) * atten;                    \n            atten *= 0.5;\n        }\n        else\n        { color = mix(sce.col, mco * sce.col, max(0.0, float(i)));\n         break;}\n\n    } \n    return vec4(color,depth);\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uc = fragCoord.xy / iResolution.xy;\n    float time = iTime;\n    se = (iResolution.y * fragCoord.x / iResolution.x + fragCoord.y / iResolution.y);\n    se += time;\n    vec2 uv = (fragCoord.xy / iResolution.xy * 2.0 - 1.0) ;\n    uv.x *= iResolution.x/iResolution.y;\n    vec4 color = raytrace(uv );\n    vec3 tf = max(clamp(color.xyz,0.,1.),texture (iChannel0,uc).xyz*0.98);\n    fragColor = vec4(tf,smoothstep(10.,0.,color.a));\n    \n}\n\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[],"outputs":[],"code":"float rd(float t){return fract(sin(dot(floor(t),95.265))*7845.236);}\nfloat no(float t){return mix(rd(t),rd(t+1.),smoothstep(0.,1.,fract(t)));}\nfloat s1 (float time) {\n    float n1 = pow(no(time+23.236),0.5);   \n    float n2 = no(time+65.23);\n    float v1 = 0.;\n    for(int i = 1 ; i <4 ; i ++ ){\n        float v = float(i);\n     v1 += (no(n2*800.*v)-0.5)*n1;\n     v1 += (fract(time*400.*rd(v*95.236+time*0.5))-0.5)*(1.-n1)*0.5;\n    }\n    return v1;\n}\nvec2 mainSound( in int samp, float time )\n{\n\n    \n    float v1 = s1(time);\n    float ta = 0.01;    \n    float rev = 0.;\n    float sum = 0.;\n    for(float t = 0.; t<2.;t +=ta){      \n    float rand = fract(120.*sin(t*1000.));\n    float t2 = t + ta*rand*5.;\n    float amp = exp2(-t2);\n    rev += s1( time - t2 ) * amp;\n    sum += amp;}\n    rev /= sum;    \n    rev *= 10.; \n    float s2 = s1(time);\n    vec2 f =  clamp(mix(vec2(s2,rev),vec2(rev,s2),no(time)),-1.,1.);\n    \n    return vec2(f);\n}","name":"Sound","description":"","type":"sound"}]}