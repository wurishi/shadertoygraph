{"ver":"0.1","info":{"id":"Mt2czR","date":"1507434551","viewed":165,"name":"Reveal Layers","username":"sgt_suarez","description":"Using ShaderToy, write a shader that blurs a texture. Hovering the mouse over the texture \"reveals\" another texture underneath, which is sharpened. The reveal should be limited to a circle around the mouse position. The radius of the circle should initial","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["reveallayersstepkernels"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Kernels\nmat3 blur = mat3(\n.111,.111,.111,\n.111,.111,.111,\n.111,.111,.111\n);\n\nmat3 sharpen = mat3(\n0., -1, 0.0, \n-1, 5, -1, \n0., -1, 0.0\n);\n\nmat3 emboss = mat3(\n-2, -1, 0,\n-1, 1 ,1,\n0, 1, 2\n);\n\nmat3 edgeDetection = mat3(\n-1, -1, -1,\n-1,  8, -1,\n-1, -1, -1\n);\n\nmat3 guassianBlur = (1.0/16.0) * mat3(\n1, 2, 1,\n2, 4, 2,\n1, 2, 1\n);\n\n//functions\nvec3 aSample(const int x, const int y, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy * iChannelResolution[0].xy;\n    uv = (uv + vec2(x, y)) / iChannelResolution[0].xy ;\n    return texture(iChannel0, uv).xyz;\n}\n\nvec3 aFilter(in vec2 fragCoord, mat3 kernel)\n{\n    vec3 sum = vec3(0,0,0);\n    \n    for(int i = 0; i < 3; i++)\n    {\n        for(int j = 0; j < 3; j++)\n        {\n        \tsum += aSample(i - 1, j - 1, fragCoord) * kernel[i][j]; \n        }\n    }\n    \n    return sum;\n}\n\n//Variables\nfloat radius = .1; //Changable radius as requested\nfloat topLayerAlpha = 1.0;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n\tvec2 fc = fragCoord.xy;\n\n    vec2 uv = fc / iResolution.xy;\n    uv.y *= iResolution.y / iResolution.x;\n    \n    vec4 layer1 = texture(iChannel0, uv);\n    vec4 layer2;\n    \n  \tvec2 mouseUV = iMouse.xy / iResolution.xy;  \n\tmouseUV.y *= iResolution.y / iResolution.x;\n\n    //Select your effect Here!\n    \n    vec3 cf = aFilter(fc, sharpen);\n    //vec3 cf = aFilter(fc, emboss);\n    //vec3 cf = aFilter(fc, edgeDetection);\n    //vec3 cf = aFilter( fc, guassianBlur); \n\t\n    //layers\n    layer1 = vec4(cf, 1.0);\n    \n    topLayerAlpha = step(radius, length(uv - mouseUV));\n    \n    layer2 = vec4(aFilter(fc, blur), topLayerAlpha);\n    \n    //composite layers\n    vec4 composite;\n    composite = mix(layer1, layer2, layer2.a);\n    \n\n    fragColor = composite;\n}","name":"Image","description":"","type":"image"}]}