{"ver":"0.1","info":{"id":"WtcXDM","date":"1581017875","viewed":191,"name":"Rounded rectangle version 2","username":"dmitrykolesnikovich","description":"Rounded rectangle version 2","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["rectangle","rounded"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"/*support*/\n\n#define YELLOW\t\t vec4(1, 0.85, 0, 0)\n#define center       vec2(0, 0)\n#define size         vec2(1., 1.5)\n#define radius       .1\n#define normalization(p) (2.*p - iResolution.xy) / iResolution.y;\n\n/*objects*/\n\nvec4 RoundedRectangle(vec2 p, vec4 color) {   \n    p -= center;\n    vec2 uv = p / (size * .5);\n    vec2 angularity = size / radius;                         \n    float geometry = pow(abs(uv.x), angularity.x) + pow(abs(uv.y), angularity.y);\n\tfloat graphics = (1.0 - pow(geometry, 32.0));\n    vec4 coloring = graphics * color;\n    return coloring;\n}\n\n/*canvas*/\n\nvoid mainImage(out vec4 canvas, in vec2 pixel) {   \n    vec2 p = normalization(pixel);\n    canvas = vec4(0);\n    canvas += RoundedRectangle(p, YELLOW);\n}\n","name":"Image","description":"","type":"image"}]}