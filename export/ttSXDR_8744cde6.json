{"ver":"0.1","info":{"id":"ttSXDR","date":"1566820447","viewed":168,"name":"Skewed#2","username":"104","description":"Some kind of desert fabric?","likes":5,"published":1,"flags":0,"usePreview":0,"tags":["2d","glitch"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"\nconst vec2 z = vec2(4);\nconst float complexity =4.;\nconst float density = .4; // 0-1\n\nconst float PI = atan(1.)*4.;\n\nvec4 hash42(vec2 p)\n{\n    p+=1e2;\n\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\n#define q(x,p) (floor((x)/(p))*(p))\n\nmat2 rot2D(float r){\n    return mat2(cos(r), sin(r), -sin(r), cos(r));\n}\n\nvoid mainImage( out vec4 o, vec2 C)\n{\n    vec2 R = iResolution.xy;\n    vec2 uv = C/R.xy;\n    vec2 N = uv;\n    float t = iTime*.1+1e2;\n    uv.x *= R.x/R.y;\n\n    uv *= rot2D(PI/4.);\n    uv *= z;\n    \n    vec4 c = hash42(floor(uv));\n    float s = sign(c.z-.5);\n    s = 1.;\n    float d = 1.;\n    \n    for (float i = 1.;i <= complexity; ++ i) {\n        vec4 c = hash42(floor(uv));\n        vec2 p = fract(uv)*2.-1.;\n        uv +=s*(t+uv.yx*c.xy);\n        \n        if (i < 2.) {\n            o = c;\n        }\n        else if (c.w > density)\n            o *= c*p.x;\n        uv *= 2.;\n    }\n    o=pow(o,o-o+.3);\n    N-=.5;\n    o*=1.-dot(N,N);\n}\n\n","name":"Image","description":"","type":"image"}]}