{"ver":"0.1","info":{"id":"mlfXWf","date":"1675425313","viewed":51,"name":"capsule_malefik","username":"Baptiste_labat","description":"capsule_malefik","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["demoscene"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec3 opRep(vec3 p, vec3 c)\n{\n    return mod(p+0.5*c, c) - 0.5 * c;\n}\n\nvec2 rot(vec2 st, float a)\n{\n    return st * mat2(cos(a), -sin(a),\n                    sin(a), cos(a));\n}\n\nfloat opSmoothUnion( float d1, float d2, float k ) {\n    float h = clamp( 0.5 + 0.5*(d2-d1)/k, 0.0, 1.0 );\n    return mix( d2, d1, h ) - k*h*(1.0-h); }\n\nfloat sdBox( vec3 p, vec3 b )\n{\n  vec3 q = abs(p) - b;\n  return length(max(q,0.0)) + min(max(q.x,max(q.y,q.z)),0.0);\n}\n\nfloat sdTorus(vec3 p, vec3 t)\n{\n    vec2 q = vec2(length(p.xz)-t.x,p.y);\n    return length(q)-t.y*0.6;\n}\n\nfloat sdCapsule( vec3 p, vec3 a, vec3 b, float r )\n{\n  vec3 pa = p - a, ba = b - a;\n  float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\n  return length( pa - ba*h ) - r;\n}\n\nfloat sdSphere( vec3 p, float s )\n{\n  return length(p)-s;\n}\n\n\n\nfloat map(vec3 pos) {\n    float v = 0.0;\n    \n    pos = opRep(pos,vec3(8.0, 10.0, 5.0));\n    \n\n    vec3 sp1 = pos + vec3(3.0, 0.0, 0.0);\n    vec3 sp2 = pos + vec3(-3.0, 0.0, 0.0);\n    \n    v = sdSphere(sp1, 3.0);\n    v = mix(sdSphere(pos, 0.8), sdCapsule(pos, vec3(-2.0,0.0,0.0), vec3(2.0,0.0,0.0), 0.5), sin(iTime)-0.5*-2.0);//\n    \n    //v = opSmoothUnion(v, sdSphere(sp2, 3.0), 1.0);\n    \n    return v;\n}\n\nvec3 palette( in float t, in vec3 a, in vec3 b, in vec3 c, in vec3 d )\n{\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nfloat CastRay(vec3 ro, vec3 rd)  \n{\n    float contact = 0.0;\n    \n    for(int i=0; i<60; i++)\n    {\n        float ray = map(ro + rd * contact); // TODO\n        \n        if(ray < (0.0001*contact))\n        {\n            return contact;\n            //return float(i)/32.;\n        }\n        \n        contact += ray;\n    }\n    \n    return -1.0;\n}\n\nvec3 GetNormal (vec3 pos)\n{\n    float v = map(pos);\n    vec2 e = vec2(0.001, 0.0);\n    return normalize(vec3(\n        map(pos+e.xyy),\n        map(pos+e.yxy),\n        map(pos+e.yyx)\n        ) - v);\n}\n\nvec3 getnorm(vec3 p)\n{\n    vec2 eps = vec2(0.001,0.);\n    return normalize(map(p)-vec3(\n    map(p-eps.xyy),\n    map(p-eps.yxy),\n    map(p-eps.yyx)));\n}\n\nvec3 render(vec3 ro, vec3 rd) \n{\n    float contact = CastRay(ro, rd);\n    \n    vec3 col = vec3(0.0);\n    \n    if(contact == -1.0)\n    {\n        col = vec3(0.8,0.3,0.5);\n    }\n    else\n    {\n        vec3 lightPos = vec3(sin(iTime)*5.0, 8.0, -10.0);\n        vec3 lightTar = vec3(0.0);\n        vec3 lightDir = normalize(lightPos - lightTar);\n        vec3 nor = GetNormal(ro + rd * contact);\n        \n        float lambert = clamp(dot(nor, lightDir), 0.0, 1.0);\n        float toon = step(lambert, 0.5);\n        float stoon = smoothstep(lambert, 0.6, 0.5);\n        \n        float fresnel = pow( dot(nor, rd) + 1.,2.0);\n        \n        col = (vec3(0.8, 0.5, 0.4),vec3(0.2, 0.4, 0.2),vec3(2.0, 1.0, 1.0),vec3(0.00, 0.25, 0.25) )* (lambert) + pow(lambert, 64.) + fresnel * 1.0;\n        //col = vec3(0.5, 0.0, 0.0) + fresnel;\n        //col = vec3(stoon);\n        //col = vec3(1.0-contact);\n    }\n    \n    return col;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = 2.0 * fragCoord/iResolution.xy - 1.0;\n    uv.x *= iResolution.x/iResolution.y;\n    \n    vec3 cameraPos = vec3(0.0, 3.0, iTime-4.0);\n    vec3 cameraTar = vec3(0.0, 0.0, iTime);\n    cameraPos.xy = rot(cameraPos.xz, sin(iTime)*1.5);\n    \n    vec3 forward = normalize(cameraTar - cameraPos);\n    vec3 right = normalize(cross(vec3(0.0, -1.0, 0.0), forward));\n    vec3 up = normalize(cross(right, forward));\n    vec3 viewDir = normalize(uv.x * right + uv.y * up + 2.0 * forward);\n    \n    \n\n    vec3 col = render(cameraPos, viewDir);\n\n\n    fragColor = vec4(col,1.0);\n}\n","name":"Image","description":"","type":"image"}]}