{"ver":"0.1","info":{"id":"sttGWB","date":"1636665850","viewed":259,"name":"Simple 2D Metaballs w/ Fadeout","username":"KdotJPG","description":"Simple 2D metaball circle fadeout demo using a piecewise polynomial falloff function. One metaball in the center; click and drag the mouse to move around a second.","likes":2,"published":3,"flags":0,"usePreview":0,"tags":["metaballs"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"const float R = 0.5;\nconst float BlendPadding = 0.00625;\nconst float FadePadding = 0.2;\n\nconst float S = R + BlendPadding;\nconst float Q = R - FadePadding;\n\nconst float A = (S*S - Q*Q) * (S*S - Q*Q) * (S*S - Q*Q);\nconst float B = (S*S - R*R) * (S*S - R*R) * (S*S - R*R);\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = (fragCoord * 2. - iResolution.xy)/min(iResolution.x, iResolution.y);\n    vec2 iMouseUV = (iMouse.xy * 2. - iResolution.xy)/min(iResolution.x, iResolution.y);\n    \n    float falloff0 = max(0., S*S - dot(uv, uv)); falloff0 *= falloff0 * falloff0;\n    float falloff1 = max(0., S*S - dot(uv - iMouseUV, uv - iMouseUV)); falloff1 *= falloff1 * falloff1;\n    \n    float totalSum = falloff0 + falloff1;\n    float smoothStepValue = smoothstep(B, A, totalSum);\n\n    vec3 col = vec3(smoothStepValue);\n    fragColor = vec4(col, 1.0);\n}","name":"Image","description":"","type":"image"}]}