{"ver":"0.1","info":{"id":"3sdyWX","date":"1601887501","viewed":207,"name":"mandelbrot made of julia sets","username":"Jinkweiq","description":"Collection of Julia sets laid out in a grid such that the center of each image corresponds to the same position in the complex plane as the value of the set.  Works best with a scale of 75 on a 1080p monitior.","likes":7,"published":1,"flags":0,"usePreview":0,"tags":["madelbrot"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  // play with these\n  float scale = iResolution.x / 50.;\n  float block_size = 2.5;\n  float mandelbrot_scale = .5;\n  // ---------\n  \n  vec2 uv = vec2(1.25, 1.25) * vec2(fragCoord.x / iResolution.x, fragCoord.y / iResolution.y);\n  uv -= vec2(.85, .625);\n  uv *= scale / vec2(iResolution.y / iResolution.x, 1);\n  vec2 c = floor(uv)/scale/mandelbrot_scale;\n  uv = mod(uv, 1.);\n  uv *= block_size;\n  uv -= block_size / 2.;\n  \n  vec3 col = vec3(0);\n  for (int i=0;i<500;++i) {\n      if (length(uv) > 100.) {\n         float ic = float(i) / 30.;\n         col = ic * vec3(.3,.5,1.);\n         break;\n      }\n      uv = vec2(\n        uv.x * uv.x - uv.y * uv.y,\n        2. * uv.x * uv.y\n      );\n      uv += c;\n    } \n    \n    fragColor = vec4(col, 1.);\n}","name":"Image","description":"","type":"image"}]}