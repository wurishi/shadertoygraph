{"ver":"0.1","info":{"id":"XtKfRG","date":"1542956933","viewed":1304,"name":"2Tweet Caustics, #define-less","username":"jeremyabel","description":"Wanted to try this in Unreal Engine, so I formatted it in a way that was suitable for use in UE's material editor.\nOriginal is David Hoskins's: https://www.shadertoy.com/view/MdKXDm","likes":39,"published":1,"flags":0,"usePreview":0,"tags":["2d","water","caustics"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// #define-less version of David Hoskins' two-tweet caustics effect,\n// suitable for use as a custom HLSL expression within Unreal Engine's\n// material editor.\n//\n// cleaner golf'd version by FabriceNeyret2\n//\n// ORIGINAL: https://www.shadertoy.com/view/MdKXDm\n//\n// A simple, if a little square, water caustic effect.\n// David Hoskins.\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n//\n// Inspired by akohdr's \"Fluid Fields\"\n// https://www.shadertoy.com/view/XsVSDm\n\nvoid mainImage(out vec4 k, vec2 p)\n{\n    mat3 m = mat3(-2,-1,2, 3,-2,1, 1,2,2);\n    vec3 a = vec3( p / 4e2, iTime / 4. ) * m,\n         b = a * m * .4,\n         c = b * m * .3;\n    k = vec4(pow(\n          min(min(   length(.5 - fract(a)), \n                     length(.5 - fract(b))\n                  ), length(.5 - fract(c)\n             )), 7.) * 25.);\n}\n\n\n/* UE4 Custom HLSL Material Expression: \n\nInput: k, where k.xy is texcoord, k.z is time\n\nfloat3x3 m = float3x3(-2,-1,2, 3,-2,1, 1,2,2);\nfloat3 a = mul(k, m) * 0.5;\nfloat3 b = mul(a, m) * 0.4;\nfloat3 c = mul(b, m) * 0.3;\nreturn pow(min(min(length(0.5 - frac(a)), length(0.5 - frac(b))), length(0.5 - frac(c))), 7) * 25.;\n\n*/","name":"Image","description":"","type":"image"}]}