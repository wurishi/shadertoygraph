{"ver":"0.1","info":{"id":"tdGfzc","date":"1607649813","viewed":149,"name":"Iterative Image Blurring","username":"oneshade","description":"Iteratively blurring an image Currently, you have to rewind the shader for it to work.","likes":0,"published":3,"flags":32,"usePreview":0,"tags":["postprocessing","blur","iterative"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel0, uv);\n}","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"void mainImage(out vec4 fragColor, in vec2 fragCoord) {\n    vec2 uv = fragCoord / iResolution.xy;\n    fragColor = texture(iChannel1, uv);\n    //bool loaded = texture(iChannel1, vec2(0.5)).a != 0.0; // Doesn't work currently.\n    if (iFrame > 0) {// && loaded) {\n        fragColor = texture(iChannel0, uv);\n        vec4 sum = vec4(0.0);\n        float amount = 0.0;\n\n        for (int i=-1; i < 2; i++) {\n            for (int j=-1; j < 2; j++) {\n                sum += texelFetch(iChannel0, ivec2(fragCoord) + ivec2(i, j), 0);\n                amount++;\n            }\n        }\n\n        fragColor = sum / amount;\n    }\n}","name":"Buffer A","description":"","type":"buffer"}]}