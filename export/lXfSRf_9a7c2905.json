{"ver":"0.1","info":{"id":"lXfSRf","date":"1709767722","viewed":163,"name":"water drop effect","username":"snflwrfld","description":"quick water drop effect\nneeds many tweak for a convincing effect\nthe lighting effect is reaaaally cheap, but i didnt want to bother :p","likes":6,"published":1,"flags":0,"usePreview":0,"tags":["2d","water","effect"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"vec2 waterdrop(vec2 center, float t, vec2 st) {\n    vec2 dir = normalize(st-center);\n    float d = length(st-center);\n    \n    \n    \n    float f = 2.;\n    float A = 10.; // amplitude of the peak\n    float dur = A/5.; // controls the duration of the wave (higher value = lower duration)\n    \n    t = mod(t, 4.*dur); // controls the animation loop duration\n    float t_disp = t-d*.5;\n    \n    return A *\n        cos(t_disp*f) * .5*sin(t_disp*f*4.) * .25*sin(t_disp*f*8.) \n            // base wave function, just a sum of sines\n        * exp(-t_disp*dur) \n        * smoothstep(0.,.05,t_disp) \n        * normalize(st-center);\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\n    float scale = 8.64;\n    vec2 center = vec2(1.2,1.5);\n    \n    vec2 uv = fragCoord*scale/iResolution.x;\n    float t = iTime*1.;\n    \n    vec2 water_disp = waterdrop(center, t, uv);\n    vec2 uv_water = uv - water_disp;\n\n    vec2 sti = floor(uv_water);\n    vec2 stf = mod(uv_water,1.);\n    \n    \n    \n    \n    vec3 col = vec3(step(1., mod(sti.x+sti.y,2.)));\n    // cheap light reflection effect\n    col += .8*smoothstep(.05,water_disp.x*.7+water_disp.y*.3,.5);\n    \n    vec2 water_disp_shadow = waterdrop(center, t, uv_water-vec2(3.,0.));\n    // not so cheap shadow effect\n    // col *= 1. - .2*smoothstep(.05,water_disp_shadow.x,11.);\n\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}