{"ver":"0.1","info":{"id":"mlBSRc","date":"1676380073","viewed":74,"name":"TD7","username":"Toto_ShaderMan","description":"waa","likes":4,"published":1,"flags":0,"usePreview":0,"tags":["beau"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"#define time iTime\n\n\n// fonction de rotation\nmat2 rot(float a)\n{\n    float ca = cos(a);\n    float sa = sin(a);\n    return mat2(ca, sa, -sa, ca);\n}\n\nfloat box(vec3 p, vec3 s)\n{\n    p = abs(p) - s;\n    return max(p.x, max(p.y, p.z) );\n}\n\n\nfloat map(vec3 p)\n{\n    \n    for(float i=0.0; i<4.5; ++i)\n    {\n    p.xz *= rot(time*0.5);  \n    p.xy *= rot(time*0.3);\n    p = abs(p) - 0.4;\n    }\n    \n    float d = box(p,vec3(0.2, 0.1, 0.5));\n    return d;\n\n   // p.x += 1.0;\n    \n        \n    float taille = 1.2;\n    return length(p) - taille;\n    \n    \n   \n}\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = (fragCoord-iResolution.xy*0.5);\n    uv /= iResolution.y; \n\n    vec3 col = vec3(0);\n\n\n    // Raymarching loop\n    vec3 p = vec3(0,0,-10);\n    float focale = 1.2;\n    vec3 r = normalize(vec3(uv,focale) );\n    \n    for(float i=0.0; i<100.0; ++i)\n    {\n    \n        float d = map(p);\n        if(d < 0.001) {\n        float lum = 1.0 - (i + d/0.001) / 100.0;\n        col = vec3(0.2,0.5,0.7) *2.0 * lum;\n        break;\n        }\n        p += r * d;\n    }\n\n    // Output to screen\n    fragColor = vec4(col,1.0);\n}","name":"Image","description":"","type":"image"}]}