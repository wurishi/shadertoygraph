{"ver":"0.1","info":{"id":"mtGBDR","date":"1702212683","viewed":21,"name":"D6 - Water Freeze ","username":"SilverFox","description":"Frosted Water: Simulate a frosted water effect on 2D surfaces.","likes":1,"published":1,"flags":0,"usePreview":0,"tags":["aoc","waterfreeze"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"XsXGRn","filepath":"/media/a/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","previewfilepath":"/media/ap/cd4c518bc6ef165c39d4405b347b51ba40f8d7a065ab0e8d2e4f422cbc1e8a43.jpg","type":"texture","channel":1,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1},{"id":"4sf3Rr","filepath":"/media/a/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","previewfilepath":"/media/ap/ad56fba948dfba9ae698198c109e71f118a54d209c0ea50d77ea546abad89c57.png","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Generate ripple uv pattern what is applied on top of base texture uv\nfloat ripplePattern(vec2 uv, vec2 rippleCenter, float rippleAmplitude, float rippleSpeed, float rippleFrequency)\n{\n    // Radial distance used for cirle effect ripple wave\n    float distanceFromCenter = distance(uv, rippleCenter);\n    \n    // Ripple wave math formula\n    return rippleAmplitude * sin(distanceFromCenter * rippleFrequency - iTime * rippleSpeed) / (distanceFromCenter * rippleFrequency + 1.0);\n}\n\n// blendTex, method to blend two textures based on blendFactor\nvec4 blendTex(vec2 uv, sampler2D texture1, sampler2D texture2, float blendFactor) {\n    vec4 color1 = texture(texture1, uv);\n    vec4 color2 = texture(texture2, uv);\n    return mix(color1, color2, blendFactor);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = fragCoord / iResolution.xy;\n    \n    // Convert 1s to 4s loop\n    float adjustTime = iTime * 0.25; \n    float animTime = sin(adjustTime);\n    \n    // Create the wave ripple effect and water drop ripple effect\n    float waveRipplePattern = ripplePattern(uv, vec2(0.,0.) - .25, 0.075, 5.0, 25.0);\n    \n    uv.x += waveRipplePattern * clamp((1.0 - animTime - 0.25), 0.0, 1.0);\n    uv.y += waveRipplePattern * clamp((1.0 - animTime - 0.25), 0.0, 1.0);\n    \n   \n    vec4 finalTex = blendTex(uv, iChannel0, iChannel1, animTime - 0.25);\n    fragColor = finalTex;\n}\n","name":"Image","description":"","type":"image"}]}