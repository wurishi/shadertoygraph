{"ver":"0.1","info":{"id":"lf3fWf","date":"1733556959","viewed":397,"name":" Billboard Tunnel","username":"wyatt","description":"tunnel","likes":40,"published":3,"flags":0,"usePreview":1,"tags":["tunnel"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dfGRn","filepath":"/media/a/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","previewfilepath":"/media/ap/8de3a3924cb95bd0e95a443fff0326c869f9d4979cd1d5b6e94e2a01f5be53e9.jpg","type":"texture","channel":0,"sampler":{"filter":"mipmap","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"// Fork of \"Billboard Tunnel\" by wyatt. https://shadertoy.com/view/sttyR4\n// 2024-12-07 07:35:36\n\n#define TUNNEL_SPEED 1.\n#define TUNNEL_FLEXIBILITY 1.\n#define LIGHT_RANGE 1.\n#define NEON_RANGE 1.\n#define COLOR_CHANGE_SPEED .1\n#define NEON_COLOR vec3(1,0,1)\n#define NEON_OPPOSITE true\n#define AMBIENT .3\n#define LIGHT_COLOR vec3(1,1,1)\n#define LIGHT_CHANGE true\n#define R iResolution.xy\n#define ei(a) mat2(cos(a),sin(a),-sin(a),cos(a))\nfloat segment (vec2 p, vec2 a, vec2 b) {\n    float l =  length(p-a-(b-a)*clamp(dot(p-a,b-a)/dot(b-a,b-a),0.,1.));\n    return .5*exp(-10.*l*l)+smoothstep(.05,.03,l);\n}\nfloat box(vec2 p, vec2 b) {\n\t\t\tvec2 d = abs(p) - b*0.5;\n\t\t    return min(max(d.x,d.y),0.0) + length(max(d,0.0));\n\t\t}\nvec3 uv;\nvec3 hash (vec2 p)\n{\n\tvec3 p3 = fract(vec3(p.xyx) * vec3(.1031, .1030, .0973));\n    p3 += dot(p3, p3.yxz+33.33);\n    return fract((p3.xxy+p3.yzz)*p3.zyx);\n}vec3 noise(vec2 p)\n{\n    vec4 w = vec4(\n        floor(p),\n        ceil (p)  );\n    vec3 \n        _00 = hash(w.xy),\n        _01 = hash(w.xw),\n        _10 = hash(w.zy),\n        _11 = hash(w.zw),\n    _0 = mix(_00,_01,fract(p.y)),\n    _1 = mix(_10,_11,fract(p.y));\n    return mix(_0,_1,fract(p.x));\n}\nvec3 fbm (vec2 p)\n{\n    vec3 w = vec3(0);\n    float N = 5.;\n    for (float i = 1.; i < N; i++)\n    {\n        p *= 1.7*ei(.5);\n        w += noise(p)/N/i;\n    }\n    return w;\n}\nfloat map (vec3 p) {\n    p.x += TUNNEL_FLEXIBILITY*.4*(sin(.8*p.z+TUNNEL_SPEED*iTime));\n    vec3 n = vec3(0,0,1);\n    vec3 c = vec3(0);\n    float d = dot(p,n);\n    float l = -(length(p-(c+n*d))-1.);\n    l = min(l,length(p.xy+vec2(0,-1.))-.04);\n    uv.xy = vec2(\n    d+TUNNEL_SPEED*iTime,\n        atan(p.x,p.y)/3.1459\n    );\n    if (uv.y<0.) {\n        uv.x += 7.33;\n        \n    }\n    uv.x = mod(uv.x,14.);\n    uv.z = 0.;\n    float rd = min(l,abs(p.y+.6)-0.05);\n    vec2 v = p.xy;\n    v.y += .57;\n    v.x = abs(v.x)-.75;\n    float b = box(v,vec2(.2,.1))-.02;\n    if (b<rd&&b<l) {\n        uv.z = 2.;\n        return b;\n    }\n    if (rd<l) {\n        uv.xy = vec2(\n            p.x,\n            .25*uv.x\n        );\n        uv.z = 1.;\n        return rd;\n    } else return l;\n}\nvec3 normal (vec3 p) {\n    vec2 e = vec2(1e-3,0);\n    return normalize(vec3(\n        map(p+e.xyy)-map(p-e.xyy),\n        map(p+e.yxy)-map(p-e.yxy),\n        map(p+e.yyx)-map(p-e.yyx)\n     ));\n}\nvoid mainImage(out vec4 Q, in vec2 U) {\n    U = 2.*(U-.5*R)/R.y;\n    vec3 p = vec3(0,0,0);\n    p.x -= TUNNEL_FLEXIBILITY*.4*sin(p.z+TUNNEL_SPEED*iTime);\n    vec3 d = normalize(vec3(U,2));\n    d.xz*=ei(.5*TUNNEL_FLEXIBILITY*.4*-cos(p.z+TUNNEL_SPEED*iTime));\n    for (float i = 0.; i < 40.; i++) {\n        p += d*map(p);\n    }\n    float x = uv.x;\n    if (uv.z==1.) {\n        if (abs(abs(uv.x)-.04)<.02) \n            Q = vec4(1,1,0,1);\n        else Q = vec4(.2);\n        \n        if (abs(abs(uv.x)-.55)<.02)\n            Q = vec4(.5);\n        Q *= (.8+fbm(60.*uv.xy).x);\n        uv.xy = uv.yx;\n        uv.x *= 4.;\n        uv.y *= .25;\n        \n    }\n    if (uv.z == 2.) {\n        Q = vec4(.9)*(0.7-0.3*abs(normal(p).x));\n         Q *= smoothstep(.0,.015,abs(fract(.5+1.5*uv.x)-.1));\n         Q *= (.8+.5*fbm(200.*uv.xy).x);\n    }\n    if (uv.z == 0.) {\n    \n        vec3 n = normal(p);\n        uv.y = 1.-abs(uv.y);\n        uv.xy = uv.xy*3.-1.;\n        uv.x *= .5;\n        Q = .8*sqrt(.5+.5*uv.yyyy)*\n           (.9+.1*smoothstep(.0,.001,abs(fbm(uv.xy).x-.2)))*\n          (.8+.4*fbm(10.*uv.xy).x) *\n        smoothstep(.0,.01,abs(fract(1.*uv.x)-.1));\n        \n     }else {\n         uv.y = 1.-abs(uv.y);\n        uv.xy = uv.xy*3.-1.;\n        uv.x *= .5;\n     }\n     \n            Q *= AMBIENT;\n     vec4 light_color = 0.5+0.5*sin(COLOR_CHANGE_SPEED*iTime+vec4(1,2,3,4));\n        if (!LIGHT_CHANGE) light_color.xyz = LIGHT_COLOR;\n        light_color.w = 1.;\n        light_color.xyz *= .5;\n        if (uv.z!=1.&&abs(2.-uv.y)<.04){\n            Q =.4+light_color; \n            Q *= smoothstep(.02,.04,abs(fract(.5+1.5*x)-.1));\n        }\n        else if (uv.z!=1.&&abs(2.-uv.y)<.06) Q *=0.; \n        Q += Q/AMBIENT*light_color*exp(-abs(2.-uv.y)/LIGHT_RANGE);\n        uv.y -= .15;\n        uv.x -= 9.25;\n        uv.x*=.5;\n        uv.xy += .05;\n        uv.xy *= 1.05;\n        {\n            float d = box(uv.xy-.5,vec2(1.-.03))-.03;\n            if (abs(d)<.01) Q *= 0.;\n            vec4 col = vec4(NEON_COLOR,1);\n            if (LIGHT_CHANGE) col = 0.5+(NEON_OPPOSITE?-1.:1.)*0.5*sin(COLOR_CHANGE_SPEED*iTime+vec4(1,2,3,4));\n            col.w = 1.;\n            if (uv.z == 1.) col *= 3.;\n            Q += Q/AMBIENT*(\n               smoothstep(5.,4.,abs(uv.x))*\n               smoothstep(2.,1.8,uv.y)*\n               (.5+col)*.2*exp(-2.5/NEON_RANGE*abs(d))+\n                col*1.5*exp(-50.*abs(d-.01))\n                );\n            if (d < 0.) {\n            Q = texture(iChannel0,uv.xy);\n            }\n        }\n    Q *= exp(-.01*p.z*p.z);\n}","name":"Image","description":"","type":"image"}]}