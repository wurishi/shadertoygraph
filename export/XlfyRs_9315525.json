{"ver":"0.1","info":{"id":"XlfyRs","date":"1506134900","viewed":79,"name":"House HW, Alex Hubble","username":"Willpower900","description":"In ShaderToy, create a \"house\". The house is a basic rectangle/square, with a small rectangle for a chimney, and some more rectangles for windows.\n\n \n\nMake sure there are three layers.\n\nLayer 1: House body rectangle\n\nLayer 2: Chimney\n\nLayer 3: All windows","likes":0,"published":1,"flags":0,"usePreview":0,"tags":["class"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[],"outputs":[{"id":"4dfGRr","channel":0}],"code":"//Peices colors\nvec3 houseColor = vec3(.28,0.0,0.0);\nvec3 chimenyColor = vec3(.48,0.0,0.0);\nvec3 windowColor = vec3(.38,0.19,0.65);\nvec3 bg = vec3(1.0,1.0,1.0);\n\n//Peices positions\nvec2 housePos = vec2(0.5,0.3);\nvec2 chimneyPos = vec2(0.75, 0.399);\nvec2 window1Pos = vec2(0.27, 0.14);\nvec2 window2Pos = vec2(0.37, 0.14);\nvec2 window3Pos = vec2(0.47, 0.14);\nvec2 window4Pos = vec2(0.57, 0.14);\n\n//Peices dimensions\nfloat chimenyLength = .05;\nfloat chimenyHeight = .08;\nfloat windowHeight = .03;\nfloat windowLenght = .03;\nfloat houseLength = 0.30;\nfloat houseHeight = 0.15;\n\n//X & Y for calculations\nfloat x;\nfloat y;\n\n//On off for the layers, 1 = on, 0 = off\nfloat layer1On = 1.0;\nfloat layer2On = 1.0;\nfloat layer3On = 1.0;\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\t\n    //Layer setup\n    vec4 bgLayer = vec4(bg, 1.0);\n    vec4 layer1; //This layer contains the house\n    vec4 layer2; //This layer contains the chimney\n    vec4 layer3; //This layer contains the windows\n    \n    //Sets up aspect ratio\n    float aspectRatio = iResolution.y / iResolution.x;\n    uv.y *= aspectRatio;\n    \n    //Updates positions to allign with new aspect ratio\n    housePos.y *= aspectRatio;\n\n    //Sets the house layer  \n    x = (1.0 - step(houseLength, length(housePos.x-uv.x)));\n    y = (1.0 - step(houseHeight, length(housePos.y-uv.y)));\n    \n    //Displayer layer 1, if layer1On = 0, will not display\n    layer1 = vec4(houseColor, ((x * y) * layer1On));\n    \n    \n    //Sets the chimney layer    \n    x = (1.0 - step(chimenyLength, length(chimneyPos.x-uv.x)));\n    y = (1.0 - step(chimenyHeight, length(chimneyPos.y-uv.y)));\n    \n    //Displayer layer 2, if layer2On = 0, will not display\n    layer2 = vec4(chimenyColor, ((x * y) * layer2On));\n    \n    //Sets the Window layer \n    //Window 1\n    x = (1.0 - step(windowLenght, length(window1Pos.x-uv.x)));\n    y = (1.0 - step(windowHeight, length(window1Pos.y-uv.y)));\n       \n    //Window 2\n    x += (1.0 - step(windowLenght, length(window2Pos.x-uv.x)));\n    y += (1.0 - step(windowHeight, length(window2Pos.y-uv.y)));\n    \n    //Window 3\n    x += (1.0 - step(windowLenght, length(window3Pos.x-uv.x)));\n    y += (1.0 - step(windowHeight, length(window3Pos.y-uv.y)));\n    \n    //Window 4\n    x += (1.0 - step(windowLenght, length(window4Pos.x-uv.x)));\n    y += (1.0 - step(windowHeight, length(window4Pos.y-uv.y)));\n    \n    //Displayer layer 3, if layer3On = 0, will not display\n    layer3 = vec4(windowColor, ((x * y) * layer3On));\n    \n    //Displays the layers\n    vec4 composite = mix(bgLayer, layer1, layer1.a);\n    composite = mix(composite, layer2, layer2.a);\n    composite = mix(composite, layer3, layer3.a);\n    fragColor = composite;\n    \n}","name":"Image","description":"","type":"image"}]}