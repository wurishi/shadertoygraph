{"ver":"0.1","info":{"id":"wlcGDf","date":"1577803996","viewed":113,"name":"failed fluid simulation attempt","username":"unnick","description":"a failed fluid simulation attempt that for some reason doesnt create vortices between two regions that flow in opposite directions.\nadd pressure with left mouse button.","likes":1,"published":1,"flags":32,"usePreview":0,"tags":["something"],"hasliked":0,"parentid":"","parentname":""},"renderpass":[{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"nearest","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dfGRr","channel":0}],"code":"void mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    fragColor = texelFetch(iChannel0, ivec2(fragCoord), 0) * .5 + .5;\n}\n","name":"Image","description":"","type":"image"},{"inputs":[{"id":"4sXGR8","filepath":"/media/previz/buffer02.png","previewfilepath":"/media/previz/buffer02.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"clamp","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4dXGR8","channel":0}],"code":"//updates pressure and velocity according to the divergence and gradient of velocity and pressure\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    #define tmp(x,y) texture(iChannel0, (fragCoord + vec2(x,y)) / iResolution.xy)\n    vec4 cur = texelFetch(iChannel0, ivec2(fragCoord), 0);\n    float pr = tmp(1,0).z;\n    float pu = tmp(0,1).z;\n    float vxl = tmp(-1,0).x;\n    float vyd = tmp(0,-1).y;\n    vec2 f = vec2(0, step(iResolution.x * .5, fragCoord.x) * 2. - 1.) * .02;\n    fragColor = cur + vec4(cur.z-pr+f.x, cur.z-pu+f.y, vxl-cur.x+vyd-cur.y-cur.z*.01, 0) * .02;\n    if(iMouse.z > .5) {\n        vec2  pos = (fragCoord * 2. - iResolution.xy) / iResolution.y;\n        vec2 mpos = (iMouse.xy * 2. - iResolution.xy) / iResolution.y;\n        float len = dot(pos - mpos, pos - mpos);\n        if(len < .2*.2) fragColor.z = 1.;\n    }\n}\n","name":"Buffer A","description":"","type":"buffer"},{"inputs":[{"id":"4dXGR8","filepath":"/media/previz/buffer00.png","previewfilepath":"/media/previz/buffer00.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"XsXGR8","channel":0}],"code":"//advects pressure and velocity according to velocity\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 pos = fragCoord;\n    vec2 vel = vec2(texture(iChannel0, (fragCoord - vec2(.5,0)) / iResolution.xy).x,\n                    texture(iChannel0, (fragCoord - vec2(0,.5)) / iResolution.xy).y);\n    \n    pos -= vel * iResolution.y * .02;\n    float div = texture(iChannel0, (pos - vec2(1,0)) / iResolution.xy).x\n              + texture(iChannel0, (pos - vec2(0,1)) / iResolution.xy).y\n              - dot(texture(iChannel0, pos / iResolution.xy).xy, vec2(1));\n    \n    fragColor = texture(iChannel0, pos / iResolution.xy) + vec4(0,0,div,0);\n}\n","name":"Buffer B","description":"","type":"buffer"},{"inputs":[{"id":"XsXGR8","filepath":"/media/previz/buffer01.png","previewfilepath":"/media/previz/buffer01.png","type":"buffer","channel":0,"sampler":{"filter":"linear","wrap":"repeat","vflip":"true","srgb":"false","internal":"byte"},"published":1}],"outputs":[{"id":"4sXGR8","channel":0}],"code":"//smoothing step\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = iResolution.xy;\n    fragColor = texture(iChannel0, (fragCoord + vec2( .2, .2)) / res)\n              + texture(iChannel0, (fragCoord + vec2(-.2, .2)) / res)\n              + texture(iChannel0, (fragCoord + vec2( .2,-.2)) / res)\n              + texture(iChannel0, (fragCoord + vec2(-.2,-.2)) / res);\n    fragColor *= .25;\n}\n","name":"Buf C","description":"","type":"buffer"}]}